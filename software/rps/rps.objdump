
rps.elf:     file format elf32-littlenios2
rps.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000228

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00017e64 memsz 0x00017e64 flags r-x
    LOAD off    0x00018e84 vaddr 0x00017e84 paddr 0x00019b14 align 2**12
         filesz 0x00001c90 memsz 0x00001c90 flags rw-
    LOAD off    0x000007a4 vaddr 0x0001b7a4 paddr 0x0001b7a4 align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000208  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00016ffc  00000228  00000228  00001228  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000c60  00017224  00017224  00018224  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c90  00017e84  00019b14  00018e84  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  0001b7a4  0001b7a4  0001b7a4  2**2
                  ALLOC, SMALL_DATA
  6 .SDRAM        00000000  0001b900  0001b900  0001ab14  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  0001ab14  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001428  00000000  00000000  0001ab48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   000356af  00000000  00000000  0001bf70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000ddc9  00000000  00000000  0005161f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   0001dce9  00000000  00000000  0005f3e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  000030c0  00000000  00000000  0007d0d4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    000050bb  00000000  00000000  00080194  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    00025cb6  00000000  00000000  0008524f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000010  00000000  00000000  000aaf08  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00002f60  00000000  00000000  000aaf18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  000b1e45  2**0
                  CONTENTS, READONLY
 18 .cpu          00000005  00000000  00000000  000b1e48  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000b1e4d  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000b1e4e  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000b1e4f  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000b1e53  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000b1e57  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  000b1e5b  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  000b1e64  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  000b1e6d  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000f  00000000  00000000  000b1e76  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000002c  00000000  00000000  000b1e85  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     000a4f39  00000000  00000000  000b1eb1  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000228 l    d  .text	00000000 .text
00017224 l    d  .rodata	00000000 .rodata
00017e84 l    d  .rwdata	00000000 .rwdata
0001b7a4 l    d  .bss	00000000 .bss
0001b900 l    d  .SDRAM	00000000 .SDRAM
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/school/Jaar-3/Periode-4/FPGA/FPGA-project/software/rps_bsp//obj/HAL/src/crt0.o
00000260 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 kiss_fft.c
00000264 l     F .text	00000154 kf_bfly2
000003b8 l     F .text	000004b4 kf_bfly4
0000086c l     F .text	000003a0 kf_bfly3
00000c0c l     F .text	00000768 kf_bfly5
00001374 l     F .text	000002d4 kf_bfly_generic
00001648 l     F .text	00000238 kf_work
00001880 l     F .text	00000144 kf_factor
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 s_cos.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_sin.c
00000000 l    df *ABS*	00000000 sf_cos.c
00000000 l    df *ABS*	00000000 w_sqrt.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
00017238 l     O .rodata	00000080 npio2_hw
000172b8 l     O .rodata	00000108 two_over_pi
00000000 l    df *ABS*	00000000 e_sqrt.c
00000000 l    df *ABS*	00000000 ef_rem_pio2.c
000173c0 l     O .rodata	00000080 npio2_hw
00017440 l     O .rodata	00000318 two_over_pi
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
00017798 l     O .rodata	00000010 init_jk
00017758 l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 kf_cos.c
00000000 l    df *ABS*	00000000 kf_rem_pio2.c
000177d4 l     O .rodata	0000000c init_jk
000177a8 l     O .rodata	0000002c PIo2
00000000 l    df *ABS*	00000000 kf_sin.c
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 sf_floor.c
00000000 l    df *ABS*	00000000 sf_scalbn.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 impure.c
00017e84 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000c53c l     F .text	000000c0 __sbprintf
00017938 l     O .rodata	00000010 blanks.1
00017928 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0000c760 l     F .text	00000220 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0000e3d4 l     F .text	00000008 __fp_lock
0000e3e8 l     F .text	00000008 __fp_unlock
0000e3f0 l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
000179ec l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
00010f2c l     F .text	000000f4 __sprint_r.part.0
000122b4 l     F .text	000000c0 __sbprintf
00017b20 l     O .rodata	00000010 blanks.1
00017b10 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
000125fc l     F .text	000000c0 _fclose_r.part.0
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
000141e0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
000142f8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0001435c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
00014474 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
00014560 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
000146c8 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
000147b4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00014994 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00019b04 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
00014c00 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00014d40 l     F .text	00000034 alt_dev_reg
000189c4 l     O .rwdata	00001060 JTAG_UART
00019a24 l     O .rwdata	00000030 AV_Config
00019a54 l     O .rwdata	00000030 Audio_Subsystem_Audio
00019a84 l     O .rwdata	0000002c Char_LCD_16x2
00019ab0 l     O .rwdata	0000002c Serial_Port
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00015068 l     F .text	00000210 altera_avalon_jtag_uart_irq
00015278 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
000158bc l     F .text	00000080 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_character_lcd.c
00000000 l    df *ABS*	00000000 altera_up_avalon_rs232.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
000163c4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00016620 l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
000168f0 l     F .text	0000003c alt_get_errno
0001692c l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0001b7d4 g     O .bss	00000004 alt_instruction_exception_handler
00010764 g     F .text	00000070 _mprec_log10
00010850 g     F .text	00000060 __any_on
00012a54 g     F .text	00000058 _isatty_r
000179f8 g     O .rodata	00000028 __mprec_tinytens
000148d0 g     F .text	0000007c alt_main
0000a33c g     F .text	000000cc _puts_r
0001b800 g     O .bss	00000100 alt_irq
00012ba0 g     F .text	00000064 _lseek_r
000027b4 g     F .text	000000ac sqrt
00019b14 g       *ABS*	00000000 __flash_rwdata_start
00015a2c g     F .text	00000040 alt_up_character_lcd_send_cmd
00008274 g     F .text	00000080 .hidden __eqdf2
0001b900 g       *ABS*	00000000 __alt_heap_start
00013508 g     F .text	00000060 _kill_r
0000a304 g     F .text	00000038 printf
00012ed4 g     F .text	0000006c _wcrtomb_r
00013078 g     F .text	00000098 _signal_r
00010ec8 g     F .text	0000005c __sseek
0000e738 g     F .text	00000010 __sinit
00012d74 g     F .text	00000148 __swbuf_r
00012aac g     F .text	00000074 _setlocale_r
0000e558 g     F .text	00000078 __sfmoreglue
00014970 g     F .text	00000024 __malloc_unlock
000160e4 g     F .text	00000090 alt_up_rs232_read_fd
0000f4a4 g     F .text	0000012c memmove
0000e724 g     F .text	00000014 _cleanup
0000f6c0 g     F .text	000000a4 _Balloc
00006edc g     F .text	00000070 .hidden __fixsfsi
000082f4 g     F .text	000000e8 .hidden __gtdf2
00016d38 g     F .text	00000024 altera_nios2_gen2_irq_init
000099c8 g     F .text	0000000c __errno
000159b8 g     F .text	00000074 get_DDRAM_addr
00000000 g     F .entry	0000000c __reset
0000f16c g     F .text	00000008 __localeconv_l
00003218 g     F .text	000004fc __ieee754_rem_pio2f
00000020 g       *ABS*	00000000 __flash_exceptions_start
000129f4 g     F .text	00000060 _fstat_r
0001b7b0 g     O .bss	00000004 errno
00002470 g     F .text	000001e4 floor
00010e40 g     F .text	00000008 __seofread
0001b7bc g     O .bss	00000004 alt_argv
00021adc g       *ABS*	00000000 _gp
00006a48 g     F .text	00000494 .hidden __subsf3
00014454 g     F .text	00000020 getpid
00018844 g     O .rwdata	00000180 alt_fd_list
00002860 g     F .text	0000074c __ieee754_rem_pio2
00016570 g     F .text	00000090 alt_find_dev
0000a1d4 g     F .text	00000100 memcpy
00015bdc g     F .text	00000050 alt_up_character_lcd_write_fd
0000e3dc g     F .text	0000000c _cleanup_r
00009650 g     F .text	000000b8 .hidden __floatsidf
000166f4 g     F .text	0000007c alt_io_redirect
000083dc g     F .text	000000e8 .hidden __ltdf2
00017224 g       *ABS*	00000000 __DTOR_END__
00016070 g     F .text	00000074 alt_up_rs232_read_data
0000a408 g     F .text	00000010 puts
00016f1c g     F .text	00000098 alt_exception_cause_generated_bad_addr
000106c0 g     F .text	000000a4 __ratio
00012298 g     F .text	0000001c __vfiprintf_internal
00015474 g     F .text	00000220 altera_avalon_jtag_uart_read
000099d4 g     F .text	00000010 malloc
0000a2d4 g     F .text	00000030 _printf_r
00005fcc g     F .text	00000064 .hidden __udivsi3
000144b0 g     F .text	000000b0 isatty
00013110 g     F .text	000000c4 _raise_r
00012430 g     F .text	00000064 __assert_func
00017a48 g     O .rodata	000000c8 __mprec_tens
00003714 g     F .text	000004ac __kernel_cos
0001b7ac g     O .bss	00000004 __malloc_top_pad
00013568 g     F .text	00000004 _getpid_r
0000f174 g     F .text	0000000c _localeconv_r
0000fb30 g     F .text	000000b0 __i2b
0000eb98 g     F .text	00000494 __sfvwrite_r
000131d4 g     F .text	000000bc __sigtramp_r
0000a418 g     F .text	00000058 _sbrk_r
00012c54 g     F .text	00000064 _read_r
00019afc g     O .rwdata	00000004 alt_max_fd
00015fec g     F .text	00000044 alt_up_rs232_check_parity
000126bc g     F .text	00000070 _fclose_r
0000e350 g     F .text	00000084 fflush
0001b7a8 g     O .bss	00000004 __malloc_max_sbrked_mem
00016770 g     F .text	00000180 alt_irq_register
000048d4 g     F .text	000002c8 __kernel_sin
00009708 g     F .text	000000fc .hidden __extendsfdf2
00007070 g     F .text	000008f0 .hidden __adddf3
00006520 g     F .text	00000070 .hidden __nesf2
00010454 g     F .text	00000108 __b2d
00013b8c g     F .text	000005c4 .hidden __umoddi3
000147f0 g     F .text	000000e0 lseek
00019adc g     O .rwdata	00000004 _global_impure_ptr
000108b0 g     F .text	0000053c _realloc_r
00005924 g     F .text	000001b4 __kernel_sinf
0001b900 g       *ABS*	00000000 __bss_end
00016c0c g     F .text	0000012c alt_tick
0001356c g     F .text	00000620 .hidden __udivdi3
00012958 g     F .text	00000024 _fputwc_r
00017a20 g     O .rodata	00000028 __mprec_bigtens
0000f8e4 g     F .text	00000138 __s2b
00013004 g     F .text	00000018 abort
00014150 g     F .text	00000090 .hidden __floatunsidf
00010174 g     F .text	00000058 __mcmp
0000e758 g     F .text	00000014 __fp_lock_all
0000205c g     F .text	000000cc check_KEYs
00016b68 g     F .text	000000a4 alt_alarm_stop
00002718 g     F .text	0000009c cosf
0001b7c4 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000cc alt_irq_handler
0001881c g     O .rwdata	00000028 alt_dev_null
00003bc0 g     F .text	00000d14 __kernel_rem_pio2
00015e7c g     F .text	00000038 alt_up_character_lcd_cursor_blink_on
000163a4 g     F .text	00000020 alt_dcache_flush_all
0000fa1c g     F .text	00000064 __hi0bits
000095d0 g     F .text	00000080 .hidden __fixdfsi
00004b9c g     F .text	000002c4 __kernel_cosf
00019b14 g       *ABS*	00000000 __ram_rwdata_end
00019af4 g     O .rwdata	00000008 alt_dev_list
00014c3c g     F .text	00000104 write
00006590 g     F .text	000000b8 .hidden __gtsf2
00017e84 g       *ABS*	00000000 __ram_rodata_end
00014398 g     F .text	000000bc fstat
00016174 g     F .text	00000094 alt_up_rs232_write_fd
0001459c g     F .text	0000012c kill
00000000 g       *ABS*	00000000 __alt_mem_SDRAM
000083dc g     F .text	000000e8 .hidden __ledf2
0000fea4 g     F .text	00000148 __pow5mult
00011038 g     F .text	00001260 ___vfiprintf_internal_r
00006030 g     F .text	0000005c .hidden __umodsi3
0001b900 g       *ABS*	00000000 end
00014fb4 g     F .text	000000b4 altera_avalon_jtag_uart_init
000001c8 g     F .exceptions	00000060 alt_instruction_exception_entry
00017224 g       *ABS*	00000000 __CTOR_LIST__
08000000 g       *ABS*	00000000 __alt_stack_pointer
0001593c g     F .text	0000007c alt_avalon_timer_sc_init
00009974 g     F .text	00000054 .hidden __clzsi2
00015694 g     F .text	00000228 altera_avalon_jtag_uart_write
000023c0 g     F .text	000000b0 cos
00001c00 g     F .text	000000d4 kiss_fft_stride
0000e748 g     F .text	00000004 __sfp_lock_acquire
0000f3d4 g     F .text	000000d0 memchr
00001cd4 g     F .text	00000048 kiss_fft
00015ae0 g     F .text	00000080 alt_up_character_lcd_write
0000a508 g     F .text	00002018 ___vfprintf_internal_r
0000e89c g     F .text	000002fc _free_r
00017c84 g     O .rodata	00000180 _ctype_b
00012b20 g     F .text	0000000c __locale_mb_cur_max
00017104 g     F .text	00000120 __call_exitprocs
00019ae4 g     O .rwdata	00000004 __malloc_sbrk_base
00000228 g     F .text	0000003c _start
0001b7c8 g     O .bss	00000004 _alt_tick_rate
00002654 g     F .text	000000c4 sin
0000ffec g     F .text	00000188 __lshift
0001b7cc g     O .bss	00000008 _alt_nticks
0001334c g     F .text	000000a0 signal
000149d0 g     F .text	00000108 read
00014db0 g     F .text	000000a0 alt_sys_init
00015d2c g     F .text	0000008c alt_up_character_lcd_shift_display
00006f4c g     F .text	00000124 .hidden __floatsisf
00017074 g     F .text	00000090 __register_exitproc
00015fb0 g     F .text	0000003c alt_up_rs232_get_available_space_in_write_FIFO
00002128 g     F .text	000000e8 normalize_audio
0000fbe0 g     F .text	000002c4 __multiply
00015db8 g     F .text	0000008c alt_up_character_lcd_erase_pos
00015318 g     F .text	00000068 altera_avalon_jtag_uart_close
0000608c g     F .text	00000028 .hidden __mulsi3
00017e84 g       *ABS*	00000000 __ram_rwdata_start
00017224 g       *ABS*	00000000 __ram_rodata_start
0001b7d8 g     O .bss	00000028 __malloc_current_mallinfo
00006520 g     F .text	00000070 .hidden __eqsf2
0001055c g     F .text	00000164 __d2b
00014e50 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00016e64 g     F .text	000000b8 alt_get_fd
000123d8 g     F .text	00000058 _close_r
00016ffc g     F .text	00000078 memcmp
00014f10 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0001b900 g       *ABS*	00000000 __alt_stack_base
00014f60 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0000c5fc g     F .text	00000164 __swsetup_r
00007960 g     F .text	00000914 .hidden __divdf3
0000e5d0 g     F .text	00000154 __sfp
000107d4 g     F .text	0000007c __copybits
000182a8 g     O .rwdata	00000408 __malloc_av_
0000e754 g     F .text	00000004 __sinit_lock_release
000084c4 g     F .text	000007ac .hidden __muldf3
00010dec g     F .text	00000054 __sread
00015f10 g     F .text	00000060 alt_up_rs232_disable_read_interrupt
00016d5c g     F .text	00000108 alt_find_file
00016400 g     F .text	000000a8 alt_dev_llist_insert
0001494c g     F .text	00000024 __malloc_lock
00014b48 g     F .text	000000b8 sbrk
00005d8c g     F .text	0000014c scalbnf
0000e2f0 g     F .text	00000060 _fflush_r
000124a8 g     F .text	00000154 _calloc_r
0001b7a4 g       *ABS*	00000000 __bss_start
0000f5d0 g     F .text	000000f0 memset
00001e0c g     F .text	00000250 main
0001b7c0 g     O .bss	00000004 alt_envp
0001b7a4 g     O .bss	00000004 __malloc_max_total_mem
00014eb0 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00012ebc g     F .text	00000018 __swbuf
00015ca0 g     F .text	0000008c alt_up_character_lcd_shift_cursor
00010f24 g     F .text	00000008 __sclose
08000000 g       *ABS*	00000000 __alt_heap_limit
0001272c g     F .text	00000070 fclose
00009804 g     F .text	00000170 .hidden __truncdfsf2
0000c980 g     F .text	00001748 _dtoa_r
000099f4 g     F .text	000007e0 _malloc_r
00012fd4 g     F .text	00000030 __ascii_wctomb
00019b00 g     O .rwdata	00000004 alt_errno
0001279c g     F .text	00000020 _fiprintf_r
000133ec g     F .text	00000060 _init_signal
0000f02c g     F .text	00000098 _fwalk
00012c04 g     F .text	0000000c _mbtowc_r
00005ed8 g     F .text	00000080 .hidden __divsi3
00015aa4 g     F .text	0000003c alt_up_character_lcd_open_dev
0000e780 g     F .text	0000011c _malloc_trim_r
00017224 g       *ABS*	00000000 __CTOR_END__
00006648 g     F .text	00000400 .hidden __mulsf3
00015a6c g     F .text	00000038 alt_up_character_lcd_init
00012cb8 g     F .text	000000b8 strcmp
00017224 g       *ABS*	00000000 __flash_rodata_start
00017224 g       *ABS*	00000000 __DTOR_LIST__
00016208 g     F .text	0000003c alt_up_rs232_open_dev
00008274 g     F .text	00000080 .hidden __nedf2
00014d74 g     F .text	0000003c alt_irq_init
00014ad8 g     F .text	00000070 alt_release_fd
00015e44 g     F .text	00000038 alt_up_character_lcd_cursor_off
000177e0 g     O .rodata	00000100 .hidden __clz_tab
0001b7b4 g     O .bss	00000004 _PathLocale
00016fb4 g     F .text	00000014 atexit
00006590 g     F .text	000000b8 .hidden __gesf2
00012374 g     F .text	00000064 _write_r
00012b2c g     F .text	00000074 setlocale
00019ae0 g     O .rwdata	00000004 _impure_ptr
0001b7b8 g     O .bss	00000004 alt_argc
0000e0c8 g     F .text	00000228 __sflush_r
00005ad8 g     F .text	000001c0 scalbn
0001650c g     F .text	00000064 _do_dtors
00000020 g       .exceptions	00000000 alt_irq_entry
00012c10 g     F .text	00000044 __ascii_mbtowc
000103f8 g     F .text	0000005c __ulp
0000e76c g     F .text	00000014 __fp_unlock_all
00002308 g     F .text	000000b8 fft
00019aec g     O .rwdata	00000008 alt_fs_list
00015eb4 g     F .text	0000005c alt_up_rs232_enable_read_interrupt
00016030 g     F .text	00000040 alt_up_rs232_write_data
00000020 g       *ABS*	00000000 __ram_exceptions_start
0000f180 g     F .text	0000000c localeconv
00002fac g     F .text	0000026c __ieee754_sqrt
0000f33c g     F .text	00000098 __swhatbuf_r
00019b14 g       *ABS*	00000000 _edata
0001b900 g       *ABS*	00000000 _end
000127f4 g     F .text	00000164 __fputwc
00000228 g       *ABS*	00000000 __ram_exceptions_end
00015380 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
00010e48 g     F .text	00000080 __swrite
00019ae8 g     O .rwdata	00000004 __malloc_trim_threshold
00016fc8 g     F .text	00000034 exit
000127bc g     F .text	00000038 fiprintf
00012d70 g     F .text	00000004 _vfiprintf_r
0000f0c4 g     F .text	000000a8 _fwalk_reent
000101cc g     F .text	0000022c __mdiff
00001d1c g     F .text	00000020 kiss_fft_cleanup
00005f58 g     F .text	00000074 .hidden __modsi3
08000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
0000e74c g     F .text	00000004 __sfp_lock_release
00015b60 g     F .text	0000007c alt_up_character_lcd_string
00017b80 g     O .rodata	00000101 _ctype_
0000957c g     F .text	00000054 .hidden __unorddf2
00002210 g     F .text	000000f8 hamming_window
00014324 g     F .text	00000038 _exit
00004e60 g     F .text	00000ac4 __kernel_rem_pio2f
00016244 g     F .text	00000160 alt_alarm_start
0000f18c g     F .text	000001b0 __smakebuf_r
0000a470 g     F .text	00000098 strlen
0001301c g     F .text	0000005c _init_signal_r
00016a08 g     F .text	00000160 open
000082f4 g     F .text	000000e8 .hidden __gedf2
00012494 g     F .text	00000014 __assert
00011020 g     F .text	00000018 __sprint_r
00016600 g     F .text	00000020 alt_icache_flush_all
00005c98 g     F .text	000000f4 floorf
00015c2c g     F .text	00000074 alt_up_character_lcd_set_cursor_pos
00019b08 g     O .rwdata	00000004 alt_priority_mask
0000c520 g     F .text	0000001c __vfprintf_internal
00001d3c g     F .text	000000d0 kiss_fft_next_fast_size
00012fc8 g     F .text	0000000c _wctomb_r
000019c4 g     F .text	0000023c kiss_fft_alloc
00008c70 g     F .text	0000090c .hidden __subdf3
0000fa80 g     F .text	000000b0 __lo0bits
00019b0c g     O .rwdata	00000008 alt_alarm_list
000164a8 g     F .text	00000064 _do_ctors
0001344c g     F .text	000000bc __sigtramp
00015f70 g     F .text	00000040 alt_up_rs232_get_used_space_in_read_FIFO
00012f40 g     F .text	00000088 wcrtomb
0001421c g     F .text	000000dc close
000060b4 g     F .text	0000046c .hidden __addsf3
000186b0 g     O .rwdata	0000016c __global_locale
00014730 g     F .text	00000084 alt_load
0001297c g     F .text	00000078 fputwc
00013290 g     F .text	000000bc raise
000099e4 g     F .text	00000010 free
0000e750 g     F .text	00000004 __sinit_lock_acquire
0000f788 g     F .text	0000015c __multadd
0000f764 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408a14 	ori	at,at,552
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001c80 	call	1c8 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffc15 	stw	r2,-16(fp)

  return active;
 118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0ffff17 	ldw	r3,-4(fp)
 130:	e0bffe17 	ldw	r2,-8(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001226 	beq	r2,zero,184 <alt_irq_handler+0x88>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 13c:	e0bffd17 	ldw	r2,-12(fp)
 140:	100690fa 	slli	r3,r2,3
 144:	008000b4 	movhi	r2,2
 148:	1885883a 	add	r2,r3,r2
 14c:	10ee0017 	ldw	r3,-18432(r2)
 150:	e0bffd17 	ldw	r2,-12(fp)
 154:	100890fa 	slli	r4,r2,3
 158:	008000b4 	movhi	r2,2
 15c:	2085883a 	add	r2,r4,r2
 160:	10ae0117 	ldw	r2,-18428(r2)
 164:	e17ffd17 	ldw	r5,-12(fp)
 168:	1009883a 	mov	r4,r2
 16c:	183ee83a 	callr	r3
#endif
        break;
 170:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
 174:	0005313a 	rdctl	r2,ipending
 178:	e0bffb15 	stw	r2,-20(fp)
  return active;
 17c:	e0bffb17 	ldw	r2,-20(fp)
 180:	00000706 	br	1a0 <alt_irq_handler+0xa4>
      }
      mask <<= 1;
 184:	e0bffe17 	ldw	r2,-8(fp)
 188:	1085883a 	add	r2,r2,r2
 18c:	e0bffe15 	stw	r2,-8(fp)
      i++;
 190:	e0bffd17 	ldw	r2,-12(fp)
 194:	10800044 	addi	r2,r2,1
 198:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
 19c:	003fe306 	br	12c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
 1a0:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 1a4:	e0bfff17 	ldw	r2,-4(fp)
 1a8:	103fdd1e 	bne	r2,zero,120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1ac:	0001883a 	nop
}
 1b0:	0001883a 	nop
 1b4:	e037883a 	mov	sp,fp
 1b8:	dfc00117 	ldw	ra,4(sp)
 1bc:	df000017 	ldw	fp,0(sp)
 1c0:	dec00204 	addi	sp,sp,8
 1c4:	f800283a 	ret

000001c8 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1c8:	defffb04 	addi	sp,sp,-20
 1cc:	dfc00415 	stw	ra,16(sp)
 1d0:	df000315 	stw	fp,12(sp)
 1d4:	df000304 	addi	fp,sp,12
 1d8:	e13ffd15 	stw	r4,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1dc:	00bfffc4 	movi	r2,-1
 1e0:	e0bfff15 	stw	r2,-4(fp)
  badaddr = 0;
 1e4:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1e8:	d0a73e17 	ldw	r2,-25352(gp)
 1ec:	10000726 	beq	r2,zero,20c <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1f0:	d0a73e17 	ldw	r2,-25352(gp)
 1f4:	e0ffff17 	ldw	r3,-4(fp)
 1f8:	e1bffe17 	ldw	r6,-8(fp)
 1fc:	e17ffd17 	ldw	r5,-12(fp)
 200:	1809883a 	mov	r4,r3
 204:	103ee83a 	callr	r2
 208:	00000206 	br	214 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 20c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 210:	0005883a 	mov	r2,zero
}
 214:	e037883a 	mov	sp,fp
 218:	dfc00117 	ldw	ra,4(sp)
 21c:	df000017 	ldw	fp,0(sp)
 220:	dec00204 	addi	sp,sp,8
 224:	f800283a 	ret

Disassembly of section .text:

00000228 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     228:	06c20034 	movhi	sp,2048
    ori sp, sp, %lo(__alt_stack_pointer)
     22c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     230:	068000b4 	movhi	gp,2
    ori gp, gp, %lo(_gp)
     234:	d686b714 	ori	gp,gp,6876
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     238:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     23c:	10ade914 	ori	r2,r2,47012

    movhi r3, %hi(__bss_end)
     240:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     244:	18ee4014 	ori	r3,r3,47360

    beq r2, r3, 1f
     248:	10c00326 	beq	r2,r3,258 <_start+0x30>

0:
    stw zero, (r2)
     24c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     250:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     254:	10fffd36 	bltu	r2,r3,24c <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     258:	00147300 	call	14730 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     25c:	00148d00 	call	148d0 <alt_main>

00000260 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     260:	003fff06 	br	260 <alt_after_alt_main>

00000264 <kf_bfly2>:
        kiss_fft_cpx * Fout,
        const size_t fstride,
        const kiss_fft_cfg st,
        int m
        )
{
     264:	defff704 	addi	sp,sp,-36
     268:	df000815 	stw	fp,32(sp)
     26c:	df000804 	addi	fp,sp,32
     270:	e13ffb15 	stw	r4,-20(fp)
     274:	e17ffa15 	stw	r5,-24(fp)
     278:	e1bff915 	stw	r6,-28(fp)
     27c:	e1fff815 	stw	r7,-32(fp)
    kiss_fft_cpx * Fout2;
    kiss_fft_cpx * tw1 = st->twiddles;
     280:	e0bff917 	ldw	r2,-28(fp)
     284:	10804204 	addi	r2,r2,264
     288:	e0bffe15 	stw	r2,-8(fp)
    kiss_fft_cpx t;
    Fout2 = Fout + m;
     28c:	e0bff817 	ldw	r2,-32(fp)
     290:	100490fa 	slli	r2,r2,3
     294:	e0fffb17 	ldw	r3,-20(fp)
     298:	1885883a 	add	r2,r3,r2
     29c:	e0bfff15 	stw	r2,-4(fp)
    do{
        C_FIXDIV(*Fout,2); C_FIXDIV(*Fout2,2);

        C_MUL (t,  *Fout2 , *tw1);
     2a0:	e0bfff17 	ldw	r2,-4(fp)
     2a4:	10c00017 	ldw	r3,0(r2)
     2a8:	e13ffe17 	ldw	r4,-8(fp)
     2ac:	20800017 	ldw	r2,0(r4)
     2b0:	1887ff32 	custom	252,r3,r3,r2
     2b4:	e0bfff17 	ldw	r2,-4(fp)
     2b8:	11000117 	ldw	r4,4(r2)
     2bc:	e17ffe17 	ldw	r5,-8(fp)
     2c0:	28800117 	ldw	r2,4(r5)
     2c4:	2085ff32 	custom	252,r2,r4,r2
     2c8:	1885ffb2 	custom	254,r2,r3,r2
     2cc:	e0bffc15 	stw	r2,-16(fp)
     2d0:	e0bfff17 	ldw	r2,-4(fp)
     2d4:	10c00017 	ldw	r3,0(r2)
     2d8:	e13ffe17 	ldw	r4,-8(fp)
     2dc:	20800117 	ldw	r2,4(r4)
     2e0:	1887ff32 	custom	252,r3,r3,r2
     2e4:	e0bfff17 	ldw	r2,-4(fp)
     2e8:	11000117 	ldw	r4,4(r2)
     2ec:	e17ffe17 	ldw	r5,-8(fp)
     2f0:	28800017 	ldw	r2,0(r5)
     2f4:	2085ff32 	custom	252,r2,r4,r2
     2f8:	1885ff72 	custom	253,r2,r3,r2
     2fc:	e0bffd15 	stw	r2,-12(fp)
        tw1 += fstride;
     300:	e0bffa17 	ldw	r2,-24(fp)
     304:	100490fa 	slli	r2,r2,3
     308:	e0fffe17 	ldw	r3,-8(fp)
     30c:	1885883a 	add	r2,r3,r2
     310:	e0bffe15 	stw	r2,-8(fp)
        C_SUB( *Fout2 ,  *Fout , t );
     314:	e0bffb17 	ldw	r2,-20(fp)
     318:	10c00017 	ldw	r3,0(r2)
     31c:	e0bffc17 	ldw	r2,-16(fp)
     320:	1887ffb2 	custom	254,r3,r3,r2
     324:	e0bfff17 	ldw	r2,-4(fp)
     328:	10c00015 	stw	r3,0(r2)
     32c:	e0bffb17 	ldw	r2,-20(fp)
     330:	10c00117 	ldw	r3,4(r2)
     334:	e0bffd17 	ldw	r2,-12(fp)
     338:	1887ffb2 	custom	254,r3,r3,r2
     33c:	e0bfff17 	ldw	r2,-4(fp)
     340:	10c00115 	stw	r3,4(r2)
        C_ADDTO( *Fout ,  t );
     344:	e0bffb17 	ldw	r2,-20(fp)
     348:	10c00017 	ldw	r3,0(r2)
     34c:	e0bffc17 	ldw	r2,-16(fp)
     350:	1887ff72 	custom	253,r3,r3,r2
     354:	e0bffb17 	ldw	r2,-20(fp)
     358:	10c00015 	stw	r3,0(r2)
     35c:	e0bffb17 	ldw	r2,-20(fp)
     360:	10c00117 	ldw	r3,4(r2)
     364:	e0bffd17 	ldw	r2,-12(fp)
     368:	1887ff72 	custom	253,r3,r3,r2
     36c:	e0bffb17 	ldw	r2,-20(fp)
     370:	10c00115 	stw	r3,4(r2)
        ++Fout2;
     374:	e0bfff17 	ldw	r2,-4(fp)
     378:	10800204 	addi	r2,r2,8
     37c:	e0bfff15 	stw	r2,-4(fp)
        ++Fout;
     380:	e0bffb17 	ldw	r2,-20(fp)
     384:	10800204 	addi	r2,r2,8
     388:	e0bffb15 	stw	r2,-20(fp)
    }while (--m);
     38c:	e0bff817 	ldw	r2,-32(fp)
     390:	10bfffc4 	addi	r2,r2,-1
     394:	e0bff815 	stw	r2,-32(fp)
     398:	e0bff817 	ldw	r2,-32(fp)
     39c:	103fc01e 	bne	r2,zero,2a0 <kf_bfly2+0x3c>
}
     3a0:	0001883a 	nop
     3a4:	0001883a 	nop
     3a8:	e037883a 	mov	sp,fp
     3ac:	df000017 	ldw	fp,0(sp)
     3b0:	dec00104 	addi	sp,sp,4
     3b4:	f800283a 	ret

000003b8 <kf_bfly4>:
        kiss_fft_cpx * Fout,
        const size_t fstride,
        const kiss_fft_cfg st,
        const size_t m
        )
{
     3b8:	deffe904 	addi	sp,sp,-92
     3bc:	df001615 	stw	fp,88(sp)
     3c0:	df001604 	addi	fp,sp,88
     3c4:	e13fed15 	stw	r4,-76(fp)
     3c8:	e17fec15 	stw	r5,-80(fp)
     3cc:	e1bfeb15 	stw	r6,-84(fp)
     3d0:	e1ffea15 	stw	r7,-88(fp)
    kiss_fft_cpx *tw1,*tw2,*tw3;
    kiss_fft_cpx scratch[6];
    size_t k=m;
     3d4:	e0bfea17 	ldw	r2,-88(fp)
     3d8:	e0bffc15 	stw	r2,-16(fp)
    const size_t m2=2*m;
     3dc:	e0bfea17 	ldw	r2,-88(fp)
     3e0:	1085883a 	add	r2,r2,r2
     3e4:	e0bffb15 	stw	r2,-20(fp)
    const size_t m3=3*m;
     3e8:	e0ffea17 	ldw	r3,-88(fp)
     3ec:	1805883a 	mov	r2,r3
     3f0:	1085883a 	add	r2,r2,r2
     3f4:	10c5883a 	add	r2,r2,r3
     3f8:	e0bffa15 	stw	r2,-24(fp)


    tw3 = tw2 = tw1 = st->twiddles;
     3fc:	e0bfeb17 	ldw	r2,-84(fp)
     400:	10804204 	addi	r2,r2,264
     404:	e0bfff15 	stw	r2,-4(fp)
     408:	e0bfff17 	ldw	r2,-4(fp)
     40c:	e0bffe15 	stw	r2,-8(fp)
     410:	e0bffe17 	ldw	r2,-8(fp)
     414:	e0bffd15 	stw	r2,-12(fp)

    do {
        C_FIXDIV(*Fout,4); C_FIXDIV(Fout[m],4); C_FIXDIV(Fout[m2],4); C_FIXDIV(Fout[m3],4);

        C_MUL(scratch[0],Fout[m] , *tw1 );
     418:	e0bfea17 	ldw	r2,-88(fp)
     41c:	100490fa 	slli	r2,r2,3
     420:	e0ffed17 	ldw	r3,-76(fp)
     424:	1885883a 	add	r2,r3,r2
     428:	10c00017 	ldw	r3,0(r2)
     42c:	e13fff17 	ldw	r4,-4(fp)
     430:	20800017 	ldw	r2,0(r4)
     434:	1887ff32 	custom	252,r3,r3,r2
     438:	e0bfea17 	ldw	r2,-88(fp)
     43c:	100490fa 	slli	r2,r2,3
     440:	e13fed17 	ldw	r4,-76(fp)
     444:	2085883a 	add	r2,r4,r2
     448:	11000117 	ldw	r4,4(r2)
     44c:	e17fff17 	ldw	r5,-4(fp)
     450:	28800117 	ldw	r2,4(r5)
     454:	2085ff32 	custom	252,r2,r4,r2
     458:	1885ffb2 	custom	254,r2,r3,r2
     45c:	e0bfee15 	stw	r2,-72(fp)
     460:	e0bfea17 	ldw	r2,-88(fp)
     464:	100490fa 	slli	r2,r2,3
     468:	e0ffed17 	ldw	r3,-76(fp)
     46c:	1885883a 	add	r2,r3,r2
     470:	10c00017 	ldw	r3,0(r2)
     474:	e13fff17 	ldw	r4,-4(fp)
     478:	20800117 	ldw	r2,4(r4)
     47c:	1887ff32 	custom	252,r3,r3,r2
     480:	e0bfea17 	ldw	r2,-88(fp)
     484:	100490fa 	slli	r2,r2,3
     488:	e13fed17 	ldw	r4,-76(fp)
     48c:	2085883a 	add	r2,r4,r2
     490:	11000117 	ldw	r4,4(r2)
     494:	e17fff17 	ldw	r5,-4(fp)
     498:	28800017 	ldw	r2,0(r5)
     49c:	2085ff32 	custom	252,r2,r4,r2
     4a0:	1885ff72 	custom	253,r2,r3,r2
     4a4:	e0bfef15 	stw	r2,-68(fp)
        C_MUL(scratch[1],Fout[m2] , *tw2 );
     4a8:	e0bffb17 	ldw	r2,-20(fp)
     4ac:	100490fa 	slli	r2,r2,3
     4b0:	e0ffed17 	ldw	r3,-76(fp)
     4b4:	1885883a 	add	r2,r3,r2
     4b8:	10c00017 	ldw	r3,0(r2)
     4bc:	e13ffe17 	ldw	r4,-8(fp)
     4c0:	20800017 	ldw	r2,0(r4)
     4c4:	1887ff32 	custom	252,r3,r3,r2
     4c8:	e0bffb17 	ldw	r2,-20(fp)
     4cc:	100490fa 	slli	r2,r2,3
     4d0:	e13fed17 	ldw	r4,-76(fp)
     4d4:	2085883a 	add	r2,r4,r2
     4d8:	11000117 	ldw	r4,4(r2)
     4dc:	e17ffe17 	ldw	r5,-8(fp)
     4e0:	28800117 	ldw	r2,4(r5)
     4e4:	2085ff32 	custom	252,r2,r4,r2
     4e8:	1885ffb2 	custom	254,r2,r3,r2
     4ec:	e0bff015 	stw	r2,-64(fp)
     4f0:	e0bffb17 	ldw	r2,-20(fp)
     4f4:	100490fa 	slli	r2,r2,3
     4f8:	e0ffed17 	ldw	r3,-76(fp)
     4fc:	1885883a 	add	r2,r3,r2
     500:	10c00017 	ldw	r3,0(r2)
     504:	e13ffe17 	ldw	r4,-8(fp)
     508:	20800117 	ldw	r2,4(r4)
     50c:	1887ff32 	custom	252,r3,r3,r2
     510:	e0bffb17 	ldw	r2,-20(fp)
     514:	100490fa 	slli	r2,r2,3
     518:	e13fed17 	ldw	r4,-76(fp)
     51c:	2085883a 	add	r2,r4,r2
     520:	11000117 	ldw	r4,4(r2)
     524:	e17ffe17 	ldw	r5,-8(fp)
     528:	28800017 	ldw	r2,0(r5)
     52c:	2085ff32 	custom	252,r2,r4,r2
     530:	1885ff72 	custom	253,r2,r3,r2
     534:	e0bff115 	stw	r2,-60(fp)
        C_MUL(scratch[2],Fout[m3] , *tw3 );
     538:	e0bffa17 	ldw	r2,-24(fp)
     53c:	100490fa 	slli	r2,r2,3
     540:	e0ffed17 	ldw	r3,-76(fp)
     544:	1885883a 	add	r2,r3,r2
     548:	10c00017 	ldw	r3,0(r2)
     54c:	e13ffd17 	ldw	r4,-12(fp)
     550:	20800017 	ldw	r2,0(r4)
     554:	1887ff32 	custom	252,r3,r3,r2
     558:	e0bffa17 	ldw	r2,-24(fp)
     55c:	100490fa 	slli	r2,r2,3
     560:	e13fed17 	ldw	r4,-76(fp)
     564:	2085883a 	add	r2,r4,r2
     568:	11000117 	ldw	r4,4(r2)
     56c:	e17ffd17 	ldw	r5,-12(fp)
     570:	28800117 	ldw	r2,4(r5)
     574:	2085ff32 	custom	252,r2,r4,r2
     578:	1885ffb2 	custom	254,r2,r3,r2
     57c:	e0bff215 	stw	r2,-56(fp)
     580:	e0bffa17 	ldw	r2,-24(fp)
     584:	100490fa 	slli	r2,r2,3
     588:	e0ffed17 	ldw	r3,-76(fp)
     58c:	1885883a 	add	r2,r3,r2
     590:	10c00017 	ldw	r3,0(r2)
     594:	e13ffd17 	ldw	r4,-12(fp)
     598:	20800117 	ldw	r2,4(r4)
     59c:	1887ff32 	custom	252,r3,r3,r2
     5a0:	e0bffa17 	ldw	r2,-24(fp)
     5a4:	100490fa 	slli	r2,r2,3
     5a8:	e13fed17 	ldw	r4,-76(fp)
     5ac:	2085883a 	add	r2,r4,r2
     5b0:	11000117 	ldw	r4,4(r2)
     5b4:	e17ffd17 	ldw	r5,-12(fp)
     5b8:	28800017 	ldw	r2,0(r5)
     5bc:	2085ff32 	custom	252,r2,r4,r2
     5c0:	1885ff72 	custom	253,r2,r3,r2
     5c4:	e0bff315 	stw	r2,-52(fp)

        C_SUB( scratch[5] , *Fout, scratch[1] );
     5c8:	e0bfed17 	ldw	r2,-76(fp)
     5cc:	10c00017 	ldw	r3,0(r2)
     5d0:	e0bff017 	ldw	r2,-64(fp)
     5d4:	1885ffb2 	custom	254,r2,r3,r2
     5d8:	e0bff815 	stw	r2,-32(fp)
     5dc:	e0bfed17 	ldw	r2,-76(fp)
     5e0:	10c00117 	ldw	r3,4(r2)
     5e4:	e0bff117 	ldw	r2,-60(fp)
     5e8:	1885ffb2 	custom	254,r2,r3,r2
     5ec:	e0bff915 	stw	r2,-28(fp)
        C_ADDTO(*Fout, scratch[1]);
     5f0:	e0bfed17 	ldw	r2,-76(fp)
     5f4:	10c00017 	ldw	r3,0(r2)
     5f8:	e0bff017 	ldw	r2,-64(fp)
     5fc:	1887ff72 	custom	253,r3,r3,r2
     600:	e0bfed17 	ldw	r2,-76(fp)
     604:	10c00015 	stw	r3,0(r2)
     608:	e0bfed17 	ldw	r2,-76(fp)
     60c:	10c00117 	ldw	r3,4(r2)
     610:	e0bff117 	ldw	r2,-60(fp)
     614:	1887ff72 	custom	253,r3,r3,r2
     618:	e0bfed17 	ldw	r2,-76(fp)
     61c:	10c00115 	stw	r3,4(r2)
        C_ADD( scratch[3] , scratch[0] , scratch[2] );
     620:	e0ffee17 	ldw	r3,-72(fp)
     624:	e0bff217 	ldw	r2,-56(fp)
     628:	1885ff72 	custom	253,r2,r3,r2
     62c:	e0bff415 	stw	r2,-48(fp)
     630:	e0ffef17 	ldw	r3,-68(fp)
     634:	e0bff317 	ldw	r2,-52(fp)
     638:	1885ff72 	custom	253,r2,r3,r2
     63c:	e0bff515 	stw	r2,-44(fp)
        C_SUB( scratch[4] , scratch[0] , scratch[2] );
     640:	e0ffee17 	ldw	r3,-72(fp)
     644:	e0bff217 	ldw	r2,-56(fp)
     648:	1885ffb2 	custom	254,r2,r3,r2
     64c:	e0bff615 	stw	r2,-40(fp)
     650:	e0ffef17 	ldw	r3,-68(fp)
     654:	e0bff317 	ldw	r2,-52(fp)
     658:	1885ffb2 	custom	254,r2,r3,r2
     65c:	e0bff715 	stw	r2,-36(fp)
        C_SUB( Fout[m2], *Fout, scratch[3] );
     660:	e0bfed17 	ldw	r2,-76(fp)
     664:	11000017 	ldw	r4,0(r2)
     668:	e0fff417 	ldw	r3,-48(fp)
     66c:	e0bffb17 	ldw	r2,-20(fp)
     670:	100490fa 	slli	r2,r2,3
     674:	e17fed17 	ldw	r5,-76(fp)
     678:	2885883a 	add	r2,r5,r2
     67c:	20c7ffb2 	custom	254,r3,r4,r3
     680:	10c00015 	stw	r3,0(r2)
     684:	e0bfed17 	ldw	r2,-76(fp)
     688:	11000117 	ldw	r4,4(r2)
     68c:	e0fff517 	ldw	r3,-44(fp)
     690:	e0bffb17 	ldw	r2,-20(fp)
     694:	100490fa 	slli	r2,r2,3
     698:	e17fed17 	ldw	r5,-76(fp)
     69c:	2885883a 	add	r2,r5,r2
     6a0:	20c7ffb2 	custom	254,r3,r4,r3
     6a4:	10c00115 	stw	r3,4(r2)
        tw1 += fstride;
     6a8:	e0bfec17 	ldw	r2,-80(fp)
     6ac:	100490fa 	slli	r2,r2,3
     6b0:	e0ffff17 	ldw	r3,-4(fp)
     6b4:	1885883a 	add	r2,r3,r2
     6b8:	e0bfff15 	stw	r2,-4(fp)
        tw2 += fstride*2;
     6bc:	e0bfec17 	ldw	r2,-80(fp)
     6c0:	1004913a 	slli	r2,r2,4
     6c4:	e0fffe17 	ldw	r3,-8(fp)
     6c8:	1885883a 	add	r2,r3,r2
     6cc:	e0bffe15 	stw	r2,-8(fp)
        tw3 += fstride*3;
     6d0:	e0ffec17 	ldw	r3,-80(fp)
     6d4:	1805883a 	mov	r2,r3
     6d8:	1085883a 	add	r2,r2,r2
     6dc:	10c5883a 	add	r2,r2,r3
     6e0:	100490fa 	slli	r2,r2,3
     6e4:	1007883a 	mov	r3,r2
     6e8:	e0bffd17 	ldw	r2,-12(fp)
     6ec:	10c5883a 	add	r2,r2,r3
     6f0:	e0bffd15 	stw	r2,-12(fp)
        C_ADDTO( *Fout , scratch[3] );
     6f4:	e0bfed17 	ldw	r2,-76(fp)
     6f8:	10c00017 	ldw	r3,0(r2)
     6fc:	e0bff417 	ldw	r2,-48(fp)
     700:	1887ff72 	custom	253,r3,r3,r2
     704:	e0bfed17 	ldw	r2,-76(fp)
     708:	10c00015 	stw	r3,0(r2)
     70c:	e0bfed17 	ldw	r2,-76(fp)
     710:	10c00117 	ldw	r3,4(r2)
     714:	e0bff517 	ldw	r2,-44(fp)
     718:	1887ff72 	custom	253,r3,r3,r2
     71c:	e0bfed17 	ldw	r2,-76(fp)
     720:	10c00115 	stw	r3,4(r2)

        if(st->inverse) {
     724:	e0bfeb17 	ldw	r2,-84(fp)
     728:	10800117 	ldw	r2,4(r2)
     72c:	10002126 	beq	r2,zero,7b4 <kf_bfly4+0x3fc>
            Fout[m].r = scratch[5].r - scratch[4].i;
     730:	e13ff817 	ldw	r4,-32(fp)
     734:	e0fff717 	ldw	r3,-36(fp)
     738:	e0bfea17 	ldw	r2,-88(fp)
     73c:	100490fa 	slli	r2,r2,3
     740:	e17fed17 	ldw	r5,-76(fp)
     744:	2885883a 	add	r2,r5,r2
     748:	20c7ffb2 	custom	254,r3,r4,r3
     74c:	10c00015 	stw	r3,0(r2)
            Fout[m].i = scratch[5].i + scratch[4].r;
     750:	e13ff917 	ldw	r4,-28(fp)
     754:	e0fff617 	ldw	r3,-40(fp)
     758:	e0bfea17 	ldw	r2,-88(fp)
     75c:	100490fa 	slli	r2,r2,3
     760:	e17fed17 	ldw	r5,-76(fp)
     764:	2885883a 	add	r2,r5,r2
     768:	20c7ff72 	custom	253,r3,r4,r3
     76c:	10c00115 	stw	r3,4(r2)
            Fout[m3].r = scratch[5].r + scratch[4].i;
     770:	e13ff817 	ldw	r4,-32(fp)
     774:	e0fff717 	ldw	r3,-36(fp)
     778:	e0bffa17 	ldw	r2,-24(fp)
     77c:	100490fa 	slli	r2,r2,3
     780:	e17fed17 	ldw	r5,-76(fp)
     784:	2885883a 	add	r2,r5,r2
     788:	20c7ff72 	custom	253,r3,r4,r3
     78c:	10c00015 	stw	r3,0(r2)
            Fout[m3].i = scratch[5].i - scratch[4].r;
     790:	e13ff917 	ldw	r4,-28(fp)
     794:	e0fff617 	ldw	r3,-40(fp)
     798:	e0bffa17 	ldw	r2,-24(fp)
     79c:	100490fa 	slli	r2,r2,3
     7a0:	e17fed17 	ldw	r5,-76(fp)
     7a4:	2885883a 	add	r2,r5,r2
     7a8:	20c7ffb2 	custom	254,r3,r4,r3
     7ac:	10c00115 	stw	r3,4(r2)
     7b0:	00002006 	br	834 <kf_bfly4+0x47c>
        }else{
            Fout[m].r = scratch[5].r + scratch[4].i;
     7b4:	e13ff817 	ldw	r4,-32(fp)
     7b8:	e0fff717 	ldw	r3,-36(fp)
     7bc:	e0bfea17 	ldw	r2,-88(fp)
     7c0:	100490fa 	slli	r2,r2,3
     7c4:	e17fed17 	ldw	r5,-76(fp)
     7c8:	2885883a 	add	r2,r5,r2
     7cc:	20c7ff72 	custom	253,r3,r4,r3
     7d0:	10c00015 	stw	r3,0(r2)
            Fout[m].i = scratch[5].i - scratch[4].r;
     7d4:	e13ff917 	ldw	r4,-28(fp)
     7d8:	e0fff617 	ldw	r3,-40(fp)
     7dc:	e0bfea17 	ldw	r2,-88(fp)
     7e0:	100490fa 	slli	r2,r2,3
     7e4:	e17fed17 	ldw	r5,-76(fp)
     7e8:	2885883a 	add	r2,r5,r2
     7ec:	20c7ffb2 	custom	254,r3,r4,r3
     7f0:	10c00115 	stw	r3,4(r2)
            Fout[m3].r = scratch[5].r - scratch[4].i;
     7f4:	e13ff817 	ldw	r4,-32(fp)
     7f8:	e0fff717 	ldw	r3,-36(fp)
     7fc:	e0bffa17 	ldw	r2,-24(fp)
     800:	100490fa 	slli	r2,r2,3
     804:	e17fed17 	ldw	r5,-76(fp)
     808:	2885883a 	add	r2,r5,r2
     80c:	20c7ffb2 	custom	254,r3,r4,r3
     810:	10c00015 	stw	r3,0(r2)
            Fout[m3].i = scratch[5].i + scratch[4].r;
     814:	e13ff917 	ldw	r4,-28(fp)
     818:	e0fff617 	ldw	r3,-40(fp)
     81c:	e0bffa17 	ldw	r2,-24(fp)
     820:	100490fa 	slli	r2,r2,3
     824:	e17fed17 	ldw	r5,-76(fp)
     828:	2885883a 	add	r2,r5,r2
     82c:	20c7ff72 	custom	253,r3,r4,r3
     830:	10c00115 	stw	r3,4(r2)
        }
        ++Fout;
     834:	e0bfed17 	ldw	r2,-76(fp)
     838:	10800204 	addi	r2,r2,8
     83c:	e0bfed15 	stw	r2,-76(fp)
    }while(--k);
     840:	e0bffc17 	ldw	r2,-16(fp)
     844:	10bfffc4 	addi	r2,r2,-1
     848:	e0bffc15 	stw	r2,-16(fp)
     84c:	e0bffc17 	ldw	r2,-16(fp)
     850:	103ef11e 	bne	r2,zero,418 <kf_bfly4+0x60>
}
     854:	0001883a 	nop
     858:	0001883a 	nop
     85c:	e037883a 	mov	sp,fp
     860:	df000017 	ldw	fp,0(sp)
     864:	dec00104 	addi	sp,sp,4
     868:	f800283a 	ret

0000086c <kf_bfly3>:
         kiss_fft_cpx * Fout,
         const size_t fstride,
         const kiss_fft_cfg st,
         size_t m
         )
{
     86c:	deffea04 	addi	sp,sp,-88
     870:	dfc01515 	stw	ra,84(sp)
     874:	df001415 	stw	fp,80(sp)
     878:	df001404 	addi	fp,sp,80
     87c:	e13fef15 	stw	r4,-68(fp)
     880:	e17fee15 	stw	r5,-72(fp)
     884:	e1bfed15 	stw	r6,-76(fp)
     888:	e1ffec15 	stw	r7,-80(fp)
     size_t k=m;
     88c:	e0bfec17 	ldw	r2,-80(fp)
     890:	e0bfff15 	stw	r2,-4(fp)
     const size_t m2 = 2*m;
     894:	e0bfec17 	ldw	r2,-80(fp)
     898:	1085883a 	add	r2,r2,r2
     89c:	e0bffc15 	stw	r2,-16(fp)
     kiss_fft_cpx *tw1,*tw2;
     kiss_fft_cpx scratch[5];
     kiss_fft_cpx epi3;
     epi3 = st->twiddles[fstride*m];
     8a0:	e17fec17 	ldw	r5,-80(fp)
     8a4:	e13fee17 	ldw	r4,-72(fp)
     8a8:	000608c0 	call	608c <__mulsi3>
     8ac:	e0ffed17 	ldw	r3,-76(fp)
     8b0:	10800844 	addi	r2,r2,33
     8b4:	100490fa 	slli	r2,r2,3
     8b8:	1885883a 	add	r2,r3,r2
     8bc:	10c00017 	ldw	r3,0(r2)
     8c0:	e0fff015 	stw	r3,-64(fp)
     8c4:	10800117 	ldw	r2,4(r2)
     8c8:	e0bff115 	stw	r2,-60(fp)

     tw1=tw2=st->twiddles;
     8cc:	e0bfed17 	ldw	r2,-76(fp)
     8d0:	10804204 	addi	r2,r2,264
     8d4:	e0bffd15 	stw	r2,-12(fp)
     8d8:	e0bffd17 	ldw	r2,-12(fp)
     8dc:	e0bffe15 	stw	r2,-8(fp)

     do{
         C_FIXDIV(*Fout,3); C_FIXDIV(Fout[m],3); C_FIXDIV(Fout[m2],3);

         C_MUL(scratch[1],Fout[m] , *tw1);
     8e0:	e0bfec17 	ldw	r2,-80(fp)
     8e4:	100490fa 	slli	r2,r2,3
     8e8:	e0ffef17 	ldw	r3,-68(fp)
     8ec:	1885883a 	add	r2,r3,r2
     8f0:	10c00017 	ldw	r3,0(r2)
     8f4:	e13ffe17 	ldw	r4,-8(fp)
     8f8:	20800017 	ldw	r2,0(r4)
     8fc:	1887ff32 	custom	252,r3,r3,r2
     900:	e0bfec17 	ldw	r2,-80(fp)
     904:	100490fa 	slli	r2,r2,3
     908:	e13fef17 	ldw	r4,-68(fp)
     90c:	2085883a 	add	r2,r4,r2
     910:	11000117 	ldw	r4,4(r2)
     914:	e17ffe17 	ldw	r5,-8(fp)
     918:	28800117 	ldw	r2,4(r5)
     91c:	2085ff32 	custom	252,r2,r4,r2
     920:	1885ffb2 	custom	254,r2,r3,r2
     924:	e0bff415 	stw	r2,-48(fp)
     928:	e0bfec17 	ldw	r2,-80(fp)
     92c:	100490fa 	slli	r2,r2,3
     930:	e0ffef17 	ldw	r3,-68(fp)
     934:	1885883a 	add	r2,r3,r2
     938:	10c00017 	ldw	r3,0(r2)
     93c:	e13ffe17 	ldw	r4,-8(fp)
     940:	20800117 	ldw	r2,4(r4)
     944:	1887ff32 	custom	252,r3,r3,r2
     948:	e0bfec17 	ldw	r2,-80(fp)
     94c:	100490fa 	slli	r2,r2,3
     950:	e13fef17 	ldw	r4,-68(fp)
     954:	2085883a 	add	r2,r4,r2
     958:	11000117 	ldw	r4,4(r2)
     95c:	e17ffe17 	ldw	r5,-8(fp)
     960:	28800017 	ldw	r2,0(r5)
     964:	2085ff32 	custom	252,r2,r4,r2
     968:	1885ff72 	custom	253,r2,r3,r2
     96c:	e0bff515 	stw	r2,-44(fp)
         C_MUL(scratch[2],Fout[m2] , *tw2);
     970:	e0bffc17 	ldw	r2,-16(fp)
     974:	100490fa 	slli	r2,r2,3
     978:	e0ffef17 	ldw	r3,-68(fp)
     97c:	1885883a 	add	r2,r3,r2
     980:	10c00017 	ldw	r3,0(r2)
     984:	e13ffd17 	ldw	r4,-12(fp)
     988:	20800017 	ldw	r2,0(r4)
     98c:	1887ff32 	custom	252,r3,r3,r2
     990:	e0bffc17 	ldw	r2,-16(fp)
     994:	100490fa 	slli	r2,r2,3
     998:	e13fef17 	ldw	r4,-68(fp)
     99c:	2085883a 	add	r2,r4,r2
     9a0:	11000117 	ldw	r4,4(r2)
     9a4:	e17ffd17 	ldw	r5,-12(fp)
     9a8:	28800117 	ldw	r2,4(r5)
     9ac:	2085ff32 	custom	252,r2,r4,r2
     9b0:	1885ffb2 	custom	254,r2,r3,r2
     9b4:	e0bff615 	stw	r2,-40(fp)
     9b8:	e0bffc17 	ldw	r2,-16(fp)
     9bc:	100490fa 	slli	r2,r2,3
     9c0:	e0ffef17 	ldw	r3,-68(fp)
     9c4:	1885883a 	add	r2,r3,r2
     9c8:	10c00017 	ldw	r3,0(r2)
     9cc:	e13ffd17 	ldw	r4,-12(fp)
     9d0:	20800117 	ldw	r2,4(r4)
     9d4:	1887ff32 	custom	252,r3,r3,r2
     9d8:	e0bffc17 	ldw	r2,-16(fp)
     9dc:	100490fa 	slli	r2,r2,3
     9e0:	e13fef17 	ldw	r4,-68(fp)
     9e4:	2085883a 	add	r2,r4,r2
     9e8:	11000117 	ldw	r4,4(r2)
     9ec:	e17ffd17 	ldw	r5,-12(fp)
     9f0:	28800017 	ldw	r2,0(r5)
     9f4:	2085ff32 	custom	252,r2,r4,r2
     9f8:	1885ff72 	custom	253,r2,r3,r2
     9fc:	e0bff715 	stw	r2,-36(fp)

         C_ADD(scratch[3],scratch[1],scratch[2]);
     a00:	e0fff417 	ldw	r3,-48(fp)
     a04:	e0bff617 	ldw	r2,-40(fp)
     a08:	1885ff72 	custom	253,r2,r3,r2
     a0c:	e0bff815 	stw	r2,-32(fp)
     a10:	e0fff517 	ldw	r3,-44(fp)
     a14:	e0bff717 	ldw	r2,-36(fp)
     a18:	1885ff72 	custom	253,r2,r3,r2
     a1c:	e0bff915 	stw	r2,-28(fp)
         C_SUB(scratch[0],scratch[1],scratch[2]);
     a20:	e0fff417 	ldw	r3,-48(fp)
     a24:	e0bff617 	ldw	r2,-40(fp)
     a28:	1885ffb2 	custom	254,r2,r3,r2
     a2c:	e0bff215 	stw	r2,-56(fp)
     a30:	e0fff517 	ldw	r3,-44(fp)
     a34:	e0bff717 	ldw	r2,-36(fp)
     a38:	1885ffb2 	custom	254,r2,r3,r2
     a3c:	e0bff315 	stw	r2,-52(fp)
         tw1 += fstride;
     a40:	e0bfee17 	ldw	r2,-72(fp)
     a44:	100490fa 	slli	r2,r2,3
     a48:	e0fffe17 	ldw	r3,-8(fp)
     a4c:	1885883a 	add	r2,r3,r2
     a50:	e0bffe15 	stw	r2,-8(fp)
         tw2 += fstride*2;
     a54:	e0bfee17 	ldw	r2,-72(fp)
     a58:	1004913a 	slli	r2,r2,4
     a5c:	e0fffd17 	ldw	r3,-12(fp)
     a60:	1885883a 	add	r2,r3,r2
     a64:	e0bffd15 	stw	r2,-12(fp)

         Fout[m].r = Fout->r - HALF_OF(scratch[3].r);
     a68:	e0bfef17 	ldw	r2,-68(fp)
     a6c:	11000017 	ldw	r4,0(r2)
     a70:	e0fff817 	ldw	r3,-32(fp)
     a74:	008fc034 	movhi	r2,16128
     a78:	1887ff32 	custom	252,r3,r3,r2
     a7c:	e0bfec17 	ldw	r2,-80(fp)
     a80:	100490fa 	slli	r2,r2,3
     a84:	e17fef17 	ldw	r5,-68(fp)
     a88:	2885883a 	add	r2,r5,r2
     a8c:	20c7ffb2 	custom	254,r3,r4,r3
     a90:	10c00015 	stw	r3,0(r2)
         Fout[m].i = Fout->i - HALF_OF(scratch[3].i);
     a94:	e0bfef17 	ldw	r2,-68(fp)
     a98:	11000117 	ldw	r4,4(r2)
     a9c:	e0fff917 	ldw	r3,-28(fp)
     aa0:	008fc034 	movhi	r2,16128
     aa4:	1887ff32 	custom	252,r3,r3,r2
     aa8:	e0bfec17 	ldw	r2,-80(fp)
     aac:	100490fa 	slli	r2,r2,3
     ab0:	e17fef17 	ldw	r5,-68(fp)
     ab4:	2885883a 	add	r2,r5,r2
     ab8:	20c7ffb2 	custom	254,r3,r4,r3
     abc:	10c00115 	stw	r3,4(r2)

         C_MULBYSCALAR( scratch[0] , epi3.i );
     ac0:	e0fff217 	ldw	r3,-56(fp)
     ac4:	e0bff117 	ldw	r2,-60(fp)
     ac8:	1885ff32 	custom	252,r2,r3,r2
     acc:	e0bff215 	stw	r2,-56(fp)
     ad0:	e0fff317 	ldw	r3,-52(fp)
     ad4:	e0bff117 	ldw	r2,-60(fp)
     ad8:	1885ff32 	custom	252,r2,r3,r2
     adc:	e0bff315 	stw	r2,-52(fp)

         C_ADDTO(*Fout,scratch[3]);
     ae0:	e0bfef17 	ldw	r2,-68(fp)
     ae4:	10c00017 	ldw	r3,0(r2)
     ae8:	e0bff817 	ldw	r2,-32(fp)
     aec:	1887ff72 	custom	253,r3,r3,r2
     af0:	e0bfef17 	ldw	r2,-68(fp)
     af4:	10c00015 	stw	r3,0(r2)
     af8:	e0bfef17 	ldw	r2,-68(fp)
     afc:	10c00117 	ldw	r3,4(r2)
     b00:	e0bff917 	ldw	r2,-28(fp)
     b04:	1887ff72 	custom	253,r3,r3,r2
     b08:	e0bfef17 	ldw	r2,-68(fp)
     b0c:	10c00115 	stw	r3,4(r2)

         Fout[m2].r = Fout[m].r + scratch[0].i;
     b10:	e0bfec17 	ldw	r2,-80(fp)
     b14:	100490fa 	slli	r2,r2,3
     b18:	e0ffef17 	ldw	r3,-68(fp)
     b1c:	1885883a 	add	r2,r3,r2
     b20:	11000017 	ldw	r4,0(r2)
     b24:	e0fff317 	ldw	r3,-52(fp)
     b28:	e0bffc17 	ldw	r2,-16(fp)
     b2c:	100490fa 	slli	r2,r2,3
     b30:	e17fef17 	ldw	r5,-68(fp)
     b34:	2885883a 	add	r2,r5,r2
     b38:	20c7ff72 	custom	253,r3,r4,r3
     b3c:	10c00015 	stw	r3,0(r2)
         Fout[m2].i = Fout[m].i - scratch[0].r;
     b40:	e0bfec17 	ldw	r2,-80(fp)
     b44:	100490fa 	slli	r2,r2,3
     b48:	e0ffef17 	ldw	r3,-68(fp)
     b4c:	1885883a 	add	r2,r3,r2
     b50:	11000117 	ldw	r4,4(r2)
     b54:	e0fff217 	ldw	r3,-56(fp)
     b58:	e0bffc17 	ldw	r2,-16(fp)
     b5c:	100490fa 	slli	r2,r2,3
     b60:	e17fef17 	ldw	r5,-68(fp)
     b64:	2885883a 	add	r2,r5,r2
     b68:	20c7ffb2 	custom	254,r3,r4,r3
     b6c:	10c00115 	stw	r3,4(r2)

         Fout[m].r -= scratch[0].i;
     b70:	e0bfec17 	ldw	r2,-80(fp)
     b74:	100490fa 	slli	r2,r2,3
     b78:	e0ffef17 	ldw	r3,-68(fp)
     b7c:	1885883a 	add	r2,r3,r2
     b80:	11000017 	ldw	r4,0(r2)
     b84:	e0fff317 	ldw	r3,-52(fp)
     b88:	e0bfec17 	ldw	r2,-80(fp)
     b8c:	100490fa 	slli	r2,r2,3
     b90:	e17fef17 	ldw	r5,-68(fp)
     b94:	2885883a 	add	r2,r5,r2
     b98:	20c7ffb2 	custom	254,r3,r4,r3
     b9c:	10c00015 	stw	r3,0(r2)
         Fout[m].i += scratch[0].r;
     ba0:	e0bfec17 	ldw	r2,-80(fp)
     ba4:	100490fa 	slli	r2,r2,3
     ba8:	e0ffef17 	ldw	r3,-68(fp)
     bac:	1885883a 	add	r2,r3,r2
     bb0:	11000117 	ldw	r4,4(r2)
     bb4:	e0fff217 	ldw	r3,-56(fp)
     bb8:	e0bfec17 	ldw	r2,-80(fp)
     bbc:	100490fa 	slli	r2,r2,3
     bc0:	e17fef17 	ldw	r5,-68(fp)
     bc4:	2885883a 	add	r2,r5,r2
     bc8:	20c7ff72 	custom	253,r3,r4,r3
     bcc:	10c00115 	stw	r3,4(r2)

         ++Fout;
     bd0:	e0bfef17 	ldw	r2,-68(fp)
     bd4:	10800204 	addi	r2,r2,8
     bd8:	e0bfef15 	stw	r2,-68(fp)
     }while(--k);
     bdc:	e0bfff17 	ldw	r2,-4(fp)
     be0:	10bfffc4 	addi	r2,r2,-1
     be4:	e0bfff15 	stw	r2,-4(fp)
     be8:	e0bfff17 	ldw	r2,-4(fp)
     bec:	103f3c1e 	bne	r2,zero,8e0 <kf_bfly3+0x74>
}
     bf0:	0001883a 	nop
     bf4:	0001883a 	nop
     bf8:	e037883a 	mov	sp,fp
     bfc:	dfc00117 	ldw	ra,4(sp)
     c00:	df000017 	ldw	fp,0(sp)
     c04:	dec00204 	addi	sp,sp,8
     c08:	f800283a 	ret

00000c0c <kf_bfly5>:
        kiss_fft_cpx * Fout,
        const size_t fstride,
        const kiss_fft_cfg st,
        int m
        )
{
     c0c:	deffd204 	addi	sp,sp,-184
     c10:	dfc02d15 	stw	ra,180(sp)
     c14:	df002c15 	stw	fp,176(sp)
     c18:	dc402b15 	stw	r17,172(sp)
     c1c:	dc002a15 	stw	r16,168(sp)
     c20:	df002c04 	addi	fp,sp,176
     c24:	e13fd715 	stw	r4,-164(fp)
     c28:	e17fd615 	stw	r5,-168(fp)
     c2c:	e1bfd515 	stw	r6,-172(fp)
     c30:	e1ffd415 	stw	r7,-176(fp)
    kiss_fft_cpx *Fout0,*Fout1,*Fout2,*Fout3,*Fout4;
    int u;
    kiss_fft_cpx scratch[13];
    kiss_fft_cpx * twiddles = st->twiddles;
     c34:	e0bfd517 	ldw	r2,-172(fp)
     c38:	10804204 	addi	r2,r2,264
     c3c:	e0bff715 	stw	r2,-36(fp)
    kiss_fft_cpx *tw;
    kiss_fft_cpx ya,yb;
    ya = twiddles[fstride*m];
     c40:	e0bfd417 	ldw	r2,-176(fp)
     c44:	e17fd617 	ldw	r5,-168(fp)
     c48:	1009883a 	mov	r4,r2
     c4c:	000608c0 	call	608c <__mulsi3>
     c50:	100490fa 	slli	r2,r2,3
     c54:	e0fff717 	ldw	r3,-36(fp)
     c58:	1885883a 	add	r2,r3,r2
     c5c:	10c00017 	ldw	r3,0(r2)
     c60:	e0ffda15 	stw	r3,-152(fp)
     c64:	10800117 	ldw	r2,4(r2)
     c68:	e0bfdb15 	stw	r2,-148(fp)
    yb = twiddles[fstride*2*m];
     c6c:	e0bfd417 	ldw	r2,-176(fp)
     c70:	e17fd617 	ldw	r5,-168(fp)
     c74:	1009883a 	mov	r4,r2
     c78:	000608c0 	call	608c <__mulsi3>
     c7c:	1004913a 	slli	r2,r2,4
     c80:	e0fff717 	ldw	r3,-36(fp)
     c84:	1885883a 	add	r2,r3,r2
     c88:	10c00017 	ldw	r3,0(r2)
     c8c:	e0ffd815 	stw	r3,-160(fp)
     c90:	10800117 	ldw	r2,4(r2)
     c94:	e0bfd915 	stw	r2,-156(fp)

    Fout0=Fout;
     c98:	e0bfd717 	ldw	r2,-164(fp)
     c9c:	e0bffd15 	stw	r2,-12(fp)
    Fout1=Fout0+m;
     ca0:	e0bfd417 	ldw	r2,-176(fp)
     ca4:	100490fa 	slli	r2,r2,3
     ca8:	e0fffd17 	ldw	r3,-12(fp)
     cac:	1885883a 	add	r2,r3,r2
     cb0:	e0bffc15 	stw	r2,-16(fp)
    Fout2=Fout0+2*m;
     cb4:	e0bfd417 	ldw	r2,-176(fp)
     cb8:	1004913a 	slli	r2,r2,4
     cbc:	e0fffd17 	ldw	r3,-12(fp)
     cc0:	1885883a 	add	r2,r3,r2
     cc4:	e0bffb15 	stw	r2,-20(fp)
    Fout3=Fout0+3*m;
     cc8:	e0ffd417 	ldw	r3,-176(fp)
     ccc:	1805883a 	mov	r2,r3
     cd0:	1085883a 	add	r2,r2,r2
     cd4:	10c5883a 	add	r2,r2,r3
     cd8:	100490fa 	slli	r2,r2,3
     cdc:	1007883a 	mov	r3,r2
     ce0:	e0bffd17 	ldw	r2,-12(fp)
     ce4:	10c5883a 	add	r2,r2,r3
     ce8:	e0bffa15 	stw	r2,-24(fp)
    Fout4=Fout0+4*m;
     cec:	e0bfd417 	ldw	r2,-176(fp)
     cf0:	1004917a 	slli	r2,r2,5
     cf4:	e0fffd17 	ldw	r3,-12(fp)
     cf8:	1885883a 	add	r2,r3,r2
     cfc:	e0bff915 	stw	r2,-28(fp)

    tw=st->twiddles;
     d00:	e0bfd517 	ldw	r2,-172(fp)
     d04:	10804204 	addi	r2,r2,264
     d08:	e0bff615 	stw	r2,-40(fp)
    for ( u=0; u<m; ++u ) {
     d0c:	e03ff815 	stw	zero,-32(fp)
     d10:	00018c06 	br	1344 <kf_bfly5+0x738>
        C_FIXDIV( *Fout0,5); C_FIXDIV( *Fout1,5); C_FIXDIV( *Fout2,5); C_FIXDIV( *Fout3,5); C_FIXDIV( *Fout4,5);
        scratch[0] = *Fout0;
     d14:	e0bffd17 	ldw	r2,-12(fp)
     d18:	10c00017 	ldw	r3,0(r2)
     d1c:	e0ffdc15 	stw	r3,-144(fp)
     d20:	10800117 	ldw	r2,4(r2)
     d24:	e0bfdd15 	stw	r2,-140(fp)

        C_MUL(scratch[1] ,*Fout1, tw[u*fstride]);
     d28:	e0bffc17 	ldw	r2,-16(fp)
     d2c:	14000017 	ldw	r16,0(r2)
     d30:	e0bff817 	ldw	r2,-32(fp)
     d34:	e17fd617 	ldw	r5,-168(fp)
     d38:	1009883a 	mov	r4,r2
     d3c:	000608c0 	call	608c <__mulsi3>
     d40:	100490fa 	slli	r2,r2,3
     d44:	e0fff617 	ldw	r3,-40(fp)
     d48:	1887883a 	add	r3,r3,r2
     d4c:	18800017 	ldw	r2,0(r3)
     d50:	80a1ff32 	custom	252,r16,r16,r2
     d54:	e0bffc17 	ldw	r2,-16(fp)
     d58:	14400117 	ldw	r17,4(r2)
     d5c:	e0bff817 	ldw	r2,-32(fp)
     d60:	e17fd617 	ldw	r5,-168(fp)
     d64:	1009883a 	mov	r4,r2
     d68:	000608c0 	call	608c <__mulsi3>
     d6c:	100490fa 	slli	r2,r2,3
     d70:	e0fff617 	ldw	r3,-40(fp)
     d74:	1887883a 	add	r3,r3,r2
     d78:	18800117 	ldw	r2,4(r3)
     d7c:	8885ff32 	custom	252,r2,r17,r2
     d80:	8085ffb2 	custom	254,r2,r16,r2
     d84:	e0bfde15 	stw	r2,-136(fp)
     d88:	e0bffc17 	ldw	r2,-16(fp)
     d8c:	14000017 	ldw	r16,0(r2)
     d90:	e0bff817 	ldw	r2,-32(fp)
     d94:	e17fd617 	ldw	r5,-168(fp)
     d98:	1009883a 	mov	r4,r2
     d9c:	000608c0 	call	608c <__mulsi3>
     da0:	100490fa 	slli	r2,r2,3
     da4:	e0fff617 	ldw	r3,-40(fp)
     da8:	1887883a 	add	r3,r3,r2
     dac:	18800117 	ldw	r2,4(r3)
     db0:	80a1ff32 	custom	252,r16,r16,r2
     db4:	e0bffc17 	ldw	r2,-16(fp)
     db8:	14400117 	ldw	r17,4(r2)
     dbc:	e0bff817 	ldw	r2,-32(fp)
     dc0:	e17fd617 	ldw	r5,-168(fp)
     dc4:	1009883a 	mov	r4,r2
     dc8:	000608c0 	call	608c <__mulsi3>
     dcc:	100490fa 	slli	r2,r2,3
     dd0:	e0fff617 	ldw	r3,-40(fp)
     dd4:	1887883a 	add	r3,r3,r2
     dd8:	18800017 	ldw	r2,0(r3)
     ddc:	8885ff32 	custom	252,r2,r17,r2
     de0:	8085ff72 	custom	253,r2,r16,r2
     de4:	e0bfdf15 	stw	r2,-132(fp)
        C_MUL(scratch[2] ,*Fout2, tw[2*u*fstride]);
     de8:	e0bffb17 	ldw	r2,-20(fp)
     dec:	14000017 	ldw	r16,0(r2)
     df0:	e0bff817 	ldw	r2,-32(fp)
     df4:	e17fd617 	ldw	r5,-168(fp)
     df8:	1009883a 	mov	r4,r2
     dfc:	000608c0 	call	608c <__mulsi3>
     e00:	1004913a 	slli	r2,r2,4
     e04:	e0fff617 	ldw	r3,-40(fp)
     e08:	1887883a 	add	r3,r3,r2
     e0c:	18800017 	ldw	r2,0(r3)
     e10:	80a1ff32 	custom	252,r16,r16,r2
     e14:	e0bffb17 	ldw	r2,-20(fp)
     e18:	14400117 	ldw	r17,4(r2)
     e1c:	e0bff817 	ldw	r2,-32(fp)
     e20:	e17fd617 	ldw	r5,-168(fp)
     e24:	1009883a 	mov	r4,r2
     e28:	000608c0 	call	608c <__mulsi3>
     e2c:	1004913a 	slli	r2,r2,4
     e30:	e0fff617 	ldw	r3,-40(fp)
     e34:	1887883a 	add	r3,r3,r2
     e38:	18800117 	ldw	r2,4(r3)
     e3c:	8885ff32 	custom	252,r2,r17,r2
     e40:	8085ffb2 	custom	254,r2,r16,r2
     e44:	e0bfe015 	stw	r2,-128(fp)
     e48:	e0bffb17 	ldw	r2,-20(fp)
     e4c:	14000017 	ldw	r16,0(r2)
     e50:	e0bff817 	ldw	r2,-32(fp)
     e54:	e17fd617 	ldw	r5,-168(fp)
     e58:	1009883a 	mov	r4,r2
     e5c:	000608c0 	call	608c <__mulsi3>
     e60:	1004913a 	slli	r2,r2,4
     e64:	e0fff617 	ldw	r3,-40(fp)
     e68:	1887883a 	add	r3,r3,r2
     e6c:	18800117 	ldw	r2,4(r3)
     e70:	80a1ff32 	custom	252,r16,r16,r2
     e74:	e0bffb17 	ldw	r2,-20(fp)
     e78:	14400117 	ldw	r17,4(r2)
     e7c:	e0bff817 	ldw	r2,-32(fp)
     e80:	e17fd617 	ldw	r5,-168(fp)
     e84:	1009883a 	mov	r4,r2
     e88:	000608c0 	call	608c <__mulsi3>
     e8c:	1004913a 	slli	r2,r2,4
     e90:	e0fff617 	ldw	r3,-40(fp)
     e94:	1887883a 	add	r3,r3,r2
     e98:	18800017 	ldw	r2,0(r3)
     e9c:	8885ff32 	custom	252,r2,r17,r2
     ea0:	8085ff72 	custom	253,r2,r16,r2
     ea4:	e0bfe115 	stw	r2,-124(fp)
        C_MUL(scratch[3] ,*Fout3, tw[3*u*fstride]);
     ea8:	e0bffa17 	ldw	r2,-24(fp)
     eac:	14000017 	ldw	r16,0(r2)
     eb0:	e0bff817 	ldw	r2,-32(fp)
     eb4:	e17fd617 	ldw	r5,-168(fp)
     eb8:	1009883a 	mov	r4,r2
     ebc:	000608c0 	call	608c <__mulsi3>
     ec0:	1007883a 	mov	r3,r2
     ec4:	1805883a 	mov	r2,r3
     ec8:	1085883a 	add	r2,r2,r2
     ecc:	10c5883a 	add	r2,r2,r3
     ed0:	100490fa 	slli	r2,r2,3
     ed4:	1007883a 	mov	r3,r2
     ed8:	e0bff617 	ldw	r2,-40(fp)
     edc:	10c7883a 	add	r3,r2,r3
     ee0:	18800017 	ldw	r2,0(r3)
     ee4:	80a1ff32 	custom	252,r16,r16,r2
     ee8:	e0bffa17 	ldw	r2,-24(fp)
     eec:	14400117 	ldw	r17,4(r2)
     ef0:	e0bff817 	ldw	r2,-32(fp)
     ef4:	e17fd617 	ldw	r5,-168(fp)
     ef8:	1009883a 	mov	r4,r2
     efc:	000608c0 	call	608c <__mulsi3>
     f00:	1007883a 	mov	r3,r2
     f04:	1805883a 	mov	r2,r3
     f08:	1085883a 	add	r2,r2,r2
     f0c:	10c5883a 	add	r2,r2,r3
     f10:	100490fa 	slli	r2,r2,3
     f14:	1007883a 	mov	r3,r2
     f18:	e0bff617 	ldw	r2,-40(fp)
     f1c:	10c7883a 	add	r3,r2,r3
     f20:	18800117 	ldw	r2,4(r3)
     f24:	8885ff32 	custom	252,r2,r17,r2
     f28:	8085ffb2 	custom	254,r2,r16,r2
     f2c:	e0bfe215 	stw	r2,-120(fp)
     f30:	e0bffa17 	ldw	r2,-24(fp)
     f34:	14000017 	ldw	r16,0(r2)
     f38:	e0bff817 	ldw	r2,-32(fp)
     f3c:	e17fd617 	ldw	r5,-168(fp)
     f40:	1009883a 	mov	r4,r2
     f44:	000608c0 	call	608c <__mulsi3>
     f48:	1007883a 	mov	r3,r2
     f4c:	1805883a 	mov	r2,r3
     f50:	1085883a 	add	r2,r2,r2
     f54:	10c5883a 	add	r2,r2,r3
     f58:	100490fa 	slli	r2,r2,3
     f5c:	1007883a 	mov	r3,r2
     f60:	e0bff617 	ldw	r2,-40(fp)
     f64:	10c7883a 	add	r3,r2,r3
     f68:	18800117 	ldw	r2,4(r3)
     f6c:	80a1ff32 	custom	252,r16,r16,r2
     f70:	e0bffa17 	ldw	r2,-24(fp)
     f74:	14400117 	ldw	r17,4(r2)
     f78:	e0bff817 	ldw	r2,-32(fp)
     f7c:	e17fd617 	ldw	r5,-168(fp)
     f80:	1009883a 	mov	r4,r2
     f84:	000608c0 	call	608c <__mulsi3>
     f88:	1007883a 	mov	r3,r2
     f8c:	1805883a 	mov	r2,r3
     f90:	1085883a 	add	r2,r2,r2
     f94:	10c5883a 	add	r2,r2,r3
     f98:	100490fa 	slli	r2,r2,3
     f9c:	1007883a 	mov	r3,r2
     fa0:	e0bff617 	ldw	r2,-40(fp)
     fa4:	10c7883a 	add	r3,r2,r3
     fa8:	18800017 	ldw	r2,0(r3)
     fac:	8885ff32 	custom	252,r2,r17,r2
     fb0:	8085ff72 	custom	253,r2,r16,r2
     fb4:	e0bfe315 	stw	r2,-116(fp)
        C_MUL(scratch[4] ,*Fout4, tw[4*u*fstride]);
     fb8:	e0bff917 	ldw	r2,-28(fp)
     fbc:	14000017 	ldw	r16,0(r2)
     fc0:	e0bff817 	ldw	r2,-32(fp)
     fc4:	e17fd617 	ldw	r5,-168(fp)
     fc8:	1009883a 	mov	r4,r2
     fcc:	000608c0 	call	608c <__mulsi3>
     fd0:	1004917a 	slli	r2,r2,5
     fd4:	e0fff617 	ldw	r3,-40(fp)
     fd8:	1887883a 	add	r3,r3,r2
     fdc:	18800017 	ldw	r2,0(r3)
     fe0:	80a1ff32 	custom	252,r16,r16,r2
     fe4:	e0bff917 	ldw	r2,-28(fp)
     fe8:	14400117 	ldw	r17,4(r2)
     fec:	e0bff817 	ldw	r2,-32(fp)
     ff0:	e17fd617 	ldw	r5,-168(fp)
     ff4:	1009883a 	mov	r4,r2
     ff8:	000608c0 	call	608c <__mulsi3>
     ffc:	1004917a 	slli	r2,r2,5
    1000:	e0fff617 	ldw	r3,-40(fp)
    1004:	1887883a 	add	r3,r3,r2
    1008:	18800117 	ldw	r2,4(r3)
    100c:	8885ff32 	custom	252,r2,r17,r2
    1010:	8085ffb2 	custom	254,r2,r16,r2
    1014:	e0bfe415 	stw	r2,-112(fp)
    1018:	e0bff917 	ldw	r2,-28(fp)
    101c:	14000017 	ldw	r16,0(r2)
    1020:	e0bff817 	ldw	r2,-32(fp)
    1024:	e17fd617 	ldw	r5,-168(fp)
    1028:	1009883a 	mov	r4,r2
    102c:	000608c0 	call	608c <__mulsi3>
    1030:	1004917a 	slli	r2,r2,5
    1034:	e0fff617 	ldw	r3,-40(fp)
    1038:	1887883a 	add	r3,r3,r2
    103c:	18800117 	ldw	r2,4(r3)
    1040:	80a1ff32 	custom	252,r16,r16,r2
    1044:	e0bff917 	ldw	r2,-28(fp)
    1048:	14400117 	ldw	r17,4(r2)
    104c:	e0bff817 	ldw	r2,-32(fp)
    1050:	e17fd617 	ldw	r5,-168(fp)
    1054:	1009883a 	mov	r4,r2
    1058:	000608c0 	call	608c <__mulsi3>
    105c:	1004917a 	slli	r2,r2,5
    1060:	e0fff617 	ldw	r3,-40(fp)
    1064:	1887883a 	add	r3,r3,r2
    1068:	18800017 	ldw	r2,0(r3)
    106c:	8885ff32 	custom	252,r2,r17,r2
    1070:	8085ff72 	custom	253,r2,r16,r2
    1074:	e0bfe515 	stw	r2,-108(fp)

        C_ADD( scratch[7],scratch[1],scratch[4]);
    1078:	e0ffde17 	ldw	r3,-136(fp)
    107c:	e0bfe417 	ldw	r2,-112(fp)
    1080:	1885ff72 	custom	253,r2,r3,r2
    1084:	e0bfea15 	stw	r2,-88(fp)
    1088:	e0ffdf17 	ldw	r3,-132(fp)
    108c:	e0bfe517 	ldw	r2,-108(fp)
    1090:	1885ff72 	custom	253,r2,r3,r2
    1094:	e0bfeb15 	stw	r2,-84(fp)
        C_SUB( scratch[10],scratch[1],scratch[4]);
    1098:	e0ffde17 	ldw	r3,-136(fp)
    109c:	e0bfe417 	ldw	r2,-112(fp)
    10a0:	1885ffb2 	custom	254,r2,r3,r2
    10a4:	e0bff015 	stw	r2,-64(fp)
    10a8:	e0ffdf17 	ldw	r3,-132(fp)
    10ac:	e0bfe517 	ldw	r2,-108(fp)
    10b0:	1885ffb2 	custom	254,r2,r3,r2
    10b4:	e0bff115 	stw	r2,-60(fp)
        C_ADD( scratch[8],scratch[2],scratch[3]);
    10b8:	e0ffe017 	ldw	r3,-128(fp)
    10bc:	e0bfe217 	ldw	r2,-120(fp)
    10c0:	1885ff72 	custom	253,r2,r3,r2
    10c4:	e0bfec15 	stw	r2,-80(fp)
    10c8:	e0ffe117 	ldw	r3,-124(fp)
    10cc:	e0bfe317 	ldw	r2,-116(fp)
    10d0:	1885ff72 	custom	253,r2,r3,r2
    10d4:	e0bfed15 	stw	r2,-76(fp)
        C_SUB( scratch[9],scratch[2],scratch[3]);
    10d8:	e0ffe017 	ldw	r3,-128(fp)
    10dc:	e0bfe217 	ldw	r2,-120(fp)
    10e0:	1885ffb2 	custom	254,r2,r3,r2
    10e4:	e0bfee15 	stw	r2,-72(fp)
    10e8:	e0ffe117 	ldw	r3,-124(fp)
    10ec:	e0bfe317 	ldw	r2,-116(fp)
    10f0:	1885ffb2 	custom	254,r2,r3,r2
    10f4:	e0bfef15 	stw	r2,-68(fp)

        Fout0->r += scratch[7].r + scratch[8].r;
    10f8:	e0bffd17 	ldw	r2,-12(fp)
    10fc:	10c00017 	ldw	r3,0(r2)
    1100:	e13fea17 	ldw	r4,-88(fp)
    1104:	e0bfec17 	ldw	r2,-80(fp)
    1108:	2085ff72 	custom	253,r2,r4,r2
    110c:	1887ff72 	custom	253,r3,r3,r2
    1110:	e0bffd17 	ldw	r2,-12(fp)
    1114:	10c00015 	stw	r3,0(r2)
        Fout0->i += scratch[7].i + scratch[8].i;
    1118:	e0bffd17 	ldw	r2,-12(fp)
    111c:	10c00117 	ldw	r3,4(r2)
    1120:	e13feb17 	ldw	r4,-84(fp)
    1124:	e0bfed17 	ldw	r2,-76(fp)
    1128:	2085ff72 	custom	253,r2,r4,r2
    112c:	1887ff72 	custom	253,r3,r3,r2
    1130:	e0bffd17 	ldw	r2,-12(fp)
    1134:	10c00115 	stw	r3,4(r2)

        scratch[5].r = scratch[0].r + S_MUL(scratch[7].r,ya.r) + S_MUL(scratch[8].r,yb.r);
    1138:	e0ffdc17 	ldw	r3,-144(fp)
    113c:	e13fea17 	ldw	r4,-88(fp)
    1140:	e0bfda17 	ldw	r2,-152(fp)
    1144:	2085ff32 	custom	252,r2,r4,r2
    1148:	1887ff72 	custom	253,r3,r3,r2
    114c:	e13fec17 	ldw	r4,-80(fp)
    1150:	e0bfd817 	ldw	r2,-160(fp)
    1154:	2085ff32 	custom	252,r2,r4,r2
    1158:	1885ff72 	custom	253,r2,r3,r2
    115c:	e0bfe615 	stw	r2,-104(fp)
        scratch[5].i = scratch[0].i + S_MUL(scratch[7].i,ya.r) + S_MUL(scratch[8].i,yb.r);
    1160:	e0ffdd17 	ldw	r3,-140(fp)
    1164:	e13feb17 	ldw	r4,-84(fp)
    1168:	e0bfda17 	ldw	r2,-152(fp)
    116c:	2085ff32 	custom	252,r2,r4,r2
    1170:	1887ff72 	custom	253,r3,r3,r2
    1174:	e13fed17 	ldw	r4,-76(fp)
    1178:	e0bfd817 	ldw	r2,-160(fp)
    117c:	2085ff32 	custom	252,r2,r4,r2
    1180:	1885ff72 	custom	253,r2,r3,r2
    1184:	e0bfe715 	stw	r2,-100(fp)

        scratch[6].r =  S_MUL(scratch[10].i,ya.i) + S_MUL(scratch[9].i,yb.i);
    1188:	e0fff117 	ldw	r3,-60(fp)
    118c:	e0bfdb17 	ldw	r2,-148(fp)
    1190:	1887ff32 	custom	252,r3,r3,r2
    1194:	e13fef17 	ldw	r4,-68(fp)
    1198:	e0bfd917 	ldw	r2,-156(fp)
    119c:	2085ff32 	custom	252,r2,r4,r2
    11a0:	1885ff72 	custom	253,r2,r3,r2
    11a4:	e0bfe815 	stw	r2,-96(fp)
        scratch[6].i = -S_MUL(scratch[10].r,ya.i) - S_MUL(scratch[9].r,yb.i);
    11a8:	e0fff017 	ldw	r3,-64(fp)
    11ac:	e0bfdb17 	ldw	r2,-148(fp)
    11b0:	1885ff32 	custom	252,r2,r3,r2
    11b4:	10e0003c 	xorhi	r3,r2,32768
    11b8:	e13fee17 	ldw	r4,-72(fp)
    11bc:	e0bfd917 	ldw	r2,-156(fp)
    11c0:	2085ff32 	custom	252,r2,r4,r2
    11c4:	1885ffb2 	custom	254,r2,r3,r2
    11c8:	e0bfe915 	stw	r2,-92(fp)

        C_SUB(*Fout1,scratch[5],scratch[6]);
    11cc:	e0ffe617 	ldw	r3,-104(fp)
    11d0:	e0bfe817 	ldw	r2,-96(fp)
    11d4:	1887ffb2 	custom	254,r3,r3,r2
    11d8:	e0bffc17 	ldw	r2,-16(fp)
    11dc:	10c00015 	stw	r3,0(r2)
    11e0:	e0ffe717 	ldw	r3,-100(fp)
    11e4:	e0bfe917 	ldw	r2,-92(fp)
    11e8:	1887ffb2 	custom	254,r3,r3,r2
    11ec:	e0bffc17 	ldw	r2,-16(fp)
    11f0:	10c00115 	stw	r3,4(r2)
        C_ADD(*Fout4,scratch[5],scratch[6]);
    11f4:	e0ffe617 	ldw	r3,-104(fp)
    11f8:	e0bfe817 	ldw	r2,-96(fp)
    11fc:	1887ff72 	custom	253,r3,r3,r2
    1200:	e0bff917 	ldw	r2,-28(fp)
    1204:	10c00015 	stw	r3,0(r2)
    1208:	e0ffe717 	ldw	r3,-100(fp)
    120c:	e0bfe917 	ldw	r2,-92(fp)
    1210:	1887ff72 	custom	253,r3,r3,r2
    1214:	e0bff917 	ldw	r2,-28(fp)
    1218:	10c00115 	stw	r3,4(r2)

        scratch[11].r = scratch[0].r + S_MUL(scratch[7].r,yb.r) + S_MUL(scratch[8].r,ya.r);
    121c:	e0ffdc17 	ldw	r3,-144(fp)
    1220:	e13fea17 	ldw	r4,-88(fp)
    1224:	e0bfd817 	ldw	r2,-160(fp)
    1228:	2085ff32 	custom	252,r2,r4,r2
    122c:	1887ff72 	custom	253,r3,r3,r2
    1230:	e13fec17 	ldw	r4,-80(fp)
    1234:	e0bfda17 	ldw	r2,-152(fp)
    1238:	2085ff32 	custom	252,r2,r4,r2
    123c:	1885ff72 	custom	253,r2,r3,r2
    1240:	e0bff215 	stw	r2,-56(fp)
        scratch[11].i = scratch[0].i + S_MUL(scratch[7].i,yb.r) + S_MUL(scratch[8].i,ya.r);
    1244:	e0ffdd17 	ldw	r3,-140(fp)
    1248:	e13feb17 	ldw	r4,-84(fp)
    124c:	e0bfd817 	ldw	r2,-160(fp)
    1250:	2085ff32 	custom	252,r2,r4,r2
    1254:	1887ff72 	custom	253,r3,r3,r2
    1258:	e13fed17 	ldw	r4,-76(fp)
    125c:	e0bfda17 	ldw	r2,-152(fp)
    1260:	2085ff32 	custom	252,r2,r4,r2
    1264:	1885ff72 	custom	253,r2,r3,r2
    1268:	e0bff315 	stw	r2,-52(fp)
        scratch[12].r = - S_MUL(scratch[10].i,yb.i) + S_MUL(scratch[9].i,ya.i);
    126c:	e0ffef17 	ldw	r3,-68(fp)
    1270:	e0bfdb17 	ldw	r2,-148(fp)
    1274:	1887ff32 	custom	252,r3,r3,r2
    1278:	e13ff117 	ldw	r4,-60(fp)
    127c:	e0bfd917 	ldw	r2,-156(fp)
    1280:	2085ff32 	custom	252,r2,r4,r2
    1284:	1885ffb2 	custom	254,r2,r3,r2
    1288:	e0bff415 	stw	r2,-48(fp)
        scratch[12].i = S_MUL(scratch[10].r,yb.i) - S_MUL(scratch[9].r,ya.i);
    128c:	e0fff017 	ldw	r3,-64(fp)
    1290:	e0bfd917 	ldw	r2,-156(fp)
    1294:	1887ff32 	custom	252,r3,r3,r2
    1298:	e13fee17 	ldw	r4,-72(fp)
    129c:	e0bfdb17 	ldw	r2,-148(fp)
    12a0:	2085ff32 	custom	252,r2,r4,r2
    12a4:	1885ffb2 	custom	254,r2,r3,r2
    12a8:	e0bff515 	stw	r2,-44(fp)

        C_ADD(*Fout2,scratch[11],scratch[12]);
    12ac:	e0fff217 	ldw	r3,-56(fp)
    12b0:	e0bff417 	ldw	r2,-48(fp)
    12b4:	1887ff72 	custom	253,r3,r3,r2
    12b8:	e0bffb17 	ldw	r2,-20(fp)
    12bc:	10c00015 	stw	r3,0(r2)
    12c0:	e0fff317 	ldw	r3,-52(fp)
    12c4:	e0bff517 	ldw	r2,-44(fp)
    12c8:	1887ff72 	custom	253,r3,r3,r2
    12cc:	e0bffb17 	ldw	r2,-20(fp)
    12d0:	10c00115 	stw	r3,4(r2)
        C_SUB(*Fout3,scratch[11],scratch[12]);
    12d4:	e0fff217 	ldw	r3,-56(fp)
    12d8:	e0bff417 	ldw	r2,-48(fp)
    12dc:	1887ffb2 	custom	254,r3,r3,r2
    12e0:	e0bffa17 	ldw	r2,-24(fp)
    12e4:	10c00015 	stw	r3,0(r2)
    12e8:	e0fff317 	ldw	r3,-52(fp)
    12ec:	e0bff517 	ldw	r2,-44(fp)
    12f0:	1887ffb2 	custom	254,r3,r3,r2
    12f4:	e0bffa17 	ldw	r2,-24(fp)
    12f8:	10c00115 	stw	r3,4(r2)

        ++Fout0;++Fout1;++Fout2;++Fout3;++Fout4;
    12fc:	e0bffd17 	ldw	r2,-12(fp)
    1300:	10800204 	addi	r2,r2,8
    1304:	e0bffd15 	stw	r2,-12(fp)
    1308:	e0bffc17 	ldw	r2,-16(fp)
    130c:	10800204 	addi	r2,r2,8
    1310:	e0bffc15 	stw	r2,-16(fp)
    1314:	e0bffb17 	ldw	r2,-20(fp)
    1318:	10800204 	addi	r2,r2,8
    131c:	e0bffb15 	stw	r2,-20(fp)
    1320:	e0bffa17 	ldw	r2,-24(fp)
    1324:	10800204 	addi	r2,r2,8
    1328:	e0bffa15 	stw	r2,-24(fp)
    132c:	e0bff917 	ldw	r2,-28(fp)
    1330:	10800204 	addi	r2,r2,8
    1334:	e0bff915 	stw	r2,-28(fp)
    for ( u=0; u<m; ++u ) {
    1338:	e0bff817 	ldw	r2,-32(fp)
    133c:	10800044 	addi	r2,r2,1
    1340:	e0bff815 	stw	r2,-32(fp)
    1344:	e0fff817 	ldw	r3,-32(fp)
    1348:	e0bfd417 	ldw	r2,-176(fp)
    134c:	18be7116 	blt	r3,r2,d14 <kf_bfly5+0x108>
    }
}
    1350:	0001883a 	nop
    1354:	0001883a 	nop
    1358:	e6fffe04 	addi	sp,fp,-8
    135c:	dfc00317 	ldw	ra,12(sp)
    1360:	df000217 	ldw	fp,8(sp)
    1364:	dc400117 	ldw	r17,4(sp)
    1368:	dc000017 	ldw	r16,0(sp)
    136c:	dec00404 	addi	sp,sp,16
    1370:	f800283a 	ret

00001374 <kf_bfly_generic>:
        const size_t fstride,
        const kiss_fft_cfg st,
        int m,
        int p
        )
{
    1374:	defff004 	addi	sp,sp,-64
    1378:	dfc00f15 	stw	ra,60(sp)
    137c:	df000e15 	stw	fp,56(sp)
    1380:	df000e04 	addi	fp,sp,56
    1384:	e13ff515 	stw	r4,-44(fp)
    1388:	e17ff415 	stw	r5,-48(fp)
    138c:	e1bff315 	stw	r6,-52(fp)
    1390:	e1fff215 	stw	r7,-56(fp)
    int u,k,q1,q;
    kiss_fft_cpx * twiddles = st->twiddles;
    1394:	e0bff317 	ldw	r2,-52(fp)
    1398:	10804204 	addi	r2,r2,264
    139c:	e0bffa15 	stw	r2,-24(fp)
    kiss_fft_cpx t;
    int Norig = st->nfft;
    13a0:	e0bff317 	ldw	r2,-52(fp)
    13a4:	10800017 	ldw	r2,0(r2)
    13a8:	e0bff915 	stw	r2,-28(fp)

    kiss_fft_cpx * scratch = (kiss_fft_cpx*)KISS_FFT_TMP_ALLOC(sizeof(kiss_fft_cpx)*p);
    13ac:	e0800217 	ldw	r2,8(fp)
    13b0:	100490fa 	slli	r2,r2,3
    13b4:	1009883a 	mov	r4,r2
    13b8:	00099d40 	call	99d4 <malloc>
    13bc:	e0bff815 	stw	r2,-32(fp)

    for ( u=0; u<m; ++u ) {
    13c0:	e03fff15 	stw	zero,-4(fp)
    13c4:	00009506 	br	161c <kf_bfly_generic+0x2a8>
        k=u;
    13c8:	e0bfff17 	ldw	r2,-4(fp)
    13cc:	e0bffe15 	stw	r2,-8(fp)
        for ( q1=0 ; q1<p ; ++q1 ) {
    13d0:	e03ffd15 	stw	zero,-12(fp)
    13d4:	00001306 	br	1424 <kf_bfly_generic+0xb0>
            scratch[q1] = Fout[ k  ];
    13d8:	e0bffe17 	ldw	r2,-8(fp)
    13dc:	100490fa 	slli	r2,r2,3
    13e0:	e0fff517 	ldw	r3,-44(fp)
    13e4:	1887883a 	add	r3,r3,r2
    13e8:	e0bffd17 	ldw	r2,-12(fp)
    13ec:	100490fa 	slli	r2,r2,3
    13f0:	e13ff817 	ldw	r4,-32(fp)
    13f4:	2085883a 	add	r2,r4,r2
    13f8:	19000017 	ldw	r4,0(r3)
    13fc:	11000015 	stw	r4,0(r2)
    1400:	18c00117 	ldw	r3,4(r3)
    1404:	10c00115 	stw	r3,4(r2)
            C_FIXDIV(scratch[q1],p);
            k += m;
    1408:	e0fffe17 	ldw	r3,-8(fp)
    140c:	e0bff217 	ldw	r2,-56(fp)
    1410:	1885883a 	add	r2,r3,r2
    1414:	e0bffe15 	stw	r2,-8(fp)
        for ( q1=0 ; q1<p ; ++q1 ) {
    1418:	e0bffd17 	ldw	r2,-12(fp)
    141c:	10800044 	addi	r2,r2,1
    1420:	e0bffd15 	stw	r2,-12(fp)
    1424:	e0fffd17 	ldw	r3,-12(fp)
    1428:	e0800217 	ldw	r2,8(fp)
    142c:	18bfea16 	blt	r3,r2,13d8 <kf_bfly_generic+0x64>
        }

        k=u;
    1430:	e0bfff17 	ldw	r2,-4(fp)
    1434:	e0bffe15 	stw	r2,-8(fp)
        for ( q1=0 ; q1<p ; ++q1 ) {
    1438:	e03ffd15 	stw	zero,-12(fp)
    143c:	00007106 	br	1604 <kf_bfly_generic+0x290>
            int twidx=0;
    1440:	e03ffb15 	stw	zero,-20(fp)
            Fout[ k ] = scratch[0];
    1444:	e0bffe17 	ldw	r2,-8(fp)
    1448:	100490fa 	slli	r2,r2,3
    144c:	e0fff517 	ldw	r3,-44(fp)
    1450:	1885883a 	add	r2,r3,r2
    1454:	e0fff817 	ldw	r3,-32(fp)
    1458:	19000017 	ldw	r4,0(r3)
    145c:	11000015 	stw	r4,0(r2)
    1460:	18c00117 	ldw	r3,4(r3)
    1464:	10c00115 	stw	r3,4(r2)
            for (q=1;q<p;++q ) {
    1468:	00800044 	movi	r2,1
    146c:	e0bffc15 	stw	r2,-16(fp)
    1470:	00005a06 	br	15dc <kf_bfly_generic+0x268>
                twidx += fstride * k;
    1474:	e0bffe17 	ldw	r2,-8(fp)
    1478:	e17ff417 	ldw	r5,-48(fp)
    147c:	1009883a 	mov	r4,r2
    1480:	000608c0 	call	608c <__mulsi3>
    1484:	1007883a 	mov	r3,r2
    1488:	e0bffb17 	ldw	r2,-20(fp)
    148c:	1885883a 	add	r2,r3,r2
    1490:	e0bffb15 	stw	r2,-20(fp)
                if (twidx>=Norig) twidx-=Norig;
    1494:	e0fffb17 	ldw	r3,-20(fp)
    1498:	e0bff917 	ldw	r2,-28(fp)
    149c:	18800416 	blt	r3,r2,14b0 <kf_bfly_generic+0x13c>
    14a0:	e0fffb17 	ldw	r3,-20(fp)
    14a4:	e0bff917 	ldw	r2,-28(fp)
    14a8:	1885c83a 	sub	r2,r3,r2
    14ac:	e0bffb15 	stw	r2,-20(fp)
                C_MUL(t,scratch[q] , twiddles[twidx] );
    14b0:	e0bffc17 	ldw	r2,-16(fp)
    14b4:	100490fa 	slli	r2,r2,3
    14b8:	e0fff817 	ldw	r3,-32(fp)
    14bc:	1885883a 	add	r2,r3,r2
    14c0:	10c00017 	ldw	r3,0(r2)
    14c4:	e0bffb17 	ldw	r2,-20(fp)
    14c8:	100490fa 	slli	r2,r2,3
    14cc:	e13ffa17 	ldw	r4,-24(fp)
    14d0:	2089883a 	add	r4,r4,r2
    14d4:	20800017 	ldw	r2,0(r4)
    14d8:	1887ff32 	custom	252,r3,r3,r2
    14dc:	e0bffc17 	ldw	r2,-16(fp)
    14e0:	100490fa 	slli	r2,r2,3
    14e4:	e13ff817 	ldw	r4,-32(fp)
    14e8:	2085883a 	add	r2,r4,r2
    14ec:	11000117 	ldw	r4,4(r2)
    14f0:	e0bffb17 	ldw	r2,-20(fp)
    14f4:	100490fa 	slli	r2,r2,3
    14f8:	e17ffa17 	ldw	r5,-24(fp)
    14fc:	288b883a 	add	r5,r5,r2
    1500:	28800117 	ldw	r2,4(r5)
    1504:	2085ff32 	custom	252,r2,r4,r2
    1508:	1885ffb2 	custom	254,r2,r3,r2
    150c:	e0bff615 	stw	r2,-40(fp)
    1510:	e0bffc17 	ldw	r2,-16(fp)
    1514:	100490fa 	slli	r2,r2,3
    1518:	e0fff817 	ldw	r3,-32(fp)
    151c:	1885883a 	add	r2,r3,r2
    1520:	10c00017 	ldw	r3,0(r2)
    1524:	e0bffb17 	ldw	r2,-20(fp)
    1528:	100490fa 	slli	r2,r2,3
    152c:	e13ffa17 	ldw	r4,-24(fp)
    1530:	2089883a 	add	r4,r4,r2
    1534:	20800117 	ldw	r2,4(r4)
    1538:	1887ff32 	custom	252,r3,r3,r2
    153c:	e0bffc17 	ldw	r2,-16(fp)
    1540:	100490fa 	slli	r2,r2,3
    1544:	e13ff817 	ldw	r4,-32(fp)
    1548:	2085883a 	add	r2,r4,r2
    154c:	11000117 	ldw	r4,4(r2)
    1550:	e0bffb17 	ldw	r2,-20(fp)
    1554:	100490fa 	slli	r2,r2,3
    1558:	e17ffa17 	ldw	r5,-24(fp)
    155c:	288b883a 	add	r5,r5,r2
    1560:	28800017 	ldw	r2,0(r5)
    1564:	2085ff32 	custom	252,r2,r4,r2
    1568:	1885ff72 	custom	253,r2,r3,r2
    156c:	e0bff715 	stw	r2,-36(fp)
                C_ADDTO( Fout[ k ] ,t);
    1570:	e0bffe17 	ldw	r2,-8(fp)
    1574:	100490fa 	slli	r2,r2,3
    1578:	e0fff517 	ldw	r3,-44(fp)
    157c:	1885883a 	add	r2,r3,r2
    1580:	11000017 	ldw	r4,0(r2)
    1584:	e0fff617 	ldw	r3,-40(fp)
    1588:	e0bffe17 	ldw	r2,-8(fp)
    158c:	100490fa 	slli	r2,r2,3
    1590:	e17ff517 	ldw	r5,-44(fp)
    1594:	2885883a 	add	r2,r5,r2
    1598:	20c7ff72 	custom	253,r3,r4,r3
    159c:	10c00015 	stw	r3,0(r2)
    15a0:	e0bffe17 	ldw	r2,-8(fp)
    15a4:	100490fa 	slli	r2,r2,3
    15a8:	e0fff517 	ldw	r3,-44(fp)
    15ac:	1885883a 	add	r2,r3,r2
    15b0:	11000117 	ldw	r4,4(r2)
    15b4:	e0fff717 	ldw	r3,-36(fp)
    15b8:	e0bffe17 	ldw	r2,-8(fp)
    15bc:	100490fa 	slli	r2,r2,3
    15c0:	e17ff517 	ldw	r5,-44(fp)
    15c4:	2885883a 	add	r2,r5,r2
    15c8:	20c7ff72 	custom	253,r3,r4,r3
    15cc:	10c00115 	stw	r3,4(r2)
            for (q=1;q<p;++q ) {
    15d0:	e0bffc17 	ldw	r2,-16(fp)
    15d4:	10800044 	addi	r2,r2,1
    15d8:	e0bffc15 	stw	r2,-16(fp)
    15dc:	e0fffc17 	ldw	r3,-16(fp)
    15e0:	e0800217 	ldw	r2,8(fp)
    15e4:	18bfa316 	blt	r3,r2,1474 <kf_bfly_generic+0x100>
            }
            k += m;
    15e8:	e0fffe17 	ldw	r3,-8(fp)
    15ec:	e0bff217 	ldw	r2,-56(fp)
    15f0:	1885883a 	add	r2,r3,r2
    15f4:	e0bffe15 	stw	r2,-8(fp)
        for ( q1=0 ; q1<p ; ++q1 ) {
    15f8:	e0bffd17 	ldw	r2,-12(fp)
    15fc:	10800044 	addi	r2,r2,1
    1600:	e0bffd15 	stw	r2,-12(fp)
    1604:	e0fffd17 	ldw	r3,-12(fp)
    1608:	e0800217 	ldw	r2,8(fp)
    160c:	18bf8c16 	blt	r3,r2,1440 <kf_bfly_generic+0xcc>
    for ( u=0; u<m; ++u ) {
    1610:	e0bfff17 	ldw	r2,-4(fp)
    1614:	10800044 	addi	r2,r2,1
    1618:	e0bfff15 	stw	r2,-4(fp)
    161c:	e0ffff17 	ldw	r3,-4(fp)
    1620:	e0bff217 	ldw	r2,-56(fp)
    1624:	18bf6816 	blt	r3,r2,13c8 <kf_bfly_generic+0x54>
        }
    }
    KISS_FFT_TMP_FREE(scratch);
    1628:	e13ff817 	ldw	r4,-32(fp)
    162c:	00099e40 	call	99e4 <free>
}
    1630:	0001883a 	nop
    1634:	e037883a 	mov	sp,fp
    1638:	dfc00117 	ldw	ra,4(sp)
    163c:	df000017 	ldw	fp,0(sp)
    1640:	dec00204 	addi	sp,sp,8
    1644:	f800283a 	ret

00001648 <kf_work>:
        const size_t fstride,
        int in_stride,
        int * factors,
        const kiss_fft_cfg st
        )
{
    1648:	defff404 	addi	sp,sp,-48
    164c:	dfc00b15 	stw	ra,44(sp)
    1650:	df000a15 	stw	fp,40(sp)
    1654:	df000a04 	addi	fp,sp,40
    1658:	e13ffb15 	stw	r4,-20(fp)
    165c:	e17ffa15 	stw	r5,-24(fp)
    1660:	e1bff915 	stw	r6,-28(fp)
    1664:	e1fff815 	stw	r7,-32(fp)
    kiss_fft_cpx * Fout_beg=Fout;
    1668:	e0bffb17 	ldw	r2,-20(fp)
    166c:	e0bfff15 	stw	r2,-4(fp)
    const int p=*factors++; /* the radix  */
    1670:	e0800217 	ldw	r2,8(fp)
    1674:	10c00104 	addi	r3,r2,4
    1678:	e0c00215 	stw	r3,8(fp)
    167c:	10800017 	ldw	r2,0(r2)
    1680:	e0bffe15 	stw	r2,-8(fp)
    const int m=*factors++; /* stage's fft length/p */
    1684:	e0800217 	ldw	r2,8(fp)
    1688:	10c00104 	addi	r3,r2,4
    168c:	e0c00215 	stw	r3,8(fp)
    1690:	10800017 	ldw	r2,0(r2)
    1694:	e0bffd15 	stw	r2,-12(fp)
    const kiss_fft_cpx * Fout_end = Fout + p*m;
    1698:	e17ffd17 	ldw	r5,-12(fp)
    169c:	e13ffe17 	ldw	r4,-8(fp)
    16a0:	000608c0 	call	608c <__mulsi3>
    16a4:	100490fa 	slli	r2,r2,3
    16a8:	e0fffb17 	ldw	r3,-20(fp)
    16ac:	1885883a 	add	r2,r3,r2
    16b0:	e0bffc15 	stw	r2,-16(fp)
        }
        return;
    }
#endif

    if (m==1) {
    16b4:	e0bffd17 	ldw	r2,-12(fp)
    16b8:	10800058 	cmpnei	r2,r2,1
    16bc:	1000151e 	bne	r2,zero,1714 <kf_work+0xcc>
        do{
            *Fout = *f;
    16c0:	e0bffb17 	ldw	r2,-20(fp)
    16c4:	e0fffa17 	ldw	r3,-24(fp)
    16c8:	19000017 	ldw	r4,0(r3)
    16cc:	11000015 	stw	r4,0(r2)
    16d0:	18c00117 	ldw	r3,4(r3)
    16d4:	10c00115 	stw	r3,4(r2)
            f += fstride*in_stride;
    16d8:	e0bff817 	ldw	r2,-32(fp)
    16dc:	e17ff917 	ldw	r5,-28(fp)
    16e0:	1009883a 	mov	r4,r2
    16e4:	000608c0 	call	608c <__mulsi3>
    16e8:	100490fa 	slli	r2,r2,3
    16ec:	e0fffa17 	ldw	r3,-24(fp)
    16f0:	1885883a 	add	r2,r3,r2
    16f4:	e0bffa15 	stw	r2,-24(fp)
        }while(++Fout != Fout_end );
    16f8:	e0bffb17 	ldw	r2,-20(fp)
    16fc:	10800204 	addi	r2,r2,8
    1700:	e0bffb15 	stw	r2,-20(fp)
    1704:	e0fffb17 	ldw	r3,-20(fp)
    1708:	e0bffc17 	ldw	r2,-16(fp)
    170c:	18bfec1e 	bne	r3,r2,16c0 <kf_work+0x78>
    1710:	00001e06 	br	178c <kf_work+0x144>
        do{
            // recursive call:
            // DFT of size m*p performed by doing
            // p instances of smaller DFTs of size m, 
            // each one takes a decimated version of the input
            kf_work( Fout , f, fstride*p, in_stride, factors,st);
    1714:	e0bffe17 	ldw	r2,-8(fp)
    1718:	e17ff917 	ldw	r5,-28(fp)
    171c:	1009883a 	mov	r4,r2
    1720:	000608c0 	call	608c <__mulsi3>
    1724:	1007883a 	mov	r3,r2
    1728:	e0800317 	ldw	r2,12(fp)
    172c:	d8800115 	stw	r2,4(sp)
    1730:	e0800217 	ldw	r2,8(fp)
    1734:	d8800015 	stw	r2,0(sp)
    1738:	e1fff817 	ldw	r7,-32(fp)
    173c:	180d883a 	mov	r6,r3
    1740:	e17ffa17 	ldw	r5,-24(fp)
    1744:	e13ffb17 	ldw	r4,-20(fp)
    1748:	00016480 	call	1648 <kf_work>
            f += fstride*in_stride;
    174c:	e0bff817 	ldw	r2,-32(fp)
    1750:	e17ff917 	ldw	r5,-28(fp)
    1754:	1009883a 	mov	r4,r2
    1758:	000608c0 	call	608c <__mulsi3>
    175c:	100490fa 	slli	r2,r2,3
    1760:	e0fffa17 	ldw	r3,-24(fp)
    1764:	1885883a 	add	r2,r3,r2
    1768:	e0bffa15 	stw	r2,-24(fp)
        }while( (Fout += m) != Fout_end );
    176c:	e0bffd17 	ldw	r2,-12(fp)
    1770:	100490fa 	slli	r2,r2,3
    1774:	e0fffb17 	ldw	r3,-20(fp)
    1778:	1885883a 	add	r2,r3,r2
    177c:	e0bffb15 	stw	r2,-20(fp)
    1780:	e0fffb17 	ldw	r3,-20(fp)
    1784:	e0bffc17 	ldw	r2,-16(fp)
    1788:	18bfe21e 	bne	r3,r2,1714 <kf_work+0xcc>
    }

    Fout=Fout_beg;
    178c:	e0bfff17 	ldw	r2,-4(fp)
    1790:	e0bffb15 	stw	r2,-20(fp)

    // recombine the p smaller DFTs 
    switch (p) {
    1794:	e0bffe17 	ldw	r2,-8(fp)
    1798:	10800160 	cmpeqi	r2,r2,5
    179c:	1000241e 	bne	r2,zero,1830 <kf_work+0x1e8>
    17a0:	e0bffe17 	ldw	r2,-8(fp)
    17a4:	10800188 	cmpgei	r2,r2,6
    17a8:	1000271e 	bne	r2,zero,1848 <kf_work+0x200>
    17ac:	e0bffe17 	ldw	r2,-8(fp)
    17b0:	10800120 	cmpeqi	r2,r2,4
    17b4:	1000171e 	bne	r2,zero,1814 <kf_work+0x1cc>
    17b8:	e0bffe17 	ldw	r2,-8(fp)
    17bc:	10800148 	cmpgei	r2,r2,5
    17c0:	1000211e 	bne	r2,zero,1848 <kf_work+0x200>
    17c4:	e0bffe17 	ldw	r2,-8(fp)
    17c8:	108000a0 	cmpeqi	r2,r2,2
    17cc:	1000041e 	bne	r2,zero,17e0 <kf_work+0x198>
    17d0:	e0bffe17 	ldw	r2,-8(fp)
    17d4:	108000e0 	cmpeqi	r2,r2,3
    17d8:	1000071e 	bne	r2,zero,17f8 <kf_work+0x1b0>
    17dc:	00001a06 	br	1848 <kf_work+0x200>
        case 2: kf_bfly2(Fout,fstride,st,m); break;
    17e0:	e1fffd17 	ldw	r7,-12(fp)
    17e4:	e1800317 	ldw	r6,12(fp)
    17e8:	e17ff917 	ldw	r5,-28(fp)
    17ec:	e13ffb17 	ldw	r4,-20(fp)
    17f0:	00002640 	call	264 <kf_bfly2>
    17f4:	00001c06 	br	1868 <kf_work+0x220>
        case 3: kf_bfly3(Fout,fstride,st,m); break; 
    17f8:	e0bffd17 	ldw	r2,-12(fp)
    17fc:	100f883a 	mov	r7,r2
    1800:	e1800317 	ldw	r6,12(fp)
    1804:	e17ff917 	ldw	r5,-28(fp)
    1808:	e13ffb17 	ldw	r4,-20(fp)
    180c:	000086c0 	call	86c <kf_bfly3>
    1810:	00001506 	br	1868 <kf_work+0x220>
        case 4: kf_bfly4(Fout,fstride,st,m); break;
    1814:	e0bffd17 	ldw	r2,-12(fp)
    1818:	100f883a 	mov	r7,r2
    181c:	e1800317 	ldw	r6,12(fp)
    1820:	e17ff917 	ldw	r5,-28(fp)
    1824:	e13ffb17 	ldw	r4,-20(fp)
    1828:	00003b80 	call	3b8 <kf_bfly4>
    182c:	00000e06 	br	1868 <kf_work+0x220>
        case 5: kf_bfly5(Fout,fstride,st,m); break; 
    1830:	e1fffd17 	ldw	r7,-12(fp)
    1834:	e1800317 	ldw	r6,12(fp)
    1838:	e17ff917 	ldw	r5,-28(fp)
    183c:	e13ffb17 	ldw	r4,-20(fp)
    1840:	0000c0c0 	call	c0c <kf_bfly5>
    1844:	00000806 	br	1868 <kf_work+0x220>
        default: kf_bfly_generic(Fout,fstride,st,m,p); break;
    1848:	e0bffe17 	ldw	r2,-8(fp)
    184c:	d8800015 	stw	r2,0(sp)
    1850:	e1fffd17 	ldw	r7,-12(fp)
    1854:	e1800317 	ldw	r6,12(fp)
    1858:	e17ff917 	ldw	r5,-28(fp)
    185c:	e13ffb17 	ldw	r4,-20(fp)
    1860:	00013740 	call	1374 <kf_bfly_generic>
    1864:	0001883a 	nop
    }
}
    1868:	0001883a 	nop
    186c:	e037883a 	mov	sp,fp
    1870:	dfc00117 	ldw	ra,4(sp)
    1874:	df000017 	ldw	fp,0(sp)
    1878:	dec00204 	addi	sp,sp,8
    187c:	f800283a 	ret

00001880 <kf_factor>:
    where 
    p[i] * m[i] = m[i-1]
    m0 = n                  */
static 
void kf_factor(int n,int * facbuf)
{
    1880:	defff904 	addi	sp,sp,-28
    1884:	dfc00615 	stw	ra,24(sp)
    1888:	df000515 	stw	fp,20(sp)
    188c:	df000504 	addi	fp,sp,20
    1890:	e13ffc15 	stw	r4,-16(fp)
    1894:	e17ffb15 	stw	r5,-20(fp)
    int p=4;
    1898:	00800104 	movi	r2,4
    189c:	e0bfff15 	stw	r2,-4(fp)
    double floor_sqrt;
    floor_sqrt = floor( sqrt((double)n) );
    18a0:	e13ffc17 	ldw	r4,-16(fp)
    18a4:	00096500 	call	9650 <__floatsidf>
    18a8:	100d883a 	mov	r6,r2
    18ac:	180f883a 	mov	r7,r3
    18b0:	3009883a 	mov	r4,r6
    18b4:	380b883a 	mov	r5,r7
    18b8:	00027b40 	call	27b4 <sqrt>
    18bc:	100d883a 	mov	r6,r2
    18c0:	180f883a 	mov	r7,r3
    18c4:	3009883a 	mov	r4,r6
    18c8:	380b883a 	mov	r5,r7
    18cc:	00024700 	call	2470 <floor>
    18d0:	e0bffd15 	stw	r2,-12(fp)
    18d4:	e0fffe15 	stw	r3,-8(fp)

    /*factor out powers of 4, powers of 2, then any remaining primes */
    do {
        while (n % p) {
    18d8:	00001d06 	br	1950 <kf_factor+0xd0>
            switch (p) {
    18dc:	e0bfff17 	ldw	r2,-4(fp)
    18e0:	108000a0 	cmpeqi	r2,r2,2
    18e4:	1000061e 	bne	r2,zero,1900 <kf_factor+0x80>
    18e8:	e0bfff17 	ldw	r2,-4(fp)
    18ec:	10800118 	cmpnei	r2,r2,4
    18f0:	1000061e 	bne	r2,zero,190c <kf_factor+0x8c>
                case 4: p = 2; break;
    18f4:	00800084 	movi	r2,2
    18f8:	e0bfff15 	stw	r2,-4(fp)
    18fc:	00000706 	br	191c <kf_factor+0x9c>
                case 2: p = 3; break;
    1900:	008000c4 	movi	r2,3
    1904:	e0bfff15 	stw	r2,-4(fp)
    1908:	00000406 	br	191c <kf_factor+0x9c>
                default: p += 2; break;
    190c:	e0bfff17 	ldw	r2,-4(fp)
    1910:	10800084 	addi	r2,r2,2
    1914:	e0bfff15 	stw	r2,-4(fp)
    1918:	0001883a 	nop
            }
            if (p > floor_sqrt)
    191c:	e13fff17 	ldw	r4,-4(fp)
    1920:	00096500 	call	9650 <__floatsidf>
    1924:	1009883a 	mov	r4,r2
    1928:	180b883a 	mov	r5,r3
    192c:	200d883a 	mov	r6,r4
    1930:	280f883a 	mov	r7,r5
    1934:	e13ffd17 	ldw	r4,-12(fp)
    1938:	e17ffe17 	ldw	r5,-8(fp)
    193c:	00083dc0 	call	83dc <__ledf2>
    1940:	10000116 	blt	r2,zero,1948 <kf_factor+0xc8>
    1944:	00000206 	br	1950 <kf_factor+0xd0>
                p = n;          /* no more factors, skip to end */
    1948:	e0bffc17 	ldw	r2,-16(fp)
    194c:	e0bfff15 	stw	r2,-4(fp)
        while (n % p) {
    1950:	e0bffc17 	ldw	r2,-16(fp)
    1954:	e17fff17 	ldw	r5,-4(fp)
    1958:	1009883a 	mov	r4,r2
    195c:	0005f580 	call	5f58 <__modsi3>
    1960:	103fde1e 	bne	r2,zero,18dc <kf_factor+0x5c>
        }
        n /= p;
    1964:	e17fff17 	ldw	r5,-4(fp)
    1968:	e13ffc17 	ldw	r4,-16(fp)
    196c:	0005ed80 	call	5ed8 <__divsi3>
    1970:	e0bffc15 	stw	r2,-16(fp)
        *facbuf++ = p;
    1974:	e0bffb17 	ldw	r2,-20(fp)
    1978:	10c00104 	addi	r3,r2,4
    197c:	e0fffb15 	stw	r3,-20(fp)
    1980:	e0ffff17 	ldw	r3,-4(fp)
    1984:	10c00015 	stw	r3,0(r2)
        *facbuf++ = n;
    1988:	e0bffb17 	ldw	r2,-20(fp)
    198c:	10c00104 	addi	r3,r2,4
    1990:	e0fffb15 	stw	r3,-20(fp)
    1994:	e0fffc17 	ldw	r3,-16(fp)
    1998:	10c00015 	stw	r3,0(r2)
    } while (n > 1);
    199c:	e0bffc17 	ldw	r2,-16(fp)
    19a0:	10800088 	cmpgei	r2,r2,2
    19a4:	103fea1e 	bne	r2,zero,1950 <kf_factor+0xd0>
}
    19a8:	0001883a 	nop
    19ac:	0001883a 	nop
    19b0:	e037883a 	mov	sp,fp
    19b4:	dfc00117 	ldw	ra,4(sp)
    19b8:	df000017 	ldw	fp,0(sp)
    19bc:	dec00204 	addi	sp,sp,8
    19c0:	f800283a 	ret

000019c4 <kiss_fft_alloc>:
 *
 * The return value is a contiguous block of memory, allocated with malloc.  As such,
 * It can be freed with free(), rather than a kiss_fft-specific function.
 * */
kiss_fft_cfg kiss_fft_alloc(int nfft,int inverse_fft,void * mem,size_t * lenmem )
{
    19c4:	deffef04 	addi	sp,sp,-68
    19c8:	dfc01015 	stw	ra,64(sp)
    19cc:	df000f15 	stw	fp,60(sp)
    19d0:	dcc00e15 	stw	r19,56(sp)
    19d4:	dc800d15 	stw	r18,52(sp)
    19d8:	dc400c15 	stw	r17,48(sp)
    19dc:	dc000b15 	stw	r16,44(sp)
    19e0:	df000f04 	addi	fp,sp,60
    19e4:	e13ff415 	stw	r4,-48(fp)
    19e8:	e17ff315 	stw	r5,-52(fp)
    19ec:	e1bff215 	stw	r6,-56(fp)
    19f0:	e1fff115 	stw	r7,-60(fp)
    kiss_fft_cfg st=NULL;
    19f4:	e03ffb15 	stw	zero,-20(fp)
    size_t memneeded = sizeof(struct kiss_fft_state)
        + sizeof(kiss_fft_cpx)*(nfft-1); /* twiddle factors*/
    19f8:	e0bff417 	ldw	r2,-48(fp)
    19fc:	10800844 	addi	r2,r2,33
    size_t memneeded = sizeof(struct kiss_fft_state)
    1a00:	100490fa 	slli	r2,r2,3
    1a04:	e0bff715 	stw	r2,-36(fp)

    if ( lenmem==NULL ) {
    1a08:	e0bff117 	ldw	r2,-60(fp)
    1a0c:	1000041e 	bne	r2,zero,1a20 <kiss_fft_alloc+0x5c>
        st = ( kiss_fft_cfg)KISS_FFT_MALLOC( memneeded );
    1a10:	e13ff717 	ldw	r4,-36(fp)
    1a14:	00099d40 	call	99d4 <malloc>
    1a18:	e0bffb15 	stw	r2,-20(fp)
    1a1c:	00000b06 	br	1a4c <kiss_fft_alloc+0x88>
    }else{
        if (mem != NULL && *lenmem >= memneeded)
    1a20:	e0bff217 	ldw	r2,-56(fp)
    1a24:	10000626 	beq	r2,zero,1a40 <kiss_fft_alloc+0x7c>
    1a28:	e0bff117 	ldw	r2,-60(fp)
    1a2c:	10c00017 	ldw	r3,0(r2)
    1a30:	e0bff717 	ldw	r2,-36(fp)
    1a34:	18800236 	bltu	r3,r2,1a40 <kiss_fft_alloc+0x7c>
            st = (kiss_fft_cfg)mem;
    1a38:	e0bff217 	ldw	r2,-56(fp)
    1a3c:	e0bffb15 	stw	r2,-20(fp)
        *lenmem = memneeded;
    1a40:	e0bff117 	ldw	r2,-60(fp)
    1a44:	e0fff717 	ldw	r3,-36(fp)
    1a48:	10c00015 	stw	r3,0(r2)
    }
    if (st) {
    1a4c:	e0bffb17 	ldw	r2,-20(fp)
    1a50:	10006126 	beq	r2,zero,1bd8 <kiss_fft_alloc+0x214>
        int i;
        st->nfft=nfft;
    1a54:	e0bffb17 	ldw	r2,-20(fp)
    1a58:	e0fff417 	ldw	r3,-48(fp)
    1a5c:	10c00015 	stw	r3,0(r2)
        st->inverse = inverse_fft;
    1a60:	e0bffb17 	ldw	r2,-20(fp)
    1a64:	e0fff317 	ldw	r3,-52(fp)
    1a68:	10c00115 	stw	r3,4(r2)

        for (i=0;i<nfft;++i) {
    1a6c:	e03ffa15 	stw	zero,-24(fp)
    1a70:	00005106 	br	1bb8 <kiss_fft_alloc+0x1f4>
            const double pi=3.141592653589793238462643383279502884197169399375105820974944;
    1a74:	00980034 	movhi	r2,24576
    1a78:	e0bff515 	stw	r2,-44(fp)
    1a7c:	00900274 	movhi	r2,16393
    1a80:	10887ec4 	addi	r2,r2,8699
    1a84:	e0bff615 	stw	r2,-40(fp)
            double phase = -2*pi*i / nfft;
    1a88:	000d883a 	mov	r6,zero
    1a8c:	01f00034 	movhi	r7,49152
    1a90:	e13ff517 	ldw	r4,-44(fp)
    1a94:	e17ff617 	ldw	r5,-40(fp)
    1a98:	00084c40 	call	84c4 <__muldf3>
    1a9c:	1009883a 	mov	r4,r2
    1aa0:	180b883a 	mov	r5,r3
    1aa4:	2025883a 	mov	r18,r4
    1aa8:	2827883a 	mov	r19,r5
    1aac:	e13ffa17 	ldw	r4,-24(fp)
    1ab0:	00096500 	call	9650 <__floatsidf>
    1ab4:	1009883a 	mov	r4,r2
    1ab8:	180b883a 	mov	r5,r3
    1abc:	200d883a 	mov	r6,r4
    1ac0:	280f883a 	mov	r7,r5
    1ac4:	9009883a 	mov	r4,r18
    1ac8:	980b883a 	mov	r5,r19
    1acc:	00084c40 	call	84c4 <__muldf3>
    1ad0:	1009883a 	mov	r4,r2
    1ad4:	180b883a 	mov	r5,r3
    1ad8:	2025883a 	mov	r18,r4
    1adc:	2827883a 	mov	r19,r5
    1ae0:	e13ff417 	ldw	r4,-48(fp)
    1ae4:	00096500 	call	9650 <__floatsidf>
    1ae8:	1009883a 	mov	r4,r2
    1aec:	180b883a 	mov	r5,r3
    1af0:	200d883a 	mov	r6,r4
    1af4:	280f883a 	mov	r7,r5
    1af8:	9009883a 	mov	r4,r18
    1afc:	980b883a 	mov	r5,r19
    1b00:	00079600 	call	7960 <__divdf3>
    1b04:	1009883a 	mov	r4,r2
    1b08:	180b883a 	mov	r5,r3
    1b0c:	e13ff815 	stw	r4,-32(fp)
    1b10:	e17ff915 	stw	r5,-28(fp)
            if (st->inverse)
    1b14:	e0bffb17 	ldw	r2,-20(fp)
    1b18:	10800117 	ldw	r2,4(r2)
    1b1c:	10000526 	beq	r2,zero,1b34 <kiss_fft_alloc+0x170>
                phase *= -1;
    1b20:	e43ff817 	ldw	r16,-32(fp)
    1b24:	e0bff917 	ldw	r2,-28(fp)
    1b28:	1460003c 	xorhi	r17,r2,32768
    1b2c:	e43ff815 	stw	r16,-32(fp)
    1b30:	e47ff915 	stw	r17,-28(fp)
            kf_cexp(st->twiddles+i, phase );
    1b34:	e13ff817 	ldw	r4,-32(fp)
    1b38:	e17ff917 	ldw	r5,-28(fp)
    1b3c:	00023c00 	call	23c0 <cos>
    1b40:	100d883a 	mov	r6,r2
    1b44:	180f883a 	mov	r7,r3
    1b48:	e0bffb17 	ldw	r2,-20(fp)
    1b4c:	10c04204 	addi	r3,r2,264
    1b50:	e0bffa17 	ldw	r2,-24(fp)
    1b54:	100490fa 	slli	r2,r2,3
    1b58:	18a5883a 	add	r18,r3,r2
    1b5c:	3009883a 	mov	r4,r6
    1b60:	380b883a 	mov	r5,r7
    1b64:	00098040 	call	9804 <__truncdfsf2>
    1b68:	1007883a 	mov	r3,r2
    1b6c:	90c00015 	stw	r3,0(r18)
    1b70:	e13ff817 	ldw	r4,-32(fp)
    1b74:	e17ff917 	ldw	r5,-28(fp)
    1b78:	00026540 	call	2654 <sin>
    1b7c:	100d883a 	mov	r6,r2
    1b80:	180f883a 	mov	r7,r3
    1b84:	e0bffb17 	ldw	r2,-20(fp)
    1b88:	10c04204 	addi	r3,r2,264
    1b8c:	e0bffa17 	ldw	r2,-24(fp)
    1b90:	100490fa 	slli	r2,r2,3
    1b94:	18a5883a 	add	r18,r3,r2
    1b98:	3009883a 	mov	r4,r6
    1b9c:	380b883a 	mov	r5,r7
    1ba0:	00098040 	call	9804 <__truncdfsf2>
    1ba4:	1007883a 	mov	r3,r2
    1ba8:	90c00115 	stw	r3,4(r18)
        for (i=0;i<nfft;++i) {
    1bac:	e0bffa17 	ldw	r2,-24(fp)
    1bb0:	10800044 	addi	r2,r2,1
    1bb4:	e0bffa15 	stw	r2,-24(fp)
    1bb8:	e0fffa17 	ldw	r3,-24(fp)
    1bbc:	e0bff417 	ldw	r2,-48(fp)
    1bc0:	18bfac16 	blt	r3,r2,1a74 <kiss_fft_alloc+0xb0>
        }

        kf_factor(nfft,st->factors);
    1bc4:	e0bffb17 	ldw	r2,-20(fp)
    1bc8:	10800204 	addi	r2,r2,8
    1bcc:	100b883a 	mov	r5,r2
    1bd0:	e13ff417 	ldw	r4,-48(fp)
    1bd4:	00018800 	call	1880 <kf_factor>
    }
    return st;
    1bd8:	e0bffb17 	ldw	r2,-20(fp)
}
    1bdc:	e6fffc04 	addi	sp,fp,-16
    1be0:	dfc00517 	ldw	ra,20(sp)
    1be4:	df000417 	ldw	fp,16(sp)
    1be8:	dcc00317 	ldw	r19,12(sp)
    1bec:	dc800217 	ldw	r18,8(sp)
    1bf0:	dc400117 	ldw	r17,4(sp)
    1bf4:	dc000017 	ldw	r16,0(sp)
    1bf8:	dec00604 	addi	sp,sp,24
    1bfc:	f800283a 	ret

00001c00 <kiss_fft_stride>:


void kiss_fft_stride(kiss_fft_cfg st,const kiss_fft_cpx *fin,kiss_fft_cpx *fout,int in_stride)
{
    1c00:	defff704 	addi	sp,sp,-36
    1c04:	dfc00815 	stw	ra,32(sp)
    1c08:	df000715 	stw	fp,28(sp)
    1c0c:	df000704 	addi	fp,sp,28
    1c10:	e13ffe15 	stw	r4,-8(fp)
    1c14:	e17ffd15 	stw	r5,-12(fp)
    1c18:	e1bffc15 	stw	r6,-16(fp)
    1c1c:	e1fffb15 	stw	r7,-20(fp)
    if (fin == fout) {
    1c20:	e0fffd17 	ldw	r3,-12(fp)
    1c24:	e0bffc17 	ldw	r2,-16(fp)
    1c28:	18801a1e 	bne	r3,r2,1c94 <kiss_fft_stride+0x94>
        //NOTE: this is not really an in-place FFT algorithm.
        //It just performs an out-of-place FFT into a temp buffer
        kiss_fft_cpx * tmpbuf = (kiss_fft_cpx*)KISS_FFT_TMP_ALLOC( sizeof(kiss_fft_cpx)*st->nfft);
    1c2c:	e0bffe17 	ldw	r2,-8(fp)
    1c30:	10800017 	ldw	r2,0(r2)
    1c34:	100490fa 	slli	r2,r2,3
    1c38:	1009883a 	mov	r4,r2
    1c3c:	00099d40 	call	99d4 <malloc>
    1c40:	e0bfff15 	stw	r2,-4(fp)
        kf_work(tmpbuf,fin,1,in_stride, st->factors,st);
    1c44:	e0bffe17 	ldw	r2,-8(fp)
    1c48:	10800204 	addi	r2,r2,8
    1c4c:	e0fffe17 	ldw	r3,-8(fp)
    1c50:	d8c00115 	stw	r3,4(sp)
    1c54:	d8800015 	stw	r2,0(sp)
    1c58:	e1fffb17 	ldw	r7,-20(fp)
    1c5c:	01800044 	movi	r6,1
    1c60:	e17ffd17 	ldw	r5,-12(fp)
    1c64:	e13fff17 	ldw	r4,-4(fp)
    1c68:	00016480 	call	1648 <kf_work>
        memcpy(fout,tmpbuf,sizeof(kiss_fft_cpx)*st->nfft);
    1c6c:	e0bffe17 	ldw	r2,-8(fp)
    1c70:	10800017 	ldw	r2,0(r2)
    1c74:	100490fa 	slli	r2,r2,3
    1c78:	100d883a 	mov	r6,r2
    1c7c:	e17fff17 	ldw	r5,-4(fp)
    1c80:	e13ffc17 	ldw	r4,-16(fp)
    1c84:	000a1d40 	call	a1d4 <memcpy>
        KISS_FFT_TMP_FREE(tmpbuf);
    1c88:	e13fff17 	ldw	r4,-4(fp)
    1c8c:	00099e40 	call	99e4 <free>
    }else{
        kf_work( fout, fin, 1,in_stride, st->factors,st );
    }
}
    1c90:	00000a06 	br	1cbc <kiss_fft_stride+0xbc>
        kf_work( fout, fin, 1,in_stride, st->factors,st );
    1c94:	e0bffe17 	ldw	r2,-8(fp)
    1c98:	10800204 	addi	r2,r2,8
    1c9c:	e0fffe17 	ldw	r3,-8(fp)
    1ca0:	d8c00115 	stw	r3,4(sp)
    1ca4:	d8800015 	stw	r2,0(sp)
    1ca8:	e1fffb17 	ldw	r7,-20(fp)
    1cac:	01800044 	movi	r6,1
    1cb0:	e17ffd17 	ldw	r5,-12(fp)
    1cb4:	e13ffc17 	ldw	r4,-16(fp)
    1cb8:	00016480 	call	1648 <kf_work>
}
    1cbc:	0001883a 	nop
    1cc0:	e037883a 	mov	sp,fp
    1cc4:	dfc00117 	ldw	ra,4(sp)
    1cc8:	df000017 	ldw	fp,0(sp)
    1ccc:	dec00204 	addi	sp,sp,8
    1cd0:	f800283a 	ret

00001cd4 <kiss_fft>:

void kiss_fft(kiss_fft_cfg cfg,const kiss_fft_cpx *fin,kiss_fft_cpx *fout)
{
    1cd4:	defffb04 	addi	sp,sp,-20
    1cd8:	dfc00415 	stw	ra,16(sp)
    1cdc:	df000315 	stw	fp,12(sp)
    1ce0:	df000304 	addi	fp,sp,12
    1ce4:	e13fff15 	stw	r4,-4(fp)
    1ce8:	e17ffe15 	stw	r5,-8(fp)
    1cec:	e1bffd15 	stw	r6,-12(fp)
    kiss_fft_stride(cfg,fin,fout,1);
    1cf0:	01c00044 	movi	r7,1
    1cf4:	e1bffd17 	ldw	r6,-12(fp)
    1cf8:	e17ffe17 	ldw	r5,-8(fp)
    1cfc:	e13fff17 	ldw	r4,-4(fp)
    1d00:	0001c000 	call	1c00 <kiss_fft_stride>
}
    1d04:	0001883a 	nop
    1d08:	e037883a 	mov	sp,fp
    1d0c:	dfc00117 	ldw	ra,4(sp)
    1d10:	df000017 	ldw	fp,0(sp)
    1d14:	dec00204 	addi	sp,sp,8
    1d18:	f800283a 	ret

00001d1c <kiss_fft_cleanup>:


void kiss_fft_cleanup(void)
{
    1d1c:	deffff04 	addi	sp,sp,-4
    1d20:	df000015 	stw	fp,0(sp)
    1d24:	d839883a 	mov	fp,sp
    // nothing needed any more
}
    1d28:	0001883a 	nop
    1d2c:	e037883a 	mov	sp,fp
    1d30:	df000017 	ldw	fp,0(sp)
    1d34:	dec00104 	addi	sp,sp,4
    1d38:	f800283a 	ret

00001d3c <kiss_fft_next_fast_size>:

int kiss_fft_next_fast_size(int n)
{
    1d3c:	defffc04 	addi	sp,sp,-16
    1d40:	dfc00315 	stw	ra,12(sp)
    1d44:	df000215 	stw	fp,8(sp)
    1d48:	df000204 	addi	fp,sp,8
    1d4c:	e13ffe15 	stw	r4,-8(fp)
    while(1) {
        int m=n;
    1d50:	e0bffe17 	ldw	r2,-8(fp)
    1d54:	e0bfff15 	stw	r2,-4(fp)
        while ( (m%2) == 0 ) m/=2;
    1d58:	00000506 	br	1d70 <kiss_fft_next_fast_size+0x34>
    1d5c:	e0bfff17 	ldw	r2,-4(fp)
    1d60:	1006d7fa 	srli	r3,r2,31
    1d64:	1885883a 	add	r2,r3,r2
    1d68:	1005d07a 	srai	r2,r2,1
    1d6c:	e0bfff15 	stw	r2,-4(fp)
    1d70:	e0bfff17 	ldw	r2,-4(fp)
    1d74:	1080004c 	andi	r2,r2,1
    1d78:	103ff826 	beq	r2,zero,1d5c <kiss_fft_next_fast_size+0x20>
        while ( (m%3) == 0 ) m/=3;
    1d7c:	00000506 	br	1d94 <kiss_fft_next_fast_size+0x58>
    1d80:	e0bfff17 	ldw	r2,-4(fp)
    1d84:	014000c4 	movi	r5,3
    1d88:	1009883a 	mov	r4,r2
    1d8c:	0005ed80 	call	5ed8 <__divsi3>
    1d90:	e0bfff15 	stw	r2,-4(fp)
    1d94:	e0bfff17 	ldw	r2,-4(fp)
    1d98:	014000c4 	movi	r5,3
    1d9c:	1009883a 	mov	r4,r2
    1da0:	0005f580 	call	5f58 <__modsi3>
    1da4:	103ff626 	beq	r2,zero,1d80 <kiss_fft_next_fast_size+0x44>
        while ( (m%5) == 0 ) m/=5;
    1da8:	00000506 	br	1dc0 <kiss_fft_next_fast_size+0x84>
    1dac:	e0bfff17 	ldw	r2,-4(fp)
    1db0:	01400144 	movi	r5,5
    1db4:	1009883a 	mov	r4,r2
    1db8:	0005ed80 	call	5ed8 <__divsi3>
    1dbc:	e0bfff15 	stw	r2,-4(fp)
    1dc0:	e0bfff17 	ldw	r2,-4(fp)
    1dc4:	01400144 	movi	r5,5
    1dc8:	1009883a 	mov	r4,r2
    1dcc:	0005f580 	call	5f58 <__modsi3>
    1dd0:	103ff626 	beq	r2,zero,1dac <kiss_fft_next_fast_size+0x70>
        if (m<=1)
    1dd4:	e0bfff17 	ldw	r2,-4(fp)
    1dd8:	10800088 	cmpgei	r2,r2,2
    1ddc:	10000426 	beq	r2,zero,1df0 <kiss_fft_next_fast_size+0xb4>
            break; /* n is completely factorable by twos, threes, and fives */
        n++;
    1de0:	e0bffe17 	ldw	r2,-8(fp)
    1de4:	10800044 	addi	r2,r2,1
    1de8:	e0bffe15 	stw	r2,-8(fp)
    while(1) {
    1dec:	003fd806 	br	1d50 <kiss_fft_next_fast_size+0x14>
            break; /* n is completely factorable by twos, threes, and fives */
    1df0:	0001883a 	nop
    }
    return n;
    1df4:	e0bffe17 	ldw	r2,-8(fp)
}
    1df8:	e037883a 	mov	sp,fp
    1dfc:	dfc00117 	ldw	ra,4(sp)
    1e00:	df000017 	ldw	fp,0(sp)
    1e04:	dec00204 	addi	sp,sp,8
    1e08:	f800283a 	ret

00001e0c <main>:
 *  1. records audio for 10 seconds when KEY[0] is pressed. LEDR[0] is lit
 *     while recording.
 *  2. plays the recorded audio when KEY[1] is pressed. LEDR[1] is lit while
 *     playing.
 ******************************************************************************/
int main(void) {
    1e0c:	defffd04 	addi	sp,sp,-12
    1e10:	dfc00215 	stw	ra,8(sp)
    1e14:	df000115 	stw	fp,4(sp)
    1e18:	dc000015 	stw	r16,0(sp)
    1e1c:	df000104 	addi	fp,sp,4
    1e20:	023ffd34 	movhi	r8,65524
    1e24:	4209f904 	addi	r8,r8,10212
    1e28:	da37883a 	add	sp,sp,r8
    /* Declare volatile pointers to I/O registers (volatile means that IO load
       and store instructions will be used to access these pointer locations,
       instead of regular memory loads and stores) */
    volatile int *red_LED_ptr = (int *)LED_BASE;
    1e2c:	00bfc834 	movhi	r2,65312
    1e30:	e0bffc15 	stw	r2,-16(fp)
    volatile int *audio_ptr = (int *)AUDIO_BASE;
    1e34:	00bfc834 	movhi	r2,65312
    1e38:	108c1004 	addi	r2,r2,12352
    1e3c:	e0bffb15 	stw	r2,-20(fp)

    /* used for audio record/playback */
    int fifospace;
    int record = 0, play = 0, buffer_index = 0;
    1e40:	e03ffa15 	stw	zero,-24(fp)
    1e44:	e03ff915 	stw	zero,-28(fp)
    1e48:	e03ff815 	stw	zero,-32(fp)
    float normalized_buffer[BUF_SIZE];
    float windowed_buffer[BUF_SIZE];
    kiss_fft_cpx output[FFT_SIZE];

    /* read and echo audio data */
    record = 0;
    1e4c:	e03ffa15 	stw	zero,-24(fp)
    play = 0;
    1e50:	e03ff915 	stw	zero,-28(fp)

    while (1) {
        check_KEYs(&record, &play, &buffer_index);
    1e54:	e13ff804 	addi	r4,fp,-32
    1e58:	e0fff904 	addi	r3,fp,-28
    1e5c:	e0bffa04 	addi	r2,fp,-24
    1e60:	200d883a 	mov	r6,r4
    1e64:	180b883a 	mov	r5,r3
    1e68:	1009883a 	mov	r4,r2
    1e6c:	000205c0 	call	205c <check_KEYs>
        if (record) {
    1e70:	e0bffa17 	ldw	r2,-24(fp)
    1e74:	103ff726 	beq	r2,zero,1e54 <main+0x48>
            *(red_LED_ptr) = 0x1;  // turn on LEDR[0]
    1e78:	e0bffc17 	ldw	r2,-16(fp)
    1e7c:	00c00044 	movi	r3,1
    1e80:	10c00015 	stw	r3,0(r2)

            fifospace = *(audio_ptr + 1);  // read the audio port fifospace register
    1e84:	e0bffb17 	ldw	r2,-20(fp)
    1e88:	10800117 	ldw	r2,4(r2)
    1e8c:	e0bffe15 	stw	r2,-8(fp)
            if ((fifospace & 0x000000FF) > BUF_THRESHOLD)  // check RARC
    1e90:	e0bffe17 	ldw	r2,-8(fp)
    1e94:	10803fcc 	andi	r2,r2,255
    1e98:	10801850 	cmplti	r2,r2,97
    1e9c:	103fed1e 	bne	r2,zero,1e54 <main+0x48>
            {
                // store data until the the audio-in FIFO is empty or the buffer is full
                while ((fifospace & 0x000000FF) && (buffer_index < BUF_SIZE)) {
    1ea0:	00006706 	br	2040 <main+0x234>
                    left_buffer[buffer_index] = *(audio_ptr + 2);
    1ea4:	e0bffb17 	ldw	r2,-20(fp)
    1ea8:	10800204 	addi	r2,r2,8
    1eac:	10800017 	ldw	r2,0(r2)
    1eb0:	e43ff817 	ldw	r16,-32(fp)
    1eb4:	1009883a 	mov	r4,r2
    1eb8:	0006f4c0 	call	6f4c <__floatsisf>
    1ebc:	1009883a 	mov	r4,r2
    1ec0:	00bfff74 	movhi	r2,65533
    1ec4:	10847904 	addi	r2,r2,4580
    1ec8:	10bfff04 	addi	r2,r2,-4
    1ecc:	1707883a 	add	r3,r2,fp
    1ed0:	800490ba 	slli	r2,r16,2
    1ed4:	1885883a 	add	r2,r3,r2
    1ed8:	11000015 	stw	r4,0(r2)
                    right_buffer[buffer_index] = *(audio_ptr + 3);
    1edc:	e17ff817 	ldw	r5,-32(fp)
    1ee0:	e0bffb17 	ldw	r2,-20(fp)
    1ee4:	10c00317 	ldw	r3,12(r2)
    1ee8:	00bffeb4 	movhi	r2,65530
    1eec:	1088f904 	addi	r2,r2,9188
    1ef0:	10bfff04 	addi	r2,r2,-4
    1ef4:	1709883a 	add	r4,r2,fp
    1ef8:	280490ba 	slli	r2,r5,2
    1efc:	2085883a 	add	r2,r4,r2
    1f00:	10c00015 	stw	r3,0(r2)
                    ++buffer_index;
    1f04:	e0bff817 	ldw	r2,-32(fp)
    1f08:	10800044 	addi	r2,r2,1
    1f0c:	e0bff815 	stw	r2,-32(fp)

                    if (buffer_index == BUF_SIZE) {
    1f10:	e0fff817 	ldw	r3,-32(fp)
    1f14:	00aee014 	movui	r2,48000
    1f18:	1880461e 	bne	r3,r2,2034 <main+0x228>
                        // done recording
                        record = 0;
    1f1c:	e03ffa15 	stw	zero,-24(fp)
                        *(red_LED_ptr) = 0x0;  // turn off LEDR
    1f20:	e0bffc17 	ldw	r2,-16(fp)
    1f24:	10000015 	stw	zero,0(r2)
                        normalize_audio(left_buffer, normalized_buffer, BUF_SIZE);
    1f28:	00bffdf4 	movhi	r2,65527
    1f2c:	108d7904 	addi	r2,r2,13796
    1f30:	10bfff04 	addi	r2,r2,-4
    1f34:	1707883a 	add	r3,r2,fp
    1f38:	00bfff74 	movhi	r2,65533
    1f3c:	10847904 	addi	r2,r2,4580
    1f40:	10bfff04 	addi	r2,r2,-4
    1f44:	1705883a 	add	r2,r2,fp
    1f48:	01aee014 	movui	r6,48000
    1f4c:	180b883a 	mov	r5,r3
    1f50:	1009883a 	mov	r4,r2
    1f54:	00021280 	call	2128 <normalize_audio>
                        hamming_window(normalized_buffer, windowed_buffer, FFT_SIZE);
    1f58:	00bffd34 	movhi	r2,65524
    1f5c:	1091f904 	addi	r2,r2,18404
    1f60:	10bfff04 	addi	r2,r2,-4
    1f64:	1707883a 	add	r3,r2,fp
    1f68:	00bffdf4 	movhi	r2,65527
    1f6c:	108d7904 	addi	r2,r2,13796
    1f70:	10bfff04 	addi	r2,r2,-4
    1f74:	1705883a 	add	r2,r2,fp
    1f78:	01810004 	movi	r6,1024
    1f7c:	180b883a 	mov	r5,r3
    1f80:	1009883a 	mov	r4,r2
    1f84:	00022100 	call	2210 <hamming_window>
                        fft(windowed_buffer, output);
    1f88:	00bffd34 	movhi	r2,65524
    1f8c:	1089f904 	addi	r2,r2,10212
    1f90:	10bfff04 	addi	r2,r2,-4
    1f94:	1707883a 	add	r3,r2,fp
    1f98:	00bffd34 	movhi	r2,65524
    1f9c:	1091f904 	addi	r2,r2,18404
    1fa0:	10bfff04 	addi	r2,r2,-4
    1fa4:	1705883a 	add	r2,r2,fp
    1fa8:	180b883a 	mov	r5,r3
    1fac:	1009883a 	mov	r4,r2
    1fb0:	00023080 	call	2308 <fft>
                        *(red_LED_ptr) = 0x8;
    1fb4:	e0bffc17 	ldw	r2,-16(fp)
    1fb8:	00c00204 	movi	r3,8
    1fbc:	10c00015 	stw	r3,0(r2)
                        for (int i = 0; i < FFT_SIZE; i++) {
    1fc0:	e03ffd15 	stw	zero,-12(fp)
    1fc4:	00001406 	br	2018 <main+0x20c>
                            printf("%f\n", output[i].r);
    1fc8:	00bffd34 	movhi	r2,65524
    1fcc:	1089f904 	addi	r2,r2,10212
    1fd0:	10bfff04 	addi	r2,r2,-4
    1fd4:	1707883a 	add	r3,r2,fp
    1fd8:	e0bffd17 	ldw	r2,-12(fp)
    1fdc:	100490fa 	slli	r2,r2,3
    1fe0:	1885883a 	add	r2,r3,r2
    1fe4:	10c00017 	ldw	r3,0(r2)
    1fe8:	1809883a 	mov	r4,r3
    1fec:	00097080 	call	9708 <__extendsfdf2>
    1ff0:	100d883a 	mov	r6,r2
    1ff4:	180f883a 	mov	r7,r3
    1ff8:	300b883a 	mov	r5,r6
    1ffc:	380d883a 	mov	r6,r7
    2000:	01000074 	movhi	r4,1
    2004:	211c8904 	addi	r4,r4,29220
    2008:	000a3040 	call	a304 <printf>
                        for (int i = 0; i < FFT_SIZE; i++) {
    200c:	e0bffd17 	ldw	r2,-12(fp)
    2010:	10800044 	addi	r2,r2,1
    2014:	e0bffd15 	stw	r2,-12(fp)
    2018:	e0bffd17 	ldw	r2,-12(fp)
    201c:	10810010 	cmplti	r2,r2,1024
    2020:	103fe91e 	bne	r2,zero,1fc8 <main+0x1bc>
                        }
                        printf("\n-------------\n");
    2024:	01000074 	movhi	r4,1
    2028:	211c8a04 	addi	r4,r4,29224
    202c:	000a4080 	call	a408 <puts>
                        // Reset buffer_index for the next recording
                        buffer_index = 0;
    2030:	e03ff815 	stw	zero,-32(fp)
                    }
                    fifospace = *(audio_ptr + 1);  // read the audio port fifospace register
    2034:	e0bffb17 	ldw	r2,-20(fp)
    2038:	10800117 	ldw	r2,4(r2)
    203c:	e0bffe15 	stw	r2,-8(fp)
                while ((fifospace & 0x000000FF) && (buffer_index < BUF_SIZE)) {
    2040:	e0bffe17 	ldw	r2,-8(fp)
    2044:	10803fcc 	andi	r2,r2,255
    2048:	103f8226 	beq	r2,zero,1e54 <main+0x48>
    204c:	e0bff817 	ldw	r2,-32(fp)
    2050:	00eedfd4 	movui	r3,47999
    2054:	18bf930e 	bge	r3,r2,1ea4 <main+0x98>
        check_KEYs(&record, &play, &buffer_index);
    2058:	003f7e06 	br	1e54 <main+0x48>

0000205c <check_KEYs>:
}

/****************************************************************************************
 * Subroutine to read KEYs
 ****************************************************************************************/
void check_KEYs(int *KEY0, int *KEY1, int *counter) {
    205c:	defff904 	addi	sp,sp,-28
    2060:	df000615 	stw	fp,24(sp)
    2064:	df000604 	addi	fp,sp,24
    2068:	e13ffc15 	stw	r4,-16(fp)
    206c:	e17ffb15 	stw	r5,-20(fp)
    2070:	e1bffa15 	stw	r6,-24(fp)
    volatile int *KEY_ptr = (int *)KEY_BASE;
    2074:	00bfc834 	movhi	r2,65312
    2078:	10801404 	addi	r2,r2,80
    207c:	e0bfff15 	stw	r2,-4(fp)
    volatile int *audio_ptr = (int *)AUDIO_BASE;
    2080:	00bfc834 	movhi	r2,65312
    2084:	108c1004 	addi	r2,r2,12352
    2088:	e0bffe15 	stw	r2,-8(fp)
    int KEY_value;

    KEY_value = *(KEY_ptr);  // read the pushbutton KEY values
    208c:	e0bfff17 	ldw	r2,-4(fp)
    2090:	10800017 	ldw	r2,0(r2)
    2094:	e0bffd15 	stw	r2,-12(fp)
    while (*KEY_ptr)
    2098:	0001883a 	nop
    209c:	e0bfff17 	ldw	r2,-4(fp)
    20a0:	10800017 	ldw	r2,0(r2)
    20a4:	103ffd1e 	bne	r2,zero,209c <check_KEYs+0x40>
        ;  // wait for pushbutton KEY release

    if (KEY_value == 0x1)  // check KEY0
    20a8:	e0bffd17 	ldw	r2,-12(fp)
    20ac:	10800058 	cmpnei	r2,r2,1
    20b0:	10000b1e 	bne	r2,zero,20e0 <check_KEYs+0x84>
    {
        // reset counter to start recording
        *counter = 0;
    20b4:	e0bffa17 	ldw	r2,-24(fp)
    20b8:	10000015 	stw	zero,0(r2)
        // clear audio-in FIFO
        *(audio_ptr) = 0x4;
    20bc:	e0bffe17 	ldw	r2,-8(fp)
    20c0:	00c00104 	movi	r3,4
    20c4:	10c00015 	stw	r3,0(r2)
        *(audio_ptr) = 0x0;
    20c8:	e0bffe17 	ldw	r2,-8(fp)
    20cc:	10000015 	stw	zero,0(r2)

        *KEY0 = 1;
    20d0:	e0bffc17 	ldw	r2,-16(fp)
    20d4:	00c00044 	movi	r3,1
    20d8:	10c00015 	stw	r3,0(r2)
        *(audio_ptr) = 0x8;
        *(audio_ptr) = 0x0;

        *KEY1 = 1;
    }
}
    20dc:	00000d06 	br	2114 <check_KEYs+0xb8>
    } else if (KEY_value == 0x2)  // check KEY1
    20e0:	e0bffd17 	ldw	r2,-12(fp)
    20e4:	10800098 	cmpnei	r2,r2,2
    20e8:	10000a1e 	bne	r2,zero,2114 <check_KEYs+0xb8>
        *counter = 0;
    20ec:	e0bffa17 	ldw	r2,-24(fp)
    20f0:	10000015 	stw	zero,0(r2)
        *(audio_ptr) = 0x8;
    20f4:	e0bffe17 	ldw	r2,-8(fp)
    20f8:	00c00204 	movi	r3,8
    20fc:	10c00015 	stw	r3,0(r2)
        *(audio_ptr) = 0x0;
    2100:	e0bffe17 	ldw	r2,-8(fp)
    2104:	10000015 	stw	zero,0(r2)
        *KEY1 = 1;
    2108:	e0bffb17 	ldw	r2,-20(fp)
    210c:	00c00044 	movi	r3,1
    2110:	10c00015 	stw	r3,0(r2)
}
    2114:	0001883a 	nop
    2118:	e037883a 	mov	sp,fp
    211c:	df000017 	ldw	fp,0(sp)
    2120:	dec00104 	addi	sp,sp,4
    2124:	f800283a 	ret

00002128 <normalize_audio>:

void normalize_audio(float *input_buffer, float *output_buffer, int size) {
    2128:	defff704 	addi	sp,sp,-36
    212c:	dfc00815 	stw	ra,32(sp)
    2130:	df000715 	stw	fp,28(sp)
    2134:	df000704 	addi	fp,sp,28
    2138:	e13ffb15 	stw	r4,-20(fp)
    213c:	e17ffa15 	stw	r5,-24(fp)
    2140:	e1bff915 	stw	r6,-28(fp)
    float max_val = 0;
    2144:	e03fff15 	stw	zero,-4(fp)

    // Find the maximum absolute value
    for (int i = 0; i < size; i++) {
    2148:	e03ffe15 	stw	zero,-8(fp)
    214c:	00001206 	br	2198 <normalize_audio+0x70>
        float abs_val = fabs(input_buffer[i]);
    2150:	e0bffe17 	ldw	r2,-8(fp)
    2154:	100490ba 	slli	r2,r2,2
    2158:	e0fffb17 	ldw	r3,-20(fp)
    215c:	1885883a 	add	r2,r3,r2
    2160:	10c00017 	ldw	r3,0(r2)
    2164:	00a00034 	movhi	r2,32768
    2168:	10bfffc4 	addi	r2,r2,-1
    216c:	1884703a 	and	r2,r3,r2
    2170:	e0bffc15 	stw	r2,-16(fp)
        if (abs_val > max_val) {
    2174:	e17fff17 	ldw	r5,-4(fp)
    2178:	e13ffc17 	ldw	r4,-16(fp)
    217c:	00065900 	call	6590 <__gesf2>
    2180:	0080020e 	bge	zero,r2,218c <normalize_audio+0x64>
            max_val = abs_val;
    2184:	e0bffc17 	ldw	r2,-16(fp)
    2188:	e0bfff15 	stw	r2,-4(fp)
    for (int i = 0; i < size; i++) {
    218c:	e0bffe17 	ldw	r2,-8(fp)
    2190:	10800044 	addi	r2,r2,1
    2194:	e0bffe15 	stw	r2,-8(fp)
    2198:	e0fffe17 	ldw	r3,-8(fp)
    219c:	e0bff917 	ldw	r2,-28(fp)
    21a0:	18bfeb16 	blt	r3,r2,2150 <normalize_audio+0x28>
        }
    }

    // Normalize the input buffer to the range [-1, 1]
    for (int i = 0; i < size; i++) {
    21a4:	e03ffd15 	stw	zero,-12(fp)
    21a8:	00000f06 	br	21e8 <normalize_audio+0xc0>
        output_buffer[i] = input_buffer[i] / max_val;
    21ac:	e0bffd17 	ldw	r2,-12(fp)
    21b0:	100490ba 	slli	r2,r2,2
    21b4:	e0fffb17 	ldw	r3,-20(fp)
    21b8:	1885883a 	add	r2,r3,r2
    21bc:	11000017 	ldw	r4,0(r2)
    21c0:	e0bffd17 	ldw	r2,-12(fp)
    21c4:	100490ba 	slli	r2,r2,2
    21c8:	e0fffa17 	ldw	r3,-24(fp)
    21cc:	1885883a 	add	r2,r3,r2
    21d0:	e0ffff17 	ldw	r3,-4(fp)
    21d4:	20c7fff2 	custom	255,r3,r4,r3
    21d8:	10c00015 	stw	r3,0(r2)
    for (int i = 0; i < size; i++) {
    21dc:	e0bffd17 	ldw	r2,-12(fp)
    21e0:	10800044 	addi	r2,r2,1
    21e4:	e0bffd15 	stw	r2,-12(fp)
    21e8:	e0fffd17 	ldw	r3,-12(fp)
    21ec:	e0bff917 	ldw	r2,-28(fp)
    21f0:	18bfee16 	blt	r3,r2,21ac <normalize_audio+0x84>
    }
}
    21f4:	0001883a 	nop
    21f8:	0001883a 	nop
    21fc:	e037883a 	mov	sp,fp
    2200:	dfc00117 	ldw	ra,4(sp)
    2204:	df000017 	ldw	fp,0(sp)
    2208:	dec00204 	addi	sp,sp,8
    220c:	f800283a 	ret

00002210 <hamming_window>:

void hamming_window(float *input, float *output, int size) {
    2210:	defff604 	addi	sp,sp,-40
    2214:	dfc00915 	stw	ra,36(sp)
    2218:	df000815 	stw	fp,32(sp)
    221c:	dc000715 	stw	r16,28(sp)
    2220:	df000804 	addi	fp,sp,32
    2224:	e13ffa15 	stw	r4,-24(fp)
    2228:	e17ff915 	stw	r5,-28(fp)
    222c:	e1bff815 	stw	r6,-32(fp)
    for (int i = 0; i < size; i++) {
    2230:	e03ffe15 	stw	zero,-8(fp)
    2234:	00002906 	br	22dc <hamming_window+0xcc>
        float alpha = 0.54f;
    2238:	008fc2b4 	movhi	r2,16138
    223c:	108f5c44 	addi	r2,r2,15729
    2240:	e0bffd15 	stw	r2,-12(fp)
        float beta = 0.46f;
    2244:	008fbb34 	movhi	r2,16108
    2248:	10a147c4 	addi	r2,r2,-31457
    224c:	e0bffc15 	stw	r2,-16(fp)
        float window = alpha - beta * cosf((2 * PI * i) / (size - 1));
    2250:	e13ffe17 	ldw	r4,-8(fp)
    2254:	0006f4c0 	call	6f4c <__floatsisf>
    2258:	1007883a 	mov	r3,r2
    225c:	00903274 	movhi	r2,16585
    2260:	1083f6c4 	addi	r2,r2,4059
    2264:	18a1ff32 	custom	252,r16,r3,r2
    2268:	e0bff817 	ldw	r2,-32(fp)
    226c:	10bfffc4 	addi	r2,r2,-1
    2270:	1009883a 	mov	r4,r2
    2274:	0006f4c0 	call	6f4c <__floatsisf>
    2278:	1007883a 	mov	r3,r2
    227c:	80c5fff2 	custom	255,r2,r16,r3
    2280:	1009883a 	mov	r4,r2
    2284:	00027180 	call	2718 <cosf>
    2288:	1007883a 	mov	r3,r2
    228c:	e0bffc17 	ldw	r2,-16(fp)
    2290:	1885ff32 	custom	252,r2,r3,r2
    2294:	e0fffd17 	ldw	r3,-12(fp)
    2298:	1885ffb2 	custom	254,r2,r3,r2
    229c:	e0bffb15 	stw	r2,-20(fp)
        output[i] = input[i] * window;
    22a0:	e0bffe17 	ldw	r2,-8(fp)
    22a4:	100490ba 	slli	r2,r2,2
    22a8:	e0fffa17 	ldw	r3,-24(fp)
    22ac:	1885883a 	add	r2,r3,r2
    22b0:	11000017 	ldw	r4,0(r2)
    22b4:	e0bffe17 	ldw	r2,-8(fp)
    22b8:	100490ba 	slli	r2,r2,2
    22bc:	e0fff917 	ldw	r3,-28(fp)
    22c0:	1885883a 	add	r2,r3,r2
    22c4:	e0fffb17 	ldw	r3,-20(fp)
    22c8:	20c7ff32 	custom	252,r3,r4,r3
    22cc:	10c00015 	stw	r3,0(r2)
    for (int i = 0; i < size; i++) {
    22d0:	e0bffe17 	ldw	r2,-8(fp)
    22d4:	10800044 	addi	r2,r2,1
    22d8:	e0bffe15 	stw	r2,-8(fp)
    22dc:	e0fffe17 	ldw	r3,-8(fp)
    22e0:	e0bff817 	ldw	r2,-32(fp)
    22e4:	18bfd416 	blt	r3,r2,2238 <hamming_window+0x28>
    }
}
    22e8:	0001883a 	nop
    22ec:	0001883a 	nop
    22f0:	e6ffff04 	addi	sp,fp,-4
    22f4:	dfc00217 	ldw	ra,8(sp)
    22f8:	df000117 	ldw	fp,4(sp)
    22fc:	dc000017 	ldw	r16,0(sp)
    2300:	dec00304 	addi	sp,sp,12
    2304:	f800283a 	ret

00002308 <fft>:

void fft(float *input_buffer, kiss_fft_cpx *output_buffer) {
    2308:	def7fa04 	addi	sp,sp,-8216
    230c:	dfc80515 	stw	ra,8212(sp)
    2310:	df080415 	stw	fp,8208(sp)
    2314:	df080404 	addi	fp,sp,8208
    2318:	e137fd15 	stw	r4,-8204(fp)
    231c:	e177fc15 	stw	r5,-8208(fp)
    kiss_fft_cfg config;

    config = kiss_fft_alloc(FFT_SIZE, 0, NULL, NULL);
    2320:	000f883a 	mov	r7,zero
    2324:	000d883a 	mov	r6,zero
    2328:	000b883a 	mov	r5,zero
    232c:	01010004 	movi	r4,1024
    2330:	00019c40 	call	19c4 <kiss_fft_alloc>
    2334:	e0bffe15 	stw	r2,-8(fp)

    // Convert input to kiss_fft_cpx format
    kiss_fft_cpx kiss_input_buffer[FFT_SIZE];
    for (int i = 0; i < FFT_SIZE; i++) {
    2338:	e03fff15 	stw	zero,-4(fp)
    233c:	00001006 	br	2380 <fft+0x78>
        kiss_input_buffer[i].r = input_buffer[i];
    2340:	e0bfff17 	ldw	r2,-4(fp)
    2344:	100490ba 	slli	r2,r2,2
    2348:	e0f7fd17 	ldw	r3,-8204(fp)
    234c:	1885883a 	add	r2,r3,r2
    2350:	10c00017 	ldw	r3,0(r2)
    2354:	e0bfff17 	ldw	r2,-4(fp)
    2358:	100490fa 	slli	r2,r2,3
    235c:	e085883a 	add	r2,fp,r2
    2360:	10f7fe15 	stw	r3,-8200(r2)
        kiss_input_buffer[i].i = 0; // Assuming input is real, imaginary part is 0
    2364:	e0bfff17 	ldw	r2,-4(fp)
    2368:	100490fa 	slli	r2,r2,3
    236c:	e085883a 	add	r2,fp,r2
    2370:	1037ff15 	stw	zero,-8196(r2)
    for (int i = 0; i < FFT_SIZE; i++) {
    2374:	e0bfff17 	ldw	r2,-4(fp)
    2378:	10800044 	addi	r2,r2,1
    237c:	e0bfff15 	stw	r2,-4(fp)
    2380:	e0bfff17 	ldw	r2,-4(fp)
    2384:	10810010 	cmplti	r2,r2,1024
    2388:	103fed1e 	bne	r2,zero,2340 <fft+0x38>
    }

    // Perform FFT
    kiss_fft(config, kiss_input_buffer, output_buffer);
    238c:	e0b7fe04 	addi	r2,fp,-8200
    2390:	e1b7fc17 	ldw	r6,-8208(fp)
    2394:	100b883a 	mov	r5,r2
    2398:	e13ffe17 	ldw	r4,-8(fp)
    239c:	0001cd40 	call	1cd4 <kiss_fft>

    // Free the FFT configuration
    kiss_fft_free(config);
    23a0:	e13ffe17 	ldw	r4,-8(fp)
    23a4:	00099e40 	call	99e4 <free>
}
    23a8:	0001883a 	nop
    23ac:	e037883a 	mov	sp,fp
    23b0:	dfc00117 	ldw	ra,4(sp)
    23b4:	df000017 	ldw	fp,0(sp)
    23b8:	dec00204 	addi	sp,sp,8
    23bc:	f800283a 	ret

000023c0 <cos>:
    23c0:	00a00034 	movhi	r2,32768
    23c4:	10bfffc4 	addi	r2,r2,-1
    23c8:	00cffa74 	movhi	r3,16361
    23cc:	2884703a 	and	r2,r5,r2
    23d0:	18c87ec4 	addi	r3,r3,8699
    23d4:	18801a0e 	bge	r3,r2,2440 <cos+0x80>
    23d8:	defffa04 	addi	sp,sp,-24
    23dc:	dfc00515 	stw	ra,20(sp)
    23e0:	00dffc34 	movhi	r3,32752
    23e4:	10c00616 	blt	r2,r3,2400 <cos+0x40>
    23e8:	280f883a 	mov	r7,r5
    23ec:	200d883a 	mov	r6,r4
    23f0:	0008c700 	call	8c70 <__subdf3>
    23f4:	dfc00517 	ldw	ra,20(sp)
    23f8:	dec00604 	addi	sp,sp,24
    23fc:	f800283a 	ret
    2400:	d9800104 	addi	r6,sp,4
    2404:	00028600 	call	2860 <__ieee754_rem_pio2>
    2408:	108000cc 	andi	r2,r2,3
    240c:	10c00060 	cmpeqi	r3,r2,1
    2410:	d9800317 	ldw	r6,12(sp)
    2414:	d9c00417 	ldw	r7,16(sp)
    2418:	d9000117 	ldw	r4,4(sp)
    241c:	d9400217 	ldw	r5,8(sp)
    2420:	18000a1e 	bne	r3,zero,244c <cos+0x8c>
    2424:	10c000a0 	cmpeqi	r3,r2,2
    2428:	18000e1e 	bne	r3,zero,2464 <cos+0xa4>
    242c:	10000b26 	beq	r2,zero,245c <cos+0x9c>
    2430:	00800044 	movi	r2,1
    2434:	d8800015 	stw	r2,0(sp)
    2438:	00048d40 	call	48d4 <__kernel_sin>
    243c:	003fed06 	br	23f4 <cos+0x34>
    2440:	000d883a 	mov	r6,zero
    2444:	000f883a 	mov	r7,zero
    2448:	00037141 	jmpi	3714 <__kernel_cos>
    244c:	d8800015 	stw	r2,0(sp)
    2450:	00048d40 	call	48d4 <__kernel_sin>
    2454:	18e0003c 	xorhi	r3,r3,32768
    2458:	003fe606 	br	23f4 <cos+0x34>
    245c:	00037140 	call	3714 <__kernel_cos>
    2460:	003fe406 	br	23f4 <cos+0x34>
    2464:	00037140 	call	3714 <__kernel_cos>
    2468:	18e0003c 	xorhi	r3,r3,32768
    246c:	003fe106 	br	23f4 <cos+0x34>

00002470 <floor>:
    2470:	280fd53a 	srai	r7,r5,20
    2474:	defffb04 	addi	sp,sp,-20
    2478:	dc800215 	stw	r18,8(sp)
    247c:	39c1ffcc 	andi	r7,r7,2047
    2480:	3cbf0044 	addi	r18,r7,-1023
    2484:	dc400115 	stw	r17,4(sp)
    2488:	dc000015 	stw	r16,0(sp)
    248c:	dfc00415 	stw	ra,16(sp)
    2490:	dcc00315 	stw	r19,12(sp)
    2494:	90800508 	cmpgei	r2,r18,20
    2498:	2821883a 	mov	r16,r5
    249c:	200d883a 	mov	r6,r4
    24a0:	2023883a 	mov	r17,r4
    24a4:	10002b1e 	bne	r2,zero,2554 <floor+0xe4>
    24a8:	90001b16 	blt	r18,zero,2518 <floor+0xa8>
    24ac:	00800434 	movhi	r2,16
    24b0:	10bfffc4 	addi	r2,r2,-1
    24b4:	14a7d83a 	sra	r19,r2,r18
    24b8:	2cc4703a 	and	r2,r5,r19
    24bc:	1104b03a 	or	r2,r2,r4
    24c0:	10002826 	beq	r2,zero,2564 <floor+0xf4>
    24c4:	01a20034 	movhi	r6,34816
    24c8:	01df8e34 	movhi	r7,32312
    24cc:	319d6704 	addi	r6,r6,30108
    24d0:	39f90f04 	addi	r7,r7,-7108
    24d4:	00070700 	call	7070 <__adddf3>
    24d8:	000d883a 	mov	r6,zero
    24dc:	000f883a 	mov	r7,zero
    24e0:	1009883a 	mov	r4,r2
    24e4:	180b883a 	mov	r5,r3
    24e8:	00082f40 	call	82f4 <__gedf2>
    24ec:	0080070e 	bge	zero,r2,250c <floor+0x9c>
    24f0:	8000030e 	bge	r16,zero,2500 <floor+0x90>
    24f4:	00800434 	movhi	r2,16
    24f8:	14a5d83a 	sra	r18,r2,r18
    24fc:	9421883a 	add	r16,r18,r16
    2500:	04c4303a 	nor	r2,zero,r19
    2504:	80a0703a 	and	r16,r16,r2
    2508:	0023883a 	mov	r17,zero
    250c:	8805883a 	mov	r2,r17
    2510:	8007883a 	mov	r3,r16
    2514:	00001506 	br	256c <floor+0xfc>
    2518:	01a20034 	movhi	r6,34816
    251c:	01df8e34 	movhi	r7,32312
    2520:	319d6704 	addi	r6,r6,30108
    2524:	39f90f04 	addi	r7,r7,-7108
    2528:	00070700 	call	7070 <__adddf3>
    252c:	000d883a 	mov	r6,zero
    2530:	000f883a 	mov	r7,zero
    2534:	1009883a 	mov	r4,r2
    2538:	180b883a 	mov	r5,r3
    253c:	00082f40 	call	82f4 <__gedf2>
    2540:	00bff20e 	bge	zero,r2,250c <floor+0x9c>
    2544:	80002a16 	blt	r16,zero,25f0 <floor+0x180>
    2548:	0023883a 	mov	r17,zero
    254c:	0021883a 	mov	r16,zero
    2550:	003fee06 	br	250c <floor+0x9c>
    2554:	90800d10 	cmplti	r2,r18,52
    2558:	10000b1e 	bne	r2,zero,2588 <floor+0x118>
    255c:	94810018 	cmpnei	r18,r18,1024
    2560:	90001d26 	beq	r18,zero,25d8 <floor+0x168>
    2564:	3005883a 	mov	r2,r6
    2568:	8007883a 	mov	r3,r16
    256c:	dfc00417 	ldw	ra,16(sp)
    2570:	dcc00317 	ldw	r19,12(sp)
    2574:	dc800217 	ldw	r18,8(sp)
    2578:	dc400117 	ldw	r17,4(sp)
    257c:	dc000017 	ldw	r16,0(sp)
    2580:	dec00504 	addi	sp,sp,20
    2584:	f800283a 	ret
    2588:	39fefb44 	addi	r7,r7,-1043
    258c:	04ffffc4 	movi	r19,-1
    2590:	99e6d83a 	srl	r19,r19,r7
    2594:	9904703a 	and	r2,r19,r4
    2598:	10001226 	beq	r2,zero,25e4 <floor+0x174>
    259c:	01a20034 	movhi	r6,34816
    25a0:	01df8e34 	movhi	r7,32312
    25a4:	319d6704 	addi	r6,r6,30108
    25a8:	39f90f04 	addi	r7,r7,-7108
    25ac:	00070700 	call	7070 <__adddf3>
    25b0:	000d883a 	mov	r6,zero
    25b4:	000f883a 	mov	r7,zero
    25b8:	1009883a 	mov	r4,r2
    25bc:	180b883a 	mov	r5,r3
    25c0:	00082f40 	call	82f4 <__gedf2>
    25c4:	00bfd10e 	bge	zero,r2,250c <floor+0x9c>
    25c8:	80001116 	blt	r16,zero,2610 <floor+0x1a0>
    25cc:	04ce303a 	nor	r7,zero,r19
    25d0:	89e2703a 	and	r17,r17,r7
    25d4:	003fcd06 	br	250c <floor+0x9c>
    25d8:	280f883a 	mov	r7,r5
    25dc:	00070700 	call	7070 <__adddf3>
    25e0:	003fe206 	br	256c <floor+0xfc>
    25e4:	2807883a 	mov	r3,r5
    25e8:	2005883a 	mov	r2,r4
    25ec:	003fdf06 	br	256c <floor+0xfc>
    25f0:	00a00034 	movhi	r2,32768
    25f4:	10bfffc4 	addi	r2,r2,-1
    25f8:	8084703a 	and	r2,r16,r2
    25fc:	1462b03a 	or	r17,r2,r17
    2600:	88000e26 	beq	r17,zero,263c <floor+0x1cc>
    2604:	0023883a 	mov	r17,zero
    2608:	042ffc34 	movhi	r16,49136
    260c:	003fbf06 	br	250c <floor+0x9c>
    2610:	90800518 	cmpnei	r2,r18,20
    2614:	10000b26 	beq	r2,zero,2644 <floor+0x1d4>
    2618:	00800d04 	movi	r2,52
    261c:	14a5c83a 	sub	r18,r2,r18
    2620:	00800044 	movi	r2,1
    2624:	1484983a 	sll	r2,r2,r18
    2628:	1445883a 	add	r2,r2,r17
    262c:	1440072e 	bgeu	r2,r17,264c <floor+0x1dc>
    2630:	84000044 	addi	r16,r16,1
    2634:	1023883a 	mov	r17,r2
    2638:	003fe406 	br	25cc <floor+0x15c>
    263c:	0023883a 	mov	r17,zero
    2640:	003fb206 	br	250c <floor+0x9c>
    2644:	84000044 	addi	r16,r16,1
    2648:	003fe006 	br	25cc <floor+0x15c>
    264c:	1023883a 	mov	r17,r2
    2650:	003fde06 	br	25cc <floor+0x15c>

00002654 <sin>:
    2654:	00a00034 	movhi	r2,32768
    2658:	defffa04 	addi	sp,sp,-24
    265c:	10bfffc4 	addi	r2,r2,-1
    2660:	00cffa74 	movhi	r3,16361
    2664:	dfc00515 	stw	ra,20(sp)
    2668:	2884703a 	and	r2,r5,r2
    266c:	18c87ec4 	addi	r3,r3,8699
    2670:	1880170e 	bge	r3,r2,26d0 <sin+0x7c>
    2674:	00dffc34 	movhi	r3,32752
    2678:	10c00616 	blt	r2,r3,2694 <sin+0x40>
    267c:	280f883a 	mov	r7,r5
    2680:	200d883a 	mov	r6,r4
    2684:	0008c700 	call	8c70 <__subdf3>
    2688:	dfc00517 	ldw	ra,20(sp)
    268c:	dec00604 	addi	sp,sp,24
    2690:	f800283a 	ret
    2694:	d9800104 	addi	r6,sp,4
    2698:	00028600 	call	2860 <__ieee754_rem_pio2>
    269c:	108000cc 	andi	r2,r2,3
    26a0:	10c00060 	cmpeqi	r3,r2,1
    26a4:	d9800317 	ldw	r6,12(sp)
    26a8:	d9c00417 	ldw	r7,16(sp)
    26ac:	d9000117 	ldw	r4,4(sp)
    26b0:	d9400217 	ldw	r5,8(sp)
    26b4:	18000d1e 	bne	r3,zero,26ec <sin+0x98>
    26b8:	10c000a0 	cmpeqi	r3,r2,2
    26bc:	1800111e 	bne	r3,zero,2704 <sin+0xb0>
    26c0:	10000c26 	beq	r2,zero,26f4 <sin+0xa0>
    26c4:	00037140 	call	3714 <__kernel_cos>
    26c8:	18e0003c 	xorhi	r3,r3,32768
    26cc:	003fee06 	br	2688 <sin+0x34>
    26d0:	d8000015 	stw	zero,0(sp)
    26d4:	000d883a 	mov	r6,zero
    26d8:	000f883a 	mov	r7,zero
    26dc:	00048d40 	call	48d4 <__kernel_sin>
    26e0:	dfc00517 	ldw	ra,20(sp)
    26e4:	dec00604 	addi	sp,sp,24
    26e8:	f800283a 	ret
    26ec:	00037140 	call	3714 <__kernel_cos>
    26f0:	003fe506 	br	2688 <sin+0x34>
    26f4:	00800044 	movi	r2,1
    26f8:	d8800015 	stw	r2,0(sp)
    26fc:	00048d40 	call	48d4 <__kernel_sin>
    2700:	003fe106 	br	2688 <sin+0x34>
    2704:	00800044 	movi	r2,1
    2708:	d8800015 	stw	r2,0(sp)
    270c:	00048d40 	call	48d4 <__kernel_sin>
    2710:	18e0003c 	xorhi	r3,r3,32768
    2714:	003fdc06 	br	2688 <sin+0x34>

00002718 <cosf>:
    2718:	00a00034 	movhi	r2,32768
    271c:	10bfffc4 	addi	r2,r2,-1
    2720:	00cfd274 	movhi	r3,16201
    2724:	1104703a 	and	r2,r2,r4
    2728:	18c3f604 	addi	r3,r3,4056
    272c:	1880160e 	bge	r3,r2,2788 <cosf+0x70>
    2730:	defffd04 	addi	sp,sp,-12
    2734:	dfc00215 	stw	ra,8(sp)
    2738:	00dfe034 	movhi	r3,32640
    273c:	10c00516 	blt	r2,r3,2754 <cosf+0x3c>
    2740:	200b883a 	mov	r5,r4
    2744:	0006a480 	call	6a48 <__subsf3>
    2748:	dfc00217 	ldw	ra,8(sp)
    274c:	dec00304 	addi	sp,sp,12
    2750:	f800283a 	ret
    2754:	d80b883a 	mov	r5,sp
    2758:	00032180 	call	3218 <__ieee754_rem_pio2f>
    275c:	108000cc 	andi	r2,r2,3
    2760:	10c00060 	cmpeqi	r3,r2,1
    2764:	d9400117 	ldw	r5,4(sp)
    2768:	d9000017 	ldw	r4,0(sp)
    276c:	1800081e 	bne	r3,zero,2790 <cosf+0x78>
    2770:	10c000a0 	cmpeqi	r3,r2,2
    2774:	18000c1e 	bne	r3,zero,27a8 <cosf+0x90>
    2778:	10000926 	beq	r2,zero,27a0 <cosf+0x88>
    277c:	01800044 	movi	r6,1
    2780:	00059240 	call	5924 <__kernel_sinf>
    2784:	003ff006 	br	2748 <cosf+0x30>
    2788:	000b883a 	mov	r5,zero
    278c:	0004b9c1 	jmpi	4b9c <__kernel_cosf>
    2790:	01800044 	movi	r6,1
    2794:	00059240 	call	5924 <__kernel_sinf>
    2798:	10a0003c 	xorhi	r2,r2,32768
    279c:	003fea06 	br	2748 <cosf+0x30>
    27a0:	0004b9c0 	call	4b9c <__kernel_cosf>
    27a4:	003fe806 	br	2748 <cosf+0x30>
    27a8:	0004b9c0 	call	4b9c <__kernel_cosf>
    27ac:	10a0003c 	xorhi	r2,r2,32768
    27b0:	003fe506 	br	2748 <cosf+0x30>

000027b4 <sqrt>:
    27b4:	defffb04 	addi	sp,sp,-20
    27b8:	dcc00315 	stw	r19,12(sp)
    27bc:	dc800215 	stw	r18,8(sp)
    27c0:	dc400115 	stw	r17,4(sp)
    27c4:	dc000015 	stw	r16,0(sp)
    27c8:	2023883a 	mov	r17,r4
    27cc:	2821883a 	mov	r16,r5
    27d0:	dfc00415 	stw	ra,16(sp)
    27d4:	0002fac0 	call	2fac <__ieee754_sqrt>
    27d8:	880d883a 	mov	r6,r17
    27dc:	800f883a 	mov	r7,r16
    27e0:	8809883a 	mov	r4,r17
    27e4:	800b883a 	mov	r5,r16
    27e8:	1027883a 	mov	r19,r2
    27ec:	1825883a 	mov	r18,r3
    27f0:	000957c0 	call	957c <__unorddf2>
    27f4:	1000061e 	bne	r2,zero,2810 <sqrt+0x5c>
    27f8:	000d883a 	mov	r6,zero
    27fc:	000f883a 	mov	r7,zero
    2800:	8809883a 	mov	r4,r17
    2804:	800b883a 	mov	r5,r16
    2808:	00083dc0 	call	83dc <__ledf2>
    280c:	10000916 	blt	r2,zero,2834 <sqrt+0x80>
    2810:	9805883a 	mov	r2,r19
    2814:	9007883a 	mov	r3,r18
    2818:	dfc00417 	ldw	ra,16(sp)
    281c:	dcc00317 	ldw	r19,12(sp)
    2820:	dc800217 	ldw	r18,8(sp)
    2824:	dc400117 	ldw	r17,4(sp)
    2828:	dc000017 	ldw	r16,0(sp)
    282c:	dec00504 	addi	sp,sp,20
    2830:	f800283a 	ret
    2834:	00099c80 	call	99c8 <__errno>
    2838:	00c00844 	movi	r3,33
    283c:	10c00015 	stw	r3,0(r2)
    2840:	000d883a 	mov	r6,zero
    2844:	000f883a 	mov	r7,zero
    2848:	0009883a 	mov	r4,zero
    284c:	000b883a 	mov	r5,zero
    2850:	00079600 	call	7960 <__divdf3>
    2854:	1027883a 	mov	r19,r2
    2858:	1825883a 	mov	r18,r3
    285c:	003fec06 	br	2810 <sqrt+0x5c>

00002860 <__ieee754_rem_pio2>:
    2860:	deffea04 	addi	sp,sp,-88
    2864:	dc000c15 	stw	r16,48(sp)
    2868:	04200034 	movhi	r16,32768
    286c:	843fffc4 	addi	r16,r16,-1
    2870:	008ffa74 	movhi	r2,16361
    2874:	dcc00f15 	stw	r19,60(sp)
    2878:	dc800e15 	stw	r18,56(sp)
    287c:	dc400d15 	stw	r17,52(sp)
    2880:	dfc01515 	stw	ra,84(sp)
    2884:	df001415 	stw	fp,80(sp)
    2888:	ddc01315 	stw	r23,76(sp)
    288c:	dd801215 	stw	r22,72(sp)
    2890:	dd401115 	stw	r21,68(sp)
    2894:	dd001015 	stw	r20,64(sp)
    2898:	2c20703a 	and	r16,r5,r16
    289c:	10887ec4 	addi	r2,r2,8699
    28a0:	2825883a 	mov	r18,r5
    28a4:	2027883a 	mov	r19,r4
    28a8:	3023883a 	mov	r17,r6
    28ac:	14008b0e 	bge	r2,r16,2adc <__ieee754_rem_pio2+0x27c>
    28b0:	009000f4 	movhi	r2,16387
    28b4:	10b65ec4 	addi	r2,r2,-9861
    28b8:	14002f16 	blt	r2,r16,2978 <__ieee754_rem_pio2+0x118>
    28bc:	01cffe74 	movhi	r7,16377
    28c0:	01951034 	movhi	r6,21568
    28c4:	39c87ec4 	addi	r7,r7,8699
    28c8:	01417e0e 	bge	zero,r5,2ec4 <__ieee754_rem_pio2+0x664>
    28cc:	0008c700 	call	8c70 <__subdf3>
    28d0:	018ffe74 	movhi	r6,16377
    28d4:	31887ec4 	addi	r6,r6,8699
    28d8:	1009883a 	mov	r4,r2
    28dc:	180b883a 	mov	r5,r3
    28e0:	8180cb26 	beq	r16,r6,2c10 <__ieee754_rem_pio2+0x3b0>
    28e4:	018698b4 	movhi	r6,6754
    28e8:	01cf7474 	movhi	r7,15825
    28ec:	3198cc44 	addi	r6,r6,25393
    28f0:	39ed1844 	addi	r7,r7,-19359
    28f4:	d8800315 	stw	r2,12(sp)
    28f8:	d8c00215 	stw	r3,8(sp)
    28fc:	0008c700 	call	8c70 <__subdf3>
    2900:	d9000317 	ldw	r4,12(sp)
    2904:	d9400217 	ldw	r5,8(sp)
    2908:	100d883a 	mov	r6,r2
    290c:	180f883a 	mov	r7,r3
    2910:	88800015 	stw	r2,0(r17)
    2914:	88c00115 	stw	r3,4(r17)
    2918:	0008c700 	call	8c70 <__subdf3>
    291c:	018698b4 	movhi	r6,6754
    2920:	01cf7474 	movhi	r7,15825
    2924:	3198cc44 	addi	r6,r6,25393
    2928:	39ed1844 	addi	r7,r7,-19359
    292c:	1009883a 	mov	r4,r2
    2930:	180b883a 	mov	r5,r3
    2934:	0008c700 	call	8c70 <__subdf3>
    2938:	88800215 	stw	r2,8(r17)
    293c:	88c00315 	stw	r3,12(r17)
    2940:	05000044 	movi	r20,1
    2944:	a005883a 	mov	r2,r20
    2948:	dfc01517 	ldw	ra,84(sp)
    294c:	df001417 	ldw	fp,80(sp)
    2950:	ddc01317 	ldw	r23,76(sp)
    2954:	dd801217 	ldw	r22,72(sp)
    2958:	dd401117 	ldw	r21,68(sp)
    295c:	dd001017 	ldw	r20,64(sp)
    2960:	dcc00f17 	ldw	r19,60(sp)
    2964:	dc800e17 	ldw	r18,56(sp)
    2968:	dc400d17 	ldw	r17,52(sp)
    296c:	dc000c17 	ldw	r16,48(sp)
    2970:	dec01604 	addi	sp,sp,88
    2974:	f800283a 	ret
    2978:	00904e74 	movhi	r2,16697
    297c:	10887ec4 	addi	r2,r2,8699
    2980:	14005c16 	blt	r2,r16,2af4 <__ieee754_rem_pio2+0x294>
    2984:	019b72b4 	movhi	r6,28106
    2988:	01cff934 	movhi	r7,16356
    298c:	31b220c4 	addi	r6,r6,-14205
    2990:	39d7cc04 	addi	r7,r7,24368
    2994:	800b883a 	mov	r5,r16
    2998:	00084c40 	call	84c4 <__muldf3>
    299c:	000d883a 	mov	r6,zero
    29a0:	01cff834 	movhi	r7,16352
    29a4:	1009883a 	mov	r4,r2
    29a8:	180b883a 	mov	r5,r3
    29ac:	00070700 	call	7070 <__adddf3>
    29b0:	180b883a 	mov	r5,r3
    29b4:	1009883a 	mov	r4,r2
    29b8:	00095d00 	call	95d0 <__fixdfsi>
    29bc:	1009883a 	mov	r4,r2
    29c0:	1029883a 	mov	r20,r2
    29c4:	00096500 	call	9650 <__floatsidf>
    29c8:	01cffe74 	movhi	r7,16377
    29cc:	01951034 	movhi	r6,21568
    29d0:	39c87ec4 	addi	r7,r7,8699
    29d4:	1009883a 	mov	r4,r2
    29d8:	180b883a 	mov	r5,r3
    29dc:	102d883a 	mov	r22,r2
    29e0:	182b883a 	mov	r21,r3
    29e4:	00084c40 	call	84c4 <__muldf3>
    29e8:	9809883a 	mov	r4,r19
    29ec:	100d883a 	mov	r6,r2
    29f0:	180f883a 	mov	r7,r3
    29f4:	800b883a 	mov	r5,r16
    29f8:	0008c700 	call	8c70 <__subdf3>
    29fc:	018698b4 	movhi	r6,6754
    2a00:	01cf7474 	movhi	r7,15825
    2a04:	3198cc44 	addi	r6,r6,25393
    2a08:	39ed1844 	addi	r7,r7,-19359
    2a0c:	b009883a 	mov	r4,r22
    2a10:	a80b883a 	mov	r5,r21
    2a14:	1039883a 	mov	fp,r2
    2a18:	d8c00215 	stw	r3,8(sp)
    2a1c:	00084c40 	call	84c4 <__muldf3>
    2a20:	db000217 	ldw	r12,8(sp)
    2a24:	e009883a 	mov	r4,fp
    2a28:	100d883a 	mov	r6,r2
    2a2c:	600b883a 	mov	r5,r12
    2a30:	180f883a 	mov	r7,r3
    2a34:	db000315 	stw	r12,12(sp)
    2a38:	102f883a 	mov	r23,r2
    2a3c:	1827883a 	mov	r19,r3
    2a40:	df000415 	stw	fp,16(sp)
    2a44:	0008c700 	call	8c70 <__subdf3>
    2a48:	a1000808 	cmpgei	r4,r20,32
    2a4c:	db000317 	ldw	r12,12(sp)
    2a50:	1017883a 	mov	r11,r2
    2a54:	1815883a 	mov	r10,r3
    2a58:	e01b883a 	mov	r13,fp
    2a5c:	2000851e 	bne	r4,zero,2c74 <__ieee754_rem_pio2+0x414>
    2a60:	a00a90ba 	slli	r5,r20,2
    2a64:	01000074 	movhi	r4,1
    2a68:	2909883a 	add	r4,r5,r4
    2a6c:	211c8d17 	ldw	r4,29236(r4)
    2a70:	24008026 	beq	r4,r16,2c74 <__ieee754_rem_pio2+0x414>
    2a74:	88800015 	stw	r2,0(r17)
    2a78:	88c00115 	stw	r3,4(r17)
    2a7c:	580d883a 	mov	r6,r11
    2a80:	500f883a 	mov	r7,r10
    2a84:	6809883a 	mov	r4,r13
    2a88:	600b883a 	mov	r5,r12
    2a8c:	dac00315 	stw	r11,12(sp)
    2a90:	da800215 	stw	r10,8(sp)
    2a94:	0008c700 	call	8c70 <__subdf3>
    2a98:	b80d883a 	mov	r6,r23
    2a9c:	980f883a 	mov	r7,r19
    2aa0:	1009883a 	mov	r4,r2
    2aa4:	180b883a 	mov	r5,r3
    2aa8:	0008c700 	call	8c70 <__subdf3>
    2aac:	88800215 	stw	r2,8(r17)
    2ab0:	88c00315 	stw	r3,12(r17)
    2ab4:	903fa30e 	bge	r18,zero,2944 <__ieee754_rem_pio2+0xe4>
    2ab8:	da800217 	ldw	r10,8(sp)
    2abc:	dac00317 	ldw	r11,12(sp)
    2ac0:	18e0003c 	xorhi	r3,r3,32768
    2ac4:	52a0003c 	xorhi	r10,r10,32768
    2ac8:	8ac00015 	stw	r11,0(r17)
    2acc:	8a800115 	stw	r10,4(r17)
    2ad0:	88c00315 	stw	r3,12(r17)
    2ad4:	0529c83a 	sub	r20,zero,r20
    2ad8:	003f9a06 	br	2944 <__ieee754_rem_pio2+0xe4>
    2adc:	89000015 	stw	r4,0(r17)
    2ae0:	89400115 	stw	r5,4(r17)
    2ae4:	30000215 	stw	zero,8(r6)
    2ae8:	30000315 	stw	zero,12(r6)
    2aec:	0029883a 	mov	r20,zero
    2af0:	003f9406 	br	2944 <__ieee754_rem_pio2+0xe4>
    2af4:	009ffc34 	movhi	r2,32752
    2af8:	8080670e 	bge	r16,r2,2c98 <__ieee754_rem_pio2+0x438>
    2afc:	8029d53a 	srai	r20,r16,20
    2b00:	a53efa84 	addi	r20,r20,-1046
    2b04:	a00a953a 	slli	r5,r20,20
    2b08:	8161c83a 	sub	r16,r16,r5
    2b0c:	800b883a 	mov	r5,r16
    2b10:	00095d00 	call	95d0 <__fixdfsi>
    2b14:	1009883a 	mov	r4,r2
    2b18:	00096500 	call	9650 <__floatsidf>
    2b1c:	9809883a 	mov	r4,r19
    2b20:	800b883a 	mov	r5,r16
    2b24:	100d883a 	mov	r6,r2
    2b28:	180f883a 	mov	r7,r3
    2b2c:	d8800615 	stw	r2,24(sp)
    2b30:	d8c00715 	stw	r3,28(sp)
    2b34:	0008c700 	call	8c70 <__subdf3>
    2b38:	000d883a 	mov	r6,zero
    2b3c:	01d05c34 	movhi	r7,16752
    2b40:	1009883a 	mov	r4,r2
    2b44:	180b883a 	mov	r5,r3
    2b48:	00084c40 	call	84c4 <__muldf3>
    2b4c:	180b883a 	mov	r5,r3
    2b50:	1009883a 	mov	r4,r2
    2b54:	1821883a 	mov	r16,r3
    2b58:	1027883a 	mov	r19,r2
    2b5c:	00095d00 	call	95d0 <__fixdfsi>
    2b60:	1009883a 	mov	r4,r2
    2b64:	102b883a 	mov	r21,r2
    2b68:	00096500 	call	9650 <__floatsidf>
    2b6c:	100d883a 	mov	r6,r2
    2b70:	180f883a 	mov	r7,r3
    2b74:	9809883a 	mov	r4,r19
    2b78:	800b883a 	mov	r5,r16
    2b7c:	d8800815 	stw	r2,32(sp)
    2b80:	d8c00915 	stw	r3,36(sp)
    2b84:	0008c700 	call	8c70 <__subdf3>
    2b88:	000d883a 	mov	r6,zero
    2b8c:	01d05c34 	movhi	r7,16752
    2b90:	1009883a 	mov	r4,r2
    2b94:	180b883a 	mov	r5,r3
    2b98:	00084c40 	call	84c4 <__muldf3>
    2b9c:	1009883a 	mov	r4,r2
    2ba0:	180b883a 	mov	r5,r3
    2ba4:	000d883a 	mov	r6,zero
    2ba8:	000f883a 	mov	r7,zero
    2bac:	d8800a15 	stw	r2,40(sp)
    2bb0:	d8c00b15 	stw	r3,44(sp)
    2bb4:	00082740 	call	8274 <__eqdf2>
    2bb8:	1000c01e 	bne	r2,zero,2ebc <__ieee754_rem_pio2+0x65c>
    2bbc:	a800bd1e 	bne	r21,zero,2eb4 <__ieee754_rem_pio2+0x654>
    2bc0:	01c00044 	movi	r7,1
    2bc4:	00800074 	movhi	r2,1
    2bc8:	109cae04 	addi	r2,r2,29368
    2bcc:	d8800115 	stw	r2,4(sp)
    2bd0:	00800084 	movi	r2,2
    2bd4:	a00d883a 	mov	r6,r20
    2bd8:	d8800015 	stw	r2,0(sp)
    2bdc:	880b883a 	mov	r5,r17
    2be0:	d9000604 	addi	r4,sp,24
    2be4:	0003bc00 	call	3bc0 <__kernel_rem_pio2>
    2be8:	1029883a 	mov	r20,r2
    2bec:	903f550e 	bge	r18,zero,2944 <__ieee754_rem_pio2+0xe4>
    2bf0:	88c00117 	ldw	r3,4(r17)
    2bf4:	88800317 	ldw	r2,12(r17)
    2bf8:	0529c83a 	sub	r20,zero,r20
    2bfc:	18e0003c 	xorhi	r3,r3,32768
    2c00:	10a0003c 	xorhi	r2,r2,32768
    2c04:	88c00115 	stw	r3,4(r17)
    2c08:	88800315 	stw	r2,12(r17)
    2c0c:	003f4d06 	br	2944 <__ieee754_rem_pio2+0xe4>
    2c10:	01cf7474 	movhi	r7,15825
    2c14:	01869834 	movhi	r6,6752
    2c18:	39ed1844 	addi	r7,r7,-19359
    2c1c:	0008c700 	call	8c70 <__subdf3>
    2c20:	018b80f4 	movhi	r6,11779
    2c24:	01cee8f4 	movhi	r7,15267
    2c28:	319c1cc4 	addi	r6,r6,28787
    2c2c:	39c66284 	addi	r7,r7,6538
    2c30:	1009883a 	mov	r4,r2
    2c34:	180b883a 	mov	r5,r3
    2c38:	1025883a 	mov	r18,r2
    2c3c:	1821883a 	mov	r16,r3
    2c40:	0008c700 	call	8c70 <__subdf3>
    2c44:	100d883a 	mov	r6,r2
    2c48:	180f883a 	mov	r7,r3
    2c4c:	9009883a 	mov	r4,r18
    2c50:	800b883a 	mov	r5,r16
    2c54:	88800015 	stw	r2,0(r17)
    2c58:	88c00115 	stw	r3,4(r17)
    2c5c:	0008c700 	call	8c70 <__subdf3>
    2c60:	018b80f4 	movhi	r6,11779
    2c64:	01cee8f4 	movhi	r7,15267
    2c68:	319c1cc4 	addi	r6,r6,28787
    2c6c:	39c66284 	addi	r7,r7,6538
    2c70:	003f2e06 	br	292c <__ieee754_rem_pio2+0xcc>
    2c74:	1812d53a 	srli	r9,r3,20
    2c78:	8021d53a 	srai	r16,r16,20
    2c7c:	4a41ffcc 	andi	r9,r9,2047
    2c80:	8253c83a 	sub	r9,r16,r9
    2c84:	4a400448 	cmpgei	r9,r9,17
    2c88:	48000c1e 	bne	r9,zero,2cbc <__ieee754_rem_pio2+0x45c>
    2c8c:	88800015 	stw	r2,0(r17)
    2c90:	88c00115 	stw	r3,4(r17)
    2c94:	003f7906 	br	2a7c <__ieee754_rem_pio2+0x21c>
    2c98:	200d883a 	mov	r6,r4
    2c9c:	280f883a 	mov	r7,r5
    2ca0:	0008c700 	call	8c70 <__subdf3>
    2ca4:	88800215 	stw	r2,8(r17)
    2ca8:	88c00315 	stw	r3,12(r17)
    2cac:	88800015 	stw	r2,0(r17)
    2cb0:	88c00115 	stw	r3,4(r17)
    2cb4:	0029883a 	mov	r20,zero
    2cb8:	003f2206 	br	2944 <__ieee754_rem_pio2+0xe4>
    2cbc:	01cf7474 	movhi	r7,15825
    2cc0:	01869834 	movhi	r6,6752
    2cc4:	39ed1844 	addi	r7,r7,-19359
    2cc8:	b009883a 	mov	r4,r22
    2ccc:	a80b883a 	mov	r5,r21
    2cd0:	00084c40 	call	84c4 <__muldf3>
    2cd4:	d9400217 	ldw	r5,8(sp)
    2cd8:	100d883a 	mov	r6,r2
    2cdc:	180f883a 	mov	r7,r3
    2ce0:	e009883a 	mov	r4,fp
    2ce4:	102f883a 	mov	r23,r2
    2ce8:	1827883a 	mov	r19,r3
    2cec:	0008c700 	call	8c70 <__subdf3>
    2cf0:	d9400217 	ldw	r5,8(sp)
    2cf4:	100d883a 	mov	r6,r2
    2cf8:	180f883a 	mov	r7,r3
    2cfc:	e009883a 	mov	r4,fp
    2d00:	d8800315 	stw	r2,12(sp)
    2d04:	d8c00415 	stw	r3,16(sp)
    2d08:	0008c700 	call	8c70 <__subdf3>
    2d0c:	b80d883a 	mov	r6,r23
    2d10:	980f883a 	mov	r7,r19
    2d14:	1009883a 	mov	r4,r2
    2d18:	180b883a 	mov	r5,r3
    2d1c:	0008c700 	call	8c70 <__subdf3>
    2d20:	018b80f4 	movhi	r6,11779
    2d24:	01cee8f4 	movhi	r7,15267
    2d28:	319c1cc4 	addi	r6,r6,28787
    2d2c:	39c66284 	addi	r7,r7,6538
    2d30:	b009883a 	mov	r4,r22
    2d34:	a80b883a 	mov	r5,r21
    2d38:	102f883a 	mov	r23,r2
    2d3c:	1827883a 	mov	r19,r3
    2d40:	00084c40 	call	84c4 <__muldf3>
    2d44:	b80d883a 	mov	r6,r23
    2d48:	980f883a 	mov	r7,r19
    2d4c:	1009883a 	mov	r4,r2
    2d50:	180b883a 	mov	r5,r3
    2d54:	0008c700 	call	8c70 <__subdf3>
    2d58:	da400417 	ldw	r9,16(sp)
    2d5c:	db800317 	ldw	r14,12(sp)
    2d60:	100d883a 	mov	r6,r2
    2d64:	480b883a 	mov	r5,r9
    2d68:	7009883a 	mov	r4,r14
    2d6c:	180f883a 	mov	r7,r3
    2d70:	da400215 	stw	r9,8(sp)
    2d74:	102f883a 	mov	r23,r2
    2d78:	1827883a 	mov	r19,r3
    2d7c:	0008c700 	call	8c70 <__subdf3>
    2d80:	1815883a 	mov	r10,r3
    2d84:	1806d53a 	srli	r3,r3,20
    2d88:	da400217 	ldw	r9,8(sp)
    2d8c:	db800317 	ldw	r14,12(sp)
    2d90:	18c1ffcc 	andi	r3,r3,2047
    2d94:	80e1c83a 	sub	r16,r16,r3
    2d98:	84000c88 	cmpgei	r16,r16,50
    2d9c:	1017883a 	mov	r11,r2
    2da0:	80003f26 	beq	r16,zero,2ea0 <__ieee754_rem_pio2+0x640>
    2da4:	01cee8f4 	movhi	r7,15267
    2da8:	018b8034 	movhi	r6,11776
    2dac:	39c66284 	addi	r7,r7,6538
    2db0:	b009883a 	mov	r4,r22
    2db4:	a80b883a 	mov	r5,r21
    2db8:	da400315 	stw	r9,12(sp)
    2dbc:	db800215 	stw	r14,8(sp)
    2dc0:	00084c40 	call	84c4 <__muldf3>
    2dc4:	db800217 	ldw	r14,8(sp)
    2dc8:	da400317 	ldw	r9,12(sp)
    2dcc:	100d883a 	mov	r6,r2
    2dd0:	7009883a 	mov	r4,r14
    2dd4:	480b883a 	mov	r5,r9
    2dd8:	180f883a 	mov	r7,r3
    2ddc:	1027883a 	mov	r19,r2
    2de0:	1821883a 	mov	r16,r3
    2de4:	db800515 	stw	r14,20(sp)
    2de8:	da400415 	stw	r9,16(sp)
    2dec:	0008c700 	call	8c70 <__subdf3>
    2df0:	db800517 	ldw	r14,20(sp)
    2df4:	da400417 	ldw	r9,16(sp)
    2df8:	100d883a 	mov	r6,r2
    2dfc:	7009883a 	mov	r4,r14
    2e00:	480b883a 	mov	r5,r9
    2e04:	180f883a 	mov	r7,r3
    2e08:	d8800315 	stw	r2,12(sp)
    2e0c:	d8c00215 	stw	r3,8(sp)
    2e10:	0008c700 	call	8c70 <__subdf3>
    2e14:	980d883a 	mov	r6,r19
    2e18:	800f883a 	mov	r7,r16
    2e1c:	1009883a 	mov	r4,r2
    2e20:	180b883a 	mov	r5,r3
    2e24:	0008c700 	call	8c70 <__subdf3>
    2e28:	01894834 	movhi	r6,9504
    2e2c:	01ce5f34 	movhi	r7,14716
    2e30:	31927044 	addi	r6,r6,18881
    2e34:	39e0e684 	addi	r7,r7,-31846
    2e38:	b009883a 	mov	r4,r22
    2e3c:	a80b883a 	mov	r5,r21
    2e40:	1027883a 	mov	r19,r2
    2e44:	1821883a 	mov	r16,r3
    2e48:	00084c40 	call	84c4 <__muldf3>
    2e4c:	980d883a 	mov	r6,r19
    2e50:	800f883a 	mov	r7,r16
    2e54:	1009883a 	mov	r4,r2
    2e58:	180b883a 	mov	r5,r3
    2e5c:	0008c700 	call	8c70 <__subdf3>
    2e60:	db400317 	ldw	r13,12(sp)
    2e64:	db000217 	ldw	r12,8(sp)
    2e68:	100d883a 	mov	r6,r2
    2e6c:	6809883a 	mov	r4,r13
    2e70:	600b883a 	mov	r5,r12
    2e74:	180f883a 	mov	r7,r3
    2e78:	102f883a 	mov	r23,r2
    2e7c:	1827883a 	mov	r19,r3
    2e80:	0008c700 	call	8c70 <__subdf3>
    2e84:	db400317 	ldw	r13,12(sp)
    2e88:	db000217 	ldw	r12,8(sp)
    2e8c:	1017883a 	mov	r11,r2
    2e90:	1815883a 	mov	r10,r3
    2e94:	88800015 	stw	r2,0(r17)
    2e98:	88c00115 	stw	r3,4(r17)
    2e9c:	003ef706 	br	2a7c <__ieee754_rem_pio2+0x21c>
    2ea0:	88800015 	stw	r2,0(r17)
    2ea4:	8a800115 	stw	r10,4(r17)
    2ea8:	701b883a 	mov	r13,r14
    2eac:	4819883a 	mov	r12,r9
    2eb0:	003ef206 	br	2a7c <__ieee754_rem_pio2+0x21c>
    2eb4:	01c00084 	movi	r7,2
    2eb8:	003f4206 	br	2bc4 <__ieee754_rem_pio2+0x364>
    2ebc:	01c000c4 	movi	r7,3
    2ec0:	003f4006 	br	2bc4 <__ieee754_rem_pio2+0x364>
    2ec4:	00070700 	call	7070 <__adddf3>
    2ec8:	010ffe74 	movhi	r4,16377
    2ecc:	21087ec4 	addi	r4,r4,8699
    2ed0:	1027883a 	mov	r19,r2
    2ed4:	1825883a 	mov	r18,r3
    2ed8:	81001926 	beq	r16,r4,2f40 <__ieee754_rem_pio2+0x6e0>
    2edc:	018698b4 	movhi	r6,6754
    2ee0:	01cf7474 	movhi	r7,15825
    2ee4:	3198cc44 	addi	r6,r6,25393
    2ee8:	39ed1844 	addi	r7,r7,-19359
    2eec:	1009883a 	mov	r4,r2
    2ef0:	180b883a 	mov	r5,r3
    2ef4:	00070700 	call	7070 <__adddf3>
    2ef8:	100d883a 	mov	r6,r2
    2efc:	180f883a 	mov	r7,r3
    2f00:	9809883a 	mov	r4,r19
    2f04:	900b883a 	mov	r5,r18
    2f08:	88800015 	stw	r2,0(r17)
    2f0c:	88c00115 	stw	r3,4(r17)
    2f10:	0008c700 	call	8c70 <__subdf3>
    2f14:	018698b4 	movhi	r6,6754
    2f18:	01cf7474 	movhi	r7,15825
    2f1c:	3198cc44 	addi	r6,r6,25393
    2f20:	39ed1844 	addi	r7,r7,-19359
    2f24:	1009883a 	mov	r4,r2
    2f28:	180b883a 	mov	r5,r3
    2f2c:	00070700 	call	7070 <__adddf3>
    2f30:	88800215 	stw	r2,8(r17)
    2f34:	88c00315 	stw	r3,12(r17)
    2f38:	053fffc4 	movi	r20,-1
    2f3c:	003e8106 	br	2944 <__ieee754_rem_pio2+0xe4>
    2f40:	01cf7474 	movhi	r7,15825
    2f44:	01869834 	movhi	r6,6752
    2f48:	39ed1844 	addi	r7,r7,-19359
    2f4c:	1009883a 	mov	r4,r2
    2f50:	180b883a 	mov	r5,r3
    2f54:	00070700 	call	7070 <__adddf3>
    2f58:	018b80f4 	movhi	r6,11779
    2f5c:	01cee8f4 	movhi	r7,15267
    2f60:	319c1cc4 	addi	r6,r6,28787
    2f64:	39c66284 	addi	r7,r7,6538
    2f68:	1009883a 	mov	r4,r2
    2f6c:	180b883a 	mov	r5,r3
    2f70:	1025883a 	mov	r18,r2
    2f74:	1821883a 	mov	r16,r3
    2f78:	00070700 	call	7070 <__adddf3>
    2f7c:	100d883a 	mov	r6,r2
    2f80:	180f883a 	mov	r7,r3
    2f84:	9009883a 	mov	r4,r18
    2f88:	800b883a 	mov	r5,r16
    2f8c:	88800015 	stw	r2,0(r17)
    2f90:	88c00115 	stw	r3,4(r17)
    2f94:	0008c700 	call	8c70 <__subdf3>
    2f98:	018b80f4 	movhi	r6,11779
    2f9c:	01cee8f4 	movhi	r7,15267
    2fa0:	319c1cc4 	addi	r6,r6,28787
    2fa4:	39c66284 	addi	r7,r7,6538
    2fa8:	003fde06 	br	2f24 <__ieee754_rem_pio2+0x6c4>

00002fac <__ieee754_sqrt>:
    2fac:	defffd04 	addi	sp,sp,-12
    2fb0:	dc400115 	stw	r17,4(sp)
    2fb4:	dc000015 	stw	r16,0(sp)
    2fb8:	dfc00215 	stw	ra,8(sp)
    2fbc:	28dffc2c 	andhi	r3,r5,32752
    2fc0:	009ffc34 	movhi	r2,32752
    2fc4:	2821883a 	mov	r16,r5
    2fc8:	2023883a 	mov	r17,r4
    2fcc:	18807726 	beq	r3,r2,31ac <__ieee754_sqrt+0x200>
    2fd0:	2011883a 	mov	r8,r4
    2fd4:	01403a0e 	bge	zero,r5,30c0 <__ieee754_sqrt+0x114>
    2fd8:	2807d53a 	srai	r3,r5,20
    2fdc:	18004626 	beq	r3,zero,30f8 <__ieee754_sqrt+0x14c>
    2fe0:	00800434 	movhi	r2,16
    2fe4:	1aff0044 	addi	r11,r3,-1023
    2fe8:	10bfffc4 	addi	r2,r2,-1
    2fec:	8084703a 	and	r2,r16,r2
    2ff0:	5900004c 	andi	r4,r11,1
    2ff4:	10c00434 	orhi	r3,r2,16
    2ff8:	20000426 	beq	r4,zero,300c <__ieee754_sqrt+0x60>
    2ffc:	4004d7fa 	srli	r2,r8,31
    3000:	18c7883a 	add	r3,r3,r3
    3004:	4211883a 	add	r8,r8,r8
    3008:	10c7883a 	add	r3,r2,r3
    300c:	4004d7fa 	srli	r2,r8,31
    3010:	5817d07a 	srai	r11,r11,1
    3014:	18c7883a 	add	r3,r3,r3
    3018:	1887883a 	add	r3,r3,r2
    301c:	4209883a 	add	r4,r8,r8
    3020:	01c00584 	movi	r7,22
    3024:	0019883a 	mov	r12,zero
    3028:	000b883a 	mov	r5,zero
    302c:	00800834 	movhi	r2,32
    3030:	288d883a 	add	r6,r5,r2
    3034:	2010d7fa 	srli	r8,r4,31
    3038:	39ffffc4 	addi	r7,r7,-1
    303c:	19800316 	blt	r3,r6,304c <__ieee754_sqrt+0xa0>
    3040:	1987c83a 	sub	r3,r3,r6
    3044:	308b883a 	add	r5,r6,r2
    3048:	6099883a 	add	r12,r12,r2
    304c:	18c7883a 	add	r3,r3,r3
    3050:	1004d07a 	srli	r2,r2,1
    3054:	40c7883a 	add	r3,r8,r3
    3058:	2109883a 	add	r4,r4,r4
    305c:	383ff41e 	bne	r7,zero,3030 <__ieee754_sqrt+0x84>
    3060:	0013883a 	mov	r9,zero
    3064:	00800804 	movi	r2,32
    3068:	01a00034 	movhi	r6,32768
    306c:	00000806 	br	3090 <__ieee754_sqrt+0xe4>
    3070:	19403326 	beq	r3,r5,3140 <__ieee754_sqrt+0x194>
    3074:	2010d7fa 	srli	r8,r4,31
    3078:	18c7883a 	add	r3,r3,r3
    307c:	10bfffc4 	addi	r2,r2,-1
    3080:	300cd07a 	srli	r6,r6,1
    3084:	1a07883a 	add	r3,r3,r8
    3088:	2109883a 	add	r4,r4,r4
    308c:	10003226 	beq	r2,zero,3158 <__ieee754_sqrt+0x1ac>
    3090:	31d1883a 	add	r8,r6,r7
    3094:	28fff60e 	bge	r5,r3,3070 <__ieee754_sqrt+0xc4>
    3098:	418f883a 	add	r7,r8,r6
    309c:	40002516 	blt	r8,zero,3134 <__ieee754_sqrt+0x188>
    30a0:	2815883a 	mov	r10,r5
    30a4:	1947c83a 	sub	r3,r3,r5
    30a8:	2200012e 	bgeu	r4,r8,30b0 <__ieee754_sqrt+0x104>
    30ac:	18ffffc4 	addi	r3,r3,-1
    30b0:	2209c83a 	sub	r4,r4,r8
    30b4:	4993883a 	add	r9,r9,r6
    30b8:	500b883a 	mov	r5,r10
    30bc:	003fed06 	br	3074 <__ieee754_sqrt+0xc8>
    30c0:	00a00034 	movhi	r2,32768
    30c4:	10bfffc4 	addi	r2,r2,-1
    30c8:	2884703a 	and	r2,r5,r2
    30cc:	1104b03a 	or	r2,r2,r4
    30d0:	10004826 	beq	r2,zero,31f4 <__ieee754_sqrt+0x248>
    30d4:	28003e1e 	bne	r5,zero,31d0 <__ieee754_sqrt+0x224>
    30d8:	0007883a 	mov	r3,zero
    30dc:	4004d2fa 	srli	r2,r8,11
    30e0:	18fffac4 	addi	r3,r3,-21
    30e4:	4010957a 	slli	r8,r8,21
    30e8:	1021883a 	mov	r16,r2
    30ec:	103ffb26 	beq	r2,zero,30dc <__ieee754_sqrt+0x130>
    30f0:	1100042c 	andhi	r4,r2,16
    30f4:	2000441e 	bne	r4,zero,3208 <__ieee754_sqrt+0x25c>
    30f8:	0005883a 	mov	r2,zero
    30fc:	8421883a 	add	r16,r16,r16
    3100:	8140042c 	andhi	r5,r16,16
    3104:	1009883a 	mov	r4,r2
    3108:	10800044 	addi	r2,r2,1
    310c:	283ffb26 	beq	r5,zero,30fc <__ieee754_sqrt+0x150>
    3110:	01800804 	movi	r6,32
    3114:	400b883a 	mov	r5,r8
    3118:	308dc83a 	sub	r6,r6,r2
    311c:	4090983a 	sll	r8,r8,r2
    3120:	8005883a 	mov	r2,r16
    3124:	298ed83a 	srl	r7,r5,r6
    3128:	1907c83a 	sub	r3,r3,r4
    312c:	38a0b03a 	or	r16,r7,r2
    3130:	003fab06 	br	2fe0 <__ieee754_sqrt+0x34>
    3134:	383fda16 	blt	r7,zero,30a0 <__ieee754_sqrt+0xf4>
    3138:	2a800044 	addi	r10,r5,1
    313c:	003fd906 	br	30a4 <__ieee754_sqrt+0xf8>
    3140:	223fcc36 	bltu	r4,r8,3074 <__ieee754_sqrt+0xc8>
    3144:	418f883a 	add	r7,r8,r6
    3148:	403ffa16 	blt	r8,zero,3134 <__ieee754_sqrt+0x188>
    314c:	1815883a 	mov	r10,r3
    3150:	0007883a 	mov	r3,zero
    3154:	003fd606 	br	30b0 <__ieee754_sqrt+0x104>
    3158:	1906b03a 	or	r3,r3,r4
    315c:	18000e1e 	bne	r3,zero,3198 <__ieee754_sqrt+0x1ec>
    3160:	4804d07a 	srli	r2,r9,1
    3164:	6007d07a 	srai	r3,r12,1
    3168:	01cff834 	movhi	r7,16352
    316c:	6300004c 	andi	r12,r12,1
    3170:	19cf883a 	add	r7,r3,r7
    3174:	60000126 	beq	r12,zero,317c <__ieee754_sqrt+0x1d0>
    3178:	10a00034 	orhi	r2,r2,32768
    317c:	5806953a 	slli	r3,r11,20
    3180:	19c7883a 	add	r3,r3,r7
    3184:	dfc00217 	ldw	ra,8(sp)
    3188:	dc400117 	ldw	r17,4(sp)
    318c:	dc000017 	ldw	r16,0(sp)
    3190:	dec00304 	addi	sp,sp,12
    3194:	f800283a 	ret
    3198:	48ffffd8 	cmpnei	r3,r9,-1
    319c:	18001826 	beq	r3,zero,3200 <__ieee754_sqrt+0x254>
    31a0:	48800044 	addi	r2,r9,1
    31a4:	1004d07a 	srli	r2,r2,1
    31a8:	003fee06 	br	3164 <__ieee754_sqrt+0x1b8>
    31ac:	200d883a 	mov	r6,r4
    31b0:	280f883a 	mov	r7,r5
    31b4:	00084c40 	call	84c4 <__muldf3>
    31b8:	880d883a 	mov	r6,r17
    31bc:	800f883a 	mov	r7,r16
    31c0:	1009883a 	mov	r4,r2
    31c4:	180b883a 	mov	r5,r3
    31c8:	00070700 	call	7070 <__adddf3>
    31cc:	003fed06 	br	3184 <__ieee754_sqrt+0x1d8>
    31d0:	200d883a 	mov	r6,r4
    31d4:	280f883a 	mov	r7,r5
    31d8:	0008c700 	call	8c70 <__subdf3>
    31dc:	100d883a 	mov	r6,r2
    31e0:	180f883a 	mov	r7,r3
    31e4:	1009883a 	mov	r4,r2
    31e8:	180b883a 	mov	r5,r3
    31ec:	00079600 	call	7960 <__divdf3>
    31f0:	003fe406 	br	3184 <__ieee754_sqrt+0x1d8>
    31f4:	2005883a 	mov	r2,r4
    31f8:	2807883a 	mov	r3,r5
    31fc:	003fe106 	br	3184 <__ieee754_sqrt+0x1d8>
    3200:	63000044 	addi	r12,r12,1
    3204:	003fd706 	br	3164 <__ieee754_sqrt+0x1b8>
    3208:	400b883a 	mov	r5,r8
    320c:	01800804 	movi	r6,32
    3210:	013fffc4 	movi	r4,-1
    3214:	003fc306 	br	3124 <__ieee754_sqrt+0x178>

00003218 <__ieee754_rem_pio2f>:
    3218:	defff104 	addi	sp,sp,-60
    321c:	dc000515 	stw	r16,20(sp)
    3220:	04200034 	movhi	r16,32768
    3224:	843fffc4 	addi	r16,r16,-1
    3228:	008fd274 	movhi	r2,16201
    322c:	dc400615 	stw	r17,24(sp)
    3230:	dfc00e15 	stw	ra,56(sp)
    3234:	df000d15 	stw	fp,52(sp)
    3238:	ddc00c15 	stw	r23,48(sp)
    323c:	dd800b15 	stw	r22,44(sp)
    3240:	dd400a15 	stw	r21,40(sp)
    3244:	dd000915 	stw	r20,36(sp)
    3248:	dcc00815 	stw	r19,32(sp)
    324c:	dc800715 	stw	r18,28(sp)
    3250:	8120703a 	and	r16,r16,r4
    3254:	1083f604 	addi	r2,r2,4056
    3258:	2823883a 	mov	r17,r5
    325c:	1400620e 	bge	r2,r16,33e8 <__ieee754_rem_pio2f+0x1d0>
    3260:	009005f4 	movhi	r2,16407
    3264:	10b2f8c4 	addi	r2,r2,-13341
    3268:	2025883a 	mov	r18,r4
    326c:	14002516 	blt	r2,r16,3304 <__ieee754_rem_pio2f+0xec>
    3270:	00bffc04 	movi	r2,-16
    3274:	014ff274 	movhi	r5,16329
    3278:	80a0703a 	and	r16,r16,r2
    327c:	2943e004 	addi	r5,r5,3968
    3280:	0100fd0e 	bge	zero,r4,3678 <__ieee754_rem_pio2f+0x460>
    3284:	0006a480 	call	6a48 <__subsf3>
    3288:	1025883a 	mov	r18,r2
    328c:	008ff274 	movhi	r2,16329
    3290:	1083f404 	addi	r2,r2,4048
    3294:	014dcd74 	movhi	r5,14133
    3298:	80809226 	beq	r16,r2,34e4 <__ieee754_rem_pio2f+0x2cc>
    329c:	295110c4 	addi	r5,r5,17475
    32a0:	9009883a 	mov	r4,r18
    32a4:	0006a480 	call	6a48 <__subsf3>
    32a8:	100b883a 	mov	r5,r2
    32ac:	9009883a 	mov	r4,r18
    32b0:	88800015 	stw	r2,0(r17)
    32b4:	0006a480 	call	6a48 <__subsf3>
    32b8:	014dcd74 	movhi	r5,14133
    32bc:	295110c4 	addi	r5,r5,17475
    32c0:	1009883a 	mov	r4,r2
    32c4:	0006a480 	call	6a48 <__subsf3>
    32c8:	88800115 	stw	r2,4(r17)
    32cc:	05c00044 	movi	r23,1
    32d0:	b805883a 	mov	r2,r23
    32d4:	dfc00e17 	ldw	ra,56(sp)
    32d8:	df000d17 	ldw	fp,52(sp)
    32dc:	ddc00c17 	ldw	r23,48(sp)
    32e0:	dd800b17 	ldw	r22,44(sp)
    32e4:	dd400a17 	ldw	r21,40(sp)
    32e8:	dd000917 	ldw	r20,36(sp)
    32ec:	dcc00817 	ldw	r19,32(sp)
    32f0:	dc800717 	ldw	r18,28(sp)
    32f4:	dc400617 	ldw	r17,24(sp)
    32f8:	dc000517 	ldw	r16,20(sp)
    32fc:	dec00f04 	addi	sp,sp,60
    3300:	f800283a 	ret
    3304:	0090d274 	movhi	r2,17225
    3308:	1083e004 	addi	r2,r2,3968
    330c:	14003a16 	blt	r2,r16,33f8 <__ieee754_rem_pio2f+0x1e0>
    3310:	014fc8f4 	movhi	r5,16163
    3314:	297e6104 	addi	r5,r5,-1660
    3318:	8009883a 	mov	r4,r16
    331c:	00066480 	call	6648 <__mulsf3>
    3320:	014fc034 	movhi	r5,16128
    3324:	1009883a 	mov	r4,r2
    3328:	00060b40 	call	60b4 <__addsf3>
    332c:	1009883a 	mov	r4,r2
    3330:	0006edc0 	call	6edc <__fixsfsi>
    3334:	1009883a 	mov	r4,r2
    3338:	102f883a 	mov	r23,r2
    333c:	0006f4c0 	call	6f4c <__floatsisf>
    3340:	014ff274 	movhi	r5,16329
    3344:	2943e004 	addi	r5,r5,3968
    3348:	1009883a 	mov	r4,r2
    334c:	102b883a 	mov	r21,r2
    3350:	00066480 	call	6648 <__mulsf3>
    3354:	100b883a 	mov	r5,r2
    3358:	8009883a 	mov	r4,r16
    335c:	0006a480 	call	6a48 <__subsf3>
    3360:	014dcd74 	movhi	r5,14133
    3364:	295110c4 	addi	r5,r5,17475
    3368:	a809883a 	mov	r4,r21
    336c:	1029883a 	mov	r20,r2
    3370:	00066480 	call	6648 <__mulsf3>
    3374:	a009883a 	mov	r4,r20
    3378:	100b883a 	mov	r5,r2
    337c:	1027883a 	mov	r19,r2
    3380:	0006a480 	call	6a48 <__subsf3>
    3384:	b8c00808 	cmpgei	r3,r23,32
    3388:	a009883a 	mov	r4,r20
    338c:	102d883a 	mov	r22,r2
    3390:	1800671e 	bne	r3,zero,3530 <__ieee754_rem_pio2f+0x318>
    3394:	b80a90ba 	slli	r5,r23,2
    3398:	00c00074 	movhi	r3,1
    339c:	28c7883a 	add	r3,r5,r3
    33a0:	195cef17 	ldw	r5,29628(r3)
    33a4:	00ffc004 	movi	r3,-256
    33a8:	80c6703a 	and	r3,r16,r3
    33ac:	19406026 	beq	r3,r5,3530 <__ieee754_rem_pio2f+0x318>
    33b0:	88800015 	stw	r2,0(r17)
    33b4:	b00b883a 	mov	r5,r22
    33b8:	0006a480 	call	6a48 <__subsf3>
    33bc:	980b883a 	mov	r5,r19
    33c0:	1009883a 	mov	r4,r2
    33c4:	0006a480 	call	6a48 <__subsf3>
    33c8:	88800115 	stw	r2,4(r17)
    33cc:	903fc00e 	bge	r18,zero,32d0 <__ieee754_rem_pio2f+0xb8>
    33d0:	b5a0003c 	xorhi	r22,r22,32768
    33d4:	10e0003c 	xorhi	r3,r2,32768
    33d8:	8d800015 	stw	r22,0(r17)
    33dc:	88c00115 	stw	r3,4(r17)
    33e0:	05efc83a 	sub	r23,zero,r23
    33e4:	003fba06 	br	32d0 <__ieee754_rem_pio2f+0xb8>
    33e8:	89000015 	stw	r4,0(r17)
    33ec:	28000115 	stw	zero,4(r5)
    33f0:	002f883a 	mov	r23,zero
    33f4:	003fb606 	br	32d0 <__ieee754_rem_pio2f+0xb8>
    33f8:	009fe034 	movhi	r2,32640
    33fc:	8080910e 	bge	r16,r2,3644 <__ieee754_rem_pio2f+0x42c>
    3400:	8027d5fa 	srai	r19,r16,23
    3404:	9cffde84 	addi	r19,r19,-134
    3408:	980495fa 	slli	r2,r19,23
    340c:	80a1c83a 	sub	r16,r16,r2
    3410:	8009883a 	mov	r4,r16
    3414:	0006edc0 	call	6edc <__fixsfsi>
    3418:	1009883a 	mov	r4,r2
    341c:	0006f4c0 	call	6f4c <__floatsisf>
    3420:	8009883a 	mov	r4,r16
    3424:	100b883a 	mov	r5,r2
    3428:	d8800215 	stw	r2,8(sp)
    342c:	0006a480 	call	6a48 <__subsf3>
    3430:	0150e034 	movhi	r5,17280
    3434:	1009883a 	mov	r4,r2
    3438:	00066480 	call	6648 <__mulsf3>
    343c:	1009883a 	mov	r4,r2
    3440:	1029883a 	mov	r20,r2
    3444:	0006edc0 	call	6edc <__fixsfsi>
    3448:	1009883a 	mov	r4,r2
    344c:	0006f4c0 	call	6f4c <__floatsisf>
    3450:	100b883a 	mov	r5,r2
    3454:	a009883a 	mov	r4,r20
    3458:	1021883a 	mov	r16,r2
    345c:	d8800315 	stw	r2,12(sp)
    3460:	0006a480 	call	6a48 <__subsf3>
    3464:	0150e034 	movhi	r5,17280
    3468:	1009883a 	mov	r4,r2
    346c:	00066480 	call	6648 <__mulsf3>
    3470:	000b883a 	mov	r5,zero
    3474:	1009883a 	mov	r4,r2
    3478:	d8800415 	stw	r2,16(sp)
    347c:	00065200 	call	6520 <__eqsf2>
    3480:	10007b1e 	bne	r2,zero,3670 <__ieee754_rem_pio2f+0x458>
    3484:	000b883a 	mov	r5,zero
    3488:	8009883a 	mov	r4,r16
    348c:	00065200 	call	6520 <__eqsf2>
    3490:	1000751e 	bne	r2,zero,3668 <__ieee754_rem_pio2f+0x450>
    3494:	01c00044 	movi	r7,1
    3498:	00800074 	movhi	r2,1
    349c:	109d1004 	addi	r2,r2,29760
    34a0:	d8800115 	stw	r2,4(sp)
    34a4:	00800084 	movi	r2,2
    34a8:	d8800015 	stw	r2,0(sp)
    34ac:	980d883a 	mov	r6,r19
    34b0:	880b883a 	mov	r5,r17
    34b4:	d9000204 	addi	r4,sp,8
    34b8:	0004e600 	call	4e60 <__kernel_rem_pio2f>
    34bc:	102f883a 	mov	r23,r2
    34c0:	903f830e 	bge	r18,zero,32d0 <__ieee754_rem_pio2f+0xb8>
    34c4:	88c00017 	ldw	r3,0(r17)
    34c8:	88800117 	ldw	r2,4(r17)
    34cc:	05efc83a 	sub	r23,zero,r23
    34d0:	18e0003c 	xorhi	r3,r3,32768
    34d4:	10a0003c 	xorhi	r2,r2,32768
    34d8:	88c00015 	stw	r3,0(r17)
    34dc:	88800115 	stw	r2,4(r17)
    34e0:	003f7b06 	br	32d0 <__ieee754_rem_pio2f+0xb8>
    34e4:	29510004 	addi	r5,r5,17408
    34e8:	9009883a 	mov	r4,r18
    34ec:	0006a480 	call	6a48 <__subsf3>
    34f0:	014ba1b4 	movhi	r5,11910
    34f4:	2968c204 	addi	r5,r5,-23800
    34f8:	1009883a 	mov	r4,r2
    34fc:	1021883a 	mov	r16,r2
    3500:	0006a480 	call	6a48 <__subsf3>
    3504:	100b883a 	mov	r5,r2
    3508:	8009883a 	mov	r4,r16
    350c:	88800015 	stw	r2,0(r17)
    3510:	0006a480 	call	6a48 <__subsf3>
    3514:	014ba1b4 	movhi	r5,11910
    3518:	2968c204 	addi	r5,r5,-23800
    351c:	1009883a 	mov	r4,r2
    3520:	0006a480 	call	6a48 <__subsf3>
    3524:	88800115 	stw	r2,4(r17)
    3528:	05c00044 	movi	r23,1
    352c:	003f6806 	br	32d0 <__ieee754_rem_pio2f+0xb8>
    3530:	1006d5fa 	srli	r3,r2,23
    3534:	8021d5fa 	srai	r16,r16,23
    3538:	18c03fcc 	andi	r3,r3,255
    353c:	80c7c83a 	sub	r3,r16,r3
    3540:	18c00248 	cmpgei	r3,r3,9
    3544:	183f9a26 	beq	r3,zero,33b0 <__ieee754_rem_pio2f+0x198>
    3548:	014dcd74 	movhi	r5,14133
    354c:	29510004 	addi	r5,r5,17408
    3550:	a809883a 	mov	r4,r21
    3554:	00066480 	call	6648 <__mulsf3>
    3558:	100b883a 	mov	r5,r2
    355c:	a009883a 	mov	r4,r20
    3560:	1027883a 	mov	r19,r2
    3564:	0006a480 	call	6a48 <__subsf3>
    3568:	100b883a 	mov	r5,r2
    356c:	a009883a 	mov	r4,r20
    3570:	1039883a 	mov	fp,r2
    3574:	0006a480 	call	6a48 <__subsf3>
    3578:	980b883a 	mov	r5,r19
    357c:	1009883a 	mov	r4,r2
    3580:	0006a480 	call	6a48 <__subsf3>
    3584:	014ba1b4 	movhi	r5,11910
    3588:	2968c204 	addi	r5,r5,-23800
    358c:	a809883a 	mov	r4,r21
    3590:	1027883a 	mov	r19,r2
    3594:	00066480 	call	6648 <__mulsf3>
    3598:	980b883a 	mov	r5,r19
    359c:	1009883a 	mov	r4,r2
    35a0:	0006a480 	call	6a48 <__subsf3>
    35a4:	100b883a 	mov	r5,r2
    35a8:	e009883a 	mov	r4,fp
    35ac:	1027883a 	mov	r19,r2
    35b0:	0006a480 	call	6a48 <__subsf3>
    35b4:	1006d5fa 	srli	r3,r2,23
    35b8:	102d883a 	mov	r22,r2
    35bc:	18c03fcc 	andi	r3,r3,255
    35c0:	80e1c83a 	sub	r16,r16,r3
    35c4:	84000688 	cmpgei	r16,r16,26
    35c8:	80002426 	beq	r16,zero,365c <__ieee754_rem_pio2f+0x444>
    35cc:	014ba1b4 	movhi	r5,11910
    35d0:	2968c004 	addi	r5,r5,-23808
    35d4:	a809883a 	mov	r4,r21
    35d8:	00066480 	call	6648 <__mulsf3>
    35dc:	100b883a 	mov	r5,r2
    35e0:	e009883a 	mov	r4,fp
    35e4:	1027883a 	mov	r19,r2
    35e8:	0006a480 	call	6a48 <__subsf3>
    35ec:	100b883a 	mov	r5,r2
    35f0:	e009883a 	mov	r4,fp
    35f4:	1021883a 	mov	r16,r2
    35f8:	0006a480 	call	6a48 <__subsf3>
    35fc:	980b883a 	mov	r5,r19
    3600:	1009883a 	mov	r4,r2
    3604:	0006a480 	call	6a48 <__subsf3>
    3608:	01492374 	movhi	r5,9357
    360c:	294c4c84 	addi	r5,r5,12594
    3610:	a809883a 	mov	r4,r21
    3614:	1027883a 	mov	r19,r2
    3618:	00066480 	call	6648 <__mulsf3>
    361c:	980b883a 	mov	r5,r19
    3620:	1009883a 	mov	r4,r2
    3624:	0006a480 	call	6a48 <__subsf3>
    3628:	8009883a 	mov	r4,r16
    362c:	100b883a 	mov	r5,r2
    3630:	1027883a 	mov	r19,r2
    3634:	0006a480 	call	6a48 <__subsf3>
    3638:	8009883a 	mov	r4,r16
    363c:	102d883a 	mov	r22,r2
    3640:	003f5b06 	br	33b0 <__ieee754_rem_pio2f+0x198>
    3644:	200b883a 	mov	r5,r4
    3648:	0006a480 	call	6a48 <__subsf3>
    364c:	88800115 	stw	r2,4(r17)
    3650:	88800015 	stw	r2,0(r17)
    3654:	002f883a 	mov	r23,zero
    3658:	003f1d06 	br	32d0 <__ieee754_rem_pio2f+0xb8>
    365c:	88800015 	stw	r2,0(r17)
    3660:	e009883a 	mov	r4,fp
    3664:	003f5306 	br	33b4 <__ieee754_rem_pio2f+0x19c>
    3668:	01c00084 	movi	r7,2
    366c:	003f8a06 	br	3498 <__ieee754_rem_pio2f+0x280>
    3670:	01c000c4 	movi	r7,3
    3674:	003f8806 	br	3498 <__ieee754_rem_pio2f+0x280>
    3678:	00060b40 	call	60b4 <__addsf3>
    367c:	1025883a 	mov	r18,r2
    3680:	008ff274 	movhi	r2,16329
    3684:	1083f404 	addi	r2,r2,4048
    3688:	014dcd74 	movhi	r5,14133
    368c:	80800e26 	beq	r16,r2,36c8 <__ieee754_rem_pio2f+0x4b0>
    3690:	295110c4 	addi	r5,r5,17475
    3694:	9009883a 	mov	r4,r18
    3698:	00060b40 	call	60b4 <__addsf3>
    369c:	100b883a 	mov	r5,r2
    36a0:	9009883a 	mov	r4,r18
    36a4:	88800015 	stw	r2,0(r17)
    36a8:	0006a480 	call	6a48 <__subsf3>
    36ac:	014dcd74 	movhi	r5,14133
    36b0:	295110c4 	addi	r5,r5,17475
    36b4:	1009883a 	mov	r4,r2
    36b8:	00060b40 	call	60b4 <__addsf3>
    36bc:	88800115 	stw	r2,4(r17)
    36c0:	05ffffc4 	movi	r23,-1
    36c4:	003f0206 	br	32d0 <__ieee754_rem_pio2f+0xb8>
    36c8:	29510004 	addi	r5,r5,17408
    36cc:	9009883a 	mov	r4,r18
    36d0:	00060b40 	call	60b4 <__addsf3>
    36d4:	014ba1b4 	movhi	r5,11910
    36d8:	2968c204 	addi	r5,r5,-23800
    36dc:	1009883a 	mov	r4,r2
    36e0:	1021883a 	mov	r16,r2
    36e4:	00060b40 	call	60b4 <__addsf3>
    36e8:	100b883a 	mov	r5,r2
    36ec:	8009883a 	mov	r4,r16
    36f0:	88800015 	stw	r2,0(r17)
    36f4:	0006a480 	call	6a48 <__subsf3>
    36f8:	014ba1b4 	movhi	r5,11910
    36fc:	2968c204 	addi	r5,r5,-23800
    3700:	1009883a 	mov	r4,r2
    3704:	00060b40 	call	60b4 <__addsf3>
    3708:	88800115 	stw	r2,4(r17)
    370c:	05ffffc4 	movi	r23,-1
    3710:	003eef06 	br	32d0 <__ieee754_rem_pio2f+0xb8>

00003714 <__kernel_cos>:
    3714:	defff204 	addi	sp,sp,-56
    3718:	dc000415 	stw	r16,16(sp)
    371c:	04200034 	movhi	r16,32768
    3720:	843fffc4 	addi	r16,r16,-1
    3724:	df000c15 	stw	fp,48(sp)
    3728:	ddc00b15 	stw	r23,44(sp)
    372c:	dd800a15 	stw	r22,40(sp)
    3730:	dd400915 	stw	r21,36(sp)
    3734:	dc800615 	stw	r18,24(sp)
    3738:	dfc00d15 	stw	ra,52(sp)
    373c:	dd000815 	stw	r20,32(sp)
    3740:	dcc00715 	stw	r19,28(sp)
    3744:	dc400515 	stw	r17,20(sp)
    3748:	2c24703a 	and	r18,r5,r16
    374c:	008f9034 	movhi	r2,15936
    3750:	2839883a 	mov	fp,r5
    3754:	202b883a 	mov	r21,r4
    3758:	302d883a 	mov	r22,r6
    375c:	382f883a 	mov	r23,r7
    3760:	9080750e 	bge	r18,r2,3938 <__kernel_cos+0x224>
    3764:	00095d00 	call	95d0 <__fixdfsi>
    3768:	10011226 	beq	r2,zero,3bb4 <__kernel_cos+0x4a0>
    376c:	a80d883a 	mov	r6,r21
    3770:	e00f883a 	mov	r7,fp
    3774:	a809883a 	mov	r4,r21
    3778:	e00b883a 	mov	r5,fp
    377c:	00084c40 	call	84c4 <__muldf3>
    3780:	01afa234 	movhi	r6,48776
    3784:	01ef6a74 	movhi	r7,48553
    3788:	318e3504 	addi	r6,r6,14548
    378c:	39feba44 	addi	r7,r7,-1303
    3790:	1009883a 	mov	r4,r2
    3794:	180b883a 	mov	r5,r3
    3798:	1023883a 	mov	r17,r2
    379c:	1821883a 	mov	r16,r3
    37a0:	00084c40 	call	84c4 <__muldf3>
    37a4:	01af6d74 	movhi	r6,48565
    37a8:	01cf88b4 	movhi	r7,15906
    37ac:	31ac7104 	addi	r6,r6,-20028
    37b0:	39fba784 	addi	r7,r7,-4450
    37b4:	1009883a 	mov	r4,r2
    37b8:	180b883a 	mov	r5,r3
    37bc:	00070700 	call	7070 <__adddf3>
    37c0:	880d883a 	mov	r6,r17
    37c4:	800f883a 	mov	r7,r16
    37c8:	1009883a 	mov	r4,r2
    37cc:	180b883a 	mov	r5,r3
    37d0:	00084c40 	call	84c4 <__muldf3>
    37d4:	01a02734 	movhi	r6,32924
    37d8:	01cfa4b4 	movhi	r7,16018
    37dc:	3194ab44 	addi	r6,r6,21165
    37e0:	39df93c4 	addi	r7,r7,32335
    37e4:	1009883a 	mov	r4,r2
    37e8:	180b883a 	mov	r5,r3
    37ec:	0008c700 	call	8c70 <__subdf3>
    37f0:	880d883a 	mov	r6,r17
    37f4:	800f883a 	mov	r7,r16
    37f8:	1009883a 	mov	r4,r2
    37fc:	180b883a 	mov	r5,r3
    3800:	00084c40 	call	84c4 <__muldf3>
    3804:	018672f4 	movhi	r6,6603
    3808:	01cfbeb4 	movhi	r7,16122
    380c:	31856404 	addi	r6,r6,5520
    3810:	39c06804 	addi	r7,r7,416
    3814:	1009883a 	mov	r4,r2
    3818:	180b883a 	mov	r5,r3
    381c:	00070700 	call	7070 <__adddf3>
    3820:	880d883a 	mov	r6,r17
    3824:	800f883a 	mov	r7,r16
    3828:	1009883a 	mov	r4,r2
    382c:	180b883a 	mov	r5,r3
    3830:	00084c40 	call	84c4 <__muldf3>
    3834:	0185b074 	movhi	r6,5825
    3838:	01cfd5f4 	movhi	r7,16215
    383c:	31945dc4 	addi	r6,r6,20855
    3840:	39f05b04 	addi	r7,r7,-16020
    3844:	1009883a 	mov	r4,r2
    3848:	180b883a 	mov	r5,r3
    384c:	0008c700 	call	8c70 <__subdf3>
    3850:	880d883a 	mov	r6,r17
    3854:	800f883a 	mov	r7,r16
    3858:	1009883a 	mov	r4,r2
    385c:	180b883a 	mov	r5,r3
    3860:	00084c40 	call	84c4 <__muldf3>
    3864:	01955574 	movhi	r6,21845
    3868:	01cfe974 	movhi	r7,16293
    386c:	31955304 	addi	r6,r6,21836
    3870:	39d55544 	addi	r7,r7,21845
    3874:	1009883a 	mov	r4,r2
    3878:	180b883a 	mov	r5,r3
    387c:	00070700 	call	7070 <__adddf3>
    3880:	880d883a 	mov	r6,r17
    3884:	800f883a 	mov	r7,r16
    3888:	1009883a 	mov	r4,r2
    388c:	180b883a 	mov	r5,r3
    3890:	00084c40 	call	84c4 <__muldf3>
    3894:	1017883a 	mov	r11,r2
    3898:	1815883a 	mov	r10,r3
    389c:	8809883a 	mov	r4,r17
    38a0:	800b883a 	mov	r5,r16
    38a4:	000d883a 	mov	r6,zero
    38a8:	01cff834 	movhi	r7,16352
    38ac:	da800115 	stw	r10,4(sp)
    38b0:	dac00015 	stw	r11,0(sp)
    38b4:	00084c40 	call	84c4 <__muldf3>
    38b8:	dac00017 	ldw	r11,0(sp)
    38bc:	da800117 	ldw	r10,4(sp)
    38c0:	8809883a 	mov	r4,r17
    38c4:	580d883a 	mov	r6,r11
    38c8:	500f883a 	mov	r7,r10
    38cc:	800b883a 	mov	r5,r16
    38d0:	1023883a 	mov	r17,r2
    38d4:	1821883a 	mov	r16,r3
    38d8:	00084c40 	call	84c4 <__muldf3>
    38dc:	b00d883a 	mov	r6,r22
    38e0:	b80f883a 	mov	r7,r23
    38e4:	a809883a 	mov	r4,r21
    38e8:	e00b883a 	mov	r5,fp
    38ec:	1027883a 	mov	r19,r2
    38f0:	1825883a 	mov	r18,r3
    38f4:	00084c40 	call	84c4 <__muldf3>
    38f8:	9809883a 	mov	r4,r19
    38fc:	900b883a 	mov	r5,r18
    3900:	100d883a 	mov	r6,r2
    3904:	180f883a 	mov	r7,r3
    3908:	0008c700 	call	8c70 <__subdf3>
    390c:	8809883a 	mov	r4,r17
    3910:	800b883a 	mov	r5,r16
    3914:	100d883a 	mov	r6,r2
    3918:	180f883a 	mov	r7,r3
    391c:	0008c700 	call	8c70 <__subdf3>
    3920:	100d883a 	mov	r6,r2
    3924:	180f883a 	mov	r7,r3
    3928:	0009883a 	mov	r4,zero
    392c:	014ffc34 	movhi	r5,16368
    3930:	0008c700 	call	8c70 <__subdf3>
    3934:	00008f06 	br	3b74 <__kernel_cos+0x460>
    3938:	200d883a 	mov	r6,r4
    393c:	280f883a 	mov	r7,r5
    3940:	00084c40 	call	84c4 <__muldf3>
    3944:	01afa234 	movhi	r6,48776
    3948:	01ef6a74 	movhi	r7,48553
    394c:	318e3504 	addi	r6,r6,14548
    3950:	39feba44 	addi	r7,r7,-1303
    3954:	1009883a 	mov	r4,r2
    3958:	180b883a 	mov	r5,r3
    395c:	1029883a 	mov	r20,r2
    3960:	1827883a 	mov	r19,r3
    3964:	00084c40 	call	84c4 <__muldf3>
    3968:	01af6d74 	movhi	r6,48565
    396c:	01cf88b4 	movhi	r7,15906
    3970:	31ac7104 	addi	r6,r6,-20028
    3974:	39fba784 	addi	r7,r7,-4450
    3978:	1009883a 	mov	r4,r2
    397c:	180b883a 	mov	r5,r3
    3980:	00070700 	call	7070 <__adddf3>
    3984:	a00d883a 	mov	r6,r20
    3988:	980f883a 	mov	r7,r19
    398c:	1009883a 	mov	r4,r2
    3990:	180b883a 	mov	r5,r3
    3994:	00084c40 	call	84c4 <__muldf3>
    3998:	01a02734 	movhi	r6,32924
    399c:	01cfa4b4 	movhi	r7,16018
    39a0:	3194ab44 	addi	r6,r6,21165
    39a4:	39df93c4 	addi	r7,r7,32335
    39a8:	1009883a 	mov	r4,r2
    39ac:	180b883a 	mov	r5,r3
    39b0:	0008c700 	call	8c70 <__subdf3>
    39b4:	a00d883a 	mov	r6,r20
    39b8:	980f883a 	mov	r7,r19
    39bc:	1009883a 	mov	r4,r2
    39c0:	180b883a 	mov	r5,r3
    39c4:	00084c40 	call	84c4 <__muldf3>
    39c8:	018672f4 	movhi	r6,6603
    39cc:	01cfbeb4 	movhi	r7,16122
    39d0:	31856404 	addi	r6,r6,5520
    39d4:	39c06804 	addi	r7,r7,416
    39d8:	1009883a 	mov	r4,r2
    39dc:	180b883a 	mov	r5,r3
    39e0:	00070700 	call	7070 <__adddf3>
    39e4:	a00d883a 	mov	r6,r20
    39e8:	980f883a 	mov	r7,r19
    39ec:	1009883a 	mov	r4,r2
    39f0:	180b883a 	mov	r5,r3
    39f4:	00084c40 	call	84c4 <__muldf3>
    39f8:	0185b074 	movhi	r6,5825
    39fc:	01cfd5f4 	movhi	r7,16215
    3a00:	31945dc4 	addi	r6,r6,20855
    3a04:	39f05b04 	addi	r7,r7,-16020
    3a08:	1009883a 	mov	r4,r2
    3a0c:	180b883a 	mov	r5,r3
    3a10:	0008c700 	call	8c70 <__subdf3>
    3a14:	a00d883a 	mov	r6,r20
    3a18:	980f883a 	mov	r7,r19
    3a1c:	1009883a 	mov	r4,r2
    3a20:	180b883a 	mov	r5,r3
    3a24:	00084c40 	call	84c4 <__muldf3>
    3a28:	01955574 	movhi	r6,21845
    3a2c:	01cfe974 	movhi	r7,16293
    3a30:	31955304 	addi	r6,r6,21836
    3a34:	39d55544 	addi	r7,r7,21845
    3a38:	1009883a 	mov	r4,r2
    3a3c:	180b883a 	mov	r5,r3
    3a40:	00070700 	call	7070 <__adddf3>
    3a44:	1009883a 	mov	r4,r2
    3a48:	a00d883a 	mov	r6,r20
    3a4c:	980f883a 	mov	r7,r19
    3a50:	180b883a 	mov	r5,r3
    3a54:	00084c40 	call	84c4 <__muldf3>
    3a58:	010ff4f4 	movhi	r4,16339
    3a5c:	210ccc84 	addi	r4,r4,13106
    3a60:	1013883a 	mov	r9,r2
    3a64:	1811883a 	mov	r8,r3
    3a68:	a023883a 	mov	r17,r20
    3a6c:	9821883a 	mov	r16,r19
    3a70:	1017883a 	mov	r11,r2
    3a74:	1815883a 	mov	r10,r3
    3a78:	24bf880e 	bge	r4,r18,389c <__kernel_cos+0x188>
    3a7c:	008ffa74 	movhi	r2,16361
    3a80:	14804816 	blt	r2,r18,3ba4 <__kernel_cos+0x490>
    3a84:	043ff834 	movhi	r16,65504
    3a88:	9421883a 	add	r16,r18,r16
    3a8c:	000d883a 	mov	r6,zero
    3a90:	800f883a 	mov	r7,r16
    3a94:	0009883a 	mov	r4,zero
    3a98:	014ffc34 	movhi	r5,16368
    3a9c:	da400015 	stw	r9,0(sp)
    3aa0:	d8c00115 	stw	r3,4(sp)
    3aa4:	0008c700 	call	8c70 <__subdf3>
    3aa8:	da400017 	ldw	r9,0(sp)
    3aac:	da000117 	ldw	r8,4(sp)
    3ab0:	1017883a 	mov	r11,r2
    3ab4:	1815883a 	mov	r10,r3
    3ab8:	980b883a 	mov	r5,r19
    3abc:	000d883a 	mov	r6,zero
    3ac0:	01cff834 	movhi	r7,16352
    3ac4:	a009883a 	mov	r4,r20
    3ac8:	da800115 	stw	r10,4(sp)
    3acc:	dac00015 	stw	r11,0(sp)
    3ad0:	da000315 	stw	r8,12(sp)
    3ad4:	da400215 	stw	r9,8(sp)
    3ad8:	00084c40 	call	84c4 <__muldf3>
    3adc:	800f883a 	mov	r7,r16
    3ae0:	000d883a 	mov	r6,zero
    3ae4:	1009883a 	mov	r4,r2
    3ae8:	180b883a 	mov	r5,r3
    3aec:	0008c700 	call	8c70 <__subdf3>
    3af0:	da400217 	ldw	r9,8(sp)
    3af4:	da000317 	ldw	r8,12(sp)
    3af8:	980b883a 	mov	r5,r19
    3afc:	480d883a 	mov	r6,r9
    3b00:	400f883a 	mov	r7,r8
    3b04:	a009883a 	mov	r4,r20
    3b08:	1023883a 	mov	r17,r2
    3b0c:	1821883a 	mov	r16,r3
    3b10:	00084c40 	call	84c4 <__muldf3>
    3b14:	b00d883a 	mov	r6,r22
    3b18:	b80f883a 	mov	r7,r23
    3b1c:	a809883a 	mov	r4,r21
    3b20:	e00b883a 	mov	r5,fp
    3b24:	1027883a 	mov	r19,r2
    3b28:	1825883a 	mov	r18,r3
    3b2c:	00084c40 	call	84c4 <__muldf3>
    3b30:	100d883a 	mov	r6,r2
    3b34:	180f883a 	mov	r7,r3
    3b38:	9809883a 	mov	r4,r19
    3b3c:	900b883a 	mov	r5,r18
    3b40:	0008c700 	call	8c70 <__subdf3>
    3b44:	100d883a 	mov	r6,r2
    3b48:	180f883a 	mov	r7,r3
    3b4c:	8809883a 	mov	r4,r17
    3b50:	800b883a 	mov	r5,r16
    3b54:	0008c700 	call	8c70 <__subdf3>
    3b58:	dac00017 	ldw	r11,0(sp)
    3b5c:	da800117 	ldw	r10,4(sp)
    3b60:	100d883a 	mov	r6,r2
    3b64:	180f883a 	mov	r7,r3
    3b68:	5809883a 	mov	r4,r11
    3b6c:	500b883a 	mov	r5,r10
    3b70:	0008c700 	call	8c70 <__subdf3>
    3b74:	dfc00d17 	ldw	ra,52(sp)
    3b78:	df000c17 	ldw	fp,48(sp)
    3b7c:	ddc00b17 	ldw	r23,44(sp)
    3b80:	dd800a17 	ldw	r22,40(sp)
    3b84:	dd400917 	ldw	r21,36(sp)
    3b88:	dd000817 	ldw	r20,32(sp)
    3b8c:	dcc00717 	ldw	r19,28(sp)
    3b90:	dc800617 	ldw	r18,24(sp)
    3b94:	dc400517 	ldw	r17,20(sp)
    3b98:	dc000417 	ldw	r16,16(sp)
    3b9c:	dec00e04 	addi	sp,sp,56
    3ba0:	f800283a 	ret
    3ba4:	0017883a 	mov	r11,zero
    3ba8:	028ff9f4 	movhi	r10,16359
    3bac:	040ff4b4 	movhi	r16,16338
    3bb0:	003fc106 	br	3ab8 <__kernel_cos+0x3a4>
    3bb4:	0005883a 	mov	r2,zero
    3bb8:	00cffc34 	movhi	r3,16368
    3bbc:	003fed06 	br	3b74 <__kernel_cos+0x460>

00003bc0 <__kernel_rem_pio2>:
    3bc0:	deff5f04 	addi	sp,sp,-644
    3bc4:	d880a117 	ldw	r2,644(sp)
    3bc8:	dc009715 	stw	r16,604(sp)
    3bcc:	dfc0a015 	stw	ra,640(sp)
    3bd0:	100690ba 	slli	r3,r2,2
    3bd4:	00800074 	movhi	r2,1
    3bd8:	df009f15 	stw	fp,636(sp)
    3bdc:	1885883a 	add	r2,r3,r2
    3be0:	109de617 	ldw	r2,30616(r2)
    3be4:	ddc09e15 	stw	r23,632(sp)
    3be8:	dd809d15 	stw	r22,628(sp)
    3bec:	d8800515 	stw	r2,20(sp)
    3bf0:	38bfffc4 	addi	r2,r7,-1
    3bf4:	dd409c15 	stw	r21,624(sp)
    3bf8:	dd009b15 	stw	r20,620(sp)
    3bfc:	dcc09a15 	stw	r19,616(sp)
    3c00:	dc809915 	stw	r18,612(sp)
    3c04:	dc409815 	stw	r17,608(sp)
    3c08:	d9c00715 	stw	r7,28(sp)
    3c0c:	30fffb10 	cmplti	r3,r6,-20
    3c10:	d9000215 	stw	r4,8(sp)
    3c14:	d9400915 	stw	r5,36(sp)
    3c18:	d8800115 	stw	r2,4(sp)
    3c1c:	3021883a 	mov	r16,r6
    3c20:	18028c1e 	bne	r3,zero,4654 <__kernel_rem_pio2+0xa94>
    3c24:	01400604 	movi	r5,24
    3c28:	313fff44 	addi	r4,r6,-3
    3c2c:	0005ed80 	call	5ed8 <__divsi3>
    3c30:	d8800615 	stw	r2,24(sp)
    3c34:	10800044 	addi	r2,r2,1
    3c38:	100690ba 	slli	r3,r2,2
    3c3c:	10c5c83a 	sub	r2,r2,r3
    3c40:	100690fa 	slli	r3,r2,3
    3c44:	d9000117 	ldw	r4,4(sp)
    3c48:	80c7883a 	add	r3,r16,r3
    3c4c:	d8800517 	ldw	r2,20(sp)
    3c50:	d8c00315 	stw	r3,12(sp)
    3c54:	d8c00617 	ldw	r3,24(sp)
    3c58:	1105883a 	add	r2,r2,r4
    3c5c:	1925c83a 	sub	r18,r3,r4
    3c60:	10000f16 	blt	r2,zero,3ca0 <__kernel_rem_pio2+0xe0>
    3c64:	902290ba 	slli	r17,r18,2
    3c68:	d8c0a217 	ldw	r3,648(sp)
    3c6c:	10800044 	addi	r2,r2,1
    3c70:	dc001f04 	addi	r16,sp,124
    3c74:	1c63883a 	add	r17,r3,r17
    3c78:	14a7883a 	add	r19,r2,r18
    3c7c:	90016016 	blt	r18,zero,4200 <__kernel_rem_pio2+0x640>
    3c80:	89000017 	ldw	r4,0(r17)
    3c84:	00096500 	call	9650 <__floatsidf>
    3c88:	80800015 	stw	r2,0(r16)
    3c8c:	80c00115 	stw	r3,4(r16)
    3c90:	94800044 	addi	r18,r18,1
    3c94:	84000204 	addi	r16,r16,8
    3c98:	8c400104 	addi	r17,r17,4
    3c9c:	94fff71e 	bne	r18,r19,3c7c <__kernel_rem_pio2+0xbc>
    3ca0:	d8800517 	ldw	r2,20(sp)
    3ca4:	10002516 	blt	r2,zero,3d3c <__kernel_rem_pio2+0x17c>
    3ca8:	dcc00117 	ldw	r19,4(sp)
    3cac:	d8c01f04 	addi	r3,sp,124
    3cb0:	dc406f04 	addi	r17,sp,444
    3cb4:	982490fa 	slli	r18,r19,3
    3cb8:	94000204 	addi	r16,r18,8
    3cbc:	1ca5883a 	add	r18,r3,r18
    3cc0:	d8c00717 	ldw	r3,28(sp)
    3cc4:	10ef883a 	add	r23,r2,r3
    3cc8:	d8800217 	ldw	r2,8(sp)
    3ccc:	80a1883a 	add	r16,r16,r2
    3cd0:	d8800117 	ldw	r2,4(sp)
    3cd4:	10015f16 	blt	r2,zero,4254 <__kernel_rem_pio2+0x694>
    3cd8:	dd000217 	ldw	r20,8(sp)
    3cdc:	902d883a 	mov	r22,r18
    3ce0:	0039883a 	mov	fp,zero
    3ce4:	002b883a 	mov	r21,zero
    3ce8:	b1800017 	ldw	r6,0(r22)
    3cec:	b1c00117 	ldw	r7,4(r22)
    3cf0:	a1000017 	ldw	r4,0(r20)
    3cf4:	a1400117 	ldw	r5,4(r20)
    3cf8:	a5000204 	addi	r20,r20,8
    3cfc:	b5bffe04 	addi	r22,r22,-8
    3d00:	00084c40 	call	84c4 <__muldf3>
    3d04:	e009883a 	mov	r4,fp
    3d08:	a80b883a 	mov	r5,r21
    3d0c:	100d883a 	mov	r6,r2
    3d10:	180f883a 	mov	r7,r3
    3d14:	00070700 	call	7070 <__adddf3>
    3d18:	1039883a 	mov	fp,r2
    3d1c:	182b883a 	mov	r21,r3
    3d20:	a43ff11e 	bne	r20,r16,3ce8 <__kernel_rem_pio2+0x128>
    3d24:	8f000015 	stw	fp,0(r17)
    3d28:	8d400115 	stw	r21,4(r17)
    3d2c:	9cc00044 	addi	r19,r19,1
    3d30:	8c400204 	addi	r17,r17,8
    3d34:	94800204 	addi	r18,r18,8
    3d38:	9dffe51e 	bne	r19,r23,3cd0 <__kernel_rem_pio2+0x110>
    3d3c:	dc400517 	ldw	r17,20(sp)
    3d40:	d8c00717 	ldw	r3,28(sp)
    3d44:	d9000217 	ldw	r4,8(sp)
    3d48:	88bfffc4 	addi	r2,r17,-1
    3d4c:	180690fa 	slli	r3,r3,3
    3d50:	883890ba 	slli	fp,r17,2
    3d54:	100490ba 	slli	r2,r2,2
    3d58:	243ffe04 	addi	r16,r4,-8
    3d5c:	80e1883a 	add	r16,r16,r3
    3d60:	e1000b04 	addi	r4,fp,44
    3d64:	10808c04 	addi	r2,r2,560
    3d68:	d8c00b04 	addi	r3,sp,44
    3d6c:	26c9883a 	add	r4,r4,sp
    3d70:	10c5883a 	add	r2,r2,r3
    3d74:	d9000415 	stw	r4,16(sp)
    3d78:	d8800815 	stw	r2,32(sp)
    3d7c:	883890fa 	slli	fp,r17,3
    3d80:	d8c00b04 	addi	r3,sp,44
    3d84:	e0808c04 	addi	r2,fp,560
    3d88:	10c5883a 	add	r2,r2,r3
    3d8c:	157fd817 	ldw	r21,-160(r2)
    3d90:	153fd917 	ldw	r20,-156(r2)
    3d94:	0440280e 	bge	zero,r17,3e38 <__kernel_rem_pio2+0x278>
    3d98:	d8806f04 	addi	r2,sp,444
    3d9c:	1725883a 	add	r18,r2,fp
    3da0:	1827883a 	mov	r19,r3
    3da4:	000d883a 	mov	r6,zero
    3da8:	01cf9c34 	movhi	r7,15984
    3dac:	a809883a 	mov	r4,r21
    3db0:	a00b883a 	mov	r5,r20
    3db4:	00084c40 	call	84c4 <__muldf3>
    3db8:	180b883a 	mov	r5,r3
    3dbc:	1009883a 	mov	r4,r2
    3dc0:	00095d00 	call	95d0 <__fixdfsi>
    3dc4:	1009883a 	mov	r4,r2
    3dc8:	00096500 	call	9650 <__floatsidf>
    3dcc:	000d883a 	mov	r6,zero
    3dd0:	01d05c34 	movhi	r7,16752
    3dd4:	1009883a 	mov	r4,r2
    3dd8:	180b883a 	mov	r5,r3
    3ddc:	102f883a 	mov	r23,r2
    3de0:	182d883a 	mov	r22,r3
    3de4:	00084c40 	call	84c4 <__muldf3>
    3de8:	100d883a 	mov	r6,r2
    3dec:	180f883a 	mov	r7,r3
    3df0:	a809883a 	mov	r4,r21
    3df4:	a00b883a 	mov	r5,r20
    3df8:	0008c700 	call	8c70 <__subdf3>
    3dfc:	180b883a 	mov	r5,r3
    3e00:	1009883a 	mov	r4,r2
    3e04:	00095d00 	call	95d0 <__fixdfsi>
    3e08:	91bffe17 	ldw	r6,-8(r18)
    3e0c:	91ffff17 	ldw	r7,-4(r18)
    3e10:	98800015 	stw	r2,0(r19)
    3e14:	b809883a 	mov	r4,r23
    3e18:	b00b883a 	mov	r5,r22
    3e1c:	00070700 	call	7070 <__adddf3>
    3e20:	102b883a 	mov	r21,r2
    3e24:	94bffe04 	addi	r18,r18,-8
    3e28:	d8806f04 	addi	r2,sp,444
    3e2c:	1829883a 	mov	r20,r3
    3e30:	9cc00104 	addi	r19,r19,4
    3e34:	14bfdb1e 	bne	r2,r18,3da4 <__kernel_rem_pio2+0x1e4>
    3e38:	dd800317 	ldw	r22,12(sp)
    3e3c:	a809883a 	mov	r4,r21
    3e40:	a00b883a 	mov	r5,r20
    3e44:	b00d883a 	mov	r6,r22
    3e48:	0005ad80 	call	5ad8 <scalbn>
    3e4c:	000d883a 	mov	r6,zero
    3e50:	01cff034 	movhi	r7,16320
    3e54:	1009883a 	mov	r4,r2
    3e58:	180b883a 	mov	r5,r3
    3e5c:	1029883a 	mov	r20,r2
    3e60:	1827883a 	mov	r19,r3
    3e64:	00084c40 	call	84c4 <__muldf3>
    3e68:	1009883a 	mov	r4,r2
    3e6c:	180b883a 	mov	r5,r3
    3e70:	00024700 	call	2470 <floor>
    3e74:	000d883a 	mov	r6,zero
    3e78:	01d00834 	movhi	r7,16416
    3e7c:	1009883a 	mov	r4,r2
    3e80:	180b883a 	mov	r5,r3
    3e84:	00084c40 	call	84c4 <__muldf3>
    3e88:	100d883a 	mov	r6,r2
    3e8c:	180f883a 	mov	r7,r3
    3e90:	a009883a 	mov	r4,r20
    3e94:	980b883a 	mov	r5,r19
    3e98:	0008c700 	call	8c70 <__subdf3>
    3e9c:	180b883a 	mov	r5,r3
    3ea0:	1009883a 	mov	r4,r2
    3ea4:	1827883a 	mov	r19,r3
    3ea8:	102b883a 	mov	r21,r2
    3eac:	00095d00 	call	95d0 <__fixdfsi>
    3eb0:	1009883a 	mov	r4,r2
    3eb4:	1029883a 	mov	r20,r2
    3eb8:	00096500 	call	9650 <__floatsidf>
    3ebc:	980b883a 	mov	r5,r19
    3ec0:	100d883a 	mov	r6,r2
    3ec4:	180f883a 	mov	r7,r3
    3ec8:	a809883a 	mov	r4,r21
    3ecc:	0008c700 	call	8c70 <__subdf3>
    3ed0:	1025883a 	mov	r18,r2
    3ed4:	1027883a 	mov	r19,r2
    3ed8:	1813883a 	mov	r9,r3
    3edc:	0580670e 	bge	zero,r22,407c <__kernel_rem_pio2+0x4bc>
    3ee0:	88bfffc4 	addi	r2,r17,-1
    3ee4:	100490ba 	slli	r2,r2,2
    3ee8:	d9400b04 	addi	r5,sp,44
    3eec:	01000604 	movi	r4,24
    3ef0:	10808c04 	addi	r2,r2,560
    3ef4:	1145883a 	add	r2,r2,r5
    3ef8:	117f7417 	ldw	r5,-560(r2)
    3efc:	2589c83a 	sub	r4,r4,r22
    3f00:	054005c4 	movi	r21,23
    3f04:	290dd83a 	sra	r6,r5,r4
    3f08:	adabc83a 	sub	r21,r21,r22
    3f0c:	3108983a 	sll	r4,r6,r4
    3f10:	a1a9883a 	add	r20,r20,r6
    3f14:	2909c83a 	sub	r4,r5,r4
    3f18:	256bd83a 	sra	r21,r4,r21
    3f1c:	113f7415 	stw	r4,-560(r2)
    3f20:	05406016 	blt	zero,r21,40a4 <__kernel_rem_pio2+0x4e4>
    3f24:	480b883a 	mov	r5,r9
    3f28:	000d883a 	mov	r6,zero
    3f2c:	000f883a 	mov	r7,zero
    3f30:	9809883a 	mov	r4,r19
    3f34:	da400015 	stw	r9,0(sp)
    3f38:	00082740 	call	8274 <__eqdf2>
    3f3c:	da400017 	ldw	r9,0(sp)
    3f40:	1001d21e 	bne	r2,zero,468c <__kernel_rem_pio2+0xacc>
    3f44:	d8800517 	ldw	r2,20(sp)
    3f48:	8cffffc4 	addi	r19,r17,-1
    3f4c:	98800a16 	blt	r19,r2,3f78 <__kernel_rem_pio2+0x3b8>
    3f50:	880490ba 	slli	r2,r17,2
    3f54:	d9400417 	ldw	r5,16(sp)
    3f58:	0007883a 	mov	r3,zero
    3f5c:	10800b04 	addi	r2,r2,44
    3f60:	16c5883a 	add	r2,r2,sp
    3f64:	113fff17 	ldw	r4,-4(r2)
    3f68:	10bfff04 	addi	r2,r2,-4
    3f6c:	1906b03a 	or	r3,r3,r4
    3f70:	117ffc1e 	bne	r2,r5,3f64 <__kernel_rem_pio2+0x3a4>
    3f74:	1800ba1e 	bne	r3,zero,4260 <__kernel_rem_pio2+0x6a0>
    3f78:	d8800817 	ldw	r2,32(sp)
    3f7c:	10bf7417 	ldw	r2,-560(r2)
    3f80:	1000b11e 	bne	r2,zero,4248 <__kernel_rem_pio2+0x688>
    3f84:	d8800417 	ldw	r2,16(sp)
    3f88:	05000044 	movi	r20,1
    3f8c:	10fffe17 	ldw	r3,-8(r2)
    3f90:	a5000044 	addi	r20,r20,1
    3f94:	10bfff04 	addi	r2,r2,-4
    3f98:	183ffc26 	beq	r3,zero,3f8c <__kernel_rem_pio2+0x3cc>
    3f9c:	8d05883a 	add	r2,r17,r20
    3fa0:	8d400044 	addi	r21,r17,1
    3fa4:	d8800015 	stw	r2,0(sp)
    3fa8:	d8800617 	ldw	r2,24(sp)
    3fac:	88a7883a 	add	r19,r17,r2
    3fb0:	d8800717 	ldw	r2,28(sp)
    3fb4:	982690ba 	slli	r19,r19,2
    3fb8:	1463883a 	add	r17,r2,r17
    3fbc:	d880a217 	ldw	r2,648(sp)
    3fc0:	882290fa 	slli	r17,r17,3
    3fc4:	14e7883a 	add	r19,r2,r19
    3fc8:	d8801f04 	addi	r2,sp,124
    3fcc:	1463883a 	add	r17,r2,r17
    3fd0:	d8806f04 	addi	r2,sp,444
    3fd4:	1725883a 	add	r18,r2,fp
    3fd8:	99000117 	ldw	r4,4(r19)
    3fdc:	00096500 	call	9650 <__floatsidf>
    3fe0:	1009883a 	mov	r4,r2
    3fe4:	88800015 	stw	r2,0(r17)
    3fe8:	d8800117 	ldw	r2,4(sp)
    3fec:	88c00115 	stw	r3,4(r17)
    3ff0:	180b883a 	mov	r5,r3
    3ff4:	10001e16 	blt	r2,zero,4070 <__kernel_rem_pio2+0x4b0>
    3ff8:	dd000217 	ldw	r20,8(sp)
    3ffc:	882f883a 	mov	r23,r17
    4000:	002d883a 	mov	r22,zero
    4004:	0039883a 	mov	fp,zero
    4008:	00000306 	br	4018 <__kernel_rem_pio2+0x458>
    400c:	b9000017 	ldw	r4,0(r23)
    4010:	b9400117 	ldw	r5,4(r23)
    4014:	a5000204 	addi	r20,r20,8
    4018:	a1800017 	ldw	r6,0(r20)
    401c:	a1c00117 	ldw	r7,4(r20)
    4020:	bdfffe04 	addi	r23,r23,-8
    4024:	00084c40 	call	84c4 <__muldf3>
    4028:	b009883a 	mov	r4,r22
    402c:	e00b883a 	mov	r5,fp
    4030:	100d883a 	mov	r6,r2
    4034:	180f883a 	mov	r7,r3
    4038:	00070700 	call	7070 <__adddf3>
    403c:	102d883a 	mov	r22,r2
    4040:	1839883a 	mov	fp,r3
    4044:	a43ff11e 	bne	r20,r16,400c <__kernel_rem_pio2+0x44c>
    4048:	d8800017 	ldw	r2,0(sp)
    404c:	95800215 	stw	r22,8(r18)
    4050:	97000315 	stw	fp,12(r18)
    4054:	ad400044 	addi	r21,r21,1
    4058:	9cc00104 	addi	r19,r19,4
    405c:	8c400204 	addi	r17,r17,8
    4060:	94800204 	addi	r18,r18,8
    4064:	157fdc0e 	bge	r2,r21,3fd8 <__kernel_rem_pio2+0x418>
    4068:	1023883a 	mov	r17,r2
    406c:	003f4306 	br	3d7c <__kernel_rem_pio2+0x1bc>
    4070:	002d883a 	mov	r22,zero
    4074:	0039883a 	mov	fp,zero
    4078:	003ff306 	br	4048 <__kernel_rem_pio2+0x488>
    407c:	d8800317 	ldw	r2,12(sp)
    4080:	1000651e 	bne	r2,zero,4218 <__kernel_rem_pio2+0x658>
    4084:	88bfffc4 	addi	r2,r17,-1
    4088:	100490ba 	slli	r2,r2,2
    408c:	d9000b04 	addi	r4,sp,44
    4090:	10808c04 	addi	r2,r2,560
    4094:	1105883a 	add	r2,r2,r4
    4098:	157f7417 	ldw	r21,-560(r2)
    409c:	a82bd5fa 	srai	r21,r21,23
    40a0:	057fa00e 	bge	zero,r21,3f24 <__kernel_rem_pio2+0x364>
    40a4:	a5000044 	addi	r20,r20,1
    40a8:	0441ac0e 	bge	zero,r17,475c <__kernel_rem_pio2+0xb9c>
    40ac:	da800b17 	ldw	r10,44(sp)
    40b0:	5000561e 	bne	r10,zero,420c <__kernel_rem_pio2+0x64c>
    40b4:	88800060 	cmpeqi	r2,r17,1
    40b8:	1000271e 	bne	r2,zero,4158 <__kernel_rem_pio2+0x598>
    40bc:	da800c17 	ldw	r10,48(sp)
    40c0:	d9400c04 	addi	r5,sp,48
    40c4:	00800044 	movi	r2,1
    40c8:	11000044 	addi	r4,r2,1
    40cc:	29400104 	addi	r5,r5,4
    40d0:	5000061e 	bne	r10,zero,40ec <__kernel_rem_pio2+0x52c>
    40d4:	89002026 	beq	r17,r4,4158 <__kernel_rem_pio2+0x598>
    40d8:	2a800017 	ldw	r10,0(r5)
    40dc:	2005883a 	mov	r2,r4
    40e0:	11000044 	addi	r4,r2,1
    40e4:	29400104 	addi	r5,r5,4
    40e8:	503ffa26 	beq	r10,zero,40d4 <__kernel_rem_pio2+0x514>
    40ec:	100490ba 	slli	r2,r2,2
    40f0:	01404034 	movhi	r5,256
    40f4:	2a95c83a 	sub	r10,r5,r10
    40f8:	10808c04 	addi	r2,r2,560
    40fc:	d9400b04 	addi	r5,sp,44
    4100:	1145883a 	add	r2,r2,r5
    4104:	12bf7415 	stw	r10,-560(r2)
    4108:	2440120e 	bge	r4,r17,4154 <__kernel_rem_pio2+0x594>
    410c:	200890ba 	slli	r4,r4,2
    4110:	880490ba 	slli	r2,r17,2
    4114:	d9c00b04 	addi	r7,sp,44
    4118:	21408c04 	addi	r5,r4,560
    411c:	01804034 	movhi	r6,256
    4120:	29cb883a 	add	r5,r5,r7
    4124:	21000b04 	addi	r4,r4,44
    4128:	10800b04 	addi	r2,r2,44
    412c:	297f7417 	ldw	r5,-560(r5)
    4130:	26c9883a 	add	r4,r4,sp
    4134:	16c5883a 	add	r2,r2,sp
    4138:	31bfffc4 	addi	r6,r6,-1
    413c:	00000106 	br	4144 <__kernel_rem_pio2+0x584>
    4140:	21400017 	ldw	r5,0(r4)
    4144:	314bc83a 	sub	r5,r6,r5
    4148:	21400015 	stw	r5,0(r4)
    414c:	21000104 	addi	r4,r4,4
    4150:	20bffb1e 	bne	r4,r2,4140 <__kernel_rem_pio2+0x580>
    4154:	02800044 	movi	r10,1
    4158:	d9000317 	ldw	r4,12(sp)
    415c:	01000e0e 	bge	zero,r4,4198 <__kernel_rem_pio2+0x5d8>
    4160:	20800060 	cmpeqi	r2,r4,1
    4164:	1001371e 	bne	r2,zero,4644 <__kernel_rem_pio2+0xa84>
    4168:	208000a0 	cmpeqi	r2,r4,2
    416c:	10000a26 	beq	r2,zero,4198 <__kernel_rem_pio2+0x5d8>
    4170:	88bfffc4 	addi	r2,r17,-1
    4174:	100490ba 	slli	r2,r2,2
    4178:	01401034 	movhi	r5,64
    417c:	d9000b04 	addi	r4,sp,44
    4180:	10808c04 	addi	r2,r2,560
    4184:	1105883a 	add	r2,r2,r4
    4188:	113f7417 	ldw	r4,-560(r2)
    418c:	297fffc4 	addi	r5,r5,-1
    4190:	2148703a 	and	r4,r4,r5
    4194:	113f7415 	stw	r4,-560(r2)
    4198:	a8800098 	cmpnei	r2,r21,2
    419c:	103f611e 	bne	r2,zero,3f24 <__kernel_rem_pio2+0x364>
    41a0:	900d883a 	mov	r6,r18
    41a4:	180f883a 	mov	r7,r3
    41a8:	0009883a 	mov	r4,zero
    41ac:	014ffc34 	movhi	r5,16368
    41b0:	da800015 	stw	r10,0(sp)
    41b4:	0008c700 	call	8c70 <__subdf3>
    41b8:	da800017 	ldw	r10,0(sp)
    41bc:	1027883a 	mov	r19,r2
    41c0:	1813883a 	mov	r9,r3
    41c4:	503f5726 	beq	r10,zero,3f24 <__kernel_rem_pio2+0x364>
    41c8:	d9800317 	ldw	r6,12(sp)
    41cc:	0009883a 	mov	r4,zero
    41d0:	014ffc34 	movhi	r5,16368
    41d4:	d8c00015 	stw	r3,0(sp)
    41d8:	0005ad80 	call	5ad8 <scalbn>
    41dc:	da400017 	ldw	r9,0(sp)
    41e0:	9809883a 	mov	r4,r19
    41e4:	100d883a 	mov	r6,r2
    41e8:	480b883a 	mov	r5,r9
    41ec:	180f883a 	mov	r7,r3
    41f0:	0008c700 	call	8c70 <__subdf3>
    41f4:	1027883a 	mov	r19,r2
    41f8:	1813883a 	mov	r9,r3
    41fc:	003f4906 	br	3f24 <__kernel_rem_pio2+0x364>
    4200:	0005883a 	mov	r2,zero
    4204:	0007883a 	mov	r3,zero
    4208:	003e9f06 	br	3c88 <__kernel_rem_pio2+0xc8>
    420c:	01000044 	movi	r4,1
    4210:	0005883a 	mov	r2,zero
    4214:	003fb506 	br	40ec <__kernel_rem_pio2+0x52c>
    4218:	180b883a 	mov	r5,r3
    421c:	000d883a 	mov	r6,zero
    4220:	01cff834 	movhi	r7,16352
    4224:	9009883a 	mov	r4,r18
    4228:	d8c00a15 	stw	r3,40(sp)
    422c:	d8c00015 	stw	r3,0(sp)
    4230:	00082f40 	call	82f4 <__gedf2>
    4234:	da400017 	ldw	r9,0(sp)
    4238:	d8c00a17 	ldw	r3,40(sp)
    423c:	1001080e 	bge	r2,zero,4660 <__kernel_rem_pio2+0xaa0>
    4240:	002b883a 	mov	r21,zero
    4244:	003f3706 	br	3f24 <__kernel_rem_pio2+0x364>
    4248:	8d400044 	addi	r21,r17,1
    424c:	dd400015 	stw	r21,0(sp)
    4250:	003f5506 	br	3fa8 <__kernel_rem_pio2+0x3e8>
    4254:	0039883a 	mov	fp,zero
    4258:	002b883a 	mov	r21,zero
    425c:	003eb106 	br	3d24 <__kernel_rem_pio2+0x164>
    4260:	d8c00317 	ldw	r3,12(sp)
    4264:	980490ba 	slli	r2,r19,2
    4268:	d9400b04 	addi	r5,sp,44
    426c:	193ffa04 	addi	r4,r3,-24
    4270:	10c08c04 	addi	r3,r2,560
    4274:	1947883a 	add	r3,r3,r5
    4278:	18ff7417 	ldw	r3,-560(r3)
    427c:	dd400215 	stw	r21,8(sp)
    4280:	d9000315 	stw	r4,12(sp)
    4284:	1800091e 	bne	r3,zero,42ac <__kernel_rem_pio2+0x6ec>
    4288:	10800b04 	addi	r2,r2,44
    428c:	16c5883a 	add	r2,r2,sp
    4290:	2007883a 	mov	r3,r4
    4294:	113fff17 	ldw	r4,-4(r2)
    4298:	9cffffc4 	addi	r19,r19,-1
    429c:	10bfff04 	addi	r2,r2,-4
    42a0:	18fffa04 	addi	r3,r3,-24
    42a4:	203ffb26 	beq	r4,zero,4294 <__kernel_rem_pio2+0x6d4>
    42a8:	d8c00315 	stw	r3,12(sp)
    42ac:	d9800317 	ldw	r6,12(sp)
    42b0:	0009883a 	mov	r4,zero
    42b4:	014ffc34 	movhi	r5,16368
    42b8:	0005ad80 	call	5ad8 <scalbn>
    42bc:	1021883a 	mov	r16,r2
    42c0:	1823883a 	mov	r17,r3
    42c4:	98017116 	blt	r19,zero,488c <__kernel_rem_pio2+0xccc>
    42c8:	980490fa 	slli	r2,r19,3
    42cc:	982c90ba 	slli	r22,r19,2
    42d0:	d8c06f04 	addi	r3,sp,444
    42d4:	18b9883a 	add	fp,r3,r2
    42d8:	d8800315 	stw	r2,12(sp)
    42dc:	b0800b04 	addi	r2,r22,44
    42e0:	df000115 	stw	fp,4(sp)
    42e4:	16ed883a 	add	r22,r2,sp
    42e8:	b1000017 	ldw	r4,0(r22)
    42ec:	e73ffe04 	addi	fp,fp,-8
    42f0:	00096500 	call	9650 <__floatsidf>
    42f4:	800d883a 	mov	r6,r16
    42f8:	880f883a 	mov	r7,r17
    42fc:	1009883a 	mov	r4,r2
    4300:	180b883a 	mov	r5,r3
    4304:	00084c40 	call	84c4 <__muldf3>
    4308:	8009883a 	mov	r4,r16
    430c:	880b883a 	mov	r5,r17
    4310:	000d883a 	mov	r6,zero
    4314:	01cf9c34 	movhi	r7,15984
    4318:	e0800215 	stw	r2,8(fp)
    431c:	e0c00315 	stw	r3,12(fp)
    4320:	00084c40 	call	84c4 <__muldf3>
    4324:	b009883a 	mov	r4,r22
    4328:	1021883a 	mov	r16,r2
    432c:	d8800b04 	addi	r2,sp,44
    4330:	1823883a 	mov	r17,r3
    4334:	b5bfff04 	addi	r22,r22,-4
    4338:	113feb1e 	bne	r2,r4,42e8 <__kernel_rem_pio2+0x728>
    433c:	05cffe74 	movhi	r23,16377
    4340:	dc800517 	ldw	r18,20(sp)
    4344:	bdc87ec4 	addi	r23,r23,8699
    4348:	dd800117 	ldw	r22,4(sp)
    434c:	d8804704 	addi	r2,sp,284
    4350:	dd000415 	stw	r20,16(sp)
    4354:	dcc00015 	stw	r19,0(sp)
    4358:	ddc00115 	stw	r23,4(sp)
    435c:	0021883a 	mov	r16,zero
    4360:	102b883a 	mov	r21,r2
    4364:	90002316 	blt	r18,zero,43f4 <__kernel_rem_pio2+0x834>
    4368:	04c00074 	movhi	r19,1
    436c:	d9400117 	ldw	r5,4(sp)
    4370:	9cddd604 	addi	r19,r19,30552
    4374:	b02f883a 	mov	r23,r22
    4378:	01100034 	movhi	r4,16384
    437c:	0039883a 	mov	fp,zero
    4380:	0023883a 	mov	r17,zero
    4384:	0029883a 	mov	r20,zero
    4388:	00000506 	br	43a0 <__kernel_rem_pio2+0x7e0>
    438c:	9cc00204 	addi	r19,r19,8
    4390:	bdc00204 	addi	r23,r23,8
    4394:	85000e16 	blt	r16,r20,43d0 <__kernel_rem_pio2+0x810>
    4398:	99000017 	ldw	r4,0(r19)
    439c:	99400117 	ldw	r5,4(r19)
    43a0:	b9800017 	ldw	r6,0(r23)
    43a4:	b9c00117 	ldw	r7,4(r23)
    43a8:	a5000044 	addi	r20,r20,1
    43ac:	00084c40 	call	84c4 <__muldf3>
    43b0:	e009883a 	mov	r4,fp
    43b4:	880b883a 	mov	r5,r17
    43b8:	100d883a 	mov	r6,r2
    43bc:	180f883a 	mov	r7,r3
    43c0:	00070700 	call	7070 <__adddf3>
    43c4:	1039883a 	mov	fp,r2
    43c8:	1823883a 	mov	r17,r3
    43cc:	953fef0e 	bge	r18,r20,438c <__kernel_rem_pio2+0x7cc>
    43d0:	d8c00017 	ldw	r3,0(sp)
    43d4:	af000015 	stw	fp,0(r21)
    43d8:	ac400115 	stw	r17,4(r21)
    43dc:	80800044 	addi	r2,r16,1
    43e0:	ad400204 	addi	r21,r21,8
    43e4:	b5bffe04 	addi	r22,r22,-8
    43e8:	1c000526 	beq	r3,r16,4400 <__kernel_rem_pio2+0x840>
    43ec:	1021883a 	mov	r16,r2
    43f0:	903fdd0e 	bge	r18,zero,4368 <__kernel_rem_pio2+0x7a8>
    43f4:	0039883a 	mov	fp,zero
    43f8:	0023883a 	mov	r17,zero
    43fc:	003ff406 	br	43d0 <__kernel_rem_pio2+0x810>
    4400:	d880a117 	ldw	r2,644(sp)
    4404:	dd000417 	ldw	r20,16(sp)
    4408:	dcc00017 	ldw	r19,0(sp)
    440c:	108000c8 	cmpgei	r2,r2,3
    4410:	1000241e 	bne	r2,zero,44a4 <__kernel_rem_pio2+0x8e4>
    4414:	d880a117 	ldw	r2,644(sp)
    4418:	0080d216 	blt	zero,r2,4764 <__kernel_rem_pio2+0xba4>
    441c:	1000141e 	bne	r2,zero,4470 <__kernel_rem_pio2+0x8b0>
    4420:	d8c00317 	ldw	r3,12(sp)
    4424:	d8804704 	addi	r2,sp,284
    4428:	0009883a 	mov	r4,zero
    442c:	10eb883a 	add	r21,r2,r3
    4430:	000b883a 	mov	r5,zero
    4434:	a9800017 	ldw	r6,0(r21)
    4438:	a9c00117 	ldw	r7,4(r21)
    443c:	00070700 	call	7070 <__adddf3>
    4440:	a80d883a 	mov	r6,r21
    4444:	1009883a 	mov	r4,r2
    4448:	d8804704 	addi	r2,sp,284
    444c:	180b883a 	mov	r5,r3
    4450:	ad7ffe04 	addi	r21,r21,-8
    4454:	11bff71e 	bne	r2,r6,4434 <__kernel_rem_pio2+0x874>
    4458:	d8800217 	ldw	r2,8(sp)
    445c:	10000126 	beq	r2,zero,4464 <__kernel_rem_pio2+0x8a4>
    4460:	2960003c 	xorhi	r5,r5,32768
    4464:	d8800917 	ldw	r2,36(sp)
    4468:	11000015 	stw	r4,0(r2)
    446c:	11400115 	stw	r5,4(r2)
    4470:	a08001cc 	andi	r2,r20,7
    4474:	dfc0a017 	ldw	ra,640(sp)
    4478:	df009f17 	ldw	fp,636(sp)
    447c:	ddc09e17 	ldw	r23,632(sp)
    4480:	dd809d17 	ldw	r22,628(sp)
    4484:	dd409c17 	ldw	r21,624(sp)
    4488:	dd009b17 	ldw	r20,620(sp)
    448c:	dcc09a17 	ldw	r19,616(sp)
    4490:	dc809917 	ldw	r18,612(sp)
    4494:	dc409817 	ldw	r17,608(sp)
    4498:	dc009717 	ldw	r16,604(sp)
    449c:	dec0a104 	addi	sp,sp,644
    44a0:	f800283a 	ret
    44a4:	d880a117 	ldw	r2,644(sp)
    44a8:	108000e0 	cmpeqi	r2,r2,3
    44ac:	103ff026 	beq	r2,zero,4470 <__kernel_rem_pio2+0x8b0>
    44b0:	98010226 	beq	r19,zero,48bc <__kernel_rem_pio2+0xcfc>
    44b4:	d8c00317 	ldw	r3,12(sp)
    44b8:	d9000b04 	addi	r4,sp,44
    44bc:	18808c04 	addi	r2,r3,560
    44c0:	1105883a 	add	r2,r2,r4
    44c4:	14bfb017 	ldw	r18,-320(r2)
    44c8:	147fb117 	ldw	r17,-316(r2)
    44cc:	d8804704 	addi	r2,sp,284
    44d0:	10e1883a 	add	r16,r2,r3
    44d4:	85bffe17 	ldw	r22,-8(r16)
    44d8:	857fff17 	ldw	r21,-4(r16)
    44dc:	9009883a 	mov	r4,r18
    44e0:	880b883a 	mov	r5,r17
    44e4:	b00d883a 	mov	r6,r22
    44e8:	a80f883a 	mov	r7,r21
    44ec:	00070700 	call	7070 <__adddf3>
    44f0:	100d883a 	mov	r6,r2
    44f4:	180f883a 	mov	r7,r3
    44f8:	b009883a 	mov	r4,r22
    44fc:	a80b883a 	mov	r5,r21
    4500:	9039883a 	mov	fp,r18
    4504:	882f883a 	mov	r23,r17
    4508:	1025883a 	mov	r18,r2
    450c:	1823883a 	mov	r17,r3
    4510:	0008c700 	call	8c70 <__subdf3>
    4514:	e00d883a 	mov	r6,fp
    4518:	b80f883a 	mov	r7,r23
    451c:	1009883a 	mov	r4,r2
    4520:	180b883a 	mov	r5,r3
    4524:	00070700 	call	7070 <__adddf3>
    4528:	80800015 	stw	r2,0(r16)
    452c:	80c00115 	stw	r3,4(r16)
    4530:	84bffe15 	stw	r18,-8(r16)
    4534:	847fff15 	stw	r17,-4(r16)
    4538:	d8804704 	addi	r2,sp,284
    453c:	843ffe04 	addi	r16,r16,-8
    4540:	143fe41e 	bne	r2,r16,44d4 <__kernel_rem_pio2+0x914>
    4544:	9cc00088 	cmpgei	r19,r19,2
    4548:	9800dc26 	beq	r19,zero,48bc <__kernel_rem_pio2+0xcfc>
    454c:	d8c00317 	ldw	r3,12(sp)
    4550:	d9000b04 	addi	r4,sp,44
    4554:	dc404904 	addi	r17,sp,292
    4558:	18808c04 	addi	r2,r3,560
    455c:	1105883a 	add	r2,r2,r4
    4560:	14ffb017 	ldw	r19,-320(r2)
    4564:	14bfb117 	ldw	r18,-316(r2)
    4568:	d8804704 	addi	r2,sp,284
    456c:	10eb883a 	add	r21,r2,r3
    4570:	a821883a 	mov	r16,r21
    4574:	dd000015 	stw	r20,0(sp)
    4578:	85fffe17 	ldw	r23,-8(r16)
    457c:	85bfff17 	ldw	r22,-4(r16)
    4580:	9809883a 	mov	r4,r19
    4584:	900b883a 	mov	r5,r18
    4588:	b80d883a 	mov	r6,r23
    458c:	b00f883a 	mov	r7,r22
    4590:	00070700 	call	7070 <__adddf3>
    4594:	100d883a 	mov	r6,r2
    4598:	180f883a 	mov	r7,r3
    459c:	b809883a 	mov	r4,r23
    45a0:	b00b883a 	mov	r5,r22
    45a4:	9829883a 	mov	r20,r19
    45a8:	9039883a 	mov	fp,r18
    45ac:	1027883a 	mov	r19,r2
    45b0:	1825883a 	mov	r18,r3
    45b4:	0008c700 	call	8c70 <__subdf3>
    45b8:	a00d883a 	mov	r6,r20
    45bc:	e00f883a 	mov	r7,fp
    45c0:	1009883a 	mov	r4,r2
    45c4:	180b883a 	mov	r5,r3
    45c8:	00070700 	call	7070 <__adddf3>
    45cc:	80800015 	stw	r2,0(r16)
    45d0:	80c00115 	stw	r3,4(r16)
    45d4:	84fffe15 	stw	r19,-8(r16)
    45d8:	84bfff15 	stw	r18,-4(r16)
    45dc:	843ffe04 	addi	r16,r16,-8
    45e0:	8c3fe51e 	bne	r17,r16,4578 <__kernel_rem_pio2+0x9b8>
    45e4:	dd000017 	ldw	r20,0(sp)
    45e8:	0009883a 	mov	r4,zero
    45ec:	000b883a 	mov	r5,zero
    45f0:	a9800017 	ldw	r6,0(r21)
    45f4:	a9c00117 	ldw	r7,4(r21)
    45f8:	ad7ffe04 	addi	r21,r21,-8
    45fc:	00070700 	call	7070 <__adddf3>
    4600:	1009883a 	mov	r4,r2
    4604:	180b883a 	mov	r5,r3
    4608:	8d7ff91e 	bne	r17,r21,45f0 <__kernel_rem_pio2+0xa30>
    460c:	da000217 	ldw	r8,8(sp)
    4610:	d9c04717 	ldw	r7,284(sp)
    4614:	d8c04817 	ldw	r3,288(sp)
    4618:	d9804917 	ldw	r6,292(sp)
    461c:	d8804a17 	ldw	r2,296(sp)
    4620:	4000891e 	bne	r8,zero,4848 <__kernel_rem_pio2+0xc88>
    4624:	da000917 	ldw	r8,36(sp)
    4628:	41c00015 	stw	r7,0(r8)
    462c:	40c00115 	stw	r3,4(r8)
    4630:	41800215 	stw	r6,8(r8)
    4634:	40800315 	stw	r2,12(r8)
    4638:	41000415 	stw	r4,16(r8)
    463c:	41400515 	stw	r5,20(r8)
    4640:	003f8b06 	br	4470 <__kernel_rem_pio2+0x8b0>
    4644:	88bfffc4 	addi	r2,r17,-1
    4648:	100490ba 	slli	r2,r2,2
    464c:	01402034 	movhi	r5,128
    4650:	003eca06 	br	417c <__kernel_rem_pio2+0x5bc>
    4654:	00fffa04 	movi	r3,-24
    4658:	d8000615 	stw	zero,24(sp)
    465c:	003d7906 	br	3c44 <__kernel_rem_pio2+0x84>
    4660:	a5000044 	addi	r20,r20,1
    4664:	05400084 	movi	r21,2
    4668:	047e9016 	blt	zero,r17,40ac <__kernel_rem_pio2+0x4ec>
    466c:	480f883a 	mov	r7,r9
    4670:	900d883a 	mov	r6,r18
    4674:	0009883a 	mov	r4,zero
    4678:	014ffc34 	movhi	r5,16368
    467c:	0008c700 	call	8c70 <__subdf3>
    4680:	1027883a 	mov	r19,r2
    4684:	1813883a 	mov	r9,r3
    4688:	003e2606 	br	3f24 <__kernel_rem_pio2+0x364>
    468c:	ddc00317 	ldw	r23,12(sp)
    4690:	9809883a 	mov	r4,r19
    4694:	480b883a 	mov	r5,r9
    4698:	05cdc83a 	sub	r6,zero,r23
    469c:	dd400215 	stw	r21,8(sp)
    46a0:	0005ad80 	call	5ad8 <scalbn>
    46a4:	000d883a 	mov	r6,zero
    46a8:	01d05c34 	movhi	r7,16752
    46ac:	1009883a 	mov	r4,r2
    46b0:	180b883a 	mov	r5,r3
    46b4:	1025883a 	mov	r18,r2
    46b8:	1821883a 	mov	r16,r3
    46bc:	00082f40 	call	82f4 <__gedf2>
    46c0:	10005716 	blt	r2,zero,4820 <__kernel_rem_pio2+0xc60>
    46c4:	000d883a 	mov	r6,zero
    46c8:	01cf9c34 	movhi	r7,15984
    46cc:	9009883a 	mov	r4,r18
    46d0:	800b883a 	mov	r5,r16
    46d4:	00084c40 	call	84c4 <__muldf3>
    46d8:	882c90ba 	slli	r22,r17,2
    46dc:	180b883a 	mov	r5,r3
    46e0:	1009883a 	mov	r4,r2
    46e4:	00095d00 	call	95d0 <__fixdfsi>
    46e8:	1009883a 	mov	r4,r2
    46ec:	102b883a 	mov	r21,r2
    46f0:	d8c00b04 	addi	r3,sp,44
    46f4:	b0808c04 	addi	r2,r22,560
    46f8:	10ed883a 	add	r22,r2,r3
    46fc:	00096500 	call	9650 <__floatsidf>
    4700:	000d883a 	mov	r6,zero
    4704:	01d05c34 	movhi	r7,16752
    4708:	1009883a 	mov	r4,r2
    470c:	180b883a 	mov	r5,r3
    4710:	00084c40 	call	84c4 <__muldf3>
    4714:	100d883a 	mov	r6,r2
    4718:	180f883a 	mov	r7,r3
    471c:	9009883a 	mov	r4,r18
    4720:	800b883a 	mov	r5,r16
    4724:	0008c700 	call	8c70 <__subdf3>
    4728:	180b883a 	mov	r5,r3
    472c:	1009883a 	mov	r4,r2
    4730:	00095d00 	call	95d0 <__fixdfsi>
    4734:	8cc00044 	addi	r19,r17,1
    4738:	980690ba 	slli	r3,r19,2
    473c:	b0bf7415 	stw	r2,-560(r22)
    4740:	b8800604 	addi	r2,r23,24
    4744:	d8800315 	stw	r2,12(sp)
    4748:	18808c04 	addi	r2,r3,560
    474c:	d8c00b04 	addi	r3,sp,44
    4750:	10c7883a 	add	r3,r2,r3
    4754:	1d7f7415 	stw	r21,-560(r3)
    4758:	003ed406 	br	42ac <__kernel_rem_pio2+0x6ec>
    475c:	0015883a 	mov	r10,zero
    4760:	003e7d06 	br	4158 <__kernel_rem_pio2+0x598>
    4764:	d8c00317 	ldw	r3,12(sp)
    4768:	d8804704 	addi	r2,sp,284
    476c:	10eb883a 	add	r21,r2,r3
    4770:	0005883a 	mov	r2,zero
    4774:	0007883a 	mov	r3,zero
    4778:	1009883a 	mov	r4,r2
    477c:	180b883a 	mov	r5,r3
    4780:	a9800017 	ldw	r6,0(r21)
    4784:	a9c00117 	ldw	r7,4(r21)
    4788:	00070700 	call	7070 <__adddf3>
    478c:	a80d883a 	mov	r6,r21
    4790:	1009883a 	mov	r4,r2
    4794:	d8804704 	addi	r2,sp,284
    4798:	180b883a 	mov	r5,r3
    479c:	ad7ffe04 	addi	r21,r21,-8
    47a0:	11bff71e 	bne	r2,r6,4780 <__kernel_rem_pio2+0xbc0>
    47a4:	2005883a 	mov	r2,r4
    47a8:	d9000217 	ldw	r4,8(sp)
    47ac:	20002a1e 	bne	r4,zero,4858 <__kernel_rem_pio2+0xc98>
    47b0:	d9800917 	ldw	r6,36(sp)
    47b4:	d9004717 	ldw	r4,284(sp)
    47b8:	d9404817 	ldw	r5,288(sp)
    47bc:	30800015 	stw	r2,0(r6)
    47c0:	30c00115 	stw	r3,4(r6)
    47c4:	180f883a 	mov	r7,r3
    47c8:	100d883a 	mov	r6,r2
    47cc:	0008c700 	call	8c70 <__subdf3>
    47d0:	1009883a 	mov	r4,r2
    47d4:	180b883a 	mov	r5,r3
    47d8:	04c00d0e 	bge	zero,r19,4810 <__kernel_rem_pio2+0xc50>
    47dc:	dc004904 	addi	r16,sp,292
    47e0:	04400044 	movi	r17,1
    47e4:	81800017 	ldw	r6,0(r16)
    47e8:	81c00117 	ldw	r7,4(r16)
    47ec:	8c400044 	addi	r17,r17,1
    47f0:	84000204 	addi	r16,r16,8
    47f4:	00070700 	call	7070 <__adddf3>
    47f8:	1009883a 	mov	r4,r2
    47fc:	180b883a 	mov	r5,r3
    4800:	9c7ff80e 	bge	r19,r17,47e4 <__kernel_rem_pio2+0xc24>
    4804:	d8800217 	ldw	r2,8(sp)
    4808:	10000126 	beq	r2,zero,4810 <__kernel_rem_pio2+0xc50>
    480c:	2960003c 	xorhi	r5,r5,32768
    4810:	d8800917 	ldw	r2,36(sp)
    4814:	11000215 	stw	r4,8(r2)
    4818:	11400315 	stw	r5,12(r2)
    481c:	003f1406 	br	4470 <__kernel_rem_pio2+0x8b0>
    4820:	880490ba 	slli	r2,r17,2
    4824:	800b883a 	mov	r5,r16
    4828:	d8c00b04 	addi	r3,sp,44
    482c:	10808c04 	addi	r2,r2,560
    4830:	9009883a 	mov	r4,r18
    4834:	10e1883a 	add	r16,r2,r3
    4838:	00095d00 	call	95d0 <__fixdfsi>
    483c:	80bf7415 	stw	r2,-560(r16)
    4840:	8827883a 	mov	r19,r17
    4844:	003e9906 	br	42ac <__kernel_rem_pio2+0x6ec>
    4848:	18e0003c 	xorhi	r3,r3,32768
    484c:	10a0003c 	xorhi	r2,r2,32768
    4850:	2960003c 	xorhi	r5,r5,32768
    4854:	003f7306 	br	4624 <__kernel_rem_pio2+0xa64>
    4858:	d9c00917 	ldw	r7,36(sp)
    485c:	d9004717 	ldw	r4,284(sp)
    4860:	d9404817 	ldw	r5,288(sp)
    4864:	19a0003c 	xorhi	r6,r3,32768
    4868:	39800115 	stw	r6,4(r7)
    486c:	38800015 	stw	r2,0(r7)
    4870:	100d883a 	mov	r6,r2
    4874:	180f883a 	mov	r7,r3
    4878:	0008c700 	call	8c70 <__subdf3>
    487c:	1009883a 	mov	r4,r2
    4880:	180b883a 	mov	r5,r3
    4884:	04ffd516 	blt	zero,r19,47dc <__kernel_rem_pio2+0xc1c>
    4888:	003fe006 	br	480c <__kernel_rem_pio2+0xc4c>
    488c:	d880a117 	ldw	r2,644(sp)
    4890:	108000c8 	cmpgei	r2,r2,3
    4894:	1000061e 	bne	r2,zero,48b0 <__kernel_rem_pio2+0xcf0>
    4898:	d880a117 	ldw	r2,644(sp)
    489c:	00800a16 	blt	zero,r2,48c8 <__kernel_rem_pio2+0xd08>
    48a0:	103ef31e 	bne	r2,zero,4470 <__kernel_rem_pio2+0x8b0>
    48a4:	0009883a 	mov	r4,zero
    48a8:	000b883a 	mov	r5,zero
    48ac:	003eea06 	br	4458 <__kernel_rem_pio2+0x898>
    48b0:	d880a117 	ldw	r2,644(sp)
    48b4:	108000e0 	cmpeqi	r2,r2,3
    48b8:	103eed26 	beq	r2,zero,4470 <__kernel_rem_pio2+0x8b0>
    48bc:	0009883a 	mov	r4,zero
    48c0:	000b883a 	mov	r5,zero
    48c4:	003f5106 	br	460c <__kernel_rem_pio2+0xa4c>
    48c8:	0005883a 	mov	r2,zero
    48cc:	0007883a 	mov	r3,zero
    48d0:	003fb506 	br	47a8 <__kernel_rem_pio2+0xbe8>

000048d4 <__kernel_sin>:
    48d4:	02200034 	movhi	r8,32768
    48d8:	defff304 	addi	sp,sp,-52
    48dc:	423fffc4 	addi	r8,r8,-1
    48e0:	dd400815 	stw	r21,32(sp)
    48e4:	dd000715 	stw	r20,28(sp)
    48e8:	dc400415 	stw	r17,16(sp)
    48ec:	dc000315 	stw	r16,12(sp)
    48f0:	dfc00c15 	stw	ra,48(sp)
    48f4:	df000b15 	stw	fp,44(sp)
    48f8:	ddc00a15 	stw	r23,40(sp)
    48fc:	dd800915 	stw	r22,36(sp)
    4900:	dcc00615 	stw	r19,24(sp)
    4904:	dc800515 	stw	r18,20(sp)
    4908:	2a10703a 	and	r8,r5,r8
    490c:	00cf9034 	movhi	r3,15936
    4910:	2821883a 	mov	r16,r5
    4914:	2023883a 	mov	r17,r4
    4918:	302b883a 	mov	r21,r6
    491c:	3829883a 	mov	r20,r7
    4920:	40c0020e 	bge	r8,r3,492c <__kernel_sin+0x58>
    4924:	00095d00 	call	95d0 <__fixdfsi>
    4928:	10009926 	beq	r2,zero,4b90 <__kernel_sin+0x2bc>
    492c:	880d883a 	mov	r6,r17
    4930:	800f883a 	mov	r7,r16
    4934:	8809883a 	mov	r4,r17
    4938:	800b883a 	mov	r5,r16
    493c:	00084c40 	call	84c4 <__muldf3>
    4940:	100d883a 	mov	r6,r2
    4944:	180f883a 	mov	r7,r3
    4948:	8809883a 	mov	r4,r17
    494c:	800b883a 	mov	r5,r16
    4950:	1027883a 	mov	r19,r2
    4954:	1825883a 	mov	r18,r3
    4958:	00084c40 	call	84c4 <__muldf3>
    495c:	0196b434 	movhi	r6,23248
    4960:	01cf79b4 	movhi	r7,15846
    4964:	31b55f04 	addi	r6,r6,-10884
    4968:	39f64e84 	addi	r7,r7,-9926
    496c:	9809883a 	mov	r4,r19
    4970:	900b883a 	mov	r5,r18
    4974:	102f883a 	mov	r23,r2
    4978:	182d883a 	mov	r22,r3
    497c:	00084c40 	call	84c4 <__muldf3>
    4980:	01a28b34 	movhi	r6,35372
    4984:	01cf96f4 	movhi	r7,15963
    4988:	31a73ac4 	addi	r6,r6,-25365
    498c:	39f97984 	addi	r7,r7,-6682
    4990:	1009883a 	mov	r4,r2
    4994:	180b883a 	mov	r5,r3
    4998:	0008c700 	call	8c70 <__subdf3>
    499c:	980d883a 	mov	r6,r19
    49a0:	900f883a 	mov	r7,r18
    49a4:	1009883a 	mov	r4,r2
    49a8:	180b883a 	mov	r5,r3
    49ac:	00084c40 	call	84c4 <__muldf3>
    49b0:	0195ecb4 	movhi	r6,22450
    49b4:	01cfb1f4 	movhi	r7,16071
    49b8:	31bf9f44 	addi	r6,r6,-387
    49bc:	39c778c4 	addi	r7,r7,7651
    49c0:	1009883a 	mov	r4,r2
    49c4:	180b883a 	mov	r5,r3
    49c8:	00070700 	call	7070 <__adddf3>
    49cc:	980d883a 	mov	r6,r19
    49d0:	900f883a 	mov	r7,r18
    49d4:	1009883a 	mov	r4,r2
    49d8:	180b883a 	mov	r5,r3
    49dc:	00084c40 	call	84c4 <__muldf3>
    49e0:	01867074 	movhi	r6,6593
    49e4:	01cfcab4 	movhi	r7,16170
    49e8:	31987544 	addi	r6,r6,25045
    49ec:	39c06804 	addi	r7,r7,416
    49f0:	1009883a 	mov	r4,r2
    49f4:	180b883a 	mov	r5,r3
    49f8:	0008c700 	call	8c70 <__subdf3>
    49fc:	980d883a 	mov	r6,r19
    4a00:	900f883a 	mov	r7,r18
    4a04:	1009883a 	mov	r4,r2
    4a08:	180b883a 	mov	r5,r3
    4a0c:	00084c40 	call	84c4 <__muldf3>
    4a10:	01844474 	movhi	r6,4369
    4a14:	01cfe074 	movhi	r7,16257
    4a18:	31be2984 	addi	r6,r6,-1882
    4a1c:	39c44444 	addi	r7,r7,4369
    4a20:	1009883a 	mov	r4,r2
    4a24:	180b883a 	mov	r5,r3
    4a28:	00070700 	call	7070 <__adddf3>
    4a2c:	1011883a 	mov	r8,r2
    4a30:	d8800d17 	ldw	r2,52(sp)
    4a34:	1839883a 	mov	fp,r3
    4a38:	10003e26 	beq	r2,zero,4b34 <__kernel_sin+0x260>
    4a3c:	000d883a 	mov	r6,zero
    4a40:	01cff834 	movhi	r7,16352
    4a44:	a809883a 	mov	r4,r21
    4a48:	a00b883a 	mov	r5,r20
    4a4c:	da000215 	stw	r8,8(sp)
    4a50:	00084c40 	call	84c4 <__muldf3>
    4a54:	da000217 	ldw	r8,8(sp)
    4a58:	e00f883a 	mov	r7,fp
    4a5c:	b809883a 	mov	r4,r23
    4a60:	400d883a 	mov	r6,r8
    4a64:	b00b883a 	mov	r5,r22
    4a68:	d8800115 	stw	r2,4(sp)
    4a6c:	d8c00015 	stw	r3,0(sp)
    4a70:	00084c40 	call	84c4 <__muldf3>
    4a74:	da800117 	ldw	r10,4(sp)
    4a78:	da400017 	ldw	r9,0(sp)
    4a7c:	100d883a 	mov	r6,r2
    4a80:	5009883a 	mov	r4,r10
    4a84:	480b883a 	mov	r5,r9
    4a88:	180f883a 	mov	r7,r3
    4a8c:	0008c700 	call	8c70 <__subdf3>
    4a90:	980d883a 	mov	r6,r19
    4a94:	900f883a 	mov	r7,r18
    4a98:	1009883a 	mov	r4,r2
    4a9c:	180b883a 	mov	r5,r3
    4aa0:	00084c40 	call	84c4 <__muldf3>
    4aa4:	a80d883a 	mov	r6,r21
    4aa8:	a00f883a 	mov	r7,r20
    4aac:	1009883a 	mov	r4,r2
    4ab0:	180b883a 	mov	r5,r3
    4ab4:	0008c700 	call	8c70 <__subdf3>
    4ab8:	01955574 	movhi	r6,21845
    4abc:	01cff174 	movhi	r7,16325
    4ac0:	31955244 	addi	r6,r6,21833
    4ac4:	39d55544 	addi	r7,r7,21845
    4ac8:	b809883a 	mov	r4,r23
    4acc:	b00b883a 	mov	r5,r22
    4ad0:	1027883a 	mov	r19,r2
    4ad4:	1825883a 	mov	r18,r3
    4ad8:	00084c40 	call	84c4 <__muldf3>
    4adc:	100d883a 	mov	r6,r2
    4ae0:	180f883a 	mov	r7,r3
    4ae4:	9809883a 	mov	r4,r19
    4ae8:	900b883a 	mov	r5,r18
    4aec:	00070700 	call	7070 <__adddf3>
    4af0:	100d883a 	mov	r6,r2
    4af4:	180f883a 	mov	r7,r3
    4af8:	8809883a 	mov	r4,r17
    4afc:	800b883a 	mov	r5,r16
    4b00:	0008c700 	call	8c70 <__subdf3>
    4b04:	dfc00c17 	ldw	ra,48(sp)
    4b08:	df000b17 	ldw	fp,44(sp)
    4b0c:	ddc00a17 	ldw	r23,40(sp)
    4b10:	dd800917 	ldw	r22,36(sp)
    4b14:	dd400817 	ldw	r21,32(sp)
    4b18:	dd000717 	ldw	r20,28(sp)
    4b1c:	dcc00617 	ldw	r19,24(sp)
    4b20:	dc800517 	ldw	r18,20(sp)
    4b24:	dc400417 	ldw	r17,16(sp)
    4b28:	dc000317 	ldw	r16,12(sp)
    4b2c:	dec00d04 	addi	sp,sp,52
    4b30:	f800283a 	ret
    4b34:	400d883a 	mov	r6,r8
    4b38:	9809883a 	mov	r4,r19
    4b3c:	900b883a 	mov	r5,r18
    4b40:	180f883a 	mov	r7,r3
    4b44:	00084c40 	call	84c4 <__muldf3>
    4b48:	01955574 	movhi	r6,21845
    4b4c:	01cff174 	movhi	r7,16325
    4b50:	31955244 	addi	r6,r6,21833
    4b54:	39d55544 	addi	r7,r7,21845
    4b58:	1009883a 	mov	r4,r2
    4b5c:	180b883a 	mov	r5,r3
    4b60:	0008c700 	call	8c70 <__subdf3>
    4b64:	b80d883a 	mov	r6,r23
    4b68:	b00f883a 	mov	r7,r22
    4b6c:	1009883a 	mov	r4,r2
    4b70:	180b883a 	mov	r5,r3
    4b74:	00084c40 	call	84c4 <__muldf3>
    4b78:	880d883a 	mov	r6,r17
    4b7c:	800f883a 	mov	r7,r16
    4b80:	1009883a 	mov	r4,r2
    4b84:	180b883a 	mov	r5,r3
    4b88:	00070700 	call	7070 <__adddf3>
    4b8c:	003fdd06 	br	4b04 <__kernel_sin+0x230>
    4b90:	8805883a 	mov	r2,r17
    4b94:	8007883a 	mov	r3,r16
    4b98:	003fda06 	br	4b04 <__kernel_sin+0x230>

00004b9c <__kernel_cosf>:
    4b9c:	defff804 	addi	sp,sp,-32
    4ba0:	dc000015 	stw	r16,0(sp)
    4ba4:	04200034 	movhi	r16,32768
    4ba8:	843fffc4 	addi	r16,r16,-1
    4bac:	dd000415 	stw	r20,16(sp)
    4bb0:	dcc00315 	stw	r19,12(sp)
    4bb4:	dfc00715 	stw	ra,28(sp)
    4bb8:	dd800615 	stw	r22,24(sp)
    4bbc:	dd400515 	stw	r21,20(sp)
    4bc0:	dc800215 	stw	r18,8(sp)
    4bc4:	dc400115 	stw	r17,4(sp)
    4bc8:	8120703a 	and	r16,r16,r4
    4bcc:	008c8034 	movhi	r2,12800
    4bd0:	2027883a 	mov	r19,r4
    4bd4:	2829883a 	mov	r20,r5
    4bd8:	8080430e 	bge	r16,r2,4ce8 <__kernel_cosf+0x14c>
    4bdc:	0006edc0 	call	6edc <__fixsfsi>
    4be0:	10009d26 	beq	r2,zero,4e58 <__kernel_cosf+0x2bc>
    4be4:	980b883a 	mov	r5,r19
    4be8:	9809883a 	mov	r4,r19
    4bec:	00066480 	call	6648 <__mulsf3>
    4bf0:	016b5234 	movhi	r5,44360
    4bf4:	2975d384 	addi	r5,r5,-10418
    4bf8:	1009883a 	mov	r4,r2
    4bfc:	1023883a 	mov	r17,r2
    4c00:	00066480 	call	6648 <__mulsf3>
    4c04:	014c43f4 	movhi	r5,12559
    4c08:	295d3d84 	addi	r5,r5,29942
    4c0c:	1009883a 	mov	r4,r2
    4c10:	00060b40 	call	60b4 <__addsf3>
    4c14:	880b883a 	mov	r5,r17
    4c18:	1009883a 	mov	r4,r2
    4c1c:	00066480 	call	6648 <__mulsf3>
    4c20:	014d2534 	movhi	r5,13460
    4c24:	297c9f04 	addi	r5,r5,-3460
    4c28:	1009883a 	mov	r4,r2
    4c2c:	0006a480 	call	6a48 <__subsf3>
    4c30:	880b883a 	mov	r5,r17
    4c34:	1009883a 	mov	r4,r2
    4c38:	00066480 	call	6648 <__mulsf3>
    4c3c:	014df434 	movhi	r5,14288
    4c40:	29434044 	addi	r5,r5,3329
    4c44:	1009883a 	mov	r4,r2
    4c48:	00060b40 	call	60b4 <__addsf3>
    4c4c:	880b883a 	mov	r5,r17
    4c50:	1009883a 	mov	r4,r2
    4c54:	00066480 	call	6648 <__mulsf3>
    4c58:	014eadb4 	movhi	r5,15030
    4c5c:	2942d844 	addi	r5,r5,2913
    4c60:	1009883a 	mov	r4,r2
    4c64:	0006a480 	call	6a48 <__subsf3>
    4c68:	880b883a 	mov	r5,r17
    4c6c:	1009883a 	mov	r4,r2
    4c70:	00066480 	call	6648 <__mulsf3>
    4c74:	014f4af4 	movhi	r5,15659
    4c78:	296aaac4 	addi	r5,r5,-21845
    4c7c:	1009883a 	mov	r4,r2
    4c80:	00060b40 	call	60b4 <__addsf3>
    4c84:	880b883a 	mov	r5,r17
    4c88:	1009883a 	mov	r4,r2
    4c8c:	00066480 	call	6648 <__mulsf3>
    4c90:	102b883a 	mov	r21,r2
    4c94:	8809883a 	mov	r4,r17
    4c98:	014fc034 	movhi	r5,16128
    4c9c:	00066480 	call	6648 <__mulsf3>
    4ca0:	a80b883a 	mov	r5,r21
    4ca4:	8809883a 	mov	r4,r17
    4ca8:	1021883a 	mov	r16,r2
    4cac:	00066480 	call	6648 <__mulsf3>
    4cb0:	a00b883a 	mov	r5,r20
    4cb4:	9809883a 	mov	r4,r19
    4cb8:	1023883a 	mov	r17,r2
    4cbc:	00066480 	call	6648 <__mulsf3>
    4cc0:	8809883a 	mov	r4,r17
    4cc4:	100b883a 	mov	r5,r2
    4cc8:	0006a480 	call	6a48 <__subsf3>
    4ccc:	8009883a 	mov	r4,r16
    4cd0:	100b883a 	mov	r5,r2
    4cd4:	0006a480 	call	6a48 <__subsf3>
    4cd8:	100b883a 	mov	r5,r2
    4cdc:	010fe034 	movhi	r4,16256
    4ce0:	0006a480 	call	6a48 <__subsf3>
    4ce4:	00004f06 	br	4e24 <__kernel_cosf+0x288>
    4ce8:	200b883a 	mov	r5,r4
    4cec:	00066480 	call	6648 <__mulsf3>
    4cf0:	016b5234 	movhi	r5,44360
    4cf4:	2975d384 	addi	r5,r5,-10418
    4cf8:	1009883a 	mov	r4,r2
    4cfc:	1025883a 	mov	r18,r2
    4d00:	00066480 	call	6648 <__mulsf3>
    4d04:	014c43f4 	movhi	r5,12559
    4d08:	295d3d84 	addi	r5,r5,29942
    4d0c:	1009883a 	mov	r4,r2
    4d10:	00060b40 	call	60b4 <__addsf3>
    4d14:	900b883a 	mov	r5,r18
    4d18:	1009883a 	mov	r4,r2
    4d1c:	00066480 	call	6648 <__mulsf3>
    4d20:	014d2534 	movhi	r5,13460
    4d24:	297c9f04 	addi	r5,r5,-3460
    4d28:	1009883a 	mov	r4,r2
    4d2c:	0006a480 	call	6a48 <__subsf3>
    4d30:	900b883a 	mov	r5,r18
    4d34:	1009883a 	mov	r4,r2
    4d38:	00066480 	call	6648 <__mulsf3>
    4d3c:	014df434 	movhi	r5,14288
    4d40:	29434044 	addi	r5,r5,3329
    4d44:	1009883a 	mov	r4,r2
    4d48:	00060b40 	call	60b4 <__addsf3>
    4d4c:	900b883a 	mov	r5,r18
    4d50:	1009883a 	mov	r4,r2
    4d54:	00066480 	call	6648 <__mulsf3>
    4d58:	014eadb4 	movhi	r5,15030
    4d5c:	2942d844 	addi	r5,r5,2913
    4d60:	1009883a 	mov	r4,r2
    4d64:	0006a480 	call	6a48 <__subsf3>
    4d68:	900b883a 	mov	r5,r18
    4d6c:	1009883a 	mov	r4,r2
    4d70:	00066480 	call	6648 <__mulsf3>
    4d74:	014f4af4 	movhi	r5,15659
    4d78:	296aaac4 	addi	r5,r5,-21845
    4d7c:	1009883a 	mov	r4,r2
    4d80:	00060b40 	call	60b4 <__addsf3>
    4d84:	900b883a 	mov	r5,r18
    4d88:	1009883a 	mov	r4,r2
    4d8c:	00066480 	call	6648 <__mulsf3>
    4d90:	00cfa6b4 	movhi	r3,16026
    4d94:	18e66644 	addi	r3,r3,-26215
    4d98:	102d883a 	mov	r22,r2
    4d9c:	9023883a 	mov	r17,r18
    4da0:	102b883a 	mov	r21,r2
    4da4:	1c3fbb0e 	bge	r3,r16,4c94 <__kernel_cosf+0xf8>
    4da8:	008fd234 	movhi	r2,16200
    4dac:	14002716 	blt	r2,r16,4e4c <__kernel_cosf+0x2b0>
    4db0:	017fc034 	movhi	r5,65280
    4db4:	814b883a 	add	r5,r16,r5
    4db8:	010fe034 	movhi	r4,16256
    4dbc:	2821883a 	mov	r16,r5
    4dc0:	0006a480 	call	6a48 <__subsf3>
    4dc4:	1023883a 	mov	r17,r2
    4dc8:	9009883a 	mov	r4,r18
    4dcc:	014fc034 	movhi	r5,16128
    4dd0:	00066480 	call	6648 <__mulsf3>
    4dd4:	800b883a 	mov	r5,r16
    4dd8:	1009883a 	mov	r4,r2
    4ddc:	0006a480 	call	6a48 <__subsf3>
    4de0:	9009883a 	mov	r4,r18
    4de4:	b00b883a 	mov	r5,r22
    4de8:	1021883a 	mov	r16,r2
    4dec:	00066480 	call	6648 <__mulsf3>
    4df0:	a00b883a 	mov	r5,r20
    4df4:	9809883a 	mov	r4,r19
    4df8:	1025883a 	mov	r18,r2
    4dfc:	00066480 	call	6648 <__mulsf3>
    4e00:	100b883a 	mov	r5,r2
    4e04:	9009883a 	mov	r4,r18
    4e08:	0006a480 	call	6a48 <__subsf3>
    4e0c:	100b883a 	mov	r5,r2
    4e10:	8009883a 	mov	r4,r16
    4e14:	0006a480 	call	6a48 <__subsf3>
    4e18:	100b883a 	mov	r5,r2
    4e1c:	8809883a 	mov	r4,r17
    4e20:	0006a480 	call	6a48 <__subsf3>
    4e24:	dfc00717 	ldw	ra,28(sp)
    4e28:	dd800617 	ldw	r22,24(sp)
    4e2c:	dd400517 	ldw	r21,20(sp)
    4e30:	dd000417 	ldw	r20,16(sp)
    4e34:	dcc00317 	ldw	r19,12(sp)
    4e38:	dc800217 	ldw	r18,8(sp)
    4e3c:	dc400117 	ldw	r17,4(sp)
    4e40:	dc000017 	ldw	r16,0(sp)
    4e44:	dec00804 	addi	sp,sp,32
    4e48:	f800283a 	ret
    4e4c:	044fce34 	movhi	r17,16184
    4e50:	040fa434 	movhi	r16,16016
    4e54:	003fdc06 	br	4dc8 <__kernel_cosf+0x22c>
    4e58:	008fe034 	movhi	r2,16256
    4e5c:	003ff106 	br	4e24 <__kernel_cosf+0x288>

00004e60 <__kernel_rem_pio2f>:
    4e60:	deff9a04 	addi	sp,sp,-408
    4e64:	d8806617 	ldw	r2,408(sp)
    4e68:	dfc06515 	stw	ra,404(sp)
    4e6c:	df006415 	stw	fp,400(sp)
    4e70:	100690ba 	slli	r3,r2,2
    4e74:	00800074 	movhi	r2,1
    4e78:	ddc06315 	stw	r23,396(sp)
    4e7c:	1885883a 	add	r2,r3,r2
    4e80:	109df517 	ldw	r2,30676(r2)
    4e84:	dd806215 	stw	r22,392(sp)
    4e88:	dd406115 	stw	r21,388(sp)
    4e8c:	d8800515 	stw	r2,20(sp)
    4e90:	38bfffc4 	addi	r2,r7,-1
    4e94:	dd006015 	stw	r20,384(sp)
    4e98:	dcc05f15 	stw	r19,380(sp)
    4e9c:	dc805e15 	stw	r18,376(sp)
    4ea0:	dc405d15 	stw	r17,372(sp)
    4ea4:	dc005c15 	stw	r16,368(sp)
    4ea8:	d9800b15 	stw	r6,44(sp)
    4eac:	d9c00715 	stw	r7,28(sp)
    4eb0:	30ffff10 	cmplti	r3,r6,-4
    4eb4:	d9000215 	stw	r4,8(sp)
    4eb8:	d9400915 	stw	r5,36(sp)
    4ebc:	d8800115 	stw	r2,4(sp)
    4ec0:	1802451e 	bne	r3,zero,57d8 <__kernel_rem_pio2f+0x978>
    4ec4:	30bfff44 	addi	r2,r6,-3
    4ec8:	10024716 	blt	r2,zero,57e8 <__kernel_rem_pio2f+0x988>
    4ecc:	1005d0fa 	srai	r2,r2,3
    4ed0:	d8800615 	stw	r2,24(sp)
    4ed4:	10800044 	addi	r2,r2,1
    4ed8:	100490fa 	slli	r2,r2,3
    4edc:	d8800a15 	stw	r2,40(sp)
    4ee0:	d9000b17 	ldw	r4,44(sp)
    4ee4:	d9400a17 	ldw	r5,40(sp)
    4ee8:	d8c00117 	ldw	r3,4(sp)
    4eec:	d8800517 	ldw	r2,20(sp)
    4ef0:	2149c83a 	sub	r4,r4,r5
    4ef4:	d9000315 	stw	r4,12(sp)
    4ef8:	d9000617 	ldw	r4,24(sp)
    4efc:	10c5883a 	add	r2,r2,r3
    4f00:	20e1c83a 	sub	r16,r4,r3
    4f04:	10000e16 	blt	r2,zero,4f40 <__kernel_rem_pio2f+0xe0>
    4f08:	802490ba 	slli	r18,r16,2
    4f0c:	d8c06717 	ldw	r3,412(sp)
    4f10:	10800044 	addi	r2,r2,1
    4f14:	dc402004 	addi	r17,sp,128
    4f18:	1ca5883a 	add	r18,r3,r18
    4f1c:	1427883a 	add	r19,r2,r16
    4f20:	80015116 	blt	r16,zero,5468 <__kernel_rem_pio2f+0x608>
    4f24:	91000017 	ldw	r4,0(r18)
    4f28:	0006f4c0 	call	6f4c <__floatsisf>
    4f2c:	88800015 	stw	r2,0(r17)
    4f30:	84000044 	addi	r16,r16,1
    4f34:	8c400104 	addi	r17,r17,4
    4f38:	94800104 	addi	r18,r18,4
    4f3c:	84fff81e 	bne	r16,r19,4f20 <__kernel_rem_pio2f+0xc0>
    4f40:	d8800517 	ldw	r2,20(sp)
    4f44:	10001f16 	blt	r2,zero,4fc4 <__kernel_rem_pio2f+0x164>
    4f48:	dd800117 	ldw	r22,4(sp)
    4f4c:	d8c02004 	addi	r3,sp,128
    4f50:	dcc04804 	addi	r19,sp,288
    4f54:	b02290ba 	slli	r17,r22,2
    4f58:	b025883a 	mov	r18,r22
    4f5c:	8c000104 	addi	r16,r17,4
    4f60:	1c63883a 	add	r17,r3,r17
    4f64:	d8c00717 	ldw	r3,28(sp)
    4f68:	10e9883a 	add	r20,r2,r3
    4f6c:	d8800217 	ldw	r2,8(sp)
    4f70:	80a1883a 	add	r16,r16,r2
    4f74:	002b883a 	mov	r21,zero
    4f78:	b0000d16 	blt	r22,zero,4fb0 <__kernel_rem_pio2f+0x150>
    4f7c:	df000217 	ldw	fp,8(sp)
    4f80:	882f883a 	mov	r23,r17
    4f84:	002b883a 	mov	r21,zero
    4f88:	b9400017 	ldw	r5,0(r23)
    4f8c:	e1000017 	ldw	r4,0(fp)
    4f90:	e7000104 	addi	fp,fp,4
    4f94:	bdffff04 	addi	r23,r23,-4
    4f98:	00066480 	call	6648 <__mulsf3>
    4f9c:	a809883a 	mov	r4,r21
    4fa0:	100b883a 	mov	r5,r2
    4fa4:	00060b40 	call	60b4 <__addsf3>
    4fa8:	102b883a 	mov	r21,r2
    4fac:	e43ff61e 	bne	fp,r16,4f88 <__kernel_rem_pio2f+0x128>
    4fb0:	9d400015 	stw	r21,0(r19)
    4fb4:	94800044 	addi	r18,r18,1
    4fb8:	9cc00104 	addi	r19,r19,4
    4fbc:	8c400104 	addi	r17,r17,4
    4fc0:	953fec1e 	bne	r18,r20,4f74 <__kernel_rem_pio2f+0x114>
    4fc4:	dc400517 	ldw	r17,20(sp)
    4fc8:	d8c00717 	ldw	r3,28(sp)
    4fcc:	d9000217 	ldw	r4,8(sp)
    4fd0:	88bfffc4 	addi	r2,r17,-1
    4fd4:	180690ba 	slli	r3,r3,2
    4fd8:	883890ba 	slli	fp,r17,2
    4fdc:	100490ba 	slli	r2,r2,2
    4fe0:	243fff04 	addi	r16,r4,-4
    4fe4:	80e1883a 	add	r16,r16,r3
    4fe8:	e1000c04 	addi	r4,fp,48
    4fec:	10805004 	addi	r2,r2,320
    4ff0:	d8c00c04 	addi	r3,sp,48
    4ff4:	26c9883a 	add	r4,r4,sp
    4ff8:	10c5883a 	add	r2,r2,r3
    4ffc:	d9000415 	stw	r4,16(sp)
    5000:	dd804804 	addi	r22,sp,288
    5004:	d8800815 	stw	r2,32(sp)
    5008:	882a90ba 	slli	r21,r17,2
    500c:	d8c00c04 	addi	r3,sp,48
    5010:	a8805004 	addi	r2,r21,320
    5014:	10c5883a 	add	r2,r2,r3
    5018:	14ffec17 	ldw	r19,-80(r2)
    501c:	04401a0e 	bge	zero,r17,5088 <__kernel_rem_pio2f+0x228>
    5020:	b569883a 	add	r20,r22,r21
    5024:	1825883a 	mov	r18,r3
    5028:	014ee034 	movhi	r5,15232
    502c:	9809883a 	mov	r4,r19
    5030:	00066480 	call	6648 <__mulsf3>
    5034:	1009883a 	mov	r4,r2
    5038:	0006edc0 	call	6edc <__fixsfsi>
    503c:	1009883a 	mov	r4,r2
    5040:	0006f4c0 	call	6f4c <__floatsisf>
    5044:	0150e034 	movhi	r5,17280
    5048:	1009883a 	mov	r4,r2
    504c:	102f883a 	mov	r23,r2
    5050:	00066480 	call	6648 <__mulsf3>
    5054:	100b883a 	mov	r5,r2
    5058:	9809883a 	mov	r4,r19
    505c:	0006a480 	call	6a48 <__subsf3>
    5060:	1009883a 	mov	r4,r2
    5064:	0006edc0 	call	6edc <__fixsfsi>
    5068:	a17fff17 	ldw	r5,-4(r20)
    506c:	90800015 	stw	r2,0(r18)
    5070:	b809883a 	mov	r4,r23
    5074:	00060b40 	call	60b4 <__addsf3>
    5078:	a53fff04 	addi	r20,r20,-4
    507c:	1027883a 	mov	r19,r2
    5080:	94800104 	addi	r18,r18,4
    5084:	b53fe81e 	bne	r22,r20,5028 <__kernel_rem_pio2f+0x1c8>
    5088:	dd000317 	ldw	r20,12(sp)
    508c:	9809883a 	mov	r4,r19
    5090:	a00b883a 	mov	r5,r20
    5094:	0005d8c0 	call	5d8c <scalbnf>
    5098:	014f8034 	movhi	r5,15872
    509c:	1009883a 	mov	r4,r2
    50a0:	1025883a 	mov	r18,r2
    50a4:	00066480 	call	6648 <__mulsf3>
    50a8:	1009883a 	mov	r4,r2
    50ac:	0005c980 	call	5c98 <floorf>
    50b0:	01504034 	movhi	r5,16640
    50b4:	1009883a 	mov	r4,r2
    50b8:	00066480 	call	6648 <__mulsf3>
    50bc:	100b883a 	mov	r5,r2
    50c0:	9009883a 	mov	r4,r18
    50c4:	0006a480 	call	6a48 <__subsf3>
    50c8:	1009883a 	mov	r4,r2
    50cc:	1025883a 	mov	r18,r2
    50d0:	0006edc0 	call	6edc <__fixsfsi>
    50d4:	1009883a 	mov	r4,r2
    50d8:	1027883a 	mov	r19,r2
    50dc:	0006f4c0 	call	6f4c <__floatsisf>
    50e0:	100b883a 	mov	r5,r2
    50e4:	9009883a 	mov	r4,r18
    50e8:	0006a480 	call	6a48 <__subsf3>
    50ec:	100d883a 	mov	r6,r2
    50f0:	1025883a 	mov	r18,r2
    50f4:	a00b883a 	mov	r5,r20
    50f8:	0500570e 	bge	zero,r20,5258 <__kernel_rem_pio2f+0x3f8>
    50fc:	88bfffc4 	addi	r2,r17,-1
    5100:	100490ba 	slli	r2,r2,2
    5104:	d9000c04 	addi	r4,sp,48
    5108:	00c00204 	movi	r3,8
    510c:	10805004 	addi	r2,r2,320
    5110:	1105883a 	add	r2,r2,r4
    5114:	113fb017 	ldw	r4,-320(r2)
    5118:	1d07c83a 	sub	r3,r3,r20
    511c:	050001c4 	movi	r20,7
    5120:	a169c83a 	sub	r20,r20,r5
    5124:	20cbd83a 	sra	r5,r4,r3
    5128:	28c6983a 	sll	r3,r5,r3
    512c:	9967883a 	add	r19,r19,r5
    5130:	20c7c83a 	sub	r3,r4,r3
    5134:	1d29d83a 	sra	r20,r3,r20
    5138:	10ffb015 	stw	r3,-320(r2)
    513c:	05005016 	blt	zero,r20,5280 <__kernel_rem_pio2f+0x420>
    5140:	000b883a 	mov	r5,zero
    5144:	9009883a 	mov	r4,r18
    5148:	00065200 	call	6520 <__eqsf2>
    514c:	10009b1e 	bne	r2,zero,53bc <__kernel_rem_pio2f+0x55c>
    5150:	d8800517 	ldw	r2,20(sp)
    5154:	8cbfffc4 	addi	r18,r17,-1
    5158:	90800916 	blt	r18,r2,5180 <__kernel_rem_pio2f+0x320>
    515c:	d9400417 	ldw	r5,16(sp)
    5160:	a8800c04 	addi	r2,r21,48
    5164:	16c5883a 	add	r2,r2,sp
    5168:	0007883a 	mov	r3,zero
    516c:	113fff17 	ldw	r4,-4(r2)
    5170:	10bfff04 	addi	r2,r2,-4
    5174:	1906b03a 	or	r3,r3,r4
    5178:	117ffc1e 	bne	r2,r5,516c <__kernel_rem_pio2f+0x30c>
    517c:	1800ca1e 	bne	r3,zero,54a8 <__kernel_rem_pio2f+0x648>
    5180:	d8800817 	ldw	r2,32(sp)
    5184:	10bfb017 	ldw	r2,-320(r2)
    5188:	1000c41e 	bne	r2,zero,549c <__kernel_rem_pio2f+0x63c>
    518c:	d8800417 	ldw	r2,16(sp)
    5190:	04c00044 	movi	r19,1
    5194:	10fffe17 	ldw	r3,-8(r2)
    5198:	9cc00044 	addi	r19,r19,1
    519c:	10bfff04 	addi	r2,r2,-4
    51a0:	183ffc26 	beq	r3,zero,5194 <__kernel_rem_pio2f+0x334>
    51a4:	8cc5883a 	add	r2,r17,r19
    51a8:	8d000044 	addi	r20,r17,1
    51ac:	d8800015 	stw	r2,0(sp)
    51b0:	d8800617 	ldw	r2,24(sp)
    51b4:	b56b883a 	add	r21,r22,r21
    51b8:	88a5883a 	add	r18,r17,r2
    51bc:	d8800717 	ldw	r2,28(sp)
    51c0:	902490ba 	slli	r18,r18,2
    51c4:	1463883a 	add	r17,r2,r17
    51c8:	d8806717 	ldw	r2,412(sp)
    51cc:	882290ba 	slli	r17,r17,2
    51d0:	14a5883a 	add	r18,r2,r18
    51d4:	d8802004 	addi	r2,sp,128
    51d8:	1463883a 	add	r17,r2,r17
    51dc:	91000117 	ldw	r4,4(r18)
    51e0:	0006f4c0 	call	6f4c <__floatsisf>
    51e4:	1009883a 	mov	r4,r2
    51e8:	88800015 	stw	r2,0(r17)
    51ec:	d8800117 	ldw	r2,4(sp)
    51f0:	10001716 	blt	r2,zero,5250 <__kernel_rem_pio2f+0x3f0>
    51f4:	dcc00217 	ldw	r19,8(sp)
    51f8:	882f883a 	mov	r23,r17
    51fc:	0039883a 	mov	fp,zero
    5200:	00000206 	br	520c <__kernel_rem_pio2f+0x3ac>
    5204:	b9000017 	ldw	r4,0(r23)
    5208:	9cc00104 	addi	r19,r19,4
    520c:	99400017 	ldw	r5,0(r19)
    5210:	bdffff04 	addi	r23,r23,-4
    5214:	00066480 	call	6648 <__mulsf3>
    5218:	e009883a 	mov	r4,fp
    521c:	100b883a 	mov	r5,r2
    5220:	00060b40 	call	60b4 <__addsf3>
    5224:	1039883a 	mov	fp,r2
    5228:	9c3ff61e 	bne	r19,r16,5204 <__kernel_rem_pio2f+0x3a4>
    522c:	d8800017 	ldw	r2,0(sp)
    5230:	af000115 	stw	fp,4(r21)
    5234:	a5000044 	addi	r20,r20,1
    5238:	94800104 	addi	r18,r18,4
    523c:	8c400104 	addi	r17,r17,4
    5240:	ad400104 	addi	r21,r21,4
    5244:	153fe50e 	bge	r2,r20,51dc <__kernel_rem_pio2f+0x37c>
    5248:	1023883a 	mov	r17,r2
    524c:	003f6e06 	br	5008 <__kernel_rem_pio2f+0x1a8>
    5250:	0039883a 	mov	fp,zero
    5254:	003ff506 	br	522c <__kernel_rem_pio2f+0x3cc>
    5258:	d8800317 	ldw	r2,12(sp)
    525c:	1000871e 	bne	r2,zero,547c <__kernel_rem_pio2f+0x61c>
    5260:	88bfffc4 	addi	r2,r17,-1
    5264:	100490ba 	slli	r2,r2,2
    5268:	d8c00c04 	addi	r3,sp,48
    526c:	10805004 	addi	r2,r2,320
    5270:	10c5883a 	add	r2,r2,r3
    5274:	153fb017 	ldw	r20,-320(r2)
    5278:	a029d1fa 	srai	r20,r20,7
    527c:	053fb00e 	bge	zero,r20,5140 <__kernel_rem_pio2f+0x2e0>
    5280:	9cc00044 	addi	r19,r19,1
    5284:	04415a0e 	bge	zero,r17,57f0 <__kernel_rem_pio2f+0x990>
    5288:	d9c00c17 	ldw	r7,48(sp)
    528c:	3800781e 	bne	r7,zero,5470 <__kernel_rem_pio2f+0x610>
    5290:	88800060 	cmpeqi	r2,r17,1
    5294:	1000251e 	bne	r2,zero,532c <__kernel_rem_pio2f+0x4cc>
    5298:	d9c00d17 	ldw	r7,52(sp)
    529c:	d9000d04 	addi	r4,sp,52
    52a0:	00c00044 	movi	r3,1
    52a4:	18800044 	addi	r2,r3,1
    52a8:	21000104 	addi	r4,r4,4
    52ac:	3800061e 	bne	r7,zero,52c8 <__kernel_rem_pio2f+0x468>
    52b0:	88801e26 	beq	r17,r2,532c <__kernel_rem_pio2f+0x4cc>
    52b4:	21c00017 	ldw	r7,0(r4)
    52b8:	1007883a 	mov	r3,r2
    52bc:	18800044 	addi	r2,r3,1
    52c0:	21000104 	addi	r4,r4,4
    52c4:	383ffa26 	beq	r7,zero,52b0 <__kernel_rem_pio2f+0x450>
    52c8:	180690ba 	slli	r3,r3,2
    52cc:	01004004 	movi	r4,256
    52d0:	21cfc83a 	sub	r7,r4,r7
    52d4:	18c05004 	addi	r3,r3,320
    52d8:	d9000c04 	addi	r4,sp,48
    52dc:	1907883a 	add	r3,r3,r4
    52e0:	19ffb015 	stw	r7,-320(r3)
    52e4:	1440100e 	bge	r2,r17,5328 <__kernel_rem_pio2f+0x4c8>
    52e8:	100490ba 	slli	r2,r2,2
    52ec:	a8c00c04 	addi	r3,r21,48
    52f0:	1ecb883a 	add	r5,r3,sp
    52f4:	d9c00c04 	addi	r7,sp,48
    52f8:	10c05004 	addi	r3,r2,320
    52fc:	19c7883a 	add	r3,r3,r7
    5300:	10800c04 	addi	r2,r2,48
    5304:	18ffb017 	ldw	r3,-320(r3)
    5308:	01003fc4 	movi	r4,255
    530c:	16c5883a 	add	r2,r2,sp
    5310:	00000106 	br	5318 <__kernel_rem_pio2f+0x4b8>
    5314:	10c00017 	ldw	r3,0(r2)
    5318:	20c7c83a 	sub	r3,r4,r3
    531c:	10c00015 	stw	r3,0(r2)
    5320:	10800104 	addi	r2,r2,4
    5324:	117ffb1e 	bne	r2,r5,5314 <__kernel_rem_pio2f+0x4b4>
    5328:	01c00044 	movi	r7,1
    532c:	d8c00317 	ldw	r3,12(sp)
    5330:	00c00c0e 	bge	zero,r3,5364 <__kernel_rem_pio2f+0x504>
    5334:	18800060 	cmpeqi	r2,r3,1
    5338:	1001161e 	bne	r2,zero,5794 <__kernel_rem_pio2f+0x934>
    533c:	188000a0 	cmpeqi	r2,r3,2
    5340:	10000826 	beq	r2,zero,5364 <__kernel_rem_pio2f+0x504>
    5344:	88bfffc4 	addi	r2,r17,-1
    5348:	100490ba 	slli	r2,r2,2
    534c:	d8c00c04 	addi	r3,sp,48
    5350:	10805004 	addi	r2,r2,320
    5354:	10c5883a 	add	r2,r2,r3
    5358:	10ffb017 	ldw	r3,-320(r2)
    535c:	18c00fcc 	andi	r3,r3,63
    5360:	10ffb015 	stw	r3,-320(r2)
    5364:	a0800098 	cmpnei	r2,r20,2
    5368:	103f751e 	bne	r2,zero,5140 <__kernel_rem_pio2f+0x2e0>
    536c:	300b883a 	mov	r5,r6
    5370:	010fe034 	movhi	r4,16256
    5374:	d9c00015 	stw	r7,0(sp)
    5378:	0006a480 	call	6a48 <__subsf3>
    537c:	d9c00017 	ldw	r7,0(sp)
    5380:	1025883a 	mov	r18,r2
    5384:	383f6e26 	beq	r7,zero,5140 <__kernel_rem_pio2f+0x2e0>
    5388:	d9400317 	ldw	r5,12(sp)
    538c:	010fe034 	movhi	r4,16256
    5390:	d8800015 	stw	r2,0(sp)
    5394:	0005d8c0 	call	5d8c <scalbnf>
    5398:	d8c00017 	ldw	r3,0(sp)
    539c:	100b883a 	mov	r5,r2
    53a0:	1809883a 	mov	r4,r3
    53a4:	0006a480 	call	6a48 <__subsf3>
    53a8:	1025883a 	mov	r18,r2
    53ac:	000b883a 	mov	r5,zero
    53b0:	9009883a 	mov	r4,r18
    53b4:	00065200 	call	6520 <__eqsf2>
    53b8:	103f6526 	beq	r2,zero,5150 <__kernel_rem_pio2f+0x2f0>
    53bc:	d8800a17 	ldw	r2,40(sp)
    53c0:	d8c00b17 	ldw	r3,44(sp)
    53c4:	9009883a 	mov	r4,r18
    53c8:	dd000015 	stw	r20,0(sp)
    53cc:	10cbc83a 	sub	r5,r2,r3
    53d0:	0005d8c0 	call	5d8c <scalbnf>
    53d4:	0150e034 	movhi	r5,17280
    53d8:	1009883a 	mov	r4,r2
    53dc:	1021883a 	mov	r16,r2
    53e0:	00065900 	call	6590 <__gesf2>
    53e4:	10012816 	blt	r2,zero,5888 <__kernel_rem_pio2f+0xa28>
    53e8:	014ee034 	movhi	r5,15232
    53ec:	8009883a 	mov	r4,r16
    53f0:	00066480 	call	6648 <__mulsf3>
    53f4:	1009883a 	mov	r4,r2
    53f8:	0006edc0 	call	6edc <__fixsfsi>
    53fc:	1009883a 	mov	r4,r2
    5400:	0006f4c0 	call	6f4c <__floatsisf>
    5404:	0150e034 	movhi	r5,17280
    5408:	1009883a 	mov	r4,r2
    540c:	102d883a 	mov	r22,r2
    5410:	00066480 	call	6648 <__mulsf3>
    5414:	100b883a 	mov	r5,r2
    5418:	8009883a 	mov	r4,r16
    541c:	0006a480 	call	6a48 <__subsf3>
    5420:	1009883a 	mov	r4,r2
    5424:	8c800044 	addi	r18,r17,1
    5428:	0006edc0 	call	6edc <__fixsfsi>
    542c:	902090ba 	slli	r16,r18,2
    5430:	a8c05004 	addi	r3,r21,320
    5434:	d9000c04 	addi	r4,sp,48
    5438:	192b883a 	add	r21,r3,r4
    543c:	d9400c04 	addi	r5,sp,48
    5440:	80c05004 	addi	r3,r16,320
    5444:	b009883a 	mov	r4,r22
    5448:	a8bfb015 	stw	r2,-320(r21)
    544c:	1961883a 	add	r16,r3,r5
    5450:	0006edc0 	call	6edc <__fixsfsi>
    5454:	d8c00317 	ldw	r3,12(sp)
    5458:	80bfb015 	stw	r2,-320(r16)
    545c:	18c00204 	addi	r3,r3,8
    5460:	d8c00315 	stw	r3,12(sp)
    5464:	00002306 	br	54f4 <__kernel_rem_pio2f+0x694>
    5468:	0005883a 	mov	r2,zero
    546c:	003eaf06 	br	4f2c <__kernel_rem_pio2f+0xcc>
    5470:	00800044 	movi	r2,1
    5474:	0007883a 	mov	r3,zero
    5478:	003f9306 	br	52c8 <__kernel_rem_pio2f+0x468>
    547c:	3009883a 	mov	r4,r6
    5480:	014fc034 	movhi	r5,16128
    5484:	d9800015 	stw	r6,0(sp)
    5488:	00065900 	call	6590 <__gesf2>
    548c:	d9800017 	ldw	r6,0(sp)
    5490:	1000c90e 	bge	r2,zero,57b8 <__kernel_rem_pio2f+0x958>
    5494:	0029883a 	mov	r20,zero
    5498:	003f2906 	br	5140 <__kernel_rem_pio2f+0x2e0>
    549c:	8d000044 	addi	r20,r17,1
    54a0:	dd000015 	stw	r20,0(sp)
    54a4:	003f4206 	br	51b0 <__kernel_rem_pio2f+0x350>
    54a8:	d8c00317 	ldw	r3,12(sp)
    54ac:	900490ba 	slli	r2,r18,2
    54b0:	d9400c04 	addi	r5,sp,48
    54b4:	193ffe04 	addi	r4,r3,-8
    54b8:	10c05004 	addi	r3,r2,320
    54bc:	1947883a 	add	r3,r3,r5
    54c0:	18ffb017 	ldw	r3,-320(r3)
    54c4:	dd000015 	stw	r20,0(sp)
    54c8:	d9000315 	stw	r4,12(sp)
    54cc:	1800091e 	bne	r3,zero,54f4 <__kernel_rem_pio2f+0x694>
    54d0:	10800c04 	addi	r2,r2,48
    54d4:	16c5883a 	add	r2,r2,sp
    54d8:	2007883a 	mov	r3,r4
    54dc:	113fff17 	ldw	r4,-4(r2)
    54e0:	94bfffc4 	addi	r18,r18,-1
    54e4:	10bfff04 	addi	r2,r2,-4
    54e8:	18fffe04 	addi	r3,r3,-8
    54ec:	203ffb26 	beq	r4,zero,54dc <__kernel_rem_pio2f+0x67c>
    54f0:	d8c00315 	stw	r3,12(sp)
    54f4:	d9400317 	ldw	r5,12(sp)
    54f8:	010fe034 	movhi	r4,16256
    54fc:	0005d8c0 	call	5d8c <scalbnf>
    5500:	102b883a 	mov	r21,r2
    5504:	9000f816 	blt	r18,zero,58e8 <__kernel_rem_pio2f+0xa88>
    5508:	900490ba 	slli	r2,r18,2
    550c:	d8c04804 	addi	r3,sp,288
    5510:	18af883a 	add	r23,r3,r2
    5514:	d8800115 	stw	r2,4(sp)
    5518:	10800c04 	addi	r2,r2,48
    551c:	16f9883a 	add	fp,r2,sp
    5520:	b821883a 	mov	r16,r23
    5524:	e1000017 	ldw	r4,0(fp)
    5528:	843fff04 	addi	r16,r16,-4
    552c:	0006f4c0 	call	6f4c <__floatsisf>
    5530:	a80b883a 	mov	r5,r21
    5534:	1009883a 	mov	r4,r2
    5538:	00066480 	call	6648 <__mulsf3>
    553c:	a809883a 	mov	r4,r21
    5540:	014ee034 	movhi	r5,15232
    5544:	80800115 	stw	r2,4(r16)
    5548:	00066480 	call	6648 <__mulsf3>
    554c:	e007883a 	mov	r3,fp
    5550:	102b883a 	mov	r21,r2
    5554:	d8800c04 	addi	r2,sp,48
    5558:	e73fff04 	addi	fp,fp,-4
    555c:	10fff11e 	bne	r2,r3,5524 <__kernel_rem_pio2f+0x6c4>
    5560:	dd800517 	ldw	r22,20(sp)
    5564:	dcc00215 	stw	r19,8(sp)
    5568:	dd403404 	addi	r21,sp,208
    556c:	0021883a 	mov	r16,zero
    5570:	b0001a16 	blt	r22,zero,55dc <__kernel_rem_pio2f+0x77c>
    5574:	04c00074 	movhi	r19,1
    5578:	9cddeb04 	addi	r19,r19,30636
    557c:	b839883a 	mov	fp,r23
    5580:	010ff274 	movhi	r4,16329
    5584:	0023883a 	mov	r17,zero
    5588:	0029883a 	mov	r20,zero
    558c:	00000406 	br	55a0 <__kernel_rem_pio2f+0x740>
    5590:	e7000104 	addi	fp,fp,4
    5594:	85000a16 	blt	r16,r20,55c0 <__kernel_rem_pio2f+0x760>
    5598:	99000017 	ldw	r4,0(r19)
    559c:	9cc00104 	addi	r19,r19,4
    55a0:	e1400017 	ldw	r5,0(fp)
    55a4:	a5000044 	addi	r20,r20,1
    55a8:	00066480 	call	6648 <__mulsf3>
    55ac:	8809883a 	mov	r4,r17
    55b0:	100b883a 	mov	r5,r2
    55b4:	00060b40 	call	60b4 <__addsf3>
    55b8:	1023883a 	mov	r17,r2
    55bc:	b53ff40e 	bge	r22,r20,5590 <__kernel_rem_pio2f+0x730>
    55c0:	ac400015 	stw	r17,0(r21)
    55c4:	80800044 	addi	r2,r16,1
    55c8:	ad400104 	addi	r21,r21,4
    55cc:	bdffff04 	addi	r23,r23,-4
    55d0:	94000426 	beq	r18,r16,55e4 <__kernel_rem_pio2f+0x784>
    55d4:	1021883a 	mov	r16,r2
    55d8:	b03fe60e 	bge	r22,zero,5574 <__kernel_rem_pio2f+0x714>
    55dc:	0023883a 	mov	r17,zero
    55e0:	003ff706 	br	55c0 <__kernel_rem_pio2f+0x760>
    55e4:	d8806617 	ldw	r2,408(sp)
    55e8:	dcc00217 	ldw	r19,8(sp)
    55ec:	108000c8 	cmpgei	r2,r2,3
    55f0:	1000201e 	bne	r2,zero,5674 <__kernel_rem_pio2f+0x814>
    55f4:	d8806617 	ldw	r2,408(sp)
    55f8:	00807f16 	blt	zero,r2,57f8 <__kernel_rem_pio2f+0x998>
    55fc:	1000101e 	bne	r2,zero,5640 <__kernel_rem_pio2f+0x7e0>
    5600:	d8c00117 	ldw	r3,4(sp)
    5604:	d8803404 	addi	r2,sp,208
    5608:	0009883a 	mov	r4,zero
    560c:	10ed883a 	add	r22,r2,r3
    5610:	b1400017 	ldw	r5,0(r22)
    5614:	00060b40 	call	60b4 <__addsf3>
    5618:	b007883a 	mov	r3,r22
    561c:	1009883a 	mov	r4,r2
    5620:	d8803404 	addi	r2,sp,208
    5624:	b5bfff04 	addi	r22,r22,-4
    5628:	10fff91e 	bne	r2,r3,5610 <__kernel_rem_pio2f+0x7b0>
    562c:	d8800017 	ldw	r2,0(sp)
    5630:	10000126 	beq	r2,zero,5638 <__kernel_rem_pio2f+0x7d8>
    5634:	2120003c 	xorhi	r4,r4,32768
    5638:	d8800917 	ldw	r2,36(sp)
    563c:	11000015 	stw	r4,0(r2)
    5640:	988001cc 	andi	r2,r19,7
    5644:	dfc06517 	ldw	ra,404(sp)
    5648:	df006417 	ldw	fp,400(sp)
    564c:	ddc06317 	ldw	r23,396(sp)
    5650:	dd806217 	ldw	r22,392(sp)
    5654:	dd406117 	ldw	r21,388(sp)
    5658:	dd006017 	ldw	r20,384(sp)
    565c:	dcc05f17 	ldw	r19,380(sp)
    5660:	dc805e17 	ldw	r18,376(sp)
    5664:	dc405d17 	ldw	r17,372(sp)
    5668:	dc005c17 	ldw	r16,368(sp)
    566c:	dec06604 	addi	sp,sp,408
    5670:	f800283a 	ret
    5674:	d8806617 	ldw	r2,408(sp)
    5678:	108000e0 	cmpeqi	r2,r2,3
    567c:	103ff026 	beq	r2,zero,5640 <__kernel_rem_pio2f+0x7e0>
    5680:	9000a426 	beq	r18,zero,5914 <__kernel_rem_pio2f+0xab4>
    5684:	d8c00117 	ldw	r3,4(sp)
    5688:	d9000c04 	addi	r4,sp,48
    568c:	18805004 	addi	r2,r3,320
    5690:	1105883a 	add	r2,r2,r4
    5694:	10bfd817 	ldw	r2,-160(r2)
    5698:	d9003404 	addi	r4,sp,208
    569c:	20e1883a 	add	r16,r4,r3
    56a0:	857fff17 	ldw	r21,-4(r16)
    56a4:	1009883a 	mov	r4,r2
    56a8:	1023883a 	mov	r17,r2
    56ac:	a80b883a 	mov	r5,r21
    56b0:	00060b40 	call	60b4 <__addsf3>
    56b4:	100b883a 	mov	r5,r2
    56b8:	a809883a 	mov	r4,r21
    56bc:	1029883a 	mov	r20,r2
    56c0:	0006a480 	call	6a48 <__subsf3>
    56c4:	880b883a 	mov	r5,r17
    56c8:	1009883a 	mov	r4,r2
    56cc:	00060b40 	call	60b4 <__addsf3>
    56d0:	80800015 	stw	r2,0(r16)
    56d4:	853fff15 	stw	r20,-4(r16)
    56d8:	d8c03404 	addi	r3,sp,208
    56dc:	843fff04 	addi	r16,r16,-4
    56e0:	a005883a 	mov	r2,r20
    56e4:	1c3fee1e 	bne	r3,r16,56a0 <__kernel_rem_pio2f+0x840>
    56e8:	94800088 	cmpgei	r18,r18,2
    56ec:	90008926 	beq	r18,zero,5914 <__kernel_rem_pio2f+0xab4>
    56f0:	d8c00117 	ldw	r3,4(sp)
    56f4:	d9000c04 	addi	r4,sp,48
    56f8:	dc803504 	addi	r18,sp,212
    56fc:	18805004 	addi	r2,r3,320
    5700:	1105883a 	add	r2,r2,r4
    5704:	10bfd817 	ldw	r2,-160(r2)
    5708:	d9003404 	addi	r4,sp,208
    570c:	20ed883a 	add	r22,r4,r3
    5710:	b021883a 	mov	r16,r22
    5714:	857fff17 	ldw	r21,-4(r16)
    5718:	1009883a 	mov	r4,r2
    571c:	1023883a 	mov	r17,r2
    5720:	a80b883a 	mov	r5,r21
    5724:	00060b40 	call	60b4 <__addsf3>
    5728:	100b883a 	mov	r5,r2
    572c:	a809883a 	mov	r4,r21
    5730:	1029883a 	mov	r20,r2
    5734:	0006a480 	call	6a48 <__subsf3>
    5738:	880b883a 	mov	r5,r17
    573c:	1009883a 	mov	r4,r2
    5740:	00060b40 	call	60b4 <__addsf3>
    5744:	80800015 	stw	r2,0(r16)
    5748:	853fff15 	stw	r20,-4(r16)
    574c:	843fff04 	addi	r16,r16,-4
    5750:	a005883a 	mov	r2,r20
    5754:	943fef1e 	bne	r18,r16,5714 <__kernel_rem_pio2f+0x8b4>
    5758:	0009883a 	mov	r4,zero
    575c:	b1400017 	ldw	r5,0(r22)
    5760:	b5bfff04 	addi	r22,r22,-4
    5764:	00060b40 	call	60b4 <__addsf3>
    5768:	1009883a 	mov	r4,r2
    576c:	95bffb1e 	bne	r18,r22,575c <__kernel_rem_pio2f+0x8fc>
    5770:	d9400017 	ldw	r5,0(sp)
    5774:	d8c03417 	ldw	r3,208(sp)
    5778:	d8803517 	ldw	r2,212(sp)
    577c:	28004a1e 	bne	r5,zero,58a8 <__kernel_rem_pio2f+0xa48>
    5780:	d9400917 	ldw	r5,36(sp)
    5784:	28c00015 	stw	r3,0(r5)
    5788:	28800115 	stw	r2,4(r5)
    578c:	29000215 	stw	r4,8(r5)
    5790:	003fab06 	br	5640 <__kernel_rem_pio2f+0x7e0>
    5794:	88bfffc4 	addi	r2,r17,-1
    5798:	100490ba 	slli	r2,r2,2
    579c:	d8c00c04 	addi	r3,sp,48
    57a0:	10805004 	addi	r2,r2,320
    57a4:	10c5883a 	add	r2,r2,r3
    57a8:	10ffb017 	ldw	r3,-320(r2)
    57ac:	18c01fcc 	andi	r3,r3,127
    57b0:	10ffb015 	stw	r3,-320(r2)
    57b4:	003eeb06 	br	5364 <__kernel_rem_pio2f+0x504>
    57b8:	9cc00044 	addi	r19,r19,1
    57bc:	05000084 	movi	r20,2
    57c0:	047eb116 	blt	zero,r17,5288 <__kernel_rem_pio2f+0x428>
    57c4:	300b883a 	mov	r5,r6
    57c8:	010fe034 	movhi	r4,16256
    57cc:	0006a480 	call	6a48 <__subsf3>
    57d0:	1025883a 	mov	r18,r2
    57d4:	003e5a06 	br	5140 <__kernel_rem_pio2f+0x2e0>
    57d8:	00800204 	movi	r2,8
    57dc:	d8800a15 	stw	r2,40(sp)
    57e0:	d8000615 	stw	zero,24(sp)
    57e4:	003dbe06 	br	4ee0 <__kernel_rem_pio2f+0x80>
    57e8:	30800104 	addi	r2,r6,4
    57ec:	003db706 	br	4ecc <__kernel_rem_pio2f+0x6c>
    57f0:	000f883a 	mov	r7,zero
    57f4:	003ecd06 	br	532c <__kernel_rem_pio2f+0x4cc>
    57f8:	d8c00117 	ldw	r3,4(sp)
    57fc:	d8803404 	addi	r2,sp,208
    5800:	10ed883a 	add	r22,r2,r3
    5804:	0005883a 	mov	r2,zero
    5808:	1009883a 	mov	r4,r2
    580c:	b1400017 	ldw	r5,0(r22)
    5810:	00060b40 	call	60b4 <__addsf3>
    5814:	b007883a 	mov	r3,r22
    5818:	1009883a 	mov	r4,r2
    581c:	d8803404 	addi	r2,sp,208
    5820:	b5bfff04 	addi	r22,r22,-4
    5824:	10fff91e 	bne	r2,r3,580c <__kernel_rem_pio2f+0x9ac>
    5828:	2005883a 	mov	r2,r4
    582c:	d8c00017 	ldw	r3,0(sp)
    5830:	d9003417 	ldw	r4,208(sp)
    5834:	1800241e 	bne	r3,zero,58c8 <__kernel_rem_pio2f+0xa68>
    5838:	d8c00917 	ldw	r3,36(sp)
    583c:	100b883a 	mov	r5,r2
    5840:	18800015 	stw	r2,0(r3)
    5844:	0006a480 	call	6a48 <__subsf3>
    5848:	1009883a 	mov	r4,r2
    584c:	04800b0e 	bge	zero,r18,587c <__kernel_rem_pio2f+0xa1c>
    5850:	dc403504 	addi	r17,sp,212
    5854:	04000044 	movi	r16,1
    5858:	89400017 	ldw	r5,0(r17)
    585c:	84000044 	addi	r16,r16,1
    5860:	8c400104 	addi	r17,r17,4
    5864:	00060b40 	call	60b4 <__addsf3>
    5868:	1009883a 	mov	r4,r2
    586c:	943ffa0e 	bge	r18,r16,5858 <__kernel_rem_pio2f+0x9f8>
    5870:	d8800017 	ldw	r2,0(sp)
    5874:	10000126 	beq	r2,zero,587c <__kernel_rem_pio2f+0xa1c>
    5878:	2120003c 	xorhi	r4,r4,32768
    587c:	d8800917 	ldw	r2,36(sp)
    5880:	11000115 	stw	r4,4(r2)
    5884:	003f6e06 	br	5640 <__kernel_rem_pio2f+0x7e0>
    5888:	8009883a 	mov	r4,r16
    588c:	0006edc0 	call	6edc <__fixsfsi>
    5890:	a8c05004 	addi	r3,r21,320
    5894:	d9000c04 	addi	r4,sp,48
    5898:	192b883a 	add	r21,r3,r4
    589c:	a8bfb015 	stw	r2,-320(r21)
    58a0:	8825883a 	mov	r18,r17
    58a4:	003f1306 	br	54f4 <__kernel_rem_pio2f+0x694>
    58a8:	d9400917 	ldw	r5,36(sp)
    58ac:	18e0003c 	xorhi	r3,r3,32768
    58b0:	10a0003c 	xorhi	r2,r2,32768
    58b4:	2120003c 	xorhi	r4,r4,32768
    58b8:	28c00015 	stw	r3,0(r5)
    58bc:	28800115 	stw	r2,4(r5)
    58c0:	29000215 	stw	r4,8(r5)
    58c4:	003f5e06 	br	5640 <__kernel_rem_pio2f+0x7e0>
    58c8:	d9400917 	ldw	r5,36(sp)
    58cc:	10e0003c 	xorhi	r3,r2,32768
    58d0:	28c00015 	stw	r3,0(r5)
    58d4:	100b883a 	mov	r5,r2
    58d8:	0006a480 	call	6a48 <__subsf3>
    58dc:	1009883a 	mov	r4,r2
    58e0:	04bfdb16 	blt	zero,r18,5850 <__kernel_rem_pio2f+0x9f0>
    58e4:	003fe406 	br	5878 <__kernel_rem_pio2f+0xa18>
    58e8:	d8806617 	ldw	r2,408(sp)
    58ec:	108000c8 	cmpgei	r2,r2,3
    58f0:	1000051e 	bne	r2,zero,5908 <__kernel_rem_pio2f+0xaa8>
    58f4:	d8806617 	ldw	r2,408(sp)
    58f8:	00800816 	blt	zero,r2,591c <__kernel_rem_pio2f+0xabc>
    58fc:	103f501e 	bne	r2,zero,5640 <__kernel_rem_pio2f+0x7e0>
    5900:	0009883a 	mov	r4,zero
    5904:	003f4906 	br	562c <__kernel_rem_pio2f+0x7cc>
    5908:	d8806617 	ldw	r2,408(sp)
    590c:	108000e0 	cmpeqi	r2,r2,3
    5910:	103f4b26 	beq	r2,zero,5640 <__kernel_rem_pio2f+0x7e0>
    5914:	0009883a 	mov	r4,zero
    5918:	003f9506 	br	5770 <__kernel_rem_pio2f+0x910>
    591c:	0005883a 	mov	r2,zero
    5920:	003fc206 	br	582c <__kernel_rem_pio2f+0x9cc>

00005924 <__kernel_sinf>:
    5924:	00a00034 	movhi	r2,32768
    5928:	defff904 	addi	sp,sp,-28
    592c:	10bfffc4 	addi	r2,r2,-1
    5930:	dd000415 	stw	r20,16(sp)
    5934:	dcc00315 	stw	r19,12(sp)
    5938:	dc000015 	stw	r16,0(sp)
    593c:	dfc00615 	stw	ra,24(sp)
    5940:	dd400515 	stw	r21,20(sp)
    5944:	dc800215 	stw	r18,8(sp)
    5948:	dc400115 	stw	r17,4(sp)
    594c:	1104703a 	and	r2,r2,r4
    5950:	00cc8034 	movhi	r3,12800
    5954:	2021883a 	mov	r16,r4
    5958:	2829883a 	mov	r20,r5
    595c:	3027883a 	mov	r19,r6
    5960:	10c0020e 	bge	r2,r3,596c <__kernel_sinf+0x48>
    5964:	0006edc0 	call	6edc <__fixsfsi>
    5968:	10005926 	beq	r2,zero,5ad0 <__kernel_sinf+0x1ac>
    596c:	800b883a 	mov	r5,r16
    5970:	8009883a 	mov	r4,r16
    5974:	00066480 	call	6648 <__mulsf3>
    5978:	100b883a 	mov	r5,r2
    597c:	8009883a 	mov	r4,r16
    5980:	1023883a 	mov	r17,r2
    5984:	00066480 	call	6648 <__mulsf3>
    5988:	014bcbf4 	movhi	r5,12079
    598c:	297274c4 	addi	r5,r5,-13869
    5990:	8809883a 	mov	r4,r17
    5994:	1025883a 	mov	r18,r2
    5998:	00066480 	call	6648 <__mulsf3>
    599c:	014cb5f4 	movhi	r5,13015
    59a0:	294bcd04 	addi	r5,r5,12084
    59a4:	1009883a 	mov	r4,r2
    59a8:	0006a480 	call	6a48 <__subsf3>
    59ac:	880b883a 	mov	r5,r17
    59b0:	1009883a 	mov	r4,r2
    59b4:	00066480 	call	6648 <__mulsf3>
    59b8:	014d8e74 	movhi	r5,13881
    59bc:	297bc6c4 	addi	r5,r5,-4325
    59c0:	1009883a 	mov	r4,r2
    59c4:	00060b40 	call	60b4 <__addsf3>
    59c8:	880b883a 	mov	r5,r17
    59cc:	1009883a 	mov	r4,r2
    59d0:	00066480 	call	6648 <__mulsf3>
    59d4:	014e5434 	movhi	r5,14672
    59d8:	29434044 	addi	r5,r5,3329
    59dc:	1009883a 	mov	r4,r2
    59e0:	0006a480 	call	6a48 <__subsf3>
    59e4:	880b883a 	mov	r5,r17
    59e8:	1009883a 	mov	r4,r2
    59ec:	00066480 	call	6648 <__mulsf3>
    59f0:	014f0274 	movhi	r5,15369
    59f4:	29622244 	addi	r5,r5,-30583
    59f8:	1009883a 	mov	r4,r2
    59fc:	00060b40 	call	60b4 <__addsf3>
    5a00:	102b883a 	mov	r21,r2
    5a04:	98002426 	beq	r19,zero,5a98 <__kernel_sinf+0x174>
    5a08:	014fc034 	movhi	r5,16128
    5a0c:	a009883a 	mov	r4,r20
    5a10:	00066480 	call	6648 <__mulsf3>
    5a14:	a80b883a 	mov	r5,r21
    5a18:	9009883a 	mov	r4,r18
    5a1c:	1027883a 	mov	r19,r2
    5a20:	00066480 	call	6648 <__mulsf3>
    5a24:	100b883a 	mov	r5,r2
    5a28:	9809883a 	mov	r4,r19
    5a2c:	0006a480 	call	6a48 <__subsf3>
    5a30:	880b883a 	mov	r5,r17
    5a34:	1009883a 	mov	r4,r2
    5a38:	00066480 	call	6648 <__mulsf3>
    5a3c:	a00b883a 	mov	r5,r20
    5a40:	1009883a 	mov	r4,r2
    5a44:	0006a480 	call	6a48 <__subsf3>
    5a48:	014f8af4 	movhi	r5,15915
    5a4c:	296aaac4 	addi	r5,r5,-21845
    5a50:	9009883a 	mov	r4,r18
    5a54:	1023883a 	mov	r17,r2
    5a58:	00066480 	call	6648 <__mulsf3>
    5a5c:	100b883a 	mov	r5,r2
    5a60:	8809883a 	mov	r4,r17
    5a64:	00060b40 	call	60b4 <__addsf3>
    5a68:	100b883a 	mov	r5,r2
    5a6c:	8009883a 	mov	r4,r16
    5a70:	0006a480 	call	6a48 <__subsf3>
    5a74:	dfc00617 	ldw	ra,24(sp)
    5a78:	dd400517 	ldw	r21,20(sp)
    5a7c:	dd000417 	ldw	r20,16(sp)
    5a80:	dcc00317 	ldw	r19,12(sp)
    5a84:	dc800217 	ldw	r18,8(sp)
    5a88:	dc400117 	ldw	r17,4(sp)
    5a8c:	dc000017 	ldw	r16,0(sp)
    5a90:	dec00704 	addi	sp,sp,28
    5a94:	f800283a 	ret
    5a98:	8809883a 	mov	r4,r17
    5a9c:	100b883a 	mov	r5,r2
    5aa0:	00066480 	call	6648 <__mulsf3>
    5aa4:	014f8af4 	movhi	r5,15915
    5aa8:	296aaac4 	addi	r5,r5,-21845
    5aac:	1009883a 	mov	r4,r2
    5ab0:	0006a480 	call	6a48 <__subsf3>
    5ab4:	900b883a 	mov	r5,r18
    5ab8:	1009883a 	mov	r4,r2
    5abc:	00066480 	call	6648 <__mulsf3>
    5ac0:	800b883a 	mov	r5,r16
    5ac4:	1009883a 	mov	r4,r2
    5ac8:	00060b40 	call	60b4 <__addsf3>
    5acc:	003fe906 	br	5a74 <__kernel_sinf+0x150>
    5ad0:	8005883a 	mov	r2,r16
    5ad4:	003fe706 	br	5a74 <__kernel_sinf+0x150>

00005ad8 <scalbn>:
    5ad8:	2807d53a 	srai	r3,r5,20
    5adc:	defffe04 	addi	sp,sp,-8
    5ae0:	dc000015 	stw	r16,0(sp)
    5ae4:	dfc00115 	stw	ra,4(sp)
    5ae8:	18c1ffcc 	andi	r3,r3,2047
    5aec:	280f883a 	mov	r7,r5
    5af0:	2005883a 	mov	r2,r4
    5af4:	3021883a 	mov	r16,r6
    5af8:	1800241e 	bne	r3,zero,5b8c <scalbn+0xb4>
    5afc:	00e00034 	movhi	r3,32768
    5b00:	18ffffc4 	addi	r3,r3,-1
    5b04:	28c6703a 	and	r3,r5,r3
    5b08:	1906b03a 	or	r3,r3,r4
    5b0c:	18003626 	beq	r3,zero,5be8 <scalbn+0x110>
    5b10:	000d883a 	mov	r6,zero
    5b14:	01d0d434 	movhi	r7,17232
    5b18:	00084c40 	call	84c4 <__muldf3>
    5b1c:	01bffff4 	movhi	r6,65535
    5b20:	318f2c04 	addi	r6,r6,15536
    5b24:	1009883a 	mov	r4,r2
    5b28:	180f883a 	mov	r7,r3
    5b2c:	81804d16 	blt	r16,r6,5c64 <scalbn+0x18c>
    5b30:	1807d53a 	srai	r3,r3,20
    5b34:	3811883a 	mov	r8,r7
    5b38:	18c1ffcc 	andi	r3,r3,2047
    5b3c:	18fff284 	addi	r3,r3,-54
    5b40:	80c7883a 	add	r3,r16,r3
    5b44:	1901ffd0 	cmplti	r4,r3,2047
    5b48:	20001926 	beq	r4,zero,5bb0 <scalbn+0xd8>
    5b4c:	00c03c16 	blt	zero,r3,5c40 <scalbn+0x168>
    5b50:	193ff2c8 	cmpgei	r4,r3,-53
    5b54:	20002c1e 	bne	r4,zero,5c08 <scalbn+0x130>
    5b58:	00b0d414 	movui	r2,50000
    5b5c:	14001416 	blt	r2,r16,5bb0 <scalbn+0xd8>
    5b60:	0130be74 	movhi	r4,49913
    5b64:	01406974 	movhi	r5,421
    5b68:	213cd644 	addi	r4,r4,-3239
    5b6c:	295b87c4 	addi	r5,r5,28191
    5b70:	38004616 	blt	r7,zero,5c8c <scalbn+0x1b4>
    5b74:	01b0be74 	movhi	r6,49913
    5b78:	01c06974 	movhi	r7,421
    5b7c:	31bcd644 	addi	r6,r6,-3239
    5b80:	39db87c4 	addi	r7,r7,28191
    5b84:	00084c40 	call	84c4 <__muldf3>
    5b88:	00001306 	br	5bd8 <scalbn+0x100>
    5b8c:	1981ffd8 	cmpnei	r6,r3,2047
    5b90:	2811883a 	mov	r8,r5
    5b94:	303fea1e 	bne	r6,zero,5b40 <scalbn+0x68>
    5b98:	200d883a 	mov	r6,r4
    5b9c:	00070700 	call	7070 <__adddf3>
    5ba0:	dfc00117 	ldw	ra,4(sp)
    5ba4:	dc000017 	ldw	r16,0(sp)
    5ba8:	dec00204 	addi	sp,sp,8
    5bac:	f800283a 	ret
    5bb0:	01220034 	movhi	r4,34816
    5bb4:	015f8e34 	movhi	r5,32312
    5bb8:	211d6704 	addi	r4,r4,30108
    5bbc:	29790f04 	addi	r5,r5,-7108
    5bc0:	38000e16 	blt	r7,zero,5bfc <scalbn+0x124>
    5bc4:	01a20034 	movhi	r6,34816
    5bc8:	01df8e34 	movhi	r7,32312
    5bcc:	319d6704 	addi	r6,r6,30108
    5bd0:	39f90f04 	addi	r7,r7,-7108
    5bd4:	00084c40 	call	84c4 <__muldf3>
    5bd8:	dfc00117 	ldw	ra,4(sp)
    5bdc:	dc000017 	ldw	r16,0(sp)
    5be0:	dec00204 	addi	sp,sp,8
    5be4:	f800283a 	ret
    5be8:	2807883a 	mov	r3,r5
    5bec:	dfc00117 	ldw	ra,4(sp)
    5bf0:	dc000017 	ldw	r16,0(sp)
    5bf4:	dec00204 	addi	sp,sp,8
    5bf8:	f800283a 	ret
    5bfc:	017f8e34 	movhi	r5,65080
    5c00:	29790f04 	addi	r5,r5,-7108
    5c04:	003fef06 	br	5bc4 <scalbn+0xec>
    5c08:	18c00d84 	addi	r3,r3,54
    5c0c:	1806953a 	slli	r3,r3,20
    5c10:	01600434 	movhi	r5,32784
    5c14:	297fffc4 	addi	r5,r5,-1
    5c18:	414a703a 	and	r5,r8,r5
    5c1c:	000d883a 	mov	r6,zero
    5c20:	01cf2434 	movhi	r7,15504
    5c24:	1009883a 	mov	r4,r2
    5c28:	194ab03a 	or	r5,r3,r5
    5c2c:	00084c40 	call	84c4 <__muldf3>
    5c30:	dfc00117 	ldw	ra,4(sp)
    5c34:	dc000017 	ldw	r16,0(sp)
    5c38:	dec00204 	addi	sp,sp,8
    5c3c:	f800283a 	ret
    5c40:	1806953a 	slli	r3,r3,20
    5c44:	01e00434 	movhi	r7,32784
    5c48:	39ffffc4 	addi	r7,r7,-1
    5c4c:	41ce703a 	and	r7,r8,r7
    5c50:	38c6b03a 	or	r3,r7,r3
    5c54:	dfc00117 	ldw	ra,4(sp)
    5c58:	dc000017 	ldw	r16,0(sp)
    5c5c:	dec00204 	addi	sp,sp,8
    5c60:	f800283a 	ret
    5c64:	01b0be74 	movhi	r6,49913
    5c68:	01c06974 	movhi	r7,421
    5c6c:	31bcd644 	addi	r6,r6,-3239
    5c70:	39db87c4 	addi	r7,r7,28191
    5c74:	180b883a 	mov	r5,r3
    5c78:	00084c40 	call	84c4 <__muldf3>
    5c7c:	dfc00117 	ldw	ra,4(sp)
    5c80:	dc000017 	ldw	r16,0(sp)
    5c84:	dec00204 	addi	sp,sp,8
    5c88:	f800283a 	ret
    5c8c:	01606974 	movhi	r5,33189
    5c90:	295b87c4 	addi	r5,r5,28191
    5c94:	003fb706 	br	5b74 <scalbn+0x9c>

00005c98 <floorf>:
    5c98:	00a00034 	movhi	r2,32768
    5c9c:	defffb04 	addi	sp,sp,-20
    5ca0:	10bfffc4 	addi	r2,r2,-1
    5ca4:	dc400115 	stw	r17,4(sp)
    5ca8:	1122703a 	and	r17,r2,r4
    5cac:	dc800215 	stw	r18,8(sp)
    5cb0:	8824d5fa 	srli	r18,r17,23
    5cb4:	dc000015 	stw	r16,0(sp)
    5cb8:	dfc00415 	stw	ra,16(sp)
    5cbc:	94bfe044 	addi	r18,r18,-127
    5cc0:	dcc00315 	stw	r19,12(sp)
    5cc4:	908005c8 	cmpgei	r2,r18,23
    5cc8:	2021883a 	mov	r16,r4
    5ccc:	1000271e 	bne	r2,zero,5d6c <floorf+0xd4>
    5cd0:	2027883a 	mov	r19,r4
    5cd4:	90001316 	blt	r18,zero,5d24 <floorf+0x8c>
    5cd8:	00802034 	movhi	r2,128
    5cdc:	10bfffc4 	addi	r2,r2,-1
    5ce0:	14a3d83a 	sra	r17,r2,r18
    5ce4:	8904703a 	and	r2,r17,r4
    5ce8:	10001826 	beq	r2,zero,5d4c <floorf+0xb4>
    5cec:	015c52b4 	movhi	r5,29002
    5cf0:	297cb284 	addi	r5,r5,-3382
    5cf4:	00060b40 	call	60b4 <__addsf3>
    5cf8:	000b883a 	mov	r5,zero
    5cfc:	1009883a 	mov	r4,r2
    5d00:	00065900 	call	6590 <__gesf2>
    5d04:	0080110e 	bge	zero,r2,5d4c <floorf+0xb4>
    5d08:	8000030e 	bge	r16,zero,5d18 <floorf+0x80>
    5d0c:	00802034 	movhi	r2,128
    5d10:	1485d83a 	sra	r2,r2,r18
    5d14:	1427883a 	add	r19,r2,r16
    5d18:	0460303a 	nor	r16,zero,r17
    5d1c:	84c4703a 	and	r2,r16,r19
    5d20:	00000b06 	br	5d50 <floorf+0xb8>
    5d24:	015c52b4 	movhi	r5,29002
    5d28:	297cb284 	addi	r5,r5,-3382
    5d2c:	00060b40 	call	60b4 <__addsf3>
    5d30:	000b883a 	mov	r5,zero
    5d34:	1009883a 	mov	r4,r2
    5d38:	00065900 	call	6590 <__gesf2>
    5d3c:	0080030e 	bge	zero,r2,5d4c <floorf+0xb4>
    5d40:	80000f16 	blt	r16,zero,5d80 <floorf+0xe8>
    5d44:	0005883a 	mov	r2,zero
    5d48:	00000106 	br	5d50 <floorf+0xb8>
    5d4c:	8005883a 	mov	r2,r16
    5d50:	dfc00417 	ldw	ra,16(sp)
    5d54:	dcc00317 	ldw	r19,12(sp)
    5d58:	dc800217 	ldw	r18,8(sp)
    5d5c:	dc400117 	ldw	r17,4(sp)
    5d60:	dc000017 	ldw	r16,0(sp)
    5d64:	dec00504 	addi	sp,sp,20
    5d68:	f800283a 	ret
    5d6c:	009fe034 	movhi	r2,32640
    5d70:	88bff636 	bltu	r17,r2,5d4c <floorf+0xb4>
    5d74:	200b883a 	mov	r5,r4
    5d78:	00060b40 	call	60b4 <__addsf3>
    5d7c:	003ff406 	br	5d50 <floorf+0xb8>
    5d80:	883ff226 	beq	r17,zero,5d4c <floorf+0xb4>
    5d84:	00afe034 	movhi	r2,49024
    5d88:	003ff106 	br	5d50 <floorf+0xb8>

00005d8c <scalbnf>:
    5d8c:	00e00034 	movhi	r3,32768
    5d90:	18ffffc4 	addi	r3,r3,-1
    5d94:	1906703a 	and	r3,r3,r4
    5d98:	2005883a 	mov	r2,r4
    5d9c:	18002626 	beq	r3,zero,5e38 <scalbnf+0xac>
    5da0:	defffe04 	addi	sp,sp,-8
    5da4:	dc000015 	stw	r16,0(sp)
    5da8:	dfc00115 	stw	ra,4(sp)
    5dac:	019fe034 	movhi	r6,32640
    5db0:	2821883a 	mov	r16,r5
    5db4:	200b883a 	mov	r5,r4
    5db8:	19801a2e 	bgeu	r3,r6,5e24 <scalbnf+0x98>
    5dbc:	215fe02c 	andhi	r5,r4,32640
    5dc0:	28001e1e 	bne	r5,zero,5e3c <scalbnf+0xb0>
    5dc4:	01530034 	movhi	r5,19456
    5dc8:	00066480 	call	6648 <__mulsf3>
    5dcc:	00fffff4 	movhi	r3,65535
    5dd0:	18cf2c04 	addi	r3,r3,15536
    5dd4:	1009883a 	mov	r4,r2
    5dd8:	80c02616 	blt	r16,r3,5e74 <scalbnf+0xe8>
    5ddc:	1007d5fa 	srai	r3,r2,23
    5de0:	18c03fcc 	andi	r3,r3,255
    5de4:	18fff9c4 	addi	r3,r3,-25
    5de8:	1c07883a 	add	r3,r3,r16
    5dec:	19403fd0 	cmplti	r5,r3,255
    5df0:	2800161e 	bne	r5,zero,5e4c <scalbnf+0xc0>
    5df4:	011c52b4 	movhi	r4,29002
    5df8:	213cb284 	addi	r4,r4,-3382
    5dfc:	1000020e 	bge	r2,zero,5e08 <scalbnf+0x7c>
    5e00:	013c52b4 	movhi	r4,61770
    5e04:	213cb284 	addi	r4,r4,-3382
    5e08:	015c52b4 	movhi	r5,29002
    5e0c:	297cb284 	addi	r5,r5,-3382
    5e10:	00066480 	call	6648 <__mulsf3>
    5e14:	dfc00117 	ldw	ra,4(sp)
    5e18:	dc000017 	ldw	r16,0(sp)
    5e1c:	dec00204 	addi	sp,sp,8
    5e20:	f800283a 	ret
    5e24:	00060b40 	call	60b4 <__addsf3>
    5e28:	dfc00117 	ldw	ra,4(sp)
    5e2c:	dc000017 	ldw	r16,0(sp)
    5e30:	dec00204 	addi	sp,sp,8
    5e34:	f800283a 	ret
    5e38:	f800283a 	ret
    5e3c:	1806d5fa 	srli	r3,r3,23
    5e40:	1c07883a 	add	r3,r3,r16
    5e44:	19403fd0 	cmplti	r5,r3,255
    5e48:	283fea26 	beq	r5,zero,5df4 <scalbnf+0x68>
    5e4c:	00c01016 	blt	zero,r3,5e90 <scalbnf+0x104>
    5e50:	197ffa88 	cmpgei	r5,r3,-22
    5e54:	2800171e 	bne	r5,zero,5eb4 <scalbnf+0x128>
    5e58:	00f0d414 	movui	r3,50000
    5e5c:	1c3fe516 	blt	r3,r16,5df4 <scalbnf+0x68>
    5e60:	010368b4 	movhi	r4,3490
    5e64:	21109804 	addi	r4,r4,16992
    5e68:	1000020e 	bge	r2,zero,5e74 <scalbnf+0xe8>
    5e6c:	012368b4 	movhi	r4,36258
    5e70:	21109804 	addi	r4,r4,16992
    5e74:	014368b4 	movhi	r5,3490
    5e78:	29509804 	addi	r5,r5,16992
    5e7c:	00066480 	call	6648 <__mulsf3>
    5e80:	dfc00117 	ldw	ra,4(sp)
    5e84:	dc000017 	ldw	r16,0(sp)
    5e88:	dec00204 	addi	sp,sp,8
    5e8c:	f800283a 	ret
    5e90:	180695fa 	slli	r3,r3,23
    5e94:	00a02034 	movhi	r2,32896
    5e98:	10bfffc4 	addi	r2,r2,-1
    5e9c:	2084703a 	and	r2,r4,r2
    5ea0:	10c4b03a 	or	r2,r2,r3
    5ea4:	dfc00117 	ldw	ra,4(sp)
    5ea8:	dc000017 	ldw	r16,0(sp)
    5eac:	dec00204 	addi	sp,sp,8
    5eb0:	f800283a 	ret
    5eb4:	18c00644 	addi	r3,r3,25
    5eb8:	180695fa 	slli	r3,r3,23
    5ebc:	00a02034 	movhi	r2,32896
    5ec0:	10bfffc4 	addi	r2,r2,-1
    5ec4:	2088703a 	and	r4,r4,r2
    5ec8:	014cc034 	movhi	r5,13056
    5ecc:	1908b03a 	or	r4,r3,r4
    5ed0:	00066480 	call	6648 <__mulsf3>
    5ed4:	003fd406 	br	5e28 <scalbnf+0x9c>

00005ed8 <__divsi3>:
    5ed8:	20001a16 	blt	r4,zero,5f44 <__divsi3+0x6c>
    5edc:	000f883a 	mov	r7,zero
    5ee0:	2800020e 	bge	r5,zero,5eec <__divsi3+0x14>
    5ee4:	014bc83a 	sub	r5,zero,r5
    5ee8:	39c0005c 	xori	r7,r7,1
    5eec:	200d883a 	mov	r6,r4
    5ef0:	00c00044 	movi	r3,1
    5ef4:	2900092e 	bgeu	r5,r4,5f1c <__divsi3+0x44>
    5ef8:	00800804 	movi	r2,32
    5efc:	00c00044 	movi	r3,1
    5f00:	00000106 	br	5f08 <__divsi3+0x30>
    5f04:	10001226 	beq	r2,zero,5f50 <__divsi3+0x78>
    5f08:	294b883a 	add	r5,r5,r5
    5f0c:	10bfffc4 	addi	r2,r2,-1
    5f10:	18c7883a 	add	r3,r3,r3
    5f14:	293ffb36 	bltu	r5,r4,5f04 <__divsi3+0x2c>
    5f18:	18000d26 	beq	r3,zero,5f50 <__divsi3+0x78>
    5f1c:	0005883a 	mov	r2,zero
    5f20:	31400236 	bltu	r6,r5,5f2c <__divsi3+0x54>
    5f24:	314dc83a 	sub	r6,r6,r5
    5f28:	10c4b03a 	or	r2,r2,r3
    5f2c:	1806d07a 	srli	r3,r3,1
    5f30:	280ad07a 	srli	r5,r5,1
    5f34:	183ffa1e 	bne	r3,zero,5f20 <__divsi3+0x48>
    5f38:	38000126 	beq	r7,zero,5f40 <__divsi3+0x68>
    5f3c:	0085c83a 	sub	r2,zero,r2
    5f40:	f800283a 	ret
    5f44:	0109c83a 	sub	r4,zero,r4
    5f48:	01c00044 	movi	r7,1
    5f4c:	003fe406 	br	5ee0 <__divsi3+0x8>
    5f50:	0005883a 	mov	r2,zero
    5f54:	003ff806 	br	5f38 <__divsi3+0x60>

00005f58 <__modsi3>:
    5f58:	20001916 	blt	r4,zero,5fc0 <__modsi3+0x68>
    5f5c:	000f883a 	mov	r7,zero
    5f60:	2005883a 	mov	r2,r4
    5f64:	2800010e 	bge	r5,zero,5f6c <__modsi3+0x14>
    5f68:	014bc83a 	sub	r5,zero,r5
    5f6c:	00c00044 	movi	r3,1
    5f70:	2900092e 	bgeu	r5,r4,5f98 <__modsi3+0x40>
    5f74:	01800804 	movi	r6,32
    5f78:	00c00044 	movi	r3,1
    5f7c:	00000106 	br	5f84 <__modsi3+0x2c>
    5f80:	30000d26 	beq	r6,zero,5fb8 <__modsi3+0x60>
    5f84:	294b883a 	add	r5,r5,r5
    5f88:	31bfffc4 	addi	r6,r6,-1
    5f8c:	18c7883a 	add	r3,r3,r3
    5f90:	293ffb36 	bltu	r5,r4,5f80 <__modsi3+0x28>
    5f94:	18000826 	beq	r3,zero,5fb8 <__modsi3+0x60>
    5f98:	1806d07a 	srli	r3,r3,1
    5f9c:	11400136 	bltu	r2,r5,5fa4 <__modsi3+0x4c>
    5fa0:	1145c83a 	sub	r2,r2,r5
    5fa4:	280ad07a 	srli	r5,r5,1
    5fa8:	183ffb1e 	bne	r3,zero,5f98 <__modsi3+0x40>
    5fac:	38000126 	beq	r7,zero,5fb4 <__modsi3+0x5c>
    5fb0:	0085c83a 	sub	r2,zero,r2
    5fb4:	f800283a 	ret
    5fb8:	2005883a 	mov	r2,r4
    5fbc:	003ffb06 	br	5fac <__modsi3+0x54>
    5fc0:	0109c83a 	sub	r4,zero,r4
    5fc4:	01c00044 	movi	r7,1
    5fc8:	003fe506 	br	5f60 <__modsi3+0x8>

00005fcc <__udivsi3>:
    5fcc:	200d883a 	mov	r6,r4
    5fd0:	2900152e 	bgeu	r5,r4,6028 <__udivsi3+0x5c>
    5fd4:	28001416 	blt	r5,zero,6028 <__udivsi3+0x5c>
    5fd8:	00800804 	movi	r2,32
    5fdc:	00c00044 	movi	r3,1
    5fe0:	00000206 	br	5fec <__udivsi3+0x20>
    5fe4:	10000e26 	beq	r2,zero,6020 <__udivsi3+0x54>
    5fe8:	28000516 	blt	r5,zero,6000 <__udivsi3+0x34>
    5fec:	294b883a 	add	r5,r5,r5
    5ff0:	10bfffc4 	addi	r2,r2,-1
    5ff4:	18c7883a 	add	r3,r3,r3
    5ff8:	293ffa36 	bltu	r5,r4,5fe4 <__udivsi3+0x18>
    5ffc:	18000826 	beq	r3,zero,6020 <__udivsi3+0x54>
    6000:	0005883a 	mov	r2,zero
    6004:	31400236 	bltu	r6,r5,6010 <__udivsi3+0x44>
    6008:	314dc83a 	sub	r6,r6,r5
    600c:	10c4b03a 	or	r2,r2,r3
    6010:	1806d07a 	srli	r3,r3,1
    6014:	280ad07a 	srli	r5,r5,1
    6018:	183ffa1e 	bne	r3,zero,6004 <__udivsi3+0x38>
    601c:	f800283a 	ret
    6020:	0005883a 	mov	r2,zero
    6024:	f800283a 	ret
    6028:	00c00044 	movi	r3,1
    602c:	003ff406 	br	6000 <__udivsi3+0x34>

00006030 <__umodsi3>:
    6030:	2005883a 	mov	r2,r4
    6034:	2900132e 	bgeu	r5,r4,6084 <__umodsi3+0x54>
    6038:	28001216 	blt	r5,zero,6084 <__umodsi3+0x54>
    603c:	01800804 	movi	r6,32
    6040:	00c00044 	movi	r3,1
    6044:	00000206 	br	6050 <__umodsi3+0x20>
    6048:	30000c26 	beq	r6,zero,607c <__umodsi3+0x4c>
    604c:	28000516 	blt	r5,zero,6064 <__umodsi3+0x34>
    6050:	294b883a 	add	r5,r5,r5
    6054:	31bfffc4 	addi	r6,r6,-1
    6058:	18c7883a 	add	r3,r3,r3
    605c:	293ffa36 	bltu	r5,r4,6048 <__umodsi3+0x18>
    6060:	18000626 	beq	r3,zero,607c <__umodsi3+0x4c>
    6064:	1806d07a 	srli	r3,r3,1
    6068:	11400136 	bltu	r2,r5,6070 <__umodsi3+0x40>
    606c:	1145c83a 	sub	r2,r2,r5
    6070:	280ad07a 	srli	r5,r5,1
    6074:	183ffb1e 	bne	r3,zero,6064 <__umodsi3+0x34>
    6078:	f800283a 	ret
    607c:	2005883a 	mov	r2,r4
    6080:	f800283a 	ret
    6084:	00c00044 	movi	r3,1
    6088:	003ff606 	br	6064 <__umodsi3+0x34>

0000608c <__mulsi3>:
    608c:	0005883a 	mov	r2,zero
    6090:	20000726 	beq	r4,zero,60b0 <__mulsi3+0x24>
    6094:	20c0004c 	andi	r3,r4,1
    6098:	2008d07a 	srli	r4,r4,1
    609c:	18000126 	beq	r3,zero,60a4 <__mulsi3+0x18>
    60a0:	1145883a 	add	r2,r2,r5
    60a4:	294b883a 	add	r5,r5,r5
    60a8:	203ffa1e 	bne	r4,zero,6094 <__mulsi3+0x8>
    60ac:	f800283a 	ret
    60b0:	f800283a 	ret

000060b4 <__addsf3>:
    60b4:	defffc04 	addi	sp,sp,-16
    60b8:	2806d5fa 	srli	r3,r5,23
    60bc:	dc000015 	stw	r16,0(sp)
    60c0:	2020d5fa 	srli	r16,r4,23
    60c4:	200cd7fa 	srli	r6,r4,31
    60c8:	00802034 	movhi	r2,128
    60cc:	2812d7fa 	srli	r9,r5,31
    60d0:	10bfffc4 	addi	r2,r2,-1
    60d4:	1114703a 	and	r10,r2,r4
    60d8:	1b003fcc 	andi	r12,r3,255
    60dc:	dc400115 	stw	r17,4(sp)
    60e0:	84003fcc 	andi	r16,r16,255
    60e4:	115a703a 	and	r13,r2,r5
    60e8:	dfc00315 	stw	ra,12(sp)
    60ec:	dc800215 	stw	r18,8(sp)
    60f0:	500e90fa 	slli	r7,r10,3
    60f4:	681090fa 	slli	r8,r13,3
    60f8:	5007883a 	mov	r3,r10
    60fc:	3023883a 	mov	r17,r6
    6100:	8317c83a 	sub	r11,r16,r12
    6104:	32403926 	beq	r6,r9,61ec <__addsf3+0x138>
    6108:	02c02e0e 	bge	zero,r11,61c4 <__addsf3+0x110>
    610c:	60004c26 	beq	r12,zero,6240 <__addsf3+0x18c>
    6110:	80803fe0 	cmpeqi	r2,r16,255
    6114:	1000801e 	bne	r2,zero,6318 <__addsf3+0x264>
    6118:	42010034 	orhi	r8,r8,1024
    611c:	58800710 	cmplti	r2,r11,28
    6120:	10009e1e 	bne	r2,zero,639c <__addsf3+0x2e8>
    6124:	01000044 	movi	r4,1
    6128:	3909c83a 	sub	r4,r7,r4
    612c:	2081002c 	andhi	r2,r4,1024
    6130:	10006826 	beq	r2,zero,62d4 <__addsf3+0x220>
    6134:	04810034 	movhi	r18,1024
    6138:	94bfffc4 	addi	r18,r18,-1
    613c:	24a4703a 	and	r18,r4,r18
    6140:	9009883a 	mov	r4,r18
    6144:	00099740 	call	9974 <__clzsi2>
    6148:	10bffec4 	addi	r2,r2,-5
    614c:	9088983a 	sll	r4,r18,r2
    6150:	1400880e 	bge	r2,r16,6374 <__addsf3+0x2c0>
    6154:	00ff0034 	movhi	r3,64512
    6158:	18ffffc4 	addi	r3,r3,-1
    615c:	80a1c83a 	sub	r16,r16,r2
    6160:	20c8703a 	and	r4,r4,r3
    6164:	208001cc 	andi	r2,r4,7
    6168:	10000426 	beq	r2,zero,617c <__addsf3+0xc8>
    616c:	208003cc 	andi	r2,r4,15
    6170:	10800120 	cmpeqi	r2,r2,4
    6174:	1000011e 	bne	r2,zero,617c <__addsf3+0xc8>
    6178:	21000104 	addi	r4,r4,4
    617c:	2081002c 	andhi	r2,r4,1024
    6180:	10005626 	beq	r2,zero,62dc <__addsf3+0x228>
    6184:	84000044 	addi	r16,r16,1
    6188:	80803fe0 	cmpeqi	r2,r16,255
    618c:	1000461e 	bne	r2,zero,62a8 <__addsf3+0x1f4>
    6190:	200491ba 	slli	r2,r4,6
    6194:	1006d27a 	srli	r3,r2,9
    6198:	84003fcc 	andi	r16,r16,255
    619c:	800495fa 	slli	r2,r16,23
    61a0:	882297fa 	slli	r17,r17,31
    61a4:	10c4b03a 	or	r2,r2,r3
    61a8:	1444b03a 	or	r2,r2,r17
    61ac:	dfc00317 	ldw	ra,12(sp)
    61b0:	dc800217 	ldw	r18,8(sp)
    61b4:	dc400117 	ldw	r17,4(sp)
    61b8:	dc000017 	ldw	r16,0(sp)
    61bc:	dec00404 	addi	sp,sp,16
    61c0:	f800283a 	ret
    61c4:	58002526 	beq	r11,zero,625c <__addsf3+0x1a8>
    61c8:	6417c83a 	sub	r11,r12,r16
    61cc:	8000821e 	bne	r16,zero,63d8 <__addsf3+0x324>
    61d0:	38006426 	beq	r7,zero,6364 <__addsf3+0x2b0>
    61d4:	58bfffc4 	addi	r2,r11,-1
    61d8:	1000c226 	beq	r2,zero,64e4 <__addsf3+0x430>
    61dc:	5ac03fe0 	cmpeqi	r11,r11,255
    61e0:	58004b1e 	bne	r11,zero,6310 <__addsf3+0x25c>
    61e4:	1017883a 	mov	r11,r2
    61e8:	00007e06 	br	63e4 <__addsf3+0x330>
    61ec:	02c0510e 	bge	zero,r11,6334 <__addsf3+0x280>
    61f0:	60002626 	beq	r12,zero,628c <__addsf3+0x1d8>
    61f4:	80803fe0 	cmpeqi	r2,r16,255
    61f8:	1000471e 	bne	r2,zero,6318 <__addsf3+0x264>
    61fc:	42010034 	orhi	r8,r8,1024
    6200:	58800710 	cmplti	r2,r11,28
    6204:	10007e1e 	bne	r2,zero,6400 <__addsf3+0x34c>
    6208:	01000044 	movi	r4,1
    620c:	21c9883a 	add	r4,r4,r7
    6210:	2081002c 	andhi	r2,r4,1024
    6214:	10002f26 	beq	r2,zero,62d4 <__addsf3+0x220>
    6218:	84000044 	addi	r16,r16,1
    621c:	80803fe0 	cmpeqi	r2,r16,255
    6220:	1000211e 	bne	r2,zero,62a8 <__addsf3+0x1f4>
    6224:	2004d07a 	srli	r2,r4,1
    6228:	00df8034 	movhi	r3,32256
    622c:	18ffffc4 	addi	r3,r3,-1
    6230:	2100004c 	andi	r4,r4,1
    6234:	10c4703a 	and	r2,r2,r3
    6238:	1108b03a 	or	r4,r2,r4
    623c:	003fc906 	br	6164 <__addsf3+0xb0>
    6240:	40004a26 	beq	r8,zero,636c <__addsf3+0x2b8>
    6244:	58bfffc4 	addi	r2,r11,-1
    6248:	10009326 	beq	r2,zero,6498 <__addsf3+0x3e4>
    624c:	59003fe0 	cmpeqi	r4,r11,255
    6250:	2000311e 	bne	r4,zero,6318 <__addsf3+0x264>
    6254:	1017883a 	mov	r11,r2
    6258:	003fb006 	br	611c <__addsf3+0x68>
    625c:	81800044 	addi	r6,r16,1
    6260:	31803f8c 	andi	r6,r6,254
    6264:	3000541e 	bne	r6,zero,63b8 <__addsf3+0x304>
    6268:	80007e1e 	bne	r16,zero,6464 <__addsf3+0x3b0>
    626c:	3800a326 	beq	r7,zero,64fc <__addsf3+0x448>
    6270:	40009326 	beq	r8,zero,64c0 <__addsf3+0x40c>
    6274:	3a09c83a 	sub	r4,r7,r8
    6278:	2081002c 	andhi	r2,r4,1024
    627c:	1000a626 	beq	r2,zero,6518 <__addsf3+0x464>
    6280:	41c9c83a 	sub	r4,r8,r7
    6284:	4823883a 	mov	r17,r9
    6288:	003fb606 	br	6164 <__addsf3+0xb0>
    628c:	40003726 	beq	r8,zero,636c <__addsf3+0x2b8>
    6290:	58bfffc4 	addi	r2,r11,-1
    6294:	10007b26 	beq	r2,zero,6484 <__addsf3+0x3d0>
    6298:	5ac03fe0 	cmpeqi	r11,r11,255
    629c:	58001e1e 	bne	r11,zero,6318 <__addsf3+0x264>
    62a0:	1017883a 	mov	r11,r2
    62a4:	003fd606 	br	6200 <__addsf3+0x14c>
    62a8:	043fffc4 	movi	r16,-1
    62ac:	0007883a 	mov	r3,zero
    62b0:	003fb906 	br	6198 <__addsf3+0xe4>
    62b4:	80800044 	addi	r2,r16,1
    62b8:	11803f8c 	andi	r6,r2,254
    62bc:	30005726 	beq	r6,zero,641c <__addsf3+0x368>
    62c0:	10c03fe0 	cmpeqi	r3,r2,255
    62c4:	183ff81e 	bne	r3,zero,62a8 <__addsf3+0x1f4>
    62c8:	3a09883a 	add	r4,r7,r8
    62cc:	2008d07a 	srli	r4,r4,1
    62d0:	1021883a 	mov	r16,r2
    62d4:	208001cc 	andi	r2,r4,7
    62d8:	103fa41e 	bne	r2,zero,616c <__addsf3+0xb8>
    62dc:	2014d0fa 	srli	r10,r4,3
    62e0:	80803fe0 	cmpeqi	r2,r16,255
    62e4:	10000c1e 	bne	r2,zero,6318 <__addsf3+0x264>
    62e8:	00802034 	movhi	r2,128
    62ec:	10bfffc4 	addi	r2,r2,-1
    62f0:	5086703a 	and	r3,r10,r2
    62f4:	003fa806 	br	6198 <__addsf3+0xe4>
    62f8:	38000626 	beq	r7,zero,6314 <__addsf3+0x260>
    62fc:	40000626 	beq	r8,zero,6318 <__addsf3+0x264>
    6300:	2080102c 	andhi	r2,r4,64
    6304:	10000426 	beq	r2,zero,6318 <__addsf3+0x264>
    6308:	2940102c 	andhi	r5,r5,64
    630c:	2800021e 	bne	r5,zero,6318 <__addsf3+0x264>
    6310:	4823883a 	mov	r17,r9
    6314:	6815883a 	mov	r10,r13
    6318:	503fe326 	beq	r10,zero,62a8 <__addsf3+0x1f4>
    631c:	00802034 	movhi	r2,128
    6320:	50c01034 	orhi	r3,r10,64
    6324:	10bfffc4 	addi	r2,r2,-1
    6328:	1886703a 	and	r3,r3,r2
    632c:	043fffc4 	movi	r16,-1
    6330:	003f9906 	br	6198 <__addsf3+0xe4>
    6334:	583fdf26 	beq	r11,zero,62b4 <__addsf3+0x200>
    6338:	6417c83a 	sub	r11,r12,r16
    633c:	80004226 	beq	r16,zero,6448 <__addsf3+0x394>
    6340:	60803fe0 	cmpeqi	r2,r12,255
    6344:	103ff31e 	bne	r2,zero,6314 <__addsf3+0x260>
    6348:	39c10034 	orhi	r7,r7,1024
    634c:	58800710 	cmplti	r2,r11,28
    6350:	10005d1e 	bne	r2,zero,64c8 <__addsf3+0x414>
    6354:	01000044 	movi	r4,1
    6358:	2209883a 	add	r4,r4,r8
    635c:	6021883a 	mov	r16,r12
    6360:	003fab06 	br	6210 <__addsf3+0x15c>
    6364:	4823883a 	mov	r17,r9
    6368:	6815883a 	mov	r10,r13
    636c:	5821883a 	mov	r16,r11
    6370:	003fdb06 	br	62e0 <__addsf3+0x22c>
    6374:	1405c83a 	sub	r2,r2,r16
    6378:	14800044 	addi	r18,r2,1
    637c:	00800804 	movi	r2,32
    6380:	1485c83a 	sub	r2,r2,r18
    6384:	2084983a 	sll	r2,r4,r2
    6388:	2488d83a 	srl	r4,r4,r18
    638c:	0021883a 	mov	r16,zero
    6390:	1004c03a 	cmpne	r2,r2,zero
    6394:	1108b03a 	or	r4,r2,r4
    6398:	003f7206 	br	6164 <__addsf3+0xb0>
    639c:	01000804 	movi	r4,32
    63a0:	22c9c83a 	sub	r4,r4,r11
    63a4:	4108983a 	sll	r4,r8,r4
    63a8:	42d0d83a 	srl	r8,r8,r11
    63ac:	2008c03a 	cmpne	r4,r4,zero
    63b0:	2208b03a 	or	r4,r4,r8
    63b4:	003f5c06 	br	6128 <__addsf3+0x74>
    63b8:	3a25c83a 	sub	r18,r7,r8
    63bc:	9081002c 	andhi	r2,r18,1024
    63c0:	10002d1e 	bne	r2,zero,6478 <__addsf3+0x3c4>
    63c4:	903f5e1e 	bne	r18,zero,6140 <__addsf3+0x8c>
    63c8:	0023883a 	mov	r17,zero
    63cc:	0021883a 	mov	r16,zero
    63d0:	0007883a 	mov	r3,zero
    63d4:	003f7006 	br	6198 <__addsf3+0xe4>
    63d8:	60803fe0 	cmpeqi	r2,r12,255
    63dc:	103fcc1e 	bne	r2,zero,6310 <__addsf3+0x25c>
    63e0:	39c10034 	orhi	r7,r7,1024
    63e4:	58800710 	cmplti	r2,r11,28
    63e8:	10002e1e 	bne	r2,zero,64a4 <__addsf3+0x3f0>
    63ec:	01000044 	movi	r4,1
    63f0:	4109c83a 	sub	r4,r8,r4
    63f4:	4823883a 	mov	r17,r9
    63f8:	6021883a 	mov	r16,r12
    63fc:	003f4b06 	br	612c <__addsf3+0x78>
    6400:	01000804 	movi	r4,32
    6404:	22c9c83a 	sub	r4,r4,r11
    6408:	4108983a 	sll	r4,r8,r4
    640c:	42d0d83a 	srl	r8,r8,r11
    6410:	2008c03a 	cmpne	r4,r4,zero
    6414:	2208b03a 	or	r4,r4,r8
    6418:	003f7c06 	br	620c <__addsf3+0x158>
    641c:	803fb61e 	bne	r16,zero,62f8 <__addsf3+0x244>
    6420:	38003a26 	beq	r7,zero,650c <__addsf3+0x458>
    6424:	40002626 	beq	r8,zero,64c0 <__addsf3+0x40c>
    6428:	3a09883a 	add	r4,r7,r8
    642c:	2081002c 	andhi	r2,r4,1024
    6430:	103fa826 	beq	r2,zero,62d4 <__addsf3+0x220>
    6434:	00bf0034 	movhi	r2,64512
    6438:	10bfffc4 	addi	r2,r2,-1
    643c:	2088703a 	and	r4,r4,r2
    6440:	04000044 	movi	r16,1
    6444:	003fa306 	br	62d4 <__addsf3+0x220>
    6448:	383fc726 	beq	r7,zero,6368 <__addsf3+0x2b4>
    644c:	58bfffc4 	addi	r2,r11,-1
    6450:	10000c26 	beq	r2,zero,6484 <__addsf3+0x3d0>
    6454:	5ac03fe0 	cmpeqi	r11,r11,255
    6458:	583fae1e 	bne	r11,zero,6314 <__addsf3+0x260>
    645c:	1017883a 	mov	r11,r2
    6460:	003fba06 	br	634c <__addsf3+0x298>
    6464:	383fa51e 	bne	r7,zero,62fc <__addsf3+0x248>
    6468:	403fa91e 	bne	r8,zero,6310 <__addsf3+0x25c>
    646c:	0023883a 	mov	r17,zero
    6470:	1007883a 	mov	r3,r2
    6474:	003fad06 	br	632c <__addsf3+0x278>
    6478:	41e5c83a 	sub	r18,r8,r7
    647c:	4823883a 	mov	r17,r9
    6480:	003f2f06 	br	6140 <__addsf3+0x8c>
    6484:	3a09883a 	add	r4,r7,r8
    6488:	2081002c 	andhi	r2,r4,1024
    648c:	10001926 	beq	r2,zero,64f4 <__addsf3+0x440>
    6490:	04000084 	movi	r16,2
    6494:	003f6306 	br	6224 <__addsf3+0x170>
    6498:	3a09c83a 	sub	r4,r7,r8
    649c:	04000044 	movi	r16,1
    64a0:	003f2206 	br	612c <__addsf3+0x78>
    64a4:	00800804 	movi	r2,32
    64a8:	12c5c83a 	sub	r2,r2,r11
    64ac:	3884983a 	sll	r2,r7,r2
    64b0:	3aced83a 	srl	r7,r7,r11
    64b4:	1008c03a 	cmpne	r4,r2,zero
    64b8:	21c8b03a 	or	r4,r4,r7
    64bc:	003fcc06 	br	63f0 <__addsf3+0x33c>
    64c0:	0021883a 	mov	r16,zero
    64c4:	003f3406 	br	6198 <__addsf3+0xe4>
    64c8:	01000804 	movi	r4,32
    64cc:	22c9c83a 	sub	r4,r4,r11
    64d0:	3908983a 	sll	r4,r7,r4
    64d4:	3aced83a 	srl	r7,r7,r11
    64d8:	2008c03a 	cmpne	r4,r4,zero
    64dc:	21c8b03a 	or	r4,r4,r7
    64e0:	003f9d06 	br	6358 <__addsf3+0x2a4>
    64e4:	41c9c83a 	sub	r4,r8,r7
    64e8:	4823883a 	mov	r17,r9
    64ec:	04000044 	movi	r16,1
    64f0:	003f0e06 	br	612c <__addsf3+0x78>
    64f4:	04000044 	movi	r16,1
    64f8:	003f7606 	br	62d4 <__addsf3+0x220>
    64fc:	403fb226 	beq	r8,zero,63c8 <__addsf3+0x314>
    6500:	4823883a 	mov	r17,r9
    6504:	6807883a 	mov	r3,r13
    6508:	003f2306 	br	6198 <__addsf3+0xe4>
    650c:	6807883a 	mov	r3,r13
    6510:	0021883a 	mov	r16,zero
    6514:	003f2006 	br	6198 <__addsf3+0xe4>
    6518:	203fab26 	beq	r4,zero,63c8 <__addsf3+0x314>
    651c:	003f6d06 	br	62d4 <__addsf3+0x220>

00006520 <__eqsf2>:
    6520:	200cd5fa 	srli	r6,r4,23
    6524:	2806d5fa 	srli	r3,r5,23
    6528:	00802034 	movhi	r2,128
    652c:	31803fcc 	andi	r6,r6,255
    6530:	10bfffc4 	addi	r2,r2,-1
    6534:	31c03fd8 	cmpnei	r7,r6,255
    6538:	2010d7fa 	srli	r8,r4,31
    653c:	2812d7fa 	srli	r9,r5,31
    6540:	1108703a 	and	r4,r2,r4
    6544:	18c03fcc 	andi	r3,r3,255
    6548:	1144703a 	and	r2,r2,r5
    654c:	38000626 	beq	r7,zero,6568 <__eqsf2+0x48>
    6550:	19403fe0 	cmpeqi	r5,r3,255
    6554:	2800021e 	bne	r5,zero,6560 <__eqsf2+0x40>
    6558:	30c0011e 	bne	r6,r3,6560 <__eqsf2+0x40>
    655c:	20800626 	beq	r4,r2,6578 <__eqsf2+0x58>
    6560:	00800044 	movi	r2,1
    6564:	f800283a 	ret
    6568:	203ffd1e 	bne	r4,zero,6560 <__eqsf2+0x40>
    656c:	18c03fd8 	cmpnei	r3,r3,255
    6570:	183ffb1e 	bne	r3,zero,6560 <__eqsf2+0x40>
    6574:	103ffa1e 	bne	r2,zero,6560 <__eqsf2+0x40>
    6578:	42400326 	beq	r8,r9,6588 <__eqsf2+0x68>
    657c:	303ff81e 	bne	r6,zero,6560 <__eqsf2+0x40>
    6580:	2004c03a 	cmpne	r2,r4,zero
    6584:	f800283a 	ret
    6588:	0005883a 	mov	r2,zero
    658c:	f800283a 	ret

00006590 <__gesf2>:
    6590:	200cd5fa 	srli	r6,r4,23
    6594:	280ed5fa 	srli	r7,r5,23
    6598:	00c02034 	movhi	r3,128
    659c:	31803fcc 	andi	r6,r6,255
    65a0:	18ffffc4 	addi	r3,r3,-1
    65a4:	32003fd8 	cmpnei	r8,r6,255
    65a8:	2012d7fa 	srli	r9,r4,31
    65ac:	2804d7fa 	srli	r2,r5,31
    65b0:	1908703a 	and	r4,r3,r4
    65b4:	1946703a 	and	r3,r3,r5
    65b8:	39403fcc 	andi	r5,r7,255
    65bc:	40000826 	beq	r8,zero,65e0 <__gesf2+0x50>
    65c0:	29c03fd8 	cmpnei	r7,r5,255
    65c4:	38000926 	beq	r7,zero,65ec <__gesf2+0x5c>
    65c8:	3000121e 	bne	r6,zero,6614 <__gesf2+0x84>
    65cc:	28000e1e 	bne	r5,zero,6608 <__gesf2+0x78>
    65d0:	18000d1e 	bne	r3,zero,6608 <__gesf2+0x78>
    65d4:	2000081e 	bne	r4,zero,65f8 <__gesf2+0x68>
    65d8:	0005883a 	mov	r2,zero
    65dc:	f800283a 	ret
    65e0:	2000171e 	bne	r4,zero,6640 <__gesf2+0xb0>
    65e4:	29c03fe0 	cmpeqi	r7,r5,255
    65e8:	38000a26 	beq	r7,zero,6614 <__gesf2+0x84>
    65ec:	1800141e 	bne	r3,zero,6640 <__gesf2+0xb0>
    65f0:	30000526 	beq	r6,zero,6608 <__gesf2+0x78>
    65f4:	48800a26 	beq	r9,r2,6620 <__gesf2+0x90>
    65f8:	00800044 	movi	r2,1
    65fc:	48000426 	beq	r9,zero,6610 <__gesf2+0x80>
    6600:	00bfffc4 	movi	r2,-1
    6604:	f800283a 	ret
    6608:	203ffa1e 	bne	r4,zero,65f4 <__gesf2+0x64>
    660c:	103ffc26 	beq	r2,zero,6600 <__gesf2+0x70>
    6610:	f800283a 	ret
    6614:	283ff71e 	bne	r5,zero,65f4 <__gesf2+0x64>
    6618:	183ff61e 	bne	r3,zero,65f4 <__gesf2+0x64>
    661c:	003ff606 	br	65f8 <__gesf2+0x68>
    6620:	29800416 	blt	r5,r6,6634 <__gesf2+0xa4>
    6624:	317ff916 	blt	r6,r5,660c <__gesf2+0x7c>
    6628:	19000236 	bltu	r3,r4,6634 <__gesf2+0xa4>
    662c:	20ffea2e 	bgeu	r4,r3,65d8 <__gesf2+0x48>
    6630:	003ff606 	br	660c <__gesf2+0x7c>
    6634:	103ff21e 	bne	r2,zero,6600 <__gesf2+0x70>
    6638:	00800044 	movi	r2,1
    663c:	f800283a 	ret
    6640:	00bfff84 	movi	r2,-2
    6644:	f800283a 	ret

00006648 <__mulsf3>:
    6648:	defff504 	addi	sp,sp,-44
    664c:	dc400215 	stw	r17,8(sp)
    6650:	2022d5fa 	srli	r17,r4,23
    6654:	dc000115 	stw	r16,4(sp)
    6658:	04002034 	movhi	r16,128
    665c:	dd800715 	stw	r22,28(sp)
    6660:	843fffc4 	addi	r16,r16,-1
    6664:	dfc00a15 	stw	ra,40(sp)
    6668:	df000915 	stw	fp,36(sp)
    666c:	ddc00815 	stw	r23,32(sp)
    6670:	dd400615 	stw	r21,24(sp)
    6674:	dd000515 	stw	r20,20(sp)
    6678:	dcc00415 	stw	r19,16(sp)
    667c:	dc800315 	stw	r18,12(sp)
    6680:	8c403fcc 	andi	r17,r17,255
    6684:	202cd7fa 	srli	r22,r4,31
    6688:	8120703a 	and	r16,r16,r4
    668c:	88008d26 	beq	r17,zero,68c4 <__mulsf3+0x27c>
    6690:	88803fe0 	cmpeqi	r2,r17,255
    6694:	1000901e 	bne	r2,zero,68d8 <__mulsf3+0x290>
    6698:	802090fa 	slli	r16,r16,3
    669c:	8c7fe044 	addi	r17,r17,-127
    66a0:	0025883a 	mov	r18,zero
    66a4:	84010034 	orhi	r16,r16,1024
    66a8:	0029883a 	mov	r20,zero
    66ac:	2804d5fa 	srli	r2,r5,23
    66b0:	01002034 	movhi	r4,128
    66b4:	213fffc4 	addi	r4,r4,-1
    66b8:	10803fcc 	andi	r2,r2,255
    66bc:	282ed7fa 	srli	r23,r5,31
    66c0:	2166703a 	and	r19,r4,r5
    66c4:	10007b26 	beq	r2,zero,68b4 <__mulsf3+0x26c>
    66c8:	10c03fe0 	cmpeqi	r3,r2,255
    66cc:	1800871e 	bne	r3,zero,68ec <__mulsf3+0x2a4>
    66d0:	980890fa 	slli	r4,r19,3
    66d4:	10bfe044 	addi	r2,r2,-127
    66d8:	88a3883a 	add	r17,r17,r2
    66dc:	24c10034 	orhi	r19,r4,1024
    66e0:	0007883a 	mov	r3,zero
    66e4:	90800428 	cmpgeui	r2,r18,16
    66e8:	b5eaf03a 	xor	r21,r22,r23
    66ec:	8f000044 	addi	fp,r17,1
    66f0:	1000341e 	bne	r2,zero,67c4 <__mulsf3+0x17c>
    66f4:	902490ba 	slli	r18,r18,2
    66f8:	00800034 	movhi	r2,0
    66fc:	9085883a 	add	r2,r18,r2
    6700:	1099c217 	ldw	r2,26376(r2)
    6704:	1000683a 	jmp	r2
    6708:	000067c4 	movi	zero,415
    670c:	0000674c 	andi	zero,zero,413
    6710:	0000674c 	andi	zero,zero,413
    6714:	00006748 	cmpgei	zero,zero,413
    6718:	00006754 	movui	zero,413
    671c:	00006754 	movui	zero,413
    6720:	00006978 	rdprs	zero,zero,421
    6724:	00006748 	cmpgei	zero,zero,413
    6728:	00006754 	movui	zero,413
    672c:	00006978 	rdprs	zero,zero,421
    6730:	00006754 	movui	zero,413
    6734:	00006748 	cmpgei	zero,zero,413
    6738:	00006900 	call	690 <kf_bfly4+0x2d8>
    673c:	00006900 	call	690 <kf_bfly4+0x2d8>
    6740:	00006900 	call	690 <kf_bfly4+0x2d8>
    6744:	000069dc 	xori	zero,zero,423
    6748:	b82b883a 	mov	r21,r23
    674c:	9821883a 	mov	r16,r19
    6750:	1829883a 	mov	r20,r3
    6754:	a08000a0 	cmpeqi	r2,r20,2
    6758:	1000171e 	bne	r2,zero,67b8 <__mulsf3+0x170>
    675c:	a08000e0 	cmpeqi	r2,r20,3
    6760:	1000b41e 	bne	r2,zero,6a34 <__mulsf3+0x3ec>
    6764:	a0800060 	cmpeqi	r2,r20,1
    6768:	10003f26 	beq	r2,zero,6868 <__mulsf3+0x220>
    676c:	0007883a 	mov	r3,zero
    6770:	0009883a 	mov	r4,zero
    6774:	1c003fcc 	andi	r16,r3,255
    6778:	802095fa 	slli	r16,r16,23
    677c:	a80497fa 	slli	r2,r21,31
    6780:	8120b03a 	or	r16,r16,r4
    6784:	8084b03a 	or	r2,r16,r2
    6788:	dfc00a17 	ldw	ra,40(sp)
    678c:	df000917 	ldw	fp,36(sp)
    6790:	ddc00817 	ldw	r23,32(sp)
    6794:	dd800717 	ldw	r22,28(sp)
    6798:	dd400617 	ldw	r21,24(sp)
    679c:	dd000517 	ldw	r20,20(sp)
    67a0:	dcc00417 	ldw	r19,16(sp)
    67a4:	dc800317 	ldw	r18,12(sp)
    67a8:	dc400217 	ldw	r17,8(sp)
    67ac:	dc000117 	ldw	r16,4(sp)
    67b0:	dec00b04 	addi	sp,sp,44
    67b4:	f800283a 	ret
    67b8:	00ffffc4 	movi	r3,-1
    67bc:	0009883a 	mov	r4,zero
    67c0:	003fec06 	br	6774 <__mulsf3+0x12c>
    67c4:	8028d43a 	srli	r20,r16,16
    67c8:	9cbfffcc 	andi	r18,r19,65535
    67cc:	843fffcc 	andi	r16,r16,65535
    67d0:	900b883a 	mov	r5,r18
    67d4:	8009883a 	mov	r4,r16
    67d8:	000608c0 	call	608c <__mulsi3>
    67dc:	9826d43a 	srli	r19,r19,16
    67e0:	900b883a 	mov	r5,r18
    67e4:	a009883a 	mov	r4,r20
    67e8:	1025883a 	mov	r18,r2
    67ec:	000608c0 	call	608c <__mulsi3>
    67f0:	980b883a 	mov	r5,r19
    67f4:	a009883a 	mov	r4,r20
    67f8:	1029883a 	mov	r20,r2
    67fc:	000608c0 	call	608c <__mulsi3>
    6800:	9809883a 	mov	r4,r19
    6804:	800b883a 	mov	r5,r16
    6808:	1027883a 	mov	r19,r2
    680c:	000608c0 	call	608c <__mulsi3>
    6810:	9006d43a 	srli	r3,r18,16
    6814:	1505883a 	add	r2,r2,r20
    6818:	1887883a 	add	r3,r3,r2
    681c:	1d00022e 	bgeu	r3,r20,6828 <__mulsf3+0x1e0>
    6820:	00800074 	movhi	r2,1
    6824:	98a7883a 	add	r19,r19,r2
    6828:	1808943a 	slli	r4,r3,16
    682c:	1820d43a 	srli	r16,r3,16
    6830:	94bfffcc 	andi	r18,r18,65535
    6834:	2489883a 	add	r4,r4,r18
    6838:	200a91ba 	slli	r5,r4,6
    683c:	84e1883a 	add	r16,r16,r19
    6840:	802091ba 	slli	r16,r16,6
    6844:	2008d6ba 	srli	r4,r4,26
    6848:	2804c03a 	cmpne	r2,r5,zero
    684c:	80c2002c 	andhi	r3,r16,2048
    6850:	1108b03a 	or	r4,r2,r4
    6854:	8120b03a 	or	r16,r16,r4
    6858:	18007026 	beq	r3,zero,6a1c <__mulsf3+0x3d4>
    685c:	8004d07a 	srli	r2,r16,1
    6860:	8400004c 	andi	r16,r16,1
    6864:	1420b03a 	or	r16,r2,r16
    6868:	e0c01fc4 	addi	r3,fp,127
    686c:	00c0470e 	bge	zero,r3,698c <__mulsf3+0x344>
    6870:	808001cc 	andi	r2,r16,7
    6874:	10000426 	beq	r2,zero,6888 <__mulsf3+0x240>
    6878:	808003cc 	andi	r2,r16,15
    687c:	10800120 	cmpeqi	r2,r2,4
    6880:	1000011e 	bne	r2,zero,6888 <__mulsf3+0x240>
    6884:	84000104 	addi	r16,r16,4
    6888:	8082002c 	andhi	r2,r16,2048
    688c:	10000426 	beq	r2,zero,68a0 <__mulsf3+0x258>
    6890:	00be0034 	movhi	r2,63488
    6894:	10bfffc4 	addi	r2,r2,-1
    6898:	80a0703a 	and	r16,r16,r2
    689c:	e0c02004 	addi	r3,fp,128
    68a0:	18803fc8 	cmpgei	r2,r3,255
    68a4:	103fc41e 	bne	r2,zero,67b8 <__mulsf3+0x170>
    68a8:	802091ba 	slli	r16,r16,6
    68ac:	8008d27a 	srli	r4,r16,9
    68b0:	003fb006 	br	6774 <__mulsf3+0x12c>
    68b4:	9800281e 	bne	r19,zero,6958 <__mulsf3+0x310>
    68b8:	94800054 	ori	r18,r18,1
    68bc:	00c00044 	movi	r3,1
    68c0:	003f8806 	br	66e4 <__mulsf3+0x9c>
    68c4:	8000191e 	bne	r16,zero,692c <__mulsf3+0x2e4>
    68c8:	04800104 	movi	r18,4
    68cc:	0023883a 	mov	r17,zero
    68d0:	05000044 	movi	r20,1
    68d4:	003f7506 	br	66ac <__mulsf3+0x64>
    68d8:	8000101e 	bne	r16,zero,691c <__mulsf3+0x2d4>
    68dc:	04800204 	movi	r18,8
    68e0:	04403fc4 	movi	r17,255
    68e4:	05000084 	movi	r20,2
    68e8:	003f7006 	br	66ac <__mulsf3+0x64>
    68ec:	8c403fc4 	addi	r17,r17,255
    68f0:	9800071e 	bne	r19,zero,6910 <__mulsf3+0x2c8>
    68f4:	94800094 	ori	r18,r18,2
    68f8:	00c00084 	movi	r3,2
    68fc:	003f7906 	br	66e4 <__mulsf3+0x9c>
    6900:	a08000a0 	cmpeqi	r2,r20,2
    6904:	b02b883a 	mov	r21,r22
    6908:	103f9426 	beq	r2,zero,675c <__mulsf3+0x114>
    690c:	003faa06 	br	67b8 <__mulsf3+0x170>
    6910:	948000d4 	ori	r18,r18,3
    6914:	00c000c4 	movi	r3,3
    6918:	003f7206 	br	66e4 <__mulsf3+0x9c>
    691c:	04800304 	movi	r18,12
    6920:	04403fc4 	movi	r17,255
    6924:	050000c4 	movi	r20,3
    6928:	003f6006 	br	66ac <__mulsf3+0x64>
    692c:	8009883a 	mov	r4,r16
    6930:	d9400015 	stw	r5,0(sp)
    6934:	00099740 	call	9974 <__clzsi2>
    6938:	10fffec4 	addi	r3,r2,-5
    693c:	047fe284 	movi	r17,-118
    6940:	80e0983a 	sll	r16,r16,r3
    6944:	d9400017 	ldw	r5,0(sp)
    6948:	88a3c83a 	sub	r17,r17,r2
    694c:	0025883a 	mov	r18,zero
    6950:	0029883a 	mov	r20,zero
    6954:	003f5506 	br	66ac <__mulsf3+0x64>
    6958:	9809883a 	mov	r4,r19
    695c:	00099740 	call	9974 <__clzsi2>
    6960:	10fffec4 	addi	r3,r2,-5
    6964:	88a3c83a 	sub	r17,r17,r2
    6968:	98e6983a 	sll	r19,r19,r3
    696c:	8c7fe284 	addi	r17,r17,-118
    6970:	0007883a 	mov	r3,zero
    6974:	003f5b06 	br	66e4 <__mulsf3+0x9c>
    6978:	01002034 	movhi	r4,128
    697c:	002b883a 	mov	r21,zero
    6980:	213fffc4 	addi	r4,r4,-1
    6984:	00ffffc4 	movi	r3,-1
    6988:	003f7a06 	br	6774 <__mulsf3+0x12c>
    698c:	00800044 	movi	r2,1
    6990:	10c7c83a 	sub	r3,r2,r3
    6994:	18800708 	cmpgei	r2,r3,28
    6998:	103f741e 	bne	r2,zero,676c <__mulsf3+0x124>
    699c:	e1002784 	addi	r4,fp,158
    69a0:	8108983a 	sll	r4,r16,r4
    69a4:	80e0d83a 	srl	r16,r16,r3
    69a8:	2008c03a 	cmpne	r4,r4,zero
    69ac:	8120b03a 	or	r16,r16,r4
    69b0:	808001cc 	andi	r2,r16,7
    69b4:	10000426 	beq	r2,zero,69c8 <__mulsf3+0x380>
    69b8:	808003cc 	andi	r2,r16,15
    69bc:	10800120 	cmpeqi	r2,r2,4
    69c0:	1000011e 	bne	r2,zero,69c8 <__mulsf3+0x380>
    69c4:	84000104 	addi	r16,r16,4
    69c8:	8081002c 	andhi	r2,r16,1024
    69cc:	10001526 	beq	r2,zero,6a24 <__mulsf3+0x3dc>
    69d0:	00c00044 	movi	r3,1
    69d4:	0009883a 	mov	r4,zero
    69d8:	003f6606 	br	6774 <__mulsf3+0x12c>
    69dc:	8080102c 	andhi	r2,r16,64
    69e0:	10000826 	beq	r2,zero,6a04 <__mulsf3+0x3bc>
    69e4:	9880102c 	andhi	r2,r19,64
    69e8:	1000061e 	bne	r2,zero,6a04 <__mulsf3+0x3bc>
    69ec:	00802034 	movhi	r2,128
    69f0:	99001034 	orhi	r4,r19,64
    69f4:	10bfffc4 	addi	r2,r2,-1
    69f8:	2088703a 	and	r4,r4,r2
    69fc:	b82b883a 	mov	r21,r23
    6a00:	003fe006 	br	6984 <__mulsf3+0x33c>
    6a04:	00802034 	movhi	r2,128
    6a08:	81001034 	orhi	r4,r16,64
    6a0c:	10bfffc4 	addi	r2,r2,-1
    6a10:	2088703a 	and	r4,r4,r2
    6a14:	b02b883a 	mov	r21,r22
    6a18:	003fda06 	br	6984 <__mulsf3+0x33c>
    6a1c:	8839883a 	mov	fp,r17
    6a20:	003f9106 	br	6868 <__mulsf3+0x220>
    6a24:	802091ba 	slli	r16,r16,6
    6a28:	0007883a 	mov	r3,zero
    6a2c:	8008d27a 	srli	r4,r16,9
    6a30:	003f5006 	br	6774 <__mulsf3+0x12c>
    6a34:	00802034 	movhi	r2,128
    6a38:	81001034 	orhi	r4,r16,64
    6a3c:	10bfffc4 	addi	r2,r2,-1
    6a40:	2088703a 	and	r4,r4,r2
    6a44:	003fcf06 	br	6984 <__mulsf3+0x33c>

00006a48 <__subsf3>:
    6a48:	2804d5fa 	srli	r2,r5,23
    6a4c:	2006d5fa 	srli	r3,r4,23
    6a50:	200cd7fa 	srli	r6,r4,31
    6a54:	01c02034 	movhi	r7,128
    6a58:	defffc04 	addi	sp,sp,-16
    6a5c:	39ffffc4 	addi	r7,r7,-1
    6a60:	12803fcc 	andi	r10,r2,255
    6a64:	3908703a 	and	r4,r7,r4
    6a68:	dc800215 	stw	r18,8(sp)
    6a6c:	394e703a 	and	r7,r7,r5
    6a70:	dc400115 	stw	r17,4(sp)
    6a74:	1c803fcc 	andi	r18,r3,255
    6a78:	dfc00315 	stw	ra,12(sp)
    6a7c:	dc000015 	stw	r16,0(sp)
    6a80:	50803fd8 	cmpnei	r2,r10,255
    6a84:	3023883a 	mov	r17,r6
    6a88:	201090fa 	slli	r8,r4,3
    6a8c:	280ad7fa 	srli	r5,r5,31
    6a90:	381290fa 	slli	r9,r7,3
    6a94:	2019883a 	mov	r12,r4
    6a98:	31803fcc 	andi	r6,r6,255
    6a9c:	9297c83a 	sub	r11,r18,r10
    6aa0:	10003f26 	beq	r2,zero,6ba0 <__subsf3+0x158>
    6aa4:	2880005c 	xori	r2,r5,1
    6aa8:	30804526 	beq	r6,r2,6bc0 <__subsf3+0x178>
    6aac:	02c0310e 	bge	zero,r11,6b74 <__subsf3+0x12c>
    6ab0:	50003f1e 	bne	r10,zero,6bb0 <__subsf3+0x168>
    6ab4:	48009526 	beq	r9,zero,6d0c <__subsf3+0x2c4>
    6ab8:	58bfffc4 	addi	r2,r11,-1
    6abc:	1000de26 	beq	r2,zero,6e38 <__subsf3+0x3f0>
    6ac0:	59003fe0 	cmpeqi	r4,r11,255
    6ac4:	20007d1e 	bne	r4,zero,6cbc <__subsf3+0x274>
    6ac8:	1017883a 	mov	r11,r2
    6acc:	58800710 	cmplti	r2,r11,28
    6ad0:	10009a1e 	bne	r2,zero,6d3c <__subsf3+0x2f4>
    6ad4:	01000044 	movi	r4,1
    6ad8:	4109c83a 	sub	r4,r8,r4
    6adc:	2081002c 	andhi	r2,r4,1024
    6ae0:	10006a26 	beq	r2,zero,6c8c <__subsf3+0x244>
    6ae4:	04010034 	movhi	r16,1024
    6ae8:	843fffc4 	addi	r16,r16,-1
    6aec:	2420703a 	and	r16,r4,r16
    6af0:	8009883a 	mov	r4,r16
    6af4:	00099740 	call	9974 <__clzsi2>
    6af8:	10bffec4 	addi	r2,r2,-5
    6afc:	8088983a 	sll	r4,r16,r2
    6b00:	1480840e 	bge	r2,r18,6d14 <__subsf3+0x2cc>
    6b04:	00ff0034 	movhi	r3,64512
    6b08:	18ffffc4 	addi	r3,r3,-1
    6b0c:	90a5c83a 	sub	r18,r18,r2
    6b10:	20c8703a 	and	r4,r4,r3
    6b14:	208001cc 	andi	r2,r4,7
    6b18:	10000426 	beq	r2,zero,6b2c <__subsf3+0xe4>
    6b1c:	208003cc 	andi	r2,r4,15
    6b20:	10800120 	cmpeqi	r2,r2,4
    6b24:	1000011e 	bne	r2,zero,6b2c <__subsf3+0xe4>
    6b28:	21000104 	addi	r4,r4,4
    6b2c:	2081002c 	andhi	r2,r4,1024
    6b30:	10005826 	beq	r2,zero,6c94 <__subsf3+0x24c>
    6b34:	90c00044 	addi	r3,r18,1
    6b38:	18803fe0 	cmpeqi	r2,r3,255
    6b3c:	1000481e 	bne	r2,zero,6c60 <__subsf3+0x218>
    6b40:	200891ba 	slli	r4,r4,6
    6b44:	2008d27a 	srli	r4,r4,9
    6b48:	18803fcc 	andi	r2,r3,255
    6b4c:	100495fa 	slli	r2,r2,23
    6b50:	880697fa 	slli	r3,r17,31
    6b54:	1108b03a 	or	r4,r2,r4
    6b58:	20c4b03a 	or	r2,r4,r3
    6b5c:	dfc00317 	ldw	ra,12(sp)
    6b60:	dc800217 	ldw	r18,8(sp)
    6b64:	dc400117 	ldw	r17,4(sp)
    6b68:	dc000017 	ldw	r16,0(sp)
    6b6c:	dec00404 	addi	sp,sp,16
    6b70:	f800283a 	ret
    6b74:	58002726 	beq	r11,zero,6c14 <__subsf3+0x1cc>
    6b78:	5497c83a 	sub	r11,r10,r18
    6b7c:	1023883a 	mov	r17,r2
    6b80:	9000751e 	bne	r18,zero,6d58 <__subsf3+0x310>
    6b84:	40006026 	beq	r8,zero,6d08 <__subsf3+0x2c0>
    6b88:	58bfffc4 	addi	r2,r11,-1
    6b8c:	1000cb26 	beq	r2,zero,6ebc <__subsf3+0x474>
    6b90:	5ac03fe0 	cmpeqi	r11,r11,255
    6b94:	5800481e 	bne	r11,zero,6cb8 <__subsf3+0x270>
    6b98:	1017883a 	mov	r11,r2
    6b9c:	00007106 	br	6d64 <__subsf3+0x31c>
    6ba0:	483fc026 	beq	r9,zero,6aa4 <__subsf3+0x5c>
    6ba4:	28803fcc 	andi	r2,r5,255
    6ba8:	31404b26 	beq	r6,r5,6cd8 <__subsf3+0x290>
    6bac:	02fff10e 	bge	zero,r11,6b74 <__subsf3+0x12c>
    6bb0:	90803fe0 	cmpeqi	r2,r18,255
    6bb4:	1000411e 	bne	r2,zero,6cbc <__subsf3+0x274>
    6bb8:	4a410034 	orhi	r9,r9,1024
    6bbc:	003fc306 	br	6acc <__subsf3+0x84>
    6bc0:	02c0450e 	bge	zero,r11,6cd8 <__subsf3+0x290>
    6bc4:	50001f26 	beq	r10,zero,6c44 <__subsf3+0x1fc>
    6bc8:	90803fe0 	cmpeqi	r2,r18,255
    6bcc:	10003b1e 	bne	r2,zero,6cbc <__subsf3+0x274>
    6bd0:	4a410034 	orhi	r9,r9,1024
    6bd4:	58800710 	cmplti	r2,r11,28
    6bd8:	1000701e 	bne	r2,zero,6d9c <__subsf3+0x354>
    6bdc:	01000044 	movi	r4,1
    6be0:	2209883a 	add	r4,r4,r8
    6be4:	2081002c 	andhi	r2,r4,1024
    6be8:	10002826 	beq	r2,zero,6c8c <__subsf3+0x244>
    6bec:	94800044 	addi	r18,r18,1
    6bf0:	90803fe0 	cmpeqi	r2,r18,255
    6bf4:	10001a1e 	bne	r2,zero,6c60 <__subsf3+0x218>
    6bf8:	2004d07a 	srli	r2,r4,1
    6bfc:	00df8034 	movhi	r3,32256
    6c00:	18ffffc4 	addi	r3,r3,-1
    6c04:	2100004c 	andi	r4,r4,1
    6c08:	10c4703a 	and	r2,r2,r3
    6c0c:	1108b03a 	or	r4,r2,r4
    6c10:	003fc006 	br	6b14 <__subsf3+0xcc>
    6c14:	90c00044 	addi	r3,r18,1
    6c18:	18c03f8c 	andi	r3,r3,254
    6c1c:	1800571e 	bne	r3,zero,6d7c <__subsf3+0x334>
    6c20:	90007a1e 	bne	r18,zero,6e0c <__subsf3+0x3c4>
    6c24:	4000a126 	beq	r8,zero,6eac <__subsf3+0x464>
    6c28:	48008d26 	beq	r9,zero,6e60 <__subsf3+0x418>
    6c2c:	4249c83a 	sub	r4,r8,r9
    6c30:	20c1002c 	andhi	r3,r4,1024
    6c34:	1800a726 	beq	r3,zero,6ed4 <__subsf3+0x48c>
    6c38:	4a09c83a 	sub	r4,r9,r8
    6c3c:	1023883a 	mov	r17,r2
    6c40:	003fb406 	br	6b14 <__subsf3+0xcc>
    6c44:	48003126 	beq	r9,zero,6d0c <__subsf3+0x2c4>
    6c48:	58bfffc4 	addi	r2,r11,-1
    6c4c:	10007526 	beq	r2,zero,6e24 <__subsf3+0x3dc>
    6c50:	5ac03fe0 	cmpeqi	r11,r11,255
    6c54:	5800191e 	bne	r11,zero,6cbc <__subsf3+0x274>
    6c58:	1017883a 	mov	r11,r2
    6c5c:	003fdd06 	br	6bd4 <__subsf3+0x18c>
    6c60:	00ffffc4 	movi	r3,-1
    6c64:	0009883a 	mov	r4,zero
    6c68:	003fb706 	br	6b48 <__subsf3+0x100>
    6c6c:	90c00044 	addi	r3,r18,1
    6c70:	19403f8c 	andi	r5,r3,254
    6c74:	28005026 	beq	r5,zero,6db8 <__subsf3+0x370>
    6c78:	18803fe0 	cmpeqi	r2,r3,255
    6c7c:	103ff81e 	bne	r2,zero,6c60 <__subsf3+0x218>
    6c80:	4249883a 	add	r4,r8,r9
    6c84:	2008d07a 	srli	r4,r4,1
    6c88:	1825883a 	mov	r18,r3
    6c8c:	208001cc 	andi	r2,r4,7
    6c90:	103fa21e 	bne	r2,zero,6b1c <__subsf3+0xd4>
    6c94:	2018d0fa 	srli	r12,r4,3
    6c98:	90803fe0 	cmpeqi	r2,r18,255
    6c9c:	1000071e 	bne	r2,zero,6cbc <__subsf3+0x274>
    6ca0:	01002034 	movhi	r4,128
    6ca4:	213fffc4 	addi	r4,r4,-1
    6ca8:	6108703a 	and	r4,r12,r4
    6cac:	9007883a 	mov	r3,r18
    6cb0:	003fa506 	br	6b48 <__subsf3+0x100>
    6cb4:	40006c1e 	bne	r8,zero,6e68 <__subsf3+0x420>
    6cb8:	3819883a 	mov	r12,r7
    6cbc:	603fe826 	beq	r12,zero,6c60 <__subsf3+0x218>
    6cc0:	00802034 	movhi	r2,128
    6cc4:	61001034 	orhi	r4,r12,64
    6cc8:	10bfffc4 	addi	r2,r2,-1
    6ccc:	2088703a 	and	r4,r4,r2
    6cd0:	00ffffc4 	movi	r3,-1
    6cd4:	003f9c06 	br	6b48 <__subsf3+0x100>
    6cd8:	583fe426 	beq	r11,zero,6c6c <__subsf3+0x224>
    6cdc:	5497c83a 	sub	r11,r10,r18
    6ce0:	90004026 	beq	r18,zero,6de4 <__subsf3+0x39c>
    6ce4:	50803fe0 	cmpeqi	r2,r10,255
    6ce8:	103ff31e 	bne	r2,zero,6cb8 <__subsf3+0x270>
    6cec:	42010034 	orhi	r8,r8,1024
    6cf0:	58800710 	cmplti	r2,r11,28
    6cf4:	1000641e 	bne	r2,zero,6e88 <__subsf3+0x440>
    6cf8:	01000044 	movi	r4,1
    6cfc:	2249883a 	add	r4,r4,r9
    6d00:	5025883a 	mov	r18,r10
    6d04:	003fb706 	br	6be4 <__subsf3+0x19c>
    6d08:	3819883a 	mov	r12,r7
    6d0c:	5825883a 	mov	r18,r11
    6d10:	003fe106 	br	6c98 <__subsf3+0x250>
    6d14:	1485c83a 	sub	r2,r2,r18
    6d18:	14000044 	addi	r16,r2,1
    6d1c:	00800804 	movi	r2,32
    6d20:	1405c83a 	sub	r2,r2,r16
    6d24:	2084983a 	sll	r2,r4,r2
    6d28:	2408d83a 	srl	r4,r4,r16
    6d2c:	0025883a 	mov	r18,zero
    6d30:	1004c03a 	cmpne	r2,r2,zero
    6d34:	1108b03a 	or	r4,r2,r4
    6d38:	003f7606 	br	6b14 <__subsf3+0xcc>
    6d3c:	01000804 	movi	r4,32
    6d40:	22c9c83a 	sub	r4,r4,r11
    6d44:	4908983a 	sll	r4,r9,r4
    6d48:	4ad2d83a 	srl	r9,r9,r11
    6d4c:	2008c03a 	cmpne	r4,r4,zero
    6d50:	2248b03a 	or	r4,r4,r9
    6d54:	003f6006 	br	6ad8 <__subsf3+0x90>
    6d58:	50803fe0 	cmpeqi	r2,r10,255
    6d5c:	103fd61e 	bne	r2,zero,6cb8 <__subsf3+0x270>
    6d60:	42010034 	orhi	r8,r8,1024
    6d64:	58800710 	cmplti	r2,r11,28
    6d68:	1000361e 	bne	r2,zero,6e44 <__subsf3+0x3fc>
    6d6c:	01000044 	movi	r4,1
    6d70:	4909c83a 	sub	r4,r9,r4
    6d74:	5025883a 	mov	r18,r10
    6d78:	003f5806 	br	6adc <__subsf3+0x94>
    6d7c:	4261c83a 	sub	r16,r8,r9
    6d80:	80c1002c 	andhi	r3,r16,1024
    6d84:	18001e1e 	bne	r3,zero,6e00 <__subsf3+0x3b8>
    6d88:	803f591e 	bne	r16,zero,6af0 <__subsf3+0xa8>
    6d8c:	0023883a 	mov	r17,zero
    6d90:	0007883a 	mov	r3,zero
    6d94:	0009883a 	mov	r4,zero
    6d98:	003f6b06 	br	6b48 <__subsf3+0x100>
    6d9c:	01000804 	movi	r4,32
    6da0:	22c9c83a 	sub	r4,r4,r11
    6da4:	4908983a 	sll	r4,r9,r4
    6da8:	4ad2d83a 	srl	r9,r9,r11
    6dac:	2008c03a 	cmpne	r4,r4,zero
    6db0:	2248b03a 	or	r4,r4,r9
    6db4:	003f8a06 	br	6be0 <__subsf3+0x198>
    6db8:	903fbe1e 	bne	r18,zero,6cb4 <__subsf3+0x26c>
    6dbc:	40004226 	beq	r8,zero,6ec8 <__subsf3+0x480>
    6dc0:	48002726 	beq	r9,zero,6e60 <__subsf3+0x418>
    6dc4:	4249883a 	add	r4,r8,r9
    6dc8:	2081002c 	andhi	r2,r4,1024
    6dcc:	103faf26 	beq	r2,zero,6c8c <__subsf3+0x244>
    6dd0:	00bf0034 	movhi	r2,64512
    6dd4:	10bfffc4 	addi	r2,r2,-1
    6dd8:	2088703a 	and	r4,r4,r2
    6ddc:	04800044 	movi	r18,1
    6de0:	003faa06 	br	6c8c <__subsf3+0x244>
    6de4:	403fc826 	beq	r8,zero,6d08 <__subsf3+0x2c0>
    6de8:	58bfffc4 	addi	r2,r11,-1
    6dec:	10000d26 	beq	r2,zero,6e24 <__subsf3+0x3dc>
    6df0:	5ac03fe0 	cmpeqi	r11,r11,255
    6df4:	583fb01e 	bne	r11,zero,6cb8 <__subsf3+0x270>
    6df8:	1017883a 	mov	r11,r2
    6dfc:	003fbc06 	br	6cf0 <__subsf3+0x2a8>
    6e00:	4a21c83a 	sub	r16,r9,r8
    6e04:	1023883a 	mov	r17,r2
    6e08:	003f3906 	br	6af0 <__subsf3+0xa8>
    6e0c:	4000161e 	bne	r8,zero,6e68 <__subsf3+0x420>
    6e10:	48001a1e 	bne	r9,zero,6e7c <__subsf3+0x434>
    6e14:	01002034 	movhi	r4,128
    6e18:	0023883a 	mov	r17,zero
    6e1c:	213fffc4 	addi	r4,r4,-1
    6e20:	003fab06 	br	6cd0 <__subsf3+0x288>
    6e24:	4249883a 	add	r4,r8,r9
    6e28:	2081002c 	andhi	r2,r4,1024
    6e2c:	10001d26 	beq	r2,zero,6ea4 <__subsf3+0x45c>
    6e30:	04800084 	movi	r18,2
    6e34:	003f7006 	br	6bf8 <__subsf3+0x1b0>
    6e38:	4249c83a 	sub	r4,r8,r9
    6e3c:	04800044 	movi	r18,1
    6e40:	003f2606 	br	6adc <__subsf3+0x94>
    6e44:	00c00804 	movi	r3,32
    6e48:	1ac7c83a 	sub	r3,r3,r11
    6e4c:	40c6983a 	sll	r3,r8,r3
    6e50:	42d0d83a 	srl	r8,r8,r11
    6e54:	1808c03a 	cmpne	r4,r3,zero
    6e58:	2208b03a 	or	r4,r4,r8
    6e5c:	003fc406 	br	6d70 <__subsf3+0x328>
    6e60:	0007883a 	mov	r3,zero
    6e64:	003f3806 	br	6b48 <__subsf3+0x100>
    6e68:	483f9426 	beq	r9,zero,6cbc <__subsf3+0x274>
    6e6c:	2100102c 	andhi	r4,r4,64
    6e70:	203f9226 	beq	r4,zero,6cbc <__subsf3+0x274>
    6e74:	38c0102c 	andhi	r3,r7,64
    6e78:	183f901e 	bne	r3,zero,6cbc <__subsf3+0x274>
    6e7c:	1023883a 	mov	r17,r2
    6e80:	3819883a 	mov	r12,r7
    6e84:	003f8d06 	br	6cbc <__subsf3+0x274>
    6e88:	01000804 	movi	r4,32
    6e8c:	22c9c83a 	sub	r4,r4,r11
    6e90:	4106983a 	sll	r3,r8,r4
    6e94:	42d0d83a 	srl	r8,r8,r11
    6e98:	1808c03a 	cmpne	r4,r3,zero
    6e9c:	2208b03a 	or	r4,r4,r8
    6ea0:	003f9606 	br	6cfc <__subsf3+0x2b4>
    6ea4:	04800044 	movi	r18,1
    6ea8:	003f7806 	br	6c8c <__subsf3+0x244>
    6eac:	483fb726 	beq	r9,zero,6d8c <__subsf3+0x344>
    6eb0:	1023883a 	mov	r17,r2
    6eb4:	3809883a 	mov	r4,r7
    6eb8:	003f2306 	br	6b48 <__subsf3+0x100>
    6ebc:	4a09c83a 	sub	r4,r9,r8
    6ec0:	04800044 	movi	r18,1
    6ec4:	003f0506 	br	6adc <__subsf3+0x94>
    6ec8:	3809883a 	mov	r4,r7
    6ecc:	0007883a 	mov	r3,zero
    6ed0:	003f1d06 	br	6b48 <__subsf3+0x100>
    6ed4:	203fad26 	beq	r4,zero,6d8c <__subsf3+0x344>
    6ed8:	003f6c06 	br	6c8c <__subsf3+0x244>

00006edc <__fixsfsi>:
    6edc:	200ad5fa 	srli	r5,r4,23
    6ee0:	00c02034 	movhi	r3,128
    6ee4:	18ffffc4 	addi	r3,r3,-1
    6ee8:	29403fcc 	andi	r5,r5,255
    6eec:	29801fd0 	cmplti	r6,r5,127
    6ef0:	200ed7fa 	srli	r7,r4,31
    6ef4:	1906703a 	and	r3,r3,r4
    6ef8:	3000061e 	bne	r6,zero,6f14 <__fixsfsi+0x38>
    6efc:	28802790 	cmplti	r2,r5,158
    6f00:	1000061e 	bne	r2,zero,6f1c <__fixsfsi+0x40>
    6f04:	00a00034 	movhi	r2,32768
    6f08:	10bfffc4 	addi	r2,r2,-1
    6f0c:	3885883a 	add	r2,r7,r2
    6f10:	f800283a 	ret
    6f14:	0005883a 	mov	r2,zero
    6f18:	f800283a 	ret
    6f1c:	28802590 	cmplti	r2,r5,150
    6f20:	18c02034 	orhi	r3,r3,128
    6f24:	1000051e 	bne	r2,zero,6f3c <__fixsfsi+0x60>
    6f28:	28bfda84 	addi	r2,r5,-150
    6f2c:	1884983a 	sll	r2,r3,r2
    6f30:	383ff926 	beq	r7,zero,6f18 <__fixsfsi+0x3c>
    6f34:	0085c83a 	sub	r2,zero,r2
    6f38:	f800283a 	ret
    6f3c:	00802584 	movi	r2,150
    6f40:	1145c83a 	sub	r2,r2,r5
    6f44:	1884d83a 	srl	r2,r3,r2
    6f48:	003ff906 	br	6f30 <__fixsfsi+0x54>

00006f4c <__floatsisf>:
    6f4c:	defffd04 	addi	sp,sp,-12
    6f50:	dfc00215 	stw	ra,8(sp)
    6f54:	dc400115 	stw	r17,4(sp)
    6f58:	dc000015 	stw	r16,0(sp)
    6f5c:	20001226 	beq	r4,zero,6fa8 <__floatsisf+0x5c>
    6f60:	2022d7fa 	srli	r17,r4,31
    6f64:	2021883a 	mov	r16,r4
    6f68:	20003816 	blt	r4,zero,704c <__floatsisf+0x100>
    6f6c:	8009883a 	mov	r4,r16
    6f70:	00099740 	call	9974 <__clzsi2>
    6f74:	1009883a 	mov	r4,r2
    6f78:	00802784 	movi	r2,158
    6f7c:	1105c83a 	sub	r2,r2,r4
    6f80:	10c025c8 	cmpgei	r3,r2,151
    6f84:	1800151e 	bne	r3,zero,6fdc <__floatsisf+0x90>
    6f88:	20c00248 	cmpgei	r3,r4,9
    6f8c:	18003126 	beq	r3,zero,7054 <__floatsisf+0x108>
    6f90:	213ffe04 	addi	r4,r4,-8
    6f94:	8120983a 	sll	r16,r16,r4
    6f98:	00c02034 	movhi	r3,128
    6f9c:	18ffffc4 	addi	r3,r3,-1
    6fa0:	80e0703a 	and	r16,r16,r3
    6fa4:	00000306 	br	6fb4 <__floatsisf+0x68>
    6fa8:	0023883a 	mov	r17,zero
    6fac:	0005883a 	mov	r2,zero
    6fb0:	0021883a 	mov	r16,zero
    6fb4:	10803fcc 	andi	r2,r2,255
    6fb8:	100495fa 	slli	r2,r2,23
    6fbc:	882297fa 	slli	r17,r17,31
    6fc0:	1404b03a 	or	r2,r2,r16
    6fc4:	1444b03a 	or	r2,r2,r17
    6fc8:	dfc00217 	ldw	ra,8(sp)
    6fcc:	dc400117 	ldw	r17,4(sp)
    6fd0:	dc000017 	ldw	r16,0(sp)
    6fd4:	dec00304 	addi	sp,sp,12
    6fd8:	f800283a 	ret
    6fdc:	10c02690 	cmplti	r3,r2,154
    6fe0:	1800071e 	bne	r3,zero,7000 <__floatsisf+0xb4>
    6fe4:	20c006c4 	addi	r3,r4,27
    6fe8:	01400144 	movi	r5,5
    6fec:	80c6983a 	sll	r3,r16,r3
    6ff0:	290bc83a 	sub	r5,r5,r4
    6ff4:	814ad83a 	srl	r5,r16,r5
    6ff8:	1806c03a 	cmpne	r3,r3,zero
    6ffc:	28e0b03a 	or	r16,r5,r3
    7000:	20c00188 	cmpgei	r3,r4,6
    7004:	1800171e 	bne	r3,zero,7064 <__floatsisf+0x118>
    7008:	00ff0034 	movhi	r3,64512
    700c:	18ffffc4 	addi	r3,r3,-1
    7010:	818001cc 	andi	r6,r16,7
    7014:	80ca703a 	and	r5,r16,r3
    7018:	30000926 	beq	r6,zero,7040 <__floatsisf+0xf4>
    701c:	818003cc 	andi	r6,r16,15
    7020:	31800120 	cmpeqi	r6,r6,4
    7024:	3000061e 	bne	r6,zero,7040 <__floatsisf+0xf4>
    7028:	29400104 	addi	r5,r5,4
    702c:	2981002c 	andhi	r6,r5,1024
    7030:	30000326 	beq	r6,zero,7040 <__floatsisf+0xf4>
    7034:	28ca703a 	and	r5,r5,r3
    7038:	00c027c4 	movi	r3,159
    703c:	1905c83a 	sub	r2,r3,r4
    7040:	282091ba 	slli	r16,r5,6
    7044:	8020d27a 	srli	r16,r16,9
    7048:	003fda06 	br	6fb4 <__floatsisf+0x68>
    704c:	0121c83a 	sub	r16,zero,r4
    7050:	003fc606 	br	6f6c <__floatsisf+0x20>
    7054:	01002034 	movhi	r4,128
    7058:	213fffc4 	addi	r4,r4,-1
    705c:	8120703a 	and	r16,r16,r4
    7060:	003fd406 	br	6fb4 <__floatsisf+0x68>
    7064:	20fffec4 	addi	r3,r4,-5
    7068:	80e0983a 	sll	r16,r16,r3
    706c:	003fe606 	br	7008 <__floatsisf+0xbc>

00007070 <__adddf3>:
    7070:	02000434 	movhi	r8,16
    7074:	423fffc4 	addi	r8,r8,-1
    7078:	2806d53a 	srli	r3,r5,20
    707c:	3804d53a 	srli	r2,r7,20
    7080:	2a14703a 	and	r10,r5,r8
    7084:	3a12703a 	and	r9,r7,r8
    7088:	280ad7fa 	srli	r5,r5,31
    708c:	501490fa 	slli	r10,r10,3
    7090:	2018d77a 	srli	r12,r4,29
    7094:	481290fa 	slli	r9,r9,3
    7098:	3016d77a 	srli	r11,r6,29
    709c:	380ed7fa 	srli	r7,r7,31
    70a0:	defffb04 	addi	sp,sp,-20
    70a4:	dc800215 	stw	r18,8(sp)
    70a8:	dc000015 	stw	r16,0(sp)
    70ac:	1c81ffcc 	andi	r18,r3,2047
    70b0:	1081ffcc 	andi	r2,r2,2047
    70b4:	dfc00415 	stw	ra,16(sp)
    70b8:	dcc00315 	stw	r19,12(sp)
    70bc:	dc400115 	stw	r17,4(sp)
    70c0:	201c90fa 	slli	r14,r4,3
    70c4:	301a90fa 	slli	r13,r6,3
    70c8:	2821883a 	mov	r16,r5
    70cc:	6294b03a 	or	r10,r12,r10
    70d0:	5a52b03a 	or	r9,r11,r9
    70d4:	9087c83a 	sub	r3,r18,r2
    70d8:	29c06126 	beq	r5,r7,7260 <__adddf3+0x1f0>
    70dc:	00c0550e 	bge	zero,r3,7234 <__adddf3+0x1c4>
    70e0:	10007326 	beq	r2,zero,72b0 <__adddf3+0x240>
    70e4:	9081ffd8 	cmpnei	r2,r18,2047
    70e8:	1000b826 	beq	r2,zero,73cc <__adddf3+0x35c>
    70ec:	4a402034 	orhi	r9,r9,128
    70f0:	18800e48 	cmpgei	r2,r3,57
    70f4:	1000ee1e 	bne	r2,zero,74b0 <__adddf3+0x440>
    70f8:	18800808 	cmpgei	r2,r3,32
    70fc:	10012d1e 	bne	r2,zero,75b4 <__adddf3+0x544>
    7100:	00800804 	movi	r2,32
    7104:	10c5c83a 	sub	r2,r2,r3
    7108:	68c8d83a 	srl	r4,r13,r3
    710c:	48a2983a 	sll	r17,r9,r2
    7110:	689a983a 	sll	r13,r13,r2
    7114:	48c6d83a 	srl	r3,r9,r3
    7118:	8922b03a 	or	r17,r17,r4
    711c:	681ac03a 	cmpne	r13,r13,zero
    7120:	8b62b03a 	or	r17,r17,r13
    7124:	50d5c83a 	sub	r10,r10,r3
    7128:	7463c83a 	sub	r17,r14,r17
    712c:	7451803a 	cmpltu	r8,r14,r17
    7130:	5211c83a 	sub	r8,r10,r8
    7134:	4080202c 	andhi	r2,r8,128
    7138:	10008826 	beq	r2,zero,735c <__adddf3+0x2ec>
    713c:	02402034 	movhi	r9,128
    7140:	4a7fffc4 	addi	r9,r9,-1
    7144:	4266703a 	and	r19,r8,r9
    7148:	9800ae26 	beq	r19,zero,7404 <__adddf3+0x394>
    714c:	9809883a 	mov	r4,r19
    7150:	00099740 	call	9974 <__clzsi2>
    7154:	10fffe04 	addi	r3,r2,-8
    7158:	02000804 	movi	r8,32
    715c:	40d1c83a 	sub	r8,r8,r3
    7160:	8a10d83a 	srl	r8,r17,r8
    7164:	98d2983a 	sll	r9,r19,r3
    7168:	88e2983a 	sll	r17,r17,r3
    716c:	4250b03a 	or	r8,r8,r9
    7170:	1c80ad16 	blt	r3,r18,7428 <__adddf3+0x3b8>
    7174:	1c87c83a 	sub	r3,r3,r18
    7178:	19000044 	addi	r4,r3,1
    717c:	20800808 	cmpgei	r2,r4,32
    7180:	10006a1e 	bne	r2,zero,732c <__adddf3+0x2bc>
    7184:	00800804 	movi	r2,32
    7188:	1105c83a 	sub	r2,r2,r4
    718c:	8906d83a 	srl	r3,r17,r4
    7190:	88a2983a 	sll	r17,r17,r2
    7194:	4084983a 	sll	r2,r8,r2
    7198:	4110d83a 	srl	r8,r8,r4
    719c:	8822c03a 	cmpne	r17,r17,zero
    71a0:	10c4b03a 	or	r2,r2,r3
    71a4:	1462b03a 	or	r17,r2,r17
    71a8:	0025883a 	mov	r18,zero
    71ac:	888001cc 	andi	r2,r17,7
    71b0:	10000726 	beq	r2,zero,71d0 <__adddf3+0x160>
    71b4:	888003cc 	andi	r2,r17,15
    71b8:	10800120 	cmpeqi	r2,r2,4
    71bc:	1000041e 	bne	r2,zero,71d0 <__adddf3+0x160>
    71c0:	88c00104 	addi	r3,r17,4
    71c4:	1c63803a 	cmpltu	r17,r3,r17
    71c8:	4451883a 	add	r8,r8,r17
    71cc:	1823883a 	mov	r17,r3
    71d0:	4080202c 	andhi	r2,r8,128
    71d4:	10006326 	beq	r2,zero,7364 <__adddf3+0x2f4>
    71d8:	90c00044 	addi	r3,r18,1
    71dc:	1881ffe0 	cmpeqi	r2,r3,2047
    71e0:	18c1ffcc 	andi	r3,r3,2047
    71e4:	1000751e 	bne	r2,zero,73bc <__adddf3+0x34c>
    71e8:	00bfe034 	movhi	r2,65408
    71ec:	10bfffc4 	addi	r2,r2,-1
    71f0:	4090703a 	and	r8,r8,r2
    71f4:	4004977a 	slli	r2,r8,29
    71f8:	4010927a 	slli	r8,r8,9
    71fc:	8822d0fa 	srli	r17,r17,3
    7200:	4010d33a 	srli	r8,r8,12
    7204:	1444b03a 	or	r2,r2,r17
    7208:	1806953a 	slli	r3,r3,20
    720c:	802097fa 	slli	r16,r16,31
    7210:	1a06b03a 	or	r3,r3,r8
    7214:	1c06b03a 	or	r3,r3,r16
    7218:	dfc00417 	ldw	ra,16(sp)
    721c:	dcc00317 	ldw	r19,12(sp)
    7220:	dc800217 	ldw	r18,8(sp)
    7224:	dc400117 	ldw	r17,4(sp)
    7228:	dc000017 	ldw	r16,0(sp)
    722c:	dec00504 	addi	sp,sp,20
    7230:	f800283a 	ret
    7234:	18002626 	beq	r3,zero,72d0 <__adddf3+0x260>
    7238:	1487c83a 	sub	r3,r2,r18
    723c:	9000b51e 	bne	r18,zero,7514 <__adddf3+0x4a4>
    7240:	5388b03a 	or	r4,r10,r14
    7244:	20010f26 	beq	r4,zero,7684 <__adddf3+0x614>
    7248:	193fffc4 	addi	r4,r3,-1
    724c:	20016126 	beq	r4,zero,77d4 <__adddf3+0x764>
    7250:	18c1ffd8 	cmpnei	r3,r3,2047
    7254:	18012e26 	beq	r3,zero,7710 <__adddf3+0x6a0>
    7258:	2007883a 	mov	r3,r4
    725c:	0000b006 	br	7520 <__adddf3+0x4b0>
    7260:	00c0760e 	bge	zero,r3,743c <__adddf3+0x3cc>
    7264:	10002926 	beq	r2,zero,730c <__adddf3+0x29c>
    7268:	9081ffd8 	cmpnei	r2,r18,2047
    726c:	10012126 	beq	r2,zero,76f4 <__adddf3+0x684>
    7270:	4a402034 	orhi	r9,r9,128
    7274:	18800e48 	cmpgei	r2,r3,57
    7278:	1000461e 	bne	r2,zero,7394 <__adddf3+0x324>
    727c:	18800808 	cmpgei	r2,r3,32
    7280:	1000e326 	beq	r2,zero,7610 <__adddf3+0x5a0>
    7284:	1c7ff804 	addi	r17,r3,-32
    7288:	19000820 	cmpeqi	r4,r3,32
    728c:	4c44d83a 	srl	r2,r9,r17
    7290:	2000041e 	bne	r4,zero,72a4 <__adddf3+0x234>
    7294:	01001004 	movi	r4,64
    7298:	20c7c83a 	sub	r3,r4,r3
    729c:	48d2983a 	sll	r9,r9,r3
    72a0:	6a5ab03a 	or	r13,r13,r9
    72a4:	6822c03a 	cmpne	r17,r13,zero
    72a8:	88a2b03a 	or	r17,r17,r2
    72ac:	00003b06 	br	739c <__adddf3+0x32c>
    72b0:	4b44b03a 	or	r2,r9,r13
    72b4:	10008126 	beq	r2,zero,74bc <__adddf3+0x44c>
    72b8:	18bfffc4 	addi	r2,r3,-1
    72bc:	10010726 	beq	r2,zero,76dc <__adddf3+0x66c>
    72c0:	18c1ffd8 	cmpnei	r3,r3,2047
    72c4:	18004126 	beq	r3,zero,73cc <__adddf3+0x35c>
    72c8:	1007883a 	mov	r3,r2
    72cc:	003f8806 	br	70f0 <__adddf3+0x80>
    72d0:	90800044 	addi	r2,r18,1
    72d4:	1081ff8c 	andi	r2,r2,2046
    72d8:	1000a01e 	bne	r2,zero,755c <__adddf3+0x4ec>
    72dc:	538ab03a 	or	r5,r10,r14
    72e0:	4b44b03a 	or	r2,r9,r13
    72e4:	9000ef1e 	bne	r18,zero,76a4 <__adddf3+0x634>
    72e8:	28014126 	beq	r5,zero,77f0 <__adddf3+0x780>
    72ec:	1001491e 	bne	r2,zero,7814 <__adddf3+0x7a4>
    72f0:	500a977a 	slli	r5,r10,29
    72f4:	00880034 	movhi	r2,8192
    72f8:	10bfffc4 	addi	r2,r2,-1
    72fc:	2084703a 	and	r2,r4,r2
    7300:	5014d0fa 	srli	r10,r10,3
    7304:	1144b03a 	or	r2,r2,r5
    7308:	00001d06 	br	7380 <__adddf3+0x310>
    730c:	4b44b03a 	or	r2,r9,r13
    7310:	10006a26 	beq	r2,zero,74bc <__adddf3+0x44c>
    7314:	18bfffc4 	addi	r2,r3,-1
    7318:	1000e826 	beq	r2,zero,76bc <__adddf3+0x64c>
    731c:	18c1ffd8 	cmpnei	r3,r3,2047
    7320:	1800f426 	beq	r3,zero,76f4 <__adddf3+0x684>
    7324:	1007883a 	mov	r3,r2
    7328:	003fd206 	br	7274 <__adddf3+0x204>
    732c:	18fff844 	addi	r3,r3,-31
    7330:	20800820 	cmpeqi	r2,r4,32
    7334:	40c6d83a 	srl	r3,r8,r3
    7338:	1000041e 	bne	r2,zero,734c <__adddf3+0x2dc>
    733c:	00801004 	movi	r2,64
    7340:	1109c83a 	sub	r4,r2,r4
    7344:	4110983a 	sll	r8,r8,r4
    7348:	8a22b03a 	or	r17,r17,r8
    734c:	8822c03a 	cmpne	r17,r17,zero
    7350:	88e2b03a 	or	r17,r17,r3
    7354:	0011883a 	mov	r8,zero
    7358:	0025883a 	mov	r18,zero
    735c:	888001cc 	andi	r2,r17,7
    7360:	103f941e 	bne	r2,zero,71b4 <__adddf3+0x144>
    7364:	8822d0fa 	srli	r17,r17,3
    7368:	4004977a 	slli	r2,r8,29
    736c:	4014d0fa 	srli	r10,r8,3
    7370:	9007883a 	mov	r3,r18
    7374:	8884b03a 	or	r2,r17,r2
    7378:	1901ffe0 	cmpeqi	r4,r3,2047
    737c:	2000191e 	bne	r4,zero,73e4 <__adddf3+0x374>
    7380:	02000434 	movhi	r8,16
    7384:	423fffc4 	addi	r8,r8,-1
    7388:	5210703a 	and	r8,r10,r8
    738c:	18c1ffcc 	andi	r3,r3,2047
    7390:	003f9d06 	br	7208 <__adddf3+0x198>
    7394:	4b62b03a 	or	r17,r9,r13
    7398:	8822c03a 	cmpne	r17,r17,zero
    739c:	8ba3883a 	add	r17,r17,r14
    73a0:	8b91803a 	cmpltu	r8,r17,r14
    73a4:	4291883a 	add	r8,r8,r10
    73a8:	4080202c 	andhi	r2,r8,128
    73ac:	103feb26 	beq	r2,zero,735c <__adddf3+0x2ec>
    73b0:	94800044 	addi	r18,r18,1
    73b4:	9081ffe0 	cmpeqi	r2,r18,2047
    73b8:	10007426 	beq	r2,zero,758c <__adddf3+0x51c>
    73bc:	00c1ffc4 	movi	r3,2047
    73c0:	0011883a 	mov	r8,zero
    73c4:	0005883a 	mov	r2,zero
    73c8:	003f8f06 	br	7208 <__adddf3+0x198>
    73cc:	500a977a 	slli	r5,r10,29
    73d0:	00c80034 	movhi	r3,8192
    73d4:	18ffffc4 	addi	r3,r3,-1
    73d8:	5014d0fa 	srli	r10,r10,3
    73dc:	20c4703a 	and	r2,r4,r3
    73e0:	1144b03a 	or	r2,r2,r5
    73e4:	1286b03a 	or	r3,r2,r10
    73e8:	18015926 	beq	r3,zero,7950 <__adddf3+0x8e0>
    73ec:	00c00434 	movhi	r3,16
    73f0:	18ffffc4 	addi	r3,r3,-1
    73f4:	52000234 	orhi	r8,r10,8
    73f8:	40d0703a 	and	r8,r8,r3
    73fc:	00c1ffc4 	movi	r3,2047
    7400:	003f8106 	br	7208 <__adddf3+0x198>
    7404:	8809883a 	mov	r4,r17
    7408:	00099740 	call	9974 <__clzsi2>
    740c:	10c00604 	addi	r3,r2,24
    7410:	19000808 	cmpgei	r4,r3,32
    7414:	203f5026 	beq	r4,zero,7158 <__adddf3+0xe8>
    7418:	123ffe04 	addi	r8,r2,-8
    741c:	8a10983a 	sll	r8,r17,r8
    7420:	0023883a 	mov	r17,zero
    7424:	1cbf530e 	bge	r3,r18,7174 <__adddf3+0x104>
    7428:	00bfe034 	movhi	r2,65408
    742c:	10bfffc4 	addi	r2,r2,-1
    7430:	90e5c83a 	sub	r18,r18,r3
    7434:	4090703a 	and	r8,r8,r2
    7438:	003f5c06 	br	71ac <__adddf3+0x13c>
    743c:	18002626 	beq	r3,zero,74d8 <__adddf3+0x468>
    7440:	1487c83a 	sub	r3,r2,r18
    7444:	90006e1e 	bne	r18,zero,7600 <__adddf3+0x590>
    7448:	5388b03a 	or	r4,r10,r14
    744c:	2000fd26 	beq	r4,zero,7844 <__adddf3+0x7d4>
    7450:	193fffc4 	addi	r4,r3,-1
    7454:	20013626 	beq	r4,zero,7930 <__adddf3+0x8c0>
    7458:	18c1ffd8 	cmpnei	r3,r3,2047
    745c:	1800b426 	beq	r3,zero,7730 <__adddf3+0x6c0>
    7460:	2007883a 	mov	r3,r4
    7464:	19000e48 	cmpgei	r4,r3,57
    7468:	2000b81e 	bne	r4,zero,774c <__adddf3+0x6dc>
    746c:	19000808 	cmpgei	r4,r3,32
    7470:	2001241e 	bne	r4,zero,7904 <__adddf3+0x894>
    7474:	01000804 	movi	r4,32
    7478:	20c9c83a 	sub	r4,r4,r3
    747c:	5122983a 	sll	r17,r10,r4
    7480:	70cad83a 	srl	r5,r14,r3
    7484:	7108983a 	sll	r4,r14,r4
    7488:	50d4d83a 	srl	r10,r10,r3
    748c:	8962b03a 	or	r17,r17,r5
    7490:	2008c03a 	cmpne	r4,r4,zero
    7494:	8922b03a 	or	r17,r17,r4
    7498:	4a93883a 	add	r9,r9,r10
    749c:	8b63883a 	add	r17,r17,r13
    74a0:	8b51803a 	cmpltu	r8,r17,r13
    74a4:	4251883a 	add	r8,r8,r9
    74a8:	1025883a 	mov	r18,r2
    74ac:	003fbe06 	br	73a8 <__adddf3+0x338>
    74b0:	4b62b03a 	or	r17,r9,r13
    74b4:	8822c03a 	cmpne	r17,r17,zero
    74b8:	003f1b06 	br	7128 <__adddf3+0xb8>
    74bc:	500c977a 	slli	r6,r10,29
    74c0:	01480034 	movhi	r5,8192
    74c4:	297fffc4 	addi	r5,r5,-1
    74c8:	2144703a 	and	r2,r4,r5
    74cc:	5014d0fa 	srli	r10,r10,3
    74d0:	3084b03a 	or	r2,r6,r2
    74d4:	003fa806 	br	7378 <__adddf3+0x308>
    74d8:	90800044 	addi	r2,r18,1
    74dc:	1141ff8c 	andi	r5,r2,2046
    74e0:	2800561e 	bne	r5,zero,763c <__adddf3+0x5cc>
    74e4:	5384b03a 	or	r2,r10,r14
    74e8:	9000a61e 	bne	r18,zero,7784 <__adddf3+0x714>
    74ec:	1000ee26 	beq	r2,zero,78a8 <__adddf3+0x838>
    74f0:	4b44b03a 	or	r2,r9,r13
    74f4:	1000f31e 	bne	r2,zero,78c4 <__adddf3+0x854>
    74f8:	5004977a 	slli	r2,r10,29
    74fc:	01480034 	movhi	r5,8192
    7500:	297fffc4 	addi	r5,r5,-1
    7504:	2148703a 	and	r4,r4,r5
    7508:	5014d0fa 	srli	r10,r10,3
    750c:	1104b03a 	or	r2,r2,r4
    7510:	003f9b06 	br	7380 <__adddf3+0x310>
    7514:	1101ffd8 	cmpnei	r4,r2,2047
    7518:	20007d26 	beq	r4,zero,7710 <__adddf3+0x6a0>
    751c:	52802034 	orhi	r10,r10,128
    7520:	19000e48 	cmpgei	r4,r3,57
    7524:	20002e1e 	bne	r4,zero,75e0 <__adddf3+0x570>
    7528:	19000808 	cmpgei	r4,r3,32
    752c:	20008a1e 	bne	r4,zero,7758 <__adddf3+0x6e8>
    7530:	01000804 	movi	r4,32
    7534:	20c9c83a 	sub	r4,r4,r3
    7538:	5122983a 	sll	r17,r10,r4
    753c:	70cad83a 	srl	r5,r14,r3
    7540:	711c983a 	sll	r14,r14,r4
    7544:	50d4d83a 	srl	r10,r10,r3
    7548:	8962b03a 	or	r17,r17,r5
    754c:	701cc03a 	cmpne	r14,r14,zero
    7550:	8ba2b03a 	or	r17,r17,r14
    7554:	4a93c83a 	sub	r9,r9,r10
    7558:	00002306 	br	75e8 <__adddf3+0x578>
    755c:	7363c83a 	sub	r17,r14,r13
    7560:	5267c83a 	sub	r19,r10,r9
    7564:	7451803a 	cmpltu	r8,r14,r17
    7568:	9a27c83a 	sub	r19,r19,r8
    756c:	9880202c 	andhi	r2,r19,128
    7570:	10003e1e 	bne	r2,zero,766c <__adddf3+0x5fc>
    7574:	8cc4b03a 	or	r2,r17,r19
    7578:	103ef31e 	bne	r2,zero,7148 <__adddf3+0xd8>
    757c:	0015883a 	mov	r10,zero
    7580:	0021883a 	mov	r16,zero
    7584:	003f7e06 	br	7380 <__adddf3+0x310>
    7588:	04800084 	movi	r18,2
    758c:	00bfe034 	movhi	r2,65408
    7590:	10bfffc4 	addi	r2,r2,-1
    7594:	8806d07a 	srli	r3,r17,1
    7598:	4090703a 	and	r8,r8,r2
    759c:	400497fa 	slli	r2,r8,31
    75a0:	8c40004c 	andi	r17,r17,1
    75a4:	1c62b03a 	or	r17,r3,r17
    75a8:	4010d07a 	srli	r8,r8,1
    75ac:	1462b03a 	or	r17,r2,r17
    75b0:	003efe06 	br	71ac <__adddf3+0x13c>
    75b4:	1c7ff804 	addi	r17,r3,-32
    75b8:	19000820 	cmpeqi	r4,r3,32
    75bc:	4c44d83a 	srl	r2,r9,r17
    75c0:	2000041e 	bne	r4,zero,75d4 <__adddf3+0x564>
    75c4:	01001004 	movi	r4,64
    75c8:	20c7c83a 	sub	r3,r4,r3
    75cc:	48d2983a 	sll	r9,r9,r3
    75d0:	6a5ab03a 	or	r13,r13,r9
    75d4:	6822c03a 	cmpne	r17,r13,zero
    75d8:	88a2b03a 	or	r17,r17,r2
    75dc:	003ed206 	br	7128 <__adddf3+0xb8>
    75e0:	5394b03a 	or	r10,r10,r14
    75e4:	5022c03a 	cmpne	r17,r10,zero
    75e8:	6c63c83a 	sub	r17,r13,r17
    75ec:	6c51803a 	cmpltu	r8,r13,r17
    75f0:	4a11c83a 	sub	r8,r9,r8
    75f4:	3821883a 	mov	r16,r7
    75f8:	1025883a 	mov	r18,r2
    75fc:	003ecd06 	br	7134 <__adddf3+0xc4>
    7600:	1101ffd8 	cmpnei	r4,r2,2047
    7604:	20004a26 	beq	r4,zero,7730 <__adddf3+0x6c0>
    7608:	52802034 	orhi	r10,r10,128
    760c:	003f9506 	br	7464 <__adddf3+0x3f4>
    7610:	00800804 	movi	r2,32
    7614:	10c5c83a 	sub	r2,r2,r3
    7618:	68c8d83a 	srl	r4,r13,r3
    761c:	48a2983a 	sll	r17,r9,r2
    7620:	689a983a 	sll	r13,r13,r2
    7624:	48c6d83a 	srl	r3,r9,r3
    7628:	8922b03a 	or	r17,r17,r4
    762c:	681ac03a 	cmpne	r13,r13,zero
    7630:	8b62b03a 	or	r17,r17,r13
    7634:	50d5883a 	add	r10,r10,r3
    7638:	003f5806 	br	739c <__adddf3+0x32c>
    763c:	10c1ffe0 	cmpeqi	r3,r2,2047
    7640:	183f5e1e 	bne	r3,zero,73bc <__adddf3+0x34c>
    7644:	7351883a 	add	r8,r14,r13
    7648:	4387803a 	cmpltu	r3,r8,r14
    764c:	5255883a 	add	r10,r10,r9
    7650:	50c7883a 	add	r3,r10,r3
    7654:	401ad07a 	srli	r13,r8,1
    7658:	182297fa 	slli	r17,r3,31
    765c:	1810d07a 	srli	r8,r3,1
    7660:	1025883a 	mov	r18,r2
    7664:	8b62b03a 	or	r17,r17,r13
    7668:	003f3c06 	br	735c <__adddf3+0x2ec>
    766c:	6ba3c83a 	sub	r17,r13,r14
    7670:	4a93c83a 	sub	r9,r9,r10
    7674:	6c51803a 	cmpltu	r8,r13,r17
    7678:	4a27c83a 	sub	r19,r9,r8
    767c:	3821883a 	mov	r16,r7
    7680:	003eb106 	br	7148 <__adddf3+0xd8>
    7684:	480a977a 	slli	r5,r9,29
    7688:	01080034 	movhi	r4,8192
    768c:	213fffc4 	addi	r4,r4,-1
    7690:	3104703a 	and	r2,r6,r4
    7694:	4814d0fa 	srli	r10,r9,3
    7698:	1144b03a 	or	r2,r2,r5
    769c:	3821883a 	mov	r16,r7
    76a0:	003f3506 	br	7378 <__adddf3+0x308>
    76a4:	28006e1e 	bne	r5,zero,7860 <__adddf3+0x7f0>
    76a8:	1000191e 	bne	r2,zero,7710 <__adddf3+0x6a0>
    76ac:	0021883a 	mov	r16,zero
    76b0:	4015883a 	mov	r10,r8
    76b4:	00bfffc4 	movi	r2,-1
    76b8:	003f4c06 	br	73ec <__adddf3+0x37c>
    76bc:	7363883a 	add	r17,r14,r13
    76c0:	5255883a 	add	r10,r10,r9
    76c4:	8b91803a 	cmpltu	r8,r17,r14
    76c8:	5211883a 	add	r8,r10,r8
    76cc:	4080202c 	andhi	r2,r8,128
    76d0:	103fad1e 	bne	r2,zero,7588 <__adddf3+0x518>
    76d4:	04800044 	movi	r18,1
    76d8:	003f2006 	br	735c <__adddf3+0x2ec>
    76dc:	7363c83a 	sub	r17,r14,r13
    76e0:	5255c83a 	sub	r10,r10,r9
    76e4:	7451803a 	cmpltu	r8,r14,r17
    76e8:	5211c83a 	sub	r8,r10,r8
    76ec:	04800044 	movi	r18,1
    76f0:	003e9006 	br	7134 <__adddf3+0xc4>
    76f4:	5004977a 	slli	r2,r10,29
    76f8:	00c80034 	movhi	r3,8192
    76fc:	18ffffc4 	addi	r3,r3,-1
    7700:	20c8703a 	and	r4,r4,r3
    7704:	5014d0fa 	srli	r10,r10,3
    7708:	1104b03a 	or	r2,r2,r4
    770c:	003f3506 	br	73e4 <__adddf3+0x374>
    7710:	4806977a 	slli	r3,r9,29
    7714:	00880034 	movhi	r2,8192
    7718:	10bfffc4 	addi	r2,r2,-1
    771c:	3084703a 	and	r2,r6,r2
    7720:	4814d0fa 	srli	r10,r9,3
    7724:	10c4b03a 	or	r2,r2,r3
    7728:	3821883a 	mov	r16,r7
    772c:	003f2d06 	br	73e4 <__adddf3+0x374>
    7730:	4804977a 	slli	r2,r9,29
    7734:	00c80034 	movhi	r3,8192
    7738:	18ffffc4 	addi	r3,r3,-1
    773c:	30cc703a 	and	r6,r6,r3
    7740:	4814d0fa 	srli	r10,r9,3
    7744:	1184b03a 	or	r2,r2,r6
    7748:	003f2606 	br	73e4 <__adddf3+0x374>
    774c:	5394b03a 	or	r10,r10,r14
    7750:	5022c03a 	cmpne	r17,r10,zero
    7754:	003f5106 	br	749c <__adddf3+0x42c>
    7758:	1c7ff804 	addi	r17,r3,-32
    775c:	19400820 	cmpeqi	r5,r3,32
    7760:	5448d83a 	srl	r4,r10,r17
    7764:	2800041e 	bne	r5,zero,7778 <__adddf3+0x708>
    7768:	01401004 	movi	r5,64
    776c:	28c7c83a 	sub	r3,r5,r3
    7770:	50d4983a 	sll	r10,r10,r3
    7774:	729cb03a 	or	r14,r14,r10
    7778:	7022c03a 	cmpne	r17,r14,zero
    777c:	8922b03a 	or	r17,r17,r4
    7780:	003f9906 	br	75e8 <__adddf3+0x578>
    7784:	103fea26 	beq	r2,zero,7730 <__adddf3+0x6c0>
    7788:	4b50b03a 	or	r8,r9,r13
    778c:	500a977a 	slli	r5,r10,29
    7790:	5014d0fa 	srli	r10,r10,3
    7794:	40005626 	beq	r8,zero,78f0 <__adddf3+0x880>
    7798:	00c80034 	movhi	r3,8192
    779c:	18ffffc4 	addi	r3,r3,-1
    77a0:	20c4703a 	and	r2,r4,r3
    77a4:	5100022c 	andhi	r4,r10,8
    77a8:	1144b03a 	or	r2,r2,r5
    77ac:	203f0d26 	beq	r4,zero,73e4 <__adddf3+0x374>
    77b0:	4808d0fa 	srli	r4,r9,3
    77b4:	2140022c 	andhi	r5,r4,8
    77b8:	283f0a1e 	bne	r5,zero,73e4 <__adddf3+0x374>
    77bc:	4804977a 	slli	r2,r9,29
    77c0:	30cc703a 	and	r6,r6,r3
    77c4:	3821883a 	mov	r16,r7
    77c8:	3084b03a 	or	r2,r6,r2
    77cc:	2015883a 	mov	r10,r4
    77d0:	003f0406 	br	73e4 <__adddf3+0x374>
    77d4:	6ba3c83a 	sub	r17,r13,r14
    77d8:	4a95c83a 	sub	r10,r9,r10
    77dc:	6c51803a 	cmpltu	r8,r13,r17
    77e0:	5211c83a 	sub	r8,r10,r8
    77e4:	3821883a 	mov	r16,r7
    77e8:	04800044 	movi	r18,1
    77ec:	003e5106 	br	7134 <__adddf3+0xc4>
    77f0:	103f6226 	beq	r2,zero,757c <__adddf3+0x50c>
    77f4:	4808977a 	slli	r4,r9,29
    77f8:	00880034 	movhi	r2,8192
    77fc:	10bfffc4 	addi	r2,r2,-1
    7800:	3084703a 	and	r2,r6,r2
    7804:	4814d0fa 	srli	r10,r9,3
    7808:	1104b03a 	or	r2,r2,r4
    780c:	3821883a 	mov	r16,r7
    7810:	003edb06 	br	7380 <__adddf3+0x310>
    7814:	7363c83a 	sub	r17,r14,r13
    7818:	7445803a 	cmpltu	r2,r14,r17
    781c:	5251c83a 	sub	r8,r10,r9
    7820:	4091c83a 	sub	r8,r8,r2
    7824:	4080202c 	andhi	r2,r8,128
    7828:	10004626 	beq	r2,zero,7944 <__adddf3+0x8d4>
    782c:	6ba3c83a 	sub	r17,r13,r14
    7830:	4a95c83a 	sub	r10,r9,r10
    7834:	6c51803a 	cmpltu	r8,r13,r17
    7838:	5211c83a 	sub	r8,r10,r8
    783c:	3821883a 	mov	r16,r7
    7840:	003e5a06 	br	71ac <__adddf3+0x13c>
    7844:	4804977a 	slli	r2,r9,29
    7848:	01080034 	movhi	r4,8192
    784c:	213fffc4 	addi	r4,r4,-1
    7850:	310c703a 	and	r6,r6,r4
    7854:	4814d0fa 	srli	r10,r9,3
    7858:	1184b03a 	or	r2,r2,r6
    785c:	003ec606 	br	7378 <__adddf3+0x308>
    7860:	500a977a 	slli	r5,r10,29
    7864:	5014d0fa 	srli	r10,r10,3
    7868:	10002126 	beq	r2,zero,78f0 <__adddf3+0x880>
    786c:	00c80034 	movhi	r3,8192
    7870:	18ffffc4 	addi	r3,r3,-1
    7874:	20c4703a 	and	r2,r4,r3
    7878:	5100022c 	andhi	r4,r10,8
    787c:	1144b03a 	or	r2,r2,r5
    7880:	203ed826 	beq	r4,zero,73e4 <__adddf3+0x374>
    7884:	4808d0fa 	srli	r4,r9,3
    7888:	2140022c 	andhi	r5,r4,8
    788c:	283ed51e 	bne	r5,zero,73e4 <__adddf3+0x374>
    7890:	4812977a 	slli	r9,r9,29
    7894:	30c4703a 	and	r2,r6,r3
    7898:	3821883a 	mov	r16,r7
    789c:	1244b03a 	or	r2,r2,r9
    78a0:	2015883a 	mov	r10,r4
    78a4:	003ecf06 	br	73e4 <__adddf3+0x374>
    78a8:	4804977a 	slli	r2,r9,29
    78ac:	01080034 	movhi	r4,8192
    78b0:	213fffc4 	addi	r4,r4,-1
    78b4:	310c703a 	and	r6,r6,r4
    78b8:	4814d0fa 	srli	r10,r9,3
    78bc:	1184b03a 	or	r2,r2,r6
    78c0:	003eaf06 	br	7380 <__adddf3+0x310>
    78c4:	7363883a 	add	r17,r14,r13
    78c8:	5255883a 	add	r10,r10,r9
    78cc:	8b91803a 	cmpltu	r8,r17,r14
    78d0:	5211883a 	add	r8,r10,r8
    78d4:	4080202c 	andhi	r2,r8,128
    78d8:	103ea026 	beq	r2,zero,735c <__adddf3+0x2ec>
    78dc:	00bfe034 	movhi	r2,65408
    78e0:	10bfffc4 	addi	r2,r2,-1
    78e4:	4090703a 	and	r8,r8,r2
    78e8:	04800044 	movi	r18,1
    78ec:	003e9b06 	br	735c <__adddf3+0x2ec>
    78f0:	00880034 	movhi	r2,8192
    78f4:	10bfffc4 	addi	r2,r2,-1
    78f8:	2084703a 	and	r2,r4,r2
    78fc:	1144b03a 	or	r2,r2,r5
    7900:	003eb806 	br	73e4 <__adddf3+0x374>
    7904:	193ff804 	addi	r4,r3,-32
    7908:	19400820 	cmpeqi	r5,r3,32
    790c:	5108d83a 	srl	r4,r10,r4
    7910:	2800041e 	bne	r5,zero,7924 <__adddf3+0x8b4>
    7914:	01401004 	movi	r5,64
    7918:	28c7c83a 	sub	r3,r5,r3
    791c:	50d4983a 	sll	r10,r10,r3
    7920:	729cb03a 	or	r14,r14,r10
    7924:	7022c03a 	cmpne	r17,r14,zero
    7928:	8922b03a 	or	r17,r17,r4
    792c:	003edb06 	br	749c <__adddf3+0x42c>
    7930:	7363883a 	add	r17,r14,r13
    7934:	5255883a 	add	r10,r10,r9
    7938:	8b51803a 	cmpltu	r8,r17,r13
    793c:	5211883a 	add	r8,r10,r8
    7940:	003f6206 	br	76cc <__adddf3+0x65c>
    7944:	8a04b03a 	or	r2,r17,r8
    7948:	103f0c26 	beq	r2,zero,757c <__adddf3+0x50c>
    794c:	003e8306 	br	735c <__adddf3+0x2ec>
    7950:	0005883a 	mov	r2,zero
    7954:	00c1ffc4 	movi	r3,2047
    7958:	0011883a 	mov	r8,zero
    795c:	003e2a06 	br	7208 <__adddf3+0x198>

00007960 <__divdf3>:
    7960:	2810d53a 	srli	r8,r5,20
    7964:	defff004 	addi	sp,sp,-64
    7968:	dc000615 	stw	r16,24(sp)
    796c:	04000434 	movhi	r16,16
    7970:	ddc00d15 	stw	r23,52(sp)
    7974:	dd800c15 	stw	r22,48(sp)
    7978:	dd400b15 	stw	r21,44(sp)
    797c:	dd000a15 	stw	r20,40(sp)
    7980:	843fffc4 	addi	r16,r16,-1
    7984:	dfc00f15 	stw	ra,60(sp)
    7988:	df000e15 	stw	fp,56(sp)
    798c:	dcc00915 	stw	r19,36(sp)
    7990:	dc800815 	stw	r18,32(sp)
    7994:	dc400715 	stw	r17,28(sp)
    7998:	4201ffcc 	andi	r8,r8,2047
    799c:	282cd7fa 	srli	r22,r5,31
    79a0:	302f883a 	mov	r23,r6
    79a4:	382b883a 	mov	r21,r7
    79a8:	2029883a 	mov	r20,r4
    79ac:	2c20703a 	and	r16,r5,r16
    79b0:	40014426 	beq	r8,zero,7ec4 <__divdf3+0x564>
    79b4:	4081ffe0 	cmpeqi	r2,r8,2047
    79b8:	1001551e 	bne	r2,zero,7f10 <__divdf3+0x5b0>
    79bc:	2024d77a 	srli	r18,r4,29
    79c0:	800a90fa 	slli	r5,r16,3
    79c4:	202890fa 	slli	r20,r4,3
    79c8:	447f0044 	addi	r17,r8,-1023
    79cc:	914ab03a 	or	r5,r18,r5
    79d0:	2c802034 	orhi	r18,r5,128
    79d4:	0021883a 	mov	r16,zero
    79d8:	0039883a 	mov	fp,zero
    79dc:	a810d53a 	srli	r8,r21,20
    79e0:	00c00434 	movhi	r3,16
    79e4:	18ffffc4 	addi	r3,r3,-1
    79e8:	4201ffcc 	andi	r8,r8,2047
    79ec:	a826d7fa 	srli	r19,r21,31
    79f0:	a8ea703a 	and	r21,r21,r3
    79f4:	40012226 	beq	r8,zero,7e80 <__divdf3+0x520>
    79f8:	4081ffe0 	cmpeqi	r2,r8,2047
    79fc:	10014b1e 	bne	r2,zero,7f2c <__divdf3+0x5cc>
    7a00:	a80690fa 	slli	r3,r21,3
    7a04:	b804d77a 	srli	r2,r23,29
    7a08:	b81290fa 	slli	r9,r23,3
    7a0c:	423f0044 	addi	r8,r8,-1023
    7a10:	10c6b03a 	or	r3,r2,r3
    7a14:	1d402034 	orhi	r21,r3,128
    7a18:	8a23c83a 	sub	r17,r17,r8
    7a1c:	0007883a 	mov	r3,zero
    7a20:	80800428 	cmpgeui	r2,r16,16
    7a24:	b4cef03a 	xor	r7,r22,r19
    7a28:	1000391e 	bne	r2,zero,7b10 <__divdf3+0x1b0>
    7a2c:	800c90ba 	slli	r6,r16,2
    7a30:	00800034 	movhi	r2,0
    7a34:	3085883a 	add	r2,r6,r2
    7a38:	109e9017 	ldw	r2,31296(r2)
    7a3c:	1000683a 	jmp	r2
    7a40:	00007b10 	cmplti	zero,zero,492
    7a44:	00007aec 	andhi	zero,zero,491
    7a48:	00007a9c 	xori	zero,zero,490
    7a4c:	00007afc 	xorhi	zero,zero,491
    7a50:	00007a9c 	xori	zero,zero,490
    7a54:	00007f90 	cmplti	zero,zero,510
    7a58:	00007a9c 	xori	zero,zero,490
    7a5c:	00007afc 	xorhi	zero,zero,491
    7a60:	00007aec 	andhi	zero,zero,491
    7a64:	00007aec 	andhi	zero,zero,491
    7a68:	00007f90 	cmplti	zero,zero,510
    7a6c:	00007afc 	xorhi	zero,zero,491
    7a70:	00007a80 	call	7a8 <kf_bfly4+0x3f0>
    7a74:	00007a80 	call	7a8 <kf_bfly4+0x3f0>
    7a78:	00007a80 	call	7a8 <kf_bfly4+0x3f0>
    7a7c:	00008020 	cmpeqi	zero,zero,512
    7a80:	b00f883a 	mov	r7,r22
    7a84:	e08000a0 	cmpeqi	r2,fp,2
    7a88:	1000181e 	bne	r2,zero,7aec <__divdf3+0x18c>
    7a8c:	e08000e0 	cmpeqi	r2,fp,3
    7a90:	1001ef1e 	bne	r2,zero,8250 <__divdf3+0x8f0>
    7a94:	e0800060 	cmpeqi	r2,fp,1
    7a98:	1000e626 	beq	r2,zero,7e34 <__divdf3+0x4d4>
    7a9c:	0007883a 	mov	r3,zero
    7aa0:	000b883a 	mov	r5,zero
    7aa4:	0029883a 	mov	r20,zero
    7aa8:	1806953a 	slli	r3,r3,20
    7aac:	380e97fa 	slli	r7,r7,31
    7ab0:	a005883a 	mov	r2,r20
    7ab4:	1946b03a 	or	r3,r3,r5
    7ab8:	19c6b03a 	or	r3,r3,r7
    7abc:	dfc00f17 	ldw	ra,60(sp)
    7ac0:	df000e17 	ldw	fp,56(sp)
    7ac4:	ddc00d17 	ldw	r23,52(sp)
    7ac8:	dd800c17 	ldw	r22,48(sp)
    7acc:	dd400b17 	ldw	r21,44(sp)
    7ad0:	dd000a17 	ldw	r20,40(sp)
    7ad4:	dcc00917 	ldw	r19,36(sp)
    7ad8:	dc800817 	ldw	r18,32(sp)
    7adc:	dc400717 	ldw	r17,28(sp)
    7ae0:	dc000617 	ldw	r16,24(sp)
    7ae4:	dec01004 	addi	sp,sp,64
    7ae8:	f800283a 	ret
    7aec:	00c1ffc4 	movi	r3,2047
    7af0:	000b883a 	mov	r5,zero
    7af4:	0029883a 	mov	r20,zero
    7af8:	003feb06 	br	7aa8 <__divdf3+0x148>
    7afc:	980f883a 	mov	r7,r19
    7b00:	a825883a 	mov	r18,r21
    7b04:	4829883a 	mov	r20,r9
    7b08:	1839883a 	mov	fp,r3
    7b0c:	003fdd06 	br	7a84 <__divdf3+0x124>
    7b10:	ac815d36 	bltu	r21,r18,8088 <__divdf3+0x728>
    7b14:	ac815b26 	beq	r21,r18,8084 <__divdf3+0x724>
    7b18:	8c7fffc4 	addi	r17,r17,-1
    7b1c:	a039883a 	mov	fp,r20
    7b20:	9021883a 	mov	r16,r18
    7b24:	002d883a 	mov	r22,zero
    7b28:	a806923a 	slli	r3,r21,8
    7b2c:	482ad63a 	srli	r21,r9,24
    7b30:	8009883a 	mov	r4,r16
    7b34:	182ed43a 	srli	r23,r3,16
    7b38:	a8eab03a 	or	r21,r21,r3
    7b3c:	d9c00015 	stw	r7,0(sp)
    7b40:	b80b883a 	mov	r5,r23
    7b44:	4826923a 	slli	r19,r9,8
    7b48:	ad3fffcc 	andi	r20,r21,65535
    7b4c:	0005fcc0 	call	5fcc <__udivsi3>
    7b50:	100b883a 	mov	r5,r2
    7b54:	a009883a 	mov	r4,r20
    7b58:	1025883a 	mov	r18,r2
    7b5c:	000608c0 	call	608c <__mulsi3>
    7b60:	8009883a 	mov	r4,r16
    7b64:	b80b883a 	mov	r5,r23
    7b68:	1021883a 	mov	r16,r2
    7b6c:	00060300 	call	6030 <__umodsi3>
    7b70:	1004943a 	slli	r2,r2,16
    7b74:	e008d43a 	srli	r4,fp,16
    7b78:	d9c00017 	ldw	r7,0(sp)
    7b7c:	2088b03a 	or	r4,r4,r2
    7b80:	2400042e 	bgeu	r4,r16,7b94 <__divdf3+0x234>
    7b84:	2549883a 	add	r4,r4,r21
    7b88:	90bfffc4 	addi	r2,r18,-1
    7b8c:	25416e2e 	bgeu	r4,r21,8148 <__divdf3+0x7e8>
    7b90:	1025883a 	mov	r18,r2
    7b94:	2421c83a 	sub	r16,r4,r16
    7b98:	b80b883a 	mov	r5,r23
    7b9c:	8009883a 	mov	r4,r16
    7ba0:	d9c00215 	stw	r7,8(sp)
    7ba4:	0005fcc0 	call	5fcc <__udivsi3>
    7ba8:	100b883a 	mov	r5,r2
    7bac:	a009883a 	mov	r4,r20
    7bb0:	d8800115 	stw	r2,4(sp)
    7bb4:	000608c0 	call	608c <__mulsi3>
    7bb8:	b80b883a 	mov	r5,r23
    7bbc:	8009883a 	mov	r4,r16
    7bc0:	d8800015 	stw	r2,0(sp)
    7bc4:	00060300 	call	6030 <__umodsi3>
    7bc8:	100c943a 	slli	r6,r2,16
    7bcc:	da000017 	ldw	r8,0(sp)
    7bd0:	e73fffcc 	andi	fp,fp,65535
    7bd4:	e18cb03a 	or	r6,fp,r6
    7bd8:	d8c00117 	ldw	r3,4(sp)
    7bdc:	d9c00217 	ldw	r7,8(sp)
    7be0:	3200042e 	bgeu	r6,r8,7bf4 <__divdf3+0x294>
    7be4:	354d883a 	add	r6,r6,r21
    7be8:	18bfffc4 	addi	r2,r3,-1
    7bec:	3541522e 	bgeu	r6,r21,8138 <__divdf3+0x7d8>
    7bf0:	1007883a 	mov	r3,r2
    7bf4:	9024943a 	slli	r18,r18,16
    7bf8:	9f3fffcc 	andi	fp,r19,65535
    7bfc:	320dc83a 	sub	r6,r6,r8
    7c00:	90e4b03a 	or	r18,r18,r3
    7c04:	9012d43a 	srli	r9,r18,16
    7c08:	92ffffcc 	andi	r11,r18,65535
    7c0c:	5809883a 	mov	r4,r11
    7c10:	e00b883a 	mov	r5,fp
    7c14:	d9c00515 	stw	r7,20(sp)
    7c18:	d9800315 	stw	r6,12(sp)
    7c1c:	dac00415 	stw	r11,16(sp)
    7c20:	da400015 	stw	r9,0(sp)
    7c24:	000608c0 	call	608c <__mulsi3>
    7c28:	da400017 	ldw	r9,0(sp)
    7c2c:	e00b883a 	mov	r5,fp
    7c30:	d8800215 	stw	r2,8(sp)
    7c34:	4809883a 	mov	r4,r9
    7c38:	000608c0 	call	608c <__mulsi3>
    7c3c:	da400017 	ldw	r9,0(sp)
    7c40:	9820d43a 	srli	r16,r19,16
    7c44:	d8800115 	stw	r2,4(sp)
    7c48:	4809883a 	mov	r4,r9
    7c4c:	800b883a 	mov	r5,r16
    7c50:	000608c0 	call	608c <__mulsi3>
    7c54:	dac00417 	ldw	r11,16(sp)
    7c58:	8009883a 	mov	r4,r16
    7c5c:	d8800015 	stw	r2,0(sp)
    7c60:	580b883a 	mov	r5,r11
    7c64:	000608c0 	call	608c <__mulsi3>
    7c68:	da000217 	ldw	r8,8(sp)
    7c6c:	da400117 	ldw	r9,4(sp)
    7c70:	da800017 	ldw	r10,0(sp)
    7c74:	4008d43a 	srli	r4,r8,16
    7c78:	1247883a 	add	r3,r2,r9
    7c7c:	d9800317 	ldw	r6,12(sp)
    7c80:	20c7883a 	add	r3,r4,r3
    7c84:	d9c00517 	ldw	r7,20(sp)
    7c88:	1a40022e 	bgeu	r3,r9,7c94 <__divdf3+0x334>
    7c8c:	00800074 	movhi	r2,1
    7c90:	5095883a 	add	r10,r10,r2
    7c94:	1808d43a 	srli	r4,r3,16
    7c98:	1806943a 	slli	r3,r3,16
    7c9c:	423fffcc 	andi	r8,r8,65535
    7ca0:	2285883a 	add	r2,r4,r10
    7ca4:	1a07883a 	add	r3,r3,r8
    7ca8:	30800236 	bltu	r6,r2,7cb4 <__divdf3+0x354>
    7cac:	30800a1e 	bne	r6,r2,7cd8 <__divdf3+0x378>
    7cb0:	b0c0092e 	bgeu	r22,r3,7cd8 <__divdf3+0x378>
    7cb4:	b4ed883a 	add	r22,r22,r19
    7cb8:	b4c9803a 	cmpltu	r4,r22,r19
    7cbc:	2549883a 	add	r4,r4,r21
    7cc0:	310d883a 	add	r6,r6,r4
    7cc4:	913fffc4 	addi	r4,r18,-1
    7cc8:	a981182e 	bgeu	r21,r6,812c <__divdf3+0x7cc>
    7ccc:	30814a36 	bltu	r6,r2,81f8 <__divdf3+0x898>
    7cd0:	11814826 	beq	r2,r6,81f4 <__divdf3+0x894>
    7cd4:	2025883a 	mov	r18,r4
    7cd8:	b0c7c83a 	sub	r3,r22,r3
    7cdc:	3085c83a 	sub	r2,r6,r2
    7ce0:	b0ed803a 	cmpltu	r22,r22,r3
    7ce4:	15adc83a 	sub	r22,r2,r22
    7ce8:	ad813026 	beq	r21,r22,81ac <__divdf3+0x84c>
    7cec:	b009883a 	mov	r4,r22
    7cf0:	b80b883a 	mov	r5,r23
    7cf4:	d8c00215 	stw	r3,8(sp)
    7cf8:	d9c00115 	stw	r7,4(sp)
    7cfc:	0005fcc0 	call	5fcc <__udivsi3>
    7d00:	100b883a 	mov	r5,r2
    7d04:	a009883a 	mov	r4,r20
    7d08:	d8800015 	stw	r2,0(sp)
    7d0c:	000608c0 	call	608c <__mulsi3>
    7d10:	b009883a 	mov	r4,r22
    7d14:	b80b883a 	mov	r5,r23
    7d18:	102d883a 	mov	r22,r2
    7d1c:	00060300 	call	6030 <__umodsi3>
    7d20:	d8c00217 	ldw	r3,8(sp)
    7d24:	1004943a 	slli	r2,r2,16
    7d28:	d9800017 	ldw	r6,0(sp)
    7d2c:	1808d43a 	srli	r4,r3,16
    7d30:	d9c00117 	ldw	r7,4(sp)
    7d34:	2088b03a 	or	r4,r4,r2
    7d38:	2580f536 	bltu	r4,r22,8110 <__divdf3+0x7b0>
    7d3c:	25adc83a 	sub	r22,r4,r22
    7d40:	b009883a 	mov	r4,r22
    7d44:	b80b883a 	mov	r5,r23
    7d48:	d8c00315 	stw	r3,12(sp)
    7d4c:	d9c00215 	stw	r7,8(sp)
    7d50:	d9800115 	stw	r6,4(sp)
    7d54:	0005fcc0 	call	5fcc <__udivsi3>
    7d58:	100b883a 	mov	r5,r2
    7d5c:	a009883a 	mov	r4,r20
    7d60:	d8800015 	stw	r2,0(sp)
    7d64:	000608c0 	call	608c <__mulsi3>
    7d68:	b009883a 	mov	r4,r22
    7d6c:	b80b883a 	mov	r5,r23
    7d70:	102d883a 	mov	r22,r2
    7d74:	00060300 	call	6030 <__umodsi3>
    7d78:	d8c00317 	ldw	r3,12(sp)
    7d7c:	1004943a 	slli	r2,r2,16
    7d80:	da000017 	ldw	r8,0(sp)
    7d84:	18ffffcc 	andi	r3,r3,65535
    7d88:	1886b03a 	or	r3,r3,r2
    7d8c:	d9800117 	ldw	r6,4(sp)
    7d90:	d9c00217 	ldw	r7,8(sp)
    7d94:	1d80d736 	bltu	r3,r22,80f4 <__divdf3+0x794>
    7d98:	3028943a 	slli	r20,r6,16
    7d9c:	e009883a 	mov	r4,fp
    7da0:	d9c00215 	stw	r7,8(sp)
    7da4:	a228b03a 	or	r20,r20,r8
    7da8:	a1bfffcc 	andi	r6,r20,65535
    7dac:	a02ed43a 	srli	r23,r20,16
    7db0:	300b883a 	mov	r5,r6
    7db4:	1dadc83a 	sub	r22,r3,r22
    7db8:	d9800115 	stw	r6,4(sp)
    7dbc:	000608c0 	call	608c <__mulsi3>
    7dc0:	e00b883a 	mov	r5,fp
    7dc4:	b809883a 	mov	r4,r23
    7dc8:	d8800015 	stw	r2,0(sp)
    7dcc:	000608c0 	call	608c <__mulsi3>
    7dd0:	8009883a 	mov	r4,r16
    7dd4:	b80b883a 	mov	r5,r23
    7dd8:	1039883a 	mov	fp,r2
    7ddc:	000608c0 	call	608c <__mulsi3>
    7de0:	d9800117 	ldw	r6,4(sp)
    7de4:	8009883a 	mov	r4,r16
    7de8:	1021883a 	mov	r16,r2
    7dec:	300b883a 	mov	r5,r6
    7df0:	000608c0 	call	608c <__mulsi3>
    7df4:	da000017 	ldw	r8,0(sp)
    7df8:	1705883a 	add	r2,r2,fp
    7dfc:	d9c00217 	ldw	r7,8(sp)
    7e00:	4006d43a 	srli	r3,r8,16
    7e04:	1887883a 	add	r3,r3,r2
    7e08:	1f00022e 	bgeu	r3,fp,7e14 <__divdf3+0x4b4>
    7e0c:	00800074 	movhi	r2,1
    7e10:	80a1883a 	add	r16,r16,r2
    7e14:	1808d43a 	srli	r4,r3,16
    7e18:	1806943a 	slli	r3,r3,16
    7e1c:	45ffffcc 	andi	r23,r8,65535
    7e20:	2409883a 	add	r4,r4,r16
    7e24:	1dc7883a 	add	r3,r3,r23
    7e28:	b1008f36 	bltu	r22,r4,8068 <__divdf3+0x708>
    7e2c:	b1008d26 	beq	r22,r4,8064 <__divdf3+0x704>
    7e30:	a5000054 	ori	r20,r20,1
    7e34:	8980ffc4 	addi	r6,r17,1023
    7e38:	01805c0e 	bge	zero,r6,7fac <__divdf3+0x64c>
    7e3c:	a08001cc 	andi	r2,r20,7
    7e40:	1000e01e 	bne	r2,zero,81c4 <__divdf3+0x864>
    7e44:	a008d0fa 	srli	r4,r20,3
    7e48:	9080402c 	andhi	r2,r18,256
    7e4c:	10000426 	beq	r2,zero,7e60 <__divdf3+0x500>
    7e50:	00bfc034 	movhi	r2,65280
    7e54:	10bfffc4 	addi	r2,r2,-1
    7e58:	90a4703a 	and	r18,r18,r2
    7e5c:	89810004 	addi	r6,r17,1024
    7e60:	3081ffc8 	cmpgei	r2,r6,2047
    7e64:	103f211e 	bne	r2,zero,7aec <__divdf3+0x18c>
    7e68:	9028977a 	slli	r20,r18,29
    7e6c:	900a927a 	slli	r5,r18,9
    7e70:	30c1ffcc 	andi	r3,r6,2047
    7e74:	a128b03a 	or	r20,r20,r4
    7e78:	280ad33a 	srli	r5,r5,12
    7e7c:	003f0a06 	br	7aa8 <__divdf3+0x148>
    7e80:	add2b03a 	or	r9,r21,r23
    7e84:	48003e26 	beq	r9,zero,7f80 <__divdf3+0x620>
    7e88:	a8008f26 	beq	r21,zero,80c8 <__divdf3+0x768>
    7e8c:	a809883a 	mov	r4,r21
    7e90:	00099740 	call	9974 <__clzsi2>
    7e94:	117ffd44 	addi	r5,r2,-11
    7e98:	01000744 	movi	r4,29
    7e9c:	127ffe04 	addi	r9,r2,-8
    7ea0:	2149c83a 	sub	r4,r4,r5
    7ea4:	aa46983a 	sll	r3,r21,r9
    7ea8:	b908d83a 	srl	r4,r23,r4
    7eac:	ba52983a 	sll	r9,r23,r9
    7eb0:	20eab03a 	or	r21,r4,r3
    7eb4:	1451883a 	add	r8,r2,r17
    7eb8:	4440fcc4 	addi	r17,r8,1011
    7ebc:	0007883a 	mov	r3,zero
    7ec0:	003ed706 	br	7a20 <__divdf3+0xc0>
    7ec4:	8124b03a 	or	r18,r16,r4
    7ec8:	2027883a 	mov	r19,r4
    7ecc:	90002726 	beq	r18,zero,7f6c <__divdf3+0x60c>
    7ed0:	80007326 	beq	r16,zero,80a0 <__divdf3+0x740>
    7ed4:	8009883a 	mov	r4,r16
    7ed8:	00099740 	call	9974 <__clzsi2>
    7edc:	113ffd44 	addi	r4,r2,-11
    7ee0:	00c00744 	movi	r3,29
    7ee4:	14bffe04 	addi	r18,r2,-8
    7ee8:	1907c83a 	sub	r3,r3,r4
    7eec:	848a983a 	sll	r5,r16,r18
    7ef0:	98c6d83a 	srl	r3,r19,r3
    7ef4:	9ca8983a 	sll	r20,r19,r18
    7ef8:	1964b03a 	or	r18,r3,r5
    7efc:	023f0344 	movi	r8,-1011
    7f00:	40a3c83a 	sub	r17,r8,r2
    7f04:	0021883a 	mov	r16,zero
    7f08:	0039883a 	mov	fp,zero
    7f0c:	003eb306 	br	79dc <__divdf3+0x7c>
    7f10:	8124b03a 	or	r18,r16,r4
    7f14:	9000101e 	bne	r18,zero,7f58 <__divdf3+0x5f8>
    7f18:	0029883a 	mov	r20,zero
    7f1c:	04000204 	movi	r16,8
    7f20:	0441ffc4 	movi	r17,2047
    7f24:	07000084 	movi	fp,2
    7f28:	003eac06 	br	79dc <__divdf3+0x7c>
    7f2c:	add2b03a 	or	r9,r21,r23
    7f30:	8c7e0044 	addi	r17,r17,-2047
    7f34:	4800041e 	bne	r9,zero,7f48 <__divdf3+0x5e8>
    7f38:	84000094 	ori	r16,r16,2
    7f3c:	002b883a 	mov	r21,zero
    7f40:	00c00084 	movi	r3,2
    7f44:	003eb606 	br	7a20 <__divdf3+0xc0>
    7f48:	840000d4 	ori	r16,r16,3
    7f4c:	b813883a 	mov	r9,r23
    7f50:	00c000c4 	movi	r3,3
    7f54:	003eb206 	br	7a20 <__divdf3+0xc0>
    7f58:	8025883a 	mov	r18,r16
    7f5c:	0441ffc4 	movi	r17,2047
    7f60:	04000304 	movi	r16,12
    7f64:	070000c4 	movi	fp,3
    7f68:	003e9c06 	br	79dc <__divdf3+0x7c>
    7f6c:	0029883a 	mov	r20,zero
    7f70:	04000104 	movi	r16,4
    7f74:	0023883a 	mov	r17,zero
    7f78:	07000044 	movi	fp,1
    7f7c:	003e9706 	br	79dc <__divdf3+0x7c>
    7f80:	84000054 	ori	r16,r16,1
    7f84:	002b883a 	mov	r21,zero
    7f88:	00c00044 	movi	r3,1
    7f8c:	003ea406 	br	7a20 <__divdf3+0xc0>
    7f90:	01400434 	movhi	r5,16
    7f94:	000f883a 	mov	r7,zero
    7f98:	297fffc4 	addi	r5,r5,-1
    7f9c:	053fffc4 	movi	r20,-1
    7fa0:	00c1ffc4 	movi	r3,2047
    7fa4:	003ec006 	br	7aa8 <__divdf3+0x148>
    7fa8:	053fffc4 	movi	r20,-1
    7fac:	01400044 	movi	r5,1
    7fb0:	298bc83a 	sub	r5,r5,r6
    7fb4:	28800e48 	cmpgei	r2,r5,57
    7fb8:	103eb81e 	bne	r2,zero,7a9c <__divdf3+0x13c>
    7fbc:	28800808 	cmpgei	r2,r5,32
    7fc0:	1000651e 	bne	r2,zero,8158 <__divdf3+0x7f8>
    7fc4:	8a010784 	addi	r8,r17,1054
    7fc8:	9204983a 	sll	r2,r18,r8
    7fcc:	a146d83a 	srl	r3,r20,r5
    7fd0:	a210983a 	sll	r8,r20,r8
    7fd4:	914ad83a 	srl	r5,r18,r5
    7fd8:	10e8b03a 	or	r20,r2,r3
    7fdc:	4010c03a 	cmpne	r8,r8,zero
    7fe0:	a228b03a 	or	r20,r20,r8
    7fe4:	a08001cc 	andi	r2,r20,7
    7fe8:	10000726 	beq	r2,zero,8008 <__divdf3+0x6a8>
    7fec:	a08003cc 	andi	r2,r20,15
    7ff0:	10800120 	cmpeqi	r2,r2,4
    7ff4:	1000041e 	bne	r2,zero,8008 <__divdf3+0x6a8>
    7ff8:	a0800104 	addi	r2,r20,4
    7ffc:	1529803a 	cmpltu	r20,r2,r20
    8000:	2d0b883a 	add	r5,r5,r20
    8004:	1029883a 	mov	r20,r2
    8008:	2880202c 	andhi	r2,r5,128
    800c:	10008c26 	beq	r2,zero,8240 <__divdf3+0x8e0>
    8010:	00c00044 	movi	r3,1
    8014:	000b883a 	mov	r5,zero
    8018:	0029883a 	mov	r20,zero
    801c:	003ea206 	br	7aa8 <__divdf3+0x148>
    8020:	9080022c 	andhi	r2,r18,8
    8024:	10000926 	beq	r2,zero,804c <__divdf3+0x6ec>
    8028:	a880022c 	andhi	r2,r21,8
    802c:	1000071e 	bne	r2,zero,804c <__divdf3+0x6ec>
    8030:	00800434 	movhi	r2,16
    8034:	a9400234 	orhi	r5,r21,8
    8038:	10bfffc4 	addi	r2,r2,-1
    803c:	288a703a 	and	r5,r5,r2
    8040:	980f883a 	mov	r7,r19
    8044:	4829883a 	mov	r20,r9
    8048:	003fd506 	br	7fa0 <__divdf3+0x640>
    804c:	00800434 	movhi	r2,16
    8050:	91400234 	orhi	r5,r18,8
    8054:	10bfffc4 	addi	r2,r2,-1
    8058:	288a703a 	and	r5,r5,r2
    805c:	b00f883a 	mov	r7,r22
    8060:	003fcf06 	br	7fa0 <__divdf3+0x640>
    8064:	183f7326 	beq	r3,zero,7e34 <__divdf3+0x4d4>
    8068:	adad883a 	add	r22,r21,r22
    806c:	a0bfffc4 	addi	r2,r20,-1
    8070:	b5404a36 	bltu	r22,r21,819c <__divdf3+0x83c>
    8074:	b1006636 	bltu	r22,r4,8210 <__divdf3+0x8b0>
    8078:	b1007a26 	beq	r22,r4,8264 <__divdf3+0x904>
    807c:	1029883a 	mov	r20,r2
    8080:	003f6b06 	br	7e30 <__divdf3+0x4d0>
    8084:	a27ea436 	bltu	r20,r9,7b18 <__divdf3+0x1b8>
    8088:	903897fa 	slli	fp,r18,31
    808c:	a004d07a 	srli	r2,r20,1
    8090:	9020d07a 	srli	r16,r18,1
    8094:	a02c97fa 	slli	r22,r20,31
    8098:	e0b8b03a 	or	fp,fp,r2
    809c:	003ea206 	br	7b28 <__divdf3+0x1c8>
    80a0:	00099740 	call	9974 <__clzsi2>
    80a4:	11000544 	addi	r4,r2,21
    80a8:	20c00748 	cmpgei	r3,r4,29
    80ac:	100b883a 	mov	r5,r2
    80b0:	10800804 	addi	r2,r2,32
    80b4:	183f8a26 	beq	r3,zero,7ee0 <__divdf3+0x580>
    80b8:	297ffe04 	addi	r5,r5,-8
    80bc:	a164983a 	sll	r18,r20,r5
    80c0:	0029883a 	mov	r20,zero
    80c4:	003f8d06 	br	7efc <__divdf3+0x59c>
    80c8:	b809883a 	mov	r4,r23
    80cc:	00099740 	call	9974 <__clzsi2>
    80d0:	11400544 	addi	r5,r2,21
    80d4:	29000748 	cmpgei	r4,r5,29
    80d8:	1007883a 	mov	r3,r2
    80dc:	10800804 	addi	r2,r2,32
    80e0:	203f6d26 	beq	r4,zero,7e98 <__divdf3+0x538>
    80e4:	18fffe04 	addi	r3,r3,-8
    80e8:	b8ea983a 	sll	r21,r23,r3
    80ec:	0013883a 	mov	r9,zero
    80f0:	003f7006 	br	7eb4 <__divdf3+0x554>
    80f4:	1d47883a 	add	r3,r3,r21
    80f8:	40bfffc4 	addi	r2,r8,-1
    80fc:	1d403936 	bltu	r3,r21,81e4 <__divdf3+0x884>
    8100:	1d80382e 	bgeu	r3,r22,81e4 <__divdf3+0x884>
    8104:	423fff84 	addi	r8,r8,-2
    8108:	1d47883a 	add	r3,r3,r21
    810c:	003f2206 	br	7d98 <__divdf3+0x438>
    8110:	2549883a 	add	r4,r4,r21
    8114:	30bfffc4 	addi	r2,r6,-1
    8118:	25403436 	bltu	r4,r21,81ec <__divdf3+0x88c>
    811c:	2580332e 	bgeu	r4,r22,81ec <__divdf3+0x88c>
    8120:	31bfff84 	addi	r6,r6,-2
    8124:	2549883a 	add	r4,r4,r21
    8128:	003f0406 	br	7d3c <__divdf3+0x3dc>
    812c:	a9bee91e 	bne	r21,r6,7cd4 <__divdf3+0x374>
    8130:	b4fee836 	bltu	r22,r19,7cd4 <__divdf3+0x374>
    8134:	003ee506 	br	7ccc <__divdf3+0x36c>
    8138:	323ead2e 	bgeu	r6,r8,7bf0 <__divdf3+0x290>
    813c:	18ffff84 	addi	r3,r3,-2
    8140:	354d883a 	add	r6,r6,r21
    8144:	003eab06 	br	7bf4 <__divdf3+0x294>
    8148:	243e912e 	bgeu	r4,r16,7b90 <__divdf3+0x230>
    814c:	94bfff84 	addi	r18,r18,-2
    8150:	2549883a 	add	r4,r4,r21
    8154:	003e8f06 	br	7b94 <__divdf3+0x234>
    8158:	00fff844 	movi	r3,-31
    815c:	1987c83a 	sub	r3,r3,r6
    8160:	29400820 	cmpeqi	r5,r5,32
    8164:	90c6d83a 	srl	r3,r18,r3
    8168:	2800031e 	bne	r5,zero,8178 <__divdf3+0x818>
    816c:	89410f84 	addi	r5,r17,1086
    8170:	914a983a 	sll	r5,r18,r5
    8174:	a168b03a 	or	r20,r20,r5
    8178:	a028c03a 	cmpne	r20,r20,zero
    817c:	a0e8b03a 	or	r20,r20,r3
    8180:	a48001cc 	andi	r18,r20,7
    8184:	90002a1e 	bne	r18,zero,8230 <__divdf3+0x8d0>
    8188:	000b883a 	mov	r5,zero
    818c:	a028d0fa 	srli	r20,r20,3
    8190:	0007883a 	mov	r3,zero
    8194:	a4a8b03a 	or	r20,r20,r18
    8198:	003e4306 	br	7aa8 <__divdf3+0x148>
    819c:	1029883a 	mov	r20,r2
    81a0:	b13f231e 	bne	r22,r4,7e30 <__divdf3+0x4d0>
    81a4:	1cff221e 	bne	r3,r19,7e30 <__divdf3+0x4d0>
    81a8:	003f2206 	br	7e34 <__divdf3+0x4d4>
    81ac:	8980ffc4 	addi	r6,r17,1023
    81b0:	01bf7d0e 	bge	zero,r6,7fa8 <__divdf3+0x648>
    81b4:	0009883a 	mov	r4,zero
    81b8:	05000044 	movi	r20,1
    81bc:	9525883a 	add	r18,r18,r20
    81c0:	003f2106 	br	7e48 <__divdf3+0x4e8>
    81c4:	a08003cc 	andi	r2,r20,15
    81c8:	10800118 	cmpnei	r2,r2,4
    81cc:	103f1d26 	beq	r2,zero,7e44 <__divdf3+0x4e4>
    81d0:	a1000104 	addi	r4,r20,4
    81d4:	00bffec4 	movi	r2,-5
    81d8:	2008d0fa 	srli	r4,r4,3
    81dc:	1529803a 	cmpltu	r20,r2,r20
    81e0:	003ff606 	br	81bc <__divdf3+0x85c>
    81e4:	1011883a 	mov	r8,r2
    81e8:	003eeb06 	br	7d98 <__divdf3+0x438>
    81ec:	100d883a 	mov	r6,r2
    81f0:	003ed206 	br	7d3c <__divdf3+0x3dc>
    81f4:	b0feb72e 	bgeu	r22,r3,7cd4 <__divdf3+0x374>
    81f8:	b4ed883a 	add	r22,r22,r19
    81fc:	b4c9803a 	cmpltu	r4,r22,r19
    8200:	2549883a 	add	r4,r4,r21
    8204:	94bfff84 	addi	r18,r18,-2
    8208:	310d883a 	add	r6,r6,r4
    820c:	003eb206 	br	7cd8 <__divdf3+0x378>
    8210:	9cc5883a 	add	r2,r19,r19
    8214:	14e7803a 	cmpltu	r19,r2,r19
    8218:	9d6b883a 	add	r21,r19,r21
    821c:	b56d883a 	add	r22,r22,r21
    8220:	a53fff84 	addi	r20,r20,-2
    8224:	1027883a 	mov	r19,r2
    8228:	b13fde26 	beq	r22,r4,81a4 <__divdf3+0x844>
    822c:	003f0006 	br	7e30 <__divdf3+0x4d0>
    8230:	a08003cc 	andi	r2,r20,15
    8234:	10800118 	cmpnei	r2,r2,4
    8238:	000b883a 	mov	r5,zero
    823c:	103f6e1e 	bne	r2,zero,7ff8 <__divdf3+0x698>
    8240:	2804927a 	slli	r2,r5,9
    8244:	2824977a 	slli	r18,r5,29
    8248:	100ad33a 	srli	r5,r2,12
    824c:	003fcf06 	br	818c <__divdf3+0x82c>
    8250:	00800434 	movhi	r2,16
    8254:	91400234 	orhi	r5,r18,8
    8258:	10bfffc4 	addi	r2,r2,-1
    825c:	288a703a 	and	r5,r5,r2
    8260:	003f4f06 	br	7fa0 <__divdf3+0x640>
    8264:	98ffea36 	bltu	r19,r3,8210 <__divdf3+0x8b0>
    8268:	1029883a 	mov	r20,r2
    826c:	1cfef01e 	bne	r3,r19,7e30 <__divdf3+0x4d0>
    8270:	003ef006 	br	7e34 <__divdf3+0x4d4>

00008274 <__eqdf2>:
    8274:	2810d53a 	srli	r8,r5,20
    8278:	3806d53a 	srli	r3,r7,20
    827c:	00800434 	movhi	r2,16
    8280:	4201ffcc 	andi	r8,r8,2047
    8284:	10bfffc4 	addi	r2,r2,-1
    8288:	4241ffd8 	cmpnei	r9,r8,2047
    828c:	2814d7fa 	srli	r10,r5,31
    8290:	3816d7fa 	srli	r11,r7,31
    8294:	288a703a 	and	r5,r5,r2
    8298:	388e703a 	and	r7,r7,r2
    829c:	1881ffcc 	andi	r2,r3,2047
    82a0:	48000626 	beq	r9,zero,82bc <__eqdf2+0x48>
    82a4:	10c1ffe0 	cmpeqi	r3,r2,2047
    82a8:	1800021e 	bne	r3,zero,82b4 <__eqdf2+0x40>
    82ac:	4080011e 	bne	r8,r2,82b4 <__eqdf2+0x40>
    82b0:	29c00826 	beq	r5,r7,82d4 <__eqdf2+0x60>
    82b4:	00800044 	movi	r2,1
    82b8:	f800283a 	ret
    82bc:	2906b03a 	or	r3,r5,r4
    82c0:	183ffc1e 	bne	r3,zero,82b4 <__eqdf2+0x40>
    82c4:	1081ffd8 	cmpnei	r2,r2,2047
    82c8:	103ffa1e 	bne	r2,zero,82b4 <__eqdf2+0x40>
    82cc:	398eb03a 	or	r7,r7,r6
    82d0:	383ff81e 	bne	r7,zero,82b4 <__eqdf2+0x40>
    82d4:	21bff71e 	bne	r4,r6,82b4 <__eqdf2+0x40>
    82d8:	52c00426 	beq	r10,r11,82ec <__eqdf2+0x78>
    82dc:	403ff51e 	bne	r8,zero,82b4 <__eqdf2+0x40>
    82e0:	290ab03a 	or	r5,r5,r4
    82e4:	2804c03a 	cmpne	r2,r5,zero
    82e8:	f800283a 	ret
    82ec:	0005883a 	mov	r2,zero
    82f0:	f800283a 	ret

000082f4 <__gedf2>:
    82f4:	2810d53a 	srli	r8,r5,20
    82f8:	3812d53a 	srli	r9,r7,20
    82fc:	00c00434 	movhi	r3,16
    8300:	4201ffcc 	andi	r8,r8,2047
    8304:	18ffffc4 	addi	r3,r3,-1
    8308:	4281ffd8 	cmpnei	r10,r8,2047
    830c:	2816d7fa 	srli	r11,r5,31
    8310:	3804d7fa 	srli	r2,r7,31
    8314:	28ca703a 	and	r5,r5,r3
    8318:	38ce703a 	and	r7,r7,r3
    831c:	48c1ffcc 	andi	r3,r9,2047
    8320:	50000a26 	beq	r10,zero,834c <__gedf2+0x58>
    8324:	1a41ffd8 	cmpnei	r9,r3,2047
    8328:	48000c26 	beq	r9,zero,835c <__gedf2+0x68>
    832c:	4000171e 	bne	r8,zero,838c <__gedf2+0x98>
    8330:	2912b03a 	or	r9,r5,r4
    8334:	1800121e 	bne	r3,zero,8380 <__gedf2+0x8c>
    8338:	3994b03a 	or	r10,r7,r6
    833c:	5000101e 	bne	r10,zero,8380 <__gedf2+0x8c>
    8340:	48000a1e 	bne	r9,zero,836c <__gedf2+0x78>
    8344:	0005883a 	mov	r2,zero
    8348:	f800283a 	ret
    834c:	2912b03a 	or	r9,r5,r4
    8350:	48001d1e 	bne	r9,zero,83c8 <__gedf2+0xd4>
    8354:	1a41ffe0 	cmpeqi	r9,r3,2047
    8358:	48000c26 	beq	r9,zero,838c <__gedf2+0x98>
    835c:	3992b03a 	or	r9,r7,r6
    8360:	4800191e 	bne	r9,zero,83c8 <__gedf2+0xd4>
    8364:	40000526 	beq	r8,zero,837c <__gedf2+0x88>
    8368:	58800c26 	beq	r11,r2,839c <__gedf2+0xa8>
    836c:	00800044 	movi	r2,1
    8370:	58000526 	beq	r11,zero,8388 <__gedf2+0x94>
    8374:	00bfffc4 	movi	r2,-1
    8378:	f800283a 	ret
    837c:	2912b03a 	or	r9,r5,r4
    8380:	483ff91e 	bne	r9,zero,8368 <__gedf2+0x74>
    8384:	103ffb26 	beq	r2,zero,8374 <__gedf2+0x80>
    8388:	f800283a 	ret
    838c:	183ff61e 	bne	r3,zero,8368 <__gedf2+0x74>
    8390:	3992b03a 	or	r9,r7,r6
    8394:	483ff41e 	bne	r9,zero,8368 <__gedf2+0x74>
    8398:	003ff406 	br	836c <__gedf2+0x78>
    839c:	1a000716 	blt	r3,r8,83bc <__gedf2+0xc8>
    83a0:	40fff816 	blt	r8,r3,8384 <__gedf2+0x90>
    83a4:	397ff136 	bltu	r7,r5,836c <__gedf2+0x78>
    83a8:	29c00926 	beq	r5,r7,83d0 <__gedf2+0xdc>
    83ac:	29ffe52e 	bgeu	r5,r7,8344 <__gedf2+0x50>
    83b0:	583ff026 	beq	r11,zero,8374 <__gedf2+0x80>
    83b4:	5805883a 	mov	r2,r11
    83b8:	f800283a 	ret
    83bc:	103fed1e 	bne	r2,zero,8374 <__gedf2+0x80>
    83c0:	00800044 	movi	r2,1
    83c4:	f800283a 	ret
    83c8:	00bfff84 	movi	r2,-2
    83cc:	f800283a 	ret
    83d0:	313fe636 	bltu	r6,r4,836c <__gedf2+0x78>
    83d4:	21bfdb2e 	bgeu	r4,r6,8344 <__gedf2+0x50>
    83d8:	003ff506 	br	83b0 <__gedf2+0xbc>

000083dc <__ledf2>:
    83dc:	2810d53a 	srli	r8,r5,20
    83e0:	3812d53a 	srli	r9,r7,20
    83e4:	00c00434 	movhi	r3,16
    83e8:	4201ffcc 	andi	r8,r8,2047
    83ec:	18ffffc4 	addi	r3,r3,-1
    83f0:	4281ffd8 	cmpnei	r10,r8,2047
    83f4:	2816d7fa 	srli	r11,r5,31
    83f8:	3804d7fa 	srli	r2,r7,31
    83fc:	28ca703a 	and	r5,r5,r3
    8400:	38ce703a 	and	r7,r7,r3
    8404:	48c1ffcc 	andi	r3,r9,2047
    8408:	50000a26 	beq	r10,zero,8434 <__ledf2+0x58>
    840c:	1a41ffd8 	cmpnei	r9,r3,2047
    8410:	48000c26 	beq	r9,zero,8444 <__ledf2+0x68>
    8414:	4000191e 	bne	r8,zero,847c <__ledf2+0xa0>
    8418:	2912b03a 	or	r9,r5,r4
    841c:	18000d1e 	bne	r3,zero,8454 <__ledf2+0x78>
    8420:	3994b03a 	or	r10,r7,r6
    8424:	50000b1e 	bne	r10,zero,8454 <__ledf2+0x78>
    8428:	48000c1e 	bne	r9,zero,845c <__ledf2+0x80>
    842c:	0005883a 	mov	r2,zero
    8430:	f800283a 	ret
    8434:	2912b03a 	or	r9,r5,r4
    8438:	48000c1e 	bne	r9,zero,846c <__ledf2+0x90>
    843c:	1a41ffe0 	cmpeqi	r9,r3,2047
    8440:	48000e26 	beq	r9,zero,847c <__ledf2+0xa0>
    8444:	3992b03a 	or	r9,r7,r6
    8448:	4800081e 	bne	r9,zero,846c <__ledf2+0x90>
    844c:	4000021e 	bne	r8,zero,8458 <__ledf2+0x7c>
    8450:	2912b03a 	or	r9,r5,r4
    8454:	48000726 	beq	r9,zero,8474 <__ledf2+0x98>
    8458:	58800c26 	beq	r11,r2,848c <__ledf2+0xb0>
    845c:	00800044 	movi	r2,1
    8460:	58000526 	beq	r11,zero,8478 <__ledf2+0x9c>
    8464:	00bfffc4 	movi	r2,-1
    8468:	f800283a 	ret
    846c:	00800084 	movi	r2,2
    8470:	f800283a 	ret
    8474:	103ffb26 	beq	r2,zero,8464 <__ledf2+0x88>
    8478:	f800283a 	ret
    847c:	183ff61e 	bne	r3,zero,8458 <__ledf2+0x7c>
    8480:	3992b03a 	or	r9,r7,r6
    8484:	483ff41e 	bne	r9,zero,8458 <__ledf2+0x7c>
    8488:	003ff406 	br	845c <__ledf2+0x80>
    848c:	1a00030e 	bge	r3,r8,849c <__ledf2+0xc0>
    8490:	103ff41e 	bne	r2,zero,8464 <__ledf2+0x88>
    8494:	00800044 	movi	r2,1
    8498:	f800283a 	ret
    849c:	40fff516 	blt	r8,r3,8474 <__ledf2+0x98>
    84a0:	397fee36 	bltu	r7,r5,845c <__ledf2+0x80>
    84a4:	29c00426 	beq	r5,r7,84b8 <__ledf2+0xdc>
    84a8:	29ffe02e 	bgeu	r5,r7,842c <__ledf2+0x50>
    84ac:	583fed26 	beq	r11,zero,8464 <__ledf2+0x88>
    84b0:	5805883a 	mov	r2,r11
    84b4:	f800283a 	ret
    84b8:	313fe836 	bltu	r6,r4,845c <__ledf2+0x80>
    84bc:	21bfdb2e 	bgeu	r4,r6,842c <__ledf2+0x50>
    84c0:	003ffa06 	br	84ac <__ledf2+0xd0>

000084c4 <__muldf3>:
    84c4:	2810d53a 	srli	r8,r5,20
    84c8:	defff004 	addi	sp,sp,-64
    84cc:	00800434 	movhi	r2,16
    84d0:	df000e15 	stw	fp,56(sp)
    84d4:	dd000a15 	stw	r20,40(sp)
    84d8:	dcc00915 	stw	r19,36(sp)
    84dc:	dc400715 	stw	r17,28(sp)
    84e0:	10bfffc4 	addi	r2,r2,-1
    84e4:	dfc00f15 	stw	ra,60(sp)
    84e8:	ddc00d15 	stw	r23,52(sp)
    84ec:	dd800c15 	stw	r22,48(sp)
    84f0:	dd400b15 	stw	r21,44(sp)
    84f4:	dc800815 	stw	r18,32(sp)
    84f8:	dc000615 	stw	r16,24(sp)
    84fc:	4201ffcc 	andi	r8,r8,2047
    8500:	2828d7fa 	srli	r20,r5,31
    8504:	2023883a 	mov	r17,r4
    8508:	3039883a 	mov	fp,r6
    850c:	28a6703a 	and	r19,r5,r2
    8510:	40013426 	beq	r8,zero,89e4 <__muldf3+0x520>
    8514:	4081ffe0 	cmpeqi	r2,r8,2047
    8518:	1001461e 	bne	r2,zero,8a34 <__muldf3+0x570>
    851c:	980a90fa 	slli	r5,r19,3
    8520:	2026d77a 	srli	r19,r4,29
    8524:	202490fa 	slli	r18,r4,3
    8528:	423f0044 	addi	r8,r8,-1023
    852c:	9966b03a 	or	r19,r19,r5
    8530:	9cc02034 	orhi	r19,r19,128
    8534:	002b883a 	mov	r21,zero
    8538:	002d883a 	mov	r22,zero
    853c:	3804d53a 	srli	r2,r7,20
    8540:	00c00434 	movhi	r3,16
    8544:	18ffffc4 	addi	r3,r3,-1
    8548:	1081ffcc 	andi	r2,r2,2047
    854c:	382ed7fa 	srli	r23,r7,31
    8550:	38e0703a 	and	r16,r7,r3
    8554:	10011026 	beq	r2,zero,8998 <__muldf3+0x4d4>
    8558:	10c1ffe0 	cmpeqi	r3,r2,2047
    855c:	18013c1e 	bne	r3,zero,8a50 <__muldf3+0x58c>
    8560:	e008d77a 	srli	r4,fp,29
    8564:	802090fa 	slli	r16,r16,3
    8568:	e02290fa 	slli	r17,fp,3
    856c:	10bf0044 	addi	r2,r2,-1023
    8570:	2420b03a 	or	r16,r4,r16
    8574:	84002034 	orhi	r16,r16,128
    8578:	4091883a 	add	r8,r8,r2
    857c:	0009883a 	mov	r4,zero
    8580:	a8800428 	cmpgeui	r2,r21,16
    8584:	a5ccf03a 	xor	r6,r20,r23
    8588:	41c00044 	addi	r7,r8,1
    858c:	1000371e 	bne	r2,zero,866c <__muldf3+0x1a8>
    8590:	a80490ba 	slli	r2,r21,2
    8594:	00c00074 	movhi	r3,1
    8598:	10c7883a 	add	r3,r2,r3
    859c:	18a16917 	ldw	r2,-31324(r3)
    85a0:	1000683a 	jmp	r2
    85a4:	0000866c 	andhi	zero,zero,537
    85a8:	000085e8 	cmpgeui	zero,zero,535
    85ac:	000085e8 	cmpgeui	zero,zero,535
    85b0:	000085e4 	muli	zero,zero,535
    85b4:	000085f4 	movhi	zero,535
    85b8:	000085f4 	movhi	zero,535
    85bc:	00008ac4 	movi	zero,555
    85c0:	000085e4 	muli	zero,zero,535
    85c4:	000085f4 	movhi	zero,535
    85c8:	00008ac4 	movi	zero,555
    85cc:	000085f4 	movhi	zero,535
    85d0:	000085e4 	muli	zero,zero,535
    85d4:	00008a6c 	andhi	zero,zero,553
    85d8:	00008a6c 	andhi	zero,zero,553
    85dc:	00008a6c 	andhi	zero,zero,553
    85e0:	00008b50 	cmplti	zero,zero,557
    85e4:	b80d883a 	mov	r6,r23
    85e8:	8027883a 	mov	r19,r16
    85ec:	8825883a 	mov	r18,r17
    85f0:	202d883a 	mov	r22,r4
    85f4:	b08000a0 	cmpeqi	r2,r22,2
    85f8:	1000181e 	bne	r2,zero,865c <__muldf3+0x198>
    85fc:	b08000e0 	cmpeqi	r2,r22,3
    8600:	1001961e 	bne	r2,zero,8c5c <__muldf3+0x798>
    8604:	b0800060 	cmpeqi	r2,r22,1
    8608:	1000c926 	beq	r2,zero,8930 <__muldf3+0x46c>
    860c:	0007883a 	mov	r3,zero
    8610:	0027883a 	mov	r19,zero
    8614:	0025883a 	mov	r18,zero
    8618:	1806953a 	slli	r3,r3,20
    861c:	300c97fa 	slli	r6,r6,31
    8620:	9005883a 	mov	r2,r18
    8624:	1cc6b03a 	or	r3,r3,r19
    8628:	1986b03a 	or	r3,r3,r6
    862c:	dfc00f17 	ldw	ra,60(sp)
    8630:	df000e17 	ldw	fp,56(sp)
    8634:	ddc00d17 	ldw	r23,52(sp)
    8638:	dd800c17 	ldw	r22,48(sp)
    863c:	dd400b17 	ldw	r21,44(sp)
    8640:	dd000a17 	ldw	r20,40(sp)
    8644:	dcc00917 	ldw	r19,36(sp)
    8648:	dc800817 	ldw	r18,32(sp)
    864c:	dc400717 	ldw	r17,28(sp)
    8650:	dc000617 	ldw	r16,24(sp)
    8654:	dec01004 	addi	sp,sp,64
    8658:	f800283a 	ret
    865c:	00c1ffc4 	movi	r3,2047
    8660:	0027883a 	mov	r19,zero
    8664:	0025883a 	mov	r18,zero
    8668:	003feb06 	br	8618 <__muldf3+0x154>
    866c:	9028d43a 	srli	r20,r18,16
    8670:	8f3fffcc 	andi	fp,r17,65535
    8674:	957fffcc 	andi	r21,r18,65535
    8678:	a80b883a 	mov	r5,r21
    867c:	e009883a 	mov	r4,fp
    8680:	d9800315 	stw	r6,12(sp)
    8684:	da000215 	stw	r8,8(sp)
    8688:	d9c00115 	stw	r7,4(sp)
    868c:	8822d43a 	srli	r17,r17,16
    8690:	000608c0 	call	608c <__mulsi3>
    8694:	e00b883a 	mov	r5,fp
    8698:	a009883a 	mov	r4,r20
    869c:	102d883a 	mov	r22,r2
    86a0:	000608c0 	call	608c <__mulsi3>
    86a4:	880b883a 	mov	r5,r17
    86a8:	a009883a 	mov	r4,r20
    86ac:	102f883a 	mov	r23,r2
    86b0:	000608c0 	call	608c <__mulsi3>
    86b4:	a80b883a 	mov	r5,r21
    86b8:	8809883a 	mov	r4,r17
    86bc:	d8800015 	stw	r2,0(sp)
    86c0:	000608c0 	call	608c <__mulsi3>
    86c4:	b006d43a 	srli	r3,r22,16
    86c8:	15e5883a 	add	r18,r2,r23
    86cc:	d9c00117 	ldw	r7,4(sp)
    86d0:	1c87883a 	add	r3,r3,r18
    86d4:	da000217 	ldw	r8,8(sp)
    86d8:	d9800317 	ldw	r6,12(sp)
    86dc:	1dc0042e 	bgeu	r3,r23,86f0 <__muldf3+0x22c>
    86e0:	d9000017 	ldw	r4,0(sp)
    86e4:	00800074 	movhi	r2,1
    86e8:	2085883a 	add	r2,r4,r2
    86ec:	d8800015 	stw	r2,0(sp)
    86f0:	1804943a 	slli	r2,r3,16
    86f4:	85ffffcc 	andi	r23,r16,65535
    86f8:	b5bfffcc 	andi	r22,r22,65535
    86fc:	1585883a 	add	r2,r2,r22
    8700:	a80b883a 	mov	r5,r21
    8704:	b809883a 	mov	r4,r23
    8708:	1824d43a 	srli	r18,r3,16
    870c:	d9800515 	stw	r6,20(sp)
    8710:	da000415 	stw	r8,16(sp)
    8714:	d9c00315 	stw	r7,12(sp)
    8718:	8020d43a 	srli	r16,r16,16
    871c:	d8800115 	stw	r2,4(sp)
    8720:	000608c0 	call	608c <__mulsi3>
    8724:	a009883a 	mov	r4,r20
    8728:	b80b883a 	mov	r5,r23
    872c:	d8800215 	stw	r2,8(sp)
    8730:	000608c0 	call	608c <__mulsi3>
    8734:	a009883a 	mov	r4,r20
    8738:	800b883a 	mov	r5,r16
    873c:	102d883a 	mov	r22,r2
    8740:	000608c0 	call	608c <__mulsi3>
    8744:	a80b883a 	mov	r5,r21
    8748:	8009883a 	mov	r4,r16
    874c:	1029883a 	mov	r20,r2
    8750:	000608c0 	call	608c <__mulsi3>
    8754:	da800217 	ldw	r10,8(sp)
    8758:	1585883a 	add	r2,r2,r22
    875c:	d9c00317 	ldw	r7,12(sp)
    8760:	5006d43a 	srli	r3,r10,16
    8764:	da000417 	ldw	r8,16(sp)
    8768:	d9800517 	ldw	r6,20(sp)
    876c:	1887883a 	add	r3,r3,r2
    8770:	1d80022e 	bgeu	r3,r22,877c <__muldf3+0x2b8>
    8774:	00800074 	movhi	r2,1
    8778:	a0a9883a 	add	r20,r20,r2
    877c:	1804d43a 	srli	r2,r3,16
    8780:	1806943a 	slli	r3,r3,16
    8784:	982cd43a 	srli	r22,r19,16
    8788:	9d7fffcc 	andi	r21,r19,65535
    878c:	e009883a 	mov	r4,fp
    8790:	54ffffcc 	andi	r19,r10,65535
    8794:	a80b883a 	mov	r5,r21
    8798:	1ce7883a 	add	r19,r3,r19
    879c:	d9800515 	stw	r6,20(sp)
    87a0:	da000415 	stw	r8,16(sp)
    87a4:	d9c00315 	stw	r7,12(sp)
    87a8:	1529883a 	add	r20,r2,r20
    87ac:	000608c0 	call	608c <__mulsi3>
    87b0:	e00b883a 	mov	r5,fp
    87b4:	b009883a 	mov	r4,r22
    87b8:	d8800215 	stw	r2,8(sp)
    87bc:	000608c0 	call	608c <__mulsi3>
    87c0:	8809883a 	mov	r4,r17
    87c4:	b00b883a 	mov	r5,r22
    87c8:	1039883a 	mov	fp,r2
    87cc:	000608c0 	call	608c <__mulsi3>
    87d0:	8809883a 	mov	r4,r17
    87d4:	a80b883a 	mov	r5,r21
    87d8:	1023883a 	mov	r17,r2
    87dc:	000608c0 	call	608c <__mulsi3>
    87e0:	d8c00217 	ldw	r3,8(sp)
    87e4:	1705883a 	add	r2,r2,fp
    87e8:	d9c00317 	ldw	r7,12(sp)
    87ec:	1808d43a 	srli	r4,r3,16
    87f0:	da000417 	ldw	r8,16(sp)
    87f4:	d9800517 	ldw	r6,20(sp)
    87f8:	2089883a 	add	r4,r4,r2
    87fc:	94e5883a 	add	r18,r18,r19
    8800:	2700022e 	bgeu	r4,fp,880c <__muldf3+0x348>
    8804:	00800074 	movhi	r2,1
    8808:	88a3883a 	add	r17,r17,r2
    880c:	2004d43a 	srli	r2,r4,16
    8810:	2038943a 	slli	fp,r4,16
    8814:	18ffffcc 	andi	r3,r3,65535
    8818:	b809883a 	mov	r4,r23
    881c:	a80b883a 	mov	r5,r21
    8820:	d9800415 	stw	r6,16(sp)
    8824:	da000315 	stw	r8,12(sp)
    8828:	d9c00215 	stw	r7,8(sp)
    882c:	e0f9883a 	add	fp,fp,r3
    8830:	1463883a 	add	r17,r2,r17
    8834:	000608c0 	call	608c <__mulsi3>
    8838:	b80b883a 	mov	r5,r23
    883c:	b009883a 	mov	r4,r22
    8840:	102f883a 	mov	r23,r2
    8844:	000608c0 	call	608c <__mulsi3>
    8848:	b00b883a 	mov	r5,r22
    884c:	8009883a 	mov	r4,r16
    8850:	102d883a 	mov	r22,r2
    8854:	000608c0 	call	608c <__mulsi3>
    8858:	a80b883a 	mov	r5,r21
    885c:	8009883a 	mov	r4,r16
    8860:	1021883a 	mov	r16,r2
    8864:	000608c0 	call	608c <__mulsi3>
    8868:	b80ad43a 	srli	r5,r23,16
    886c:	1585883a 	add	r2,r2,r22
    8870:	d9c00217 	ldw	r7,8(sp)
    8874:	288b883a 	add	r5,r5,r2
    8878:	da000317 	ldw	r8,12(sp)
    887c:	d9800417 	ldw	r6,16(sp)
    8880:	2d80022e 	bgeu	r5,r22,888c <__muldf3+0x3c8>
    8884:	00800074 	movhi	r2,1
    8888:	80a1883a 	add	r16,r16,r2
    888c:	2806943a 	slli	r3,r5,16
    8890:	d8800017 	ldw	r2,0(sp)
    8894:	bdffffcc 	andi	r23,r23,65535
    8898:	1dc7883a 	add	r3,r3,r23
    889c:	90ab883a 	add	r21,r18,r2
    88a0:	acd5803a 	cmpltu	r10,r21,r19
    88a4:	1d07883a 	add	r3,r3,r20
    88a8:	af2b883a 	add	r21,r21,fp
    88ac:	1a97883a 	add	r11,r3,r10
    88b0:	af09803a 	cmpltu	r4,r21,fp
    88b4:	2826d43a 	srli	r19,r5,16
    88b8:	5c53883a 	add	r9,r11,r17
    88bc:	4905883a 	add	r2,r9,r4
    88c0:	1d07803a 	cmpltu	r3,r3,r20
    88c4:	5a95803a 	cmpltu	r10,r11,r10
    88c8:	1a86b03a 	or	r3,r3,r10
    88cc:	1109803a 	cmpltu	r4,r2,r4
    88d0:	4c53803a 	cmpltu	r9,r9,r17
    88d4:	1ce7883a 	add	r19,r3,r19
    88d8:	4908b03a 	or	r4,r9,r4
    88dc:	a824927a 	slli	r18,r21,9
    88e0:	d8c00117 	ldw	r3,4(sp)
    88e4:	9927883a 	add	r19,r19,r4
    88e8:	9c27883a 	add	r19,r19,r16
    88ec:	9826927a 	slli	r19,r19,9
    88f0:	a82ad5fa 	srli	r21,r21,23
    88f4:	100ad5fa 	srli	r5,r2,23
    88f8:	90e4b03a 	or	r18,r18,r3
    88fc:	1004927a 	slli	r2,r2,9
    8900:	9024c03a 	cmpne	r18,r18,zero
    8904:	9564b03a 	or	r18,r18,r21
    8908:	98c0402c 	andhi	r3,r19,256
    890c:	90a4b03a 	or	r18,r18,r2
    8910:	9966b03a 	or	r19,r19,r5
    8914:	1800b626 	beq	r3,zero,8bf0 <__muldf3+0x72c>
    8918:	9006d07a 	srli	r3,r18,1
    891c:	980497fa 	slli	r2,r19,31
    8920:	9480004c 	andi	r18,r18,1
    8924:	9826d07a 	srli	r19,r19,1
    8928:	1c86b03a 	or	r3,r3,r18
    892c:	18a4b03a 	or	r18,r3,r2
    8930:	3900ffc4 	addi	r4,r7,1023
    8934:	0100690e 	bge	zero,r4,8adc <__muldf3+0x618>
    8938:	908001cc 	andi	r2,r18,7
    893c:	10000726 	beq	r2,zero,895c <__muldf3+0x498>
    8940:	908003cc 	andi	r2,r18,15
    8944:	10800120 	cmpeqi	r2,r2,4
    8948:	1000041e 	bne	r2,zero,895c <__muldf3+0x498>
    894c:	90800104 	addi	r2,r18,4
    8950:	14a5803a 	cmpltu	r18,r2,r18
    8954:	9ca7883a 	add	r19,r19,r18
    8958:	1025883a 	mov	r18,r2
    895c:	9880402c 	andhi	r2,r19,256
    8960:	10000426 	beq	r2,zero,8974 <__muldf3+0x4b0>
    8964:	00bfc034 	movhi	r2,65280
    8968:	10bfffc4 	addi	r2,r2,-1
    896c:	98a6703a 	and	r19,r19,r2
    8970:	39010004 	addi	r4,r7,1024
    8974:	2081ffc8 	cmpgei	r2,r4,2047
    8978:	103f381e 	bne	r2,zero,865c <__muldf3+0x198>
    897c:	9804977a 	slli	r2,r19,29
    8980:	9024d0fa 	srli	r18,r18,3
    8984:	9826927a 	slli	r19,r19,9
    8988:	20c1ffcc 	andi	r3,r4,2047
    898c:	14a4b03a 	or	r18,r2,r18
    8990:	9826d33a 	srli	r19,r19,12
    8994:	003f2006 	br	8618 <__muldf3+0x154>
    8998:	8722b03a 	or	r17,r16,fp
    899c:	88004526 	beq	r17,zero,8ab4 <__muldf3+0x5f0>
    89a0:	da000015 	stw	r8,0(sp)
    89a4:	80008626 	beq	r16,zero,8bc0 <__muldf3+0x6fc>
    89a8:	8009883a 	mov	r4,r16
    89ac:	00099740 	call	9974 <__clzsi2>
    89b0:	da000017 	ldw	r8,0(sp)
    89b4:	117ffd44 	addi	r5,r2,-11
    89b8:	01000744 	movi	r4,29
    89bc:	147ffe04 	addi	r17,r2,-8
    89c0:	2149c83a 	sub	r4,r4,r5
    89c4:	8460983a 	sll	r16,r16,r17
    89c8:	e108d83a 	srl	r4,fp,r4
    89cc:	e462983a 	sll	r17,fp,r17
    89d0:	2420b03a 	or	r16,r4,r16
    89d4:	4091c83a 	sub	r8,r8,r2
    89d8:	423f0344 	addi	r8,r8,-1011
    89dc:	0009883a 	mov	r4,zero
    89e0:	003ee706 	br	8580 <__muldf3+0xbc>
    89e4:	9924b03a 	or	r18,r19,r4
    89e8:	90002d26 	beq	r18,zero,8aa0 <__muldf3+0x5dc>
    89ec:	d9c00015 	stw	r7,0(sp)
    89f0:	98006826 	beq	r19,zero,8b94 <__muldf3+0x6d0>
    89f4:	9809883a 	mov	r4,r19
    89f8:	00099740 	call	9974 <__clzsi2>
    89fc:	d9c00017 	ldw	r7,0(sp)
    8a00:	113ffd44 	addi	r4,r2,-11
    8a04:	00c00744 	movi	r3,29
    8a08:	14bffe04 	addi	r18,r2,-8
    8a0c:	1907c83a 	sub	r3,r3,r4
    8a10:	9ca6983a 	sll	r19,r19,r18
    8a14:	88c6d83a 	srl	r3,r17,r3
    8a18:	8ca4983a 	sll	r18,r17,r18
    8a1c:	1ce6b03a 	or	r19,r3,r19
    8a20:	023f0344 	movi	r8,-1011
    8a24:	4091c83a 	sub	r8,r8,r2
    8a28:	002b883a 	mov	r21,zero
    8a2c:	002d883a 	mov	r22,zero
    8a30:	003ec206 	br	853c <__muldf3+0x78>
    8a34:	9924b03a 	or	r18,r19,r4
    8a38:	9000141e 	bne	r18,zero,8a8c <__muldf3+0x5c8>
    8a3c:	0027883a 	mov	r19,zero
    8a40:	05400204 	movi	r21,8
    8a44:	0201ffc4 	movi	r8,2047
    8a48:	05800084 	movi	r22,2
    8a4c:	003ebb06 	br	853c <__muldf3+0x78>
    8a50:	8722b03a 	or	r17,r16,fp
    8a54:	4201ffc4 	addi	r8,r8,2047
    8a58:	8800081e 	bne	r17,zero,8a7c <__muldf3+0x5b8>
    8a5c:	ad400094 	ori	r21,r21,2
    8a60:	0021883a 	mov	r16,zero
    8a64:	01000084 	movi	r4,2
    8a68:	003ec506 	br	8580 <__muldf3+0xbc>
    8a6c:	b08000a0 	cmpeqi	r2,r22,2
    8a70:	a00d883a 	mov	r6,r20
    8a74:	103ee126 	beq	r2,zero,85fc <__muldf3+0x138>
    8a78:	003ef806 	br	865c <__muldf3+0x198>
    8a7c:	ad4000d4 	ori	r21,r21,3
    8a80:	e023883a 	mov	r17,fp
    8a84:	010000c4 	movi	r4,3
    8a88:	003ebd06 	br	8580 <__muldf3+0xbc>
    8a8c:	2025883a 	mov	r18,r4
    8a90:	05400304 	movi	r21,12
    8a94:	0201ffc4 	movi	r8,2047
    8a98:	058000c4 	movi	r22,3
    8a9c:	003ea706 	br	853c <__muldf3+0x78>
    8aa0:	0027883a 	mov	r19,zero
    8aa4:	05400104 	movi	r21,4
    8aa8:	0011883a 	mov	r8,zero
    8aac:	05800044 	movi	r22,1
    8ab0:	003ea206 	br	853c <__muldf3+0x78>
    8ab4:	ad400054 	ori	r21,r21,1
    8ab8:	0021883a 	mov	r16,zero
    8abc:	01000044 	movi	r4,1
    8ac0:	003eaf06 	br	8580 <__muldf3+0xbc>
    8ac4:	04c00434 	movhi	r19,16
    8ac8:	000d883a 	mov	r6,zero
    8acc:	9cffffc4 	addi	r19,r19,-1
    8ad0:	04bfffc4 	movi	r18,-1
    8ad4:	00c1ffc4 	movi	r3,2047
    8ad8:	003ecf06 	br	8618 <__muldf3+0x154>
    8adc:	00800044 	movi	r2,1
    8ae0:	1105c83a 	sub	r2,r2,r4
    8ae4:	10c00e48 	cmpgei	r3,r2,57
    8ae8:	183ec81e 	bne	r3,zero,860c <__muldf3+0x148>
    8aec:	10c00808 	cmpgei	r3,r2,32
    8af0:	1800411e 	bne	r3,zero,8bf8 <__muldf3+0x734>
    8af4:	39c10784 	addi	r7,r7,1054
    8af8:	99c6983a 	sll	r3,r19,r7
    8afc:	9088d83a 	srl	r4,r18,r2
    8b00:	91ce983a 	sll	r7,r18,r7
    8b04:	98a6d83a 	srl	r19,r19,r2
    8b08:	1904b03a 	or	r2,r3,r4
    8b0c:	3824c03a 	cmpne	r18,r7,zero
    8b10:	1484b03a 	or	r2,r2,r18
    8b14:	10c001cc 	andi	r3,r2,7
    8b18:	18000726 	beq	r3,zero,8b38 <__muldf3+0x674>
    8b1c:	10c003cc 	andi	r3,r2,15
    8b20:	18c00120 	cmpeqi	r3,r3,4
    8b24:	1800041e 	bne	r3,zero,8b38 <__muldf3+0x674>
    8b28:	10c00104 	addi	r3,r2,4
    8b2c:	1885803a 	cmpltu	r2,r3,r2
    8b30:	98a7883a 	add	r19,r19,r2
    8b34:	1805883a 	mov	r2,r3
    8b38:	98c0202c 	andhi	r3,r19,128
    8b3c:	18004326 	beq	r3,zero,8c4c <__muldf3+0x788>
    8b40:	00c00044 	movi	r3,1
    8b44:	0027883a 	mov	r19,zero
    8b48:	0025883a 	mov	r18,zero
    8b4c:	003eb206 	br	8618 <__muldf3+0x154>
    8b50:	9880022c 	andhi	r2,r19,8
    8b54:	10000926 	beq	r2,zero,8b7c <__muldf3+0x6b8>
    8b58:	8080022c 	andhi	r2,r16,8
    8b5c:	1000071e 	bne	r2,zero,8b7c <__muldf3+0x6b8>
    8b60:	00800434 	movhi	r2,16
    8b64:	84c00234 	orhi	r19,r16,8
    8b68:	10bfffc4 	addi	r2,r2,-1
    8b6c:	98a6703a 	and	r19,r19,r2
    8b70:	b80d883a 	mov	r6,r23
    8b74:	8825883a 	mov	r18,r17
    8b78:	003fd606 	br	8ad4 <__muldf3+0x610>
    8b7c:	00800434 	movhi	r2,16
    8b80:	9cc00234 	orhi	r19,r19,8
    8b84:	10bfffc4 	addi	r2,r2,-1
    8b88:	98a6703a 	and	r19,r19,r2
    8b8c:	a00d883a 	mov	r6,r20
    8b90:	003fd006 	br	8ad4 <__muldf3+0x610>
    8b94:	00099740 	call	9974 <__clzsi2>
    8b98:	11000544 	addi	r4,r2,21
    8b9c:	21400748 	cmpgei	r5,r4,29
    8ba0:	1007883a 	mov	r3,r2
    8ba4:	d9c00017 	ldw	r7,0(sp)
    8ba8:	10800804 	addi	r2,r2,32
    8bac:	283f9526 	beq	r5,zero,8a04 <__muldf3+0x540>
    8bb0:	18fffe04 	addi	r3,r3,-8
    8bb4:	88e6983a 	sll	r19,r17,r3
    8bb8:	0025883a 	mov	r18,zero
    8bbc:	003f9806 	br	8a20 <__muldf3+0x55c>
    8bc0:	e009883a 	mov	r4,fp
    8bc4:	00099740 	call	9974 <__clzsi2>
    8bc8:	11400544 	addi	r5,r2,21
    8bcc:	29000748 	cmpgei	r4,r5,29
    8bd0:	1007883a 	mov	r3,r2
    8bd4:	da000017 	ldw	r8,0(sp)
    8bd8:	10800804 	addi	r2,r2,32
    8bdc:	203f7626 	beq	r4,zero,89b8 <__muldf3+0x4f4>
    8be0:	1c3ffe04 	addi	r16,r3,-8
    8be4:	e420983a 	sll	r16,fp,r16
    8be8:	0023883a 	mov	r17,zero
    8bec:	003f7906 	br	89d4 <__muldf3+0x510>
    8bf0:	400f883a 	mov	r7,r8
    8bf4:	003f4e06 	br	8930 <__muldf3+0x46c>
    8bf8:	00fff844 	movi	r3,-31
    8bfc:	1907c83a 	sub	r3,r3,r4
    8c00:	10800820 	cmpeqi	r2,r2,32
    8c04:	98c6d83a 	srl	r3,r19,r3
    8c08:	1000031e 	bne	r2,zero,8c18 <__muldf3+0x754>
    8c0c:	39c10f84 	addi	r7,r7,1086
    8c10:	99e6983a 	sll	r19,r19,r7
    8c14:	94e4b03a 	or	r18,r18,r19
    8c18:	9024c03a 	cmpne	r18,r18,zero
    8c1c:	90c4b03a 	or	r2,r18,r3
    8c20:	148001cc 	andi	r18,r2,7
    8c24:	9000051e 	bne	r18,zero,8c3c <__muldf3+0x778>
    8c28:	0027883a 	mov	r19,zero
    8c2c:	1004d0fa 	srli	r2,r2,3
    8c30:	0007883a 	mov	r3,zero
    8c34:	14a4b03a 	or	r18,r2,r18
    8c38:	003e7706 	br	8618 <__muldf3+0x154>
    8c3c:	10c003cc 	andi	r3,r2,15
    8c40:	18c00118 	cmpnei	r3,r3,4
    8c44:	0027883a 	mov	r19,zero
    8c48:	183fb71e 	bne	r3,zero,8b28 <__muldf3+0x664>
    8c4c:	9806927a 	slli	r3,r19,9
    8c50:	9824977a 	slli	r18,r19,29
    8c54:	1826d33a 	srli	r19,r3,12
    8c58:	003ff406 	br	8c2c <__muldf3+0x768>
    8c5c:	00800434 	movhi	r2,16
    8c60:	9cc00234 	orhi	r19,r19,8
    8c64:	10bfffc4 	addi	r2,r2,-1
    8c68:	98a6703a 	and	r19,r19,r2
    8c6c:	003f9906 	br	8ad4 <__muldf3+0x610>

00008c70 <__subdf3>:
    8c70:	00800434 	movhi	r2,16
    8c74:	defffb04 	addi	sp,sp,-20
    8c78:	3812d53a 	srli	r9,r7,20
    8c7c:	10bfffc4 	addi	r2,r2,-1
    8c80:	2886703a 	and	r3,r5,r2
    8c84:	dc000015 	stw	r16,0(sp)
    8c88:	3884703a 	and	r2,r7,r2
    8c8c:	2820d53a 	srli	r16,r5,20
    8c90:	3014d77a 	srli	r10,r6,29
    8c94:	280ad7fa 	srli	r5,r5,31
    8c98:	180690fa 	slli	r3,r3,3
    8c9c:	2016d77a 	srli	r11,r4,29
    8ca0:	100490fa 	slli	r2,r2,3
    8ca4:	4a41ffcc 	andi	r9,r9,2047
    8ca8:	dc800215 	stw	r18,8(sp)
    8cac:	8401ffcc 	andi	r16,r16,2047
    8cb0:	dfc00415 	stw	ra,16(sp)
    8cb4:	dcc00315 	stw	r19,12(sp)
    8cb8:	dc400115 	stw	r17,4(sp)
    8cbc:	4b01ffd8 	cmpnei	r12,r9,2047
    8cc0:	3810d7fa 	srli	r8,r7,31
    8cc4:	2825883a 	mov	r18,r5
    8cc8:	5084b03a 	or	r2,r10,r2
    8ccc:	201c90fa 	slli	r14,r4,3
    8cd0:	301a90fa 	slli	r13,r6,3
    8cd4:	29403fcc 	andi	r5,r5,255
    8cd8:	58ceb03a 	or	r7,r11,r3
    8cdc:	8255c83a 	sub	r10,r16,r9
    8ce0:	60006826 	beq	r12,zero,8e84 <__subdf3+0x214>
    8ce4:	42c0005c 	xori	r11,r8,1
    8ce8:	2ac07326 	beq	r5,r11,8eb8 <__subdf3+0x248>
    8cec:	0280590e 	bge	zero,r10,8e54 <__subdf3+0x1e4>
    8cf0:	4800691e 	bne	r9,zero,8e98 <__subdf3+0x228>
    8cf4:	1346b03a 	or	r3,r2,r13
    8cf8:	1800e826 	beq	r3,zero,909c <__subdf3+0x42c>
    8cfc:	50ffffc4 	addi	r3,r10,-1
    8d00:	18018126 	beq	r3,zero,9308 <__subdf3+0x698>
    8d04:	5281ffd8 	cmpnei	r10,r10,2047
    8d08:	5000eb26 	beq	r10,zero,90b8 <__subdf3+0x448>
    8d0c:	1815883a 	mov	r10,r3
    8d10:	50c00e48 	cmpgei	r3,r10,57
    8d14:	1800651e 	bne	r3,zero,8eac <__subdf3+0x23c>
    8d18:	50c00808 	cmpgei	r3,r10,32
    8d1c:	18012a1e 	bne	r3,zero,91c8 <__subdf3+0x558>
    8d20:	00c00804 	movi	r3,32
    8d24:	1a87c83a 	sub	r3,r3,r10
    8d28:	10e2983a 	sll	r17,r2,r3
    8d2c:	6a88d83a 	srl	r4,r13,r10
    8d30:	68da983a 	sll	r13,r13,r3
    8d34:	1284d83a 	srl	r2,r2,r10
    8d38:	8922b03a 	or	r17,r17,r4
    8d3c:	681ac03a 	cmpne	r13,r13,zero
    8d40:	8b62b03a 	or	r17,r17,r13
    8d44:	388fc83a 	sub	r7,r7,r2
    8d48:	7463c83a 	sub	r17,r14,r17
    8d4c:	7445803a 	cmpltu	r2,r14,r17
    8d50:	3889c83a 	sub	r4,r7,r2
    8d54:	2080202c 	andhi	r2,r4,128
    8d58:	10008e26 	beq	r2,zero,8f94 <__subdf3+0x324>
    8d5c:	04c02034 	movhi	r19,128
    8d60:	9cffffc4 	addi	r19,r19,-1
    8d64:	24e6703a 	and	r19,r4,r19
    8d68:	9800a626 	beq	r19,zero,9004 <__subdf3+0x394>
    8d6c:	9809883a 	mov	r4,r19
    8d70:	00099740 	call	9974 <__clzsi2>
    8d74:	117ffe04 	addi	r5,r2,-8
    8d78:	01000804 	movi	r4,32
    8d7c:	2149c83a 	sub	r4,r4,r5
    8d80:	8908d83a 	srl	r4,r17,r4
    8d84:	9944983a 	sll	r2,r19,r5
    8d88:	8962983a 	sll	r17,r17,r5
    8d8c:	2084b03a 	or	r2,r4,r2
    8d90:	2c00a516 	blt	r5,r16,9028 <__subdf3+0x3b8>
    8d94:	2c0bc83a 	sub	r5,r5,r16
    8d98:	29000044 	addi	r4,r5,1
    8d9c:	20c00808 	cmpgei	r3,r4,32
    8da0:	1800701e 	bne	r3,zero,8f64 <__subdf3+0x2f4>
    8da4:	00c00804 	movi	r3,32
    8da8:	1907c83a 	sub	r3,r3,r4
    8dac:	890ad83a 	srl	r5,r17,r4
    8db0:	88e2983a 	sll	r17,r17,r3
    8db4:	10c6983a 	sll	r3,r2,r3
    8db8:	1108d83a 	srl	r4,r2,r4
    8dbc:	8822c03a 	cmpne	r17,r17,zero
    8dc0:	1946b03a 	or	r3,r3,r5
    8dc4:	1c62b03a 	or	r17,r3,r17
    8dc8:	0021883a 	mov	r16,zero
    8dcc:	888001cc 	andi	r2,r17,7
    8dd0:	10000726 	beq	r2,zero,8df0 <__subdf3+0x180>
    8dd4:	888003cc 	andi	r2,r17,15
    8dd8:	10800120 	cmpeqi	r2,r2,4
    8ddc:	1000041e 	bne	r2,zero,8df0 <__subdf3+0x180>
    8de0:	88800104 	addi	r2,r17,4
    8de4:	1463803a 	cmpltu	r17,r2,r17
    8de8:	2449883a 	add	r4,r4,r17
    8dec:	1023883a 	mov	r17,r2
    8df0:	2080202c 	andhi	r2,r4,128
    8df4:	10006926 	beq	r2,zero,8f9c <__subdf3+0x32c>
    8df8:	84000044 	addi	r16,r16,1
    8dfc:	8081ffe0 	cmpeqi	r2,r16,2047
    8e00:	8401ffcc 	andi	r16,r16,2047
    8e04:	10007b1e 	bne	r2,zero,8ff4 <__subdf3+0x384>
    8e08:	00bfe034 	movhi	r2,65408
    8e0c:	10bfffc4 	addi	r2,r2,-1
    8e10:	2084703a 	and	r2,r4,r2
    8e14:	1006927a 	slli	r3,r2,9
    8e18:	8822d0fa 	srli	r17,r17,3
    8e1c:	1008977a 	slli	r4,r2,29
    8e20:	1806d33a 	srli	r3,r3,12
    8e24:	2444b03a 	or	r2,r4,r17
    8e28:	8020953a 	slli	r16,r16,20
    8e2c:	902497fa 	slli	r18,r18,31
    8e30:	80c6b03a 	or	r3,r16,r3
    8e34:	1c86b03a 	or	r3,r3,r18
    8e38:	dfc00417 	ldw	ra,16(sp)
    8e3c:	dcc00317 	ldw	r19,12(sp)
    8e40:	dc800217 	ldw	r18,8(sp)
    8e44:	dc400117 	ldw	r17,4(sp)
    8e48:	dc000017 	ldw	r16,0(sp)
    8e4c:	dec00504 	addi	sp,sp,20
    8e50:	f800283a 	ret
    8e54:	50002c26 	beq	r10,zero,8f08 <__subdf3+0x298>
    8e58:	4c15c83a 	sub	r10,r9,r16
    8e5c:	5825883a 	mov	r18,r11
    8e60:	8000b21e 	bne	r16,zero,912c <__subdf3+0x4bc>
    8e64:	3b86b03a 	or	r3,r7,r14
    8e68:	18010826 	beq	r3,zero,928c <__subdf3+0x61c>
    8e6c:	50ffffc4 	addi	r3,r10,-1
    8e70:	18015a26 	beq	r3,zero,93dc <__subdf3+0x76c>
    8e74:	5401ffd8 	cmpnei	r16,r10,2047
    8e78:	80012926 	beq	r16,zero,9320 <__subdf3+0x6b0>
    8e7c:	1815883a 	mov	r10,r3
    8e80:	0000ac06 	br	9134 <__subdf3+0x4c4>
    8e84:	1346b03a 	or	r3,r2,r13
    8e88:	183f9626 	beq	r3,zero,8ce4 <__subdf3+0x74>
    8e8c:	42c03fcc 	andi	r11,r8,255
    8e90:	2a006a26 	beq	r5,r8,903c <__subdf3+0x3cc>
    8e94:	02bfef0e 	bge	zero,r10,8e54 <__subdf3+0x1e4>
    8e98:	80c1ffd8 	cmpnei	r3,r16,2047
    8e9c:	18008626 	beq	r3,zero,90b8 <__subdf3+0x448>
    8ea0:	50c00e48 	cmpgei	r3,r10,57
    8ea4:	10802034 	orhi	r2,r2,128
    8ea8:	183f9b26 	beq	r3,zero,8d18 <__subdf3+0xa8>
    8eac:	1344b03a 	or	r2,r2,r13
    8eb0:	1022c03a 	cmpne	r17,r2,zero
    8eb4:	003fa406 	br	8d48 <__subdf3+0xd8>
    8eb8:	0280600e 	bge	zero,r10,903c <__subdf3+0x3cc>
    8ebc:	48002126 	beq	r9,zero,8f44 <__subdf3+0x2d4>
    8ec0:	80c1ffd8 	cmpnei	r3,r16,2047
    8ec4:	18011d26 	beq	r3,zero,933c <__subdf3+0x6cc>
    8ec8:	10802034 	orhi	r2,r2,128
    8ecc:	50c00e48 	cmpgei	r3,r10,57
    8ed0:	18003e1e 	bne	r3,zero,8fcc <__subdf3+0x35c>
    8ed4:	50c00808 	cmpgei	r3,r10,32
    8ed8:	1800d526 	beq	r3,zero,9230 <__subdf3+0x5c0>
    8edc:	547ff804 	addi	r17,r10,-32
    8ee0:	51000820 	cmpeqi	r4,r10,32
    8ee4:	1446d83a 	srl	r3,r2,r17
    8ee8:	2000041e 	bne	r4,zero,8efc <__subdf3+0x28c>
    8eec:	01001004 	movi	r4,64
    8ef0:	2295c83a 	sub	r10,r4,r10
    8ef4:	1284983a 	sll	r2,r2,r10
    8ef8:	689ab03a 	or	r13,r13,r2
    8efc:	6822c03a 	cmpne	r17,r13,zero
    8f00:	88e2b03a 	or	r17,r17,r3
    8f04:	00003306 	br	8fd4 <__subdf3+0x364>
    8f08:	80c00044 	addi	r3,r16,1
    8f0c:	18c1ff8c 	andi	r3,r3,2046
    8f10:	1800971e 	bne	r3,zero,9170 <__subdf3+0x500>
    8f14:	1350b03a 	or	r8,r2,r13
    8f18:	3b86b03a 	or	r3,r7,r14
    8f1c:	8000e21e 	bne	r16,zero,92a8 <__subdf3+0x638>
    8f20:	18012526 	beq	r3,zero,93b8 <__subdf3+0x748>
    8f24:	4001411e 	bne	r8,zero,942c <__subdf3+0x7bc>
    8f28:	3806977a 	slli	r3,r7,29
    8f2c:	00880034 	movhi	r2,8192
    8f30:	10bfffc4 	addi	r2,r2,-1
    8f34:	208a703a 	and	r5,r4,r2
    8f38:	3810d0fa 	srli	r8,r7,3
    8f3c:	28c4b03a 	or	r2,r5,r3
    8f40:	00001d06 	br	8fb8 <__subdf3+0x348>
    8f44:	1346b03a 	or	r3,r2,r13
    8f48:	18005426 	beq	r3,zero,909c <__subdf3+0x42c>
    8f4c:	50ffffc4 	addi	r3,r10,-1
    8f50:	1800e526 	beq	r3,zero,92e8 <__subdf3+0x678>
    8f54:	5281ffd8 	cmpnei	r10,r10,2047
    8f58:	50012d26 	beq	r10,zero,9410 <__subdf3+0x7a0>
    8f5c:	1815883a 	mov	r10,r3
    8f60:	003fda06 	br	8ecc <__subdf3+0x25c>
    8f64:	297ff844 	addi	r5,r5,-31
    8f68:	20c00820 	cmpeqi	r3,r4,32
    8f6c:	114ad83a 	srl	r5,r2,r5
    8f70:	1800041e 	bne	r3,zero,8f84 <__subdf3+0x314>
    8f74:	00c01004 	movi	r3,64
    8f78:	1909c83a 	sub	r4,r3,r4
    8f7c:	1104983a 	sll	r2,r2,r4
    8f80:	88a2b03a 	or	r17,r17,r2
    8f84:	8822c03a 	cmpne	r17,r17,zero
    8f88:	8962b03a 	or	r17,r17,r5
    8f8c:	0009883a 	mov	r4,zero
    8f90:	0021883a 	mov	r16,zero
    8f94:	888001cc 	andi	r2,r17,7
    8f98:	103f8e1e 	bne	r2,zero,8dd4 <__subdf3+0x164>
    8f9c:	8822d0fa 	srli	r17,r17,3
    8fa0:	2004977a 	slli	r2,r4,29
    8fa4:	2010d0fa 	srli	r8,r4,3
    8fa8:	8015883a 	mov	r10,r16
    8fac:	8884b03a 	or	r2,r17,r2
    8fb0:	50c1ffe0 	cmpeqi	r3,r10,2047
    8fb4:	18016f1e 	bne	r3,zero,9574 <__subdf3+0x904>
    8fb8:	00c00434 	movhi	r3,16
    8fbc:	18ffffc4 	addi	r3,r3,-1
    8fc0:	40c6703a 	and	r3,r8,r3
    8fc4:	5401ffcc 	andi	r16,r10,2047
    8fc8:	003f9706 	br	8e28 <__subdf3+0x1b8>
    8fcc:	1344b03a 	or	r2,r2,r13
    8fd0:	1022c03a 	cmpne	r17,r2,zero
    8fd4:	8ba3883a 	add	r17,r17,r14
    8fd8:	8b85803a 	cmpltu	r2,r17,r14
    8fdc:	11c9883a 	add	r4,r2,r7
    8fe0:	2080202c 	andhi	r2,r4,128
    8fe4:	103feb26 	beq	r2,zero,8f94 <__subdf3+0x324>
    8fe8:	84000044 	addi	r16,r16,1
    8fec:	8081ffe0 	cmpeqi	r2,r16,2047
    8ff0:	10006b26 	beq	r2,zero,91a0 <__subdf3+0x530>
    8ff4:	0401ffc4 	movi	r16,2047
    8ff8:	0007883a 	mov	r3,zero
    8ffc:	0005883a 	mov	r2,zero
    9000:	003f8906 	br	8e28 <__subdf3+0x1b8>
    9004:	8809883a 	mov	r4,r17
    9008:	00099740 	call	9974 <__clzsi2>
    900c:	11400604 	addi	r5,r2,24
    9010:	28c00808 	cmpgei	r3,r5,32
    9014:	183f5826 	beq	r3,zero,8d78 <__subdf3+0x108>
    9018:	10bffe04 	addi	r2,r2,-8
    901c:	8884983a 	sll	r2,r17,r2
    9020:	0023883a 	mov	r17,zero
    9024:	2c3f5b0e 	bge	r5,r16,8d94 <__subdf3+0x124>
    9028:	013fe034 	movhi	r4,65408
    902c:	213fffc4 	addi	r4,r4,-1
    9030:	8161c83a 	sub	r16,r16,r5
    9034:	1108703a 	and	r4,r2,r4
    9038:	003f6406 	br	8dcc <__subdf3+0x15c>
    903c:	50002c26 	beq	r10,zero,90f0 <__subdf3+0x480>
    9040:	4c15c83a 	sub	r10,r9,r16
    9044:	80007226 	beq	r16,zero,9210 <__subdf3+0x5a0>
    9048:	6000ea26 	beq	r12,zero,93f4 <__subdf3+0x784>
    904c:	39c02034 	orhi	r7,r7,128
    9050:	50c00e48 	cmpgei	r3,r10,57
    9054:	1800c01e 	bne	r3,zero,9358 <__subdf3+0x6e8>
    9058:	50c00808 	cmpgei	r3,r10,32
    905c:	1801261e 	bne	r3,zero,94f8 <__subdf3+0x888>
    9060:	00c00804 	movi	r3,32
    9064:	1a87c83a 	sub	r3,r3,r10
    9068:	38e2983a 	sll	r17,r7,r3
    906c:	7288d83a 	srl	r4,r14,r10
    9070:	70c6983a 	sll	r3,r14,r3
    9074:	3a8ed83a 	srl	r7,r7,r10
    9078:	8922b03a 	or	r17,r17,r4
    907c:	1806c03a 	cmpne	r3,r3,zero
    9080:	88e2b03a 	or	r17,r17,r3
    9084:	11c5883a 	add	r2,r2,r7
    9088:	8b63883a 	add	r17,r17,r13
    908c:	8b49803a 	cmpltu	r4,r17,r13
    9090:	2089883a 	add	r4,r4,r2
    9094:	4821883a 	mov	r16,r9
    9098:	003fd106 	br	8fe0 <__subdf3+0x370>
    909c:	380c977a 	slli	r6,r7,29
    90a0:	00880034 	movhi	r2,8192
    90a4:	10bfffc4 	addi	r2,r2,-1
    90a8:	2088703a 	and	r4,r4,r2
    90ac:	3810d0fa 	srli	r8,r7,3
    90b0:	2184b03a 	or	r2,r4,r6
    90b4:	003fbe06 	br	8fb0 <__subdf3+0x340>
    90b8:	380c977a 	slli	r6,r7,29
    90bc:	00880034 	movhi	r2,8192
    90c0:	10bfffc4 	addi	r2,r2,-1
    90c4:	380ed0fa 	srli	r7,r7,3
    90c8:	2084703a 	and	r2,r4,r2
    90cc:	1184b03a 	or	r2,r2,r6
    90d0:	3886b03a 	or	r3,r7,r2
    90d4:	18012326 	beq	r3,zero,9564 <__subdf3+0x8f4>
    90d8:	01000434 	movhi	r4,16
    90dc:	38c00234 	orhi	r3,r7,8
    90e0:	213fffc4 	addi	r4,r4,-1
    90e4:	1906703a 	and	r3,r3,r4
    90e8:	0401ffc4 	movi	r16,2047
    90ec:	003f4e06 	br	8e28 <__subdf3+0x1b8>
    90f0:	80c00044 	addi	r3,r16,1
    90f4:	1941ff8c 	andi	r5,r3,2046
    90f8:	2800581e 	bne	r5,zero,925c <__subdf3+0x5ec>
    90fc:	3b86b03a 	or	r3,r7,r14
    9100:	8000a31e 	bne	r16,zero,9390 <__subdf3+0x720>
    9104:	1800ea26 	beq	r3,zero,94b0 <__subdf3+0x840>
    9108:	1346b03a 	or	r3,r2,r13
    910c:	1800ef1e 	bne	r3,zero,94cc <__subdf3+0x85c>
    9110:	380a977a 	slli	r5,r7,29
    9114:	00880034 	movhi	r2,8192
    9118:	10bfffc4 	addi	r2,r2,-1
    911c:	2084703a 	and	r2,r4,r2
    9120:	3810d0fa 	srli	r8,r7,3
    9124:	2884b03a 	or	r2,r5,r2
    9128:	003fa306 	br	8fb8 <__subdf3+0x348>
    912c:	60007c26 	beq	r12,zero,9320 <__subdf3+0x6b0>
    9130:	39c02034 	orhi	r7,r7,128
    9134:	50c00e48 	cmpgei	r3,r10,57
    9138:	18002e1e 	bne	r3,zero,91f4 <__subdf3+0x584>
    913c:	50c00808 	cmpgei	r3,r10,32
    9140:	1800881e 	bne	r3,zero,9364 <__subdf3+0x6f4>
    9144:	00c00804 	movi	r3,32
    9148:	1a87c83a 	sub	r3,r3,r10
    914c:	7288d83a 	srl	r4,r14,r10
    9150:	38e2983a 	sll	r17,r7,r3
    9154:	70dc983a 	sll	r14,r14,r3
    9158:	3aa0d83a 	srl	r16,r7,r10
    915c:	8922b03a 	or	r17,r17,r4
    9160:	701cc03a 	cmpne	r14,r14,zero
    9164:	8ba2b03a 	or	r17,r17,r14
    9168:	1405c83a 	sub	r2,r2,r16
    916c:	00002306 	br	91fc <__subdf3+0x58c>
    9170:	7363c83a 	sub	r17,r14,r13
    9174:	3889c83a 	sub	r4,r7,r2
    9178:	7467803a 	cmpltu	r19,r14,r17
    917c:	24e7c83a 	sub	r19,r4,r19
    9180:	98c0202c 	andhi	r3,r19,128
    9184:	1800521e 	bne	r3,zero,92d0 <__subdf3+0x660>
    9188:	8cc4b03a 	or	r2,r17,r19
    918c:	103ef61e 	bne	r2,zero,8d68 <__subdf3+0xf8>
    9190:	0011883a 	mov	r8,zero
    9194:	0025883a 	mov	r18,zero
    9198:	003f8706 	br	8fb8 <__subdf3+0x348>
    919c:	04000084 	movi	r16,2
    91a0:	00bfe034 	movhi	r2,65408
    91a4:	10bfffc4 	addi	r2,r2,-1
    91a8:	8806d07a 	srli	r3,r17,1
    91ac:	2084703a 	and	r2,r4,r2
    91b0:	100a97fa 	slli	r5,r2,31
    91b4:	8c40004c 	andi	r17,r17,1
    91b8:	1c62b03a 	or	r17,r3,r17
    91bc:	1008d07a 	srli	r4,r2,1
    91c0:	2c62b03a 	or	r17,r5,r17
    91c4:	003f0106 	br	8dcc <__subdf3+0x15c>
    91c8:	547ff804 	addi	r17,r10,-32
    91cc:	51000820 	cmpeqi	r4,r10,32
    91d0:	1446d83a 	srl	r3,r2,r17
    91d4:	2000041e 	bne	r4,zero,91e8 <__subdf3+0x578>
    91d8:	01001004 	movi	r4,64
    91dc:	2295c83a 	sub	r10,r4,r10
    91e0:	1284983a 	sll	r2,r2,r10
    91e4:	689ab03a 	or	r13,r13,r2
    91e8:	6822c03a 	cmpne	r17,r13,zero
    91ec:	88e2b03a 	or	r17,r17,r3
    91f0:	003ed506 	br	8d48 <__subdf3+0xd8>
    91f4:	3ba2b03a 	or	r17,r7,r14
    91f8:	8822c03a 	cmpne	r17,r17,zero
    91fc:	6c63c83a 	sub	r17,r13,r17
    9200:	6c49803a 	cmpltu	r4,r13,r17
    9204:	1109c83a 	sub	r4,r2,r4
    9208:	4821883a 	mov	r16,r9
    920c:	003ed106 	br	8d54 <__subdf3+0xe4>
    9210:	3b86b03a 	or	r3,r7,r14
    9214:	18001d26 	beq	r3,zero,928c <__subdf3+0x61c>
    9218:	50ffffc4 	addi	r3,r10,-1
    921c:	1800c126 	beq	r3,zero,9524 <__subdf3+0x8b4>
    9220:	5281ffd8 	cmpnei	r10,r10,2047
    9224:	50003e26 	beq	r10,zero,9320 <__subdf3+0x6b0>
    9228:	1815883a 	mov	r10,r3
    922c:	003f8806 	br	9050 <__subdf3+0x3e0>
    9230:	00c00804 	movi	r3,32
    9234:	1a87c83a 	sub	r3,r3,r10
    9238:	10e2983a 	sll	r17,r2,r3
    923c:	6a88d83a 	srl	r4,r13,r10
    9240:	68da983a 	sll	r13,r13,r3
    9244:	1284d83a 	srl	r2,r2,r10
    9248:	8922b03a 	or	r17,r17,r4
    924c:	681ac03a 	cmpne	r13,r13,zero
    9250:	8b62b03a 	or	r17,r17,r13
    9254:	388f883a 	add	r7,r7,r2
    9258:	003f5e06 	br	8fd4 <__subdf3+0x364>
    925c:	1901ffe0 	cmpeqi	r4,r3,2047
    9260:	203f641e 	bne	r4,zero,8ff4 <__subdf3+0x384>
    9264:	735b883a 	add	r13,r14,r13
    9268:	6b89803a 	cmpltu	r4,r13,r14
    926c:	3885883a 	add	r2,r7,r2
    9270:	1105883a 	add	r2,r2,r4
    9274:	102297fa 	slli	r17,r2,31
    9278:	681ad07a 	srli	r13,r13,1
    927c:	1008d07a 	srli	r4,r2,1
    9280:	1821883a 	mov	r16,r3
    9284:	8b62b03a 	or	r17,r17,r13
    9288:	003f4206 	br	8f94 <__subdf3+0x324>
    928c:	1008977a 	slli	r4,r2,29
    9290:	00c80034 	movhi	r3,8192
    9294:	18ffffc4 	addi	r3,r3,-1
    9298:	30cc703a 	and	r6,r6,r3
    929c:	1010d0fa 	srli	r8,r2,3
    92a0:	3104b03a 	or	r2,r6,r4
    92a4:	003f4206 	br	8fb0 <__subdf3+0x340>
    92a8:	18006c1e 	bne	r3,zero,945c <__subdf3+0x7ec>
    92ac:	4000a826 	beq	r8,zero,9550 <__subdf3+0x8e0>
    92b0:	1008977a 	slli	r4,r2,29
    92b4:	00c80034 	movhi	r3,8192
    92b8:	18ffffc4 	addi	r3,r3,-1
    92bc:	30c6703a 	and	r3,r6,r3
    92c0:	100ed0fa 	srli	r7,r2,3
    92c4:	5825883a 	mov	r18,r11
    92c8:	1904b03a 	or	r2,r3,r4
    92cc:	003f8006 	br	90d0 <__subdf3+0x460>
    92d0:	6ba3c83a 	sub	r17,r13,r14
    92d4:	11c5c83a 	sub	r2,r2,r7
    92d8:	6c49803a 	cmpltu	r4,r13,r17
    92dc:	1127c83a 	sub	r19,r2,r4
    92e0:	5825883a 	mov	r18,r11
    92e4:	003ea006 	br	8d68 <__subdf3+0xf8>
    92e8:	7363883a 	add	r17,r14,r13
    92ec:	3885883a 	add	r2,r7,r2
    92f0:	8b9d803a 	cmpltu	r14,r17,r14
    92f4:	1389883a 	add	r4,r2,r14
    92f8:	2080202c 	andhi	r2,r4,128
    92fc:	103fa71e 	bne	r2,zero,919c <__subdf3+0x52c>
    9300:	04000044 	movi	r16,1
    9304:	003f2306 	br	8f94 <__subdf3+0x324>
    9308:	7363c83a 	sub	r17,r14,r13
    930c:	3885c83a 	sub	r2,r7,r2
    9310:	745d803a 	cmpltu	r14,r14,r17
    9314:	1389c83a 	sub	r4,r2,r14
    9318:	04000044 	movi	r16,1
    931c:	003e8d06 	br	8d54 <__subdf3+0xe4>
    9320:	1008977a 	slli	r4,r2,29
    9324:	00c80034 	movhi	r3,8192
    9328:	18ffffc4 	addi	r3,r3,-1
    932c:	30c6703a 	and	r3,r6,r3
    9330:	100ed0fa 	srli	r7,r2,3
    9334:	1904b03a 	or	r2,r3,r4
    9338:	003f6506 	br	90d0 <__subdf3+0x460>
    933c:	380c977a 	slli	r6,r7,29
    9340:	00880034 	movhi	r2,8192
    9344:	10bfffc4 	addi	r2,r2,-1
    9348:	2088703a 	and	r4,r4,r2
    934c:	380ed0fa 	srli	r7,r7,3
    9350:	2184b03a 	or	r2,r4,r6
    9354:	003f5e06 	br	90d0 <__subdf3+0x460>
    9358:	3ba2b03a 	or	r17,r7,r14
    935c:	8822c03a 	cmpne	r17,r17,zero
    9360:	003f4906 	br	9088 <__subdf3+0x418>
    9364:	547ff804 	addi	r17,r10,-32
    9368:	51000820 	cmpeqi	r4,r10,32
    936c:	3c46d83a 	srl	r3,r7,r17
    9370:	2000041e 	bne	r4,zero,9384 <__subdf3+0x714>
    9374:	01001004 	movi	r4,64
    9378:	2295c83a 	sub	r10,r4,r10
    937c:	3a8e983a 	sll	r7,r7,r10
    9380:	71dcb03a 	or	r14,r14,r7
    9384:	7022c03a 	cmpne	r17,r14,zero
    9388:	88e2b03a 	or	r17,r17,r3
    938c:	003f9b06 	br	91fc <__subdf3+0x58c>
    9390:	18001826 	beq	r3,zero,93f4 <__subdf3+0x784>
    9394:	135ab03a 	or	r13,r2,r13
    9398:	380a977a 	slli	r5,r7,29
    939c:	380ed0fa 	srli	r7,r7,3
    93a0:	6800311e 	bne	r13,zero,9468 <__subdf3+0x7f8>
    93a4:	00880034 	movhi	r2,8192
    93a8:	10bfffc4 	addi	r2,r2,-1
    93ac:	2084703a 	and	r2,r4,r2
    93b0:	1144b03a 	or	r2,r2,r5
    93b4:	003f4606 	br	90d0 <__subdf3+0x460>
    93b8:	40005f26 	beq	r8,zero,9538 <__subdf3+0x8c8>
    93bc:	1008977a 	slli	r4,r2,29
    93c0:	00c80034 	movhi	r3,8192
    93c4:	18ffffc4 	addi	r3,r3,-1
    93c8:	30cc703a 	and	r6,r6,r3
    93cc:	1010d0fa 	srli	r8,r2,3
    93d0:	5825883a 	mov	r18,r11
    93d4:	3104b03a 	or	r2,r6,r4
    93d8:	003ef706 	br	8fb8 <__subdf3+0x348>
    93dc:	6ba3c83a 	sub	r17,r13,r14
    93e0:	11c5c83a 	sub	r2,r2,r7
    93e4:	6c5b803a 	cmpltu	r13,r13,r17
    93e8:	1349c83a 	sub	r4,r2,r13
    93ec:	04000044 	movi	r16,1
    93f0:	003e5806 	br	8d54 <__subdf3+0xe4>
    93f4:	1006977a 	slli	r3,r2,29
    93f8:	01080034 	movhi	r4,8192
    93fc:	213fffc4 	addi	r4,r4,-1
    9400:	3108703a 	and	r4,r6,r4
    9404:	100ed0fa 	srli	r7,r2,3
    9408:	1904b03a 	or	r2,r3,r4
    940c:	003f3006 	br	90d0 <__subdf3+0x460>
    9410:	3806977a 	slli	r3,r7,29
    9414:	00880034 	movhi	r2,8192
    9418:	10bfffc4 	addi	r2,r2,-1
    941c:	2084703a 	and	r2,r4,r2
    9420:	380ed0fa 	srli	r7,r7,3
    9424:	10c4b03a 	or	r2,r2,r3
    9428:	003f2906 	br	90d0 <__subdf3+0x460>
    942c:	7363c83a 	sub	r17,r14,r13
    9430:	7447803a 	cmpltu	r3,r14,r17
    9434:	3889c83a 	sub	r4,r7,r2
    9438:	20c9c83a 	sub	r4,r4,r3
    943c:	20c0202c 	andhi	r3,r4,128
    9440:	18004026 	beq	r3,zero,9544 <__subdf3+0x8d4>
    9444:	6ba3c83a 	sub	r17,r13,r14
    9448:	11c5c83a 	sub	r2,r2,r7
    944c:	6c5b803a 	cmpltu	r13,r13,r17
    9450:	1349c83a 	sub	r4,r2,r13
    9454:	5825883a 	mov	r18,r11
    9458:	003e5c06 	br	8dcc <__subdf3+0x15c>
    945c:	380a977a 	slli	r5,r7,29
    9460:	380ed0fa 	srli	r7,r7,3
    9464:	403fcf26 	beq	r8,zero,93a4 <__subdf3+0x734>
    9468:	00c80034 	movhi	r3,8192
    946c:	18ffffc4 	addi	r3,r3,-1
    9470:	20c8703a 	and	r4,r4,r3
    9474:	3a00022c 	andhi	r8,r7,8
    9478:	2148b03a 	or	r4,r4,r5
    947c:	40000826 	beq	r8,zero,94a0 <__subdf3+0x830>
    9480:	100ad0fa 	srli	r5,r2,3
    9484:	2a00022c 	andhi	r8,r5,8
    9488:	4000051e 	bne	r8,zero,94a0 <__subdf3+0x830>
    948c:	1004977a 	slli	r2,r2,29
    9490:	30c6703a 	and	r3,r6,r3
    9494:	5825883a 	mov	r18,r11
    9498:	1888b03a 	or	r4,r3,r2
    949c:	280f883a 	mov	r7,r5
    94a0:	380e90fa 	slli	r7,r7,3
    94a4:	2005883a 	mov	r2,r4
    94a8:	380ed0fa 	srli	r7,r7,3
    94ac:	003f0806 	br	90d0 <__subdf3+0x460>
    94b0:	100a977a 	slli	r5,r2,29
    94b4:	00c80034 	movhi	r3,8192
    94b8:	18ffffc4 	addi	r3,r3,-1
    94bc:	30c6703a 	and	r3,r6,r3
    94c0:	1010d0fa 	srli	r8,r2,3
    94c4:	28c4b03a 	or	r2,r5,r3
    94c8:	003ebb06 	br	8fb8 <__subdf3+0x348>
    94cc:	7363883a 	add	r17,r14,r13
    94d0:	3885883a 	add	r2,r7,r2
    94d4:	8b9d803a 	cmpltu	r14,r17,r14
    94d8:	1389883a 	add	r4,r2,r14
    94dc:	2080202c 	andhi	r2,r4,128
    94e0:	103eac26 	beq	r2,zero,8f94 <__subdf3+0x324>
    94e4:	00bfe034 	movhi	r2,65408
    94e8:	10bfffc4 	addi	r2,r2,-1
    94ec:	2088703a 	and	r4,r4,r2
    94f0:	04000044 	movi	r16,1
    94f4:	003ea706 	br	8f94 <__subdf3+0x324>
    94f8:	50fff804 	addi	r3,r10,-32
    94fc:	51000820 	cmpeqi	r4,r10,32
    9500:	38c6d83a 	srl	r3,r7,r3
    9504:	2000041e 	bne	r4,zero,9518 <__subdf3+0x8a8>
    9508:	01001004 	movi	r4,64
    950c:	2295c83a 	sub	r10,r4,r10
    9510:	3a8e983a 	sll	r7,r7,r10
    9514:	71dcb03a 	or	r14,r14,r7
    9518:	7022c03a 	cmpne	r17,r14,zero
    951c:	88e2b03a 	or	r17,r17,r3
    9520:	003ed906 	br	9088 <__subdf3+0x418>
    9524:	7363883a 	add	r17,r14,r13
    9528:	3885883a 	add	r2,r7,r2
    952c:	8b5b803a 	cmpltu	r13,r17,r13
    9530:	1349883a 	add	r4,r2,r13
    9534:	003f7006 	br	92f8 <__subdf3+0x688>
    9538:	0005883a 	mov	r2,zero
    953c:	0025883a 	mov	r18,zero
    9540:	003e9d06 	br	8fb8 <__subdf3+0x348>
    9544:	8904b03a 	or	r2,r17,r4
    9548:	103f1126 	beq	r2,zero,9190 <__subdf3+0x520>
    954c:	003e9106 	br	8f94 <__subdf3+0x324>
    9550:	01c00434 	movhi	r7,16
    9554:	00bfffc4 	movi	r2,-1
    9558:	39ffffc4 	addi	r7,r7,-1
    955c:	0025883a 	mov	r18,zero
    9560:	003edd06 	br	90d8 <__subdf3+0x468>
    9564:	0005883a 	mov	r2,zero
    9568:	0401ffc4 	movi	r16,2047
    956c:	0007883a 	mov	r3,zero
    9570:	003e2d06 	br	8e28 <__subdf3+0x1b8>
    9574:	400f883a 	mov	r7,r8
    9578:	003ed506 	br	90d0 <__subdf3+0x460>

0000957c <__unorddf2>:
    957c:	2806d53a 	srli	r3,r5,20
    9580:	3810d53a 	srli	r8,r7,20
    9584:	02400434 	movhi	r9,16
    9588:	18c1ffcc 	andi	r3,r3,2047
    958c:	4a7fffc4 	addi	r9,r9,-1
    9590:	18c1ffd8 	cmpnei	r3,r3,2047
    9594:	2a4a703a 	and	r5,r5,r9
    9598:	3a4e703a 	and	r7,r7,r9
    959c:	4201ffcc 	andi	r8,r8,2047
    95a0:	18000426 	beq	r3,zero,95b4 <__unorddf2+0x38>
    95a4:	4201ffd8 	cmpnei	r8,r8,2047
    95a8:	40000626 	beq	r8,zero,95c4 <__unorddf2+0x48>
    95ac:	0005883a 	mov	r2,zero
    95b0:	f800283a 	ret
    95b4:	290ab03a 	or	r5,r5,r4
    95b8:	283ffa26 	beq	r5,zero,95a4 <__unorddf2+0x28>
    95bc:	00800044 	movi	r2,1
    95c0:	f800283a 	ret
    95c4:	398eb03a 	or	r7,r7,r6
    95c8:	3804c03a 	cmpne	r2,r7,zero
    95cc:	f800283a 	ret

000095d0 <__fixdfsi>:
    95d0:	2806d53a 	srli	r3,r5,20
    95d4:	01800434 	movhi	r6,16
    95d8:	31bfffc4 	addi	r6,r6,-1
    95dc:	18c1ffcc 	andi	r3,r3,2047
    95e0:	19c0ffd0 	cmplti	r7,r3,1023
    95e4:	2810d7fa 	srli	r8,r5,31
    95e8:	298a703a 	and	r5,r5,r6
    95ec:	3800061e 	bne	r7,zero,9608 <__fixdfsi+0x38>
    95f0:	18810790 	cmplti	r2,r3,1054
    95f4:	1000061e 	bne	r2,zero,9610 <__fixdfsi+0x40>
    95f8:	00a00034 	movhi	r2,32768
    95fc:	10bfffc4 	addi	r2,r2,-1
    9600:	4085883a 	add	r2,r8,r2
    9604:	f800283a 	ret
    9608:	0005883a 	mov	r2,zero
    960c:	f800283a 	ret
    9610:	01810cc4 	movi	r6,1075
    9614:	30cdc83a 	sub	r6,r6,r3
    9618:	30800808 	cmpgei	r2,r6,32
    961c:	29400434 	orhi	r5,r5,16
    9620:	1000071e 	bne	r2,zero,9640 <__fixdfsi+0x70>
    9624:	18befb44 	addi	r2,r3,-1043
    9628:	2884983a 	sll	r2,r5,r2
    962c:	2188d83a 	srl	r4,r4,r6
    9630:	1104b03a 	or	r2,r2,r4
    9634:	403ff526 	beq	r8,zero,960c <__fixdfsi+0x3c>
    9638:	0085c83a 	sub	r2,zero,r2
    963c:	f800283a 	ret
    9640:	008104c4 	movi	r2,1043
    9644:	10c5c83a 	sub	r2,r2,r3
    9648:	2884d83a 	srl	r2,r5,r2
    964c:	003ff906 	br	9634 <__fixdfsi+0x64>

00009650 <__floatsidf>:
    9650:	defffd04 	addi	sp,sp,-12
    9654:	dfc00215 	stw	ra,8(sp)
    9658:	dc400115 	stw	r17,4(sp)
    965c:	dc000015 	stw	r16,0(sp)
    9660:	20001326 	beq	r4,zero,96b0 <__floatsidf+0x60>
    9664:	2022d7fa 	srli	r17,r4,31
    9668:	2021883a 	mov	r16,r4
    966c:	20002416 	blt	r4,zero,9700 <__floatsidf+0xb0>
    9670:	8009883a 	mov	r4,r16
    9674:	00099740 	call	9974 <__clzsi2>
    9678:	01010784 	movi	r4,1054
    967c:	2089c83a 	sub	r4,r4,r2
    9680:	114002c8 	cmpgei	r5,r2,11
    9684:	20c1ffcc 	andi	r3,r4,2047
    9688:	2800161e 	bne	r5,zero,96e4 <__floatsidf+0x94>
    968c:	010002c4 	movi	r4,11
    9690:	2089c83a 	sub	r4,r4,r2
    9694:	810ad83a 	srl	r5,r16,r4
    9698:	01000434 	movhi	r4,16
    969c:	10800544 	addi	r2,r2,21
    96a0:	213fffc4 	addi	r4,r4,-1
    96a4:	8084983a 	sll	r2,r16,r2
    96a8:	290a703a 	and	r5,r5,r4
    96ac:	00000406 	br	96c0 <__floatsidf+0x70>
    96b0:	0023883a 	mov	r17,zero
    96b4:	0007883a 	mov	r3,zero
    96b8:	000b883a 	mov	r5,zero
    96bc:	0005883a 	mov	r2,zero
    96c0:	1808953a 	slli	r4,r3,20
    96c4:	880697fa 	slli	r3,r17,31
    96c8:	2148b03a 	or	r4,r4,r5
    96cc:	20c6b03a 	or	r3,r4,r3
    96d0:	dfc00217 	ldw	ra,8(sp)
    96d4:	dc400117 	ldw	r17,4(sp)
    96d8:	dc000017 	ldw	r16,0(sp)
    96dc:	dec00304 	addi	sp,sp,12
    96e0:	f800283a 	ret
    96e4:	10bffd44 	addi	r2,r2,-11
    96e8:	808a983a 	sll	r5,r16,r2
    96ec:	00800434 	movhi	r2,16
    96f0:	10bfffc4 	addi	r2,r2,-1
    96f4:	288a703a 	and	r5,r5,r2
    96f8:	0005883a 	mov	r2,zero
    96fc:	003ff006 	br	96c0 <__floatsidf+0x70>
    9700:	0121c83a 	sub	r16,zero,r4
    9704:	003fda06 	br	9670 <__floatsidf+0x20>

00009708 <__extendsfdf2>:
    9708:	200ad5fa 	srli	r5,r4,23
    970c:	defffd04 	addi	sp,sp,-12
    9710:	dc000015 	stw	r16,0(sp)
    9714:	29403fcc 	andi	r5,r5,255
    9718:	04002034 	movhi	r16,128
    971c:	28800044 	addi	r2,r5,1
    9720:	dc400115 	stw	r17,4(sp)
    9724:	843fffc4 	addi	r16,r16,-1
    9728:	dfc00215 	stw	ra,8(sp)
    972c:	10803f8c 	andi	r2,r2,254
    9730:	2022d7fa 	srli	r17,r4,31
    9734:	8120703a 	and	r16,r16,r4
    9738:	10000d26 	beq	r2,zero,9770 <__extendsfdf2+0x68>
    973c:	8008d0fa 	srli	r4,r16,3
    9740:	8020977a 	slli	r16,r16,29
    9744:	28c0e004 	addi	r3,r5,896
    9748:	180a953a 	slli	r5,r3,20
    974c:	880697fa 	slli	r3,r17,31
    9750:	8005883a 	mov	r2,r16
    9754:	290ab03a 	or	r5,r5,r4
    9758:	28c6b03a 	or	r3,r5,r3
    975c:	dfc00217 	ldw	ra,8(sp)
    9760:	dc400117 	ldw	r17,4(sp)
    9764:	dc000017 	ldw	r16,0(sp)
    9768:	dec00304 	addi	sp,sp,12
    976c:	f800283a 	ret
    9770:	2800111e 	bne	r5,zero,97b8 <__extendsfdf2+0xb0>
    9774:	80001926 	beq	r16,zero,97dc <__extendsfdf2+0xd4>
    9778:	8009883a 	mov	r4,r16
    977c:	00099740 	call	9974 <__clzsi2>
    9780:	10c002c8 	cmpgei	r3,r2,11
    9784:	18001b1e 	bne	r3,zero,97f4 <__extendsfdf2+0xec>
    9788:	010002c4 	movi	r4,11
    978c:	2089c83a 	sub	r4,r4,r2
    9790:	10c00544 	addi	r3,r2,21
    9794:	810ad83a 	srl	r5,r16,r4
    9798:	80e0983a 	sll	r16,r16,r3
    979c:	01000434 	movhi	r4,16
    97a0:	00c0e244 	movi	r3,905
    97a4:	213fffc4 	addi	r4,r4,-1
    97a8:	1887c83a 	sub	r3,r3,r2
    97ac:	2908703a 	and	r4,r5,r4
    97b0:	18c1ffcc 	andi	r3,r3,2047
    97b4:	003fe406 	br	9748 <__extendsfdf2+0x40>
    97b8:	80000b26 	beq	r16,zero,97e8 <__extendsfdf2+0xe0>
    97bc:	800ad0fa 	srli	r5,r16,3
    97c0:	00800434 	movhi	r2,16
    97c4:	10bfffc4 	addi	r2,r2,-1
    97c8:	29000234 	orhi	r4,r5,8
    97cc:	8020977a 	slli	r16,r16,29
    97d0:	2088703a 	and	r4,r4,r2
    97d4:	00c1ffc4 	movi	r3,2047
    97d8:	003fdb06 	br	9748 <__extendsfdf2+0x40>
    97dc:	0007883a 	mov	r3,zero
    97e0:	0009883a 	mov	r4,zero
    97e4:	003fd806 	br	9748 <__extendsfdf2+0x40>
    97e8:	00c1ffc4 	movi	r3,2047
    97ec:	0009883a 	mov	r4,zero
    97f0:	003fd506 	br	9748 <__extendsfdf2+0x40>
    97f4:	113ffd44 	addi	r4,r2,-11
    97f8:	810a983a 	sll	r5,r16,r4
    97fc:	0021883a 	mov	r16,zero
    9800:	003fe606 	br	979c <__extendsfdf2+0x94>

00009804 <__truncdfsf2>:
    9804:	2804d53a 	srli	r2,r5,20
    9808:	00c00434 	movhi	r3,16
    980c:	18ffffc4 	addi	r3,r3,-1
    9810:	28c6703a 	and	r3,r5,r3
    9814:	180c90fa 	slli	r6,r3,3
    9818:	1081ffcc 	andi	r2,r2,2047
    981c:	2006d77a 	srli	r3,r4,29
    9820:	11c00044 	addi	r7,r2,1
    9824:	39c1ff8c 	andi	r7,r7,2046
    9828:	280ad7fa 	srli	r5,r5,31
    982c:	201090fa 	slli	r8,r4,3
    9830:	1986b03a 	or	r3,r3,r6
    9834:	38000b26 	beq	r7,zero,9864 <__truncdfsf2+0x60>
    9838:	11bf2004 	addi	r6,r2,-896
    983c:	31c03fc8 	cmpgei	r7,r6,255
    9840:	38001226 	beq	r7,zero,988c <__truncdfsf2+0x88>
    9844:	00bfffc4 	movi	r2,-1
    9848:	0007883a 	mov	r3,zero
    984c:	10803fcc 	andi	r2,r2,255
    9850:	100495fa 	slli	r2,r2,23
    9854:	280a97fa 	slli	r5,r5,31
    9858:	10c4b03a 	or	r2,r2,r3
    985c:	1144b03a 	or	r2,r2,r5
    9860:	f800283a 	ret
    9864:	1a10b03a 	or	r8,r3,r8
    9868:	1000041e 	bne	r2,zero,987c <__truncdfsf2+0x78>
    986c:	40001d1e 	bne	r8,zero,98e4 <__truncdfsf2+0xe0>
    9870:	0005883a 	mov	r2,zero
    9874:	0007883a 	mov	r3,zero
    9878:	003ff406 	br	984c <__truncdfsf2+0x48>
    987c:	403ff126 	beq	r8,zero,9844 <__truncdfsf2+0x40>
    9880:	18c01034 	orhi	r3,r3,64
    9884:	00bfffc4 	movi	r2,-1
    9888:	003ff006 	br	984c <__truncdfsf2+0x48>
    988c:	0180170e 	bge	zero,r6,98ec <__truncdfsf2+0xe8>
    9890:	200891ba 	slli	r4,r4,6
    9894:	180690fa 	slli	r3,r3,3
    9898:	4010d77a 	srli	r8,r8,29
    989c:	2008c03a 	cmpne	r4,r4,zero
    98a0:	20c6b03a 	or	r3,r4,r3
    98a4:	1a06b03a 	or	r3,r3,r8
    98a8:	188001cc 	andi	r2,r3,7
    98ac:	10002f26 	beq	r2,zero,996c <__truncdfsf2+0x168>
    98b0:	188003cc 	andi	r2,r3,15
    98b4:	10800118 	cmpnei	r2,r2,4
    98b8:	10000126 	beq	r2,zero,98c0 <__truncdfsf2+0xbc>
    98bc:	18c00104 	addi	r3,r3,4
    98c0:	1881002c 	andhi	r2,r3,1024
    98c4:	10002926 	beq	r2,zero,996c <__truncdfsf2+0x168>
    98c8:	30800044 	addi	r2,r6,1
    98cc:	11003fe0 	cmpeqi	r4,r2,255
    98d0:	203fdc1e 	bne	r4,zero,9844 <__truncdfsf2+0x40>
    98d4:	180691ba 	slli	r3,r3,6
    98d8:	1806d27a 	srli	r3,r3,9
    98dc:	003fdb06 	br	984c <__truncdfsf2+0x48>
    98e0:	0005883a 	mov	r2,zero
    98e4:	00c00144 	movi	r3,5
    98e8:	003ffa06 	br	98d4 <__truncdfsf2+0xd0>
    98ec:	313ffa50 	cmplti	r4,r6,-23
    98f0:	203ffb1e 	bne	r4,zero,98e0 <__truncdfsf2+0xdc>
    98f4:	01c00784 	movi	r7,30
    98f8:	398fc83a 	sub	r7,r7,r6
    98fc:	3a400808 	cmpgei	r9,r7,32
    9900:	19002034 	orhi	r4,r3,128
    9904:	48001126 	beq	r9,zero,994c <__truncdfsf2+0x148>
    9908:	00ffff84 	movi	r3,-2
    990c:	198dc83a 	sub	r6,r3,r6
    9910:	39c00820 	cmpeqi	r7,r7,32
    9914:	218cd83a 	srl	r6,r4,r6
    9918:	3800031e 	bne	r7,zero,9928 <__truncdfsf2+0x124>
    991c:	10ff2884 	addi	r3,r2,-862
    9920:	20c8983a 	sll	r4,r4,r3
    9924:	4110b03a 	or	r8,r8,r4
    9928:	4006c03a 	cmpne	r3,r8,zero
    992c:	1986b03a 	or	r3,r3,r6
    9930:	188001cc 	andi	r2,r3,7
    9934:	000d883a 	mov	r6,zero
    9938:	103fdd1e 	bne	r2,zero,98b0 <__truncdfsf2+0xac>
    993c:	1881002c 	andhi	r2,r3,1024
    9940:	103fe426 	beq	r2,zero,98d4 <__truncdfsf2+0xd0>
    9944:	00800044 	movi	r2,1
    9948:	003fe206 	br	98d4 <__truncdfsf2+0xd0>
    994c:	10ff2084 	addi	r3,r2,-894
    9950:	40c4983a 	sll	r2,r8,r3
    9954:	20c8983a 	sll	r4,r4,r3
    9958:	41c6d83a 	srl	r3,r8,r7
    995c:	1004c03a 	cmpne	r2,r2,zero
    9960:	1108b03a 	or	r4,r2,r4
    9964:	1906b03a 	or	r3,r3,r4
    9968:	003ff106 	br	9930 <__truncdfsf2+0x12c>
    996c:	3005883a 	mov	r2,r6
    9970:	003fd806 	br	98d4 <__truncdfsf2+0xd0>

00009974 <__clzsi2>:
    9974:	00bfffd4 	movui	r2,65535
    9978:	11000436 	bltu	r2,r4,998c <__clzsi2+0x18>
    997c:	20804030 	cmpltui	r2,r4,256
    9980:	10000e26 	beq	r2,zero,99bc <__clzsi2+0x48>
    9984:	01400804 	movi	r5,32
    9988:	00000406 	br	999c <__clzsi2+0x28>
    998c:	00804034 	movhi	r2,256
    9990:	20800736 	bltu	r4,r2,99b0 <__clzsi2+0x3c>
    9994:	2008d63a 	srli	r4,r4,24
    9998:	01400204 	movi	r5,8
    999c:	00c00074 	movhi	r3,1
    99a0:	20c7883a 	add	r3,r4,r3
    99a4:	189df803 	ldbu	r2,30688(r3)
    99a8:	2885c83a 	sub	r2,r5,r2
    99ac:	f800283a 	ret
    99b0:	2008d43a 	srli	r4,r4,16
    99b4:	01400404 	movi	r5,16
    99b8:	003ff806 	br	999c <__clzsi2+0x28>
    99bc:	2008d23a 	srli	r4,r4,8
    99c0:	01400604 	movi	r5,24
    99c4:	003ff506 	br	999c <__clzsi2+0x28>

000099c8 <__errno>:
    99c8:	008000b4 	movhi	r2,2
    99cc:	10a6b817 	ldw	r2,-25888(r2)
    99d0:	f800283a 	ret

000099d4 <malloc>:
    99d4:	008000b4 	movhi	r2,2
    99d8:	200b883a 	mov	r5,r4
    99dc:	1126b817 	ldw	r4,-25888(r2)
    99e0:	00099f41 	jmpi	99f4 <_malloc_r>

000099e4 <free>:
    99e4:	008000b4 	movhi	r2,2
    99e8:	200b883a 	mov	r5,r4
    99ec:	1126b817 	ldw	r4,-25888(r2)
    99f0:	000e89c1 	jmpi	e89c <_free_r>

000099f4 <_malloc_r>:
    99f4:	defff604 	addi	sp,sp,-40
    99f8:	dc400115 	stw	r17,4(sp)
    99fc:	2c4002c4 	addi	r17,r5,11
    9a00:	dc800215 	stw	r18,8(sp)
    9a04:	dfc00915 	stw	ra,36(sp)
    9a08:	df000815 	stw	fp,32(sp)
    9a0c:	ddc00715 	stw	r23,28(sp)
    9a10:	dd800615 	stw	r22,24(sp)
    9a14:	dd400515 	stw	r21,20(sp)
    9a18:	dd000415 	stw	r20,16(sp)
    9a1c:	dcc00315 	stw	r19,12(sp)
    9a20:	dc000015 	stw	r16,0(sp)
    9a24:	888005e8 	cmpgeui	r2,r17,23
    9a28:	2025883a 	mov	r18,r4
    9a2c:	10001b1e 	bne	r2,zero,9a9c <_malloc_r+0xa8>
    9a30:	29400468 	cmpgeui	r5,r5,17
    9a34:	2800821e 	bne	r5,zero,9c40 <_malloc_r+0x24c>
    9a38:	001494c0 	call	1494c <__malloc_lock>
    9a3c:	04400404 	movi	r17,16
    9a40:	00800604 	movi	r2,24
    9a44:	01c00084 	movi	r7,2
    9a48:	04c000b4 	movhi	r19,2
    9a4c:	9ce0aa04 	addi	r19,r19,-32088
    9a50:	9885883a 	add	r2,r19,r2
    9a54:	14000117 	ldw	r16,4(r2)
    9a58:	10fffe04 	addi	r3,r2,-8
    9a5c:	80c08b26 	beq	r16,r3,9c8c <_malloc_r+0x298>
    9a60:	80800117 	ldw	r2,4(r16)
    9a64:	81000317 	ldw	r4,12(r16)
    9a68:	00ffff04 	movi	r3,-4
    9a6c:	10c4703a 	and	r2,r2,r3
    9a70:	81400217 	ldw	r5,8(r16)
    9a74:	8085883a 	add	r2,r16,r2
    9a78:	10c00117 	ldw	r3,4(r2)
    9a7c:	29000315 	stw	r4,12(r5)
    9a80:	21400215 	stw	r5,8(r4)
    9a84:	18c00054 	ori	r3,r3,1
    9a88:	10c00115 	stw	r3,4(r2)
    9a8c:	9009883a 	mov	r4,r18
    9a90:	00149700 	call	14970 <__malloc_unlock>
    9a94:	80800204 	addi	r2,r16,8
    9a98:	00006c06 	br	9c4c <_malloc_r+0x258>
    9a9c:	00bffe04 	movi	r2,-8
    9aa0:	88a2703a 	and	r17,r17,r2
    9aa4:	88006616 	blt	r17,zero,9c40 <_malloc_r+0x24c>
    9aa8:	89406536 	bltu	r17,r5,9c40 <_malloc_r+0x24c>
    9aac:	001494c0 	call	1494c <__malloc_lock>
    9ab0:	88807e28 	cmpgeui	r2,r17,504
    9ab4:	10012226 	beq	r2,zero,9f40 <_malloc_r+0x54c>
    9ab8:	8804d27a 	srli	r2,r17,9
    9abc:	10006f26 	beq	r2,zero,9c7c <_malloc_r+0x288>
    9ac0:	10c00168 	cmpgeui	r3,r2,5
    9ac4:	1800fe1e 	bne	r3,zero,9ec0 <_malloc_r+0x4cc>
    9ac8:	8804d1ba 	srli	r2,r17,6
    9acc:	11c00e44 	addi	r7,r2,57
    9ad0:	380890fa 	slli	r4,r7,3
    9ad4:	12000e04 	addi	r8,r2,56
    9ad8:	04c000b4 	movhi	r19,2
    9adc:	9ce0aa04 	addi	r19,r19,-32088
    9ae0:	9909883a 	add	r4,r19,r4
    9ae4:	24000117 	ldw	r16,4(r4)
    9ae8:	213ffe04 	addi	r4,r4,-8
    9aec:	24000b26 	beq	r4,r16,9b1c <_malloc_r+0x128>
    9af0:	01bfff04 	movi	r6,-4
    9af4:	00000306 	br	9b04 <_malloc_r+0x110>
    9af8:	1800d60e 	bge	r3,zero,9e54 <_malloc_r+0x460>
    9afc:	84000317 	ldw	r16,12(r16)
    9b00:	24000626 	beq	r4,r16,9b1c <_malloc_r+0x128>
    9b04:	80800117 	ldw	r2,4(r16)
    9b08:	1184703a 	and	r2,r2,r6
    9b0c:	1447c83a 	sub	r3,r2,r17
    9b10:	19400408 	cmpgei	r5,r3,16
    9b14:	283ff826 	beq	r5,zero,9af8 <_malloc_r+0x104>
    9b18:	400f883a 	mov	r7,r8
    9b1c:	9c000417 	ldw	r16,16(r19)
    9b20:	024000b4 	movhi	r9,2
    9b24:	4a60ac04 	addi	r9,r9,-32080
    9b28:	82405f26 	beq	r16,r9,9ca8 <_malloc_r+0x2b4>
    9b2c:	80c00117 	ldw	r3,4(r16)
    9b30:	00bfff04 	movi	r2,-4
    9b34:	1884703a 	and	r2,r3,r2
    9b38:	1447c83a 	sub	r3,r2,r17
    9b3c:	19000410 	cmplti	r4,r3,16
    9b40:	20010a26 	beq	r4,zero,9f6c <_malloc_r+0x578>
    9b44:	9a400515 	stw	r9,20(r19)
    9b48:	9a400415 	stw	r9,16(r19)
    9b4c:	1800ff0e 	bge	r3,zero,9f4c <_malloc_r+0x558>
    9b50:	10c08028 	cmpgeui	r3,r2,512
    9b54:	1800c11e 	bne	r3,zero,9e5c <_malloc_r+0x468>
    9b58:	1006d0fa 	srli	r3,r2,3
    9b5c:	1008d17a 	srli	r4,r2,5
    9b60:	00800044 	movi	r2,1
    9b64:	18c00044 	addi	r3,r3,1
    9b68:	180690fa 	slli	r3,r3,3
    9b6c:	99400117 	ldw	r5,4(r19)
    9b70:	1104983a 	sll	r2,r2,r4
    9b74:	98c7883a 	add	r3,r19,r3
    9b78:	19000017 	ldw	r4,0(r3)
    9b7c:	1144b03a 	or	r2,r2,r5
    9b80:	197ffe04 	addi	r5,r3,-8
    9b84:	81400315 	stw	r5,12(r16)
    9b88:	81000215 	stw	r4,8(r16)
    9b8c:	98800115 	stw	r2,4(r19)
    9b90:	1c000015 	stw	r16,0(r3)
    9b94:	24000315 	stw	r16,12(r4)
    9b98:	3807d0ba 	srai	r3,r7,2
    9b9c:	01000044 	movi	r4,1
    9ba0:	20c8983a 	sll	r4,r4,r3
    9ba4:	11004536 	bltu	r2,r4,9cbc <_malloc_r+0x2c8>
    9ba8:	2086703a 	and	r3,r4,r2
    9bac:	18000a1e 	bne	r3,zero,9bd8 <_malloc_r+0x1e4>
    9bb0:	00ffff04 	movi	r3,-4
    9bb4:	2109883a 	add	r4,r4,r4
    9bb8:	38ce703a 	and	r7,r7,r3
    9bbc:	2086703a 	and	r3,r4,r2
    9bc0:	39c00104 	addi	r7,r7,4
    9bc4:	1800041e 	bne	r3,zero,9bd8 <_malloc_r+0x1e4>
    9bc8:	2109883a 	add	r4,r4,r4
    9bcc:	2086703a 	and	r3,r4,r2
    9bd0:	39c00104 	addi	r7,r7,4
    9bd4:	183ffc26 	beq	r3,zero,9bc8 <_malloc_r+0x1d4>
    9bd8:	02bfff04 	movi	r10,-4
    9bdc:	381690fa 	slli	r11,r7,3
    9be0:	3819883a 	mov	r12,r7
    9be4:	9ad7883a 	add	r11,r19,r11
    9be8:	5811883a 	mov	r8,r11
    9bec:	40800317 	ldw	r2,12(r8)
    9bf0:	4080bc26 	beq	r8,r2,9ee4 <_malloc_r+0x4f0>
    9bf4:	10c00117 	ldw	r3,4(r2)
    9bf8:	1021883a 	mov	r16,r2
    9bfc:	10800317 	ldw	r2,12(r2)
    9c00:	1a86703a 	and	r3,r3,r10
    9c04:	1c4bc83a 	sub	r5,r3,r17
    9c08:	29800410 	cmplti	r6,r5,16
    9c0c:	3000ba26 	beq	r6,zero,9ef8 <_malloc_r+0x504>
    9c10:	283ff716 	blt	r5,zero,9bf0 <_malloc_r+0x1fc>
    9c14:	80c7883a 	add	r3,r16,r3
    9c18:	19400117 	ldw	r5,4(r3)
    9c1c:	81800217 	ldw	r6,8(r16)
    9c20:	9009883a 	mov	r4,r18
    9c24:	29400054 	ori	r5,r5,1
    9c28:	19400115 	stw	r5,4(r3)
    9c2c:	30800315 	stw	r2,12(r6)
    9c30:	11800215 	stw	r6,8(r2)
    9c34:	00149700 	call	14970 <__malloc_unlock>
    9c38:	80800204 	addi	r2,r16,8
    9c3c:	00000306 	br	9c4c <_malloc_r+0x258>
    9c40:	00800304 	movi	r2,12
    9c44:	90800015 	stw	r2,0(r18)
    9c48:	0005883a 	mov	r2,zero
    9c4c:	dfc00917 	ldw	ra,36(sp)
    9c50:	df000817 	ldw	fp,32(sp)
    9c54:	ddc00717 	ldw	r23,28(sp)
    9c58:	dd800617 	ldw	r22,24(sp)
    9c5c:	dd400517 	ldw	r21,20(sp)
    9c60:	dd000417 	ldw	r20,16(sp)
    9c64:	dcc00317 	ldw	r19,12(sp)
    9c68:	dc800217 	ldw	r18,8(sp)
    9c6c:	dc400117 	ldw	r17,4(sp)
    9c70:	dc000017 	ldw	r16,0(sp)
    9c74:	dec00a04 	addi	sp,sp,40
    9c78:	f800283a 	ret
    9c7c:	01008004 	movi	r4,512
    9c80:	01c01004 	movi	r7,64
    9c84:	02000fc4 	movi	r8,63
    9c88:	003f9306 	br	9ad8 <_malloc_r+0xe4>
    9c8c:	14000317 	ldw	r16,12(r2)
    9c90:	39c00084 	addi	r7,r7,2
    9c94:	143f721e 	bne	r2,r16,9a60 <_malloc_r+0x6c>
    9c98:	9c000417 	ldw	r16,16(r19)
    9c9c:	024000b4 	movhi	r9,2
    9ca0:	4a60ac04 	addi	r9,r9,-32080
    9ca4:	827fa11e 	bne	r16,r9,9b2c <_malloc_r+0x138>
    9ca8:	3807d0ba 	srai	r3,r7,2
    9cac:	01000044 	movi	r4,1
    9cb0:	98800117 	ldw	r2,4(r19)
    9cb4:	20c8983a 	sll	r4,r4,r3
    9cb8:	113fbb2e 	bgeu	r2,r4,9ba8 <_malloc_r+0x1b4>
    9cbc:	9c000217 	ldw	r16,8(r19)
    9cc0:	00bfff04 	movi	r2,-4
    9cc4:	85400117 	ldw	r21,4(r16)
    9cc8:	a8ac703a 	and	r22,r21,r2
    9ccc:	b4400336 	bltu	r22,r17,9cdc <_malloc_r+0x2e8>
    9cd0:	b445c83a 	sub	r2,r22,r17
    9cd4:	10c00408 	cmpgei	r3,r2,16
    9cd8:	1800541e 	bne	r3,zero,9e2c <_malloc_r+0x438>
    9cdc:	008000b4 	movhi	r2,2
    9ce0:	10a6b917 	ldw	r2,-25884(r2)
    9ce4:	00c000b4 	movhi	r3,2
    9ce8:	1d6deb17 	ldw	r21,-18516(r3)
    9cec:	10bfffd8 	cmpnei	r2,r2,-1
    9cf0:	85b9883a 	add	fp,r16,r22
    9cf4:	8d6b883a 	add	r21,r17,r21
    9cf8:	1000d626 	beq	r2,zero,a054 <_malloc_r+0x660>
    9cfc:	ad4403c4 	addi	r21,r21,4111
    9d00:	00bc0004 	movi	r2,-4096
    9d04:	a8aa703a 	and	r21,r21,r2
    9d08:	a80b883a 	mov	r5,r21
    9d0c:	9009883a 	mov	r4,r18
    9d10:	000a4180 	call	a418 <_sbrk_r>
    9d14:	102f883a 	mov	r23,r2
    9d18:	10bfffd8 	cmpnei	r2,r2,-1
    9d1c:	1000a826 	beq	r2,zero,9fc0 <_malloc_r+0x5cc>
    9d20:	bf00a636 	bltu	r23,fp,9fbc <_malloc_r+0x5c8>
    9d24:	008000b4 	movhi	r2,2
    9d28:	152df617 	ldw	r20,-18472(r2)
    9d2c:	ad29883a 	add	r20,r21,r20
    9d30:	152df615 	stw	r20,-18472(r2)
    9d34:	a007883a 	mov	r3,r20
    9d38:	e5c0ec26 	beq	fp,r23,a0ec <_malloc_r+0x6f8>
    9d3c:	008000b4 	movhi	r2,2
    9d40:	10a6b917 	ldw	r2,-25884(r2)
    9d44:	10bfffd8 	cmpnei	r2,r2,-1
    9d48:	1000ef26 	beq	r2,zero,a108 <_malloc_r+0x714>
    9d4c:	bf39c83a 	sub	fp,r23,fp
    9d50:	e0c7883a 	add	r3,fp,r3
    9d54:	008000b4 	movhi	r2,2
    9d58:	10edf615 	stw	r3,-18472(r2)
    9d5c:	bf0001cc 	andi	fp,r23,7
    9d60:	e000c526 	beq	fp,zero,a078 <_malloc_r+0x684>
    9d64:	bf2fc83a 	sub	r23,r23,fp
    9d68:	bdc00204 	addi	r23,r23,8
    9d6c:	05040204 	movi	r20,4104
    9d70:	a729c83a 	sub	r20,r20,fp
    9d74:	bd6b883a 	add	r21,r23,r21
    9d78:	a569c83a 	sub	r20,r20,r21
    9d7c:	a503ffcc 	andi	r20,r20,4095
    9d80:	a00b883a 	mov	r5,r20
    9d84:	9009883a 	mov	r4,r18
    9d88:	000a4180 	call	a418 <_sbrk_r>
    9d8c:	10ffffe0 	cmpeqi	r3,r2,-1
    9d90:	1800f31e 	bne	r3,zero,a160 <_malloc_r+0x76c>
    9d94:	15c5c83a 	sub	r2,r2,r23
    9d98:	152b883a 	add	r21,r2,r20
    9d9c:	008000b4 	movhi	r2,2
    9da0:	116df617 	ldw	r5,-18472(r2)
    9da4:	9dc00215 	stw	r23,8(r19)
    9da8:	ad400054 	ori	r21,r21,1
    9dac:	a169883a 	add	r20,r20,r5
    9db0:	152df615 	stw	r20,-18472(r2)
    9db4:	bd400115 	stw	r21,4(r23)
    9db8:	84c0d626 	beq	r16,r19,a114 <_malloc_r+0x720>
    9dbc:	b0800428 	cmpgeui	r2,r22,16
    9dc0:	1000d626 	beq	r2,zero,a11c <_malloc_r+0x728>
    9dc4:	80c00117 	ldw	r3,4(r16)
    9dc8:	013ffe04 	movi	r4,-8
    9dcc:	b0bffd04 	addi	r2,r22,-12
    9dd0:	1104703a 	and	r2,r2,r4
    9dd4:	18c0004c 	andi	r3,r3,1
    9dd8:	1886b03a 	or	r3,r3,r2
    9ddc:	80c00115 	stw	r3,4(r16)
    9de0:	01000144 	movi	r4,5
    9de4:	8087883a 	add	r3,r16,r2
    9de8:	19000115 	stw	r4,4(r3)
    9dec:	19000215 	stw	r4,8(r3)
    9df0:	10800428 	cmpgeui	r2,r2,16
    9df4:	1000df1e 	bne	r2,zero,a174 <_malloc_r+0x780>
    9df8:	bd400117 	ldw	r21,4(r23)
    9dfc:	b821883a 	mov	r16,r23
    9e00:	008000b4 	movhi	r2,2
    9e04:	10adea17 	ldw	r2,-18520(r2)
    9e08:	1500022e 	bgeu	r2,r20,9e14 <_malloc_r+0x420>
    9e0c:	008000b4 	movhi	r2,2
    9e10:	152dea15 	stw	r20,-18520(r2)
    9e14:	008000b4 	movhi	r2,2
    9e18:	10ade917 	ldw	r2,-18524(r2)
    9e1c:	15006a2e 	bgeu	r2,r20,9fc8 <_malloc_r+0x5d4>
    9e20:	008000b4 	movhi	r2,2
    9e24:	152de915 	stw	r20,-18524(r2)
    9e28:	00006706 	br	9fc8 <_malloc_r+0x5d4>
    9e2c:	88c00054 	ori	r3,r17,1
    9e30:	80c00115 	stw	r3,4(r16)
    9e34:	8463883a 	add	r17,r16,r17
    9e38:	10800054 	ori	r2,r2,1
    9e3c:	9c400215 	stw	r17,8(r19)
    9e40:	88800115 	stw	r2,4(r17)
    9e44:	9009883a 	mov	r4,r18
    9e48:	00149700 	call	14970 <__malloc_unlock>
    9e4c:	80800204 	addi	r2,r16,8
    9e50:	003f7e06 	br	9c4c <_malloc_r+0x258>
    9e54:	81000317 	ldw	r4,12(r16)
    9e58:	003f0506 	br	9a70 <_malloc_r+0x7c>
    9e5c:	1006d27a 	srli	r3,r2,9
    9e60:	19000168 	cmpgeui	r4,r3,5
    9e64:	20005026 	beq	r4,zero,9fa8 <_malloc_r+0x5b4>
    9e68:	19000568 	cmpgeui	r4,r3,21
    9e6c:	20008c1e 	bne	r4,zero,a0a0 <_malloc_r+0x6ac>
    9e70:	19401704 	addi	r5,r3,92
    9e74:	280a90fa 	slli	r5,r5,3
    9e78:	190016c4 	addi	r4,r3,91
    9e7c:	994b883a 	add	r5,r19,r5
    9e80:	28c00017 	ldw	r3,0(r5)
    9e84:	297ffe04 	addi	r5,r5,-8
    9e88:	28c07426 	beq	r5,r3,a05c <_malloc_r+0x668>
    9e8c:	01bfff04 	movi	r6,-4
    9e90:	19000117 	ldw	r4,4(r3)
    9e94:	2188703a 	and	r4,r4,r6
    9e98:	1100022e 	bgeu	r2,r4,9ea4 <_malloc_r+0x4b0>
    9e9c:	18c00217 	ldw	r3,8(r3)
    9ea0:	28fffb1e 	bne	r5,r3,9e90 <_malloc_r+0x49c>
    9ea4:	19400317 	ldw	r5,12(r3)
    9ea8:	98800117 	ldw	r2,4(r19)
    9eac:	81400315 	stw	r5,12(r16)
    9eb0:	80c00215 	stw	r3,8(r16)
    9eb4:	2c000215 	stw	r16,8(r5)
    9eb8:	1c000315 	stw	r16,12(r3)
    9ebc:	003f3606 	br	9b98 <_malloc_r+0x1a4>
    9ec0:	10c00568 	cmpgeui	r3,r2,21
    9ec4:	18004a26 	beq	r3,zero,9ff0 <_malloc_r+0x5fc>
    9ec8:	10c01568 	cmpgeui	r3,r2,85
    9ecc:	18007b1e 	bne	r3,zero,a0bc <_malloc_r+0x6c8>
    9ed0:	8804d33a 	srli	r2,r17,12
    9ed4:	11c01bc4 	addi	r7,r2,111
    9ed8:	380890fa 	slli	r4,r7,3
    9edc:	12001b84 	addi	r8,r2,110
    9ee0:	003efd06 	br	9ad8 <_malloc_r+0xe4>
    9ee4:	63000044 	addi	r12,r12,1
    9ee8:	608000cc 	andi	r2,r12,3
    9eec:	42000204 	addi	r8,r8,8
    9ef0:	103f3e1e 	bne	r2,zero,9bec <_malloc_r+0x1f8>
    9ef4:	00004506 	br	a00c <_malloc_r+0x618>
    9ef8:	81000217 	ldw	r4,8(r16)
    9efc:	89800054 	ori	r6,r17,1
    9f00:	81800115 	stw	r6,4(r16)
    9f04:	20800315 	stw	r2,12(r4)
    9f08:	11000215 	stw	r4,8(r2)
    9f0c:	8463883a 	add	r17,r16,r17
    9f10:	9c400515 	stw	r17,20(r19)
    9f14:	9c400415 	stw	r17,16(r19)
    9f18:	28800054 	ori	r2,r5,1
    9f1c:	88800115 	stw	r2,4(r17)
    9f20:	8a400315 	stw	r9,12(r17)
    9f24:	8a400215 	stw	r9,8(r17)
    9f28:	80c7883a 	add	r3,r16,r3
    9f2c:	19400015 	stw	r5,0(r3)
    9f30:	9009883a 	mov	r4,r18
    9f34:	00149700 	call	14970 <__malloc_unlock>
    9f38:	80800204 	addi	r2,r16,8
    9f3c:	003f4306 	br	9c4c <_malloc_r+0x258>
    9f40:	880ed0fa 	srli	r7,r17,3
    9f44:	88800204 	addi	r2,r17,8
    9f48:	003ebf06 	br	9a48 <_malloc_r+0x54>
    9f4c:	8085883a 	add	r2,r16,r2
    9f50:	10c00117 	ldw	r3,4(r2)
    9f54:	9009883a 	mov	r4,r18
    9f58:	18c00054 	ori	r3,r3,1
    9f5c:	10c00115 	stw	r3,4(r2)
    9f60:	00149700 	call	14970 <__malloc_unlock>
    9f64:	80800204 	addi	r2,r16,8
    9f68:	003f3806 	br	9c4c <_malloc_r+0x258>
    9f6c:	89000054 	ori	r4,r17,1
    9f70:	81000115 	stw	r4,4(r16)
    9f74:	8463883a 	add	r17,r16,r17
    9f78:	9c400515 	stw	r17,20(r19)
    9f7c:	9c400415 	stw	r17,16(r19)
    9f80:	19000054 	ori	r4,r3,1
    9f84:	89000115 	stw	r4,4(r17)
    9f88:	8085883a 	add	r2,r16,r2
    9f8c:	8a400315 	stw	r9,12(r17)
    9f90:	8a400215 	stw	r9,8(r17)
    9f94:	10c00015 	stw	r3,0(r2)
    9f98:	9009883a 	mov	r4,r18
    9f9c:	00149700 	call	14970 <__malloc_unlock>
    9fa0:	80800204 	addi	r2,r16,8
    9fa4:	003f2906 	br	9c4c <_malloc_r+0x258>
    9fa8:	1006d1ba 	srli	r3,r2,6
    9fac:	19400e44 	addi	r5,r3,57
    9fb0:	280a90fa 	slli	r5,r5,3
    9fb4:	19000e04 	addi	r4,r3,56
    9fb8:	003fb006 	br	9e7c <_malloc_r+0x488>
    9fbc:	84c04626 	beq	r16,r19,a0d8 <_malloc_r+0x6e4>
    9fc0:	9c000217 	ldw	r16,8(r19)
    9fc4:	85400117 	ldw	r21,4(r16)
    9fc8:	00bfff04 	movi	r2,-4
    9fcc:	a8aa703a 	and	r21,r21,r2
    9fd0:	ac45c83a 	sub	r2,r21,r17
    9fd4:	ac400236 	bltu	r21,r17,9fe0 <_malloc_r+0x5ec>
    9fd8:	10c00408 	cmpgei	r3,r2,16
    9fdc:	183f931e 	bne	r3,zero,9e2c <_malloc_r+0x438>
    9fe0:	9009883a 	mov	r4,r18
    9fe4:	00149700 	call	14970 <__malloc_unlock>
    9fe8:	0005883a 	mov	r2,zero
    9fec:	003f1706 	br	9c4c <_malloc_r+0x258>
    9ff0:	11c01704 	addi	r7,r2,92
    9ff4:	380890fa 	slli	r4,r7,3
    9ff8:	120016c4 	addi	r8,r2,91
    9ffc:	003eb606 	br	9ad8 <_malloc_r+0xe4>
    a000:	58800217 	ldw	r2,8(r11)
    a004:	39ffffc4 	addi	r7,r7,-1
    a008:	12c0701e 	bne	r2,r11,a1cc <_malloc_r+0x7d8>
    a00c:	388000cc 	andi	r2,r7,3
    a010:	5afffe04 	addi	r11,r11,-8
    a014:	103ffa1e 	bne	r2,zero,a000 <_malloc_r+0x60c>
    a018:	98c00117 	ldw	r3,4(r19)
    a01c:	0104303a 	nor	r2,zero,r4
    a020:	10c4703a 	and	r2,r2,r3
    a024:	98800115 	stw	r2,4(r19)
    a028:	2109883a 	add	r4,r4,r4
    a02c:	113f2336 	bltu	r2,r4,9cbc <_malloc_r+0x2c8>
    a030:	203f2226 	beq	r4,zero,9cbc <_malloc_r+0x2c8>
    a034:	2086703a 	and	r3,r4,r2
    a038:	1800041e 	bne	r3,zero,a04c <_malloc_r+0x658>
    a03c:	2109883a 	add	r4,r4,r4
    a040:	2086703a 	and	r3,r4,r2
    a044:	63000104 	addi	r12,r12,4
    a048:	183ffc26 	beq	r3,zero,a03c <_malloc_r+0x648>
    a04c:	600f883a 	mov	r7,r12
    a050:	003ee206 	br	9bdc <_malloc_r+0x1e8>
    a054:	ad400404 	addi	r21,r21,16
    a058:	003f2b06 	br	9d08 <_malloc_r+0x314>
    a05c:	2009d0ba 	srai	r4,r4,2
    a060:	00800044 	movi	r2,1
    a064:	99800117 	ldw	r6,4(r19)
    a068:	1104983a 	sll	r2,r2,r4
    a06c:	1184b03a 	or	r2,r2,r6
    a070:	98800115 	stw	r2,4(r19)
    a074:	003f8d06 	br	9eac <_malloc_r+0x4b8>
    a078:	bd69883a 	add	r20,r23,r21
    a07c:	0529c83a 	sub	r20,zero,r20
    a080:	a503ffcc 	andi	r20,r20,4095
    a084:	a00b883a 	mov	r5,r20
    a088:	9009883a 	mov	r4,r18
    a08c:	000a4180 	call	a418 <_sbrk_r>
    a090:	10ffffe0 	cmpeqi	r3,r2,-1
    a094:	183f3f26 	beq	r3,zero,9d94 <_malloc_r+0x3a0>
    a098:	0029883a 	mov	r20,zero
    a09c:	003f3f06 	br	9d9c <_malloc_r+0x3a8>
    a0a0:	19001568 	cmpgeui	r4,r3,85
    a0a4:	2000201e 	bne	r4,zero,a128 <_malloc_r+0x734>
    a0a8:	1006d33a 	srli	r3,r2,12
    a0ac:	19401bc4 	addi	r5,r3,111
    a0b0:	280a90fa 	slli	r5,r5,3
    a0b4:	19001b84 	addi	r4,r3,110
    a0b8:	003f7006 	br	9e7c <_malloc_r+0x488>
    a0bc:	10c05568 	cmpgeui	r3,r2,341
    a0c0:	1800201e 	bne	r3,zero,a144 <_malloc_r+0x750>
    a0c4:	8804d3fa 	srli	r2,r17,15
    a0c8:	11c01e04 	addi	r7,r2,120
    a0cc:	380890fa 	slli	r4,r7,3
    a0d0:	12001dc4 	addi	r8,r2,119
    a0d4:	003e8006 	br	9ad8 <_malloc_r+0xe4>
    a0d8:	008000b4 	movhi	r2,2
    a0dc:	10edf617 	ldw	r3,-18472(r2)
    a0e0:	a8c7883a 	add	r3,r21,r3
    a0e4:	10edf615 	stw	r3,-18472(r2)
    a0e8:	003f1406 	br	9d3c <_malloc_r+0x348>
    a0ec:	e083ffcc 	andi	r2,fp,4095
    a0f0:	103f121e 	bne	r2,zero,9d3c <_malloc_r+0x348>
    a0f4:	9c000217 	ldw	r16,8(r19)
    a0f8:	b56b883a 	add	r21,r22,r21
    a0fc:	ad400054 	ori	r21,r21,1
    a100:	85400115 	stw	r21,4(r16)
    a104:	003f3e06 	br	9e00 <_malloc_r+0x40c>
    a108:	008000b4 	movhi	r2,2
    a10c:	15e6b915 	stw	r23,-25884(r2)
    a110:	003f1206 	br	9d5c <_malloc_r+0x368>
    a114:	b821883a 	mov	r16,r23
    a118:	003f3906 	br	9e00 <_malloc_r+0x40c>
    a11c:	00800044 	movi	r2,1
    a120:	b8800115 	stw	r2,4(r23)
    a124:	003fae06 	br	9fe0 <_malloc_r+0x5ec>
    a128:	19005568 	cmpgeui	r4,r3,341
    a12c:	2000191e 	bne	r4,zero,a194 <_malloc_r+0x7a0>
    a130:	1006d3fa 	srli	r3,r2,15
    a134:	19401e04 	addi	r5,r3,120
    a138:	280a90fa 	slli	r5,r5,3
    a13c:	19001dc4 	addi	r4,r3,119
    a140:	003f4e06 	br	9e7c <_malloc_r+0x488>
    a144:	10815568 	cmpgeui	r2,r2,1365
    a148:	1000191e 	bne	r2,zero,a1b0 <_malloc_r+0x7bc>
    a14c:	8804d4ba 	srli	r2,r17,18
    a150:	11c01f44 	addi	r7,r2,125
    a154:	380890fa 	slli	r4,r7,3
    a158:	12001f04 	addi	r8,r2,124
    a15c:	003e5e06 	br	9ad8 <_malloc_r+0xe4>
    a160:	e73ffe04 	addi	fp,fp,-8
    a164:	af2b883a 	add	r21,r21,fp
    a168:	adebc83a 	sub	r21,r21,r23
    a16c:	0029883a 	mov	r20,zero
    a170:	003f0a06 	br	9d9c <_malloc_r+0x3a8>
    a174:	81400204 	addi	r5,r16,8
    a178:	9009883a 	mov	r4,r18
    a17c:	000e89c0 	call	e89c <_free_r>
    a180:	9c000217 	ldw	r16,8(r19)
    a184:	008000b4 	movhi	r2,2
    a188:	152df617 	ldw	r20,-18472(r2)
    a18c:	85400117 	ldw	r21,4(r16)
    a190:	003f1b06 	br	9e00 <_malloc_r+0x40c>
    a194:	18c15568 	cmpgeui	r3,r3,1365
    a198:	1800091e 	bne	r3,zero,a1c0 <_malloc_r+0x7cc>
    a19c:	1006d4ba 	srli	r3,r2,18
    a1a0:	19401f44 	addi	r5,r3,125
    a1a4:	280a90fa 	slli	r5,r5,3
    a1a8:	19001f04 	addi	r4,r3,124
    a1ac:	003f3306 	br	9e7c <_malloc_r+0x488>
    a1b0:	0100fe04 	movi	r4,1016
    a1b4:	01c01fc4 	movi	r7,127
    a1b8:	02001f84 	movi	r8,126
    a1bc:	003e4606 	br	9ad8 <_malloc_r+0xe4>
    a1c0:	0140fe04 	movi	r5,1016
    a1c4:	01001f84 	movi	r4,126
    a1c8:	003f2c06 	br	9e7c <_malloc_r+0x488>
    a1cc:	98800117 	ldw	r2,4(r19)
    a1d0:	003f9506 	br	a028 <_malloc_r+0x634>

0000a1d4 <memcpy>:
    a1d4:	30c00430 	cmpltui	r3,r6,16
    a1d8:	2005883a 	mov	r2,r4
    a1dc:	18002d1e 	bne	r3,zero,a294 <memcpy+0xc0>
    a1e0:	2906b03a 	or	r3,r5,r4
    a1e4:	18c000cc 	andi	r3,r3,3
    a1e8:	1800351e 	bne	r3,zero,a2c0 <memcpy+0xec>
    a1ec:	32fffc04 	addi	r11,r6,-16
    a1f0:	5816d13a 	srli	r11,r11,4
    a1f4:	280f883a 	mov	r7,r5
    a1f8:	2007883a 	mov	r3,r4
    a1fc:	5ac00044 	addi	r11,r11,1
    a200:	5816913a 	slli	r11,r11,4
    a204:	22d5883a 	add	r10,r4,r11
    a208:	39000117 	ldw	r4,4(r7)
    a20c:	3a400017 	ldw	r9,0(r7)
    a210:	3a000217 	ldw	r8,8(r7)
    a214:	19000115 	stw	r4,4(r3)
    a218:	39000317 	ldw	r4,12(r7)
    a21c:	1a400015 	stw	r9,0(r3)
    a220:	1a000215 	stw	r8,8(r3)
    a224:	19000315 	stw	r4,12(r3)
    a228:	18c00404 	addi	r3,r3,16
    a22c:	39c00404 	addi	r7,r7,16
    a230:	50fff51e 	bne	r10,r3,a208 <memcpy+0x34>
    a234:	3100030c 	andi	r4,r6,12
    a238:	2acb883a 	add	r5,r5,r11
    a23c:	320003cc 	andi	r8,r6,15
    a240:	20002226 	beq	r4,zero,a2cc <memcpy+0xf8>
    a244:	280f883a 	mov	r7,r5
    a248:	1813883a 	mov	r9,r3
    a24c:	39c00104 	addi	r7,r7,4
    a250:	3abfff17 	ldw	r10,-4(r7)
    a254:	41c9c83a 	sub	r4,r8,r7
    a258:	2909883a 	add	r4,r5,r4
    a25c:	4a800015 	stw	r10,0(r9)
    a260:	21000128 	cmpgeui	r4,r4,4
    a264:	4a400104 	addi	r9,r9,4
    a268:	203ff81e 	bne	r4,zero,a24c <memcpy+0x78>
    a26c:	413fff04 	addi	r4,r8,-4
    a270:	2008d0ba 	srli	r4,r4,2
    a274:	318000cc 	andi	r6,r6,3
    a278:	31ffffc4 	addi	r7,r6,-1
    a27c:	21000044 	addi	r4,r4,1
    a280:	200890ba 	slli	r4,r4,2
    a284:	1907883a 	add	r3,r3,r4
    a288:	290b883a 	add	r5,r5,r4
    a28c:	3000041e 	bne	r6,zero,a2a0 <memcpy+0xcc>
    a290:	f800283a 	ret
    a294:	2007883a 	mov	r3,r4
    a298:	31ffffc4 	addi	r7,r6,-1
    a29c:	303ffc26 	beq	r6,zero,a290 <memcpy+0xbc>
    a2a0:	39c00044 	addi	r7,r7,1
    a2a4:	19cf883a 	add	r7,r3,r7
    a2a8:	29800003 	ldbu	r6,0(r5)
    a2ac:	18c00044 	addi	r3,r3,1
    a2b0:	29400044 	addi	r5,r5,1
    a2b4:	19bfffc5 	stb	r6,-1(r3)
    a2b8:	38fffb1e 	bne	r7,r3,a2a8 <memcpy+0xd4>
    a2bc:	f800283a 	ret
    a2c0:	31ffffc4 	addi	r7,r6,-1
    a2c4:	2007883a 	mov	r3,r4
    a2c8:	003ff506 	br	a2a0 <memcpy+0xcc>
    a2cc:	400d883a 	mov	r6,r8
    a2d0:	003ff106 	br	a298 <memcpy+0xc4>

0000a2d4 <_printf_r>:
    a2d4:	defffd04 	addi	sp,sp,-12
    a2d8:	2805883a 	mov	r2,r5
    a2dc:	dfc00015 	stw	ra,0(sp)
    a2e0:	d9800115 	stw	r6,4(sp)
    a2e4:	d9c00215 	stw	r7,8(sp)
    a2e8:	21400217 	ldw	r5,8(r4)
    a2ec:	d9c00104 	addi	r7,sp,4
    a2f0:	100d883a 	mov	r6,r2
    a2f4:	000a5080 	call	a508 <___vfprintf_internal_r>
    a2f8:	dfc00017 	ldw	ra,0(sp)
    a2fc:	dec00304 	addi	sp,sp,12
    a300:	f800283a 	ret

0000a304 <printf>:
    a304:	defffc04 	addi	sp,sp,-16
    a308:	dfc00015 	stw	ra,0(sp)
    a30c:	d9400115 	stw	r5,4(sp)
    a310:	d9800215 	stw	r6,8(sp)
    a314:	d9c00315 	stw	r7,12(sp)
    a318:	008000b4 	movhi	r2,2
    a31c:	10a6b817 	ldw	r2,-25888(r2)
    a320:	200b883a 	mov	r5,r4
    a324:	d9800104 	addi	r6,sp,4
    a328:	11000217 	ldw	r4,8(r2)
    a32c:	000c5200 	call	c520 <__vfprintf_internal>
    a330:	dfc00017 	ldw	ra,0(sp)
    a334:	dec00404 	addi	sp,sp,16
    a338:	f800283a 	ret

0000a33c <_puts_r>:
    a33c:	defff504 	addi	sp,sp,-44
    a340:	dc000815 	stw	r16,32(sp)
    a344:	2021883a 	mov	r16,r4
    a348:	2809883a 	mov	r4,r5
    a34c:	dc400915 	stw	r17,36(sp)
    a350:	dfc00a15 	stw	ra,40(sp)
    a354:	2823883a 	mov	r17,r5
    a358:	000a4700 	call	a470 <strlen>
    a35c:	11000044 	addi	r4,r2,1
    a360:	d8800515 	stw	r2,20(sp)
    a364:	00800044 	movi	r2,1
    a368:	00c00074 	movhi	r3,1
    a36c:	d8800715 	stw	r2,28(sp)
    a370:	d8800404 	addi	r2,sp,16
    a374:	18de3804 	addi	r3,r3,30944
    a378:	d8800115 	stw	r2,4(sp)
    a37c:	00800084 	movi	r2,2
    a380:	dc400415 	stw	r17,16(sp)
    a384:	d8c00615 	stw	r3,24(sp)
    a388:	d9000315 	stw	r4,12(sp)
    a38c:	d8800215 	stw	r2,8(sp)
    a390:	81400217 	ldw	r5,8(r16)
    a394:	80000226 	beq	r16,zero,a3a0 <_puts_r+0x64>
    a398:	80800e17 	ldw	r2,56(r16)
    a39c:	10001326 	beq	r2,zero,a3ec <_puts_r+0xb0>
    a3a0:	2880030b 	ldhu	r2,12(r5)
    a3a4:	10c8000c 	andi	r3,r2,8192
    a3a8:	1800061e 	bne	r3,zero,a3c4 <_puts_r+0x88>
    a3ac:	28c01917 	ldw	r3,100(r5)
    a3b0:	0137ffc4 	movi	r4,-8193
    a3b4:	10880014 	ori	r2,r2,8192
    a3b8:	1906703a 	and	r3,r3,r4
    a3bc:	2880030d 	sth	r2,12(r5)
    a3c0:	28c01915 	stw	r3,100(r5)
    a3c4:	d9800104 	addi	r6,sp,4
    a3c8:	8009883a 	mov	r4,r16
    a3cc:	000eb980 	call	eb98 <__sfvwrite_r>
    a3d0:	10000b1e 	bne	r2,zero,a400 <_puts_r+0xc4>
    a3d4:	00800284 	movi	r2,10
    a3d8:	dfc00a17 	ldw	ra,40(sp)
    a3dc:	dc400917 	ldw	r17,36(sp)
    a3e0:	dc000817 	ldw	r16,32(sp)
    a3e4:	dec00b04 	addi	sp,sp,44
    a3e8:	f800283a 	ret
    a3ec:	8009883a 	mov	r4,r16
    a3f0:	d9400015 	stw	r5,0(sp)
    a3f4:	000e7380 	call	e738 <__sinit>
    a3f8:	d9400017 	ldw	r5,0(sp)
    a3fc:	003fe806 	br	a3a0 <_puts_r+0x64>
    a400:	00bfffc4 	movi	r2,-1
    a404:	003ff406 	br	a3d8 <_puts_r+0x9c>

0000a408 <puts>:
    a408:	008000b4 	movhi	r2,2
    a40c:	200b883a 	mov	r5,r4
    a410:	1126b817 	ldw	r4,-25888(r2)
    a414:	000a33c1 	jmpi	a33c <_puts_r>

0000a418 <_sbrk_r>:
    a418:	defffe04 	addi	sp,sp,-8
    a41c:	dc000015 	stw	r16,0(sp)
    a420:	008000b4 	movhi	r2,2
    a424:	2021883a 	mov	r16,r4
    a428:	2809883a 	mov	r4,r5
    a42c:	dfc00115 	stw	ra,4(sp)
    a430:	102dec15 	stw	zero,-18512(r2)
    a434:	0014b480 	call	14b48 <sbrk>
    a438:	10ffffd8 	cmpnei	r3,r2,-1
    a43c:	18000426 	beq	r3,zero,a450 <_sbrk_r+0x38>
    a440:	dfc00117 	ldw	ra,4(sp)
    a444:	dc000017 	ldw	r16,0(sp)
    a448:	dec00204 	addi	sp,sp,8
    a44c:	f800283a 	ret
    a450:	00c000b4 	movhi	r3,2
    a454:	18edec17 	ldw	r3,-18512(r3)
    a458:	183ff926 	beq	r3,zero,a440 <_sbrk_r+0x28>
    a45c:	80c00015 	stw	r3,0(r16)
    a460:	dfc00117 	ldw	ra,4(sp)
    a464:	dc000017 	ldw	r16,0(sp)
    a468:	dec00204 	addi	sp,sp,8
    a46c:	f800283a 	ret

0000a470 <strlen>:
    a470:	208000cc 	andi	r2,r4,3
    a474:	10000926 	beq	r2,zero,a49c <strlen+0x2c>
    a478:	2005883a 	mov	r2,r4
    a47c:	00000306 	br	a48c <strlen+0x1c>
    a480:	10800044 	addi	r2,r2,1
    a484:	10c000cc 	andi	r3,r2,3
    a488:	18000526 	beq	r3,zero,a4a0 <strlen+0x30>
    a48c:	10c00007 	ldb	r3,0(r2)
    a490:	183ffb1e 	bne	r3,zero,a480 <strlen+0x10>
    a494:	1105c83a 	sub	r2,r2,r4
    a498:	f800283a 	ret
    a49c:	2005883a 	mov	r2,r4
    a4a0:	11400017 	ldw	r5,0(r2)
    a4a4:	01ffbff4 	movhi	r7,65279
    a4a8:	39ffbfc4 	addi	r7,r7,-257
    a4ac:	29c7883a 	add	r3,r5,r7
    a4b0:	01a02074 	movhi	r6,32897
    a4b4:	014a303a 	nor	r5,zero,r5
    a4b8:	1946703a 	and	r3,r3,r5
    a4bc:	31a02004 	addi	r6,r6,-32640
    a4c0:	1986703a 	and	r3,r3,r6
    a4c4:	1800071e 	bne	r3,zero,a4e4 <strlen+0x74>
    a4c8:	11400117 	ldw	r5,4(r2)
    a4cc:	10800104 	addi	r2,r2,4
    a4d0:	29c7883a 	add	r3,r5,r7
    a4d4:	014a303a 	nor	r5,zero,r5
    a4d8:	1946703a 	and	r3,r3,r5
    a4dc:	1986703a 	and	r3,r3,r6
    a4e0:	183ff926 	beq	r3,zero,a4c8 <strlen+0x58>
    a4e4:	10c00007 	ldb	r3,0(r2)
    a4e8:	183fea26 	beq	r3,zero,a494 <strlen+0x24>
    a4ec:	10c00047 	ldb	r3,1(r2)
    a4f0:	10800044 	addi	r2,r2,1
    a4f4:	183fe726 	beq	r3,zero,a494 <strlen+0x24>
    a4f8:	10c00047 	ldb	r3,1(r2)
    a4fc:	10800044 	addi	r2,r2,1
    a500:	183ffa1e 	bne	r3,zero,a4ec <strlen+0x7c>
    a504:	003fe306 	br	a494 <strlen+0x24>

0000a508 <___vfprintf_internal_r>:
    a508:	deffbf04 	addi	sp,sp,-260
    a50c:	dfc04015 	stw	ra,256(sp)
    a510:	dd803d15 	stw	r22,244(sp)
    a514:	dcc03a15 	stw	r19,232(sp)
    a518:	dc803915 	stw	r18,228(sp)
    a51c:	2027883a 	mov	r19,r4
    a520:	2825883a 	mov	r18,r5
    a524:	302d883a 	mov	r22,r6
    a528:	d9c00615 	stw	r7,24(sp)
    a52c:	df003f15 	stw	fp,252(sp)
    a530:	ddc03e15 	stw	r23,248(sp)
    a534:	dd403c15 	stw	r21,240(sp)
    a538:	dd003b15 	stw	r20,236(sp)
    a53c:	dc403815 	stw	r17,224(sp)
    a540:	dc003715 	stw	r16,220(sp)
    a544:	000f1740 	call	f174 <_localeconv_r>
    a548:	10800017 	ldw	r2,0(r2)
    a54c:	1009883a 	mov	r4,r2
    a550:	d8800d15 	stw	r2,52(sp)
    a554:	000a4700 	call	a470 <strlen>
    a558:	d8800b15 	stw	r2,44(sp)
    a55c:	98000226 	beq	r19,zero,a568 <___vfprintf_internal_r+0x60>
    a560:	98800e17 	ldw	r2,56(r19)
    a564:	1001e026 	beq	r2,zero,ace8 <___vfprintf_internal_r+0x7e0>
    a568:	9080030b 	ldhu	r2,12(r18)
    a56c:	10c8000c 	andi	r3,r2,8192
    a570:	1800061e 	bne	r3,zero,a58c <___vfprintf_internal_r+0x84>
    a574:	90c01917 	ldw	r3,100(r18)
    a578:	0137ffc4 	movi	r4,-8193
    a57c:	10880014 	ori	r2,r2,8192
    a580:	1906703a 	and	r3,r3,r4
    a584:	9080030d 	sth	r2,12(r18)
    a588:	90c01915 	stw	r3,100(r18)
    a58c:	10c0020c 	andi	r3,r2,8
    a590:	1800fc26 	beq	r3,zero,a984 <___vfprintf_internal_r+0x47c>
    a594:	90c00417 	ldw	r3,16(r18)
    a598:	1800fa26 	beq	r3,zero,a984 <___vfprintf_internal_r+0x47c>
    a59c:	1080068c 	andi	r2,r2,26
    a5a0:	10800298 	cmpnei	r2,r2,10
    a5a4:	1000ff26 	beq	r2,zero,a9a4 <___vfprintf_internal_r+0x49c>
    a5a8:	d8802704 	addi	r2,sp,156
    a5ac:	b02f883a 	mov	r23,r22
    a5b0:	d8801a15 	stw	r2,104(sp)
    a5b4:	d8001c15 	stw	zero,112(sp)
    a5b8:	d8001b15 	stw	zero,108(sp)
    a5bc:	d8000815 	stw	zero,32(sp)
    a5c0:	d8000915 	stw	zero,36(sp)
    a5c4:	d8000a15 	stw	zero,40(sp)
    a5c8:	d8000c15 	stw	zero,48(sp)
    a5cc:	d8001015 	stw	zero,64(sp)
    a5d0:	d8000515 	stw	zero,20(sp)
    a5d4:	102d883a 	mov	r22,r2
    a5d8:	b8800007 	ldb	r2,0(r23)
    a5dc:	1000d726 	beq	r2,zero,a93c <___vfprintf_internal_r+0x434>
    a5e0:	b821883a 	mov	r16,r23
    a5e4:	00000306 	br	a5f4 <___vfprintf_internal_r+0xec>
    a5e8:	80800047 	ldb	r2,1(r16)
    a5ec:	84000044 	addi	r16,r16,1
    a5f0:	10012226 	beq	r2,zero,aa7c <___vfprintf_internal_r+0x574>
    a5f4:	10800958 	cmpnei	r2,r2,37
    a5f8:	103ffb1e 	bne	r2,zero,a5e8 <___vfprintf_internal_r+0xe0>
    a5fc:	85e3c83a 	sub	r17,r16,r23
    a600:	85c1201e 	bne	r16,r23,aa84 <___vfprintf_internal_r+0x57c>
    a604:	80800003 	ldbu	r2,0(r16)
    a608:	10803fcc 	andi	r2,r2,255
    a60c:	1080201c 	xori	r2,r2,128
    a610:	10bfe004 	addi	r2,r2,-128
    a614:	1000c926 	beq	r2,zero,a93c <___vfprintf_internal_r+0x434>
    a618:	82c00047 	ldb	r11,1(r16)
    a61c:	85c00044 	addi	r23,r16,1
    a620:	d8001345 	stb	zero,77(sp)
    a624:	0009883a 	mov	r4,zero
    a628:	000b883a 	mov	r5,zero
    a62c:	023fffc4 	movi	r8,-1
    a630:	0021883a 	mov	r16,zero
    a634:	0019883a 	mov	r12,zero
    a638:	bdc00044 	addi	r23,r23,1
    a63c:	5839883a 	mov	fp,r11
    a640:	e0bff804 	addi	r2,fp,-32
    a644:	10c01668 	cmpgeui	r3,r2,89
    a648:	18006c1e 	bne	r3,zero,a7fc <___vfprintf_internal_r+0x2f4>
    a64c:	100490ba 	slli	r2,r2,2
    a650:	00c00074 	movhi	r3,1
    a654:	10c7883a 	add	r3,r2,r3
    a658:	18a99817 	ldw	r2,-22944(r3)
    a65c:	1000683a 	jmp	r2
    a660:	0000af14 	movui	zero,700
    a664:	0000a7fc 	xorhi	zero,zero,671
    a668:	0000a7fc 	xorhi	zero,zero,671
    a66c:	0000af08 	cmpgei	zero,zero,700
    a670:	0000a7fc 	xorhi	zero,zero,671
    a674:	0000a7fc 	xorhi	zero,zero,671
    a678:	0000a7fc 	xorhi	zero,zero,671
    a67c:	0000a7fc 	xorhi	zero,zero,671
    a680:	0000a7fc 	xorhi	zero,zero,671
    a684:	0000a7fc 	xorhi	zero,zero,671
    a688:	0000ad8c 	andi	zero,zero,694
    a68c:	0000aef8 	rdprs	zero,zero,699
    a690:	0000a7fc 	xorhi	zero,zero,671
    a694:	0000ada4 	muli	zero,zero,694
    a698:	0000adb0 	cmpltui	zero,zero,694
    a69c:	0000a7fc 	xorhi	zero,zero,671
    a6a0:	0000aeec 	andhi	zero,zero,699
    a6a4:	0000a7c4 	movi	zero,671
    a6a8:	0000a7c4 	movi	zero,671
    a6ac:	0000a7c4 	movi	zero,671
    a6b0:	0000a7c4 	movi	zero,671
    a6b4:	0000a7c4 	movi	zero,671
    a6b8:	0000a7c4 	movi	zero,671
    a6bc:	0000a7c4 	movi	zero,671
    a6c0:	0000a7c4 	movi	zero,671
    a6c4:	0000a7c4 	movi	zero,671
    a6c8:	0000a7fc 	xorhi	zero,zero,671
    a6cc:	0000a7fc 	xorhi	zero,zero,671
    a6d0:	0000a7fc 	xorhi	zero,zero,671
    a6d4:	0000a7fc 	xorhi	zero,zero,671
    a6d8:	0000a7fc 	xorhi	zero,zero,671
    a6dc:	0000a7fc 	xorhi	zero,zero,671
    a6e0:	0000a7fc 	xorhi	zero,zero,671
    a6e4:	0000a7fc 	xorhi	zero,zero,671
    a6e8:	0000a7fc 	xorhi	zero,zero,671
    a6ec:	0000a7fc 	xorhi	zero,zero,671
    a6f0:	0000adfc 	xorhi	zero,zero,695
    a6f4:	0000aae0 	cmpeqi	zero,zero,683
    a6f8:	0000a7fc 	xorhi	zero,zero,671
    a6fc:	0000aae0 	cmpeqi	zero,zero,683
    a700:	0000a7fc 	xorhi	zero,zero,671
    a704:	0000a7fc 	xorhi	zero,zero,671
    a708:	0000a7fc 	xorhi	zero,zero,671
    a70c:	0000a7fc 	xorhi	zero,zero,671
    a710:	0000b094 	movui	zero,706
    a714:	0000a7fc 	xorhi	zero,zero,671
    a718:	0000a7fc 	xorhi	zero,zero,671
    a71c:	0000aa14 	movui	zero,680
    a720:	0000a7fc 	xorhi	zero,zero,671
    a724:	0000a7fc 	xorhi	zero,zero,671
    a728:	0000a7fc 	xorhi	zero,zero,671
    a72c:	0000a7fc 	xorhi	zero,zero,671
    a730:	0000a7fc 	xorhi	zero,zero,671
    a734:	0000a9ec 	andhi	zero,zero,679
    a738:	0000a7fc 	xorhi	zero,zero,671
    a73c:	0000a7fc 	xorhi	zero,zero,671
    a740:	0000b0d4 	movui	zero,707
    a744:	0000a7fc 	xorhi	zero,zero,671
    a748:	0000a7fc 	xorhi	zero,zero,671
    a74c:	0000a7fc 	xorhi	zero,zero,671
    a750:	0000a7fc 	xorhi	zero,zero,671
    a754:	0000a7fc 	xorhi	zero,zero,671
    a758:	0000a7fc 	xorhi	zero,zero,671
    a75c:	0000a7fc 	xorhi	zero,zero,671
    a760:	0000a7fc 	xorhi	zero,zero,671
    a764:	0000a7fc 	xorhi	zero,zero,671
    a768:	0000a7fc 	xorhi	zero,zero,671
    a76c:	0000b0ac 	andhi	zero,zero,706
    a770:	0000acf4 	movhi	zero,691
    a774:	0000aae0 	cmpeqi	zero,zero,683
    a778:	0000aae0 	cmpeqi	zero,zero,683
    a77c:	0000aae0 	cmpeqi	zero,zero,683
    a780:	0000b0a0 	cmpeqi	zero,zero,706
    a784:	0000acf4 	movhi	zero,691
    a788:	0000a7fc 	xorhi	zero,zero,671
    a78c:	0000a7fc 	xorhi	zero,zero,671
    a790:	0000af40 	call	af4 <kf_bfly3+0x288>
    a794:	0000a7fc 	xorhi	zero,zero,671
    a798:	0000b054 	movui	zero,705
    a79c:	0000aa18 	cmpnei	zero,zero,680
    a7a0:	0000b014 	movui	zero,704
    a7a4:	0000b008 	cmpgei	zero,zero,704
    a7a8:	0000a7fc 	xorhi	zero,zero,671
    a7ac:	0000afb0 	cmpltui	zero,zero,702
    a7b0:	0000a7fc 	xorhi	zero,zero,671
    a7b4:	0000a9f0 	cmpltui	zero,zero,679
    a7b8:	0000a7fc 	xorhi	zero,zero,671
    a7bc:	0000a7fc 	xorhi	zero,zero,671
    a7c0:	0000af68 	cmpgeui	zero,zero,701
    a7c4:	0021883a 	mov	r16,zero
    a7c8:	e0fff404 	addi	r3,fp,-48
    a7cc:	800490ba 	slli	r2,r16,2
    a7d0:	bf000007 	ldb	fp,0(r23)
    a7d4:	bdc00044 	addi	r23,r23,1
    a7d8:	1421883a 	add	r16,r2,r16
    a7dc:	8421883a 	add	r16,r16,r16
    a7e0:	1c21883a 	add	r16,r3,r16
    a7e4:	e0fff404 	addi	r3,fp,-48
    a7e8:	188002b0 	cmpltui	r2,r3,10
    a7ec:	103ff71e 	bne	r2,zero,a7cc <___vfprintf_internal_r+0x2c4>
    a7f0:	e0bff804 	addi	r2,fp,-32
    a7f4:	10c01668 	cmpgeui	r3,r2,89
    a7f8:	183f9426 	beq	r3,zero,a64c <___vfprintf_internal_r+0x144>
    a7fc:	21003fcc 	andi	r4,r4,255
    a800:	2006541e 	bne	r4,zero,c154 <___vfprintf_internal_r+0x1c4c>
    a804:	e0004d26 	beq	fp,zero,a93c <___vfprintf_internal_r+0x434>
    a808:	df001d05 	stb	fp,116(sp)
    a80c:	d8001345 	stb	zero,77(sp)
    a810:	05000044 	movi	r20,1
    a814:	05400044 	movi	r21,1
    a818:	dc401d04 	addi	r17,sp,116
    a81c:	db000415 	stw	r12,16(sp)
    a820:	0011883a 	mov	r8,zero
    a824:	d8000715 	stw	zero,28(sp)
    a828:	d8800417 	ldw	r2,16(sp)
    a82c:	1380008c 	andi	r14,r2,2
    a830:	70000126 	beq	r14,zero,a838 <___vfprintf_internal_r+0x330>
    a834:	a5000084 	addi	r20,r20,2
    a838:	d8800417 	ldw	r2,16(sp)
    a83c:	d8c01c17 	ldw	r3,112(sp)
    a840:	1340210c 	andi	r13,r2,132
    a844:	6800021e 	bne	r13,zero,a850 <___vfprintf_internal_r+0x348>
    a848:	850fc83a 	sub	r7,r16,r20
    a84c:	01c36b16 	blt	zero,r7,b5fc <___vfprintf_internal_r+0x10f4>
    a850:	d8801347 	ldb	r2,77(sp)
    a854:	10000c26 	beq	r2,zero,a888 <___vfprintf_internal_r+0x380>
    a858:	d8801b17 	ldw	r2,108(sp)
    a85c:	d9001344 	addi	r4,sp,77
    a860:	18c00044 	addi	r3,r3,1
    a864:	10800044 	addi	r2,r2,1
    a868:	b1000015 	stw	r4,0(r22)
    a86c:	01000044 	movi	r4,1
    a870:	d8801b15 	stw	r2,108(sp)
    a874:	b1000115 	stw	r4,4(r22)
    a878:	d8c01c15 	stw	r3,112(sp)
    a87c:	10800208 	cmpgei	r2,r2,8
    a880:	10039f1e 	bne	r2,zero,b700 <___vfprintf_internal_r+0x11f8>
    a884:	b5800204 	addi	r22,r22,8
    a888:	70000c26 	beq	r14,zero,a8bc <___vfprintf_internal_r+0x3b4>
    a88c:	d8801b17 	ldw	r2,108(sp)
    a890:	d9001384 	addi	r4,sp,78
    a894:	18c00084 	addi	r3,r3,2
    a898:	10800044 	addi	r2,r2,1
    a89c:	b1000015 	stw	r4,0(r22)
    a8a0:	01000084 	movi	r4,2
    a8a4:	d8801b15 	stw	r2,108(sp)
    a8a8:	b1000115 	stw	r4,4(r22)
    a8ac:	d8c01c15 	stw	r3,112(sp)
    a8b0:	10800208 	cmpgei	r2,r2,8
    a8b4:	1003a01e 	bne	r2,zero,b738 <___vfprintf_internal_r+0x1230>
    a8b8:	b5800204 	addi	r22,r22,8
    a8bc:	6b402018 	cmpnei	r13,r13,128
    a8c0:	68025c26 	beq	r13,zero,b234 <___vfprintf_internal_r+0xd2c>
    a8c4:	4551c83a 	sub	r8,r8,r21
    a8c8:	02029416 	blt	zero,r8,b31c <___vfprintf_internal_r+0xe14>
    a8cc:	d8800417 	ldw	r2,16(sp)
    a8d0:	1080400c 	andi	r2,r2,256
    a8d4:	1002111e 	bne	r2,zero,b11c <___vfprintf_internal_r+0xc14>
    a8d8:	d8801b17 	ldw	r2,108(sp)
    a8dc:	1d47883a 	add	r3,r3,r21
    a8e0:	b4400015 	stw	r17,0(r22)
    a8e4:	10800044 	addi	r2,r2,1
    a8e8:	b5400115 	stw	r21,4(r22)
    a8ec:	d8801b15 	stw	r2,108(sp)
    a8f0:	d8c01c15 	stw	r3,112(sp)
    a8f4:	10800208 	cmpgei	r2,r2,8
    a8f8:	1002fd1e 	bne	r2,zero,b4f0 <___vfprintf_internal_r+0xfe8>
    a8fc:	b5800204 	addi	r22,r22,8
    a900:	d8800417 	ldw	r2,16(sp)
    a904:	1440010c 	andi	r17,r2,4
    a908:	88000226 	beq	r17,zero,a914 <___vfprintf_internal_r+0x40c>
    a90c:	8523c83a 	sub	r17,r16,r20
    a910:	0440c616 	blt	zero,r17,ac2c <___vfprintf_internal_r+0x724>
    a914:	8500010e 	bge	r16,r20,a91c <___vfprintf_internal_r+0x414>
    a918:	a021883a 	mov	r16,r20
    a91c:	d8800517 	ldw	r2,20(sp)
    a920:	1405883a 	add	r2,r2,r16
    a924:	d8800515 	stw	r2,20(sp)
    a928:	1802c31e 	bne	r3,zero,b438 <___vfprintf_internal_r+0xf30>
    a92c:	b8800007 	ldb	r2,0(r23)
    a930:	d8001b15 	stw	zero,108(sp)
    a934:	dd802704 	addi	r22,sp,156
    a938:	103f291e 	bne	r2,zero,a5e0 <___vfprintf_internal_r+0xd8>
    a93c:	d8801c17 	ldw	r2,112(sp)
    a940:	1005ff1e 	bne	r2,zero,c140 <___vfprintf_internal_r+0x1c38>
    a944:	9080030b 	ldhu	r2,12(r18)
    a948:	1080100c 	andi	r2,r2,64
    a94c:	1006ab1e 	bne	r2,zero,c3fc <___vfprintf_internal_r+0x1ef4>
    a950:	d8800517 	ldw	r2,20(sp)
    a954:	dfc04017 	ldw	ra,256(sp)
    a958:	df003f17 	ldw	fp,252(sp)
    a95c:	ddc03e17 	ldw	r23,248(sp)
    a960:	dd803d17 	ldw	r22,244(sp)
    a964:	dd403c17 	ldw	r21,240(sp)
    a968:	dd003b17 	ldw	r20,236(sp)
    a96c:	dcc03a17 	ldw	r19,232(sp)
    a970:	dc803917 	ldw	r18,228(sp)
    a974:	dc403817 	ldw	r17,224(sp)
    a978:	dc003717 	ldw	r16,220(sp)
    a97c:	dec04104 	addi	sp,sp,260
    a980:	f800283a 	ret
    a984:	900b883a 	mov	r5,r18
    a988:	9809883a 	mov	r4,r19
    a98c:	000c5fc0 	call	c5fc <__swsetup_r>
    a990:	10069a1e 	bne	r2,zero,c3fc <___vfprintf_internal_r+0x1ef4>
    a994:	9080030b 	ldhu	r2,12(r18)
    a998:	1080068c 	andi	r2,r2,26
    a99c:	10800298 	cmpnei	r2,r2,10
    a9a0:	103f011e 	bne	r2,zero,a5a8 <___vfprintf_internal_r+0xa0>
    a9a4:	9080038f 	ldh	r2,14(r18)
    a9a8:	103eff16 	blt	r2,zero,a5a8 <___vfprintf_internal_r+0xa0>
    a9ac:	d9c00617 	ldw	r7,24(sp)
    a9b0:	b00d883a 	mov	r6,r22
    a9b4:	900b883a 	mov	r5,r18
    a9b8:	9809883a 	mov	r4,r19
    a9bc:	dfc04017 	ldw	ra,256(sp)
    a9c0:	df003f17 	ldw	fp,252(sp)
    a9c4:	ddc03e17 	ldw	r23,248(sp)
    a9c8:	dd803d17 	ldw	r22,244(sp)
    a9cc:	dd403c17 	ldw	r21,240(sp)
    a9d0:	dd003b17 	ldw	r20,236(sp)
    a9d4:	dcc03a17 	ldw	r19,232(sp)
    a9d8:	dc803917 	ldw	r18,228(sp)
    a9dc:	dc403817 	ldw	r17,224(sp)
    a9e0:	dc003717 	ldw	r16,220(sp)
    a9e4:	dec04104 	addi	sp,sp,260
    a9e8:	000c53c1 	jmpi	c53c <__sbprintf>
    a9ec:	63000414 	ori	r12,r12,16
    a9f0:	6080080c 	andi	r2,r12,32
    a9f4:	10008126 	beq	r2,zero,abfc <___vfprintf_internal_r+0x6f4>
    a9f8:	d8c00617 	ldw	r3,24(sp)
    a9fc:	00800044 	movi	r2,1
    aa00:	1d000017 	ldw	r20,0(r3)
    aa04:	1d400117 	ldw	r21,4(r3)
    aa08:	18c00204 	addi	r3,r3,8
    aa0c:	d8c00615 	stw	r3,24(sp)
    aa10:	00000906 	br	aa38 <___vfprintf_internal_r+0x530>
    aa14:	63000414 	ori	r12,r12,16
    aa18:	6080080c 	andi	r2,r12,32
    aa1c:	10006b26 	beq	r2,zero,abcc <___vfprintf_internal_r+0x6c4>
    aa20:	d8c00617 	ldw	r3,24(sp)
    aa24:	0005883a 	mov	r2,zero
    aa28:	1d000017 	ldw	r20,0(r3)
    aa2c:	1d400117 	ldw	r21,4(r3)
    aa30:	18c00204 	addi	r3,r3,8
    aa34:	d8c00615 	stw	r3,24(sp)
    aa38:	d8001345 	stb	zero,77(sp)
    aa3c:	40ffffe0 	cmpeqi	r3,r8,-1
    aa40:	001b883a 	mov	r13,zero
    aa44:	18010a1e 	bne	r3,zero,ae70 <___vfprintf_internal_r+0x968>
    aa48:	047fdfc4 	movi	r17,-129
    aa4c:	6448703a 	and	r4,r12,r17
    aa50:	a546b03a 	or	r3,r20,r21
    aa54:	d9000415 	stw	r4,16(sp)
    aa58:	1802e61e 	bne	r3,zero,b5f4 <___vfprintf_internal_r+0x10ec>
    aa5c:	4002601e 	bne	r8,zero,b3e0 <___vfprintf_internal_r+0xed8>
    aa60:	1003ae1e 	bne	r2,zero,b91c <___vfprintf_internal_r+0x1414>
    aa64:	6540004c 	andi	r21,r12,1
    aa68:	a803e426 	beq	r21,zero,b9fc <___vfprintf_internal_r+0x14f4>
    aa6c:	00800c04 	movi	r2,48
    aa70:	d88026c5 	stb	r2,155(sp)
    aa74:	dc4026c4 	addi	r17,sp,155
    aa78:	0000ba06 	br	ad64 <___vfprintf_internal_r+0x85c>
    aa7c:	85e3c83a 	sub	r17,r16,r23
    aa80:	85ffae26 	beq	r16,r23,a93c <___vfprintf_internal_r+0x434>
    aa84:	d8c01c17 	ldw	r3,112(sp)
    aa88:	d8801b17 	ldw	r2,108(sp)
    aa8c:	b5c00015 	stw	r23,0(r22)
    aa90:	1c47883a 	add	r3,r3,r17
    aa94:	10800044 	addi	r2,r2,1
    aa98:	d8801b15 	stw	r2,108(sp)
    aa9c:	b4400115 	stw	r17,4(r22)
    aaa0:	d8c01c15 	stw	r3,112(sp)
    aaa4:	10800208 	cmpgei	r2,r2,8
    aaa8:	1000061e 	bne	r2,zero,aac4 <___vfprintf_internal_r+0x5bc>
    aaac:	b5800204 	addi	r22,r22,8
    aab0:	d8c00517 	ldw	r3,20(sp)
    aab4:	80800003 	ldbu	r2,0(r16)
    aab8:	1c47883a 	add	r3,r3,r17
    aabc:	d8c00515 	stw	r3,20(sp)
    aac0:	003ed106 	br	a608 <___vfprintf_internal_r+0x100>
    aac4:	d9801a04 	addi	r6,sp,104
    aac8:	900b883a 	mov	r5,r18
    aacc:	9809883a 	mov	r4,r19
    aad0:	00110200 	call	11020 <__sprint_r>
    aad4:	103f9b1e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    aad8:	dd802704 	addi	r22,sp,156
    aadc:	003ff406 	br	aab0 <___vfprintf_internal_r+0x5a8>
    aae0:	21003fcc 	andi	r4,r4,255
    aae4:	2006291e 	bne	r4,zero,c38c <___vfprintf_internal_r+0x1e84>
    aae8:	d8c00617 	ldw	r3,24(sp)
    aaec:	6080020c 	andi	r2,r12,8
    aaf0:	19000204 	addi	r4,r3,8
    aaf4:	d9000e15 	stw	r4,56(sp)
    aaf8:	1003c21e 	bne	r2,zero,ba04 <___vfprintf_internal_r+0x14fc>
    aafc:	d8800617 	ldw	r2,24(sp)
    ab00:	10c00017 	ldw	r3,0(r2)
    ab04:	10800117 	ldw	r2,4(r2)
    ab08:	d8c00915 	stw	r3,36(sp)
    ab0c:	d8800a15 	stw	r2,40(sp)
    ab10:	dd400a17 	ldw	r21,40(sp)
    ab14:	dd000917 	ldw	r20,36(sp)
    ab18:	00a00034 	movhi	r2,32768
    ab1c:	10bfffc4 	addi	r2,r2,-1
    ab20:	a8a2703a 	and	r17,r21,r2
    ab24:	01dffc34 	movhi	r7,32752
    ab28:	01bfffc4 	movi	r6,-1
    ab2c:	39ffffc4 	addi	r7,r7,-1
    ab30:	a009883a 	mov	r4,r20
    ab34:	880b883a 	mov	r5,r17
    ab38:	da000615 	stw	r8,24(sp)
    ab3c:	db000415 	stw	r12,16(sp)
    ab40:	000957c0 	call	957c <__unorddf2>
    ab44:	db000417 	ldw	r12,16(sp)
    ab48:	da000617 	ldw	r8,24(sp)
    ab4c:	10044d1e 	bne	r2,zero,bc84 <___vfprintf_internal_r+0x177c>
    ab50:	01dffc34 	movhi	r7,32752
    ab54:	01bfffc4 	movi	r6,-1
    ab58:	39ffffc4 	addi	r7,r7,-1
    ab5c:	a009883a 	mov	r4,r20
    ab60:	880b883a 	mov	r5,r17
    ab64:	00083dc0 	call	83dc <__ledf2>
    ab68:	db000417 	ldw	r12,16(sp)
    ab6c:	da000617 	ldw	r8,24(sp)
    ab70:	0084440e 	bge	zero,r2,bc84 <___vfprintf_internal_r+0x177c>
    ab74:	000d883a 	mov	r6,zero
    ab78:	000f883a 	mov	r7,zero
    ab7c:	a009883a 	mov	r4,r20
    ab80:	a80b883a 	mov	r5,r21
    ab84:	00083dc0 	call	83dc <__ledf2>
    ab88:	db000417 	ldw	r12,16(sp)
    ab8c:	10055916 	blt	r2,zero,c0f4 <___vfprintf_internal_r+0x1bec>
    ab90:	db401343 	ldbu	r13,77(sp)
    ab94:	e0801210 	cmplti	r2,fp,72
    ab98:	1005471e 	bne	r2,zero,c0b8 <___vfprintf_internal_r+0x1bb0>
    ab9c:	04400074 	movhi	r17,1
    aba0:	8c5e3a04 	addi	r17,r17,30952
    aba4:	00bfdfc4 	movi	r2,-129
    aba8:	6084703a 	and	r2,r12,r2
    abac:	d8800415 	stw	r2,16(sp)
    abb0:	d8800e17 	ldw	r2,56(sp)
    abb4:	050000c4 	movi	r20,3
    abb8:	054000c4 	movi	r21,3
    abbc:	d8800615 	stw	r2,24(sp)
    abc0:	0011883a 	mov	r8,zero
    abc4:	d8000715 	stw	zero,28(sp)
    abc8:	00006a06 	br	ad74 <___vfprintf_internal_r+0x86c>
    abcc:	d8c00617 	ldw	r3,24(sp)
    abd0:	6080040c 	andi	r2,r12,16
    abd4:	1d000017 	ldw	r20,0(r3)
    abd8:	18c00104 	addi	r3,r3,4
    abdc:	d8c00615 	stw	r3,24(sp)
    abe0:	1000031e 	bne	r2,zero,abf0 <___vfprintf_internal_r+0x6e8>
    abe4:	6080100c 	andi	r2,r12,64
    abe8:	10000126 	beq	r2,zero,abf0 <___vfprintf_internal_r+0x6e8>
    abec:	a53fffcc 	andi	r20,r20,65535
    abf0:	002b883a 	mov	r21,zero
    abf4:	0005883a 	mov	r2,zero
    abf8:	003f8f06 	br	aa38 <___vfprintf_internal_r+0x530>
    abfc:	d8c00617 	ldw	r3,24(sp)
    ac00:	6080040c 	andi	r2,r12,16
    ac04:	1d000017 	ldw	r20,0(r3)
    ac08:	18c00104 	addi	r3,r3,4
    ac0c:	d8c00615 	stw	r3,24(sp)
    ac10:	1000031e 	bne	r2,zero,ac20 <___vfprintf_internal_r+0x718>
    ac14:	6080100c 	andi	r2,r12,64
    ac18:	10000126 	beq	r2,zero,ac20 <___vfprintf_internal_r+0x718>
    ac1c:	a53fffcc 	andi	r20,r20,65535
    ac20:	002b883a 	mov	r21,zero
    ac24:	00800044 	movi	r2,1
    ac28:	003f8306 	br	aa38 <___vfprintf_internal_r+0x530>
    ac2c:	03000074 	movhi	r12,1
    ac30:	89000450 	cmplti	r4,r17,17
    ac34:	d8801b17 	ldw	r2,108(sp)
    ac38:	631e4e04 	addi	r12,r12,31032
    ac3c:	20001b1e 	bne	r4,zero,acac <___vfprintf_internal_r+0x7a4>
    ac40:	05400404 	movi	r21,16
    ac44:	6039883a 	mov	fp,r12
    ac48:	00000406 	br	ac5c <___vfprintf_internal_r+0x754>
    ac4c:	8c7ffc04 	addi	r17,r17,-16
    ac50:	89000448 	cmpgei	r4,r17,17
    ac54:	b5800204 	addi	r22,r22,8
    ac58:	20001326 	beq	r4,zero,aca8 <___vfprintf_internal_r+0x7a0>
    ac5c:	10800044 	addi	r2,r2,1
    ac60:	18c00404 	addi	r3,r3,16
    ac64:	b7000015 	stw	fp,0(r22)
    ac68:	b5400115 	stw	r21,4(r22)
    ac6c:	d8c01c15 	stw	r3,112(sp)
    ac70:	d8801b15 	stw	r2,108(sp)
    ac74:	11000208 	cmpgei	r4,r2,8
    ac78:	203ff426 	beq	r4,zero,ac4c <___vfprintf_internal_r+0x744>
    ac7c:	d9801a04 	addi	r6,sp,104
    ac80:	900b883a 	mov	r5,r18
    ac84:	9809883a 	mov	r4,r19
    ac88:	00110200 	call	11020 <__sprint_r>
    ac8c:	103f2d1e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    ac90:	8c7ffc04 	addi	r17,r17,-16
    ac94:	89000448 	cmpgei	r4,r17,17
    ac98:	d8c01c17 	ldw	r3,112(sp)
    ac9c:	d8801b17 	ldw	r2,108(sp)
    aca0:	dd802704 	addi	r22,sp,156
    aca4:	203fed1e 	bne	r4,zero,ac5c <___vfprintf_internal_r+0x754>
    aca8:	e019883a 	mov	r12,fp
    acac:	10800044 	addi	r2,r2,1
    acb0:	1c47883a 	add	r3,r3,r17
    acb4:	d8801b15 	stw	r2,108(sp)
    acb8:	b3000015 	stw	r12,0(r22)
    acbc:	b4400115 	stw	r17,4(r22)
    acc0:	d8c01c15 	stw	r3,112(sp)
    acc4:	10800210 	cmplti	r2,r2,8
    acc8:	103f121e 	bne	r2,zero,a914 <___vfprintf_internal_r+0x40c>
    accc:	d9801a04 	addi	r6,sp,104
    acd0:	900b883a 	mov	r5,r18
    acd4:	9809883a 	mov	r4,r19
    acd8:	00110200 	call	11020 <__sprint_r>
    acdc:	103f191e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    ace0:	d8c01c17 	ldw	r3,112(sp)
    ace4:	003f0b06 	br	a914 <___vfprintf_internal_r+0x40c>
    ace8:	9809883a 	mov	r4,r19
    acec:	000e7380 	call	e738 <__sinit>
    acf0:	003e1d06 	br	a568 <___vfprintf_internal_r+0x60>
    acf4:	21003fcc 	andi	r4,r4,255
    acf8:	2005a61e 	bne	r4,zero,c394 <___vfprintf_internal_r+0x1e8c>
    acfc:	6080080c 	andi	r2,r12,32
    ad00:	10004326 	beq	r2,zero,ae10 <___vfprintf_internal_r+0x908>
    ad04:	d8c00617 	ldw	r3,24(sp)
    ad08:	18800117 	ldw	r2,4(r3)
    ad0c:	1d000017 	ldw	r20,0(r3)
    ad10:	18c00204 	addi	r3,r3,8
    ad14:	d8c00615 	stw	r3,24(sp)
    ad18:	102b883a 	mov	r21,r2
    ad1c:	10004a16 	blt	r2,zero,ae48 <___vfprintf_internal_r+0x940>
    ad20:	40bfffd8 	cmpnei	r2,r8,-1
    ad24:	db401343 	ldbu	r13,77(sp)
    ad28:	10000626 	beq	r2,zero,ad44 <___vfprintf_internal_r+0x83c>
    ad2c:	047fdfc4 	movi	r17,-129
    ad30:	6446703a 	and	r3,r12,r17
    ad34:	a544b03a 	or	r2,r20,r21
    ad38:	d8c00415 	stw	r3,16(sp)
    ad3c:	1002f626 	beq	r2,zero,b918 <___vfprintf_internal_r+0x1410>
    ad40:	db000417 	ldw	r12,16(sp)
    ad44:	a8037f1e 	bne	r21,zero,bb44 <___vfprintf_internal_r+0x163c>
    ad48:	a08002a8 	cmpgeui	r2,r20,10
    ad4c:	10037d1e 	bne	r2,zero,bb44 <___vfprintf_internal_r+0x163c>
    ad50:	a5000c04 	addi	r20,r20,48
    ad54:	dd0026c5 	stb	r20,155(sp)
    ad58:	db000415 	stw	r12,16(sp)
    ad5c:	05400044 	movi	r21,1
    ad60:	dc4026c4 	addi	r17,sp,155
    ad64:	4029883a 	mov	r20,r8
    ad68:	4540010e 	bge	r8,r21,ad70 <___vfprintf_internal_r+0x868>
    ad6c:	a829883a 	mov	r20,r21
    ad70:	d8000715 	stw	zero,28(sp)
    ad74:	6b403fcc 	andi	r13,r13,255
    ad78:	6b40201c 	xori	r13,r13,128
    ad7c:	6b7fe004 	addi	r13,r13,-128
    ad80:	683ea926 	beq	r13,zero,a828 <___vfprintf_internal_r+0x320>
    ad84:	a5000044 	addi	r20,r20,1
    ad88:	003ea706 	br	a828 <___vfprintf_internal_r+0x320>
    ad8c:	d8800617 	ldw	r2,24(sp)
    ad90:	14000017 	ldw	r16,0(r2)
    ad94:	10800104 	addi	r2,r2,4
    ad98:	8003150e 	bge	r16,zero,b9f0 <___vfprintf_internal_r+0x14e8>
    ad9c:	0421c83a 	sub	r16,zero,r16
    ada0:	d8800615 	stw	r2,24(sp)
    ada4:	bac00007 	ldb	r11,0(r23)
    ada8:	63000114 	ori	r12,r12,4
    adac:	003e2206 	br	a638 <___vfprintf_internal_r+0x130>
    adb0:	bf000007 	ldb	fp,0(r23)
    adb4:	b8800044 	addi	r2,r23,1
    adb8:	e0c00aa0 	cmpeqi	r3,fp,42
    adbc:	1805c91e 	bne	r3,zero,c4e4 <___vfprintf_internal_r+0x1fdc>
    adc0:	e0fff404 	addi	r3,fp,-48
    adc4:	198002b0 	cmpltui	r6,r3,10
    adc8:	102f883a 	mov	r23,r2
    adcc:	0011883a 	mov	r8,zero
    add0:	303e1b26 	beq	r6,zero,a640 <___vfprintf_internal_r+0x138>
    add4:	400490ba 	slli	r2,r8,2
    add8:	bf000007 	ldb	fp,0(r23)
    addc:	bdc00044 	addi	r23,r23,1
    ade0:	1211883a 	add	r8,r2,r8
    ade4:	4211883a 	add	r8,r8,r8
    ade8:	40d1883a 	add	r8,r8,r3
    adec:	e0fff404 	addi	r3,fp,-48
    adf0:	188002b0 	cmpltui	r2,r3,10
    adf4:	103ff71e 	bne	r2,zero,add4 <___vfprintf_internal_r+0x8cc>
    adf8:	003e1106 	br	a640 <___vfprintf_internal_r+0x138>
    adfc:	21003fcc 	andi	r4,r4,255
    ae00:	20055e1e 	bne	r4,zero,c37c <___vfprintf_internal_r+0x1e74>
    ae04:	63000414 	ori	r12,r12,16
    ae08:	6080080c 	andi	r2,r12,32
    ae0c:	103fbd1e 	bne	r2,zero,ad04 <___vfprintf_internal_r+0x7fc>
    ae10:	d8c00617 	ldw	r3,24(sp)
    ae14:	6080040c 	andi	r2,r12,16
    ae18:	1d000017 	ldw	r20,0(r3)
    ae1c:	18c00104 	addi	r3,r3,4
    ae20:	d8c00615 	stw	r3,24(sp)
    ae24:	1002e91e 	bne	r2,zero,b9cc <___vfprintf_internal_r+0x14c4>
    ae28:	6080100c 	andi	r2,r12,64
    ae2c:	1002e726 	beq	r2,zero,b9cc <___vfprintf_internal_r+0x14c4>
    ae30:	a53fffcc 	andi	r20,r20,65535
    ae34:	a520001c 	xori	r20,r20,32768
    ae38:	a5200004 	addi	r20,r20,-32768
    ae3c:	a02bd7fa 	srai	r21,r20,31
    ae40:	a805883a 	mov	r2,r21
    ae44:	103fb60e 	bge	r2,zero,ad20 <___vfprintf_internal_r+0x818>
    ae48:	a004c03a 	cmpne	r2,r20,zero
    ae4c:	056bc83a 	sub	r21,zero,r21
    ae50:	a8abc83a 	sub	r21,r21,r2
    ae54:	00800b44 	movi	r2,45
    ae58:	d8801345 	stb	r2,77(sp)
    ae5c:	40ffffe0 	cmpeqi	r3,r8,-1
    ae60:	0529c83a 	sub	r20,zero,r20
    ae64:	03400b44 	movi	r13,45
    ae68:	00800044 	movi	r2,1
    ae6c:	183ef626 	beq	r3,zero,aa48 <___vfprintf_internal_r+0x540>
    ae70:	10c00060 	cmpeqi	r3,r2,1
    ae74:	183fb31e 	bne	r3,zero,ad44 <___vfprintf_internal_r+0x83c>
    ae78:	108000a0 	cmpeqi	r2,r2,2
    ae7c:	10015d1e 	bne	r2,zero,b3f4 <___vfprintf_internal_r+0xeec>
    ae80:	dc402704 	addi	r17,sp,156
    ae84:	a006d0fa 	srli	r3,r20,3
    ae88:	a808977a 	slli	r4,r21,29
    ae8c:	a82ad0fa 	srli	r21,r21,3
    ae90:	a50001cc 	andi	r20,r20,7
    ae94:	a0800c04 	addi	r2,r20,48
    ae98:	20e8b03a 	or	r20,r4,r3
    ae9c:	88bfffc5 	stb	r2,-1(r17)
    aea0:	a546b03a 	or	r3,r20,r21
    aea4:	880b883a 	mov	r5,r17
    aea8:	8c7fffc4 	addi	r17,r17,-1
    aeac:	183ff51e 	bne	r3,zero,ae84 <___vfprintf_internal_r+0x97c>
    aeb0:	60c0004c 	andi	r3,r12,1
    aeb4:	18015c26 	beq	r3,zero,b428 <___vfprintf_internal_r+0xf20>
    aeb8:	10803fcc 	andi	r2,r2,255
    aebc:	1080201c 	xori	r2,r2,128
    aec0:	10bfe004 	addi	r2,r2,-128
    aec4:	10800c18 	cmpnei	r2,r2,48
    aec8:	10015726 	beq	r2,zero,b428 <___vfprintf_internal_r+0xf20>
    aecc:	00800c04 	movi	r2,48
    aed0:	297fff84 	addi	r5,r5,-2
    aed4:	88bfffc5 	stb	r2,-1(r17)
    aed8:	d8802704 	addi	r2,sp,156
    aedc:	116bc83a 	sub	r21,r2,r5
    aee0:	db000415 	stw	r12,16(sp)
    aee4:	2823883a 	mov	r17,r5
    aee8:	003f9e06 	br	ad64 <___vfprintf_internal_r+0x85c>
    aeec:	bac00007 	ldb	r11,0(r23)
    aef0:	63002014 	ori	r12,r12,128
    aef4:	003dd006 	br	a638 <___vfprintf_internal_r+0x130>
    aef8:	bac00007 	ldb	r11,0(r23)
    aefc:	01000044 	movi	r4,1
    af00:	01400ac4 	movi	r5,43
    af04:	003dcc06 	br	a638 <___vfprintf_internal_r+0x130>
    af08:	bac00007 	ldb	r11,0(r23)
    af0c:	63000054 	ori	r12,r12,1
    af10:	003dc906 	br	a638 <___vfprintf_internal_r+0x130>
    af14:	28803fcc 	andi	r2,r5,255
    af18:	1080201c 	xori	r2,r2,128
    af1c:	10bfe004 	addi	r2,r2,-128
    af20:	bf000003 	ldbu	fp,0(r23)
    af24:	10000c1e 	bne	r2,zero,af58 <___vfprintf_internal_r+0xa50>
    af28:	e2c03fcc 	andi	r11,fp,255
    af2c:	5ac0201c 	xori	r11,r11,128
    af30:	01000044 	movi	r4,1
    af34:	01400804 	movi	r5,32
    af38:	5affe004 	addi	r11,r11,-128
    af3c:	003dbe06 	br	a638 <___vfprintf_internal_r+0x130>
    af40:	bac00007 	ldb	r11,0(r23)
    af44:	58801b18 	cmpnei	r2,r11,108
    af48:	1002a71e 	bne	r2,zero,b9e8 <___vfprintf_internal_r+0x14e0>
    af4c:	bf000043 	ldbu	fp,1(r23)
    af50:	63000814 	ori	r12,r12,32
    af54:	bdc00044 	addi	r23,r23,1
    af58:	e2c03fcc 	andi	r11,fp,255
    af5c:	5ac0201c 	xori	r11,r11,128
    af60:	5affe004 	addi	r11,r11,-128
    af64:	003db406 	br	a638 <___vfprintf_internal_r+0x130>
    af68:	21003fcc 	andi	r4,r4,255
    af6c:	20050b1e 	bne	r4,zero,c39c <___vfprintf_internal_r+0x1e94>
    af70:	00800074 	movhi	r2,1
    af74:	109e3d04 	addi	r2,r2,30964
    af78:	d8800c15 	stw	r2,48(sp)
    af7c:	6080080c 	andi	r2,r12,32
    af80:	10005b26 	beq	r2,zero,b0f0 <___vfprintf_internal_r+0xbe8>
    af84:	d8800617 	ldw	r2,24(sp)
    af88:	15000017 	ldw	r20,0(r2)
    af8c:	15400117 	ldw	r21,4(r2)
    af90:	10800204 	addi	r2,r2,8
    af94:	d8800615 	stw	r2,24(sp)
    af98:	6080004c 	andi	r2,r12,1
    af9c:	10000226 	beq	r2,zero,afa8 <___vfprintf_internal_r+0xaa0>
    afa0:	a544b03a 	or	r2,r20,r21
    afa4:	10029c1e 	bne	r2,zero,ba18 <___vfprintf_internal_r+0x1510>
    afa8:	00800084 	movi	r2,2
    afac:	003ea206 	br	aa38 <___vfprintf_internal_r+0x530>
    afb0:	d8800617 	ldw	r2,24(sp)
    afb4:	d8001345 	stb	zero,77(sp)
    afb8:	14400017 	ldw	r17,0(r2)
    afbc:	10c00104 	addi	r3,r2,4
    afc0:	8802ba26 	beq	r17,zero,baac <___vfprintf_internal_r+0x15a4>
    afc4:	40bfffe0 	cmpeqi	r2,r8,-1
    afc8:	1003c61e 	bne	r2,zero,bee4 <___vfprintf_internal_r+0x19dc>
    afcc:	400d883a 	mov	r6,r8
    afd0:	000b883a 	mov	r5,zero
    afd4:	8809883a 	mov	r4,r17
    afd8:	d8c00715 	stw	r3,28(sp)
    afdc:	db000615 	stw	r12,24(sp)
    afe0:	da000415 	stw	r8,16(sp)
    afe4:	000f3d40 	call	f3d4 <memchr>
    afe8:	da000417 	ldw	r8,16(sp)
    afec:	db000617 	ldw	r12,24(sp)
    aff0:	d8c00717 	ldw	r3,28(sp)
    aff4:	1004d126 	beq	r2,zero,c33c <___vfprintf_internal_r+0x1e34>
    aff8:	146bc83a 	sub	r21,r2,r17
    affc:	a829883a 	mov	r20,r21
    b000:	d8c00615 	stw	r3,24(sp)
    b004:	003e0506 	br	a81c <___vfprintf_internal_r+0x314>
    b008:	bac00007 	ldb	r11,0(r23)
    b00c:	63000814 	ori	r12,r12,32
    b010:	003d8906 	br	a638 <___vfprintf_internal_r+0x130>
    b014:	d8c00617 	ldw	r3,24(sp)
    b018:	00800c04 	movi	r2,48
    b01c:	d8801385 	stb	r2,78(sp)
    b020:	00801e04 	movi	r2,120
    b024:	01000074 	movhi	r4,1
    b028:	d88013c5 	stb	r2,79(sp)
    b02c:	18800104 	addi	r2,r3,4
    b030:	d8800615 	stw	r2,24(sp)
    b034:	209e3d04 	addi	r2,r4,30964
    b038:	d8800c15 	stw	r2,48(sp)
    b03c:	1d000017 	ldw	r20,0(r3)
    b040:	002b883a 	mov	r21,zero
    b044:	63000094 	ori	r12,r12,2
    b048:	00800084 	movi	r2,2
    b04c:	07001e04 	movi	fp,120
    b050:	003e7906 	br	aa38 <___vfprintf_internal_r+0x530>
    b054:	21003fcc 	andi	r4,r4,255
    b058:	2004ca1e 	bne	r4,zero,c384 <___vfprintf_internal_r+0x1e7c>
    b05c:	d9000617 	ldw	r4,24(sp)
    b060:	6080080c 	andi	r2,r12,32
    b064:	20c00104 	addi	r3,r4,4
    b068:	1002711e 	bne	r2,zero,ba30 <___vfprintf_internal_r+0x1528>
    b06c:	6080040c 	andi	r2,r12,16
    b070:	1002dc1e 	bne	r2,zero,bbe4 <___vfprintf_internal_r+0x16dc>
    b074:	6300100c 	andi	r12,r12,64
    b078:	6002da26 	beq	r12,zero,bbe4 <___vfprintf_internal_r+0x16dc>
    b07c:	d8800617 	ldw	r2,24(sp)
    b080:	d8c00615 	stw	r3,24(sp)
    b084:	d8c00517 	ldw	r3,20(sp)
    b088:	10800017 	ldw	r2,0(r2)
    b08c:	10c0000d 	sth	r3,0(r2)
    b090:	003d5106 	br	a5d8 <___vfprintf_internal_r+0xd0>
    b094:	bac00007 	ldb	r11,0(r23)
    b098:	63000214 	ori	r12,r12,8
    b09c:	003d6606 	br	a638 <___vfprintf_internal_r+0x130>
    b0a0:	bac00007 	ldb	r11,0(r23)
    b0a4:	63001014 	ori	r12,r12,64
    b0a8:	003d6306 	br	a638 <___vfprintf_internal_r+0x130>
    b0ac:	d8c00617 	ldw	r3,24(sp)
    b0b0:	d8001345 	stb	zero,77(sp)
    b0b4:	05000044 	movi	r20,1
    b0b8:	18800017 	ldw	r2,0(r3)
    b0bc:	18c00104 	addi	r3,r3,4
    b0c0:	d8c00615 	stw	r3,24(sp)
    b0c4:	d8801d05 	stb	r2,116(sp)
    b0c8:	05400044 	movi	r21,1
    b0cc:	dc401d04 	addi	r17,sp,116
    b0d0:	003dd206 	br	a81c <___vfprintf_internal_r+0x314>
    b0d4:	21003fcc 	andi	r4,r4,255
    b0d8:	2004b21e 	bne	r4,zero,c3a4 <___vfprintf_internal_r+0x1e9c>
    b0dc:	00800074 	movhi	r2,1
    b0e0:	109e4204 	addi	r2,r2,30984
    b0e4:	d8800c15 	stw	r2,48(sp)
    b0e8:	6080080c 	andi	r2,r12,32
    b0ec:	103fa51e 	bne	r2,zero,af84 <___vfprintf_internal_r+0xa7c>
    b0f0:	d8c00617 	ldw	r3,24(sp)
    b0f4:	6080040c 	andi	r2,r12,16
    b0f8:	1d000017 	ldw	r20,0(r3)
    b0fc:	18c00104 	addi	r3,r3,4
    b100:	d8c00615 	stw	r3,24(sp)
    b104:	10022f1e 	bne	r2,zero,b9c4 <___vfprintf_internal_r+0x14bc>
    b108:	6080100c 	andi	r2,r12,64
    b10c:	10022d26 	beq	r2,zero,b9c4 <___vfprintf_internal_r+0x14bc>
    b110:	a53fffcc 	andi	r20,r20,65535
    b114:	002b883a 	mov	r21,zero
    b118:	003f9f06 	br	af98 <___vfprintf_internal_r+0xa90>
    b11c:	e2c01990 	cmplti	r11,fp,102
    b120:	5800fb1e 	bne	r11,zero,b510 <___vfprintf_internal_r+0x1008>
    b124:	d9000917 	ldw	r4,36(sp)
    b128:	d9400a17 	ldw	r5,40(sp)
    b12c:	000d883a 	mov	r6,zero
    b130:	000f883a 	mov	r7,zero
    b134:	d8c00e15 	stw	r3,56(sp)
    b138:	00082740 	call	8274 <__eqdf2>
    b13c:	d8c00e17 	ldw	r3,56(sp)
    b140:	1001891e 	bne	r2,zero,b768 <___vfprintf_internal_r+0x1260>
    b144:	d8801b17 	ldw	r2,108(sp)
    b148:	01000074 	movhi	r4,1
    b14c:	211e4904 	addi	r4,r4,31012
    b150:	10800044 	addi	r2,r2,1
    b154:	18c00044 	addi	r3,r3,1
    b158:	b1000015 	stw	r4,0(r22)
    b15c:	01000044 	movi	r4,1
    b160:	d8801b15 	stw	r2,108(sp)
    b164:	b1000115 	stw	r4,4(r22)
    b168:	d8c01c15 	stw	r3,112(sp)
    b16c:	10800208 	cmpgei	r2,r2,8
    b170:	10034a1e 	bne	r2,zero,be9c <___vfprintf_internal_r+0x1994>
    b174:	b5800204 	addi	r22,r22,8
    b178:	d8801417 	ldw	r2,80(sp)
    b17c:	d9000817 	ldw	r4,32(sp)
    b180:	1102150e 	bge	r2,r4,b9d8 <___vfprintf_internal_r+0x14d0>
    b184:	d8800d17 	ldw	r2,52(sp)
    b188:	d9000b17 	ldw	r4,44(sp)
    b18c:	b0800015 	stw	r2,0(r22)
    b190:	d8801b17 	ldw	r2,108(sp)
    b194:	1907883a 	add	r3,r3,r4
    b198:	b1000115 	stw	r4,4(r22)
    b19c:	10800044 	addi	r2,r2,1
    b1a0:	d8801b15 	stw	r2,108(sp)
    b1a4:	d8c01c15 	stw	r3,112(sp)
    b1a8:	10800208 	cmpgei	r2,r2,8
    b1ac:	1002371e 	bne	r2,zero,ba8c <___vfprintf_internal_r+0x1584>
    b1b0:	b5800204 	addi	r22,r22,8
    b1b4:	d8800817 	ldw	r2,32(sp)
    b1b8:	157fffc4 	addi	r21,r2,-1
    b1bc:	057dd00e 	bge	zero,r21,a900 <___vfprintf_internal_r+0x3f8>
    b1c0:	01c00074 	movhi	r7,1
    b1c4:	a9000450 	cmplti	r4,r21,17
    b1c8:	d8801b17 	ldw	r2,108(sp)
    b1cc:	39de4a04 	addi	r7,r7,31016
    b1d0:	20032e1e 	bne	r4,zero,be8c <___vfprintf_internal_r+0x1984>
    b1d4:	07000404 	movi	fp,16
    b1d8:	3823883a 	mov	r17,r7
    b1dc:	00000406 	br	b1f0 <___vfprintf_internal_r+0xce8>
    b1e0:	b5800204 	addi	r22,r22,8
    b1e4:	ad7ffc04 	addi	r21,r21,-16
    b1e8:	a9000448 	cmpgei	r4,r21,17
    b1ec:	20032626 	beq	r4,zero,be88 <___vfprintf_internal_r+0x1980>
    b1f0:	10800044 	addi	r2,r2,1
    b1f4:	18c00404 	addi	r3,r3,16
    b1f8:	b4400015 	stw	r17,0(r22)
    b1fc:	b7000115 	stw	fp,4(r22)
    b200:	d8c01c15 	stw	r3,112(sp)
    b204:	d8801b15 	stw	r2,108(sp)
    b208:	11000208 	cmpgei	r4,r2,8
    b20c:	203ff426 	beq	r4,zero,b1e0 <___vfprintf_internal_r+0xcd8>
    b210:	d9801a04 	addi	r6,sp,104
    b214:	900b883a 	mov	r5,r18
    b218:	9809883a 	mov	r4,r19
    b21c:	00110200 	call	11020 <__sprint_r>
    b220:	103dc81e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    b224:	d8c01c17 	ldw	r3,112(sp)
    b228:	d8801b17 	ldw	r2,108(sp)
    b22c:	dd802704 	addi	r22,sp,156
    b230:	003fec06 	br	b1e4 <___vfprintf_internal_r+0xcdc>
    b234:	8519c83a 	sub	r12,r16,r20
    b238:	033da20e 	bge	zero,r12,a8c4 <___vfprintf_internal_r+0x3bc>
    b23c:	01c00074 	movhi	r7,1
    b240:	61000450 	cmplti	r4,r12,17
    b244:	d8801b17 	ldw	r2,108(sp)
    b248:	39de4a04 	addi	r7,r7,31016
    b24c:	2000281e 	bne	r4,zero,b2f0 <___vfprintf_internal_r+0xde8>
    b250:	dc400e15 	stw	r17,56(sp)
    b254:	dc000f15 	stw	r16,60(sp)
    b258:	b009883a 	mov	r4,r22
    b25c:	03400404 	movi	r13,16
    b260:	a02d883a 	mov	r22,r20
    b264:	6021883a 	mov	r16,r12
    b268:	4029883a 	mov	r20,r8
    b26c:	3823883a 	mov	r17,r7
    b270:	00000406 	br	b284 <___vfprintf_internal_r+0xd7c>
    b274:	843ffc04 	addi	r16,r16,-16
    b278:	81400448 	cmpgei	r5,r16,17
    b27c:	21000204 	addi	r4,r4,8
    b280:	28001426 	beq	r5,zero,b2d4 <___vfprintf_internal_r+0xdcc>
    b284:	10800044 	addi	r2,r2,1
    b288:	18c00404 	addi	r3,r3,16
    b28c:	24400015 	stw	r17,0(r4)
    b290:	23400115 	stw	r13,4(r4)
    b294:	d8c01c15 	stw	r3,112(sp)
    b298:	d8801b15 	stw	r2,108(sp)
    b29c:	11400208 	cmpgei	r5,r2,8
    b2a0:	283ff426 	beq	r5,zero,b274 <___vfprintf_internal_r+0xd6c>
    b2a4:	d9801a04 	addi	r6,sp,104
    b2a8:	900b883a 	mov	r5,r18
    b2ac:	9809883a 	mov	r4,r19
    b2b0:	00110200 	call	11020 <__sprint_r>
    b2b4:	103da31e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    b2b8:	843ffc04 	addi	r16,r16,-16
    b2bc:	81400448 	cmpgei	r5,r16,17
    b2c0:	d8c01c17 	ldw	r3,112(sp)
    b2c4:	d8801b17 	ldw	r2,108(sp)
    b2c8:	d9002704 	addi	r4,sp,156
    b2cc:	03400404 	movi	r13,16
    b2d0:	283fec1e 	bne	r5,zero,b284 <___vfprintf_internal_r+0xd7c>
    b2d4:	8019883a 	mov	r12,r16
    b2d8:	880f883a 	mov	r7,r17
    b2dc:	dc000f17 	ldw	r16,60(sp)
    b2e0:	dc400e17 	ldw	r17,56(sp)
    b2e4:	a011883a 	mov	r8,r20
    b2e8:	b029883a 	mov	r20,r22
    b2ec:	202d883a 	mov	r22,r4
    b2f0:	10800044 	addi	r2,r2,1
    b2f4:	1b07883a 	add	r3,r3,r12
    b2f8:	d8801b15 	stw	r2,108(sp)
    b2fc:	b1c00015 	stw	r7,0(r22)
    b300:	b3000115 	stw	r12,4(r22)
    b304:	d8c01c15 	stw	r3,112(sp)
    b308:	10800208 	cmpgei	r2,r2,8
    b30c:	1002eb1e 	bne	r2,zero,bebc <___vfprintf_internal_r+0x19b4>
    b310:	4551c83a 	sub	r8,r8,r21
    b314:	b5800204 	addi	r22,r22,8
    b318:	023d6c0e 	bge	zero,r8,a8cc <___vfprintf_internal_r+0x3c4>
    b31c:	01c00074 	movhi	r7,1
    b320:	41000450 	cmplti	r4,r8,17
    b324:	d8801b17 	ldw	r2,108(sp)
    b328:	39de4a04 	addi	r7,r7,31016
    b32c:	2000221e 	bne	r4,zero,b3b8 <___vfprintf_internal_r+0xeb0>
    b330:	dc400e15 	stw	r17,56(sp)
    b334:	dc000f15 	stw	r16,60(sp)
    b338:	03000404 	movi	r12,16
    b33c:	4021883a 	mov	r16,r8
    b340:	3823883a 	mov	r17,r7
    b344:	00000406 	br	b358 <___vfprintf_internal_r+0xe50>
    b348:	843ffc04 	addi	r16,r16,-16
    b34c:	81000448 	cmpgei	r4,r16,17
    b350:	b5800204 	addi	r22,r22,8
    b354:	20001426 	beq	r4,zero,b3a8 <___vfprintf_internal_r+0xea0>
    b358:	10800044 	addi	r2,r2,1
    b35c:	18c00404 	addi	r3,r3,16
    b360:	b4400015 	stw	r17,0(r22)
    b364:	b3000115 	stw	r12,4(r22)
    b368:	d8c01c15 	stw	r3,112(sp)
    b36c:	d8801b15 	stw	r2,108(sp)
    b370:	11000208 	cmpgei	r4,r2,8
    b374:	203ff426 	beq	r4,zero,b348 <___vfprintf_internal_r+0xe40>
    b378:	d9801a04 	addi	r6,sp,104
    b37c:	900b883a 	mov	r5,r18
    b380:	9809883a 	mov	r4,r19
    b384:	00110200 	call	11020 <__sprint_r>
    b388:	103d6e1e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    b38c:	843ffc04 	addi	r16,r16,-16
    b390:	81000448 	cmpgei	r4,r16,17
    b394:	d8c01c17 	ldw	r3,112(sp)
    b398:	d8801b17 	ldw	r2,108(sp)
    b39c:	dd802704 	addi	r22,sp,156
    b3a0:	03000404 	movi	r12,16
    b3a4:	203fec1e 	bne	r4,zero,b358 <___vfprintf_internal_r+0xe50>
    b3a8:	8011883a 	mov	r8,r16
    b3ac:	880f883a 	mov	r7,r17
    b3b0:	dc000f17 	ldw	r16,60(sp)
    b3b4:	dc400e17 	ldw	r17,56(sp)
    b3b8:	10800044 	addi	r2,r2,1
    b3bc:	1a07883a 	add	r3,r3,r8
    b3c0:	d8801b15 	stw	r2,108(sp)
    b3c4:	b1c00015 	stw	r7,0(r22)
    b3c8:	b2000115 	stw	r8,4(r22)
    b3cc:	d8c01c15 	stw	r3,112(sp)
    b3d0:	10800208 	cmpgei	r2,r2,8
    b3d4:	1001731e 	bne	r2,zero,b9a4 <___vfprintf_internal_r+0x149c>
    b3d8:	b5800204 	addi	r22,r22,8
    b3dc:	003d3b06 	br	a8cc <___vfprintf_internal_r+0x3c4>
    b3e0:	10c00060 	cmpeqi	r3,r2,1
    b3e4:	1803831e 	bne	r3,zero,c1f4 <___vfprintf_internal_r+0x1cec>
    b3e8:	108000a0 	cmpeqi	r2,r2,2
    b3ec:	db000417 	ldw	r12,16(sp)
    b3f0:	103ea326 	beq	r2,zero,ae80 <___vfprintf_internal_r+0x978>
    b3f4:	d9000c17 	ldw	r4,48(sp)
    b3f8:	dc402704 	addi	r17,sp,156
    b3fc:	a08003cc 	andi	r2,r20,15
    b400:	a806973a 	slli	r3,r21,28
    b404:	a028d13a 	srli	r20,r20,4
    b408:	2085883a 	add	r2,r4,r2
    b40c:	10800003 	ldbu	r2,0(r2)
    b410:	a82ad13a 	srli	r21,r21,4
    b414:	1d28b03a 	or	r20,r3,r20
    b418:	88bfffc5 	stb	r2,-1(r17)
    b41c:	a544b03a 	or	r2,r20,r21
    b420:	8c7fffc4 	addi	r17,r17,-1
    b424:	103ff51e 	bne	r2,zero,b3fc <___vfprintf_internal_r+0xef4>
    b428:	d8802704 	addi	r2,sp,156
    b42c:	146bc83a 	sub	r21,r2,r17
    b430:	db000415 	stw	r12,16(sp)
    b434:	003e4b06 	br	ad64 <___vfprintf_internal_r+0x85c>
    b438:	d9801a04 	addi	r6,sp,104
    b43c:	900b883a 	mov	r5,r18
    b440:	9809883a 	mov	r4,r19
    b444:	00110200 	call	11020 <__sprint_r>
    b448:	103d3826 	beq	r2,zero,a92c <___vfprintf_internal_r+0x424>
    b44c:	003d3d06 	br	a944 <___vfprintf_internal_r+0x43c>
    b450:	d8801b17 	ldw	r2,108(sp)
    b454:	01000074 	movhi	r4,1
    b458:	211e4904 	addi	r4,r4,31012
    b45c:	10800044 	addi	r2,r2,1
    b460:	18c00044 	addi	r3,r3,1
    b464:	b1000015 	stw	r4,0(r22)
    b468:	01000044 	movi	r4,1
    b46c:	d8801b15 	stw	r2,108(sp)
    b470:	b1000115 	stw	r4,4(r22)
    b474:	d8c01c15 	stw	r3,112(sp)
    b478:	10800208 	cmpgei	r2,r2,8
    b47c:	1003211e 	bne	r2,zero,c104 <___vfprintf_internal_r+0x1bfc>
    b480:	b5800204 	addi	r22,r22,8
    b484:	2802a51e 	bne	r5,zero,bf1c <___vfprintf_internal_r+0x1a14>
    b488:	d8800417 	ldw	r2,16(sp)
    b48c:	d9000817 	ldw	r4,32(sp)
    b490:	1080004c 	andi	r2,r2,1
    b494:	1104b03a 	or	r2,r2,r4
    b498:	103d1926 	beq	r2,zero,a900 <___vfprintf_internal_r+0x3f8>
    b49c:	d8800d17 	ldw	r2,52(sp)
    b4a0:	d9000b17 	ldw	r4,44(sp)
    b4a4:	b0800015 	stw	r2,0(r22)
    b4a8:	d8801b17 	ldw	r2,108(sp)
    b4ac:	20c7883a 	add	r3,r4,r3
    b4b0:	b1000115 	stw	r4,4(r22)
    b4b4:	10800044 	addi	r2,r2,1
    b4b8:	d8c01c15 	stw	r3,112(sp)
    b4bc:	d8801b15 	stw	r2,108(sp)
    b4c0:	11000208 	cmpgei	r4,r2,8
    b4c4:	2003381e 	bne	r4,zero,c1a8 <___vfprintf_internal_r+0x1ca0>
    b4c8:	b5800204 	addi	r22,r22,8
    b4cc:	d9000817 	ldw	r4,32(sp)
    b4d0:	10800044 	addi	r2,r2,1
    b4d4:	d8801b15 	stw	r2,108(sp)
    b4d8:	20c7883a 	add	r3,r4,r3
    b4dc:	b4400015 	stw	r17,0(r22)
    b4e0:	b1000115 	stw	r4,4(r22)
    b4e4:	d8c01c15 	stw	r3,112(sp)
    b4e8:	10800208 	cmpgei	r2,r2,8
    b4ec:	103d0326 	beq	r2,zero,a8fc <___vfprintf_internal_r+0x3f4>
    b4f0:	d9801a04 	addi	r6,sp,104
    b4f4:	900b883a 	mov	r5,r18
    b4f8:	9809883a 	mov	r4,r19
    b4fc:	00110200 	call	11020 <__sprint_r>
    b500:	103d101e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    b504:	d8c01c17 	ldw	r3,112(sp)
    b508:	dd802704 	addi	r22,sp,156
    b50c:	003cfc06 	br	a900 <___vfprintf_internal_r+0x3f8>
    b510:	d8800817 	ldw	r2,32(sp)
    b514:	dd401b17 	ldw	r21,108(sp)
    b518:	18c00044 	addi	r3,r3,1
    b51c:	10800088 	cmpgei	r2,r2,2
    b520:	ad400044 	addi	r21,r21,1
    b524:	b7000204 	addi	fp,r22,8
    b528:	1000e826 	beq	r2,zero,b8cc <___vfprintf_internal_r+0x13c4>
    b52c:	00800044 	movi	r2,1
    b530:	b0800115 	stw	r2,4(r22)
    b534:	b4400015 	stw	r17,0(r22)
    b538:	d8c01c15 	stw	r3,112(sp)
    b53c:	dd401b15 	stw	r21,108(sp)
    b540:	a8800210 	cmplti	r2,r21,8
    b544:	1001ad26 	beq	r2,zero,bbfc <___vfprintf_internal_r+0x16f4>
    b548:	d8800b17 	ldw	r2,44(sp)
    b54c:	d9000d17 	ldw	r4,52(sp)
    b550:	ad400044 	addi	r21,r21,1
    b554:	1887883a 	add	r3,r3,r2
    b558:	e0800115 	stw	r2,4(fp)
    b55c:	e1000015 	stw	r4,0(fp)
    b560:	d8c01c15 	stw	r3,112(sp)
    b564:	dd401b15 	stw	r21,108(sp)
    b568:	a8800208 	cmpgei	r2,r21,8
    b56c:	1001ac1e 	bne	r2,zero,bc20 <___vfprintf_internal_r+0x1718>
    b570:	e7000204 	addi	fp,fp,8
    b574:	d9000917 	ldw	r4,36(sp)
    b578:	d9400a17 	ldw	r5,40(sp)
    b57c:	000d883a 	mov	r6,zero
    b580:	000f883a 	mov	r7,zero
    b584:	d8c00715 	stw	r3,28(sp)
    b588:	00082740 	call	8274 <__eqdf2>
    b58c:	d8c00817 	ldw	r3,32(sp)
    b590:	1dbfffc4 	addi	r22,r3,-1
    b594:	d8c00717 	ldw	r3,28(sp)
    b598:	1000e426 	beq	r2,zero,b92c <___vfprintf_internal_r+0x1424>
    b59c:	8a400044 	addi	r9,r17,1
    b5a0:	ad400044 	addi	r21,r21,1
    b5a4:	1d87883a 	add	r3,r3,r22
    b5a8:	e2400015 	stw	r9,0(fp)
    b5ac:	e5800115 	stw	r22,4(fp)
    b5b0:	d8c01c15 	stw	r3,112(sp)
    b5b4:	dd401b15 	stw	r21,108(sp)
    b5b8:	a8800208 	cmpgei	r2,r21,8
    b5bc:	1000cd1e 	bne	r2,zero,b8f4 <___vfprintf_internal_r+0x13ec>
    b5c0:	e7000204 	addi	fp,fp,8
    b5c4:	d9001017 	ldw	r4,64(sp)
    b5c8:	ad400044 	addi	r21,r21,1
    b5cc:	d8801644 	addi	r2,sp,89
    b5d0:	20c7883a 	add	r3,r4,r3
    b5d4:	dd401b15 	stw	r21,108(sp)
    b5d8:	e0800015 	stw	r2,0(fp)
    b5dc:	e1000115 	stw	r4,4(fp)
    b5e0:	d8c01c15 	stw	r3,112(sp)
    b5e4:	ad400208 	cmpgei	r21,r21,8
    b5e8:	a83fc11e 	bne	r21,zero,b4f0 <___vfprintf_internal_r+0xfe8>
    b5ec:	e5800204 	addi	r22,fp,8
    b5f0:	003cc306 	br	a900 <___vfprintf_internal_r+0x3f8>
    b5f4:	db000417 	ldw	r12,16(sp)
    b5f8:	003e1d06 	br	ae70 <___vfprintf_internal_r+0x968>
    b5fc:	03000074 	movhi	r12,1
    b600:	39000450 	cmplti	r4,r7,17
    b604:	d8801b17 	ldw	r2,108(sp)
    b608:	631e4e04 	addi	r12,r12,31032
    b60c:	2000321e 	bne	r4,zero,b6d8 <___vfprintf_internal_r+0x11d0>
    b610:	dc401115 	stw	r17,68(sp)
    b614:	b009883a 	mov	r4,r22
    b618:	9023883a 	mov	r17,r18
    b61c:	a82d883a 	mov	r22,r21
    b620:	ddc01215 	stw	r23,72(sp)
    b624:	03c00404 	movi	r15,16
    b628:	a02f883a 	mov	r23,r20
    b62c:	db800e15 	stw	r14,56(sp)
    b630:	8029883a 	mov	r20,r16
    b634:	db400f15 	stw	r13,60(sp)
    b638:	402b883a 	mov	r21,r8
    b63c:	3821883a 	mov	r16,r7
    b640:	6025883a 	mov	r18,r12
    b644:	00000406 	br	b658 <___vfprintf_internal_r+0x1150>
    b648:	843ffc04 	addi	r16,r16,-16
    b64c:	81800448 	cmpgei	r6,r16,17
    b650:	21000204 	addi	r4,r4,8
    b654:	30001426 	beq	r6,zero,b6a8 <___vfprintf_internal_r+0x11a0>
    b658:	10800044 	addi	r2,r2,1
    b65c:	18c00404 	addi	r3,r3,16
    b660:	24800015 	stw	r18,0(r4)
    b664:	23c00115 	stw	r15,4(r4)
    b668:	d8c01c15 	stw	r3,112(sp)
    b66c:	d8801b15 	stw	r2,108(sp)
    b670:	11800208 	cmpgei	r6,r2,8
    b674:	303ff426 	beq	r6,zero,b648 <___vfprintf_internal_r+0x1140>
    b678:	d9801a04 	addi	r6,sp,104
    b67c:	880b883a 	mov	r5,r17
    b680:	9809883a 	mov	r4,r19
    b684:	00110200 	call	11020 <__sprint_r>
    b688:	10017c1e 	bne	r2,zero,bc7c <___vfprintf_internal_r+0x1774>
    b68c:	843ffc04 	addi	r16,r16,-16
    b690:	81800448 	cmpgei	r6,r16,17
    b694:	d8c01c17 	ldw	r3,112(sp)
    b698:	d8801b17 	ldw	r2,108(sp)
    b69c:	d9002704 	addi	r4,sp,156
    b6a0:	03c00404 	movi	r15,16
    b6a4:	303fec1e 	bne	r6,zero,b658 <___vfprintf_internal_r+0x1150>
    b6a8:	800f883a 	mov	r7,r16
    b6ac:	9019883a 	mov	r12,r18
    b6b0:	a021883a 	mov	r16,r20
    b6b4:	8825883a 	mov	r18,r17
    b6b8:	b829883a 	mov	r20,r23
    b6bc:	db800e17 	ldw	r14,56(sp)
    b6c0:	db400f17 	ldw	r13,60(sp)
    b6c4:	ddc01217 	ldw	r23,72(sp)
    b6c8:	dc401117 	ldw	r17,68(sp)
    b6cc:	a811883a 	mov	r8,r21
    b6d0:	b02b883a 	mov	r21,r22
    b6d4:	202d883a 	mov	r22,r4
    b6d8:	10800044 	addi	r2,r2,1
    b6dc:	19c7883a 	add	r3,r3,r7
    b6e0:	d8801b15 	stw	r2,108(sp)
    b6e4:	b3000015 	stw	r12,0(r22)
    b6e8:	b1c00115 	stw	r7,4(r22)
    b6ec:	d8c01c15 	stw	r3,112(sp)
    b6f0:	10800208 	cmpgei	r2,r2,8
    b6f4:	1001531e 	bne	r2,zero,bc44 <___vfprintf_internal_r+0x173c>
    b6f8:	b5800204 	addi	r22,r22,8
    b6fc:	003c5406 	br	a850 <___vfprintf_internal_r+0x348>
    b700:	d9801a04 	addi	r6,sp,104
    b704:	900b883a 	mov	r5,r18
    b708:	9809883a 	mov	r4,r19
    b70c:	da001115 	stw	r8,68(sp)
    b710:	db400f15 	stw	r13,60(sp)
    b714:	db800e15 	stw	r14,56(sp)
    b718:	00110200 	call	11020 <__sprint_r>
    b71c:	103c891e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    b720:	d8c01c17 	ldw	r3,112(sp)
    b724:	da001117 	ldw	r8,68(sp)
    b728:	db400f17 	ldw	r13,60(sp)
    b72c:	db800e17 	ldw	r14,56(sp)
    b730:	dd802704 	addi	r22,sp,156
    b734:	003c5406 	br	a888 <___vfprintf_internal_r+0x380>
    b738:	d9801a04 	addi	r6,sp,104
    b73c:	900b883a 	mov	r5,r18
    b740:	9809883a 	mov	r4,r19
    b744:	da000f15 	stw	r8,60(sp)
    b748:	db400e15 	stw	r13,56(sp)
    b74c:	00110200 	call	11020 <__sprint_r>
    b750:	103c7c1e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    b754:	d8c01c17 	ldw	r3,112(sp)
    b758:	da000f17 	ldw	r8,60(sp)
    b75c:	db400e17 	ldw	r13,56(sp)
    b760:	dd802704 	addi	r22,sp,156
    b764:	003c5506 	br	a8bc <___vfprintf_internal_r+0x3b4>
    b768:	d9401417 	ldw	r5,80(sp)
    b76c:	017f380e 	bge	zero,r5,b450 <___vfprintf_internal_r+0xf48>
    b770:	d8800717 	ldw	r2,28(sp)
    b774:	d9000817 	ldw	r4,32(sp)
    b778:	102b883a 	mov	r21,r2
    b77c:	2080b316 	blt	r4,r2,ba4c <___vfprintf_internal_r+0x1544>
    b780:	05400a0e 	bge	zero,r21,b7ac <___vfprintf_internal_r+0x12a4>
    b784:	d8801b17 	ldw	r2,108(sp)
    b788:	1d47883a 	add	r3,r3,r21
    b78c:	b4400015 	stw	r17,0(r22)
    b790:	10800044 	addi	r2,r2,1
    b794:	d8801b15 	stw	r2,108(sp)
    b798:	b5400115 	stw	r21,4(r22)
    b79c:	d8c01c15 	stw	r3,112(sp)
    b7a0:	10800208 	cmpgei	r2,r2,8
    b7a4:	1002cf1e 	bne	r2,zero,c2e4 <___vfprintf_internal_r+0x1ddc>
    b7a8:	b5800204 	addi	r22,r22,8
    b7ac:	a800b516 	blt	r21,zero,ba84 <___vfprintf_internal_r+0x157c>
    b7b0:	d8800717 	ldw	r2,28(sp)
    b7b4:	156bc83a 	sub	r21,r2,r21
    b7b8:	0540c416 	blt	zero,r21,bacc <___vfprintf_internal_r+0x15c4>
    b7bc:	dd401417 	ldw	r21,80(sp)
    b7c0:	d8800817 	ldw	r2,32(sp)
    b7c4:	a880a40e 	bge	r21,r2,ba58 <___vfprintf_internal_r+0x1550>
    b7c8:	d8800d17 	ldw	r2,52(sp)
    b7cc:	d9000b17 	ldw	r4,44(sp)
    b7d0:	b0800015 	stw	r2,0(r22)
    b7d4:	d8801b17 	ldw	r2,108(sp)
    b7d8:	1907883a 	add	r3,r3,r4
    b7dc:	b1000115 	stw	r4,4(r22)
    b7e0:	10800044 	addi	r2,r2,1
    b7e4:	d8801b15 	stw	r2,108(sp)
    b7e8:	d8c01c15 	stw	r3,112(sp)
    b7ec:	10800208 	cmpgei	r2,r2,8
    b7f0:	1002b31e 	bne	r2,zero,c2c0 <___vfprintf_internal_r+0x1db8>
    b7f4:	b5800204 	addi	r22,r22,8
    b7f8:	d9000817 	ldw	r4,32(sp)
    b7fc:	d9400717 	ldw	r5,28(sp)
    b800:	2545c83a 	sub	r2,r4,r21
    b804:	2149c83a 	sub	r4,r4,r5
    b808:	102b883a 	mov	r21,r2
    b80c:	2080010e 	bge	r4,r2,b814 <___vfprintf_internal_r+0x130c>
    b810:	202b883a 	mov	r21,r4
    b814:	05400c0e 	bge	zero,r21,b848 <___vfprintf_internal_r+0x1340>
    b818:	d9000717 	ldw	r4,28(sp)
    b81c:	1d47883a 	add	r3,r3,r21
    b820:	b5400115 	stw	r21,4(r22)
    b824:	8913883a 	add	r9,r17,r4
    b828:	d9001b17 	ldw	r4,108(sp)
    b82c:	b2400015 	stw	r9,0(r22)
    b830:	d8c01c15 	stw	r3,112(sp)
    b834:	21000044 	addi	r4,r4,1
    b838:	d9001b15 	stw	r4,108(sp)
    b83c:	21000208 	cmpgei	r4,r4,8
    b840:	2002b31e 	bne	r4,zero,c310 <___vfprintf_internal_r+0x1e08>
    b844:	b5800204 	addi	r22,r22,8
    b848:	a800010e 	bge	r21,zero,b850 <___vfprintf_internal_r+0x1348>
    b84c:	002b883a 	mov	r21,zero
    b850:	156bc83a 	sub	r21,r2,r21
    b854:	057c2a0e 	bge	zero,r21,a900 <___vfprintf_internal_r+0x3f8>
    b858:	01c00074 	movhi	r7,1
    b85c:	a9000450 	cmplti	r4,r21,17
    b860:	d8801b17 	ldw	r2,108(sp)
    b864:	39de4a04 	addi	r7,r7,31016
    b868:	2001881e 	bne	r4,zero,be8c <___vfprintf_internal_r+0x1984>
    b86c:	07000404 	movi	fp,16
    b870:	3823883a 	mov	r17,r7
    b874:	00000406 	br	b888 <___vfprintf_internal_r+0x1380>
    b878:	b5800204 	addi	r22,r22,8
    b87c:	ad7ffc04 	addi	r21,r21,-16
    b880:	a9000448 	cmpgei	r4,r21,17
    b884:	20018026 	beq	r4,zero,be88 <___vfprintf_internal_r+0x1980>
    b888:	10800044 	addi	r2,r2,1
    b88c:	18c00404 	addi	r3,r3,16
    b890:	b4400015 	stw	r17,0(r22)
    b894:	b7000115 	stw	fp,4(r22)
    b898:	d8c01c15 	stw	r3,112(sp)
    b89c:	d8801b15 	stw	r2,108(sp)
    b8a0:	11000208 	cmpgei	r4,r2,8
    b8a4:	203ff426 	beq	r4,zero,b878 <___vfprintf_internal_r+0x1370>
    b8a8:	d9801a04 	addi	r6,sp,104
    b8ac:	900b883a 	mov	r5,r18
    b8b0:	9809883a 	mov	r4,r19
    b8b4:	00110200 	call	11020 <__sprint_r>
    b8b8:	103c221e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    b8bc:	d8c01c17 	ldw	r3,112(sp)
    b8c0:	d8801b17 	ldw	r2,108(sp)
    b8c4:	dd802704 	addi	r22,sp,156
    b8c8:	003fec06 	br	b87c <___vfprintf_internal_r+0x1374>
    b8cc:	d8800417 	ldw	r2,16(sp)
    b8d0:	1080004c 	andi	r2,r2,1
    b8d4:	103f151e 	bne	r2,zero,b52c <___vfprintf_internal_r+0x1024>
    b8d8:	00800044 	movi	r2,1
    b8dc:	b0800115 	stw	r2,4(r22)
    b8e0:	b4400015 	stw	r17,0(r22)
    b8e4:	d8c01c15 	stw	r3,112(sp)
    b8e8:	dd401b15 	stw	r21,108(sp)
    b8ec:	a8800210 	cmplti	r2,r21,8
    b8f0:	103f341e 	bne	r2,zero,b5c4 <___vfprintf_internal_r+0x10bc>
    b8f4:	d9801a04 	addi	r6,sp,104
    b8f8:	900b883a 	mov	r5,r18
    b8fc:	9809883a 	mov	r4,r19
    b900:	00110200 	call	11020 <__sprint_r>
    b904:	103c0f1e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    b908:	d8c01c17 	ldw	r3,112(sp)
    b90c:	dd401b17 	ldw	r21,108(sp)
    b910:	df002704 	addi	fp,sp,156
    b914:	003f2b06 	br	b5c4 <___vfprintf_internal_r+0x10bc>
    b918:	4002361e 	bne	r8,zero,c1f4 <___vfprintf_internal_r+0x1cec>
    b91c:	0011883a 	mov	r8,zero
    b920:	002b883a 	mov	r21,zero
    b924:	dc402704 	addi	r17,sp,156
    b928:	003d0e06 	br	ad64 <___vfprintf_internal_r+0x85c>
    b92c:	05bf250e 	bge	zero,r22,b5c4 <___vfprintf_internal_r+0x10bc>
    b930:	01c00074 	movhi	r7,1
    b934:	b0800450 	cmplti	r2,r22,17
    b938:	39de4a04 	addi	r7,r7,31016
    b93c:	1001731e 	bne	r2,zero,bf0c <___vfprintf_internal_r+0x1a04>
    b940:	dc000715 	stw	r16,28(sp)
    b944:	04400404 	movi	r17,16
    b948:	3821883a 	mov	r16,r7
    b94c:	00000406 	br	b960 <___vfprintf_internal_r+0x1458>
    b950:	e7000204 	addi	fp,fp,8
    b954:	b5bffc04 	addi	r22,r22,-16
    b958:	b0800448 	cmpgei	r2,r22,17
    b95c:	10016926 	beq	r2,zero,bf04 <___vfprintf_internal_r+0x19fc>
    b960:	ad400044 	addi	r21,r21,1
    b964:	18c00404 	addi	r3,r3,16
    b968:	e4000015 	stw	r16,0(fp)
    b96c:	e4400115 	stw	r17,4(fp)
    b970:	d8c01c15 	stw	r3,112(sp)
    b974:	dd401b15 	stw	r21,108(sp)
    b978:	a8800208 	cmpgei	r2,r21,8
    b97c:	103ff426 	beq	r2,zero,b950 <___vfprintf_internal_r+0x1448>
    b980:	d9801a04 	addi	r6,sp,104
    b984:	900b883a 	mov	r5,r18
    b988:	9809883a 	mov	r4,r19
    b98c:	00110200 	call	11020 <__sprint_r>
    b990:	103bec1e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    b994:	d8c01c17 	ldw	r3,112(sp)
    b998:	dd401b17 	ldw	r21,108(sp)
    b99c:	df002704 	addi	fp,sp,156
    b9a0:	003fec06 	br	b954 <___vfprintf_internal_r+0x144c>
    b9a4:	d9801a04 	addi	r6,sp,104
    b9a8:	900b883a 	mov	r5,r18
    b9ac:	9809883a 	mov	r4,r19
    b9b0:	00110200 	call	11020 <__sprint_r>
    b9b4:	103be31e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    b9b8:	d8c01c17 	ldw	r3,112(sp)
    b9bc:	dd802704 	addi	r22,sp,156
    b9c0:	003bc206 	br	a8cc <___vfprintf_internal_r+0x3c4>
    b9c4:	002b883a 	mov	r21,zero
    b9c8:	003d7306 	br	af98 <___vfprintf_internal_r+0xa90>
    b9cc:	a02bd7fa 	srai	r21,r20,31
    b9d0:	a805883a 	mov	r2,r21
    b9d4:	003cd106 	br	ad1c <___vfprintf_internal_r+0x814>
    b9d8:	d8800417 	ldw	r2,16(sp)
    b9dc:	1080004c 	andi	r2,r2,1
    b9e0:	103bc726 	beq	r2,zero,a900 <___vfprintf_internal_r+0x3f8>
    b9e4:	003de706 	br	b184 <___vfprintf_internal_r+0xc7c>
    b9e8:	63000414 	ori	r12,r12,16
    b9ec:	003b1206 	br	a638 <___vfprintf_internal_r+0x130>
    b9f0:	bac00007 	ldb	r11,0(r23)
    b9f4:	d8800615 	stw	r2,24(sp)
    b9f8:	003b0f06 	br	a638 <___vfprintf_internal_r+0x130>
    b9fc:	dc402704 	addi	r17,sp,156
    ba00:	003cd806 	br	ad64 <___vfprintf_internal_r+0x85c>
    ba04:	18800017 	ldw	r2,0(r3)
    ba08:	d8800915 	stw	r2,36(sp)
    ba0c:	18800117 	ldw	r2,4(r3)
    ba10:	d8800a15 	stw	r2,40(sp)
    ba14:	003c3e06 	br	ab10 <___vfprintf_internal_r+0x608>
    ba18:	00800c04 	movi	r2,48
    ba1c:	d8801385 	stb	r2,78(sp)
    ba20:	df0013c5 	stb	fp,79(sp)
    ba24:	63000094 	ori	r12,r12,2
    ba28:	00800084 	movi	r2,2
    ba2c:	003c0206 	br	aa38 <___vfprintf_internal_r+0x530>
    ba30:	d9400517 	ldw	r5,20(sp)
    ba34:	20800017 	ldw	r2,0(r4)
    ba38:	d8c00615 	stw	r3,24(sp)
    ba3c:	2809d7fa 	srai	r4,r5,31
    ba40:	11400015 	stw	r5,0(r2)
    ba44:	11000115 	stw	r4,4(r2)
    ba48:	003ae306 	br	a5d8 <___vfprintf_internal_r+0xd0>
    ba4c:	202b883a 	mov	r21,r4
    ba50:	057f4c16 	blt	zero,r21,b784 <___vfprintf_internal_r+0x127c>
    ba54:	003f5506 	br	b7ac <___vfprintf_internal_r+0x12a4>
    ba58:	d8800417 	ldw	r2,16(sp)
    ba5c:	1080004c 	andi	r2,r2,1
    ba60:	103f591e 	bne	r2,zero,b7c8 <___vfprintf_internal_r+0x12c0>
    ba64:	d9000817 	ldw	r4,32(sp)
    ba68:	d9400717 	ldw	r5,28(sp)
    ba6c:	2545c83a 	sub	r2,r4,r21
    ba70:	2179c83a 	sub	fp,r4,r5
    ba74:	102b883a 	mov	r21,r2
    ba78:	e0bf730e 	bge	fp,r2,b848 <___vfprintf_internal_r+0x1340>
    ba7c:	e02b883a 	mov	r21,fp
    ba80:	003f7106 	br	b848 <___vfprintf_internal_r+0x1340>
    ba84:	002b883a 	mov	r21,zero
    ba88:	003f4906 	br	b7b0 <___vfprintf_internal_r+0x12a8>
    ba8c:	d9801a04 	addi	r6,sp,104
    ba90:	900b883a 	mov	r5,r18
    ba94:	9809883a 	mov	r4,r19
    ba98:	00110200 	call	11020 <__sprint_r>
    ba9c:	103ba91e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    baa0:	d8c01c17 	ldw	r3,112(sp)
    baa4:	dd802704 	addi	r22,sp,156
    baa8:	003dc206 	br	b1b4 <___vfprintf_internal_r+0xcac>
    baac:	408001f0 	cmpltui	r2,r8,7
    bab0:	402b883a 	mov	r21,r8
    bab4:	1001a026 	beq	r2,zero,c138 <___vfprintf_internal_r+0x1c30>
    bab8:	04400074 	movhi	r17,1
    babc:	a829883a 	mov	r20,r21
    bac0:	d8c00615 	stw	r3,24(sp)
    bac4:	8c5e4704 	addi	r17,r17,31004
    bac8:	003b5406 	br	a81c <___vfprintf_internal_r+0x314>
    bacc:	01c00074 	movhi	r7,1
    bad0:	a9000450 	cmplti	r4,r21,17
    bad4:	d8801b17 	ldw	r2,108(sp)
    bad8:	39de4a04 	addi	r7,r7,31016
    badc:	20017b1e 	bne	r4,zero,c0cc <___vfprintf_internal_r+0x1bc4>
    bae0:	dc000e15 	stw	r16,56(sp)
    bae4:	07000404 	movi	fp,16
    bae8:	3821883a 	mov	r16,r7
    baec:	00000406 	br	bb00 <___vfprintf_internal_r+0x15f8>
    baf0:	b5800204 	addi	r22,r22,8
    baf4:	ad7ffc04 	addi	r21,r21,-16
    baf8:	a9000448 	cmpgei	r4,r21,17
    bafc:	20017126 	beq	r4,zero,c0c4 <___vfprintf_internal_r+0x1bbc>
    bb00:	10800044 	addi	r2,r2,1
    bb04:	18c00404 	addi	r3,r3,16
    bb08:	b4000015 	stw	r16,0(r22)
    bb0c:	b7000115 	stw	fp,4(r22)
    bb10:	d8c01c15 	stw	r3,112(sp)
    bb14:	d8801b15 	stw	r2,108(sp)
    bb18:	11000208 	cmpgei	r4,r2,8
    bb1c:	203ff426 	beq	r4,zero,baf0 <___vfprintf_internal_r+0x15e8>
    bb20:	d9801a04 	addi	r6,sp,104
    bb24:	900b883a 	mov	r5,r18
    bb28:	9809883a 	mov	r4,r19
    bb2c:	00110200 	call	11020 <__sprint_r>
    bb30:	103b841e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    bb34:	d8c01c17 	ldw	r3,112(sp)
    bb38:	d8801b17 	ldw	r2,108(sp)
    bb3c:	dd802704 	addi	r22,sp,156
    bb40:	003fec06 	br	baf4 <___vfprintf_internal_r+0x15ec>
    bb44:	dc402704 	addi	r17,sp,156
    bb48:	a805883a 	mov	r2,r21
    bb4c:	dc000715 	stw	r16,28(sp)
    bb50:	902b883a 	mov	r21,r18
    bb54:	8821883a 	mov	r16,r17
    bb58:	db000415 	stw	r12,16(sp)
    bb5c:	a023883a 	mov	r17,r20
    bb60:	da000e15 	stw	r8,56(sp)
    bb64:	9829883a 	mov	r20,r19
    bb68:	1025883a 	mov	r18,r2
    bb6c:	6827883a 	mov	r19,r13
    bb70:	8809883a 	mov	r4,r17
    bb74:	900b883a 	mov	r5,r18
    bb78:	01800284 	movi	r6,10
    bb7c:	000f883a 	mov	r7,zero
    bb80:	0013b8c0 	call	13b8c <__umoddi3>
    bb84:	10800c04 	addi	r2,r2,48
    bb88:	8809883a 	mov	r4,r17
    bb8c:	900b883a 	mov	r5,r18
    bb90:	01800284 	movi	r6,10
    bb94:	000f883a 	mov	r7,zero
    bb98:	80bfffc5 	stb	r2,-1(r16)
    bb9c:	001356c0 	call	1356c <__udivdi3>
    bba0:	900d883a 	mov	r6,r18
    bba4:	880f883a 	mov	r7,r17
    bba8:	843fffc4 	addi	r16,r16,-1
    bbac:	1023883a 	mov	r17,r2
    bbb0:	1825883a 	mov	r18,r3
    bbb4:	303fee1e 	bne	r6,zero,bb70 <___vfprintf_internal_r+0x1668>
    bbb8:	39c002a8 	cmpgeui	r7,r7,10
    bbbc:	383fec1e 	bne	r7,zero,bb70 <___vfprintf_internal_r+0x1668>
    bbc0:	8023883a 	mov	r17,r16
    bbc4:	d8802704 	addi	r2,sp,156
    bbc8:	981b883a 	mov	r13,r19
    bbcc:	a825883a 	mov	r18,r21
    bbd0:	dc000717 	ldw	r16,28(sp)
    bbd4:	da000e17 	ldw	r8,56(sp)
    bbd8:	a027883a 	mov	r19,r20
    bbdc:	146bc83a 	sub	r21,r2,r17
    bbe0:	003c6006 	br	ad64 <___vfprintf_internal_r+0x85c>
    bbe4:	d8800617 	ldw	r2,24(sp)
    bbe8:	10800017 	ldw	r2,0(r2)
    bbec:	d8c00615 	stw	r3,24(sp)
    bbf0:	d8c00517 	ldw	r3,20(sp)
    bbf4:	10c00015 	stw	r3,0(r2)
    bbf8:	003a7706 	br	a5d8 <___vfprintf_internal_r+0xd0>
    bbfc:	d9801a04 	addi	r6,sp,104
    bc00:	900b883a 	mov	r5,r18
    bc04:	9809883a 	mov	r4,r19
    bc08:	00110200 	call	11020 <__sprint_r>
    bc0c:	103b4d1e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    bc10:	d8c01c17 	ldw	r3,112(sp)
    bc14:	dd401b17 	ldw	r21,108(sp)
    bc18:	df002704 	addi	fp,sp,156
    bc1c:	003e4a06 	br	b548 <___vfprintf_internal_r+0x1040>
    bc20:	d9801a04 	addi	r6,sp,104
    bc24:	900b883a 	mov	r5,r18
    bc28:	9809883a 	mov	r4,r19
    bc2c:	00110200 	call	11020 <__sprint_r>
    bc30:	103b441e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    bc34:	d8c01c17 	ldw	r3,112(sp)
    bc38:	dd401b17 	ldw	r21,108(sp)
    bc3c:	df002704 	addi	fp,sp,156
    bc40:	003e4c06 	br	b574 <___vfprintf_internal_r+0x106c>
    bc44:	d9801a04 	addi	r6,sp,104
    bc48:	900b883a 	mov	r5,r18
    bc4c:	9809883a 	mov	r4,r19
    bc50:	da001115 	stw	r8,68(sp)
    bc54:	db400f15 	stw	r13,60(sp)
    bc58:	db800e15 	stw	r14,56(sp)
    bc5c:	00110200 	call	11020 <__sprint_r>
    bc60:	103b381e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    bc64:	d8c01c17 	ldw	r3,112(sp)
    bc68:	da001117 	ldw	r8,68(sp)
    bc6c:	db400f17 	ldw	r13,60(sp)
    bc70:	db800e17 	ldw	r14,56(sp)
    bc74:	dd802704 	addi	r22,sp,156
    bc78:	003af506 	br	a850 <___vfprintf_internal_r+0x348>
    bc7c:	8825883a 	mov	r18,r17
    bc80:	003b3006 	br	a944 <___vfprintf_internal_r+0x43c>
    bc84:	d9000917 	ldw	r4,36(sp)
    bc88:	d9400a17 	ldw	r5,40(sp)
    bc8c:	da000615 	stw	r8,24(sp)
    bc90:	200d883a 	mov	r6,r4
    bc94:	280f883a 	mov	r7,r5
    bc98:	db000415 	stw	r12,16(sp)
    bc9c:	000957c0 	call	957c <__unorddf2>
    bca0:	db000417 	ldw	r12,16(sp)
    bca4:	da000617 	ldw	r8,24(sp)
    bca8:	1001f51e 	bne	r2,zero,c480 <___vfprintf_internal_r+0x1f78>
    bcac:	057ff7c4 	movi	r21,-33
    bcb0:	40bfffe0 	cmpeqi	r2,r8,-1
    bcb4:	e56a703a 	and	r21,fp,r21
    bcb8:	1001931e 	bne	r2,zero,c308 <___vfprintf_internal_r+0x1e00>
    bcbc:	a88011d8 	cmpnei	r2,r21,71
    bcc0:	10013626 	beq	r2,zero,c19c <___vfprintf_internal_r+0x1c94>
    bcc4:	60804014 	ori	r2,r12,256
    bcc8:	d8800415 	stw	r2,16(sp)
    bccc:	d8800a17 	ldw	r2,40(sp)
    bcd0:	10011516 	blt	r2,zero,c128 <___vfprintf_internal_r+0x1c20>
    bcd4:	dd000a17 	ldw	r20,40(sp)
    bcd8:	d8000605 	stb	zero,24(sp)
    bcdc:	e08019a0 	cmpeqi	r2,fp,102
    bce0:	d8800f15 	stw	r2,60(sp)
    bce4:	1000b91e 	bne	r2,zero,bfcc <___vfprintf_internal_r+0x1ac4>
    bce8:	e08011a0 	cmpeqi	r2,fp,70
    bcec:	1000b71e 	bne	r2,zero,bfcc <___vfprintf_internal_r+0x1ac4>
    bcf0:	a8801158 	cmpnei	r2,r21,69
    bcf4:	10014126 	beq	r2,zero,c1fc <___vfprintf_internal_r+0x1cf4>
    bcf8:	d8801804 	addi	r2,sp,96
    bcfc:	d8800315 	stw	r2,12(sp)
    bd00:	d9400917 	ldw	r5,36(sp)
    bd04:	d8801504 	addi	r2,sp,84
    bd08:	d8800215 	stw	r2,8(sp)
    bd0c:	d8801404 	addi	r2,sp,80
    bd10:	da000015 	stw	r8,0(sp)
    bd14:	9809883a 	mov	r4,r19
    bd18:	d8800115 	stw	r2,4(sp)
    bd1c:	01c00084 	movi	r7,2
    bd20:	a00d883a 	mov	r6,r20
    bd24:	db000815 	stw	r12,32(sp)
    bd28:	da000715 	stw	r8,28(sp)
    bd2c:	000c9800 	call	c980 <_dtoa_r>
    bd30:	da000717 	ldw	r8,28(sp)
    bd34:	e10019d8 	cmpnei	r4,fp,103
    bd38:	db000817 	ldw	r12,32(sp)
    bd3c:	1023883a 	mov	r17,r2
    bd40:	4007883a 	mov	r3,r8
    bd44:	2001411e 	bne	r4,zero,c24c <___vfprintf_internal_r+0x1d44>
    bd48:	6080004c 	andi	r2,r12,1
    bd4c:	1001411e 	bne	r2,zero,c254 <___vfprintf_internal_r+0x1d4c>
    bd50:	d8801417 	ldw	r2,80(sp)
    bd54:	ad4011e0 	cmpeqi	r21,r21,71
    bd58:	d8800715 	stw	r2,28(sp)
    bd5c:	d8801817 	ldw	r2,96(sp)
    bd60:	1445c83a 	sub	r2,r2,r17
    bd64:	d8800815 	stw	r2,32(sp)
    bd68:	a8000526 	beq	r21,zero,bd80 <___vfprintf_internal_r+0x1878>
    bd6c:	d8c00717 	ldw	r3,28(sp)
    bd70:	18bfff50 	cmplti	r2,r3,-3
    bd74:	1000011e 	bne	r2,zero,bd7c <___vfprintf_internal_r+0x1874>
    bd78:	40c1460e 	bge	r8,r3,c294 <___vfprintf_internal_r+0x1d8c>
    bd7c:	e73fff84 	addi	fp,fp,-2
    bd80:	d8800717 	ldw	r2,28(sp)
    bd84:	df001645 	stb	fp,89(sp)
    bd88:	157fffc4 	addi	r21,r2,-1
    bd8c:	dd401415 	stw	r21,80(sp)
    bd90:	a801ab16 	blt	r21,zero,c440 <___vfprintf_internal_r+0x1f38>
    bd94:	00800ac4 	movi	r2,43
    bd98:	d8801685 	stb	r2,90(sp)
    bd9c:	a8800290 	cmplti	r2,r21,10
    bda0:	1001a01e 	bne	r2,zero,c424 <___vfprintf_internal_r+0x1f1c>
    bda4:	d98019c4 	addi	r6,sp,103
    bda8:	9029883a 	mov	r20,r18
    bdac:	dc400715 	stw	r17,28(sp)
    bdb0:	8025883a 	mov	r18,r16
    bdb4:	db000f15 	stw	r12,60(sp)
    bdb8:	3021883a 	mov	r16,r6
    bdbc:	a809883a 	mov	r4,r21
    bdc0:	01400284 	movi	r5,10
    bdc4:	0005f580 	call	5f58 <__modsi3>
    bdc8:	10800c04 	addi	r2,r2,48
    bdcc:	a809883a 	mov	r4,r21
    bdd0:	80bfffc5 	stb	r2,-1(r16)
    bdd4:	01400284 	movi	r5,10
    bdd8:	0005ed80 	call	5ed8 <__divsi3>
    bddc:	a9001908 	cmpgei	r4,r21,100
    bde0:	8023883a 	mov	r17,r16
    bde4:	102b883a 	mov	r21,r2
    bde8:	843fffc4 	addi	r16,r16,-1
    bdec:	203ff31e 	bne	r4,zero,bdbc <___vfprintf_internal_r+0x18b4>
    bdf0:	800d883a 	mov	r6,r16
    bdf4:	11000c04 	addi	r4,r2,48
    bdf8:	9021883a 	mov	r16,r18
    bdfc:	a025883a 	mov	r18,r20
    be00:	8829883a 	mov	r20,r17
    be04:	a0bfff84 	addi	r2,r20,-2
    be08:	313fffc5 	stb	r4,-1(r6)
    be0c:	d8c019c4 	addi	r3,sp,103
    be10:	db000f17 	ldw	r12,60(sp)
    be14:	dc400717 	ldw	r17,28(sp)
    be18:	10c1be2e 	bgeu	r2,r3,c514 <___vfprintf_internal_r+0x200c>
    be1c:	d8c016c4 	addi	r3,sp,91
    be20:	00000106 	br	be28 <___vfprintf_internal_r+0x1920>
    be24:	11000003 	ldbu	r4,0(r2)
    be28:	19000005 	stb	r4,0(r3)
    be2c:	10800044 	addi	r2,r2,1
    be30:	d90019c4 	addi	r4,sp,103
    be34:	18c00044 	addi	r3,r3,1
    be38:	113ffa1e 	bne	r2,r4,be24 <___vfprintf_internal_r+0x191c>
    be3c:	d8801a44 	addi	r2,sp,105
    be40:	d8c016c4 	addi	r3,sp,91
    be44:	1505c83a 	sub	r2,r2,r20
    be48:	1885883a 	add	r2,r3,r2
    be4c:	d8c01644 	addi	r3,sp,89
    be50:	10c5c83a 	sub	r2,r2,r3
    be54:	d8801015 	stw	r2,64(sp)
    be58:	d8c00817 	ldw	r3,32(sp)
    be5c:	d9001017 	ldw	r4,64(sp)
    be60:	18800088 	cmpgei	r2,r3,2
    be64:	192b883a 	add	r21,r3,r4
    be68:	10018126 	beq	r2,zero,c470 <___vfprintf_internal_r+0x1f68>
    be6c:	d8800b17 	ldw	r2,44(sp)
    be70:	a8ab883a 	add	r21,r21,r2
    be74:	a829883a 	mov	r20,r21
    be78:	a800010e 	bge	r21,zero,be80 <___vfprintf_internal_r+0x1978>
    be7c:	0029883a 	mov	r20,zero
    be80:	d8000715 	stw	zero,28(sp)
    be84:	00008406 	br	c098 <___vfprintf_internal_r+0x1b90>
    be88:	880f883a 	mov	r7,r17
    be8c:	10800044 	addi	r2,r2,1
    be90:	1d47883a 	add	r3,r3,r21
    be94:	b1c00015 	stw	r7,0(r22)
    be98:	003a9306 	br	a8e8 <___vfprintf_internal_r+0x3e0>
    be9c:	d9801a04 	addi	r6,sp,104
    bea0:	900b883a 	mov	r5,r18
    bea4:	9809883a 	mov	r4,r19
    bea8:	00110200 	call	11020 <__sprint_r>
    beac:	103aa51e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    beb0:	d8c01c17 	ldw	r3,112(sp)
    beb4:	dd802704 	addi	r22,sp,156
    beb8:	003caf06 	br	b178 <___vfprintf_internal_r+0xc70>
    bebc:	d9801a04 	addi	r6,sp,104
    bec0:	900b883a 	mov	r5,r18
    bec4:	9809883a 	mov	r4,r19
    bec8:	da000e15 	stw	r8,56(sp)
    becc:	00110200 	call	11020 <__sprint_r>
    bed0:	103a9c1e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    bed4:	d8c01c17 	ldw	r3,112(sp)
    bed8:	da000e17 	ldw	r8,56(sp)
    bedc:	dd802704 	addi	r22,sp,156
    bee0:	003a7806 	br	a8c4 <___vfprintf_internal_r+0x3bc>
    bee4:	8809883a 	mov	r4,r17
    bee8:	db000415 	stw	r12,16(sp)
    beec:	d8c00615 	stw	r3,24(sp)
    bef0:	000a4700 	call	a470 <strlen>
    bef4:	db000417 	ldw	r12,16(sp)
    bef8:	102b883a 	mov	r21,r2
    befc:	1029883a 	mov	r20,r2
    bf00:	003a4606 	br	a81c <___vfprintf_internal_r+0x314>
    bf04:	800f883a 	mov	r7,r16
    bf08:	dc000717 	ldw	r16,28(sp)
    bf0c:	ad400044 	addi	r21,r21,1
    bf10:	1d87883a 	add	r3,r3,r22
    bf14:	e1c00015 	stw	r7,0(fp)
    bf18:	003da406 	br	b5ac <___vfprintf_internal_r+0x10a4>
    bf1c:	d8800d17 	ldw	r2,52(sp)
    bf20:	d9000b17 	ldw	r4,44(sp)
    bf24:	b0800015 	stw	r2,0(r22)
    bf28:	d8801b17 	ldw	r2,108(sp)
    bf2c:	20c7883a 	add	r3,r4,r3
    bf30:	b1000115 	stw	r4,4(r22)
    bf34:	10800044 	addi	r2,r2,1
    bf38:	d8c01c15 	stw	r3,112(sp)
    bf3c:	d8801b15 	stw	r2,108(sp)
    bf40:	11000208 	cmpgei	r4,r2,8
    bf44:	2000981e 	bne	r4,zero,c1a8 <___vfprintf_internal_r+0x1ca0>
    bf48:	b5800204 	addi	r22,r22,8
    bf4c:	283d5f0e 	bge	r5,zero,b4cc <___vfprintf_internal_r+0xfc4>
    bf50:	01c00074 	movhi	r7,1
    bf54:	293ffc08 	cmpgei	r4,r5,-16
    bf58:	39de4a04 	addi	r7,r7,31016
    bf5c:	0179c83a 	sub	fp,zero,r5
    bf60:	2001151e 	bne	r4,zero,c3b8 <___vfprintf_internal_r+0x1eb0>
    bf64:	dc000715 	stw	r16,28(sp)
    bf68:	05400404 	movi	r21,16
    bf6c:	9021883a 	mov	r16,r18
    bf70:	3825883a 	mov	r18,r7
    bf74:	00000406 	br	bf88 <___vfprintf_internal_r+0x1a80>
    bf78:	b5800204 	addi	r22,r22,8
    bf7c:	e73ffc04 	addi	fp,fp,-16
    bf80:	e1800448 	cmpgei	r6,fp,17
    bf84:	30010926 	beq	r6,zero,c3ac <___vfprintf_internal_r+0x1ea4>
    bf88:	10800044 	addi	r2,r2,1
    bf8c:	18c00404 	addi	r3,r3,16
    bf90:	b4800015 	stw	r18,0(r22)
    bf94:	b5400115 	stw	r21,4(r22)
    bf98:	d8c01c15 	stw	r3,112(sp)
    bf9c:	d8801b15 	stw	r2,108(sp)
    bfa0:	11800208 	cmpgei	r6,r2,8
    bfa4:	303ff426 	beq	r6,zero,bf78 <___vfprintf_internal_r+0x1a70>
    bfa8:	d9801a04 	addi	r6,sp,104
    bfac:	800b883a 	mov	r5,r16
    bfb0:	9809883a 	mov	r4,r19
    bfb4:	00110200 	call	11020 <__sprint_r>
    bfb8:	1001411e 	bne	r2,zero,c4c0 <___vfprintf_internal_r+0x1fb8>
    bfbc:	d8c01c17 	ldw	r3,112(sp)
    bfc0:	d8801b17 	ldw	r2,108(sp)
    bfc4:	dd802704 	addi	r22,sp,156
    bfc8:	003fec06 	br	bf7c <___vfprintf_internal_r+0x1a74>
    bfcc:	d8801804 	addi	r2,sp,96
    bfd0:	d8800315 	stw	r2,12(sp)
    bfd4:	d9400917 	ldw	r5,36(sp)
    bfd8:	d8801504 	addi	r2,sp,84
    bfdc:	d8800215 	stw	r2,8(sp)
    bfe0:	d8801404 	addi	r2,sp,80
    bfe4:	da000015 	stw	r8,0(sp)
    bfe8:	d8800115 	stw	r2,4(sp)
    bfec:	01c000c4 	movi	r7,3
    bff0:	a00d883a 	mov	r6,r20
    bff4:	9809883a 	mov	r4,r19
    bff8:	db000815 	stw	r12,32(sp)
    bffc:	da000715 	stw	r8,28(sp)
    c000:	000c9800 	call	c980 <_dtoa_r>
    c004:	da000717 	ldw	r8,28(sp)
    c008:	1023883a 	mov	r17,r2
    c00c:	db000817 	ldw	r12,32(sp)
    c010:	1207883a 	add	r3,r2,r8
    c014:	88800007 	ldb	r2,0(r17)
    c018:	10800c20 	cmpeqi	r2,r2,48
    c01c:	10004f1e 	bne	r2,zero,c15c <___vfprintf_internal_r+0x1c54>
    c020:	d8801417 	ldw	r2,80(sp)
    c024:	1893883a 	add	r9,r3,r2
    c028:	d9000917 	ldw	r4,36(sp)
    c02c:	000d883a 	mov	r6,zero
    c030:	000f883a 	mov	r7,zero
    c034:	a00b883a 	mov	r5,r20
    c038:	da401115 	stw	r9,68(sp)
    c03c:	da000815 	stw	r8,32(sp)
    c040:	db000715 	stw	r12,28(sp)
    c044:	00082740 	call	8274 <__eqdf2>
    c048:	db000717 	ldw	r12,28(sp)
    c04c:	da000817 	ldw	r8,32(sp)
    c050:	da401117 	ldw	r9,68(sp)
    c054:	1000811e 	bne	r2,zero,c25c <___vfprintf_internal_r+0x1d54>
    c058:	4805883a 	mov	r2,r9
    c05c:	d8c01417 	ldw	r3,80(sp)
    c060:	1445c83a 	sub	r2,r2,r17
    c064:	ad4011d8 	cmpnei	r21,r21,71
    c068:	d8c00715 	stw	r3,28(sp)
    c06c:	d8800815 	stw	r2,32(sp)
    c070:	a83f3e26 	beq	r21,zero,bd6c <___vfprintf_internal_r+0x1864>
    c074:	d8800f17 	ldw	r2,60(sp)
    c078:	103f4126 	beq	r2,zero,bd80 <___vfprintf_internal_r+0x1878>
    c07c:	d8c00717 	ldw	r3,28(sp)
    c080:	6080004c 	andi	r2,r12,1
    c084:	1204b03a 	or	r2,r2,r8
    c088:	00c1050e 	bge	zero,r3,c4a0 <___vfprintf_internal_r+0x1f98>
    c08c:	1000f11e 	bne	r2,zero,c454 <___vfprintf_internal_r+0x1f4c>
    c090:	dd400717 	ldw	r21,28(sp)
    c094:	a829883a 	mov	r20,r21
    c098:	d8800607 	ldb	r2,24(sp)
    c09c:	10007826 	beq	r2,zero,c280 <___vfprintf_internal_r+0x1d78>
    c0a0:	00800b44 	movi	r2,45
    c0a4:	d8801345 	stb	r2,77(sp)
    c0a8:	d8800e17 	ldw	r2,56(sp)
    c0ac:	0011883a 	mov	r8,zero
    c0b0:	d8800615 	stw	r2,24(sp)
    c0b4:	003b3306 	br	ad84 <___vfprintf_internal_r+0x87c>
    c0b8:	04400074 	movhi	r17,1
    c0bc:	8c5e3904 	addi	r17,r17,30948
    c0c0:	003ab806 	br	aba4 <___vfprintf_internal_r+0x69c>
    c0c4:	800f883a 	mov	r7,r16
    c0c8:	dc000e17 	ldw	r16,56(sp)
    c0cc:	10800044 	addi	r2,r2,1
    c0d0:	1d47883a 	add	r3,r3,r21
    c0d4:	d8801b15 	stw	r2,108(sp)
    c0d8:	b1c00015 	stw	r7,0(r22)
    c0dc:	b5400115 	stw	r21,4(r22)
    c0e0:	d8c01c15 	stw	r3,112(sp)
    c0e4:	10800208 	cmpgei	r2,r2,8
    c0e8:	10003a1e 	bne	r2,zero,c1d4 <___vfprintf_internal_r+0x1ccc>
    c0ec:	b5800204 	addi	r22,r22,8
    c0f0:	003db206 	br	b7bc <___vfprintf_internal_r+0x12b4>
    c0f4:	00800b44 	movi	r2,45
    c0f8:	d8801345 	stb	r2,77(sp)
    c0fc:	03400b44 	movi	r13,45
    c100:	003aa406 	br	ab94 <___vfprintf_internal_r+0x68c>
    c104:	d9801a04 	addi	r6,sp,104
    c108:	900b883a 	mov	r5,r18
    c10c:	9809883a 	mov	r4,r19
    c110:	00110200 	call	11020 <__sprint_r>
    c114:	103a0b1e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    c118:	d9401417 	ldw	r5,80(sp)
    c11c:	d8c01c17 	ldw	r3,112(sp)
    c120:	dd802704 	addi	r22,sp,156
    c124:	003cd706 	br	b484 <___vfprintf_internal_r+0xf7c>
    c128:	1520003c 	xorhi	r20,r2,32768
    c12c:	00800b44 	movi	r2,45
    c130:	d8800605 	stb	r2,24(sp)
    c134:	003ee906 	br	bcdc <___vfprintf_internal_r+0x17d4>
    c138:	05400184 	movi	r21,6
    c13c:	003e5e06 	br	bab8 <___vfprintf_internal_r+0x15b0>
    c140:	d9801a04 	addi	r6,sp,104
    c144:	900b883a 	mov	r5,r18
    c148:	9809883a 	mov	r4,r19
    c14c:	00110200 	call	11020 <__sprint_r>
    c150:	0039fc06 	br	a944 <___vfprintf_internal_r+0x43c>
    c154:	d9401345 	stb	r5,77(sp)
    c158:	0039aa06 	br	a804 <___vfprintf_internal_r+0x2fc>
    c15c:	d9000917 	ldw	r4,36(sp)
    c160:	000d883a 	mov	r6,zero
    c164:	000f883a 	mov	r7,zero
    c168:	a00b883a 	mov	r5,r20
    c16c:	d8c01115 	stw	r3,68(sp)
    c170:	da000815 	stw	r8,32(sp)
    c174:	db000715 	stw	r12,28(sp)
    c178:	00082740 	call	8274 <__eqdf2>
    c17c:	db000717 	ldw	r12,28(sp)
    c180:	da000817 	ldw	r8,32(sp)
    c184:	d8c01117 	ldw	r3,68(sp)
    c188:	103fa526 	beq	r2,zero,c020 <___vfprintf_internal_r+0x1b18>
    c18c:	00800044 	movi	r2,1
    c190:	1205c83a 	sub	r2,r2,r8
    c194:	d8801415 	stw	r2,80(sp)
    c198:	003fa206 	br	c024 <___vfprintf_internal_r+0x1b1c>
    c19c:	403ec91e 	bne	r8,zero,bcc4 <___vfprintf_internal_r+0x17bc>
    c1a0:	02000044 	movi	r8,1
    c1a4:	003ec706 	br	bcc4 <___vfprintf_internal_r+0x17bc>
    c1a8:	d9801a04 	addi	r6,sp,104
    c1ac:	900b883a 	mov	r5,r18
    c1b0:	9809883a 	mov	r4,r19
    c1b4:	00110200 	call	11020 <__sprint_r>
    c1b8:	1039e21e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    c1bc:	d9401417 	ldw	r5,80(sp)
    c1c0:	d8c01c17 	ldw	r3,112(sp)
    c1c4:	d8801b17 	ldw	r2,108(sp)
    c1c8:	dd802704 	addi	r22,sp,156
    c1cc:	283cbf0e 	bge	r5,zero,b4cc <___vfprintf_internal_r+0xfc4>
    c1d0:	003f5f06 	br	bf50 <___vfprintf_internal_r+0x1a48>
    c1d4:	d9801a04 	addi	r6,sp,104
    c1d8:	900b883a 	mov	r5,r18
    c1dc:	9809883a 	mov	r4,r19
    c1e0:	00110200 	call	11020 <__sprint_r>
    c1e4:	1039d71e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    c1e8:	d8c01c17 	ldw	r3,112(sp)
    c1ec:	dd802704 	addi	r22,sp,156
    c1f0:	003d7206 	br	b7bc <___vfprintf_internal_r+0x12b4>
    c1f4:	db000417 	ldw	r12,16(sp)
    c1f8:	003ad506 	br	ad50 <___vfprintf_internal_r+0x848>
    c1fc:	d8801804 	addi	r2,sp,96
    c200:	d8800315 	stw	r2,12(sp)
    c204:	d9400917 	ldw	r5,36(sp)
    c208:	d8801504 	addi	r2,sp,84
    c20c:	40c00044 	addi	r3,r8,1
    c210:	d8800215 	stw	r2,8(sp)
    c214:	d8801404 	addi	r2,sp,80
    c218:	d8c00015 	stw	r3,0(sp)
    c21c:	d8800115 	stw	r2,4(sp)
    c220:	01c00084 	movi	r7,2
    c224:	a00d883a 	mov	r6,r20
    c228:	9809883a 	mov	r4,r19
    c22c:	db001115 	stw	r12,68(sp)
    c230:	da000815 	stw	r8,32(sp)
    c234:	d8c00715 	stw	r3,28(sp)
    c238:	000c9800 	call	c980 <_dtoa_r>
    c23c:	d8c00717 	ldw	r3,28(sp)
    c240:	da000817 	ldw	r8,32(sp)
    c244:	db001117 	ldw	r12,68(sp)
    c248:	1023883a 	mov	r17,r2
    c24c:	e08011d8 	cmpnei	r2,fp,71
    c250:	103ebd26 	beq	r2,zero,bd48 <___vfprintf_internal_r+0x1840>
    c254:	88d3883a 	add	r9,r17,r3
    c258:	003f7306 	br	c028 <___vfprintf_internal_r+0x1b20>
    c25c:	d8801817 	ldw	r2,96(sp)
    c260:	127f7e2e 	bgeu	r2,r9,c05c <___vfprintf_internal_r+0x1b54>
    c264:	01000c04 	movi	r4,48
    c268:	10c00044 	addi	r3,r2,1
    c26c:	d8c01815 	stw	r3,96(sp)
    c270:	11000005 	stb	r4,0(r2)
    c274:	d8801817 	ldw	r2,96(sp)
    c278:	127ffb36 	bltu	r2,r9,c268 <___vfprintf_internal_r+0x1d60>
    c27c:	003f7706 	br	c05c <___vfprintf_internal_r+0x1b54>
    c280:	d8800e17 	ldw	r2,56(sp)
    c284:	db401343 	ldbu	r13,77(sp)
    c288:	0011883a 	mov	r8,zero
    c28c:	d8800615 	stw	r2,24(sp)
    c290:	003ab806 	br	ad74 <___vfprintf_internal_r+0x86c>
    c294:	d8800717 	ldw	r2,28(sp)
    c298:	d8c00817 	ldw	r3,32(sp)
    c29c:	10c02b16 	blt	r2,r3,c34c <___vfprintf_internal_r+0x1e44>
    c2a0:	6300004c 	andi	r12,r12,1
    c2a4:	6000581e 	bne	r12,zero,c408 <___vfprintf_internal_r+0x1f00>
    c2a8:	1029883a 	mov	r20,r2
    c2ac:	1000010e 	bge	r2,zero,c2b4 <___vfprintf_internal_r+0x1dac>
    c2b0:	0029883a 	mov	r20,zero
    c2b4:	dd400717 	ldw	r21,28(sp)
    c2b8:	070019c4 	movi	fp,103
    c2bc:	003f7606 	br	c098 <___vfprintf_internal_r+0x1b90>
    c2c0:	d9801a04 	addi	r6,sp,104
    c2c4:	900b883a 	mov	r5,r18
    c2c8:	9809883a 	mov	r4,r19
    c2cc:	00110200 	call	11020 <__sprint_r>
    c2d0:	10399c1e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    c2d4:	dd401417 	ldw	r21,80(sp)
    c2d8:	d8c01c17 	ldw	r3,112(sp)
    c2dc:	dd802704 	addi	r22,sp,156
    c2e0:	003d4506 	br	b7f8 <___vfprintf_internal_r+0x12f0>
    c2e4:	d9801a04 	addi	r6,sp,104
    c2e8:	900b883a 	mov	r5,r18
    c2ec:	9809883a 	mov	r4,r19
    c2f0:	00110200 	call	11020 <__sprint_r>
    c2f4:	1039931e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    c2f8:	d8c01c17 	ldw	r3,112(sp)
    c2fc:	dd802704 	addi	r22,sp,156
    c300:	a83d2b0e 	bge	r21,zero,b7b0 <___vfprintf_internal_r+0x12a8>
    c304:	003ddf06 	br	ba84 <___vfprintf_internal_r+0x157c>
    c308:	02000184 	movi	r8,6
    c30c:	003e6d06 	br	bcc4 <___vfprintf_internal_r+0x17bc>
    c310:	d9801a04 	addi	r6,sp,104
    c314:	900b883a 	mov	r5,r18
    c318:	9809883a 	mov	r4,r19
    c31c:	00110200 	call	11020 <__sprint_r>
    c320:	1039881e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    c324:	d8801417 	ldw	r2,80(sp)
    c328:	d9000817 	ldw	r4,32(sp)
    c32c:	d8c01c17 	ldw	r3,112(sp)
    c330:	dd802704 	addi	r22,sp,156
    c334:	2085c83a 	sub	r2,r4,r2
    c338:	003d4306 	br	b848 <___vfprintf_internal_r+0x1340>
    c33c:	4029883a 	mov	r20,r8
    c340:	d8c00615 	stw	r3,24(sp)
    c344:	402b883a 	mov	r21,r8
    c348:	00393406 	br	a81c <___vfprintf_internal_r+0x314>
    c34c:	d8800817 	ldw	r2,32(sp)
    c350:	d8c00b17 	ldw	r3,44(sp)
    c354:	10eb883a 	add	r21,r2,r3
    c358:	d8800717 	ldw	r2,28(sp)
    c35c:	00800316 	blt	zero,r2,c36c <___vfprintf_internal_r+0x1e64>
    c360:	d8800717 	ldw	r2,28(sp)
    c364:	a8abc83a 	sub	r21,r21,r2
    c368:	ad400044 	addi	r21,r21,1
    c36c:	a829883a 	mov	r20,r21
    c370:	a8002a16 	blt	r21,zero,c41c <___vfprintf_internal_r+0x1f14>
    c374:	070019c4 	movi	fp,103
    c378:	003f4706 	br	c098 <___vfprintf_internal_r+0x1b90>
    c37c:	d9401345 	stb	r5,77(sp)
    c380:	003aa006 	br	ae04 <___vfprintf_internal_r+0x8fc>
    c384:	d9401345 	stb	r5,77(sp)
    c388:	003b3406 	br	b05c <___vfprintf_internal_r+0xb54>
    c38c:	d9401345 	stb	r5,77(sp)
    c390:	0039d506 	br	aae8 <___vfprintf_internal_r+0x5e0>
    c394:	d9401345 	stb	r5,77(sp)
    c398:	003a5806 	br	acfc <___vfprintf_internal_r+0x7f4>
    c39c:	d9401345 	stb	r5,77(sp)
    c3a0:	003af306 	br	af70 <___vfprintf_internal_r+0xa68>
    c3a4:	d9401345 	stb	r5,77(sp)
    c3a8:	003b4c06 	br	b0dc <___vfprintf_internal_r+0xbd4>
    c3ac:	900f883a 	mov	r7,r18
    c3b0:	8025883a 	mov	r18,r16
    c3b4:	dc000717 	ldw	r16,28(sp)
    c3b8:	10800044 	addi	r2,r2,1
    c3bc:	1f07883a 	add	r3,r3,fp
    c3c0:	b1c00015 	stw	r7,0(r22)
    c3c4:	b7000115 	stw	fp,4(r22)
    c3c8:	d8c01c15 	stw	r3,112(sp)
    c3cc:	d8801b15 	stw	r2,108(sp)
    c3d0:	11000208 	cmpgei	r4,r2,8
    c3d4:	203c3c26 	beq	r4,zero,b4c8 <___vfprintf_internal_r+0xfc0>
    c3d8:	d9801a04 	addi	r6,sp,104
    c3dc:	900b883a 	mov	r5,r18
    c3e0:	9809883a 	mov	r4,r19
    c3e4:	00110200 	call	11020 <__sprint_r>
    c3e8:	1039561e 	bne	r2,zero,a944 <___vfprintf_internal_r+0x43c>
    c3ec:	d8c01c17 	ldw	r3,112(sp)
    c3f0:	d8801b17 	ldw	r2,108(sp)
    c3f4:	dd802704 	addi	r22,sp,156
    c3f8:	003c3406 	br	b4cc <___vfprintf_internal_r+0xfc4>
    c3fc:	00bfffc4 	movi	r2,-1
    c400:	d8800515 	stw	r2,20(sp)
    c404:	00395206 	br	a950 <___vfprintf_internal_r+0x448>
    c408:	d8800717 	ldw	r2,28(sp)
    c40c:	d8c00b17 	ldw	r3,44(sp)
    c410:	10eb883a 	add	r21,r2,r3
    c414:	a829883a 	mov	r20,r21
    c418:	a83fd60e 	bge	r21,zero,c374 <___vfprintf_internal_r+0x1e6c>
    c41c:	0029883a 	mov	r20,zero
    c420:	003fd406 	br	c374 <___vfprintf_internal_r+0x1e6c>
    c424:	00800c04 	movi	r2,48
    c428:	ad400c04 	addi	r21,r21,48
    c42c:	d88016c5 	stb	r2,91(sp)
    c430:	00800104 	movi	r2,4
    c434:	dd401705 	stb	r21,92(sp)
    c438:	d8801015 	stw	r2,64(sp)
    c43c:	003e8606 	br	be58 <___vfprintf_internal_r+0x1950>
    c440:	05400044 	movi	r21,1
    c444:	a8abc83a 	sub	r21,r21,r2
    c448:	00800b44 	movi	r2,45
    c44c:	d8801685 	stb	r2,90(sp)
    c450:	003e5206 	br	bd9c <___vfprintf_internal_r+0x1894>
    c454:	d8800b17 	ldw	r2,44(sp)
    c458:	18ab883a 	add	r21,r3,r2
    c45c:	aa2b883a 	add	r21,r21,r8
    c460:	a829883a 	mov	r20,r21
    c464:	a83f0c0e 	bge	r21,zero,c098 <___vfprintf_internal_r+0x1b90>
    c468:	0029883a 	mov	r20,zero
    c46c:	003f0a06 	br	c098 <___vfprintf_internal_r+0x1b90>
    c470:	6080004c 	andi	r2,r12,1
    c474:	d8800715 	stw	r2,28(sp)
    c478:	103e7c1e 	bne	r2,zero,be6c <___vfprintf_internal_r+0x1964>
    c47c:	003ff806 	br	c460 <___vfprintf_internal_r+0x1f58>
    c480:	d8800a17 	ldw	r2,40(sp)
    c484:	10001316 	blt	r2,zero,c4d4 <___vfprintf_internal_r+0x1fcc>
    c488:	db401343 	ldbu	r13,77(sp)
    c48c:	e0801210 	cmplti	r2,fp,72
    c490:	10000d1e 	bne	r2,zero,c4c8 <___vfprintf_internal_r+0x1fc0>
    c494:	04400074 	movhi	r17,1
    c498:	8c5e3c04 	addi	r17,r17,30960
    c49c:	0039c106 	br	aba4 <___vfprintf_internal_r+0x69c>
    c4a0:	1000031e 	bne	r2,zero,c4b0 <___vfprintf_internal_r+0x1fa8>
    c4a4:	05000044 	movi	r20,1
    c4a8:	05400044 	movi	r21,1
    c4ac:	003efa06 	br	c098 <___vfprintf_internal_r+0x1b90>
    c4b0:	d8800b17 	ldw	r2,44(sp)
    c4b4:	15400044 	addi	r21,r2,1
    c4b8:	aa2b883a 	add	r21,r21,r8
    c4bc:	003fe806 	br	c460 <___vfprintf_internal_r+0x1f58>
    c4c0:	8025883a 	mov	r18,r16
    c4c4:	00391f06 	br	a944 <___vfprintf_internal_r+0x43c>
    c4c8:	04400074 	movhi	r17,1
    c4cc:	8c5e3b04 	addi	r17,r17,30956
    c4d0:	0039b406 	br	aba4 <___vfprintf_internal_r+0x69c>
    c4d4:	00800b44 	movi	r2,45
    c4d8:	d8801345 	stb	r2,77(sp)
    c4dc:	03400b44 	movi	r13,45
    c4e0:	003fea06 	br	c48c <___vfprintf_internal_r+0x1f84>
    c4e4:	d8c00617 	ldw	r3,24(sp)
    c4e8:	1a000017 	ldw	r8,0(r3)
    c4ec:	18c00104 	addi	r3,r3,4
    c4f0:	4000010e 	bge	r8,zero,c4f8 <___vfprintf_internal_r+0x1ff0>
    c4f4:	023fffc4 	movi	r8,-1
    c4f8:	bf000043 	ldbu	fp,1(r23)
    c4fc:	d8c00615 	stw	r3,24(sp)
    c500:	102f883a 	mov	r23,r2
    c504:	e2c03fcc 	andi	r11,fp,255
    c508:	5ac0201c 	xori	r11,r11,128
    c50c:	5affe004 	addi	r11,r11,-128
    c510:	00384906 	br	a638 <___vfprintf_internal_r+0x130>
    c514:	00800084 	movi	r2,2
    c518:	d8801015 	stw	r2,64(sp)
    c51c:	003e4e06 	br	be58 <___vfprintf_internal_r+0x1950>

0000c520 <__vfprintf_internal>:
    c520:	00c000b4 	movhi	r3,2
    c524:	2005883a 	mov	r2,r4
    c528:	1926b817 	ldw	r4,-25888(r3)
    c52c:	300f883a 	mov	r7,r6
    c530:	280d883a 	mov	r6,r5
    c534:	100b883a 	mov	r5,r2
    c538:	000a5081 	jmpi	a508 <___vfprintf_internal_r>

0000c53c <__sbprintf>:
    c53c:	2880030b 	ldhu	r2,12(r5)
    c540:	2b001917 	ldw	r12,100(r5)
    c544:	2ac0038b 	ldhu	r11,14(r5)
    c548:	2a800717 	ldw	r10,28(r5)
    c54c:	2a400917 	ldw	r9,36(r5)
    c550:	defee204 	addi	sp,sp,-1144
    c554:	da001a04 	addi	r8,sp,104
    c558:	00c10004 	movi	r3,1024
    c55c:	dc011a15 	stw	r16,1128(sp)
    c560:	10bfff4c 	andi	r2,r2,65533
    c564:	2821883a 	mov	r16,r5
    c568:	d80b883a 	mov	r5,sp
    c56c:	dc811c15 	stw	r18,1136(sp)
    c570:	dc411b15 	stw	r17,1132(sp)
    c574:	dfc11d15 	stw	ra,1140(sp)
    c578:	2025883a 	mov	r18,r4
    c57c:	d880030d 	sth	r2,12(sp)
    c580:	db001915 	stw	r12,100(sp)
    c584:	dac0038d 	sth	r11,14(sp)
    c588:	da800715 	stw	r10,28(sp)
    c58c:	da400915 	stw	r9,36(sp)
    c590:	da000015 	stw	r8,0(sp)
    c594:	da000415 	stw	r8,16(sp)
    c598:	d8c00215 	stw	r3,8(sp)
    c59c:	d8c00515 	stw	r3,20(sp)
    c5a0:	d8000615 	stw	zero,24(sp)
    c5a4:	000a5080 	call	a508 <___vfprintf_internal_r>
    c5a8:	1023883a 	mov	r17,r2
    c5ac:	10000d0e 	bge	r2,zero,c5e4 <__sbprintf+0xa8>
    c5b0:	d880030b 	ldhu	r2,12(sp)
    c5b4:	1080100c 	andi	r2,r2,64
    c5b8:	10000326 	beq	r2,zero,c5c8 <__sbprintf+0x8c>
    c5bc:	8080030b 	ldhu	r2,12(r16)
    c5c0:	10801014 	ori	r2,r2,64
    c5c4:	8080030d 	sth	r2,12(r16)
    c5c8:	8805883a 	mov	r2,r17
    c5cc:	dfc11d17 	ldw	ra,1140(sp)
    c5d0:	dc811c17 	ldw	r18,1136(sp)
    c5d4:	dc411b17 	ldw	r17,1132(sp)
    c5d8:	dc011a17 	ldw	r16,1128(sp)
    c5dc:	dec11e04 	addi	sp,sp,1144
    c5e0:	f800283a 	ret
    c5e4:	d80b883a 	mov	r5,sp
    c5e8:	9009883a 	mov	r4,r18
    c5ec:	000e2f00 	call	e2f0 <_fflush_r>
    c5f0:	103fef26 	beq	r2,zero,c5b0 <__sbprintf+0x74>
    c5f4:	047fffc4 	movi	r17,-1
    c5f8:	003fed06 	br	c5b0 <__sbprintf+0x74>

0000c5fc <__swsetup_r>:
    c5fc:	008000b4 	movhi	r2,2
    c600:	10a6b817 	ldw	r2,-25888(r2)
    c604:	defffd04 	addi	sp,sp,-12
    c608:	dc400115 	stw	r17,4(sp)
    c60c:	dc000015 	stw	r16,0(sp)
    c610:	dfc00215 	stw	ra,8(sp)
    c614:	2023883a 	mov	r17,r4
    c618:	2821883a 	mov	r16,r5
    c61c:	10000226 	beq	r2,zero,c628 <__swsetup_r+0x2c>
    c620:	10c00e17 	ldw	r3,56(r2)
    c624:	18001f26 	beq	r3,zero,c6a4 <__swsetup_r+0xa8>
    c628:	8180030b 	ldhu	r6,12(r16)
    c62c:	30c0020c 	andi	r3,r6,8
    c630:	3005883a 	mov	r2,r6
    c634:	18002126 	beq	r3,zero,c6bc <__swsetup_r+0xc0>
    c638:	80c00417 	ldw	r3,16(r16)
    c63c:	18002826 	beq	r3,zero,c6e0 <__swsetup_r+0xe4>
    c640:	1100004c 	andi	r4,r2,1
    c644:	20000b1e 	bne	r4,zero,c674 <__swsetup_r+0x78>
    c648:	1100008c 	andi	r4,r2,2
    c64c:	20002e1e 	bne	r4,zero,c708 <__swsetup_r+0x10c>
    c650:	81000517 	ldw	r4,20(r16)
    c654:	81000215 	stw	r4,8(r16)
    c658:	18000b26 	beq	r3,zero,c688 <__swsetup_r+0x8c>
    c65c:	0005883a 	mov	r2,zero
    c660:	dfc00217 	ldw	ra,8(sp)
    c664:	dc400117 	ldw	r17,4(sp)
    c668:	dc000017 	ldw	r16,0(sp)
    c66c:	dec00304 	addi	sp,sp,12
    c670:	f800283a 	ret
    c674:	81000517 	ldw	r4,20(r16)
    c678:	80000215 	stw	zero,8(r16)
    c67c:	0109c83a 	sub	r4,zero,r4
    c680:	81000615 	stw	r4,24(r16)
    c684:	183ff51e 	bne	r3,zero,c65c <__swsetup_r+0x60>
    c688:	10c0200c 	andi	r3,r2,128
    c68c:	0005883a 	mov	r2,zero
    c690:	183ff326 	beq	r3,zero,c660 <__swsetup_r+0x64>
    c694:	31801014 	ori	r6,r6,64
    c698:	8180030d 	sth	r6,12(r16)
    c69c:	00bfffc4 	movi	r2,-1
    c6a0:	003fef06 	br	c660 <__swsetup_r+0x64>
    c6a4:	1009883a 	mov	r4,r2
    c6a8:	000e7380 	call	e738 <__sinit>
    c6ac:	8180030b 	ldhu	r6,12(r16)
    c6b0:	30c0020c 	andi	r3,r6,8
    c6b4:	3005883a 	mov	r2,r6
    c6b8:	183fdf1e 	bne	r3,zero,c638 <__swsetup_r+0x3c>
    c6bc:	3080040c 	andi	r2,r6,16
    c6c0:	10002126 	beq	r2,zero,c748 <__swsetup_r+0x14c>
    c6c4:	3080010c 	andi	r2,r6,4
    c6c8:	1000111e 	bne	r2,zero,c710 <__swsetup_r+0x114>
    c6cc:	80c00417 	ldw	r3,16(r16)
    c6d0:	30800214 	ori	r2,r6,8
    c6d4:	8080030d 	sth	r2,12(r16)
    c6d8:	100d883a 	mov	r6,r2
    c6dc:	183fd81e 	bne	r3,zero,c640 <__swsetup_r+0x44>
    c6e0:	1100a00c 	andi	r4,r2,640
    c6e4:	21008020 	cmpeqi	r4,r4,512
    c6e8:	203fd51e 	bne	r4,zero,c640 <__swsetup_r+0x44>
    c6ec:	800b883a 	mov	r5,r16
    c6f0:	8809883a 	mov	r4,r17
    c6f4:	000f18c0 	call	f18c <__smakebuf_r>
    c6f8:	8180030b 	ldhu	r6,12(r16)
    c6fc:	80c00417 	ldw	r3,16(r16)
    c700:	3005883a 	mov	r2,r6
    c704:	003fce06 	br	c640 <__swsetup_r+0x44>
    c708:	0009883a 	mov	r4,zero
    c70c:	003fd106 	br	c654 <__swsetup_r+0x58>
    c710:	81400c17 	ldw	r5,48(r16)
    c714:	28000626 	beq	r5,zero,c730 <__swsetup_r+0x134>
    c718:	80801004 	addi	r2,r16,64
    c71c:	28800326 	beq	r5,r2,c72c <__swsetup_r+0x130>
    c720:	8809883a 	mov	r4,r17
    c724:	000e89c0 	call	e89c <_free_r>
    c728:	8180030b 	ldhu	r6,12(r16)
    c72c:	80000c15 	stw	zero,48(r16)
    c730:	80c00417 	ldw	r3,16(r16)
    c734:	00bff6c4 	movi	r2,-37
    c738:	118c703a 	and	r6,r2,r6
    c73c:	80000115 	stw	zero,4(r16)
    c740:	80c00015 	stw	r3,0(r16)
    c744:	003fe206 	br	c6d0 <__swsetup_r+0xd4>
    c748:	00800244 	movi	r2,9
    c74c:	88800015 	stw	r2,0(r17)
    c750:	31801014 	ori	r6,r6,64
    c754:	8180030d 	sth	r6,12(r16)
    c758:	00bfffc4 	movi	r2,-1
    c75c:	003fc006 	br	c660 <__swsetup_r+0x64>

0000c760 <quorem>:
    c760:	defff204 	addi	sp,sp,-56
    c764:	dc400515 	stw	r17,20(sp)
    c768:	20800417 	ldw	r2,16(r4)
    c76c:	2c400417 	ldw	r17,16(r5)
    c770:	dfc00d15 	stw	ra,52(sp)
    c774:	df000c15 	stw	fp,48(sp)
    c778:	ddc00b15 	stw	r23,44(sp)
    c77c:	dd800a15 	stw	r22,40(sp)
    c780:	dd400915 	stw	r21,36(sp)
    c784:	dd000815 	stw	r20,32(sp)
    c788:	dcc00715 	stw	r19,28(sp)
    c78c:	dc800615 	stw	r18,24(sp)
    c790:	dc000415 	stw	r16,16(sp)
    c794:	d9000115 	stw	r4,4(sp)
    c798:	d9400215 	stw	r5,8(sp)
    c79c:	14407616 	blt	r2,r17,c978 <quorem+0x218>
    c7a0:	8c7fffc4 	addi	r17,r17,-1
    c7a4:	882a90ba 	slli	r21,r17,2
    c7a8:	2f000504 	addi	fp,r5,20
    c7ac:	25800504 	addi	r22,r4,20
    c7b0:	e565883a 	add	r18,fp,r21
    c7b4:	b545883a 	add	r2,r22,r21
    c7b8:	95c00017 	ldw	r23,0(r18)
    c7bc:	15000017 	ldw	r20,0(r2)
    c7c0:	dd800015 	stw	r22,0(sp)
    c7c4:	bdc00044 	addi	r23,r23,1
    c7c8:	b80b883a 	mov	r5,r23
    c7cc:	a009883a 	mov	r4,r20
    c7d0:	d8800315 	stw	r2,12(sp)
    c7d4:	0005fcc0 	call	5fcc <__udivsi3>
    c7d8:	1021883a 	mov	r16,r2
    c7dc:	a5c02f36 	bltu	r20,r23,c89c <quorem+0x13c>
    c7e0:	e029883a 	mov	r20,fp
    c7e4:	002b883a 	mov	r21,zero
    c7e8:	002f883a 	mov	r23,zero
    c7ec:	a4c00017 	ldw	r19,0(r20)
    c7f0:	800b883a 	mov	r5,r16
    c7f4:	b5800104 	addi	r22,r22,4
    c7f8:	993fffcc 	andi	r4,r19,65535
    c7fc:	000608c0 	call	608c <__mulsi3>
    c800:	9808d43a 	srli	r4,r19,16
    c804:	800b883a 	mov	r5,r16
    c808:	156b883a 	add	r21,r2,r21
    c80c:	000608c0 	call	608c <__mulsi3>
    c810:	b0ffff17 	ldw	r3,-4(r22)
    c814:	a80ad43a 	srli	r5,r21,16
    c818:	a93fffcc 	andi	r4,r21,65535
    c81c:	19bfffcc 	andi	r6,r3,65535
    c820:	b909c83a 	sub	r4,r23,r4
    c824:	2189883a 	add	r4,r4,r6
    c828:	1806d43a 	srli	r3,r3,16
    c82c:	1145883a 	add	r2,r2,r5
    c830:	200bd43a 	srai	r5,r4,16
    c834:	11bfffcc 	andi	r6,r2,65535
    c838:	1987c83a 	sub	r3,r3,r6
    c83c:	1947883a 	add	r3,r3,r5
    c840:	180a943a 	slli	r5,r3,16
    c844:	213fffcc 	andi	r4,r4,65535
    c848:	a5000104 	addi	r20,r20,4
    c84c:	2908b03a 	or	r4,r5,r4
    c850:	b13fff15 	stw	r4,-4(r22)
    c854:	102ad43a 	srli	r21,r2,16
    c858:	182fd43a 	srai	r23,r3,16
    c85c:	953fe32e 	bgeu	r18,r20,c7ec <quorem+0x8c>
    c860:	d8c00317 	ldw	r3,12(sp)
    c864:	18800017 	ldw	r2,0(r3)
    c868:	10000c1e 	bne	r2,zero,c89c <quorem+0x13c>
    c86c:	d8800017 	ldw	r2,0(sp)
    c870:	1d7fff04 	addi	r21,r3,-4
    c874:	15400436 	bltu	r2,r21,c888 <quorem+0x128>
    c878:	00000606 	br	c894 <quorem+0x134>
    c87c:	d8800017 	ldw	r2,0(sp)
    c880:	8c7fffc4 	addi	r17,r17,-1
    c884:	1540032e 	bgeu	r2,r21,c894 <quorem+0x134>
    c888:	a8800017 	ldw	r2,0(r21)
    c88c:	ad7fff04 	addi	r21,r21,-4
    c890:	103ffa26 	beq	r2,zero,c87c <quorem+0x11c>
    c894:	d8800117 	ldw	r2,4(sp)
    c898:	14400415 	stw	r17,16(r2)
    c89c:	d9400217 	ldw	r5,8(sp)
    c8a0:	d9000117 	ldw	r4,4(sp)
    c8a4:	00101740 	call	10174 <__mcmp>
    c8a8:	10002616 	blt	r2,zero,c944 <quorem+0x1e4>
    c8ac:	d9400017 	ldw	r5,0(sp)
    c8b0:	84000044 	addi	r16,r16,1
    c8b4:	0007883a 	mov	r3,zero
    c8b8:	e1000017 	ldw	r4,0(fp)
    c8bc:	29800017 	ldw	r6,0(r5)
    c8c0:	29400104 	addi	r5,r5,4
    c8c4:	20bfffcc 	andi	r2,r4,65535
    c8c8:	1887c83a 	sub	r3,r3,r2
    c8cc:	30bfffcc 	andi	r2,r6,65535
    c8d0:	1885883a 	add	r2,r3,r2
    c8d4:	2008d43a 	srli	r4,r4,16
    c8d8:	3006d43a 	srli	r3,r6,16
    c8dc:	100fd43a 	srai	r7,r2,16
    c8e0:	11bfffcc 	andi	r6,r2,65535
    c8e4:	1907c83a 	sub	r3,r3,r4
    c8e8:	19c7883a 	add	r3,r3,r7
    c8ec:	1804943a 	slli	r2,r3,16
    c8f0:	e7000104 	addi	fp,fp,4
    c8f4:	1807d43a 	srai	r3,r3,16
    c8f8:	1184b03a 	or	r2,r2,r6
    c8fc:	28bfff15 	stw	r2,-4(r5)
    c900:	973fed2e 	bgeu	r18,fp,c8b8 <quorem+0x158>
    c904:	880490ba 	slli	r2,r17,2
    c908:	d9000017 	ldw	r4,0(sp)
    c90c:	2085883a 	add	r2,r4,r2
    c910:	10c00017 	ldw	r3,0(r2)
    c914:	18000b1e 	bne	r3,zero,c944 <quorem+0x1e4>
    c918:	10bfff04 	addi	r2,r2,-4
    c91c:	20800436 	bltu	r4,r2,c930 <quorem+0x1d0>
    c920:	00000606 	br	c93c <quorem+0x1dc>
    c924:	d8c00017 	ldw	r3,0(sp)
    c928:	8c7fffc4 	addi	r17,r17,-1
    c92c:	1880032e 	bgeu	r3,r2,c93c <quorem+0x1dc>
    c930:	10c00017 	ldw	r3,0(r2)
    c934:	10bfff04 	addi	r2,r2,-4
    c938:	183ffa26 	beq	r3,zero,c924 <quorem+0x1c4>
    c93c:	d8800117 	ldw	r2,4(sp)
    c940:	14400415 	stw	r17,16(r2)
    c944:	8005883a 	mov	r2,r16
    c948:	dfc00d17 	ldw	ra,52(sp)
    c94c:	df000c17 	ldw	fp,48(sp)
    c950:	ddc00b17 	ldw	r23,44(sp)
    c954:	dd800a17 	ldw	r22,40(sp)
    c958:	dd400917 	ldw	r21,36(sp)
    c95c:	dd000817 	ldw	r20,32(sp)
    c960:	dcc00717 	ldw	r19,28(sp)
    c964:	dc800617 	ldw	r18,24(sp)
    c968:	dc400517 	ldw	r17,20(sp)
    c96c:	dc000417 	ldw	r16,16(sp)
    c970:	dec00e04 	addi	sp,sp,56
    c974:	f800283a 	ret
    c978:	0005883a 	mov	r2,zero
    c97c:	003ff206 	br	c948 <quorem+0x1e8>

0000c980 <_dtoa_r>:
    c980:	20801017 	ldw	r2,64(r4)
    c984:	deffe304 	addi	sp,sp,-116
    c988:	df001b15 	stw	fp,108(sp)
    c98c:	dcc01615 	stw	r19,88(sp)
    c990:	dc801515 	stw	r18,84(sp)
    c994:	dc401415 	stw	r17,80(sp)
    c998:	dc001315 	stw	r16,76(sp)
    c99c:	dfc01c15 	stw	ra,112(sp)
    c9a0:	ddc01a15 	stw	r23,104(sp)
    c9a4:	dd801915 	stw	r22,100(sp)
    c9a8:	dd401815 	stw	r21,96(sp)
    c9ac:	dd001715 	stw	r20,92(sp)
    c9b0:	d9c00215 	stw	r7,8(sp)
    c9b4:	dc001f17 	ldw	r16,124(sp)
    c9b8:	2039883a 	mov	fp,r4
    c9bc:	3025883a 	mov	r18,r6
    c9c0:	2827883a 	mov	r19,r5
    c9c4:	3023883a 	mov	r17,r6
    c9c8:	10000826 	beq	r2,zero,c9ec <_dtoa_r+0x6c>
    c9cc:	21801117 	ldw	r6,68(r4)
    c9d0:	00c00044 	movi	r3,1
    c9d4:	100b883a 	mov	r5,r2
    c9d8:	1986983a 	sll	r3,r3,r6
    c9dc:	11800115 	stw	r6,4(r2)
    c9e0:	10c00215 	stw	r3,8(r2)
    c9e4:	000f7640 	call	f764 <_Bfree>
    c9e8:	e0001015 	stw	zero,64(fp)
    c9ec:	90018916 	blt	r18,zero,d014 <_dtoa_r+0x694>
    c9f0:	80000015 	stw	zero,0(r16)
    c9f4:	909ffc2c 	andhi	r2,r18,32752
    c9f8:	00dffc34 	movhi	r3,32752
    c9fc:	10c18e26 	beq	r2,r3,d038 <_dtoa_r+0x6b8>
    ca00:	000d883a 	mov	r6,zero
    ca04:	000f883a 	mov	r7,zero
    ca08:	9809883a 	mov	r4,r19
    ca0c:	880b883a 	mov	r5,r17
    ca10:	00082740 	call	8274 <__eqdf2>
    ca14:	1000191e 	bne	r2,zero,ca7c <_dtoa_r+0xfc>
    ca18:	d8c01e17 	ldw	r3,120(sp)
    ca1c:	00800044 	movi	r2,1
    ca20:	18800015 	stw	r2,0(r3)
    ca24:	d8802017 	ldw	r2,128(sp)
    ca28:	1002ff26 	beq	r2,zero,d628 <_dtoa_r+0xca8>
    ca2c:	d9002017 	ldw	r4,128(sp)
    ca30:	00800074 	movhi	r2,1
    ca34:	109e4944 	addi	r2,r2,31013
    ca38:	00c00074 	movhi	r3,1
    ca3c:	20800015 	stw	r2,0(r4)
    ca40:	189e4904 	addi	r2,r3,31012
    ca44:	d8800115 	stw	r2,4(sp)
    ca48:	d8800117 	ldw	r2,4(sp)
    ca4c:	dfc01c17 	ldw	ra,112(sp)
    ca50:	df001b17 	ldw	fp,108(sp)
    ca54:	ddc01a17 	ldw	r23,104(sp)
    ca58:	dd801917 	ldw	r22,100(sp)
    ca5c:	dd401817 	ldw	r21,96(sp)
    ca60:	dd001717 	ldw	r20,92(sp)
    ca64:	dcc01617 	ldw	r19,88(sp)
    ca68:	dc801517 	ldw	r18,84(sp)
    ca6c:	dc401417 	ldw	r17,80(sp)
    ca70:	dc001317 	ldw	r16,76(sp)
    ca74:	dec01d04 	addi	sp,sp,116
    ca78:	f800283a 	ret
    ca7c:	d8801104 	addi	r2,sp,68
    ca80:	9020d53a 	srli	r16,r18,20
    ca84:	d8800015 	stw	r2,0(sp)
    ca88:	d9c01204 	addi	r7,sp,72
    ca8c:	980b883a 	mov	r5,r19
    ca90:	880d883a 	mov	r6,r17
    ca94:	e009883a 	mov	r4,fp
    ca98:	001055c0 	call	1055c <__d2b>
    ca9c:	102f883a 	mov	r23,r2
    caa0:	8001781e 	bne	r16,zero,d084 <_dtoa_r+0x704>
    caa4:	dd001117 	ldw	r20,68(sp)
    caa8:	dc001217 	ldw	r16,72(sp)
    caac:	a421883a 	add	r16,r20,r16
    cab0:	80810c84 	addi	r2,r16,1074
    cab4:	10c00850 	cmplti	r3,r2,33
    cab8:	1802eb1e 	bne	r3,zero,d668 <_dtoa_r+0xce8>
    cabc:	01001004 	movi	r4,64
    cac0:	2085c83a 	sub	r2,r4,r2
    cac4:	81010484 	addi	r4,r16,1042
    cac8:	90a4983a 	sll	r18,r18,r2
    cacc:	9908d83a 	srl	r4,r19,r4
    cad0:	9108b03a 	or	r4,r18,r4
    cad4:	00141500 	call	14150 <__floatunsidf>
    cad8:	1009883a 	mov	r4,r2
    cadc:	017f8434 	movhi	r5,65040
    cae0:	00800044 	movi	r2,1
    cae4:	194b883a 	add	r5,r3,r5
    cae8:	843fffc4 	addi	r16,r16,-1
    caec:	d8800915 	stw	r2,36(sp)
    caf0:	000d883a 	mov	r6,zero
    caf4:	01cffe34 	movhi	r7,16376
    caf8:	0008c700 	call	8c70 <__subdf3>
    cafc:	0198dbf4 	movhi	r6,25455
    cb00:	01cff4f4 	movhi	r7,16339
    cb04:	3190d844 	addi	r6,r6,17249
    cb08:	39e1e9c4 	addi	r7,r7,-30809
    cb0c:	1009883a 	mov	r4,r2
    cb10:	180b883a 	mov	r5,r3
    cb14:	00084c40 	call	84c4 <__muldf3>
    cb18:	01a2d874 	movhi	r6,35681
    cb1c:	01cff1f4 	movhi	r7,16327
    cb20:	31b22cc4 	addi	r6,r6,-14157
    cb24:	39e28a04 	addi	r7,r7,-30168
    cb28:	180b883a 	mov	r5,r3
    cb2c:	1009883a 	mov	r4,r2
    cb30:	00070700 	call	7070 <__adddf3>
    cb34:	8009883a 	mov	r4,r16
    cb38:	102b883a 	mov	r21,r2
    cb3c:	1825883a 	mov	r18,r3
    cb40:	00096500 	call	9650 <__floatsidf>
    cb44:	019427f4 	movhi	r6,20639
    cb48:	01cff4f4 	movhi	r7,16339
    cb4c:	319e7ec4 	addi	r6,r6,31227
    cb50:	39d104c4 	addi	r7,r7,17427
    cb54:	1009883a 	mov	r4,r2
    cb58:	180b883a 	mov	r5,r3
    cb5c:	00084c40 	call	84c4 <__muldf3>
    cb60:	100d883a 	mov	r6,r2
    cb64:	180f883a 	mov	r7,r3
    cb68:	a809883a 	mov	r4,r21
    cb6c:	900b883a 	mov	r5,r18
    cb70:	00070700 	call	7070 <__adddf3>
    cb74:	1009883a 	mov	r4,r2
    cb78:	180b883a 	mov	r5,r3
    cb7c:	1025883a 	mov	r18,r2
    cb80:	182d883a 	mov	r22,r3
    cb84:	00095d00 	call	95d0 <__fixdfsi>
    cb88:	000d883a 	mov	r6,zero
    cb8c:	000f883a 	mov	r7,zero
    cb90:	9009883a 	mov	r4,r18
    cb94:	b00b883a 	mov	r5,r22
    cb98:	102b883a 	mov	r21,r2
    cb9c:	00083dc0 	call	83dc <__ledf2>
    cba0:	10029716 	blt	r2,zero,d600 <_dtoa_r+0xc80>
    cba4:	a421c83a 	sub	r16,r20,r16
    cba8:	a88005e8 	cmpgeui	r2,r21,23
    cbac:	85bfffc4 	addi	r22,r16,-1
    cbb0:	10028b1e 	bne	r2,zero,d5e0 <_dtoa_r+0xc60>
    cbb4:	a80690fa 	slli	r3,r21,3
    cbb8:	00800074 	movhi	r2,1
    cbbc:	109e9204 	addi	r2,r2,31304
    cbc0:	10c5883a 	add	r2,r2,r3
    cbc4:	11800017 	ldw	r6,0(r2)
    cbc8:	11c00117 	ldw	r7,4(r2)
    cbcc:	9809883a 	mov	r4,r19
    cbd0:	880b883a 	mov	r5,r17
    cbd4:	00083dc0 	call	83dc <__ledf2>
    cbd8:	10025f0e 	bge	r2,zero,d558 <_dtoa_r+0xbd8>
    cbdc:	d8000815 	stw	zero,32(sp)
    cbe0:	ad7fffc4 	addi	r21,r21,-1
    cbe4:	b0028116 	blt	r22,zero,d5ec <_dtoa_r+0xc6c>
    cbe8:	d8000415 	stw	zero,16(sp)
    cbec:	a8025d0e 	bge	r21,zero,d564 <_dtoa_r+0xbe4>
    cbf0:	d8800417 	ldw	r2,16(sp)
    cbf4:	d8c00217 	ldw	r3,8(sp)
    cbf8:	dd400615 	stw	r21,24(sp)
    cbfc:	1545c83a 	sub	r2,r2,r21
    cc00:	d8800415 	stw	r2,16(sp)
    cc04:	0545c83a 	sub	r2,zero,r21
    cc08:	d8800715 	stw	r2,28(sp)
    cc0c:	188002a8 	cmpgeui	r2,r3,10
    cc10:	002b883a 	mov	r21,zero
    cc14:	1002591e 	bne	r2,zero,d57c <_dtoa_r+0xbfc>
    cc18:	18800190 	cmplti	r2,r3,6
    cc1c:	1002961e 	bne	r2,zero,d678 <_dtoa_r+0xcf8>
    cc20:	18bfff04 	addi	r2,r3,-4
    cc24:	d8800215 	stw	r2,8(sp)
    cc28:	0021883a 	mov	r16,zero
    cc2c:	d8c00217 	ldw	r3,8(sp)
    cc30:	18800120 	cmpeqi	r2,r3,4
    cc34:	10036d1e 	bne	r2,zero,d9ec <_dtoa_r+0x106c>
    cc38:	18800160 	cmpeqi	r2,r3,5
    cc3c:	1003291e 	bne	r2,zero,d8e4 <_dtoa_r+0xf64>
    cc40:	188000a0 	cmpeqi	r2,r3,2
    cc44:	10025926 	beq	r2,zero,d5ac <_dtoa_r+0xc2c>
    cc48:	d8000515 	stw	zero,20(sp)
    cc4c:	d8801d17 	ldw	r2,116(sp)
    cc50:	0083340e 	bge	zero,r2,d924 <_dtoa_r+0xfa4>
    cc54:	d8800b15 	stw	r2,44(sp)
    cc58:	d8800315 	stw	r2,12(sp)
    cc5c:	100d883a 	mov	r6,r2
    cc60:	e0001115 	stw	zero,68(fp)
    cc64:	30800610 	cmplti	r2,r6,24
    cc68:	1004f61e 	bne	r2,zero,e044 <_dtoa_r+0x16c4>
    cc6c:	00c00044 	movi	r3,1
    cc70:	00800104 	movi	r2,4
    cc74:	1085883a 	add	r2,r2,r2
    cc78:	11000504 	addi	r4,r2,20
    cc7c:	180b883a 	mov	r5,r3
    cc80:	18c00044 	addi	r3,r3,1
    cc84:	313ffb2e 	bgeu	r6,r4,cc74 <_dtoa_r+0x2f4>
    cc88:	e1401115 	stw	r5,68(fp)
    cc8c:	e009883a 	mov	r4,fp
    cc90:	000f6c00 	call	f6c0 <_Balloc>
    cc94:	d8800115 	stw	r2,4(sp)
    cc98:	1004e326 	beq	r2,zero,e028 <_dtoa_r+0x16a8>
    cc9c:	d8800117 	ldw	r2,4(sp)
    cca0:	e0801015 	stw	r2,64(fp)
    cca4:	d8800317 	ldw	r2,12(sp)
    cca8:	108003e8 	cmpgeui	r2,r2,15
    ccac:	1001091e 	bne	r2,zero,d0d4 <_dtoa_r+0x754>
    ccb0:	80010826 	beq	r16,zero,d0d4 <_dtoa_r+0x754>
    ccb4:	d9000617 	ldw	r4,24(sp)
    ccb8:	0103970e 	bge	zero,r4,db18 <_dtoa_r+0x1198>
    ccbc:	208003cc 	andi	r2,r4,15
    ccc0:	100690fa 	slli	r3,r2,3
    ccc4:	2029d13a 	srai	r20,r4,4
    ccc8:	00800074 	movhi	r2,1
    cccc:	109e9204 	addi	r2,r2,31304
    ccd0:	10c5883a 	add	r2,r2,r3
    ccd4:	a0c0040c 	andi	r3,r20,16
    ccd8:	12800017 	ldw	r10,0(r2)
    ccdc:	12400117 	ldw	r9,4(r2)
    cce0:	18033c26 	beq	r3,zero,d9d4 <_dtoa_r+0x1054>
    cce4:	00800074 	movhi	r2,1
    cce8:	109e8804 	addi	r2,r2,31264
    ccec:	11800817 	ldw	r6,32(r2)
    ccf0:	11c00917 	ldw	r7,36(r2)
    ccf4:	9809883a 	mov	r4,r19
    ccf8:	880b883a 	mov	r5,r17
    ccfc:	da400e15 	stw	r9,56(sp)
    cd00:	da800d15 	stw	r10,52(sp)
    cd04:	00079600 	call	7960 <__divdf3>
    cd08:	da800d17 	ldw	r10,52(sp)
    cd0c:	da400e17 	ldw	r9,56(sp)
    cd10:	a50003cc 	andi	r20,r20,15
    cd14:	d8800a15 	stw	r2,40(sp)
    cd18:	d8c00c15 	stw	r3,48(sp)
    cd1c:	040000c4 	movi	r16,3
    cd20:	a0001126 	beq	r20,zero,cd68 <_dtoa_r+0x3e8>
    cd24:	04800074 	movhi	r18,1
    cd28:	949e8804 	addi	r18,r18,31264
    cd2c:	5009883a 	mov	r4,r10
    cd30:	480b883a 	mov	r5,r9
    cd34:	a180004c 	andi	r6,r20,1
    cd38:	30000626 	beq	r6,zero,cd54 <_dtoa_r+0x3d4>
    cd3c:	91800017 	ldw	r6,0(r18)
    cd40:	91c00117 	ldw	r7,4(r18)
    cd44:	84000044 	addi	r16,r16,1
    cd48:	00084c40 	call	84c4 <__muldf3>
    cd4c:	1009883a 	mov	r4,r2
    cd50:	180b883a 	mov	r5,r3
    cd54:	a029d07a 	srai	r20,r20,1
    cd58:	94800204 	addi	r18,r18,8
    cd5c:	a03ff51e 	bne	r20,zero,cd34 <_dtoa_r+0x3b4>
    cd60:	2015883a 	mov	r10,r4
    cd64:	2813883a 	mov	r9,r5
    cd68:	d9000a17 	ldw	r4,40(sp)
    cd6c:	d9400c17 	ldw	r5,48(sp)
    cd70:	500d883a 	mov	r6,r10
    cd74:	480f883a 	mov	r7,r9
    cd78:	00079600 	call	7960 <__divdf3>
    cd7c:	d8800a15 	stw	r2,40(sp)
    cd80:	1825883a 	mov	r18,r3
    cd84:	d8800817 	ldw	r2,32(sp)
    cd88:	10000726 	beq	r2,zero,cda8 <_dtoa_r+0x428>
    cd8c:	dd000a17 	ldw	r20,40(sp)
    cd90:	000d883a 	mov	r6,zero
    cd94:	01cffc34 	movhi	r7,16368
    cd98:	a009883a 	mov	r4,r20
    cd9c:	900b883a 	mov	r5,r18
    cda0:	00083dc0 	call	83dc <__ledf2>
    cda4:	10044516 	blt	r2,zero,debc <_dtoa_r+0x153c>
    cda8:	8009883a 	mov	r4,r16
    cdac:	00096500 	call	9650 <__floatsidf>
    cdb0:	d9800a17 	ldw	r6,40(sp)
    cdb4:	900f883a 	mov	r7,r18
    cdb8:	1009883a 	mov	r4,r2
    cdbc:	180b883a 	mov	r5,r3
    cdc0:	00084c40 	call	84c4 <__muldf3>
    cdc4:	000d883a 	mov	r6,zero
    cdc8:	01d00734 	movhi	r7,16412
    cdcc:	1009883a 	mov	r4,r2
    cdd0:	180b883a 	mov	r5,r3
    cdd4:	00070700 	call	7070 <__adddf3>
    cdd8:	1029883a 	mov	r20,r2
    cddc:	00bf3034 	movhi	r2,64704
    cde0:	1885883a 	add	r2,r3,r2
    cde4:	d8800c15 	stw	r2,48(sp)
    cde8:	d8800317 	ldw	r2,12(sp)
    cdec:	10032d26 	beq	r2,zero,daa4 <_dtoa_r+0x1124>
    cdf0:	d8800617 	ldw	r2,24(sp)
    cdf4:	d8801015 	stw	r2,64(sp)
    cdf8:	d8800317 	ldw	r2,12(sp)
    cdfc:	d8800d15 	stw	r2,52(sp)
    ce00:	d8800d17 	ldw	r2,52(sp)
    ce04:	dc000a17 	ldw	r16,40(sp)
    ce08:	900b883a 	mov	r5,r18
    ce0c:	10bfffc4 	addi	r2,r2,-1
    ce10:	100690fa 	slli	r3,r2,3
    ce14:	00800074 	movhi	r2,1
    ce18:	109e9204 	addi	r2,r2,31304
    ce1c:	10c5883a 	add	r2,r2,r3
    ce20:	12c00017 	ldw	r11,0(r2)
    ce24:	13000117 	ldw	r12,4(r2)
    ce28:	8009883a 	mov	r4,r16
    ce2c:	dac00e15 	stw	r11,56(sp)
    ce30:	db000a15 	stw	r12,40(sp)
    ce34:	00095d00 	call	95d0 <__fixdfsi>
    ce38:	1009883a 	mov	r4,r2
    ce3c:	10800c04 	addi	r2,r2,48
    ce40:	d8800f15 	stw	r2,60(sp)
    ce44:	00096500 	call	9650 <__floatsidf>
    ce48:	8009883a 	mov	r4,r16
    ce4c:	100d883a 	mov	r6,r2
    ce50:	180f883a 	mov	r7,r3
    ce54:	900b883a 	mov	r5,r18
    ce58:	0008c700 	call	8c70 <__subdf3>
    ce5c:	d9000117 	ldw	r4,4(sp)
    ce60:	dac00e17 	ldw	r11,56(sp)
    ce64:	db000a17 	ldw	r12,40(sp)
    ce68:	1825883a 	mov	r18,r3
    ce6c:	d8c00517 	ldw	r3,20(sp)
    ce70:	22000044 	addi	r8,r4,1
    ce74:	da000e15 	stw	r8,56(sp)
    ce78:	1021883a 	mov	r16,r2
    ce7c:	580d883a 	mov	r6,r11
    ce80:	600f883a 	mov	r7,r12
    ce84:	1803b226 	beq	r3,zero,dd50 <_dtoa_r+0x13d0>
    ce88:	0009883a 	mov	r4,zero
    ce8c:	014ff834 	movhi	r5,16352
    ce90:	00079600 	call	7960 <__divdf3>
    ce94:	d9c00c17 	ldw	r7,48(sp)
    ce98:	a00d883a 	mov	r6,r20
    ce9c:	1009883a 	mov	r4,r2
    cea0:	180b883a 	mov	r5,r3
    cea4:	0008c700 	call	8c70 <__subdf3>
    cea8:	d9000117 	ldw	r4,4(sp)
    ceac:	1029883a 	mov	r20,r2
    ceb0:	d8800f17 	ldw	r2,60(sp)
    ceb4:	800d883a 	mov	r6,r16
    ceb8:	900f883a 	mov	r7,r18
    cebc:	20800005 	stb	r2,0(r4)
    cec0:	180b883a 	mov	r5,r3
    cec4:	a009883a 	mov	r4,r20
    cec8:	d8c00a15 	stw	r3,40(sp)
    cecc:	00082f40 	call	82f4 <__gedf2>
    ced0:	da000e17 	ldw	r8,56(sp)
    ced4:	0083e516 	blt	zero,r2,de6c <_dtoa_r+0x14ec>
    ced8:	0005883a 	mov	r2,zero
    cedc:	dd400e15 	stw	r21,56(sp)
    cee0:	dd800f15 	stw	r22,60(sp)
    cee4:	ddc00c15 	stw	r23,48(sp)
    cee8:	dd800d17 	ldw	r22,52(sp)
    ceec:	402b883a 	mov	r21,r8
    cef0:	dc400d15 	stw	r17,52(sp)
    cef4:	dc400a17 	ldw	r17,40(sp)
    cef8:	dcc00a15 	stw	r19,40(sp)
    cefc:	1027883a 	mov	r19,r2
    cf00:	00002606 	br	cf9c <_dtoa_r+0x61c>
    cf04:	9cc00044 	addi	r19,r19,1
    cf08:	9d806d0e 	bge	r19,r22,d0c0 <_dtoa_r+0x740>
    cf0c:	a009883a 	mov	r4,r20
    cf10:	880b883a 	mov	r5,r17
    cf14:	000d883a 	mov	r6,zero
    cf18:	01d00934 	movhi	r7,16420
    cf1c:	00084c40 	call	84c4 <__muldf3>
    cf20:	000d883a 	mov	r6,zero
    cf24:	01d00934 	movhi	r7,16420
    cf28:	8009883a 	mov	r4,r16
    cf2c:	900b883a 	mov	r5,r18
    cf30:	1029883a 	mov	r20,r2
    cf34:	1823883a 	mov	r17,r3
    cf38:	00084c40 	call	84c4 <__muldf3>
    cf3c:	180b883a 	mov	r5,r3
    cf40:	1009883a 	mov	r4,r2
    cf44:	1821883a 	mov	r16,r3
    cf48:	1025883a 	mov	r18,r2
    cf4c:	00095d00 	call	95d0 <__fixdfsi>
    cf50:	1009883a 	mov	r4,r2
    cf54:	102f883a 	mov	r23,r2
    cf58:	00096500 	call	9650 <__floatsidf>
    cf5c:	9009883a 	mov	r4,r18
    cf60:	800b883a 	mov	r5,r16
    cf64:	100d883a 	mov	r6,r2
    cf68:	180f883a 	mov	r7,r3
    cf6c:	0008c700 	call	8c70 <__subdf3>
    cf70:	ad400044 	addi	r21,r21,1
    cf74:	ba000c04 	addi	r8,r23,48
    cf78:	aa3fffc5 	stb	r8,-1(r21)
    cf7c:	a00d883a 	mov	r6,r20
    cf80:	880f883a 	mov	r7,r17
    cf84:	1009883a 	mov	r4,r2
    cf88:	180b883a 	mov	r5,r3
    cf8c:	1021883a 	mov	r16,r2
    cf90:	1825883a 	mov	r18,r3
    cf94:	00083dc0 	call	83dc <__ledf2>
    cf98:	10040516 	blt	r2,zero,dfb0 <_dtoa_r+0x1630>
    cf9c:	800d883a 	mov	r6,r16
    cfa0:	900f883a 	mov	r7,r18
    cfa4:	0009883a 	mov	r4,zero
    cfa8:	014ffc34 	movhi	r5,16368
    cfac:	0008c700 	call	8c70 <__subdf3>
    cfb0:	a00d883a 	mov	r6,r20
    cfb4:	880f883a 	mov	r7,r17
    cfb8:	1009883a 	mov	r4,r2
    cfbc:	180b883a 	mov	r5,r3
    cfc0:	00083dc0 	call	83dc <__ledf2>
    cfc4:	103fcf0e 	bge	r2,zero,cf04 <_dtoa_r+0x584>
    cfc8:	d8801017 	ldw	r2,64(sp)
    cfcc:	ddc00c17 	ldw	r23,48(sp)
    cfd0:	d9000117 	ldw	r4,4(sp)
    cfd4:	a829883a 	mov	r20,r21
    cfd8:	14c00044 	addi	r19,r2,1
    cfdc:	00000106 	br	cfe4 <_dtoa_r+0x664>
    cfe0:	a103d826 	beq	r20,r4,df44 <_dtoa_r+0x15c4>
    cfe4:	a0ffffc3 	ldbu	r3,-1(r20)
    cfe8:	a011883a 	mov	r8,r20
    cfec:	a53fffc4 	addi	r20,r20,-1
    cff0:	18803fcc 	andi	r2,r3,255
    cff4:	1080201c 	xori	r2,r2,128
    cff8:	10bfe004 	addi	r2,r2,-128
    cffc:	10800e60 	cmpeqi	r2,r2,57
    d000:	103ff71e 	bne	r2,zero,cfe0 <_dtoa_r+0x660>
    d004:	18c00044 	addi	r3,r3,1
    d008:	a0c00005 	stb	r3,0(r20)
    d00c:	dcc00215 	stw	r19,8(sp)
    d010:	00014406 	br	d524 <_dtoa_r+0xba4>
    d014:	04600034 	movhi	r17,32768
    d018:	8c7fffc4 	addi	r17,r17,-1
    d01c:	9462703a 	and	r17,r18,r17
    d020:	00800044 	movi	r2,1
    d024:	8825883a 	mov	r18,r17
    d028:	80800015 	stw	r2,0(r16)
    d02c:	00dffc34 	movhi	r3,32752
    d030:	909ffc2c 	andhi	r2,r18,32752
    d034:	10fe721e 	bne	r2,r3,ca00 <_dtoa_r+0x80>
    d038:	d9001e17 	ldw	r4,120(sp)
    d03c:	00800434 	movhi	r2,16
    d040:	10bfffc4 	addi	r2,r2,-1
    d044:	9084703a 	and	r2,r18,r2
    d048:	00c9c3c4 	movi	r3,9999
    d04c:	20c00015 	stw	r3,0(r4)
    d050:	14e6b03a 	or	r19,r2,r19
    d054:	9800141e 	bne	r19,zero,d0a8 <_dtoa_r+0x728>
    d058:	d8802017 	ldw	r2,128(sp)
    d05c:	10041126 	beq	r2,zero,e0a4 <_dtoa_r+0x1724>
    d060:	00800074 	movhi	r2,1
    d064:	1007883a 	mov	r3,r2
    d068:	18de5304 	addi	r3,r3,31052
    d06c:	00800074 	movhi	r2,1
    d070:	d8c00115 	stw	r3,4(sp)
    d074:	109e5504 	addi	r2,r2,31060
    d078:	d8c02017 	ldw	r3,128(sp)
    d07c:	18800015 	stw	r2,0(r3)
    d080:	003e7106 	br	ca48 <_dtoa_r+0xc8>
    d084:	01400434 	movhi	r5,16
    d088:	297fffc4 	addi	r5,r5,-1
    d08c:	894a703a 	and	r5,r17,r5
    d090:	dd001117 	ldw	r20,68(sp)
    d094:	9809883a 	mov	r4,r19
    d098:	294ffc34 	orhi	r5,r5,16368
    d09c:	843f0044 	addi	r16,r16,-1023
    d0a0:	d8000915 	stw	zero,36(sp)
    d0a4:	003e9206 	br	caf0 <_dtoa_r+0x170>
    d0a8:	d8802017 	ldw	r2,128(sp)
    d0ac:	1002061e 	bne	r2,zero,d8c8 <_dtoa_r+0xf48>
    d0b0:	00800074 	movhi	r2,1
    d0b4:	109e5204 	addi	r2,r2,31048
    d0b8:	d8800115 	stw	r2,4(sp)
    d0bc:	003e6206 	br	ca48 <_dtoa_r+0xc8>
    d0c0:	dd400e17 	ldw	r21,56(sp)
    d0c4:	dd800f17 	ldw	r22,60(sp)
    d0c8:	ddc00c17 	ldw	r23,48(sp)
    d0cc:	dc400d17 	ldw	r17,52(sp)
    d0d0:	dcc00a17 	ldw	r19,40(sp)
    d0d4:	d8801217 	ldw	r2,72(sp)
    d0d8:	10006e16 	blt	r2,zero,d294 <_dtoa_r+0x914>
    d0dc:	d9000617 	ldw	r4,24(sp)
    d0e0:	20c003c8 	cmpgei	r3,r4,15
    d0e4:	18006b1e 	bne	r3,zero,d294 <_dtoa_r+0x914>
    d0e8:	200690fa 	slli	r3,r4,3
    d0ec:	00800074 	movhi	r2,1
    d0f0:	109e9204 	addi	r2,r2,31304
    d0f4:	10c5883a 	add	r2,r2,r3
    d0f8:	14000017 	ldw	r16,0(r2)
    d0fc:	14800117 	ldw	r18,4(r2)
    d100:	d8801d17 	ldw	r2,116(sp)
    d104:	1000150e 	bge	r2,zero,d15c <_dtoa_r+0x7dc>
    d108:	d8800317 	ldw	r2,12(sp)
    d10c:	00801316 	blt	zero,r2,d15c <_dtoa_r+0x7dc>
    d110:	d8800317 	ldw	r2,12(sp)
    d114:	1002771e 	bne	r2,zero,daf4 <_dtoa_r+0x1174>
    d118:	8009883a 	mov	r4,r16
    d11c:	000d883a 	mov	r6,zero
    d120:	01d00534 	movhi	r7,16404
    d124:	900b883a 	mov	r5,r18
    d128:	00084c40 	call	84c4 <__muldf3>
    d12c:	100d883a 	mov	r6,r2
    d130:	180f883a 	mov	r7,r3
    d134:	9809883a 	mov	r4,r19
    d138:	880b883a 	mov	r5,r17
    d13c:	00083dc0 	call	83dc <__ledf2>
    d140:	0029883a 	mov	r20,zero
    d144:	0021883a 	mov	r16,zero
    d148:	00820916 	blt	zero,r2,d970 <_dtoa_r+0xff0>
    d14c:	d8801d17 	ldw	r2,116(sp)
    d150:	da000117 	ldw	r8,4(sp)
    d154:	00a6303a 	nor	r19,zero,r2
    d158:	00020b06 	br	d988 <_dtoa_r+0x1008>
    d15c:	800d883a 	mov	r6,r16
    d160:	900f883a 	mov	r7,r18
    d164:	9809883a 	mov	r4,r19
    d168:	880b883a 	mov	r5,r17
    d16c:	00079600 	call	7960 <__divdf3>
    d170:	180b883a 	mov	r5,r3
    d174:	1009883a 	mov	r4,r2
    d178:	00095d00 	call	95d0 <__fixdfsi>
    d17c:	1009883a 	mov	r4,r2
    d180:	102b883a 	mov	r21,r2
    d184:	00096500 	call	9650 <__floatsidf>
    d188:	800d883a 	mov	r6,r16
    d18c:	900f883a 	mov	r7,r18
    d190:	1009883a 	mov	r4,r2
    d194:	180b883a 	mov	r5,r3
    d198:	00084c40 	call	84c4 <__muldf3>
    d19c:	100d883a 	mov	r6,r2
    d1a0:	9809883a 	mov	r4,r19
    d1a4:	880b883a 	mov	r5,r17
    d1a8:	180f883a 	mov	r7,r3
    d1ac:	0008c700 	call	8c70 <__subdf3>
    d1b0:	d9800117 	ldw	r6,4(sp)
    d1b4:	dd800317 	ldw	r22,12(sp)
    d1b8:	1009883a 	mov	r4,r2
    d1bc:	a8800c04 	addi	r2,r21,48
    d1c0:	30800005 	stb	r2,0(r6)
    d1c4:	b0800060 	cmpeqi	r2,r22,1
    d1c8:	180b883a 	mov	r5,r3
    d1cc:	35000044 	addi	r20,r6,1
    d1d0:	10029c1e 	bne	r2,zero,dc44 <_dtoa_r+0x12c4>
    d1d4:	04400044 	movi	r17,1
    d1d8:	ddc00215 	stw	r23,8(sp)
    d1dc:	00001c06 	br	d250 <_dtoa_r+0x8d0>
    d1e0:	800d883a 	mov	r6,r16
    d1e4:	900f883a 	mov	r7,r18
    d1e8:	a809883a 	mov	r4,r21
    d1ec:	980b883a 	mov	r5,r19
    d1f0:	00079600 	call	7960 <__divdf3>
    d1f4:	180b883a 	mov	r5,r3
    d1f8:	1009883a 	mov	r4,r2
    d1fc:	00095d00 	call	95d0 <__fixdfsi>
    d200:	1009883a 	mov	r4,r2
    d204:	102f883a 	mov	r23,r2
    d208:	00096500 	call	9650 <__floatsidf>
    d20c:	800d883a 	mov	r6,r16
    d210:	900f883a 	mov	r7,r18
    d214:	1009883a 	mov	r4,r2
    d218:	180b883a 	mov	r5,r3
    d21c:	00084c40 	call	84c4 <__muldf3>
    d220:	a809883a 	mov	r4,r21
    d224:	980b883a 	mov	r5,r19
    d228:	100d883a 	mov	r6,r2
    d22c:	180f883a 	mov	r7,r3
    d230:	0008c700 	call	8c70 <__subdf3>
    d234:	b9000c04 	addi	r4,r23,48
    d238:	a1000005 	stb	r4,0(r20)
    d23c:	8c400044 	addi	r17,r17,1
    d240:	a5000044 	addi	r20,r20,1
    d244:	1009883a 	mov	r4,r2
    d248:	180b883a 	mov	r5,r3
    d24c:	b4427b26 	beq	r22,r17,dc3c <_dtoa_r+0x12bc>
    d250:	000d883a 	mov	r6,zero
    d254:	01d00934 	movhi	r7,16420
    d258:	00084c40 	call	84c4 <__muldf3>
    d25c:	000d883a 	mov	r6,zero
    d260:	000f883a 	mov	r7,zero
    d264:	1009883a 	mov	r4,r2
    d268:	180b883a 	mov	r5,r3
    d26c:	102b883a 	mov	r21,r2
    d270:	1827883a 	mov	r19,r3
    d274:	00082740 	call	8274 <__eqdf2>
    d278:	103fd91e 	bne	r2,zero,d1e0 <_dtoa_r+0x860>
    d27c:	d8800617 	ldw	r2,24(sp)
    d280:	ddc00217 	ldw	r23,8(sp)
    d284:	a011883a 	mov	r8,r20
    d288:	10800044 	addi	r2,r2,1
    d28c:	d8800215 	stw	r2,8(sp)
    d290:	0000a406 	br	d524 <_dtoa_r+0xba4>
    d294:	d8c00517 	ldw	r3,20(sp)
    d298:	1800e726 	beq	r3,zero,d638 <_dtoa_r+0xcb8>
    d29c:	d8c00217 	ldw	r3,8(sp)
    d2a0:	18c00088 	cmpgei	r3,r3,2
    d2a4:	1801e526 	beq	r3,zero,da3c <_dtoa_r+0x10bc>
    d2a8:	d8800317 	ldw	r2,12(sp)
    d2ac:	153fffc4 	addi	r20,r2,-1
    d2b0:	d8800717 	ldw	r2,28(sp)
    d2b4:	1501c50e 	bge	r2,r20,d9cc <_dtoa_r+0x104c>
    d2b8:	d8800717 	ldw	r2,28(sp)
    d2bc:	dd000715 	stw	r20,28(sp)
    d2c0:	a085c83a 	sub	r2,r20,r2
    d2c4:	a8ab883a 	add	r21,r21,r2
    d2c8:	0029883a 	mov	r20,zero
    d2cc:	d8800317 	ldw	r2,12(sp)
    d2d0:	10028b16 	blt	r2,zero,dd00 <_dtoa_r+0x1380>
    d2d4:	d8c00417 	ldw	r3,16(sp)
    d2d8:	b0ad883a 	add	r22,r22,r2
    d2dc:	1885883a 	add	r2,r3,r2
    d2e0:	1825883a 	mov	r18,r3
    d2e4:	d8800415 	stw	r2,16(sp)
    d2e8:	01400044 	movi	r5,1
    d2ec:	e009883a 	mov	r4,fp
    d2f0:	000fb300 	call	fb30 <__i2b>
    d2f4:	1021883a 	mov	r16,r2
    d2f8:	0480080e 	bge	zero,r18,d31c <_dtoa_r+0x99c>
    d2fc:	0580070e 	bge	zero,r22,d31c <_dtoa_r+0x99c>
    d300:	9005883a 	mov	r2,r18
    d304:	b481a916 	blt	r22,r18,d9ac <_dtoa_r+0x102c>
    d308:	d8c00417 	ldw	r3,16(sp)
    d30c:	90a5c83a 	sub	r18,r18,r2
    d310:	b0adc83a 	sub	r22,r22,r2
    d314:	1887c83a 	sub	r3,r3,r2
    d318:	d8c00415 	stw	r3,16(sp)
    d31c:	d8800717 	ldw	r2,28(sp)
    d320:	10001526 	beq	r2,zero,d378 <_dtoa_r+0x9f8>
    d324:	d8800517 	ldw	r2,20(sp)
    d328:	1001f526 	beq	r2,zero,db00 <_dtoa_r+0x1180>
    d32c:	05000f0e 	bge	zero,r20,d36c <_dtoa_r+0x9ec>
    d330:	800b883a 	mov	r5,r16
    d334:	a00d883a 	mov	r6,r20
    d338:	e009883a 	mov	r4,fp
    d33c:	000fea40 	call	fea4 <__pow5mult>
    d340:	b80d883a 	mov	r6,r23
    d344:	100b883a 	mov	r5,r2
    d348:	e009883a 	mov	r4,fp
    d34c:	1021883a 	mov	r16,r2
    d350:	000fbe00 	call	fbe0 <__multiply>
    d354:	b80b883a 	mov	r5,r23
    d358:	e009883a 	mov	r4,fp
    d35c:	d8800915 	stw	r2,36(sp)
    d360:	000f7640 	call	f764 <_Bfree>
    d364:	d8800917 	ldw	r2,36(sp)
    d368:	102f883a 	mov	r23,r2
    d36c:	d8800717 	ldw	r2,28(sp)
    d370:	150dc83a 	sub	r6,r2,r20
    d374:	15025d1e 	bne	r2,r20,dcec <_dtoa_r+0x136c>
    d378:	01400044 	movi	r5,1
    d37c:	e009883a 	mov	r4,fp
    d380:	000fb300 	call	fb30 <__i2b>
    d384:	1029883a 	mov	r20,r2
    d388:	0540bd16 	blt	zero,r21,d680 <_dtoa_r+0xd00>
    d38c:	d8800217 	ldw	r2,8(sp)
    d390:	10800088 	cmpgei	r2,r2,2
    d394:	10015626 	beq	r2,zero,d8f0 <_dtoa_r+0xf70>
    d398:	0023883a 	mov	r17,zero
    d39c:	00800044 	movi	r2,1
    d3a0:	a800c01e 	bne	r21,zero,d6a4 <_dtoa_r+0xd24>
    d3a4:	1585883a 	add	r2,r2,r22
    d3a8:	108007cc 	andi	r2,r2,31
    d3ac:	1000ac26 	beq	r2,zero,d660 <_dtoa_r+0xce0>
    d3b0:	00c00804 	movi	r3,32
    d3b4:	1887c83a 	sub	r3,r3,r2
    d3b8:	19000150 	cmplti	r4,r3,5
    d3bc:	20033d1e 	bne	r4,zero,e0b4 <_dtoa_r+0x1734>
    d3c0:	00c00704 	movi	r3,28
    d3c4:	1885c83a 	sub	r2,r3,r2
    d3c8:	d8c00417 	ldw	r3,16(sp)
    d3cc:	90a5883a 	add	r18,r18,r2
    d3d0:	b0ad883a 	add	r22,r22,r2
    d3d4:	1887883a 	add	r3,r3,r2
    d3d8:	d8c00415 	stw	r3,16(sp)
    d3dc:	d8800417 	ldw	r2,16(sp)
    d3e0:	00809916 	blt	zero,r2,d648 <_dtoa_r+0xcc8>
    d3e4:	0580050e 	bge	zero,r22,d3fc <_dtoa_r+0xa7c>
    d3e8:	a00b883a 	mov	r5,r20
    d3ec:	b00d883a 	mov	r6,r22
    d3f0:	e009883a 	mov	r4,fp
    d3f4:	000ffec0 	call	ffec <__lshift>
    d3f8:	1029883a 	mov	r20,r2
    d3fc:	d8800817 	ldw	r2,32(sp)
    d400:	10011d1e 	bne	r2,zero,d878 <_dtoa_r+0xef8>
    d404:	d8800317 	ldw	r2,12(sp)
    d408:	00810a0e 	bge	zero,r2,d834 <_dtoa_r+0xeb4>
    d40c:	d8800517 	ldw	r2,20(sp)
    d410:	1000b71e 	bne	r2,zero,d6f0 <_dtoa_r+0xd70>
    d414:	d8800617 	ldw	r2,24(sp)
    d418:	10800044 	addi	r2,r2,1
    d41c:	d8800215 	stw	r2,8(sp)
    d420:	dc800317 	ldw	r18,12(sp)
    d424:	dd400117 	ldw	r21,4(sp)
    d428:	04400044 	movi	r17,1
    d42c:	00000706 	br	d44c <_dtoa_r+0xacc>
    d430:	b80b883a 	mov	r5,r23
    d434:	000f883a 	mov	r7,zero
    d438:	01800284 	movi	r6,10
    d43c:	e009883a 	mov	r4,fp
    d440:	000f7880 	call	f788 <__multadd>
    d444:	102f883a 	mov	r23,r2
    d448:	8c400044 	addi	r17,r17,1
    d44c:	a00b883a 	mov	r5,r20
    d450:	b809883a 	mov	r4,r23
    d454:	000c7600 	call	c760 <quorem>
    d458:	14c00c04 	addi	r19,r2,48
    d45c:	ac45883a 	add	r2,r21,r17
    d460:	14ffffc5 	stb	r19,-1(r2)
    d464:	8cbff216 	blt	r17,r18,d430 <_dtoa_r+0xab0>
    d468:	d8800317 	ldw	r2,12(sp)
    d46c:	00815d0e 	bge	zero,r2,d9e4 <_dtoa_r+0x1064>
    d470:	d8c00117 	ldw	r3,4(sp)
    d474:	0023883a 	mov	r17,zero
    d478:	1891883a 	add	r8,r3,r2
    d47c:	b80b883a 	mov	r5,r23
    d480:	01800044 	movi	r6,1
    d484:	e009883a 	mov	r4,fp
    d488:	da000315 	stw	r8,12(sp)
    d48c:	000ffec0 	call	ffec <__lshift>
    d490:	a00b883a 	mov	r5,r20
    d494:	1009883a 	mov	r4,r2
    d498:	102f883a 	mov	r23,r2
    d49c:	00101740 	call	10174 <__mcmp>
    d4a0:	da000317 	ldw	r8,12(sp)
    d4a4:	0081540e 	bge	zero,r2,d9f8 <_dtoa_r+0x1078>
    d4a8:	413fffc3 	ldbu	r4,-1(r8)
    d4ac:	d9400117 	ldw	r5,4(sp)
    d4b0:	00000306 	br	d4c0 <_dtoa_r+0xb40>
    d4b4:	28c15a26 	beq	r5,r3,da20 <_dtoa_r+0x10a0>
    d4b8:	193fffc3 	ldbu	r4,-1(r3)
    d4bc:	1811883a 	mov	r8,r3
    d4c0:	20803fcc 	andi	r2,r4,255
    d4c4:	1080201c 	xori	r2,r2,128
    d4c8:	10bfe004 	addi	r2,r2,-128
    d4cc:	10800e60 	cmpeqi	r2,r2,57
    d4d0:	40ffffc4 	addi	r3,r8,-1
    d4d4:	103ff71e 	bne	r2,zero,d4b4 <_dtoa_r+0xb34>
    d4d8:	21000044 	addi	r4,r4,1
    d4dc:	19000005 	stb	r4,0(r3)
    d4e0:	a00b883a 	mov	r5,r20
    d4e4:	e009883a 	mov	r4,fp
    d4e8:	da000315 	stw	r8,12(sp)
    d4ec:	000f7640 	call	f764 <_Bfree>
    d4f0:	da000317 	ldw	r8,12(sp)
    d4f4:	80000b26 	beq	r16,zero,d524 <_dtoa_r+0xba4>
    d4f8:	88000526 	beq	r17,zero,d510 <_dtoa_r+0xb90>
    d4fc:	8c000426 	beq	r17,r16,d510 <_dtoa_r+0xb90>
    d500:	880b883a 	mov	r5,r17
    d504:	e009883a 	mov	r4,fp
    d508:	000f7640 	call	f764 <_Bfree>
    d50c:	da000317 	ldw	r8,12(sp)
    d510:	800b883a 	mov	r5,r16
    d514:	e009883a 	mov	r4,fp
    d518:	da000315 	stw	r8,12(sp)
    d51c:	000f7640 	call	f764 <_Bfree>
    d520:	da000317 	ldw	r8,12(sp)
    d524:	b80b883a 	mov	r5,r23
    d528:	e009883a 	mov	r4,fp
    d52c:	da000315 	stw	r8,12(sp)
    d530:	000f7640 	call	f764 <_Bfree>
    d534:	da000317 	ldw	r8,12(sp)
    d538:	d8801e17 	ldw	r2,120(sp)
    d53c:	d8c00217 	ldw	r3,8(sp)
    d540:	40000005 	stb	zero,0(r8)
    d544:	10c00015 	stw	r3,0(r2)
    d548:	d8802017 	ldw	r2,128(sp)
    d54c:	103d3e26 	beq	r2,zero,ca48 <_dtoa_r+0xc8>
    d550:	12000015 	stw	r8,0(r2)
    d554:	003d3c06 	br	ca48 <_dtoa_r+0xc8>
    d558:	d8000815 	stw	zero,32(sp)
    d55c:	b0002316 	blt	r22,zero,d5ec <_dtoa_r+0xc6c>
    d560:	d8000415 	stw	zero,16(sp)
    d564:	d8c00217 	ldw	r3,8(sp)
    d568:	dd400615 	stw	r21,24(sp)
    d56c:	d8000715 	stw	zero,28(sp)
    d570:	188002a8 	cmpgeui	r2,r3,10
    d574:	b56d883a 	add	r22,r22,r21
    d578:	103da726 	beq	r2,zero,cc18 <_dtoa_r+0x298>
    d57c:	00800044 	movi	r2,1
    d580:	d8800515 	stw	r2,20(sp)
    d584:	00bfffc4 	movi	r2,-1
    d588:	04000044 	movi	r16,1
    d58c:	d8000215 	stw	zero,8(sp)
    d590:	d8800315 	stw	r2,12(sp)
    d594:	d8001d15 	stw	zero,116(sp)
    d598:	d8800317 	ldw	r2,12(sp)
    d59c:	e0001115 	stw	zero,68(fp)
    d5a0:	000b883a 	mov	r5,zero
    d5a4:	d8800b15 	stw	r2,44(sp)
    d5a8:	003db806 	br	cc8c <_dtoa_r+0x30c>
    d5ac:	188000e0 	cmpeqi	r2,r3,3
    d5b0:	d8000515 	stw	zero,20(sp)
    d5b4:	1002a526 	beq	r2,zero,e04c <_dtoa_r+0x16cc>
    d5b8:	d8801d17 	ldw	r2,116(sp)
    d5bc:	d8c00617 	ldw	r3,24(sp)
    d5c0:	10c5883a 	add	r2,r2,r3
    d5c4:	d8800b15 	stw	r2,44(sp)
    d5c8:	10800044 	addi	r2,r2,1
    d5cc:	d8800315 	stw	r2,12(sp)
    d5d0:	100d883a 	mov	r6,r2
    d5d4:	00bda216 	blt	zero,r2,cc60 <_dtoa_r+0x2e0>
    d5d8:	01800044 	movi	r6,1
    d5dc:	003da006 	br	cc60 <_dtoa_r+0x2e0>
    d5e0:	00800044 	movi	r2,1
    d5e4:	d8800815 	stw	r2,32(sp)
    d5e8:	b03d7f0e 	bge	r22,zero,cbe8 <_dtoa_r+0x268>
    d5ec:	00800044 	movi	r2,1
    d5f0:	1405c83a 	sub	r2,r2,r16
    d5f4:	d8800415 	stw	r2,16(sp)
    d5f8:	002d883a 	mov	r22,zero
    d5fc:	003d7b06 	br	cbec <_dtoa_r+0x26c>
    d600:	a809883a 	mov	r4,r21
    d604:	00096500 	call	9650 <__floatsidf>
    d608:	900d883a 	mov	r6,r18
    d60c:	b00f883a 	mov	r7,r22
    d610:	1009883a 	mov	r4,r2
    d614:	180b883a 	mov	r5,r3
    d618:	00082740 	call	8274 <__eqdf2>
    d61c:	103d6126 	beq	r2,zero,cba4 <_dtoa_r+0x224>
    d620:	ad7fffc4 	addi	r21,r21,-1
    d624:	003d5f06 	br	cba4 <_dtoa_r+0x224>
    d628:	00800074 	movhi	r2,1
    d62c:	109e4904 	addi	r2,r2,31012
    d630:	d8800115 	stw	r2,4(sp)
    d634:	003d0406 	br	ca48 <_dtoa_r+0xc8>
    d638:	dd000717 	ldw	r20,28(sp)
    d63c:	dc800417 	ldw	r18,16(sp)
    d640:	0021883a 	mov	r16,zero
    d644:	003f2c06 	br	d2f8 <_dtoa_r+0x978>
    d648:	b80b883a 	mov	r5,r23
    d64c:	100d883a 	mov	r6,r2
    d650:	e009883a 	mov	r4,fp
    d654:	000ffec0 	call	ffec <__lshift>
    d658:	102f883a 	mov	r23,r2
    d65c:	003f6106 	br	d3e4 <_dtoa_r+0xa64>
    d660:	00800704 	movi	r2,28
    d664:	003f5806 	br	d3c8 <_dtoa_r+0xa48>
    d668:	01000804 	movi	r4,32
    d66c:	2089c83a 	sub	r4,r4,r2
    d670:	9908983a 	sll	r4,r19,r4
    d674:	003d1706 	br	cad4 <_dtoa_r+0x154>
    d678:	04000044 	movi	r16,1
    d67c:	003d6b06 	br	cc2c <_dtoa_r+0x2ac>
    d680:	100b883a 	mov	r5,r2
    d684:	a80d883a 	mov	r6,r21
    d688:	e009883a 	mov	r4,fp
    d68c:	000fea40 	call	fea4 <__pow5mult>
    d690:	d8c00217 	ldw	r3,8(sp)
    d694:	1029883a 	mov	r20,r2
    d698:	18c00090 	cmplti	r3,r3,2
    d69c:	18014b1e 	bne	r3,zero,dbcc <_dtoa_r+0x124c>
    d6a0:	0023883a 	mov	r17,zero
    d6a4:	a0800417 	ldw	r2,16(r20)
    d6a8:	10800104 	addi	r2,r2,4
    d6ac:	100490ba 	slli	r2,r2,2
    d6b0:	a085883a 	add	r2,r20,r2
    d6b4:	11000017 	ldw	r4,0(r2)
    d6b8:	000fa1c0 	call	fa1c <__hi0bits>
    d6bc:	00c00804 	movi	r3,32
    d6c0:	1885c83a 	sub	r2,r3,r2
    d6c4:	003f3706 	br	d3a4 <_dtoa_r+0xa24>
    d6c8:	800b883a 	mov	r5,r16
    d6cc:	000f883a 	mov	r7,zero
    d6d0:	01800284 	movi	r6,10
    d6d4:	e009883a 	mov	r4,fp
    d6d8:	000f7880 	call	f788 <__multadd>
    d6dc:	1021883a 	mov	r16,r2
    d6e0:	d8800b17 	ldw	r2,44(sp)
    d6e4:	0082460e 	bge	zero,r2,e000 <_dtoa_r+0x1680>
    d6e8:	dd400615 	stw	r21,24(sp)
    d6ec:	d8800315 	stw	r2,12(sp)
    d6f0:	0480b016 	blt	zero,r18,d9b4 <_dtoa_r+0x1034>
    d6f4:	88016c1e 	bne	r17,zero,dca8 <_dtoa_r+0x1328>
    d6f8:	8025883a 	mov	r18,r16
    d6fc:	dd800117 	ldw	r22,4(sp)
    d700:	d9000317 	ldw	r4,12(sp)
    d704:	98c0004c 	andi	r3,r19,1
    d708:	b0bfffc4 	addi	r2,r22,-1
    d70c:	1105883a 	add	r2,r2,r4
    d710:	d8800515 	stw	r2,20(sp)
    d714:	d8800217 	ldw	r2,8(sp)
    d718:	d8c00815 	stw	r3,32(sp)
    d71c:	1884b03a 	or	r2,r3,r2
    d720:	d8800715 	stw	r2,28(sp)
    d724:	00002b06 	br	d7d4 <_dtoa_r+0xe54>
    d728:	b809883a 	mov	r4,r23
    d72c:	d9400415 	stw	r5,16(sp)
    d730:	00101740 	call	10174 <__mcmp>
    d734:	d9400417 	ldw	r5,16(sp)
    d738:	e009883a 	mov	r4,fp
    d73c:	d8800315 	stw	r2,12(sp)
    d740:	000f7640 	call	f764 <_Bfree>
    d744:	d8800317 	ldw	r2,12(sp)
    d748:	1000021e 	bne	r2,zero,d754 <_dtoa_r+0xdd4>
    d74c:	d8c00717 	ldw	r3,28(sp)
    d750:	18021d26 	beq	r3,zero,dfc8 <_dtoa_r+0x1648>
    d754:	b2000044 	addi	r8,r22,1
    d758:	da000315 	stw	r8,12(sp)
    d75c:	88012116 	blt	r17,zero,dbe4 <_dtoa_r+0x1264>
    d760:	d8c00217 	ldw	r3,8(sp)
    d764:	88e2b03a 	or	r17,r17,r3
    d768:	d8c00817 	ldw	r3,32(sp)
    d76c:	1c62b03a 	or	r17,r3,r17
    d770:	88011c26 	beq	r17,zero,dbe4 <_dtoa_r+0x1264>
    d774:	00816616 	blt	zero,r2,dd10 <_dtoa_r+0x1390>
    d778:	d8800517 	ldw	r2,20(sp)
    d77c:	b4c00005 	stb	r19,0(r22)
    d780:	15816d26 	beq	r2,r22,dd38 <_dtoa_r+0x13b8>
    d784:	b80b883a 	mov	r5,r23
    d788:	000f883a 	mov	r7,zero
    d78c:	01800284 	movi	r6,10
    d790:	e009883a 	mov	r4,fp
    d794:	000f7880 	call	f788 <__multadd>
    d798:	102f883a 	mov	r23,r2
    d79c:	800b883a 	mov	r5,r16
    d7a0:	000f883a 	mov	r7,zero
    d7a4:	01800284 	movi	r6,10
    d7a8:	e009883a 	mov	r4,fp
    d7ac:	84801d26 	beq	r16,r18,d824 <_dtoa_r+0xea4>
    d7b0:	000f7880 	call	f788 <__multadd>
    d7b4:	900b883a 	mov	r5,r18
    d7b8:	000f883a 	mov	r7,zero
    d7bc:	01800284 	movi	r6,10
    d7c0:	e009883a 	mov	r4,fp
    d7c4:	1021883a 	mov	r16,r2
    d7c8:	000f7880 	call	f788 <__multadd>
    d7cc:	1025883a 	mov	r18,r2
    d7d0:	dd800317 	ldw	r22,12(sp)
    d7d4:	a00b883a 	mov	r5,r20
    d7d8:	b809883a 	mov	r4,r23
    d7dc:	000c7600 	call	c760 <quorem>
    d7e0:	800b883a 	mov	r5,r16
    d7e4:	b809883a 	mov	r4,r23
    d7e8:	102b883a 	mov	r21,r2
    d7ec:	00101740 	call	10174 <__mcmp>
    d7f0:	a00b883a 	mov	r5,r20
    d7f4:	900d883a 	mov	r6,r18
    d7f8:	e009883a 	mov	r4,fp
    d7fc:	1023883a 	mov	r17,r2
    d800:	00101cc0 	call	101cc <__mdiff>
    d804:	100b883a 	mov	r5,r2
    d808:	10800317 	ldw	r2,12(r2)
    d80c:	acc00c04 	addi	r19,r21,48
    d810:	103fc526 	beq	r2,zero,d728 <_dtoa_r+0xda8>
    d814:	e009883a 	mov	r4,fp
    d818:	000f7640 	call	f764 <_Bfree>
    d81c:	00800044 	movi	r2,1
    d820:	003fcc06 	br	d754 <_dtoa_r+0xdd4>
    d824:	000f7880 	call	f788 <__multadd>
    d828:	1021883a 	mov	r16,r2
    d82c:	1025883a 	mov	r18,r2
    d830:	003fe706 	br	d7d0 <_dtoa_r+0xe50>
    d834:	d8800217 	ldw	r2,8(sp)
    d838:	108000d0 	cmplti	r2,r2,3
    d83c:	10004026 	beq	r2,zero,d940 <_dtoa_r+0xfc0>
    d840:	d8800517 	ldw	r2,20(sp)
    d844:	103faa1e 	bne	r2,zero,d6f0 <_dtoa_r+0xd70>
    d848:	a00b883a 	mov	r5,r20
    d84c:	b809883a 	mov	r4,r23
    d850:	000c7600 	call	c760 <quorem>
    d854:	14c00c04 	addi	r19,r2,48
    d858:	d8800117 	ldw	r2,4(sp)
    d85c:	0023883a 	mov	r17,zero
    d860:	12000044 	addi	r8,r2,1
    d864:	14c00005 	stb	r19,0(r2)
    d868:	d8800617 	ldw	r2,24(sp)
    d86c:	10800044 	addi	r2,r2,1
    d870:	d8800215 	stw	r2,8(sp)
    d874:	003f0106 	br	d47c <_dtoa_r+0xafc>
    d878:	a00b883a 	mov	r5,r20
    d87c:	b809883a 	mov	r4,r23
    d880:	00101740 	call	10174 <__mcmp>
    d884:	103edf0e 	bge	r2,zero,d404 <_dtoa_r+0xa84>
    d888:	b80b883a 	mov	r5,r23
    d88c:	000f883a 	mov	r7,zero
    d890:	01800284 	movi	r6,10
    d894:	e009883a 	mov	r4,fp
    d898:	000f7880 	call	f788 <__multadd>
    d89c:	d8c00617 	ldw	r3,24(sp)
    d8a0:	102f883a 	mov	r23,r2
    d8a4:	d8800517 	ldw	r2,20(sp)
    d8a8:	1d7fffc4 	addi	r21,r3,-1
    d8ac:	103f861e 	bne	r2,zero,d6c8 <_dtoa_r+0xd48>
    d8b0:	d8800b17 	ldw	r2,44(sp)
    d8b4:	0081cb0e 	bge	zero,r2,dfe4 <_dtoa_r+0x1664>
    d8b8:	d8c00617 	ldw	r3,24(sp)
    d8bc:	d8800315 	stw	r2,12(sp)
    d8c0:	d8c00215 	stw	r3,8(sp)
    d8c4:	003ed606 	br	d420 <_dtoa_r+0xaa0>
    d8c8:	00800074 	movhi	r2,1
    d8cc:	1007883a 	mov	r3,r2
    d8d0:	18de5204 	addi	r3,r3,31048
    d8d4:	00800074 	movhi	r2,1
    d8d8:	d8c00115 	stw	r3,4(sp)
    d8dc:	109e52c4 	addi	r2,r2,31051
    d8e0:	003de506 	br	d078 <_dtoa_r+0x6f8>
    d8e4:	00800044 	movi	r2,1
    d8e8:	d8800515 	stw	r2,20(sp)
    d8ec:	003f3206 	br	d5b8 <_dtoa_r+0xc38>
    d8f0:	983ea91e 	bne	r19,zero,d398 <_dtoa_r+0xa18>
    d8f4:	00800434 	movhi	r2,16
    d8f8:	10bfffc4 	addi	r2,r2,-1
    d8fc:	8884703a 	and	r2,r17,r2
    d900:	103ea51e 	bne	r2,zero,d398 <_dtoa_r+0xa18>
    d904:	8c5ffc2c 	andhi	r17,r17,32752
    d908:	883ea326 	beq	r17,zero,d398 <_dtoa_r+0xa18>
    d90c:	d8800417 	ldw	r2,16(sp)
    d910:	b5800044 	addi	r22,r22,1
    d914:	04400044 	movi	r17,1
    d918:	10800044 	addi	r2,r2,1
    d91c:	d8800415 	stw	r2,16(sp)
    d920:	003e9e06 	br	d39c <_dtoa_r+0xa1c>
    d924:	00800044 	movi	r2,1
    d928:	d8800315 	stw	r2,12(sp)
    d92c:	d8801d15 	stw	r2,116(sp)
    d930:	003f1906 	br	d598 <_dtoa_r+0xc18>
    d934:	d8800b17 	ldw	r2,44(sp)
    d938:	dd400615 	stw	r21,24(sp)
    d93c:	d8800315 	stw	r2,12(sp)
    d940:	d8800317 	ldw	r2,12(sp)
    d944:	103e011e 	bne	r2,zero,d14c <_dtoa_r+0x7cc>
    d948:	a00b883a 	mov	r5,r20
    d94c:	e009883a 	mov	r4,fp
    d950:	000f883a 	mov	r7,zero
    d954:	01800144 	movi	r6,5
    d958:	000f7880 	call	f788 <__multadd>
    d95c:	100b883a 	mov	r5,r2
    d960:	b809883a 	mov	r4,r23
    d964:	1029883a 	mov	r20,r2
    d968:	00101740 	call	10174 <__mcmp>
    d96c:	00bdf70e 	bge	zero,r2,d14c <_dtoa_r+0x7cc>
    d970:	d8c00117 	ldw	r3,4(sp)
    d974:	00800c44 	movi	r2,49
    d978:	18800005 	stb	r2,0(r3)
    d97c:	d8800617 	ldw	r2,24(sp)
    d980:	1a000044 	addi	r8,r3,1
    d984:	14c00044 	addi	r19,r2,1
    d988:	a00b883a 	mov	r5,r20
    d98c:	e009883a 	mov	r4,fp
    d990:	da000315 	stw	r8,12(sp)
    d994:	000f7640 	call	f764 <_Bfree>
    d998:	98800044 	addi	r2,r19,1
    d99c:	d8800215 	stw	r2,8(sp)
    d9a0:	da000317 	ldw	r8,12(sp)
    d9a4:	803eda1e 	bne	r16,zero,d510 <_dtoa_r+0xb90>
    d9a8:	003ede06 	br	d524 <_dtoa_r+0xba4>
    d9ac:	b005883a 	mov	r2,r22
    d9b0:	003e5506 	br	d308 <_dtoa_r+0x988>
    d9b4:	800b883a 	mov	r5,r16
    d9b8:	900d883a 	mov	r6,r18
    d9bc:	e009883a 	mov	r4,fp
    d9c0:	000ffec0 	call	ffec <__lshift>
    d9c4:	1021883a 	mov	r16,r2
    d9c8:	003f4a06 	br	d6f4 <_dtoa_r+0xd74>
    d9cc:	1529c83a 	sub	r20,r2,r20
    d9d0:	003e3e06 	br	d2cc <_dtoa_r+0x94c>
    d9d4:	dcc00a15 	stw	r19,40(sp)
    d9d8:	dc400c15 	stw	r17,48(sp)
    d9dc:	04000084 	movi	r16,2
    d9e0:	003ccf06 	br	cd20 <_dtoa_r+0x3a0>
    d9e4:	00800044 	movi	r2,1
    d9e8:	003ea106 	br	d470 <_dtoa_r+0xaf0>
    d9ec:	00800044 	movi	r2,1
    d9f0:	d8800515 	stw	r2,20(sp)
    d9f4:	003c9506 	br	cc4c <_dtoa_r+0x2cc>
    d9f8:	1000021e 	bne	r2,zero,da04 <_dtoa_r+0x1084>
    d9fc:	98c0004c 	andi	r3,r19,1
    da00:	183ea91e 	bne	r3,zero,d4a8 <_dtoa_r+0xb28>
    da04:	40bfffc7 	ldb	r2,-1(r8)
    da08:	4007883a 	mov	r3,r8
    da0c:	423fffc4 	addi	r8,r8,-1
    da10:	10800c20 	cmpeqi	r2,r2,48
    da14:	103ffb1e 	bne	r2,zero,da04 <_dtoa_r+0x1084>
    da18:	1811883a 	mov	r8,r3
    da1c:	003eb006 	br	d4e0 <_dtoa_r+0xb60>
    da20:	d8c00117 	ldw	r3,4(sp)
    da24:	00800c44 	movi	r2,49
    da28:	18800005 	stb	r2,0(r3)
    da2c:	d8800217 	ldw	r2,8(sp)
    da30:	10800044 	addi	r2,r2,1
    da34:	d8800215 	stw	r2,8(sp)
    da38:	003ea906 	br	d4e0 <_dtoa_r+0xb60>
    da3c:	d8c00917 	ldw	r3,36(sp)
    da40:	18010e26 	beq	r3,zero,de7c <_dtoa_r+0x14fc>
    da44:	d8c00417 	ldw	r3,16(sp)
    da48:	10810cc4 	addi	r2,r2,1075
    da4c:	b0ad883a 	add	r22,r22,r2
    da50:	1885883a 	add	r2,r3,r2
    da54:	dd000717 	ldw	r20,28(sp)
    da58:	1825883a 	mov	r18,r3
    da5c:	d8800415 	stw	r2,16(sp)
    da60:	003e2106 	br	d2e8 <_dtoa_r+0x968>
    da64:	8009883a 	mov	r4,r16
    da68:	00096500 	call	9650 <__floatsidf>
    da6c:	d9800a17 	ldw	r6,40(sp)
    da70:	900f883a 	mov	r7,r18
    da74:	1009883a 	mov	r4,r2
    da78:	180b883a 	mov	r5,r3
    da7c:	00084c40 	call	84c4 <__muldf3>
    da80:	000d883a 	mov	r6,zero
    da84:	01d00734 	movhi	r7,16412
    da88:	1009883a 	mov	r4,r2
    da8c:	180b883a 	mov	r5,r3
    da90:	00070700 	call	7070 <__adddf3>
    da94:	1029883a 	mov	r20,r2
    da98:	00bf3034 	movhi	r2,64704
    da9c:	1885883a 	add	r2,r3,r2
    daa0:	d8800c15 	stw	r2,48(sp)
    daa4:	d9000a17 	ldw	r4,40(sp)
    daa8:	900b883a 	mov	r5,r18
    daac:	000d883a 	mov	r6,zero
    dab0:	01d00534 	movhi	r7,16404
    dab4:	0008c700 	call	8c70 <__subdf3>
    dab8:	d9c00c17 	ldw	r7,48(sp)
    dabc:	a00d883a 	mov	r6,r20
    dac0:	1009883a 	mov	r4,r2
    dac4:	180b883a 	mov	r5,r3
    dac8:	1025883a 	mov	r18,r2
    dacc:	1821883a 	mov	r16,r3
    dad0:	00082f40 	call	82f4 <__gedf2>
    dad4:	00812b16 	blt	zero,r2,df84 <_dtoa_r+0x1604>
    dad8:	d8800c17 	ldw	r2,48(sp)
    dadc:	a00d883a 	mov	r6,r20
    dae0:	9009883a 	mov	r4,r18
    dae4:	11e0003c 	xorhi	r7,r2,32768
    dae8:	800b883a 	mov	r5,r16
    daec:	00083dc0 	call	83dc <__ledf2>
    daf0:	103d780e 	bge	r2,zero,d0d4 <_dtoa_r+0x754>
    daf4:	0029883a 	mov	r20,zero
    daf8:	0021883a 	mov	r16,zero
    dafc:	003d9306 	br	d14c <_dtoa_r+0x7cc>
    db00:	d9800717 	ldw	r6,28(sp)
    db04:	b80b883a 	mov	r5,r23
    db08:	e009883a 	mov	r4,fp
    db0c:	000fea40 	call	fea4 <__pow5mult>
    db10:	102f883a 	mov	r23,r2
    db14:	003e1806 	br	d378 <_dtoa_r+0x9f8>
    db18:	d8800617 	ldw	r2,24(sp)
    db1c:	1000e326 	beq	r2,zero,deac <_dtoa_r+0x152c>
    db20:	00a9c83a 	sub	r20,zero,r2
    db24:	a08003cc 	andi	r2,r20,15
    db28:	100690fa 	slli	r3,r2,3
    db2c:	00800074 	movhi	r2,1
    db30:	109e9204 	addi	r2,r2,31304
    db34:	10c5883a 	add	r2,r2,r3
    db38:	11800017 	ldw	r6,0(r2)
    db3c:	11c00117 	ldw	r7,4(r2)
    db40:	9809883a 	mov	r4,r19
    db44:	880b883a 	mov	r5,r17
    db48:	a029d13a 	srai	r20,r20,4
    db4c:	00084c40 	call	84c4 <__muldf3>
    db50:	d8800a15 	stw	r2,40(sp)
    db54:	1825883a 	mov	r18,r3
    db58:	a0013126 	beq	r20,zero,e020 <_dtoa_r+0x16a0>
    db5c:	02000074 	movhi	r8,1
    db60:	04000084 	movi	r16,2
    db64:	421e8804 	addi	r8,r8,31264
    db68:	180b883a 	mov	r5,r3
    db6c:	dc400c15 	stw	r17,48(sp)
    db70:	1009883a 	mov	r4,r2
    db74:	8023883a 	mov	r17,r16
    db78:	0007883a 	mov	r3,zero
    db7c:	4021883a 	mov	r16,r8
    db80:	a180004c 	andi	r6,r20,1
    db84:	30000726 	beq	r6,zero,dba4 <_dtoa_r+0x1224>
    db88:	81800017 	ldw	r6,0(r16)
    db8c:	81c00117 	ldw	r7,4(r16)
    db90:	8c400044 	addi	r17,r17,1
    db94:	00084c40 	call	84c4 <__muldf3>
    db98:	180b883a 	mov	r5,r3
    db9c:	1009883a 	mov	r4,r2
    dba0:	00c00044 	movi	r3,1
    dba4:	a029d07a 	srai	r20,r20,1
    dba8:	84000204 	addi	r16,r16,8
    dbac:	a03ff41e 	bne	r20,zero,db80 <_dtoa_r+0x1200>
    dbb0:	18c03fcc 	andi	r3,r3,255
    dbb4:	8821883a 	mov	r16,r17
    dbb8:	dc400c17 	ldw	r17,48(sp)
    dbbc:	183c7126 	beq	r3,zero,cd84 <_dtoa_r+0x404>
    dbc0:	d9000a15 	stw	r4,40(sp)
    dbc4:	2825883a 	mov	r18,r5
    dbc8:	003c6e06 	br	cd84 <_dtoa_r+0x404>
    dbcc:	983eb41e 	bne	r19,zero,d6a0 <_dtoa_r+0xd20>
    dbd0:	00800434 	movhi	r2,16
    dbd4:	10bfffc4 	addi	r2,r2,-1
    dbd8:	8884703a 	and	r2,r17,r2
    dbdc:	103f4926 	beq	r2,zero,d904 <_dtoa_r+0xf84>
    dbe0:	003eaf06 	br	d6a0 <_dtoa_r+0xd20>
    dbe4:	00800e0e 	bge	zero,r2,dc20 <_dtoa_r+0x12a0>
    dbe8:	b80b883a 	mov	r5,r23
    dbec:	01800044 	movi	r6,1
    dbf0:	e009883a 	mov	r4,fp
    dbf4:	da000215 	stw	r8,8(sp)
    dbf8:	000ffec0 	call	ffec <__lshift>
    dbfc:	a00b883a 	mov	r5,r20
    dc00:	1009883a 	mov	r4,r2
    dc04:	102f883a 	mov	r23,r2
    dc08:	00101740 	call	10174 <__mcmp>
    dc0c:	da000217 	ldw	r8,8(sp)
    dc10:	0080e30e 	bge	zero,r2,dfa0 <_dtoa_r+0x1620>
    dc14:	98c00e60 	cmpeqi	r3,r19,57
    dc18:	1800cf1e 	bne	r3,zero,df58 <_dtoa_r+0x15d8>
    dc1c:	acc00c44 	addi	r19,r21,49
    dc20:	8023883a 	mov	r17,r16
    dc24:	d8800617 	ldw	r2,24(sp)
    dc28:	b4c00005 	stb	r19,0(r22)
    dc2c:	9021883a 	mov	r16,r18
    dc30:	10800044 	addi	r2,r2,1
    dc34:	d8800215 	stw	r2,8(sp)
    dc38:	003e2906 	br	d4e0 <_dtoa_r+0xb60>
    dc3c:	b82b883a 	mov	r21,r23
    dc40:	ddc00217 	ldw	r23,8(sp)
    dc44:	200d883a 	mov	r6,r4
    dc48:	280f883a 	mov	r7,r5
    dc4c:	00070700 	call	7070 <__adddf3>
    dc50:	102d883a 	mov	r22,r2
    dc54:	1009883a 	mov	r4,r2
    dc58:	d8800617 	ldw	r2,24(sp)
    dc5c:	800d883a 	mov	r6,r16
    dc60:	900f883a 	mov	r7,r18
    dc64:	10800044 	addi	r2,r2,1
    dc68:	180b883a 	mov	r5,r3
    dc6c:	1823883a 	mov	r17,r3
    dc70:	1027883a 	mov	r19,r2
    dc74:	d8800215 	stw	r2,8(sp)
    dc78:	00082f40 	call	82f4 <__gedf2>
    dc7c:	00808916 	blt	zero,r2,dea4 <_dtoa_r+0x1524>
    dc80:	800d883a 	mov	r6,r16
    dc84:	900f883a 	mov	r7,r18
    dc88:	b009883a 	mov	r4,r22
    dc8c:	880b883a 	mov	r5,r17
    dc90:	00082740 	call	8274 <__eqdf2>
    dc94:	1000021e 	bne	r2,zero,dca0 <_dtoa_r+0x1320>
    dc98:	ad40004c 	andi	r21,r21,1
    dc9c:	a800811e 	bne	r21,zero,dea4 <_dtoa_r+0x1524>
    dca0:	a011883a 	mov	r8,r20
    dca4:	003e1f06 	br	d524 <_dtoa_r+0xba4>
    dca8:	81400117 	ldw	r5,4(r16)
    dcac:	e009883a 	mov	r4,fp
    dcb0:	000f6c00 	call	f6c0 <_Balloc>
    dcb4:	1023883a 	mov	r17,r2
    dcb8:	1000f326 	beq	r2,zero,e088 <_dtoa_r+0x1708>
    dcbc:	81800417 	ldw	r6,16(r16)
    dcc0:	81400304 	addi	r5,r16,12
    dcc4:	11000304 	addi	r4,r2,12
    dcc8:	31800084 	addi	r6,r6,2
    dccc:	300c90ba 	slli	r6,r6,2
    dcd0:	000a1d40 	call	a1d4 <memcpy>
    dcd4:	01800044 	movi	r6,1
    dcd8:	880b883a 	mov	r5,r17
    dcdc:	e009883a 	mov	r4,fp
    dce0:	000ffec0 	call	ffec <__lshift>
    dce4:	1025883a 	mov	r18,r2
    dce8:	003e8406 	br	d6fc <_dtoa_r+0xd7c>
    dcec:	b80b883a 	mov	r5,r23
    dcf0:	e009883a 	mov	r4,fp
    dcf4:	000fea40 	call	fea4 <__pow5mult>
    dcf8:	102f883a 	mov	r23,r2
    dcfc:	003d9e06 	br	d378 <_dtoa_r+0x9f8>
    dd00:	d8800417 	ldw	r2,16(sp)
    dd04:	d8c00317 	ldw	r3,12(sp)
    dd08:	10e5c83a 	sub	r18,r2,r3
    dd0c:	003d7606 	br	d2e8 <_dtoa_r+0x968>
    dd10:	98800e58 	cmpnei	r2,r19,57
    dd14:	10009026 	beq	r2,zero,df58 <_dtoa_r+0x15d8>
    dd18:	d8800617 	ldw	r2,24(sp)
    dd1c:	98c00044 	addi	r3,r19,1
    dd20:	8023883a 	mov	r17,r16
    dd24:	10800044 	addi	r2,r2,1
    dd28:	d8800215 	stw	r2,8(sp)
    dd2c:	b0c00005 	stb	r3,0(r22)
    dd30:	9021883a 	mov	r16,r18
    dd34:	003dea06 	br	d4e0 <_dtoa_r+0xb60>
    dd38:	d8800617 	ldw	r2,24(sp)
    dd3c:	8023883a 	mov	r17,r16
    dd40:	9021883a 	mov	r16,r18
    dd44:	10800044 	addi	r2,r2,1
    dd48:	d8800215 	stw	r2,8(sp)
    dd4c:	003dcb06 	br	d47c <_dtoa_r+0xafc>
    dd50:	d9400c17 	ldw	r5,48(sp)
    dd54:	a009883a 	mov	r4,r20
    dd58:	00084c40 	call	84c4 <__muldf3>
    dd5c:	d9400117 	ldw	r5,4(sp)
    dd60:	d9000f17 	ldw	r4,60(sp)
    dd64:	d9800d17 	ldw	r6,52(sp)
    dd68:	d8800a15 	stw	r2,40(sp)
    dd6c:	29000005 	stb	r4,0(r5)
    dd70:	d8c00c15 	stw	r3,48(sp)
    dd74:	31000058 	cmpnei	r4,r6,1
    dd78:	da000e17 	ldw	r8,56(sp)
    dd7c:	29a9883a 	add	r20,r5,r6
    dd80:	20009d26 	beq	r4,zero,dff8 <_dtoa_r+0x1678>
    dd84:	dc400d15 	stw	r17,52(sp)
    dd88:	8009883a 	mov	r4,r16
    dd8c:	900b883a 	mov	r5,r18
    dd90:	4023883a 	mov	r17,r8
    dd94:	dcc00e15 	stw	r19,56(sp)
    dd98:	000d883a 	mov	r6,zero
    dd9c:	01d00934 	movhi	r7,16420
    dda0:	00084c40 	call	84c4 <__muldf3>
    dda4:	180b883a 	mov	r5,r3
    dda8:	1009883a 	mov	r4,r2
    ddac:	1825883a 	mov	r18,r3
    ddb0:	1027883a 	mov	r19,r2
    ddb4:	00095d00 	call	95d0 <__fixdfsi>
    ddb8:	1009883a 	mov	r4,r2
    ddbc:	1021883a 	mov	r16,r2
    ddc0:	00096500 	call	9650 <__floatsidf>
    ddc4:	9809883a 	mov	r4,r19
    ddc8:	900b883a 	mov	r5,r18
    ddcc:	100d883a 	mov	r6,r2
    ddd0:	180f883a 	mov	r7,r3
    ddd4:	8c400044 	addi	r17,r17,1
    ddd8:	84000c04 	addi	r16,r16,48
    dddc:	0008c700 	call	8c70 <__subdf3>
    dde0:	8c3fffc5 	stb	r16,-1(r17)
    dde4:	1009883a 	mov	r4,r2
    dde8:	180b883a 	mov	r5,r3
    ddec:	a47fea1e 	bne	r20,r17,dd98 <_dtoa_r+0x1418>
    ddf0:	dc400d17 	ldw	r17,52(sp)
    ddf4:	dcc00e17 	ldw	r19,56(sp)
    ddf8:	1021883a 	mov	r16,r2
    ddfc:	1825883a 	mov	r18,r3
    de00:	d9000a17 	ldw	r4,40(sp)
    de04:	d9400c17 	ldw	r5,48(sp)
    de08:	000d883a 	mov	r6,zero
    de0c:	01cff834 	movhi	r7,16352
    de10:	00070700 	call	7070 <__adddf3>
    de14:	800d883a 	mov	r6,r16
    de18:	900f883a 	mov	r7,r18
    de1c:	1009883a 	mov	r4,r2
    de20:	180b883a 	mov	r5,r3
    de24:	00083dc0 	call	83dc <__ledf2>
    de28:	10005916 	blt	r2,zero,df90 <_dtoa_r+0x1610>
    de2c:	d9800a17 	ldw	r6,40(sp)
    de30:	d9c00c17 	ldw	r7,48(sp)
    de34:	0009883a 	mov	r4,zero
    de38:	014ff834 	movhi	r5,16352
    de3c:	0008c700 	call	8c70 <__subdf3>
    de40:	800d883a 	mov	r6,r16
    de44:	900f883a 	mov	r7,r18
    de48:	1009883a 	mov	r4,r2
    de4c:	180b883a 	mov	r5,r3
    de50:	00082f40 	call	82f4 <__gedf2>
    de54:	00bc9f0e 	bge	zero,r2,d0d4 <_dtoa_r+0x754>
    de58:	a0bfffc7 	ldb	r2,-1(r20)
    de5c:	a011883a 	mov	r8,r20
    de60:	a53fffc4 	addi	r20,r20,-1
    de64:	10800c20 	cmpeqi	r2,r2,48
    de68:	103ffb1e 	bne	r2,zero,de58 <_dtoa_r+0x14d8>
    de6c:	d8801017 	ldw	r2,64(sp)
    de70:	10800044 	addi	r2,r2,1
    de74:	d8800215 	stw	r2,8(sp)
    de78:	003daa06 	br	d524 <_dtoa_r+0xba4>
    de7c:	d8c01117 	ldw	r3,68(sp)
    de80:	d9000417 	ldw	r4,16(sp)
    de84:	00800d84 	movi	r2,54
    de88:	10c5c83a 	sub	r2,r2,r3
    de8c:	b0ad883a 	add	r22,r22,r2
    de90:	2085883a 	add	r2,r4,r2
    de94:	dd000717 	ldw	r20,28(sp)
    de98:	2025883a 	mov	r18,r4
    de9c:	d8800415 	stw	r2,16(sp)
    dea0:	003d1106 	br	d2e8 <_dtoa_r+0x968>
    dea4:	d9000117 	ldw	r4,4(sp)
    dea8:	003c4e06 	br	cfe4 <_dtoa_r+0x664>
    deac:	dcc00a15 	stw	r19,40(sp)
    deb0:	8825883a 	mov	r18,r17
    deb4:	04000084 	movi	r16,2
    deb8:	003bb206 	br	cd84 <_dtoa_r+0x404>
    debc:	d8800317 	ldw	r2,12(sp)
    dec0:	103ee826 	beq	r2,zero,da64 <_dtoa_r+0x10e4>
    dec4:	d8800b17 	ldw	r2,44(sp)
    dec8:	00bc820e 	bge	zero,r2,d0d4 <_dtoa_r+0x754>
    decc:	900b883a 	mov	r5,r18
    ded0:	a009883a 	mov	r4,r20
    ded4:	000d883a 	mov	r6,zero
    ded8:	01d00934 	movhi	r7,16420
    dedc:	00084c40 	call	84c4 <__muldf3>
    dee0:	81000044 	addi	r4,r16,1
    dee4:	1029883a 	mov	r20,r2
    dee8:	1825883a 	mov	r18,r3
    deec:	d8800a15 	stw	r2,40(sp)
    def0:	00096500 	call	9650 <__floatsidf>
    def4:	a00d883a 	mov	r6,r20
    def8:	900f883a 	mov	r7,r18
    defc:	1009883a 	mov	r4,r2
    df00:	180b883a 	mov	r5,r3
    df04:	00084c40 	call	84c4 <__muldf3>
    df08:	1009883a 	mov	r4,r2
    df0c:	000d883a 	mov	r6,zero
    df10:	01d00734 	movhi	r7,16412
    df14:	180b883a 	mov	r5,r3
    df18:	00070700 	call	7070 <__adddf3>
    df1c:	d9000617 	ldw	r4,24(sp)
    df20:	1029883a 	mov	r20,r2
    df24:	00bf3034 	movhi	r2,64704
    df28:	1887883a 	add	r3,r3,r2
    df2c:	d8800b17 	ldw	r2,44(sp)
    df30:	213fffc4 	addi	r4,r4,-1
    df34:	d9001015 	stw	r4,64(sp)
    df38:	d8c00c15 	stw	r3,48(sp)
    df3c:	d8800d15 	stw	r2,52(sp)
    df40:	003baf06 	br	ce00 <_dtoa_r+0x480>
    df44:	00c00c44 	movi	r3,49
    df48:	9cc00044 	addi	r19,r19,1
    df4c:	003c2e06 	br	d008 <_dtoa_r+0x688>
    df50:	b0800044 	addi	r2,r22,1
    df54:	d8800315 	stw	r2,12(sp)
    df58:	00800e44 	movi	r2,57
    df5c:	b0800005 	stb	r2,0(r22)
    df60:	d8800617 	ldw	r2,24(sp)
    df64:	8023883a 	mov	r17,r16
    df68:	da000317 	ldw	r8,12(sp)
    df6c:	10800044 	addi	r2,r2,1
    df70:	d9400117 	ldw	r5,4(sp)
    df74:	d8800215 	stw	r2,8(sp)
    df78:	9021883a 	mov	r16,r18
    df7c:	01000e44 	movi	r4,57
    df80:	003d4f06 	br	d4c0 <_dtoa_r+0xb40>
    df84:	0029883a 	mov	r20,zero
    df88:	0021883a 	mov	r16,zero
    df8c:	003e7806 	br	d970 <_dtoa_r+0xff0>
    df90:	d8801017 	ldw	r2,64(sp)
    df94:	d9000117 	ldw	r4,4(sp)
    df98:	14c00044 	addi	r19,r2,1
    df9c:	003c1106 	br	cfe4 <_dtoa_r+0x664>
    dfa0:	103f1f1e 	bne	r2,zero,dc20 <_dtoa_r+0x12a0>
    dfa4:	9880004c 	andi	r2,r19,1
    dfa8:	103f1a1e 	bne	r2,zero,dc14 <_dtoa_r+0x1294>
    dfac:	003f1c06 	br	dc20 <_dtoa_r+0x12a0>
    dfb0:	d8801017 	ldw	r2,64(sp)
    dfb4:	ddc00c17 	ldw	r23,48(sp)
    dfb8:	a811883a 	mov	r8,r21
    dfbc:	10800044 	addi	r2,r2,1
    dfc0:	d8800215 	stw	r2,8(sp)
    dfc4:	003d5706 	br	d524 <_dtoa_r+0xba4>
    dfc8:	98800e60 	cmpeqi	r2,r19,57
    dfcc:	103fe01e 	bne	r2,zero,df50 <_dtoa_r+0x15d0>
    dfd0:	0440010e 	bge	zero,r17,dfd8 <_dtoa_r+0x1658>
    dfd4:	acc00c44 	addi	r19,r21,49
    dfd8:	8023883a 	mov	r17,r16
    dfdc:	b2000044 	addi	r8,r22,1
    dfe0:	003f1006 	br	dc24 <_dtoa_r+0x12a4>
    dfe4:	d8800217 	ldw	r2,8(sp)
    dfe8:	108000c8 	cmpgei	r2,r2,3
    dfec:	103e511e 	bne	r2,zero,d934 <_dtoa_r+0xfb4>
    dff0:	dd400615 	stw	r21,24(sp)
    dff4:	003e1406 	br	d848 <_dtoa_r+0xec8>
    dff8:	4029883a 	mov	r20,r8
    dffc:	003f8006 	br	de00 <_dtoa_r+0x1480>
    e000:	d8800217 	ldw	r2,8(sp)
    e004:	108000c8 	cmpgei	r2,r2,3
    e008:	103e4a1e 	bne	r2,zero,d934 <_dtoa_r+0xfb4>
    e00c:	d8800b17 	ldw	r2,44(sp)
    e010:	dd400615 	stw	r21,24(sp)
    e014:	d8800315 	stw	r2,12(sp)
    e018:	04bdb60e 	bge	zero,r18,d6f4 <_dtoa_r+0xd74>
    e01c:	003e6506 	br	d9b4 <_dtoa_r+0x1034>
    e020:	04000084 	movi	r16,2
    e024:	003b5706 	br	cd84 <_dtoa_r+0x404>
    e028:	01c00074 	movhi	r7,1
    e02c:	01000074 	movhi	r4,1
    e030:	39de5604 	addi	r7,r7,31064
    e034:	000d883a 	mov	r6,zero
    e038:	01406a84 	movi	r5,426
    e03c:	211e5b04 	addi	r4,r4,31084
    e040:	00124300 	call	12430 <__assert_func>
    e044:	000b883a 	mov	r5,zero
    e048:	003b1006 	br	cc8c <_dtoa_r+0x30c>
    e04c:	e0001115 	stw	zero,68(fp)
    e050:	000b883a 	mov	r5,zero
    e054:	e009883a 	mov	r4,fp
    e058:	000f6c00 	call	f6c0 <_Balloc>
    e05c:	d8800115 	stw	r2,4(sp)
    e060:	103ff126 	beq	r2,zero,e028 <_dtoa_r+0x16a8>
    e064:	d8800117 	ldw	r2,4(sp)
    e068:	d8001d15 	stw	zero,116(sp)
    e06c:	e0801015 	stw	r2,64(fp)
    e070:	00bfffc4 	movi	r2,-1
    e074:	d8800315 	stw	r2,12(sp)
    e078:	d8800b15 	stw	r2,44(sp)
    e07c:	00800044 	movi	r2,1
    e080:	d8800515 	stw	r2,20(sp)
    e084:	003c1306 	br	d0d4 <_dtoa_r+0x754>
    e088:	01c00074 	movhi	r7,1
    e08c:	01000074 	movhi	r4,1
    e090:	39de5604 	addi	r7,r7,31064
    e094:	000d883a 	mov	r6,zero
    e098:	0140ba84 	movi	r5,746
    e09c:	211e5b04 	addi	r4,r4,31084
    e0a0:	00124300 	call	12430 <__assert_func>
    e0a4:	00800074 	movhi	r2,1
    e0a8:	109e5304 	addi	r2,r2,31052
    e0ac:	d8800115 	stw	r2,4(sp)
    e0b0:	003a6506 	br	ca48 <_dtoa_r+0xc8>
    e0b4:	18c00120 	cmpeqi	r3,r3,4
    e0b8:	183cc81e 	bne	r3,zero,d3dc <_dtoa_r+0xa5c>
    e0bc:	00c00f04 	movi	r3,60
    e0c0:	1885c83a 	sub	r2,r3,r2
    e0c4:	003cc006 	br	d3c8 <_dtoa_r+0xa48>

0000e0c8 <__sflush_r>:
    e0c8:	2880030b 	ldhu	r2,12(r5)
    e0cc:	defffb04 	addi	sp,sp,-20
    e0d0:	dcc00315 	stw	r19,12(sp)
    e0d4:	dc000015 	stw	r16,0(sp)
    e0d8:	dfc00415 	stw	ra,16(sp)
    e0dc:	dc800215 	stw	r18,8(sp)
    e0e0:	dc400115 	stw	r17,4(sp)
    e0e4:	10c0020c 	andi	r3,r2,8
    e0e8:	2821883a 	mov	r16,r5
    e0ec:	2027883a 	mov	r19,r4
    e0f0:	18003f1e 	bne	r3,zero,e1f0 <__sflush_r+0x128>
    e0f4:	28c00117 	ldw	r3,4(r5)
    e0f8:	10820014 	ori	r2,r2,2048
    e0fc:	2880030d 	sth	r2,12(r5)
    e100:	00c0550e 	bge	zero,r3,e258 <__sflush_r+0x190>
    e104:	82000a17 	ldw	r8,40(r16)
    e108:	40003126 	beq	r8,zero,e1d0 <__sflush_r+0x108>
    e10c:	9c400017 	ldw	r17,0(r19)
    e110:	1104000c 	andi	r4,r2,4096
    e114:	98000015 	stw	zero,0(r19)
    e118:	1007883a 	mov	r3,r2
    e11c:	2000531e 	bne	r4,zero,e26c <__sflush_r+0x1a4>
    e120:	81400717 	ldw	r5,28(r16)
    e124:	01c00044 	movi	r7,1
    e128:	000d883a 	mov	r6,zero
    e12c:	9809883a 	mov	r4,r19
    e130:	403ee83a 	callr	r8
    e134:	10ffffd8 	cmpnei	r3,r2,-1
    e138:	18005826 	beq	r3,zero,e29c <__sflush_r+0x1d4>
    e13c:	80c0030b 	ldhu	r3,12(r16)
    e140:	82000a17 	ldw	r8,40(r16)
    e144:	18c0010c 	andi	r3,r3,4
    e148:	18000626 	beq	r3,zero,e164 <__sflush_r+0x9c>
    e14c:	81000117 	ldw	r4,4(r16)
    e150:	80c00c17 	ldw	r3,48(r16)
    e154:	1105c83a 	sub	r2,r2,r4
    e158:	18000226 	beq	r3,zero,e164 <__sflush_r+0x9c>
    e15c:	80c00f17 	ldw	r3,60(r16)
    e160:	10c5c83a 	sub	r2,r2,r3
    e164:	81400717 	ldw	r5,28(r16)
    e168:	100d883a 	mov	r6,r2
    e16c:	000f883a 	mov	r7,zero
    e170:	9809883a 	mov	r4,r19
    e174:	403ee83a 	callr	r8
    e178:	10ffffd8 	cmpnei	r3,r2,-1
    e17c:	18003d1e 	bne	r3,zero,e274 <__sflush_r+0x1ac>
    e180:	99000017 	ldw	r4,0(r19)
    e184:	80c0030b 	ldhu	r3,12(r16)
    e188:	20004e26 	beq	r4,zero,e2c4 <__sflush_r+0x1fc>
    e18c:	21400760 	cmpeqi	r5,r4,29
    e190:	2800021e 	bne	r5,zero,e19c <__sflush_r+0xd4>
    e194:	210005a0 	cmpeqi	r4,r4,22
    e198:	20002c26 	beq	r4,zero,e24c <__sflush_r+0x184>
    e19c:	80800417 	ldw	r2,16(r16)
    e1a0:	18fdffcc 	andi	r3,r3,63487
    e1a4:	80c0030d 	sth	r3,12(r16)
    e1a8:	80000115 	stw	zero,4(r16)
    e1ac:	80800015 	stw	r2,0(r16)
    e1b0:	81400c17 	ldw	r5,48(r16)
    e1b4:	9c400015 	stw	r17,0(r19)
    e1b8:	28000526 	beq	r5,zero,e1d0 <__sflush_r+0x108>
    e1bc:	80801004 	addi	r2,r16,64
    e1c0:	28800226 	beq	r5,r2,e1cc <__sflush_r+0x104>
    e1c4:	9809883a 	mov	r4,r19
    e1c8:	000e89c0 	call	e89c <_free_r>
    e1cc:	80000c15 	stw	zero,48(r16)
    e1d0:	0005883a 	mov	r2,zero
    e1d4:	dfc00417 	ldw	ra,16(sp)
    e1d8:	dcc00317 	ldw	r19,12(sp)
    e1dc:	dc800217 	ldw	r18,8(sp)
    e1e0:	dc400117 	ldw	r17,4(sp)
    e1e4:	dc000017 	ldw	r16,0(sp)
    e1e8:	dec00504 	addi	sp,sp,20
    e1ec:	f800283a 	ret
    e1f0:	2c800417 	ldw	r18,16(r5)
    e1f4:	903ff626 	beq	r18,zero,e1d0 <__sflush_r+0x108>
    e1f8:	2c400017 	ldw	r17,0(r5)
    e1fc:	108000cc 	andi	r2,r2,3
    e200:	2c800015 	stw	r18,0(r5)
    e204:	8ca3c83a 	sub	r17,r17,r18
    e208:	1000161e 	bne	r2,zero,e264 <__sflush_r+0x19c>
    e20c:	28800517 	ldw	r2,20(r5)
    e210:	80800215 	stw	r2,8(r16)
    e214:	04400316 	blt	zero,r17,e224 <__sflush_r+0x15c>
    e218:	003fed06 	br	e1d0 <__sflush_r+0x108>
    e21c:	90a5883a 	add	r18,r18,r2
    e220:	047feb0e 	bge	zero,r17,e1d0 <__sflush_r+0x108>
    e224:	80800917 	ldw	r2,36(r16)
    e228:	81400717 	ldw	r5,28(r16)
    e22c:	880f883a 	mov	r7,r17
    e230:	900d883a 	mov	r6,r18
    e234:	9809883a 	mov	r4,r19
    e238:	103ee83a 	callr	r2
    e23c:	88a3c83a 	sub	r17,r17,r2
    e240:	00bff616 	blt	zero,r2,e21c <__sflush_r+0x154>
    e244:	80c0030b 	ldhu	r3,12(r16)
    e248:	00bfffc4 	movi	r2,-1
    e24c:	18c01014 	ori	r3,r3,64
    e250:	80c0030d 	sth	r3,12(r16)
    e254:	003fdf06 	br	e1d4 <__sflush_r+0x10c>
    e258:	28c00f17 	ldw	r3,60(r5)
    e25c:	00ffa916 	blt	zero,r3,e104 <__sflush_r+0x3c>
    e260:	003fdb06 	br	e1d0 <__sflush_r+0x108>
    e264:	0005883a 	mov	r2,zero
    e268:	003fe906 	br	e210 <__sflush_r+0x148>
    e26c:	80801417 	ldw	r2,80(r16)
    e270:	003fb406 	br	e144 <__sflush_r+0x7c>
    e274:	80c0030b 	ldhu	r3,12(r16)
    e278:	81000417 	ldw	r4,16(r16)
    e27c:	80000115 	stw	zero,4(r16)
    e280:	197dffcc 	andi	r5,r3,63487
    e284:	8140030d 	sth	r5,12(r16)
    e288:	81000015 	stw	r4,0(r16)
    e28c:	18c4000c 	andi	r3,r3,4096
    e290:	183fc726 	beq	r3,zero,e1b0 <__sflush_r+0xe8>
    e294:	80801415 	stw	r2,80(r16)
    e298:	003fc506 	br	e1b0 <__sflush_r+0xe8>
    e29c:	98c00017 	ldw	r3,0(r19)
    e2a0:	183fa626 	beq	r3,zero,e13c <__sflush_r+0x74>
    e2a4:	19000760 	cmpeqi	r4,r3,29
    e2a8:	20000e1e 	bne	r4,zero,e2e4 <__sflush_r+0x21c>
    e2ac:	18c00598 	cmpnei	r3,r3,22
    e2b0:	18000c26 	beq	r3,zero,e2e4 <__sflush_r+0x21c>
    e2b4:	80c0030b 	ldhu	r3,12(r16)
    e2b8:	18c01014 	ori	r3,r3,64
    e2bc:	80c0030d 	sth	r3,12(r16)
    e2c0:	003fc406 	br	e1d4 <__sflush_r+0x10c>
    e2c4:	81000417 	ldw	r4,16(r16)
    e2c8:	197dffcc 	andi	r5,r3,63487
    e2cc:	8140030d 	sth	r5,12(r16)
    e2d0:	80000115 	stw	zero,4(r16)
    e2d4:	81000015 	stw	r4,0(r16)
    e2d8:	18c4000c 	andi	r3,r3,4096
    e2dc:	183fb426 	beq	r3,zero,e1b0 <__sflush_r+0xe8>
    e2e0:	003fec06 	br	e294 <__sflush_r+0x1cc>
    e2e4:	9c400015 	stw	r17,0(r19)
    e2e8:	0005883a 	mov	r2,zero
    e2ec:	003fb906 	br	e1d4 <__sflush_r+0x10c>

0000e2f0 <_fflush_r>:
    e2f0:	defffd04 	addi	sp,sp,-12
    e2f4:	dc000115 	stw	r16,4(sp)
    e2f8:	dfc00215 	stw	ra,8(sp)
    e2fc:	2021883a 	mov	r16,r4
    e300:	20000226 	beq	r4,zero,e30c <_fflush_r+0x1c>
    e304:	20800e17 	ldw	r2,56(r4)
    e308:	10000726 	beq	r2,zero,e328 <_fflush_r+0x38>
    e30c:	2880030f 	ldh	r2,12(r5)
    e310:	10000a1e 	bne	r2,zero,e33c <_fflush_r+0x4c>
    e314:	0005883a 	mov	r2,zero
    e318:	dfc00217 	ldw	ra,8(sp)
    e31c:	dc000117 	ldw	r16,4(sp)
    e320:	dec00304 	addi	sp,sp,12
    e324:	f800283a 	ret
    e328:	d9400015 	stw	r5,0(sp)
    e32c:	000e7380 	call	e738 <__sinit>
    e330:	d9400017 	ldw	r5,0(sp)
    e334:	2880030f 	ldh	r2,12(r5)
    e338:	103ff626 	beq	r2,zero,e314 <_fflush_r+0x24>
    e33c:	8009883a 	mov	r4,r16
    e340:	dfc00217 	ldw	ra,8(sp)
    e344:	dc000117 	ldw	r16,4(sp)
    e348:	dec00304 	addi	sp,sp,12
    e34c:	000e0c81 	jmpi	e0c8 <__sflush_r>

0000e350 <fflush>:
    e350:	20001726 	beq	r4,zero,e3b0 <fflush+0x60>
    e354:	008000b4 	movhi	r2,2
    e358:	200b883a 	mov	r5,r4
    e35c:	1126b817 	ldw	r4,-25888(r2)
    e360:	20000226 	beq	r4,zero,e36c <fflush+0x1c>
    e364:	20800e17 	ldw	r2,56(r4)
    e368:	10000526 	beq	r2,zero,e380 <fflush+0x30>
    e36c:	2880030f 	ldh	r2,12(r5)
    e370:	1000021e 	bne	r2,zero,e37c <fflush+0x2c>
    e374:	0005883a 	mov	r2,zero
    e378:	f800283a 	ret
    e37c:	000e0c81 	jmpi	e0c8 <__sflush_r>
    e380:	defffd04 	addi	sp,sp,-12
    e384:	d9400115 	stw	r5,4(sp)
    e388:	d9000015 	stw	r4,0(sp)
    e38c:	dfc00215 	stw	ra,8(sp)
    e390:	000e7380 	call	e738 <__sinit>
    e394:	d9400117 	ldw	r5,4(sp)
    e398:	d9000017 	ldw	r4,0(sp)
    e39c:	2880030f 	ldh	r2,12(r5)
    e3a0:	10000826 	beq	r2,zero,e3c4 <fflush+0x74>
    e3a4:	dfc00217 	ldw	ra,8(sp)
    e3a8:	dec00304 	addi	sp,sp,12
    e3ac:	000e0c81 	jmpi	e0c8 <__sflush_r>
    e3b0:	008000b4 	movhi	r2,2
    e3b4:	1126b717 	ldw	r4,-25892(r2)
    e3b8:	01400074 	movhi	r5,1
    e3bc:	2978bc04 	addi	r5,r5,-7440
    e3c0:	000f0c41 	jmpi	f0c4 <_fwalk_reent>
    e3c4:	0005883a 	mov	r2,zero
    e3c8:	dfc00217 	ldw	ra,8(sp)
    e3cc:	dec00304 	addi	sp,sp,12
    e3d0:	f800283a 	ret

0000e3d4 <__fp_lock>:
    e3d4:	0005883a 	mov	r2,zero
    e3d8:	f800283a 	ret

0000e3dc <_cleanup_r>:
    e3dc:	01400074 	movhi	r5,1
    e3e0:	2949af04 	addi	r5,r5,9916
    e3e4:	000f0c41 	jmpi	f0c4 <_fwalk_reent>

0000e3e8 <__fp_unlock>:
    e3e8:	0005883a 	mov	r2,zero
    e3ec:	f800283a 	ret

0000e3f0 <__sinit.part.0>:
    e3f0:	00c00074 	movhi	r3,1
    e3f4:	20800117 	ldw	r2,4(r4)
    e3f8:	18f8f704 	addi	r3,r3,-7204
    e3fc:	20c00f15 	stw	r3,60(r4)
    e400:	2140bb04 	addi	r5,r4,748
    e404:	00c000c4 	movi	r3,3
    e408:	20c0b915 	stw	r3,740(r4)
    e40c:	2140ba15 	stw	r5,744(r4)
    e410:	2000b815 	stw	zero,736(r4)
    e414:	10001705 	stb	zero,92(r2)
    e418:	10001745 	stb	zero,93(r2)
    e41c:	10001785 	stb	zero,94(r2)
    e420:	100017c5 	stb	zero,95(r2)
    e424:	10001805 	stb	zero,96(r2)
    e428:	10001845 	stb	zero,97(r2)
    e42c:	10001885 	stb	zero,98(r2)
    e430:	100018c5 	stb	zero,99(r2)
    e434:	00c00104 	movi	r3,4
    e438:	10c00315 	stw	r3,12(r2)
    e43c:	02000074 	movhi	r8,1
    e440:	20c00217 	ldw	r3,8(r4)
    e444:	01c00074 	movhi	r7,1
    e448:	01800074 	movhi	r6,1
    e44c:	01400074 	movhi	r5,1
    e450:	42037b04 	addi	r8,r8,3564
    e454:	39c39204 	addi	r7,r7,3656
    e458:	3183b204 	addi	r6,r6,3784
    e45c:	2943c904 	addi	r5,r5,3876
    e460:	02400074 	movhi	r9,1
    e464:	10001915 	stw	zero,100(r2)
    e468:	10000015 	stw	zero,0(r2)
    e46c:	10000115 	stw	zero,4(r2)
    e470:	10000215 	stw	zero,8(r2)
    e474:	10000415 	stw	zero,16(r2)
    e478:	10000515 	stw	zero,20(r2)
    e47c:	10000615 	stw	zero,24(r2)
    e480:	10800715 	stw	r2,28(r2)
    e484:	12000815 	stw	r8,32(r2)
    e488:	11c00915 	stw	r7,36(r2)
    e48c:	11800a15 	stw	r6,40(r2)
    e490:	11400b15 	stw	r5,44(r2)
    e494:	4a400284 	addi	r9,r9,10
    e498:	1a400315 	stw	r9,12(r3)
    e49c:	18001915 	stw	zero,100(r3)
    e4a0:	18000015 	stw	zero,0(r3)
    e4a4:	18000115 	stw	zero,4(r3)
    e4a8:	18000215 	stw	zero,8(r3)
    e4ac:	18000415 	stw	zero,16(r3)
    e4b0:	18001705 	stb	zero,92(r3)
    e4b4:	18001745 	stb	zero,93(r3)
    e4b8:	18001785 	stb	zero,94(r3)
    e4bc:	180017c5 	stb	zero,95(r3)
    e4c0:	18001805 	stb	zero,96(r3)
    e4c4:	18001845 	stb	zero,97(r3)
    e4c8:	18001885 	stb	zero,98(r3)
    e4cc:	180018c5 	stb	zero,99(r3)
    e4d0:	20800317 	ldw	r2,12(r4)
    e4d4:	024000b4 	movhi	r9,2
    e4d8:	18000515 	stw	zero,20(r3)
    e4dc:	18000615 	stw	zero,24(r3)
    e4e0:	18c00715 	stw	r3,28(r3)
    e4e4:	1a000815 	stw	r8,32(r3)
    e4e8:	19c00915 	stw	r7,36(r3)
    e4ec:	19800a15 	stw	r6,40(r3)
    e4f0:	19400b15 	stw	r5,44(r3)
    e4f4:	4a400484 	addi	r9,r9,18
    e4f8:	10001915 	stw	zero,100(r2)
    e4fc:	10000015 	stw	zero,0(r2)
    e500:	10000115 	stw	zero,4(r2)
    e504:	10000215 	stw	zero,8(r2)
    e508:	12400315 	stw	r9,12(r2)
    e50c:	10000415 	stw	zero,16(r2)
    e510:	10000515 	stw	zero,20(r2)
    e514:	10000615 	stw	zero,24(r2)
    e518:	10001705 	stb	zero,92(r2)
    e51c:	10001745 	stb	zero,93(r2)
    e520:	10001785 	stb	zero,94(r2)
    e524:	100017c5 	stb	zero,95(r2)
    e528:	10001805 	stb	zero,96(r2)
    e52c:	10001845 	stb	zero,97(r2)
    e530:	10001885 	stb	zero,98(r2)
    e534:	100018c5 	stb	zero,99(r2)
    e538:	10800715 	stw	r2,28(r2)
    e53c:	12000815 	stw	r8,32(r2)
    e540:	11c00915 	stw	r7,36(r2)
    e544:	11800a15 	stw	r6,40(r2)
    e548:	11400b15 	stw	r5,44(r2)
    e54c:	00800044 	movi	r2,1
    e550:	20800e15 	stw	r2,56(r4)
    e554:	f800283a 	ret

0000e558 <__sfmoreglue>:
    e558:	defffc04 	addi	sp,sp,-16
    e55c:	dc800215 	stw	r18,8(sp)
    e560:	2825883a 	mov	r18,r5
    e564:	dc000015 	stw	r16,0(sp)
    e568:	01401a04 	movi	r5,104
    e56c:	2021883a 	mov	r16,r4
    e570:	913fffc4 	addi	r4,r18,-1
    e574:	dfc00315 	stw	ra,12(sp)
    e578:	dc400115 	stw	r17,4(sp)
    e57c:	000608c0 	call	608c <__mulsi3>
    e580:	8009883a 	mov	r4,r16
    e584:	11401d04 	addi	r5,r2,116
    e588:	1023883a 	mov	r17,r2
    e58c:	00099f40 	call	99f4 <_malloc_r>
    e590:	1021883a 	mov	r16,r2
    e594:	10000726 	beq	r2,zero,e5b4 <__sfmoreglue+0x5c>
    e598:	11000304 	addi	r4,r2,12
    e59c:	10000015 	stw	zero,0(r2)
    e5a0:	14800115 	stw	r18,4(r2)
    e5a4:	11000215 	stw	r4,8(r2)
    e5a8:	89801a04 	addi	r6,r17,104
    e5ac:	000b883a 	mov	r5,zero
    e5b0:	000f5d00 	call	f5d0 <memset>
    e5b4:	8005883a 	mov	r2,r16
    e5b8:	dfc00317 	ldw	ra,12(sp)
    e5bc:	dc800217 	ldw	r18,8(sp)
    e5c0:	dc400117 	ldw	r17,4(sp)
    e5c4:	dc000017 	ldw	r16,0(sp)
    e5c8:	dec00404 	addi	sp,sp,16
    e5cc:	f800283a 	ret

0000e5d0 <__sfp>:
    e5d0:	defffb04 	addi	sp,sp,-20
    e5d4:	008000b4 	movhi	r2,2
    e5d8:	dc000015 	stw	r16,0(sp)
    e5dc:	1426b717 	ldw	r16,-25892(r2)
    e5e0:	dc400115 	stw	r17,4(sp)
    e5e4:	dfc00415 	stw	ra,16(sp)
    e5e8:	80800e17 	ldw	r2,56(r16)
    e5ec:	dcc00315 	stw	r19,12(sp)
    e5f0:	dc800215 	stw	r18,8(sp)
    e5f4:	2023883a 	mov	r17,r4
    e5f8:	10003126 	beq	r2,zero,e6c0 <__sfp+0xf0>
    e5fc:	8100ba17 	ldw	r4,744(r16)
    e600:	8140b917 	ldw	r5,740(r16)
    e604:	04c00104 	movi	r19,4
    e608:	8400b804 	addi	r16,r16,736
    e60c:	297fffc4 	addi	r5,r5,-1
    e610:	2800050e 	bge	r5,zero,e628 <__sfp+0x58>
    e614:	00002406 	br	e6a8 <__sfp+0xd8>
    e618:	297fffc4 	addi	r5,r5,-1
    e61c:	28bfffd8 	cmpnei	r2,r5,-1
    e620:	21001a04 	addi	r4,r4,104
    e624:	10002026 	beq	r2,zero,e6a8 <__sfp+0xd8>
    e628:	2080030f 	ldh	r2,12(r4)
    e62c:	103ffa1e 	bne	r2,zero,e618 <__sfp+0x48>
    e630:	00bffff4 	movhi	r2,65535
    e634:	10800044 	addi	r2,r2,1
    e638:	20001915 	stw	zero,100(r4)
    e63c:	20000015 	stw	zero,0(r4)
    e640:	20000115 	stw	zero,4(r4)
    e644:	20000215 	stw	zero,8(r4)
    e648:	20800315 	stw	r2,12(r4)
    e64c:	20000415 	stw	zero,16(r4)
    e650:	20000515 	stw	zero,20(r4)
    e654:	20000615 	stw	zero,24(r4)
    e658:	20001705 	stb	zero,92(r4)
    e65c:	20001745 	stb	zero,93(r4)
    e660:	20001785 	stb	zero,94(r4)
    e664:	200017c5 	stb	zero,95(r4)
    e668:	20001805 	stb	zero,96(r4)
    e66c:	20001845 	stb	zero,97(r4)
    e670:	20001885 	stb	zero,98(r4)
    e674:	200018c5 	stb	zero,99(r4)
    e678:	20000c15 	stw	zero,48(r4)
    e67c:	20000d15 	stw	zero,52(r4)
    e680:	20001115 	stw	zero,68(r4)
    e684:	20001215 	stw	zero,72(r4)
    e688:	2005883a 	mov	r2,r4
    e68c:	dfc00417 	ldw	ra,16(sp)
    e690:	dcc00317 	ldw	r19,12(sp)
    e694:	dc800217 	ldw	r18,8(sp)
    e698:	dc400117 	ldw	r17,4(sp)
    e69c:	dc000017 	ldw	r16,0(sp)
    e6a0:	dec00504 	addi	sp,sp,20
    e6a4:	f800283a 	ret
    e6a8:	80800017 	ldw	r2,0(r16)
    e6ac:	10000726 	beq	r2,zero,e6cc <__sfp+0xfc>
    e6b0:	11000217 	ldw	r4,8(r2)
    e6b4:	11400117 	ldw	r5,4(r2)
    e6b8:	1021883a 	mov	r16,r2
    e6bc:	003fd306 	br	e60c <__sfp+0x3c>
    e6c0:	8009883a 	mov	r4,r16
    e6c4:	000e3f00 	call	e3f0 <__sinit.part.0>
    e6c8:	003fcc06 	br	e5fc <__sfp+0x2c>
    e6cc:	01406b04 	movi	r5,428
    e6d0:	8809883a 	mov	r4,r17
    e6d4:	00099f40 	call	99f4 <_malloc_r>
    e6d8:	1025883a 	mov	r18,r2
    e6dc:	10000c26 	beq	r2,zero,e710 <__sfp+0x140>
    e6e0:	11000304 	addi	r4,r2,12
    e6e4:	11000215 	stw	r4,8(r2)
    e6e8:	000b883a 	mov	r5,zero
    e6ec:	10000015 	stw	zero,0(r2)
    e6f0:	14c00115 	stw	r19,4(r2)
    e6f4:	01806804 	movi	r6,416
    e6f8:	000f5d00 	call	f5d0 <memset>
    e6fc:	1009883a 	mov	r4,r2
    e700:	84800015 	stw	r18,0(r16)
    e704:	014000c4 	movi	r5,3
    e708:	9021883a 	mov	r16,r18
    e70c:	003fc606 	br	e628 <__sfp+0x58>
    e710:	80000015 	stw	zero,0(r16)
    e714:	00800304 	movi	r2,12
    e718:	88800015 	stw	r2,0(r17)
    e71c:	0009883a 	mov	r4,zero
    e720:	003fd906 	br	e688 <__sfp+0xb8>

0000e724 <_cleanup>:
    e724:	008000b4 	movhi	r2,2
    e728:	1126b717 	ldw	r4,-25892(r2)
    e72c:	01400074 	movhi	r5,1
    e730:	2949af04 	addi	r5,r5,9916
    e734:	000f0c41 	jmpi	f0c4 <_fwalk_reent>

0000e738 <__sinit>:
    e738:	20800e17 	ldw	r2,56(r4)
    e73c:	10000126 	beq	r2,zero,e744 <__sinit+0xc>
    e740:	f800283a 	ret
    e744:	000e3f01 	jmpi	e3f0 <__sinit.part.0>

0000e748 <__sfp_lock_acquire>:
    e748:	f800283a 	ret

0000e74c <__sfp_lock_release>:
    e74c:	f800283a 	ret

0000e750 <__sinit_lock_acquire>:
    e750:	f800283a 	ret

0000e754 <__sinit_lock_release>:
    e754:	f800283a 	ret

0000e758 <__fp_lock_all>:
    e758:	008000b4 	movhi	r2,2
    e75c:	1126b817 	ldw	r4,-25888(r2)
    e760:	01400074 	movhi	r5,1
    e764:	2978f504 	addi	r5,r5,-7212
    e768:	000f02c1 	jmpi	f02c <_fwalk>

0000e76c <__fp_unlock_all>:
    e76c:	008000b4 	movhi	r2,2
    e770:	1126b817 	ldw	r4,-25888(r2)
    e774:	01400074 	movhi	r5,1
    e778:	2978fa04 	addi	r5,r5,-7192
    e77c:	000f02c1 	jmpi	f02c <_fwalk>

0000e780 <_malloc_trim_r>:
    e780:	defffb04 	addi	sp,sp,-20
    e784:	dcc00315 	stw	r19,12(sp)
    e788:	04c000b4 	movhi	r19,2
    e78c:	dc800215 	stw	r18,8(sp)
    e790:	dc400115 	stw	r17,4(sp)
    e794:	dc000015 	stw	r16,0(sp)
    e798:	dfc00415 	stw	ra,16(sp)
    e79c:	2821883a 	mov	r16,r5
    e7a0:	9ce0aa04 	addi	r19,r19,-32088
    e7a4:	2025883a 	mov	r18,r4
    e7a8:	001494c0 	call	1494c <__malloc_lock>
    e7ac:	98800217 	ldw	r2,8(r19)
    e7b0:	14400117 	ldw	r17,4(r2)
    e7b4:	00bfff04 	movi	r2,-4
    e7b8:	88a2703a 	and	r17,r17,r2
    e7bc:	8c21c83a 	sub	r16,r17,r16
    e7c0:	8403fbc4 	addi	r16,r16,4079
    e7c4:	8020d33a 	srli	r16,r16,12
    e7c8:	843fffc4 	addi	r16,r16,-1
    e7cc:	8020933a 	slli	r16,r16,12
    e7d0:	80840008 	cmpgei	r2,r16,4096
    e7d4:	10000626 	beq	r2,zero,e7f0 <_malloc_trim_r+0x70>
    e7d8:	000b883a 	mov	r5,zero
    e7dc:	9009883a 	mov	r4,r18
    e7e0:	000a4180 	call	a418 <_sbrk_r>
    e7e4:	98c00217 	ldw	r3,8(r19)
    e7e8:	1c47883a 	add	r3,r3,r17
    e7ec:	10c00a26 	beq	r2,r3,e818 <_malloc_trim_r+0x98>
    e7f0:	9009883a 	mov	r4,r18
    e7f4:	00149700 	call	14970 <__malloc_unlock>
    e7f8:	0005883a 	mov	r2,zero
    e7fc:	dfc00417 	ldw	ra,16(sp)
    e800:	dcc00317 	ldw	r19,12(sp)
    e804:	dc800217 	ldw	r18,8(sp)
    e808:	dc400117 	ldw	r17,4(sp)
    e80c:	dc000017 	ldw	r16,0(sp)
    e810:	dec00504 	addi	sp,sp,20
    e814:	f800283a 	ret
    e818:	040bc83a 	sub	r5,zero,r16
    e81c:	9009883a 	mov	r4,r18
    e820:	000a4180 	call	a418 <_sbrk_r>
    e824:	10bfffd8 	cmpnei	r2,r2,-1
    e828:	10000d26 	beq	r2,zero,e860 <_malloc_trim_r+0xe0>
    e82c:	008000b4 	movhi	r2,2
    e830:	10adf617 	ldw	r2,-18472(r2)
    e834:	98c00217 	ldw	r3,8(r19)
    e838:	8c23c83a 	sub	r17,r17,r16
    e83c:	8c400054 	ori	r17,r17,1
    e840:	1421c83a 	sub	r16,r2,r16
    e844:	1c400115 	stw	r17,4(r3)
    e848:	008000b4 	movhi	r2,2
    e84c:	9009883a 	mov	r4,r18
    e850:	142df615 	stw	r16,-18472(r2)
    e854:	00149700 	call	14970 <__malloc_unlock>
    e858:	00800044 	movi	r2,1
    e85c:	003fe706 	br	e7fc <_malloc_trim_r+0x7c>
    e860:	000b883a 	mov	r5,zero
    e864:	9009883a 	mov	r4,r18
    e868:	000a4180 	call	a418 <_sbrk_r>
    e86c:	99000217 	ldw	r4,8(r19)
    e870:	1107c83a 	sub	r3,r2,r4
    e874:	19400410 	cmplti	r5,r3,16
    e878:	283fdd1e 	bne	r5,zero,e7f0 <_malloc_trim_r+0x70>
    e87c:	014000b4 	movhi	r5,2
    e880:	2966b917 	ldw	r5,-25884(r5)
    e884:	18c00054 	ori	r3,r3,1
    e888:	20c00115 	stw	r3,4(r4)
    e88c:	1145c83a 	sub	r2,r2,r5
    e890:	014000b4 	movhi	r5,2
    e894:	28adf615 	stw	r2,-18472(r5)
    e898:	003fd506 	br	e7f0 <_malloc_trim_r+0x70>

0000e89c <_free_r>:
    e89c:	28004f26 	beq	r5,zero,e9dc <_free_r+0x140>
    e8a0:	defffd04 	addi	sp,sp,-12
    e8a4:	dc400115 	stw	r17,4(sp)
    e8a8:	dc000015 	stw	r16,0(sp)
    e8ac:	2023883a 	mov	r17,r4
    e8b0:	2821883a 	mov	r16,r5
    e8b4:	dfc00215 	stw	ra,8(sp)
    e8b8:	001494c0 	call	1494c <__malloc_lock>
    e8bc:	81ffff17 	ldw	r7,-4(r16)
    e8c0:	00bfff84 	movi	r2,-2
    e8c4:	80fffe04 	addi	r3,r16,-8
    e8c8:	3884703a 	and	r2,r7,r2
    e8cc:	010000b4 	movhi	r4,2
    e8d0:	188d883a 	add	r6,r3,r2
    e8d4:	2120aa04 	addi	r4,r4,-32088
    e8d8:	31400117 	ldw	r5,4(r6)
    e8dc:	22000217 	ldw	r8,8(r4)
    e8e0:	027fff04 	movi	r9,-4
    e8e4:	2a4a703a 	and	r5,r5,r9
    e8e8:	41806426 	beq	r8,r6,ea7c <_free_r+0x1e0>
    e8ec:	31400115 	stw	r5,4(r6)
    e8f0:	39c0004c 	andi	r7,r7,1
    e8f4:	3151883a 	add	r8,r6,r5
    e8f8:	3800281e 	bne	r7,zero,e99c <_free_r+0x100>
    e8fc:	82bffe17 	ldw	r10,-8(r16)
    e900:	42000117 	ldw	r8,4(r8)
    e904:	01c000b4 	movhi	r7,2
    e908:	1a87c83a 	sub	r3,r3,r10
    e90c:	1a400217 	ldw	r9,8(r3)
    e910:	39e0ac04 	addi	r7,r7,-32080
    e914:	1285883a 	add	r2,r2,r10
    e918:	4200004c 	andi	r8,r8,1
    e91c:	49c04c26 	beq	r9,r7,ea50 <_free_r+0x1b4>
    e920:	1a800317 	ldw	r10,12(r3)
    e924:	4a800315 	stw	r10,12(r9)
    e928:	52400215 	stw	r9,8(r10)
    e92c:	40007126 	beq	r8,zero,eaf4 <_free_r+0x258>
    e930:	11400054 	ori	r5,r2,1
    e934:	19400115 	stw	r5,4(r3)
    e938:	30800015 	stw	r2,0(r6)
    e93c:	11408028 	cmpgeui	r5,r2,512
    e940:	28002c1e 	bne	r5,zero,e9f4 <_free_r+0x158>
    e944:	100ad0fa 	srli	r5,r2,3
    e948:	100cd17a 	srli	r6,r2,5
    e94c:	00800044 	movi	r2,1
    e950:	29400044 	addi	r5,r5,1
    e954:	280a90fa 	slli	r5,r5,3
    e958:	21c00117 	ldw	r7,4(r4)
    e95c:	1184983a 	sll	r2,r2,r6
    e960:	214b883a 	add	r5,r4,r5
    e964:	29800017 	ldw	r6,0(r5)
    e968:	11c4b03a 	or	r2,r2,r7
    e96c:	29fffe04 	addi	r7,r5,-8
    e970:	19c00315 	stw	r7,12(r3)
    e974:	19800215 	stw	r6,8(r3)
    e978:	20800115 	stw	r2,4(r4)
    e97c:	28c00015 	stw	r3,0(r5)
    e980:	30c00315 	stw	r3,12(r6)
    e984:	8809883a 	mov	r4,r17
    e988:	dfc00217 	ldw	ra,8(sp)
    e98c:	dc400117 	ldw	r17,4(sp)
    e990:	dc000017 	ldw	r16,0(sp)
    e994:	dec00304 	addi	sp,sp,12
    e998:	00149701 	jmpi	14970 <__malloc_unlock>
    e99c:	41c00117 	ldw	r7,4(r8)
    e9a0:	39c0004c 	andi	r7,r7,1
    e9a4:	38000e1e 	bne	r7,zero,e9e0 <_free_r+0x144>
    e9a8:	01c000b4 	movhi	r7,2
    e9ac:	1145883a 	add	r2,r2,r5
    e9b0:	39e0ac04 	addi	r7,r7,-32080
    e9b4:	31400217 	ldw	r5,8(r6)
    e9b8:	12400054 	ori	r9,r2,1
    e9bc:	1891883a 	add	r8,r3,r2
    e9c0:	29c05226 	beq	r5,r7,eb0c <_free_r+0x270>
    e9c4:	31800317 	ldw	r6,12(r6)
    e9c8:	29800315 	stw	r6,12(r5)
    e9cc:	31400215 	stw	r5,8(r6)
    e9d0:	1a400115 	stw	r9,4(r3)
    e9d4:	40800015 	stw	r2,0(r8)
    e9d8:	003fd806 	br	e93c <_free_r+0xa0>
    e9dc:	f800283a 	ret
    e9e0:	11400054 	ori	r5,r2,1
    e9e4:	817fff15 	stw	r5,-4(r16)
    e9e8:	30800015 	stw	r2,0(r6)
    e9ec:	11408028 	cmpgeui	r5,r2,512
    e9f0:	283fd426 	beq	r5,zero,e944 <_free_r+0xa8>
    e9f4:	100ad27a 	srli	r5,r2,9
    e9f8:	29800168 	cmpgeui	r6,r5,5
    e9fc:	3000341e 	bne	r6,zero,ead0 <_free_r+0x234>
    ea00:	100ad1ba 	srli	r5,r2,6
    ea04:	29800e44 	addi	r6,r5,57
    ea08:	300c90fa 	slli	r6,r6,3
    ea0c:	29c00e04 	addi	r7,r5,56
    ea10:	218d883a 	add	r6,r4,r6
    ea14:	31400017 	ldw	r5,0(r6)
    ea18:	31bffe04 	addi	r6,r6,-8
    ea1c:	31404226 	beq	r6,r5,eb28 <_free_r+0x28c>
    ea20:	01ffff04 	movi	r7,-4
    ea24:	29000117 	ldw	r4,4(r5)
    ea28:	21c8703a 	and	r4,r4,r7
    ea2c:	1100022e 	bgeu	r2,r4,ea38 <_free_r+0x19c>
    ea30:	29400217 	ldw	r5,8(r5)
    ea34:	317ffb1e 	bne	r6,r5,ea24 <_free_r+0x188>
    ea38:	29800317 	ldw	r6,12(r5)
    ea3c:	19800315 	stw	r6,12(r3)
    ea40:	19400215 	stw	r5,8(r3)
    ea44:	30c00215 	stw	r3,8(r6)
    ea48:	28c00315 	stw	r3,12(r5)
    ea4c:	003fcd06 	br	e984 <_free_r+0xe8>
    ea50:	40004d1e 	bne	r8,zero,eb88 <_free_r+0x2ec>
    ea54:	31000317 	ldw	r4,12(r6)
    ea58:	31800217 	ldw	r6,8(r6)
    ea5c:	2885883a 	add	r2,r5,r2
    ea60:	11400054 	ori	r5,r2,1
    ea64:	31000315 	stw	r4,12(r6)
    ea68:	21800215 	stw	r6,8(r4)
    ea6c:	19400115 	stw	r5,4(r3)
    ea70:	1887883a 	add	r3,r3,r2
    ea74:	18800015 	stw	r2,0(r3)
    ea78:	003fc206 	br	e984 <_free_r+0xe8>
    ea7c:	39c0004c 	andi	r7,r7,1
    ea80:	1145883a 	add	r2,r2,r5
    ea84:	3800071e 	bne	r7,zero,eaa4 <_free_r+0x208>
    ea88:	81fffe17 	ldw	r7,-8(r16)
    ea8c:	19c7c83a 	sub	r3,r3,r7
    ea90:	19400317 	ldw	r5,12(r3)
    ea94:	19800217 	ldw	r6,8(r3)
    ea98:	11c5883a 	add	r2,r2,r7
    ea9c:	31400315 	stw	r5,12(r6)
    eaa0:	29800215 	stw	r6,8(r5)
    eaa4:	014000b4 	movhi	r5,2
    eaa8:	11800054 	ori	r6,r2,1
    eaac:	2966ba17 	ldw	r5,-25880(r5)
    eab0:	19800115 	stw	r6,4(r3)
    eab4:	20c00215 	stw	r3,8(r4)
    eab8:	117fb236 	bltu	r2,r5,e984 <_free_r+0xe8>
    eabc:	008000b4 	movhi	r2,2
    eac0:	116deb17 	ldw	r5,-18516(r2)
    eac4:	8809883a 	mov	r4,r17
    eac8:	000e7800 	call	e780 <_malloc_trim_r>
    eacc:	003fad06 	br	e984 <_free_r+0xe8>
    ead0:	29800568 	cmpgeui	r6,r5,21
    ead4:	30000926 	beq	r6,zero,eafc <_free_r+0x260>
    ead8:	29801568 	cmpgeui	r6,r5,85
    eadc:	3000191e 	bne	r6,zero,eb44 <_free_r+0x2a8>
    eae0:	100ad33a 	srli	r5,r2,12
    eae4:	29801bc4 	addi	r6,r5,111
    eae8:	300c90fa 	slli	r6,r6,3
    eaec:	29c01b84 	addi	r7,r5,110
    eaf0:	003fc706 	br	ea10 <_free_r+0x174>
    eaf4:	1145883a 	add	r2,r2,r5
    eaf8:	003fae06 	br	e9b4 <_free_r+0x118>
    eafc:	29801704 	addi	r6,r5,92
    eb00:	300c90fa 	slli	r6,r6,3
    eb04:	29c016c4 	addi	r7,r5,91
    eb08:	003fc106 	br	ea10 <_free_r+0x174>
    eb0c:	20c00515 	stw	r3,20(r4)
    eb10:	20c00415 	stw	r3,16(r4)
    eb14:	19c00315 	stw	r7,12(r3)
    eb18:	19c00215 	stw	r7,8(r3)
    eb1c:	1a400115 	stw	r9,4(r3)
    eb20:	40800015 	stw	r2,0(r8)
    eb24:	003f9706 	br	e984 <_free_r+0xe8>
    eb28:	380fd0ba 	srai	r7,r7,2
    eb2c:	00800044 	movi	r2,1
    eb30:	22000117 	ldw	r8,4(r4)
    eb34:	11ce983a 	sll	r7,r2,r7
    eb38:	3a0eb03a 	or	r7,r7,r8
    eb3c:	21c00115 	stw	r7,4(r4)
    eb40:	003fbe06 	br	ea3c <_free_r+0x1a0>
    eb44:	29805568 	cmpgeui	r6,r5,341
    eb48:	3000051e 	bne	r6,zero,eb60 <_free_r+0x2c4>
    eb4c:	100ad3fa 	srli	r5,r2,15
    eb50:	29801e04 	addi	r6,r5,120
    eb54:	300c90fa 	slli	r6,r6,3
    eb58:	29c01dc4 	addi	r7,r5,119
    eb5c:	003fac06 	br	ea10 <_free_r+0x174>
    eb60:	29415568 	cmpgeui	r5,r5,1365
    eb64:	2800051e 	bne	r5,zero,eb7c <_free_r+0x2e0>
    eb68:	100ad4ba 	srli	r5,r2,18
    eb6c:	29801f44 	addi	r6,r5,125
    eb70:	300c90fa 	slli	r6,r6,3
    eb74:	29c01f04 	addi	r7,r5,124
    eb78:	003fa506 	br	ea10 <_free_r+0x174>
    eb7c:	0180fe04 	movi	r6,1016
    eb80:	01c01f84 	movi	r7,126
    eb84:	003fa206 	br	ea10 <_free_r+0x174>
    eb88:	11000054 	ori	r4,r2,1
    eb8c:	19000115 	stw	r4,4(r3)
    eb90:	30800015 	stw	r2,0(r6)
    eb94:	003f7b06 	br	e984 <_free_r+0xe8>

0000eb98 <__sfvwrite_r>:
    eb98:	30800217 	ldw	r2,8(r6)
    eb9c:	10009b26 	beq	r2,zero,ee0c <__sfvwrite_r+0x274>
    eba0:	2a00030b 	ldhu	r8,12(r5)
    eba4:	defff404 	addi	sp,sp,-48
    eba8:	dd400715 	stw	r21,28(sp)
    ebac:	dd000615 	stw	r20,24(sp)
    ebb0:	dc000215 	stw	r16,8(sp)
    ebb4:	dfc00b15 	stw	ra,44(sp)
    ebb8:	df000a15 	stw	fp,40(sp)
    ebbc:	ddc00915 	stw	r23,36(sp)
    ebc0:	dd800815 	stw	r22,32(sp)
    ebc4:	dcc00515 	stw	r19,20(sp)
    ebc8:	dc800415 	stw	r18,16(sp)
    ebcc:	dc400315 	stw	r17,12(sp)
    ebd0:	4080020c 	andi	r2,r8,8
    ebd4:	3029883a 	mov	r20,r6
    ebd8:	202b883a 	mov	r21,r4
    ebdc:	2821883a 	mov	r16,r5
    ebe0:	10002626 	beq	r2,zero,ec7c <__sfvwrite_r+0xe4>
    ebe4:	28800417 	ldw	r2,16(r5)
    ebe8:	10002426 	beq	r2,zero,ec7c <__sfvwrite_r+0xe4>
    ebec:	4080008c 	andi	r2,r8,2
    ebf0:	a4400017 	ldw	r17,0(r20)
    ebf4:	10002926 	beq	r2,zero,ec9c <__sfvwrite_r+0x104>
    ebf8:	05a00034 	movhi	r22,32768
    ebfc:	0027883a 	mov	r19,zero
    ec00:	0025883a 	mov	r18,zero
    ec04:	b5bf0004 	addi	r22,r22,-1024
    ec08:	980d883a 	mov	r6,r19
    ec0c:	a809883a 	mov	r4,r21
    ec10:	90007126 	beq	r18,zero,edd8 <__sfvwrite_r+0x240>
    ec14:	900f883a 	mov	r7,r18
    ec18:	b480012e 	bgeu	r22,r18,ec20 <__sfvwrite_r+0x88>
    ec1c:	b00f883a 	mov	r7,r22
    ec20:	80800917 	ldw	r2,36(r16)
    ec24:	81400717 	ldw	r5,28(r16)
    ec28:	103ee83a 	callr	r2
    ec2c:	0080720e 	bge	zero,r2,edf8 <__sfvwrite_r+0x260>
    ec30:	a0c00217 	ldw	r3,8(r20)
    ec34:	98a7883a 	add	r19,r19,r2
    ec38:	90a5c83a 	sub	r18,r18,r2
    ec3c:	1885c83a 	sub	r2,r3,r2
    ec40:	a0800215 	stw	r2,8(r20)
    ec44:	103ff01e 	bne	r2,zero,ec08 <__sfvwrite_r+0x70>
    ec48:	0005883a 	mov	r2,zero
    ec4c:	dfc00b17 	ldw	ra,44(sp)
    ec50:	df000a17 	ldw	fp,40(sp)
    ec54:	ddc00917 	ldw	r23,36(sp)
    ec58:	dd800817 	ldw	r22,32(sp)
    ec5c:	dd400717 	ldw	r21,28(sp)
    ec60:	dd000617 	ldw	r20,24(sp)
    ec64:	dcc00517 	ldw	r19,20(sp)
    ec68:	dc800417 	ldw	r18,16(sp)
    ec6c:	dc400317 	ldw	r17,12(sp)
    ec70:	dc000217 	ldw	r16,8(sp)
    ec74:	dec00c04 	addi	sp,sp,48
    ec78:	f800283a 	ret
    ec7c:	800b883a 	mov	r5,r16
    ec80:	a809883a 	mov	r4,r21
    ec84:	000c5fc0 	call	c5fc <__swsetup_r>
    ec88:	1000e61e 	bne	r2,zero,f024 <__sfvwrite_r+0x48c>
    ec8c:	8200030b 	ldhu	r8,12(r16)
    ec90:	a4400017 	ldw	r17,0(r20)
    ec94:	4080008c 	andi	r2,r8,2
    ec98:	103fd71e 	bne	r2,zero,ebf8 <__sfvwrite_r+0x60>
    ec9c:	4080004c 	andi	r2,r8,1
    eca0:	10005c1e 	bne	r2,zero,ee14 <__sfvwrite_r+0x27c>
    eca4:	00a00034 	movhi	r2,32768
    eca8:	10bfff84 	addi	r2,r2,-2
    ecac:	00e00034 	movhi	r3,32768
    ecb0:	d8800015 	stw	r2,0(sp)
    ecb4:	18bfffc4 	addi	r2,r3,-1
    ecb8:	0039883a 	mov	fp,zero
    ecbc:	0025883a 	mov	r18,zero
    ecc0:	d8800115 	stw	r2,4(sp)
    ecc4:	90004026 	beq	r18,zero,edc8 <__sfvwrite_r+0x230>
    ecc8:	4080800c 	andi	r2,r8,512
    eccc:	81000017 	ldw	r4,0(r16)
    ecd0:	85c00217 	ldw	r23,8(r16)
    ecd4:	10008826 	beq	r2,zero,eef8 <__sfvwrite_r+0x360>
    ecd8:	b82d883a 	mov	r22,r23
    ecdc:	95c0ae36 	bltu	r18,r23,ef98 <__sfvwrite_r+0x400>
    ece0:	4081200c 	andi	r2,r8,1152
    ece4:	10002626 	beq	r2,zero,ed80 <__sfvwrite_r+0x1e8>
    ece8:	81800517 	ldw	r6,20(r16)
    ecec:	81400417 	ldw	r5,16(r16)
    ecf0:	3185883a 	add	r2,r6,r6
    ecf4:	1185883a 	add	r2,r2,r6
    ecf8:	1026d7fa 	srli	r19,r2,31
    ecfc:	216dc83a 	sub	r22,r4,r5
    ed00:	b1000044 	addi	r4,r22,1
    ed04:	98a7883a 	add	r19,r19,r2
    ed08:	9827d07a 	srai	r19,r19,1
    ed0c:	2485883a 	add	r2,r4,r18
    ed10:	980d883a 	mov	r6,r19
    ed14:	9880022e 	bgeu	r19,r2,ed20 <__sfvwrite_r+0x188>
    ed18:	1027883a 	mov	r19,r2
    ed1c:	100d883a 	mov	r6,r2
    ed20:	4201000c 	andi	r8,r8,1024
    ed24:	4000af26 	beq	r8,zero,efe4 <__sfvwrite_r+0x44c>
    ed28:	300b883a 	mov	r5,r6
    ed2c:	a809883a 	mov	r4,r21
    ed30:	00099f40 	call	99f4 <_malloc_r>
    ed34:	1000b726 	beq	r2,zero,f014 <__sfvwrite_r+0x47c>
    ed38:	81400417 	ldw	r5,16(r16)
    ed3c:	b00d883a 	mov	r6,r22
    ed40:	1009883a 	mov	r4,r2
    ed44:	000a1d40 	call	a1d4 <memcpy>
    ed48:	100f883a 	mov	r7,r2
    ed4c:	8080030b 	ldhu	r2,12(r16)
    ed50:	00fedfc4 	movi	r3,-1153
    ed54:	10c4703a 	and	r2,r2,r3
    ed58:	10802014 	ori	r2,r2,128
    ed5c:	8080030d 	sth	r2,12(r16)
    ed60:	3d89883a 	add	r4,r7,r22
    ed64:	9d85c83a 	sub	r2,r19,r22
    ed68:	81c00415 	stw	r7,16(r16)
    ed6c:	81000015 	stw	r4,0(r16)
    ed70:	84c00515 	stw	r19,20(r16)
    ed74:	902f883a 	mov	r23,r18
    ed78:	80800215 	stw	r2,8(r16)
    ed7c:	902d883a 	mov	r22,r18
    ed80:	b00d883a 	mov	r6,r22
    ed84:	e00b883a 	mov	r5,fp
    ed88:	000f4a40 	call	f4a4 <memmove>
    ed8c:	81000217 	ldw	r4,8(r16)
    ed90:	80800017 	ldw	r2,0(r16)
    ed94:	9027883a 	mov	r19,r18
    ed98:	25c9c83a 	sub	r4,r4,r23
    ed9c:	1585883a 	add	r2,r2,r22
    eda0:	81000215 	stw	r4,8(r16)
    eda4:	80800015 	stw	r2,0(r16)
    eda8:	0025883a 	mov	r18,zero
    edac:	a1800217 	ldw	r6,8(r20)
    edb0:	e4f9883a 	add	fp,fp,r19
    edb4:	34e7c83a 	sub	r19,r6,r19
    edb8:	a4c00215 	stw	r19,8(r20)
    edbc:	983fa226 	beq	r19,zero,ec48 <__sfvwrite_r+0xb0>
    edc0:	8200030b 	ldhu	r8,12(r16)
    edc4:	903fc01e 	bne	r18,zero,ecc8 <__sfvwrite_r+0x130>
    edc8:	8f000017 	ldw	fp,0(r17)
    edcc:	8c800117 	ldw	r18,4(r17)
    edd0:	8c400204 	addi	r17,r17,8
    edd4:	003fbb06 	br	ecc4 <__sfvwrite_r+0x12c>
    edd8:	8cc00017 	ldw	r19,0(r17)
    eddc:	8c800117 	ldw	r18,4(r17)
    ede0:	8c400204 	addi	r17,r17,8
    ede4:	003f8806 	br	ec08 <__sfvwrite_r+0x70>
    ede8:	800b883a 	mov	r5,r16
    edec:	a809883a 	mov	r4,r21
    edf0:	000e2f00 	call	e2f0 <_fflush_r>
    edf4:	10002226 	beq	r2,zero,ee80 <__sfvwrite_r+0x2e8>
    edf8:	8080030b 	ldhu	r2,12(r16)
    edfc:	10801014 	ori	r2,r2,64
    ee00:	8080030d 	sth	r2,12(r16)
    ee04:	00bfffc4 	movi	r2,-1
    ee08:	003f9006 	br	ec4c <__sfvwrite_r+0xb4>
    ee0c:	0005883a 	mov	r2,zero
    ee10:	f800283a 	ret
    ee14:	002d883a 	mov	r22,zero
    ee18:	0039883a 	mov	fp,zero
    ee1c:	0005883a 	mov	r2,zero
    ee20:	002f883a 	mov	r23,zero
    ee24:	b0001d26 	beq	r22,zero,ee9c <__sfvwrite_r+0x304>
    ee28:	10002026 	beq	r2,zero,eeac <__sfvwrite_r+0x314>
    ee2c:	e027883a 	mov	r19,fp
    ee30:	b4c0012e 	bgeu	r22,r19,ee38 <__sfvwrite_r+0x2a0>
    ee34:	b027883a 	mov	r19,r22
    ee38:	81000017 	ldw	r4,0(r16)
    ee3c:	80800417 	ldw	r2,16(r16)
    ee40:	81c00517 	ldw	r7,20(r16)
    ee44:	1100032e 	bgeu	r2,r4,ee54 <__sfvwrite_r+0x2bc>
    ee48:	84800217 	ldw	r18,8(r16)
    ee4c:	3ca5883a 	add	r18,r7,r18
    ee50:	94c01e16 	blt	r18,r19,eecc <__sfvwrite_r+0x334>
    ee54:	99c05316 	blt	r19,r7,efa4 <__sfvwrite_r+0x40c>
    ee58:	80800917 	ldw	r2,36(r16)
    ee5c:	81400717 	ldw	r5,28(r16)
    ee60:	b80d883a 	mov	r6,r23
    ee64:	a809883a 	mov	r4,r21
    ee68:	103ee83a 	callr	r2
    ee6c:	1025883a 	mov	r18,r2
    ee70:	00bfe10e 	bge	zero,r2,edf8 <__sfvwrite_r+0x260>
    ee74:	e4b9c83a 	sub	fp,fp,r18
    ee78:	e03fdb26 	beq	fp,zero,ede8 <__sfvwrite_r+0x250>
    ee7c:	00800044 	movi	r2,1
    ee80:	a1800217 	ldw	r6,8(r20)
    ee84:	bcaf883a 	add	r23,r23,r18
    ee88:	b4adc83a 	sub	r22,r22,r18
    ee8c:	34a5c83a 	sub	r18,r6,r18
    ee90:	a4800215 	stw	r18,8(r20)
    ee94:	903f6c26 	beq	r18,zero,ec48 <__sfvwrite_r+0xb0>
    ee98:	b03fe31e 	bne	r22,zero,ee28 <__sfvwrite_r+0x290>
    ee9c:	8d800117 	ldw	r22,4(r17)
    eea0:	8dc00017 	ldw	r23,0(r17)
    eea4:	8c400204 	addi	r17,r17,8
    eea8:	b03ffc26 	beq	r22,zero,ee9c <__sfvwrite_r+0x304>
    eeac:	b00d883a 	mov	r6,r22
    eeb0:	01400284 	movi	r5,10
    eeb4:	b809883a 	mov	r4,r23
    eeb8:	000f3d40 	call	f3d4 <memchr>
    eebc:	10004626 	beq	r2,zero,efd8 <__sfvwrite_r+0x440>
    eec0:	10800044 	addi	r2,r2,1
    eec4:	15f9c83a 	sub	fp,r2,r23
    eec8:	003fd806 	br	ee2c <__sfvwrite_r+0x294>
    eecc:	b80b883a 	mov	r5,r23
    eed0:	900d883a 	mov	r6,r18
    eed4:	000f4a40 	call	f4a4 <memmove>
    eed8:	80800017 	ldw	r2,0(r16)
    eedc:	800b883a 	mov	r5,r16
    eee0:	a809883a 	mov	r4,r21
    eee4:	1485883a 	add	r2,r2,r18
    eee8:	80800015 	stw	r2,0(r16)
    eeec:	000e2f00 	call	e2f0 <_fflush_r>
    eef0:	103fe026 	beq	r2,zero,ee74 <__sfvwrite_r+0x2dc>
    eef4:	003fc006 	br	edf8 <__sfvwrite_r+0x260>
    eef8:	80800417 	ldw	r2,16(r16)
    eefc:	11001436 	bltu	r2,r4,ef50 <__sfvwrite_r+0x3b8>
    ef00:	84c00517 	ldw	r19,20(r16)
    ef04:	94c01236 	bltu	r18,r19,ef50 <__sfvwrite_r+0x3b8>
    ef08:	d8800017 	ldw	r2,0(sp)
    ef0c:	1480302e 	bgeu	r2,r18,efd0 <__sfvwrite_r+0x438>
    ef10:	d9000117 	ldw	r4,4(sp)
    ef14:	980b883a 	mov	r5,r19
    ef18:	0005ed80 	call	5ed8 <__divsi3>
    ef1c:	980b883a 	mov	r5,r19
    ef20:	1009883a 	mov	r4,r2
    ef24:	000608c0 	call	608c <__mulsi3>
    ef28:	82000917 	ldw	r8,36(r16)
    ef2c:	81400717 	ldw	r5,28(r16)
    ef30:	100f883a 	mov	r7,r2
    ef34:	e00d883a 	mov	r6,fp
    ef38:	a809883a 	mov	r4,r21
    ef3c:	403ee83a 	callr	r8
    ef40:	1027883a 	mov	r19,r2
    ef44:	00bfac0e 	bge	zero,r2,edf8 <__sfvwrite_r+0x260>
    ef48:	94e5c83a 	sub	r18,r18,r19
    ef4c:	003f9706 	br	edac <__sfvwrite_r+0x214>
    ef50:	b827883a 	mov	r19,r23
    ef54:	95c0012e 	bgeu	r18,r23,ef5c <__sfvwrite_r+0x3c4>
    ef58:	9027883a 	mov	r19,r18
    ef5c:	980d883a 	mov	r6,r19
    ef60:	e00b883a 	mov	r5,fp
    ef64:	000f4a40 	call	f4a4 <memmove>
    ef68:	80800217 	ldw	r2,8(r16)
    ef6c:	81000017 	ldw	r4,0(r16)
    ef70:	14c5c83a 	sub	r2,r2,r19
    ef74:	24c9883a 	add	r4,r4,r19
    ef78:	80800215 	stw	r2,8(r16)
    ef7c:	81000015 	stw	r4,0(r16)
    ef80:	103ff11e 	bne	r2,zero,ef48 <__sfvwrite_r+0x3b0>
    ef84:	800b883a 	mov	r5,r16
    ef88:	a809883a 	mov	r4,r21
    ef8c:	000e2f00 	call	e2f0 <_fflush_r>
    ef90:	103fed26 	beq	r2,zero,ef48 <__sfvwrite_r+0x3b0>
    ef94:	003f9806 	br	edf8 <__sfvwrite_r+0x260>
    ef98:	902f883a 	mov	r23,r18
    ef9c:	902d883a 	mov	r22,r18
    efa0:	003f7706 	br	ed80 <__sfvwrite_r+0x1e8>
    efa4:	980d883a 	mov	r6,r19
    efa8:	b80b883a 	mov	r5,r23
    efac:	000f4a40 	call	f4a4 <memmove>
    efb0:	80c00217 	ldw	r3,8(r16)
    efb4:	80800017 	ldw	r2,0(r16)
    efb8:	9825883a 	mov	r18,r19
    efbc:	1cc7c83a 	sub	r3,r3,r19
    efc0:	14c5883a 	add	r2,r2,r19
    efc4:	80c00215 	stw	r3,8(r16)
    efc8:	80800015 	stw	r2,0(r16)
    efcc:	003fa906 	br	ee74 <__sfvwrite_r+0x2dc>
    efd0:	9009883a 	mov	r4,r18
    efd4:	003fcf06 	br	ef14 <__sfvwrite_r+0x37c>
    efd8:	b4c00044 	addi	r19,r22,1
    efdc:	9839883a 	mov	fp,r19
    efe0:	003f9306 	br	ee30 <__sfvwrite_r+0x298>
    efe4:	a809883a 	mov	r4,r21
    efe8:	00108b00 	call	108b0 <_realloc_r>
    efec:	100f883a 	mov	r7,r2
    eff0:	103f5b1e 	bne	r2,zero,ed60 <__sfvwrite_r+0x1c8>
    eff4:	81400417 	ldw	r5,16(r16)
    eff8:	a809883a 	mov	r4,r21
    effc:	000e89c0 	call	e89c <_free_r>
    f000:	8080030b 	ldhu	r2,12(r16)
    f004:	00c00304 	movi	r3,12
    f008:	a8c00015 	stw	r3,0(r21)
    f00c:	10bfdfcc 	andi	r2,r2,65407
    f010:	003f7a06 	br	edfc <__sfvwrite_r+0x264>
    f014:	00c00304 	movi	r3,12
    f018:	8080030b 	ldhu	r2,12(r16)
    f01c:	a8c00015 	stw	r3,0(r21)
    f020:	003f7606 	br	edfc <__sfvwrite_r+0x264>
    f024:	00bfffc4 	movi	r2,-1
    f028:	003f0806 	br	ec4c <__sfvwrite_r+0xb4>

0000f02c <_fwalk>:
    f02c:	defffa04 	addi	sp,sp,-24
    f030:	dd000415 	stw	r20,16(sp)
    f034:	dcc00315 	stw	r19,12(sp)
    f038:	dc800215 	stw	r18,8(sp)
    f03c:	dfc00515 	stw	ra,20(sp)
    f040:	dc400115 	stw	r17,4(sp)
    f044:	dc000015 	stw	r16,0(sp)
    f048:	2827883a 	mov	r19,r5
    f04c:	2480b804 	addi	r18,r4,736
    f050:	0029883a 	mov	r20,zero
    f054:	94400117 	ldw	r17,4(r18)
    f058:	94000217 	ldw	r16,8(r18)
    f05c:	8c7fffc4 	addi	r17,r17,-1
    f060:	88000d16 	blt	r17,zero,f098 <_fwalk+0x6c>
    f064:	8080030b 	ldhu	r2,12(r16)
    f068:	8c7fffc4 	addi	r17,r17,-1
    f06c:	108000b0 	cmpltui	r2,r2,2
    f070:	1000061e 	bne	r2,zero,f08c <_fwalk+0x60>
    f074:	8080038f 	ldh	r2,14(r16)
    f078:	8009883a 	mov	r4,r16
    f07c:	10bfffe0 	cmpeqi	r2,r2,-1
    f080:	1000021e 	bne	r2,zero,f08c <_fwalk+0x60>
    f084:	983ee83a 	callr	r19
    f088:	a0a8b03a 	or	r20,r20,r2
    f08c:	88bfffd8 	cmpnei	r2,r17,-1
    f090:	84001a04 	addi	r16,r16,104
    f094:	103ff31e 	bne	r2,zero,f064 <_fwalk+0x38>
    f098:	94800017 	ldw	r18,0(r18)
    f09c:	903fed1e 	bne	r18,zero,f054 <_fwalk+0x28>
    f0a0:	a005883a 	mov	r2,r20
    f0a4:	dfc00517 	ldw	ra,20(sp)
    f0a8:	dd000417 	ldw	r20,16(sp)
    f0ac:	dcc00317 	ldw	r19,12(sp)
    f0b0:	dc800217 	ldw	r18,8(sp)
    f0b4:	dc400117 	ldw	r17,4(sp)
    f0b8:	dc000017 	ldw	r16,0(sp)
    f0bc:	dec00604 	addi	sp,sp,24
    f0c0:	f800283a 	ret

0000f0c4 <_fwalk_reent>:
    f0c4:	defff904 	addi	sp,sp,-28
    f0c8:	dd400515 	stw	r21,20(sp)
    f0cc:	dd000415 	stw	r20,16(sp)
    f0d0:	dcc00315 	stw	r19,12(sp)
    f0d4:	dc800215 	stw	r18,8(sp)
    f0d8:	dfc00615 	stw	ra,24(sp)
    f0dc:	dc400115 	stw	r17,4(sp)
    f0e0:	dc000015 	stw	r16,0(sp)
    f0e4:	202b883a 	mov	r21,r4
    f0e8:	2827883a 	mov	r19,r5
    f0ec:	2480b804 	addi	r18,r4,736
    f0f0:	0029883a 	mov	r20,zero
    f0f4:	94400117 	ldw	r17,4(r18)
    f0f8:	94000217 	ldw	r16,8(r18)
    f0fc:	8c7fffc4 	addi	r17,r17,-1
    f100:	88000e16 	blt	r17,zero,f13c <_fwalk_reent+0x78>
    f104:	8080030b 	ldhu	r2,12(r16)
    f108:	8c7fffc4 	addi	r17,r17,-1
    f10c:	108000b0 	cmpltui	r2,r2,2
    f110:	1000071e 	bne	r2,zero,f130 <_fwalk_reent+0x6c>
    f114:	8080038f 	ldh	r2,14(r16)
    f118:	800b883a 	mov	r5,r16
    f11c:	a809883a 	mov	r4,r21
    f120:	10bfffe0 	cmpeqi	r2,r2,-1
    f124:	1000021e 	bne	r2,zero,f130 <_fwalk_reent+0x6c>
    f128:	983ee83a 	callr	r19
    f12c:	a0a8b03a 	or	r20,r20,r2
    f130:	88bfffd8 	cmpnei	r2,r17,-1
    f134:	84001a04 	addi	r16,r16,104
    f138:	103ff21e 	bne	r2,zero,f104 <_fwalk_reent+0x40>
    f13c:	94800017 	ldw	r18,0(r18)
    f140:	903fec1e 	bne	r18,zero,f0f4 <_fwalk_reent+0x30>
    f144:	a005883a 	mov	r2,r20
    f148:	dfc00617 	ldw	ra,24(sp)
    f14c:	dd400517 	ldw	r21,20(sp)
    f150:	dd000417 	ldw	r20,16(sp)
    f154:	dcc00317 	ldw	r19,12(sp)
    f158:	dc800217 	ldw	r18,8(sp)
    f15c:	dc400117 	ldw	r17,4(sp)
    f160:	dc000017 	ldw	r16,0(sp)
    f164:	dec00704 	addi	sp,sp,28
    f168:	f800283a 	ret

0000f16c <__localeconv_l>:
    f16c:	20803c04 	addi	r2,r4,240
    f170:	f800283a 	ret

0000f174 <_localeconv_r>:
    f174:	008000b4 	movhi	r2,2
    f178:	10a1e804 	addi	r2,r2,-30816
    f17c:	f800283a 	ret

0000f180 <localeconv>:
    f180:	008000b4 	movhi	r2,2
    f184:	10a1e804 	addi	r2,r2,-30816
    f188:	f800283a 	ret

0000f18c <__smakebuf_r>:
    f18c:	2880030b 	ldhu	r2,12(r5)
    f190:	deffe804 	addi	sp,sp,-96
    f194:	dc001215 	stw	r16,72(sp)
    f198:	dfc01715 	stw	ra,92(sp)
    f19c:	dd001615 	stw	r20,88(sp)
    f1a0:	dcc01515 	stw	r19,84(sp)
    f1a4:	dc801415 	stw	r18,80(sp)
    f1a8:	dc401315 	stw	r17,76(sp)
    f1ac:	10c0008c 	andi	r3,r2,2
    f1b0:	2821883a 	mov	r16,r5
    f1b4:	18000d26 	beq	r3,zero,f1ec <__smakebuf_r+0x60>
    f1b8:	288010c4 	addi	r2,r5,67
    f1bc:	28800015 	stw	r2,0(r5)
    f1c0:	28800415 	stw	r2,16(r5)
    f1c4:	00800044 	movi	r2,1
    f1c8:	28800515 	stw	r2,20(r5)
    f1cc:	dfc01717 	ldw	ra,92(sp)
    f1d0:	dd001617 	ldw	r20,88(sp)
    f1d4:	dcc01517 	ldw	r19,84(sp)
    f1d8:	dc801417 	ldw	r18,80(sp)
    f1dc:	dc401317 	ldw	r17,76(sp)
    f1e0:	dc001217 	ldw	r16,72(sp)
    f1e4:	dec01804 	addi	sp,sp,96
    f1e8:	f800283a 	ret
    f1ec:	2940038f 	ldh	r5,14(r5)
    f1f0:	2023883a 	mov	r17,r4
    f1f4:	28002816 	blt	r5,zero,f298 <__smakebuf_r+0x10c>
    f1f8:	d80d883a 	mov	r6,sp
    f1fc:	00129f40 	call	129f4 <_fstat_r>
    f200:	10002416 	blt	r2,zero,f294 <__smakebuf_r+0x108>
    f204:	d8800117 	ldw	r2,4(sp)
    f208:	10bc000c 	andi	r2,r2,61440
    f20c:	10880018 	cmpnei	r2,r2,8192
    f210:	1000461e 	bne	r2,zero,f32c <__smakebuf_r+0x1a0>
    f214:	8140038f 	ldh	r5,14(r16)
    f218:	8809883a 	mov	r4,r17
    f21c:	0012a540 	call	12a54 <_isatty_r>
    f220:	10003e26 	beq	r2,zero,f31c <__smakebuf_r+0x190>
    f224:	8080030b 	ldhu	r2,12(r16)
    f228:	80c010c4 	addi	r3,r16,67
    f22c:	80c00015 	stw	r3,0(r16)
    f230:	10800054 	ori	r2,r2,1
    f234:	8080030d 	sth	r2,12(r16)
    f238:	00800044 	movi	r2,1
    f23c:	80c00415 	stw	r3,16(r16)
    f240:	80800515 	stw	r2,20(r16)
    f244:	04c00044 	movi	r19,1
    f248:	05010004 	movi	r20,1024
    f24c:	04820004 	movi	r18,2048
    f250:	a00b883a 	mov	r5,r20
    f254:	8809883a 	mov	r4,r17
    f258:	00099f40 	call	99f4 <_malloc_r>
    f25c:	10001726 	beq	r2,zero,f2bc <__smakebuf_r+0x130>
    f260:	80c0030b 	ldhu	r3,12(r16)
    f264:	01000074 	movhi	r4,1
    f268:	2138f704 	addi	r4,r4,-7204
    f26c:	89000f15 	stw	r4,60(r17)
    f270:	18c02014 	ori	r3,r3,128
    f274:	80c0030d 	sth	r3,12(r16)
    f278:	80800015 	stw	r2,0(r16)
    f27c:	80800415 	stw	r2,16(r16)
    f280:	85000515 	stw	r20,20(r16)
    f284:	98001d1e 	bne	r19,zero,f2fc <__smakebuf_r+0x170>
    f288:	90c6b03a 	or	r3,r18,r3
    f28c:	80c0030d 	sth	r3,12(r16)
    f290:	003fce06 	br	f1cc <__smakebuf_r+0x40>
    f294:	8080030b 	ldhu	r2,12(r16)
    f298:	1080200c 	andi	r2,r2,128
    f29c:	0027883a 	mov	r19,zero
    f2a0:	10001326 	beq	r2,zero,f2f0 <__smakebuf_r+0x164>
    f2a4:	05001004 	movi	r20,64
    f2a8:	a00b883a 	mov	r5,r20
    f2ac:	8809883a 	mov	r4,r17
    f2b0:	0025883a 	mov	r18,zero
    f2b4:	00099f40 	call	99f4 <_malloc_r>
    f2b8:	103fe91e 	bne	r2,zero,f260 <__smakebuf_r+0xd4>
    f2bc:	8080030b 	ldhu	r2,12(r16)
    f2c0:	10c0800c 	andi	r3,r2,512
    f2c4:	183fc11e 	bne	r3,zero,f1cc <__smakebuf_r+0x40>
    f2c8:	00ffff04 	movi	r3,-4
    f2cc:	10c4703a 	and	r2,r2,r3
    f2d0:	10800094 	ori	r2,r2,2
    f2d4:	80c010c4 	addi	r3,r16,67
    f2d8:	8080030d 	sth	r2,12(r16)
    f2dc:	00800044 	movi	r2,1
    f2e0:	80c00015 	stw	r3,0(r16)
    f2e4:	80c00415 	stw	r3,16(r16)
    f2e8:	80800515 	stw	r2,20(r16)
    f2ec:	003fb706 	br	f1cc <__smakebuf_r+0x40>
    f2f0:	05010004 	movi	r20,1024
    f2f4:	0025883a 	mov	r18,zero
    f2f8:	003fd506 	br	f250 <__smakebuf_r+0xc4>
    f2fc:	8140038f 	ldh	r5,14(r16)
    f300:	8809883a 	mov	r4,r17
    f304:	0012a540 	call	12a54 <_isatty_r>
    f308:	80c0030b 	ldhu	r3,12(r16)
    f30c:	103fde26 	beq	r2,zero,f288 <__smakebuf_r+0xfc>
    f310:	18ffff0c 	andi	r3,r3,65532
    f314:	18c00054 	ori	r3,r3,1
    f318:	003fdb06 	br	f288 <__smakebuf_r+0xfc>
    f31c:	04c00044 	movi	r19,1
    f320:	05010004 	movi	r20,1024
    f324:	04820004 	movi	r18,2048
    f328:	003fc906 	br	f250 <__smakebuf_r+0xc4>
    f32c:	0027883a 	mov	r19,zero
    f330:	05010004 	movi	r20,1024
    f334:	04820004 	movi	r18,2048
    f338:	003fc506 	br	f250 <__smakebuf_r+0xc4>

0000f33c <__swhatbuf_r>:
    f33c:	deffea04 	addi	sp,sp,-88
    f340:	dc001215 	stw	r16,72(sp)
    f344:	2821883a 	mov	r16,r5
    f348:	2940038f 	ldh	r5,14(r5)
    f34c:	dc801415 	stw	r18,80(sp)
    f350:	dc401315 	stw	r17,76(sp)
    f354:	dfc01515 	stw	ra,84(sp)
    f358:	3023883a 	mov	r17,r6
    f35c:	3825883a 	mov	r18,r7
    f360:	28001016 	blt	r5,zero,f3a4 <__swhatbuf_r+0x68>
    f364:	d80d883a 	mov	r6,sp
    f368:	00129f40 	call	129f4 <_fstat_r>
    f36c:	10000d16 	blt	r2,zero,f3a4 <__swhatbuf_r+0x68>
    f370:	d8c00117 	ldw	r3,4(sp)
    f374:	00820004 	movi	r2,2048
    f378:	18fc000c 	andi	r3,r3,61440
    f37c:	18c80020 	cmpeqi	r3,r3,8192
    f380:	90c00015 	stw	r3,0(r18)
    f384:	00c10004 	movi	r3,1024
    f388:	88c00015 	stw	r3,0(r17)
    f38c:	dfc01517 	ldw	ra,84(sp)
    f390:	dc801417 	ldw	r18,80(sp)
    f394:	dc401317 	ldw	r17,76(sp)
    f398:	dc001217 	ldw	r16,72(sp)
    f39c:	dec01604 	addi	sp,sp,88
    f3a0:	f800283a 	ret
    f3a4:	8080030b 	ldhu	r2,12(r16)
    f3a8:	90000015 	stw	zero,0(r18)
    f3ac:	1080200c 	andi	r2,r2,128
    f3b0:	10000426 	beq	r2,zero,f3c4 <__swhatbuf_r+0x88>
    f3b4:	00801004 	movi	r2,64
    f3b8:	88800015 	stw	r2,0(r17)
    f3bc:	0005883a 	mov	r2,zero
    f3c0:	003ff206 	br	f38c <__swhatbuf_r+0x50>
    f3c4:	00810004 	movi	r2,1024
    f3c8:	88800015 	stw	r2,0(r17)
    f3cc:	0005883a 	mov	r2,zero
    f3d0:	003fee06 	br	f38c <__swhatbuf_r+0x50>

0000f3d4 <memchr>:
    f3d4:	208000cc 	andi	r2,r4,3
    f3d8:	280f883a 	mov	r7,r5
    f3dc:	10000e26 	beq	r2,zero,f418 <memchr+0x44>
    f3e0:	30bfffc4 	addi	r2,r6,-1
    f3e4:	30001726 	beq	r6,zero,f444 <memchr+0x70>
    f3e8:	29803fcc 	andi	r6,r5,255
    f3ec:	00000606 	br	f408 <memchr+0x34>
    f3f0:	21000044 	addi	r4,r4,1
    f3f4:	20c000cc 	andi	r3,r4,3
    f3f8:	18000826 	beq	r3,zero,f41c <memchr+0x48>
    f3fc:	10bfffc4 	addi	r2,r2,-1
    f400:	10ffffe0 	cmpeqi	r3,r2,-1
    f404:	18000f1e 	bne	r3,zero,f444 <memchr+0x70>
    f408:	20c00003 	ldbu	r3,0(r4)
    f40c:	19bff81e 	bne	r3,r6,f3f0 <memchr+0x1c>
    f410:	2005883a 	mov	r2,r4
    f414:	f800283a 	ret
    f418:	3005883a 	mov	r2,r6
    f41c:	10c00128 	cmpgeui	r3,r2,4
    f420:	18000a1e 	bne	r3,zero,f44c <memchr+0x78>
    f424:	10001e26 	beq	r2,zero,f4a0 <memchr+0xcc>
    f428:	2087883a 	add	r3,r4,r2
    f42c:	39803fcc 	andi	r6,r7,255
    f430:	2005883a 	mov	r2,r4
    f434:	11000003 	ldbu	r4,0(r2)
    f438:	21bff626 	beq	r4,r6,f414 <memchr+0x40>
    f43c:	10800044 	addi	r2,r2,1
    f440:	18bffc1e 	bne	r3,r2,f434 <memchr+0x60>
    f444:	0005883a 	mov	r2,zero
    f448:	f800283a 	ret
    f44c:	29403fcc 	andi	r5,r5,255
    f450:	280c923a 	slli	r6,r5,8
    f454:	027fbff4 	movhi	r9,65279
    f458:	02202074 	movhi	r8,32897
    f45c:	314ab03a 	or	r5,r6,r5
    f460:	280c943a 	slli	r6,r5,16
    f464:	4a7fbfc4 	addi	r9,r9,-257
    f468:	42202004 	addi	r8,r8,-32640
    f46c:	314cb03a 	or	r6,r6,r5
    f470:	20c00017 	ldw	r3,0(r4)
    f474:	30c6f03a 	xor	r3,r6,r3
    f478:	1a4b883a 	add	r5,r3,r9
    f47c:	00c6303a 	nor	r3,zero,r3
    f480:	28c6703a 	and	r3,r5,r3
    f484:	1a06703a 	and	r3,r3,r8
    f488:	183fe71e 	bne	r3,zero,f428 <memchr+0x54>
    f48c:	10bfff04 	addi	r2,r2,-4
    f490:	10c00128 	cmpgeui	r3,r2,4
    f494:	21000104 	addi	r4,r4,4
    f498:	183ff51e 	bne	r3,zero,f470 <memchr+0x9c>
    f49c:	003fe106 	br	f424 <memchr+0x50>
    f4a0:	f800283a 	ret

0000f4a4 <memmove>:
    f4a4:	2005883a 	mov	r2,r4
    f4a8:	29000a2e 	bgeu	r5,r4,f4d4 <memmove+0x30>
    f4ac:	2989883a 	add	r4,r5,r6
    f4b0:	1100082e 	bgeu	r2,r4,f4d4 <memmove+0x30>
    f4b4:	1187883a 	add	r3,r2,r6
    f4b8:	30003e26 	beq	r6,zero,f5b4 <memmove+0x110>
    f4bc:	217fffc3 	ldbu	r5,-1(r4)
    f4c0:	18ffffc4 	addi	r3,r3,-1
    f4c4:	213fffc4 	addi	r4,r4,-1
    f4c8:	19400005 	stb	r5,0(r3)
    f4cc:	10fffb1e 	bne	r2,r3,f4bc <memmove+0x18>
    f4d0:	f800283a 	ret
    f4d4:	30c00430 	cmpltui	r3,r6,16
    f4d8:	18000b26 	beq	r3,zero,f508 <memmove+0x64>
    f4dc:	1007883a 	mov	r3,r2
    f4e0:	31ffffc4 	addi	r7,r6,-1
    f4e4:	30003726 	beq	r6,zero,f5c4 <memmove+0x120>
    f4e8:	39c00044 	addi	r7,r7,1
    f4ec:	29cf883a 	add	r7,r5,r7
    f4f0:	29800003 	ldbu	r6,0(r5)
    f4f4:	29400044 	addi	r5,r5,1
    f4f8:	18c00044 	addi	r3,r3,1
    f4fc:	19bfffc5 	stb	r6,-1(r3)
    f500:	29fffb1e 	bne	r5,r7,f4f0 <memmove+0x4c>
    f504:	f800283a 	ret
    f508:	2886b03a 	or	r3,r5,r2
    f50c:	18c000cc 	andi	r3,r3,3
    f510:	1800291e 	bne	r3,zero,f5b8 <memmove+0x114>
    f514:	327ffc04 	addi	r9,r6,-16
    f518:	4812d13a 	srli	r9,r9,4
    f51c:	280f883a 	mov	r7,r5
    f520:	1007883a 	mov	r3,r2
    f524:	4a400044 	addi	r9,r9,1
    f528:	4812913a 	slli	r9,r9,4
    f52c:	1251883a 	add	r8,r2,r9
    f530:	39000017 	ldw	r4,0(r7)
    f534:	39c00404 	addi	r7,r7,16
    f538:	18c00404 	addi	r3,r3,16
    f53c:	193ffc15 	stw	r4,-16(r3)
    f540:	393ffd17 	ldw	r4,-12(r7)
    f544:	193ffd15 	stw	r4,-12(r3)
    f548:	393ffe17 	ldw	r4,-8(r7)
    f54c:	193ffe15 	stw	r4,-8(r3)
    f550:	393fff17 	ldw	r4,-4(r7)
    f554:	193fff15 	stw	r4,-4(r3)
    f558:	40fff51e 	bne	r8,r3,f530 <memmove+0x8c>
    f55c:	3100030c 	andi	r4,r6,12
    f560:	2a4b883a 	add	r5,r5,r9
    f564:	320003cc 	andi	r8,r6,15
    f568:	20001726 	beq	r4,zero,f5c8 <memmove+0x124>
    f56c:	2813883a 	mov	r9,r5
    f570:	180f883a 	mov	r7,r3
    f574:	4a800017 	ldw	r10,0(r9)
    f578:	39c00104 	addi	r7,r7,4
    f57c:	41c9c83a 	sub	r4,r8,r7
    f580:	1909883a 	add	r4,r3,r4
    f584:	21000128 	cmpgeui	r4,r4,4
    f588:	3abfff15 	stw	r10,-4(r7)
    f58c:	4a400104 	addi	r9,r9,4
    f590:	203ff81e 	bne	r4,zero,f574 <memmove+0xd0>
    f594:	413fff04 	addi	r4,r8,-4
    f598:	2008d0ba 	srli	r4,r4,2
    f59c:	318000cc 	andi	r6,r6,3
    f5a0:	21000044 	addi	r4,r4,1
    f5a4:	200890ba 	slli	r4,r4,2
    f5a8:	1907883a 	add	r3,r3,r4
    f5ac:	290b883a 	add	r5,r5,r4
    f5b0:	003fcb06 	br	f4e0 <memmove+0x3c>
    f5b4:	f800283a 	ret
    f5b8:	31ffffc4 	addi	r7,r6,-1
    f5bc:	1007883a 	mov	r3,r2
    f5c0:	003fc906 	br	f4e8 <memmove+0x44>
    f5c4:	f800283a 	ret
    f5c8:	400d883a 	mov	r6,r8
    f5cc:	003fc406 	br	f4e0 <memmove+0x3c>

0000f5d0 <memset>:
    f5d0:	20c000cc 	andi	r3,r4,3
    f5d4:	2005883a 	mov	r2,r4
    f5d8:	18003626 	beq	r3,zero,f6b4 <memset+0xe4>
    f5dc:	31ffffc4 	addi	r7,r6,-1
    f5e0:	30003326 	beq	r6,zero,f6b0 <memset+0xe0>
    f5e4:	2811883a 	mov	r8,r5
    f5e8:	2007883a 	mov	r3,r4
    f5ec:	00000306 	br	f5fc <memset+0x2c>
    f5f0:	39ffffc4 	addi	r7,r7,-1
    f5f4:	39bfffe0 	cmpeqi	r6,r7,-1
    f5f8:	30002d1e 	bne	r6,zero,f6b0 <memset+0xe0>
    f5fc:	18c00044 	addi	r3,r3,1
    f600:	198000cc 	andi	r6,r3,3
    f604:	1a3fffc5 	stb	r8,-1(r3)
    f608:	303ff91e 	bne	r6,zero,f5f0 <memset+0x20>
    f60c:	39000130 	cmpltui	r4,r7,4
    f610:	2000221e 	bne	r4,zero,f69c <memset+0xcc>
    f614:	29003fcc 	andi	r4,r5,255
    f618:	200c923a 	slli	r6,r4,8
    f61c:	3a000430 	cmpltui	r8,r7,16
    f620:	3108b03a 	or	r4,r6,r4
    f624:	200c943a 	slli	r6,r4,16
    f628:	310cb03a 	or	r6,r6,r4
    f62c:	40000e1e 	bne	r8,zero,f668 <memset+0x98>
    f630:	393ffc04 	addi	r4,r7,-16
    f634:	2008d13a 	srli	r4,r4,4
    f638:	21000044 	addi	r4,r4,1
    f63c:	2008913a 	slli	r4,r4,4
    f640:	1909883a 	add	r4,r3,r4
    f644:	19800015 	stw	r6,0(r3)
    f648:	19800115 	stw	r6,4(r3)
    f64c:	19800215 	stw	r6,8(r3)
    f650:	19800315 	stw	r6,12(r3)
    f654:	18c00404 	addi	r3,r3,16
    f658:	20fffa1e 	bne	r4,r3,f644 <memset+0x74>
    f65c:	3900030c 	andi	r4,r7,12
    f660:	39c003cc 	andi	r7,r7,15
    f664:	20000d26 	beq	r4,zero,f69c <memset+0xcc>
    f668:	1811883a 	mov	r8,r3
    f66c:	42000104 	addi	r8,r8,4
    f670:	3a09c83a 	sub	r4,r7,r8
    f674:	1909883a 	add	r4,r3,r4
    f678:	21000128 	cmpgeui	r4,r4,4
    f67c:	41bfff15 	stw	r6,-4(r8)
    f680:	203ffa1e 	bne	r4,zero,f66c <memset+0x9c>
    f684:	393fff04 	addi	r4,r7,-4
    f688:	2008d0ba 	srli	r4,r4,2
    f68c:	39c000cc 	andi	r7,r7,3
    f690:	21000044 	addi	r4,r4,1
    f694:	200890ba 	slli	r4,r4,2
    f698:	1907883a 	add	r3,r3,r4
    f69c:	38000426 	beq	r7,zero,f6b0 <memset+0xe0>
    f6a0:	19cf883a 	add	r7,r3,r7
    f6a4:	18c00044 	addi	r3,r3,1
    f6a8:	197fffc5 	stb	r5,-1(r3)
    f6ac:	38fffd1e 	bne	r7,r3,f6a4 <memset+0xd4>
    f6b0:	f800283a 	ret
    f6b4:	2007883a 	mov	r3,r4
    f6b8:	300f883a 	mov	r7,r6
    f6bc:	003fd306 	br	f60c <memset+0x3c>

0000f6c0 <_Balloc>:
    f6c0:	20801317 	ldw	r2,76(r4)
    f6c4:	defffc04 	addi	sp,sp,-16
    f6c8:	dc400115 	stw	r17,4(sp)
    f6cc:	dc000015 	stw	r16,0(sp)
    f6d0:	dfc00315 	stw	ra,12(sp)
    f6d4:	dc800215 	stw	r18,8(sp)
    f6d8:	2021883a 	mov	r16,r4
    f6dc:	2823883a 	mov	r17,r5
    f6e0:	10000e26 	beq	r2,zero,f71c <_Balloc+0x5c>
    f6e4:	880690ba 	slli	r3,r17,2
    f6e8:	10c7883a 	add	r3,r2,r3
    f6ec:	18800017 	ldw	r2,0(r3)
    f6f0:	10001126 	beq	r2,zero,f738 <_Balloc+0x78>
    f6f4:	11000017 	ldw	r4,0(r2)
    f6f8:	19000015 	stw	r4,0(r3)
    f6fc:	10000415 	stw	zero,16(r2)
    f700:	10000315 	stw	zero,12(r2)
    f704:	dfc00317 	ldw	ra,12(sp)
    f708:	dc800217 	ldw	r18,8(sp)
    f70c:	dc400117 	ldw	r17,4(sp)
    f710:	dc000017 	ldw	r16,0(sp)
    f714:	dec00404 	addi	sp,sp,16
    f718:	f800283a 	ret
    f71c:	01800844 	movi	r6,33
    f720:	01400104 	movi	r5,4
    f724:	00124a80 	call	124a8 <_calloc_r>
    f728:	80801315 	stw	r2,76(r16)
    f72c:	103fed1e 	bne	r2,zero,f6e4 <_Balloc+0x24>
    f730:	0005883a 	mov	r2,zero
    f734:	003ff306 	br	f704 <_Balloc+0x44>
    f738:	04800044 	movi	r18,1
    f73c:	9464983a 	sll	r18,r18,r17
    f740:	01400044 	movi	r5,1
    f744:	8009883a 	mov	r4,r16
    f748:	91800144 	addi	r6,r18,5
    f74c:	300c90ba 	slli	r6,r6,2
    f750:	00124a80 	call	124a8 <_calloc_r>
    f754:	103ff626 	beq	r2,zero,f730 <_Balloc+0x70>
    f758:	14400115 	stw	r17,4(r2)
    f75c:	14800215 	stw	r18,8(r2)
    f760:	003fe606 	br	f6fc <_Balloc+0x3c>

0000f764 <_Bfree>:
    f764:	28000726 	beq	r5,zero,f784 <_Bfree+0x20>
    f768:	28c00117 	ldw	r3,4(r5)
    f76c:	20801317 	ldw	r2,76(r4)
    f770:	180690ba 	slli	r3,r3,2
    f774:	10c5883a 	add	r2,r2,r3
    f778:	10c00017 	ldw	r3,0(r2)
    f77c:	28c00015 	stw	r3,0(r5)
    f780:	11400015 	stw	r5,0(r2)
    f784:	f800283a 	ret

0000f788 <__multadd>:
    f788:	defff704 	addi	sp,sp,-36
    f78c:	dc800215 	stw	r18,8(sp)
    f790:	2c800417 	ldw	r18,16(r5)
    f794:	ddc00715 	stw	r23,28(sp)
    f798:	dd800615 	stw	r22,24(sp)
    f79c:	dd400515 	stw	r21,20(sp)
    f7a0:	dd000415 	stw	r20,16(sp)
    f7a4:	dcc00315 	stw	r19,12(sp)
    f7a8:	dc400115 	stw	r17,4(sp)
    f7ac:	dfc00815 	stw	ra,32(sp)
    f7b0:	dc000015 	stw	r16,0(sp)
    f7b4:	2827883a 	mov	r19,r5
    f7b8:	2029883a 	mov	r20,r4
    f7bc:	302b883a 	mov	r21,r6
    f7c0:	3823883a 	mov	r17,r7
    f7c4:	2d800504 	addi	r22,r5,20
    f7c8:	002f883a 	mov	r23,zero
    f7cc:	b4000017 	ldw	r16,0(r22)
    f7d0:	a80b883a 	mov	r5,r21
    f7d4:	b5800104 	addi	r22,r22,4
    f7d8:	813fffcc 	andi	r4,r16,65535
    f7dc:	000608c0 	call	608c <__mulsi3>
    f7e0:	8008d43a 	srli	r4,r16,16
    f7e4:	a80b883a 	mov	r5,r21
    f7e8:	1461883a 	add	r16,r2,r17
    f7ec:	000608c0 	call	608c <__mulsi3>
    f7f0:	800ed43a 	srli	r7,r16,16
    f7f4:	843fffcc 	andi	r16,r16,65535
    f7f8:	bdc00044 	addi	r23,r23,1
    f7fc:	11c5883a 	add	r2,r2,r7
    f800:	1006943a 	slli	r3,r2,16
    f804:	1022d43a 	srli	r17,r2,16
    f808:	1c21883a 	add	r16,r3,r16
    f80c:	b43fff15 	stw	r16,-4(r22)
    f810:	bcbfee16 	blt	r23,r18,f7cc <__multadd+0x44>
    f814:	88000826 	beq	r17,zero,f838 <__multadd+0xb0>
    f818:	98800217 	ldw	r2,8(r19)
    f81c:	9080120e 	bge	r18,r2,f868 <__multadd+0xe0>
    f820:	90800144 	addi	r2,r18,5
    f824:	100490ba 	slli	r2,r2,2
    f828:	94800044 	addi	r18,r18,1
    f82c:	9885883a 	add	r2,r19,r2
    f830:	14400015 	stw	r17,0(r2)
    f834:	9c800415 	stw	r18,16(r19)
    f838:	9805883a 	mov	r2,r19
    f83c:	dfc00817 	ldw	ra,32(sp)
    f840:	ddc00717 	ldw	r23,28(sp)
    f844:	dd800617 	ldw	r22,24(sp)
    f848:	dd400517 	ldw	r21,20(sp)
    f84c:	dd000417 	ldw	r20,16(sp)
    f850:	dcc00317 	ldw	r19,12(sp)
    f854:	dc800217 	ldw	r18,8(sp)
    f858:	dc400117 	ldw	r17,4(sp)
    f85c:	dc000017 	ldw	r16,0(sp)
    f860:	dec00904 	addi	sp,sp,36
    f864:	f800283a 	ret
    f868:	99400117 	ldw	r5,4(r19)
    f86c:	a009883a 	mov	r4,r20
    f870:	29400044 	addi	r5,r5,1
    f874:	000f6c00 	call	f6c0 <_Balloc>
    f878:	1021883a 	mov	r16,r2
    f87c:	10001226 	beq	r2,zero,f8c8 <__multadd+0x140>
    f880:	99800417 	ldw	r6,16(r19)
    f884:	99400304 	addi	r5,r19,12
    f888:	11000304 	addi	r4,r2,12
    f88c:	31800084 	addi	r6,r6,2
    f890:	300c90ba 	slli	r6,r6,2
    f894:	000a1d40 	call	a1d4 <memcpy>
    f898:	98000926 	beq	r19,zero,f8c0 <__multadd+0x138>
    f89c:	98c00117 	ldw	r3,4(r19)
    f8a0:	a0801317 	ldw	r2,76(r20)
    f8a4:	180690ba 	slli	r3,r3,2
    f8a8:	10c5883a 	add	r2,r2,r3
    f8ac:	10c00017 	ldw	r3,0(r2)
    f8b0:	98c00015 	stw	r3,0(r19)
    f8b4:	14c00015 	stw	r19,0(r2)
    f8b8:	8027883a 	mov	r19,r16
    f8bc:	003fd806 	br	f820 <__multadd+0x98>
    f8c0:	8027883a 	mov	r19,r16
    f8c4:	003fd606 	br	f820 <__multadd+0x98>
    f8c8:	01c00074 	movhi	r7,1
    f8cc:	01000074 	movhi	r4,1
    f8d0:	39de5604 	addi	r7,r7,31064
    f8d4:	000d883a 	mov	r6,zero
    f8d8:	01402d44 	movi	r5,181
    f8dc:	211e6b04 	addi	r4,r4,31148
    f8e0:	00124300 	call	12430 <__assert_func>

0000f8e4 <__s2b>:
    f8e4:	defff904 	addi	sp,sp,-28
    f8e8:	dc800215 	stw	r18,8(sp)
    f8ec:	dc000015 	stw	r16,0(sp)
    f8f0:	2025883a 	mov	r18,r4
    f8f4:	2821883a 	mov	r16,r5
    f8f8:	39000204 	addi	r4,r7,8
    f8fc:	01400244 	movi	r5,9
    f900:	dcc00315 	stw	r19,12(sp)
    f904:	dc400115 	stw	r17,4(sp)
    f908:	dfc00615 	stw	ra,24(sp)
    f90c:	3823883a 	mov	r17,r7
    f910:	dd400515 	stw	r21,20(sp)
    f914:	dd000415 	stw	r20,16(sp)
    f918:	3027883a 	mov	r19,r6
    f91c:	0005ed80 	call	5ed8 <__divsi3>
    f920:	88c00290 	cmplti	r3,r17,10
    f924:	1800341e 	bne	r3,zero,f9f8 <__s2b+0x114>
    f928:	00c00044 	movi	r3,1
    f92c:	000b883a 	mov	r5,zero
    f930:	18c7883a 	add	r3,r3,r3
    f934:	29400044 	addi	r5,r5,1
    f938:	18bffd16 	blt	r3,r2,f930 <__s2b+0x4c>
    f93c:	9009883a 	mov	r4,r18
    f940:	000f6c00 	call	f6c0 <_Balloc>
    f944:	100b883a 	mov	r5,r2
    f948:	10002d26 	beq	r2,zero,fa00 <__s2b+0x11c>
    f94c:	d8800717 	ldw	r2,28(sp)
    f950:	28800515 	stw	r2,20(r5)
    f954:	00800044 	movi	r2,1
    f958:	28800415 	stw	r2,16(r5)
    f95c:	98800290 	cmplti	r2,r19,10
    f960:	1000221e 	bne	r2,zero,f9ec <__s2b+0x108>
    f964:	85400244 	addi	r21,r16,9
    f968:	a829883a 	mov	r20,r21
    f96c:	84e1883a 	add	r16,r16,r19
    f970:	a1c00007 	ldb	r7,0(r20)
    f974:	01800284 	movi	r6,10
    f978:	9009883a 	mov	r4,r18
    f97c:	39fff404 	addi	r7,r7,-48
    f980:	000f7880 	call	f788 <__multadd>
    f984:	a5000044 	addi	r20,r20,1
    f988:	100b883a 	mov	r5,r2
    f98c:	a43ff81e 	bne	r20,r16,f970 <__s2b+0x8c>
    f990:	9c3ffe04 	addi	r16,r19,-8
    f994:	ac21883a 	add	r16,r21,r16
    f998:	9c400a0e 	bge	r19,r17,f9c4 <__s2b+0xe0>
    f99c:	8ce3c83a 	sub	r17,r17,r19
    f9a0:	8463883a 	add	r17,r16,r17
    f9a4:	81c00007 	ldb	r7,0(r16)
    f9a8:	01800284 	movi	r6,10
    f9ac:	9009883a 	mov	r4,r18
    f9b0:	39fff404 	addi	r7,r7,-48
    f9b4:	000f7880 	call	f788 <__multadd>
    f9b8:	84000044 	addi	r16,r16,1
    f9bc:	100b883a 	mov	r5,r2
    f9c0:	8c3ff81e 	bne	r17,r16,f9a4 <__s2b+0xc0>
    f9c4:	2805883a 	mov	r2,r5
    f9c8:	dfc00617 	ldw	ra,24(sp)
    f9cc:	dd400517 	ldw	r21,20(sp)
    f9d0:	dd000417 	ldw	r20,16(sp)
    f9d4:	dcc00317 	ldw	r19,12(sp)
    f9d8:	dc800217 	ldw	r18,8(sp)
    f9dc:	dc400117 	ldw	r17,4(sp)
    f9e0:	dc000017 	ldw	r16,0(sp)
    f9e4:	dec00704 	addi	sp,sp,28
    f9e8:	f800283a 	ret
    f9ec:	84000284 	addi	r16,r16,10
    f9f0:	04c00244 	movi	r19,9
    f9f4:	003fe806 	br	f998 <__s2b+0xb4>
    f9f8:	000b883a 	mov	r5,zero
    f9fc:	003fcf06 	br	f93c <__s2b+0x58>
    fa00:	01c00074 	movhi	r7,1
    fa04:	01000074 	movhi	r4,1
    fa08:	39de5604 	addi	r7,r7,31064
    fa0c:	000d883a 	mov	r6,zero
    fa10:	01403384 	movi	r5,206
    fa14:	211e6b04 	addi	r4,r4,31148
    fa18:	00124300 	call	12430 <__assert_func>

0000fa1c <__hi0bits>:
    fa1c:	20bfffec 	andhi	r2,r4,65535
    fa20:	1000131e 	bne	r2,zero,fa70 <__hi0bits+0x54>
    fa24:	2008943a 	slli	r4,r4,16
    fa28:	00800404 	movi	r2,16
    fa2c:	20ffc02c 	andhi	r3,r4,65280
    fa30:	1800021e 	bne	r3,zero,fa3c <__hi0bits+0x20>
    fa34:	2008923a 	slli	r4,r4,8
    fa38:	10800204 	addi	r2,r2,8
    fa3c:	20fc002c 	andhi	r3,r4,61440
    fa40:	1800021e 	bne	r3,zero,fa4c <__hi0bits+0x30>
    fa44:	2008913a 	slli	r4,r4,4
    fa48:	10800104 	addi	r2,r2,4
    fa4c:	20f0002c 	andhi	r3,r4,49152
    fa50:	1800021e 	bne	r3,zero,fa5c <__hi0bits+0x40>
    fa54:	200890ba 	slli	r4,r4,2
    fa58:	10800084 	addi	r2,r2,2
    fa5c:	20000316 	blt	r4,zero,fa6c <__hi0bits+0x50>
    fa60:	2110002c 	andhi	r4,r4,16384
    fa64:	10800044 	addi	r2,r2,1
    fa68:	20000326 	beq	r4,zero,fa78 <__hi0bits+0x5c>
    fa6c:	f800283a 	ret
    fa70:	0005883a 	mov	r2,zero
    fa74:	003fed06 	br	fa2c <__hi0bits+0x10>
    fa78:	00800804 	movi	r2,32
    fa7c:	f800283a 	ret

0000fa80 <__lo0bits>:
    fa80:	20c00017 	ldw	r3,0(r4)
    fa84:	188001cc 	andi	r2,r3,7
    fa88:	10000826 	beq	r2,zero,faac <__lo0bits+0x2c>
    fa8c:	1880004c 	andi	r2,r3,1
    fa90:	10001f1e 	bne	r2,zero,fb10 <__lo0bits+0x90>
    fa94:	1880008c 	andi	r2,r3,2
    fa98:	10002126 	beq	r2,zero,fb20 <__lo0bits+0xa0>
    fa9c:	1806d07a 	srli	r3,r3,1
    faa0:	00800044 	movi	r2,1
    faa4:	20c00015 	stw	r3,0(r4)
    faa8:	f800283a 	ret
    faac:	18bfffcc 	andi	r2,r3,65535
    fab0:	10001426 	beq	r2,zero,fb04 <__lo0bits+0x84>
    fab4:	0005883a 	mov	r2,zero
    fab8:	19403fcc 	andi	r5,r3,255
    fabc:	2800021e 	bne	r5,zero,fac8 <__lo0bits+0x48>
    fac0:	1806d23a 	srli	r3,r3,8
    fac4:	10800204 	addi	r2,r2,8
    fac8:	194003cc 	andi	r5,r3,15
    facc:	2800021e 	bne	r5,zero,fad8 <__lo0bits+0x58>
    fad0:	1806d13a 	srli	r3,r3,4
    fad4:	10800104 	addi	r2,r2,4
    fad8:	194000cc 	andi	r5,r3,3
    fadc:	2800021e 	bne	r5,zero,fae8 <__lo0bits+0x68>
    fae0:	1806d0ba 	srli	r3,r3,2
    fae4:	10800084 	addi	r2,r2,2
    fae8:	1940004c 	andi	r5,r3,1
    faec:	2800031e 	bne	r5,zero,fafc <__lo0bits+0x7c>
    faf0:	1806d07a 	srli	r3,r3,1
    faf4:	10800044 	addi	r2,r2,1
    faf8:	18000726 	beq	r3,zero,fb18 <__lo0bits+0x98>
    fafc:	20c00015 	stw	r3,0(r4)
    fb00:	f800283a 	ret
    fb04:	1806d43a 	srli	r3,r3,16
    fb08:	00800404 	movi	r2,16
    fb0c:	003fea06 	br	fab8 <__lo0bits+0x38>
    fb10:	0005883a 	mov	r2,zero
    fb14:	f800283a 	ret
    fb18:	00800804 	movi	r2,32
    fb1c:	f800283a 	ret
    fb20:	1806d0ba 	srli	r3,r3,2
    fb24:	00800084 	movi	r2,2
    fb28:	20c00015 	stw	r3,0(r4)
    fb2c:	f800283a 	ret

0000fb30 <__i2b>:
    fb30:	20c01317 	ldw	r3,76(r4)
    fb34:	defffd04 	addi	sp,sp,-12
    fb38:	dc400115 	stw	r17,4(sp)
    fb3c:	dc000015 	stw	r16,0(sp)
    fb40:	dfc00215 	stw	ra,8(sp)
    fb44:	2021883a 	mov	r16,r4
    fb48:	2823883a 	mov	r17,r5
    fb4c:	18000d26 	beq	r3,zero,fb84 <__i2b+0x54>
    fb50:	18800117 	ldw	r2,4(r3)
    fb54:	10001826 	beq	r2,zero,fbb8 <__i2b+0x88>
    fb58:	11000017 	ldw	r4,0(r2)
    fb5c:	19000115 	stw	r4,4(r3)
    fb60:	00c00044 	movi	r3,1
    fb64:	10000315 	stw	zero,12(r2)
    fb68:	14400515 	stw	r17,20(r2)
    fb6c:	10c00415 	stw	r3,16(r2)
    fb70:	dfc00217 	ldw	ra,8(sp)
    fb74:	dc400117 	ldw	r17,4(sp)
    fb78:	dc000017 	ldw	r16,0(sp)
    fb7c:	dec00304 	addi	sp,sp,12
    fb80:	f800283a 	ret
    fb84:	01800844 	movi	r6,33
    fb88:	01400104 	movi	r5,4
    fb8c:	00124a80 	call	124a8 <_calloc_r>
    fb90:	80801315 	stw	r2,76(r16)
    fb94:	1007883a 	mov	r3,r2
    fb98:	103fed1e 	bne	r2,zero,fb50 <__i2b+0x20>
    fb9c:	01c00074 	movhi	r7,1
    fba0:	01000074 	movhi	r4,1
    fba4:	39de5604 	addi	r7,r7,31064
    fba8:	000d883a 	mov	r6,zero
    fbac:	01405004 	movi	r5,320
    fbb0:	211e6b04 	addi	r4,r4,31148
    fbb4:	00124300 	call	12430 <__assert_func>
    fbb8:	01800704 	movi	r6,28
    fbbc:	01400044 	movi	r5,1
    fbc0:	8009883a 	mov	r4,r16
    fbc4:	00124a80 	call	124a8 <_calloc_r>
    fbc8:	103ff426 	beq	r2,zero,fb9c <__i2b+0x6c>
    fbcc:	00c00044 	movi	r3,1
    fbd0:	10c00115 	stw	r3,4(r2)
    fbd4:	00c00084 	movi	r3,2
    fbd8:	10c00215 	stw	r3,8(r2)
    fbdc:	003fe006 	br	fb60 <__i2b+0x30>

0000fbe0 <__multiply>:
    fbe0:	defff004 	addi	sp,sp,-64
    fbe4:	dd800c15 	stw	r22,48(sp)
    fbe8:	dc400715 	stw	r17,28(sp)
    fbec:	2d800417 	ldw	r22,16(r5)
    fbf0:	34400417 	ldw	r17,16(r6)
    fbf4:	dc800815 	stw	r18,32(sp)
    fbf8:	dc000615 	stw	r16,24(sp)
    fbfc:	dfc00f15 	stw	ra,60(sp)
    fc00:	df000e15 	stw	fp,56(sp)
    fc04:	ddc00d15 	stw	r23,52(sp)
    fc08:	dd400b15 	stw	r21,44(sp)
    fc0c:	dd000a15 	stw	r20,40(sp)
    fc10:	dcc00915 	stw	r19,36(sp)
    fc14:	2825883a 	mov	r18,r5
    fc18:	3021883a 	mov	r16,r6
    fc1c:	b4400516 	blt	r22,r17,fc34 <__multiply+0x54>
    fc20:	8807883a 	mov	r3,r17
    fc24:	2821883a 	mov	r16,r5
    fc28:	b023883a 	mov	r17,r22
    fc2c:	3025883a 	mov	r18,r6
    fc30:	182d883a 	mov	r22,r3
    fc34:	80800217 	ldw	r2,8(r16)
    fc38:	8d87883a 	add	r3,r17,r22
    fc3c:	d8c00015 	stw	r3,0(sp)
    fc40:	81400117 	ldw	r5,4(r16)
    fc44:	10c0010e 	bge	r2,r3,fc4c <__multiply+0x6c>
    fc48:	29400044 	addi	r5,r5,1
    fc4c:	000f6c00 	call	f6c0 <_Balloc>
    fc50:	d8800515 	stw	r2,20(sp)
    fc54:	10008c26 	beq	r2,zero,fe88 <__multiply+0x2a8>
    fc58:	d8800017 	ldw	r2,0(sp)
    fc5c:	102690ba 	slli	r19,r2,2
    fc60:	d8800517 	ldw	r2,20(sp)
    fc64:	15000504 	addi	r20,r2,20
    fc68:	a4c5883a 	add	r2,r20,r19
    fc6c:	d8800115 	stw	r2,4(sp)
    fc70:	a0800a2e 	bgeu	r20,r2,fc9c <__multiply+0xbc>
    fc74:	d8800117 	ldw	r2,4(sp)
    fc78:	d8c00517 	ldw	r3,20(sp)
    fc7c:	000b883a 	mov	r5,zero
    fc80:	a009883a 	mov	r4,r20
    fc84:	10cdc83a 	sub	r6,r2,r3
    fc88:	31bffac4 	addi	r6,r6,-21
    fc8c:	300cd0ba 	srli	r6,r6,2
    fc90:	31800044 	addi	r6,r6,1
    fc94:	300c90ba 	slli	r6,r6,2
    fc98:	000f5d00 	call	f5d0 <memset>
    fc9c:	b02c90ba 	slli	r22,r22,2
    fca0:	882290ba 	slli	r17,r17,2
    fca4:	94800504 	addi	r18,r18,20
    fca8:	80800504 	addi	r2,r16,20
    fcac:	9587883a 	add	r3,r18,r22
    fcb0:	d8800315 	stw	r2,12(sp)
    fcb4:	d8c00215 	stw	r3,8(sp)
    fcb8:	1463883a 	add	r17,r2,r17
    fcbc:	90c0542e 	bgeu	r18,r3,fe10 <__multiply+0x230>
    fcc0:	80800544 	addi	r2,r16,21
    fcc4:	88806d36 	bltu	r17,r2,fe7c <__multiply+0x29c>
    fcc8:	8c05c83a 	sub	r2,r17,r16
    fccc:	10bffac4 	addi	r2,r2,-21
    fcd0:	1004d0ba 	srli	r2,r2,2
    fcd4:	10800044 	addi	r2,r2,1
    fcd8:	100490ba 	slli	r2,r2,2
    fcdc:	d8800415 	stw	r2,16(sp)
    fce0:	00000606 	br	fcfc <__multiply+0x11c>
    fce4:	102ad43a 	srli	r21,r2,16
    fce8:	a800271e 	bne	r21,zero,fd88 <__multiply+0x1a8>
    fcec:	d8800217 	ldw	r2,8(sp)
    fcf0:	94800104 	addi	r18,r18,4
    fcf4:	a5000104 	addi	r20,r20,4
    fcf8:	9080452e 	bgeu	r18,r2,fe10 <__multiply+0x230>
    fcfc:	90800017 	ldw	r2,0(r18)
    fd00:	15ffffcc 	andi	r23,r2,65535
    fd04:	b83ff726 	beq	r23,zero,fce4 <__multiply+0x104>
    fd08:	dd400317 	ldw	r21,12(sp)
    fd0c:	a02d883a 	mov	r22,r20
    fd10:	0027883a 	mov	r19,zero
    fd14:	af000017 	ldw	fp,0(r21)
    fd18:	b4000017 	ldw	r16,0(r22)
    fd1c:	b80b883a 	mov	r5,r23
    fd20:	e13fffcc 	andi	r4,fp,65535
    fd24:	000608c0 	call	608c <__mulsi3>
    fd28:	e008d43a 	srli	r4,fp,16
    fd2c:	823fffcc 	andi	r8,r16,65535
    fd30:	1205883a 	add	r2,r2,r8
    fd34:	b80b883a 	mov	r5,r23
    fd38:	14e7883a 	add	r19,r2,r19
    fd3c:	8020d43a 	srli	r16,r16,16
    fd40:	000608c0 	call	608c <__mulsi3>
    fd44:	9808d43a 	srli	r4,r19,16
    fd48:	1405883a 	add	r2,r2,r16
    fd4c:	98ffffcc 	andi	r3,r19,65535
    fd50:	1105883a 	add	r2,r2,r4
    fd54:	1008943a 	slli	r4,r2,16
    fd58:	b5800104 	addi	r22,r22,4
    fd5c:	ad400104 	addi	r21,r21,4
    fd60:	20c6b03a 	or	r3,r4,r3
    fd64:	b0ffff15 	stw	r3,-4(r22)
    fd68:	1026d43a 	srli	r19,r2,16
    fd6c:	ac7fe936 	bltu	r21,r17,fd14 <__multiply+0x134>
    fd70:	d8800417 	ldw	r2,16(sp)
    fd74:	a085883a 	add	r2,r20,r2
    fd78:	14c00015 	stw	r19,0(r2)
    fd7c:	90800017 	ldw	r2,0(r18)
    fd80:	102ad43a 	srli	r21,r2,16
    fd84:	a83fd926 	beq	r21,zero,fcec <__multiply+0x10c>
    fd88:	a5c00017 	ldw	r23,0(r20)
    fd8c:	dd800317 	ldw	r22,12(sp)
    fd90:	a027883a 	mov	r19,r20
    fd94:	b821883a 	mov	r16,r23
    fd98:	0039883a 	mov	fp,zero
    fd9c:	b100000b 	ldhu	r4,0(r22)
    fda0:	a80b883a 	mov	r5,r21
    fda4:	9cc00104 	addi	r19,r19,4
    fda8:	000608c0 	call	608c <__mulsi3>
    fdac:	800cd43a 	srli	r6,r16,16
    fdb0:	b8ffffcc 	andi	r3,r23,65535
    fdb4:	b5800104 	addi	r22,r22,4
    fdb8:	118d883a 	add	r6,r2,r6
    fdbc:	3739883a 	add	fp,r6,fp
    fdc0:	e004943a 	slli	r2,fp,16
    fdc4:	9c000017 	ldw	r16,0(r19)
    fdc8:	a80b883a 	mov	r5,r21
    fdcc:	10c6b03a 	or	r3,r2,r3
    fdd0:	98ffff15 	stw	r3,-4(r19)
    fdd4:	b13fff8b 	ldhu	r4,-2(r22)
    fdd8:	000608c0 	call	608c <__mulsi3>
    fddc:	e00cd43a 	srli	r6,fp,16
    fde0:	80ffffcc 	andi	r3,r16,65535
    fde4:	10c7883a 	add	r3,r2,r3
    fde8:	19af883a 	add	r23,r3,r6
    fdec:	b838d43a 	srli	fp,r23,16
    fdf0:	b47fea36 	bltu	r22,r17,fd9c <__multiply+0x1bc>
    fdf4:	d8800417 	ldw	r2,16(sp)
    fdf8:	94800104 	addi	r18,r18,4
    fdfc:	a085883a 	add	r2,r20,r2
    fe00:	15c00015 	stw	r23,0(r2)
    fe04:	d8800217 	ldw	r2,8(sp)
    fe08:	a5000104 	addi	r20,r20,4
    fe0c:	90bfbb36 	bltu	r18,r2,fcfc <__multiply+0x11c>
    fe10:	d8800017 	ldw	r2,0(sp)
    fe14:	00800516 	blt	zero,r2,fe2c <__multiply+0x24c>
    fe18:	00000906 	br	fe40 <__multiply+0x260>
    fe1c:	d8800017 	ldw	r2,0(sp)
    fe20:	10bfffc4 	addi	r2,r2,-1
    fe24:	d8800015 	stw	r2,0(sp)
    fe28:	10000526 	beq	r2,zero,fe40 <__multiply+0x260>
    fe2c:	d8c00117 	ldw	r3,4(sp)
    fe30:	18bfff17 	ldw	r2,-4(r3)
    fe34:	18ffff04 	addi	r3,r3,-4
    fe38:	d8c00115 	stw	r3,4(sp)
    fe3c:	103ff726 	beq	r2,zero,fe1c <__multiply+0x23c>
    fe40:	d8800517 	ldw	r2,20(sp)
    fe44:	d8c00017 	ldw	r3,0(sp)
    fe48:	10c00415 	stw	r3,16(r2)
    fe4c:	dfc00f17 	ldw	ra,60(sp)
    fe50:	df000e17 	ldw	fp,56(sp)
    fe54:	ddc00d17 	ldw	r23,52(sp)
    fe58:	dd800c17 	ldw	r22,48(sp)
    fe5c:	dd400b17 	ldw	r21,44(sp)
    fe60:	dd000a17 	ldw	r20,40(sp)
    fe64:	dcc00917 	ldw	r19,36(sp)
    fe68:	dc800817 	ldw	r18,32(sp)
    fe6c:	dc400717 	ldw	r17,28(sp)
    fe70:	dc000617 	ldw	r16,24(sp)
    fe74:	dec01004 	addi	sp,sp,64
    fe78:	f800283a 	ret
    fe7c:	00800104 	movi	r2,4
    fe80:	d8800415 	stw	r2,16(sp)
    fe84:	003f9d06 	br	fcfc <__multiply+0x11c>
    fe88:	01c00074 	movhi	r7,1
    fe8c:	01000074 	movhi	r4,1
    fe90:	39de5604 	addi	r7,r7,31064
    fe94:	000d883a 	mov	r6,zero
    fe98:	01405744 	movi	r5,349
    fe9c:	211e6b04 	addi	r4,r4,31148
    fea0:	00124300 	call	12430 <__assert_func>

0000fea4 <__pow5mult>:
    fea4:	defffb04 	addi	sp,sp,-20
    fea8:	dcc00315 	stw	r19,12(sp)
    feac:	dc000015 	stw	r16,0(sp)
    feb0:	dfc00415 	stw	ra,16(sp)
    feb4:	dc800215 	stw	r18,8(sp)
    feb8:	dc400115 	stw	r17,4(sp)
    febc:	308000cc 	andi	r2,r6,3
    fec0:	3021883a 	mov	r16,r6
    fec4:	2027883a 	mov	r19,r4
    fec8:	10002d1e 	bne	r2,zero,ff80 <__pow5mult+0xdc>
    fecc:	2825883a 	mov	r18,r5
    fed0:	8021d0ba 	srai	r16,r16,2
    fed4:	80001926 	beq	r16,zero,ff3c <__pow5mult+0x98>
    fed8:	9c401217 	ldw	r17,72(r19)
    fedc:	8800061e 	bne	r17,zero,fef8 <__pow5mult+0x54>
    fee0:	00002f06 	br	ffa0 <__pow5mult+0xfc>
    fee4:	8021d07a 	srai	r16,r16,1
    fee8:	80001426 	beq	r16,zero,ff3c <__pow5mult+0x98>
    feec:	88800017 	ldw	r2,0(r17)
    fef0:	10001a26 	beq	r2,zero,ff5c <__pow5mult+0xb8>
    fef4:	1023883a 	mov	r17,r2
    fef8:	8080004c 	andi	r2,r16,1
    fefc:	103ff926 	beq	r2,zero,fee4 <__pow5mult+0x40>
    ff00:	880d883a 	mov	r6,r17
    ff04:	900b883a 	mov	r5,r18
    ff08:	9809883a 	mov	r4,r19
    ff0c:	000fbe00 	call	fbe0 <__multiply>
    ff10:	90001926 	beq	r18,zero,ff78 <__pow5mult+0xd4>
    ff14:	91000117 	ldw	r4,4(r18)
    ff18:	98c01317 	ldw	r3,76(r19)
    ff1c:	8021d07a 	srai	r16,r16,1
    ff20:	200890ba 	slli	r4,r4,2
    ff24:	1907883a 	add	r3,r3,r4
    ff28:	19000017 	ldw	r4,0(r3)
    ff2c:	91000015 	stw	r4,0(r18)
    ff30:	1c800015 	stw	r18,0(r3)
    ff34:	1025883a 	mov	r18,r2
    ff38:	803fec1e 	bne	r16,zero,feec <__pow5mult+0x48>
    ff3c:	9005883a 	mov	r2,r18
    ff40:	dfc00417 	ldw	ra,16(sp)
    ff44:	dcc00317 	ldw	r19,12(sp)
    ff48:	dc800217 	ldw	r18,8(sp)
    ff4c:	dc400117 	ldw	r17,4(sp)
    ff50:	dc000017 	ldw	r16,0(sp)
    ff54:	dec00504 	addi	sp,sp,20
    ff58:	f800283a 	ret
    ff5c:	880d883a 	mov	r6,r17
    ff60:	880b883a 	mov	r5,r17
    ff64:	9809883a 	mov	r4,r19
    ff68:	000fbe00 	call	fbe0 <__multiply>
    ff6c:	88800015 	stw	r2,0(r17)
    ff70:	10000015 	stw	zero,0(r2)
    ff74:	003fdf06 	br	fef4 <__pow5mult+0x50>
    ff78:	1025883a 	mov	r18,r2
    ff7c:	003fd906 	br	fee4 <__pow5mult+0x40>
    ff80:	100490ba 	slli	r2,r2,2
    ff84:	00c00074 	movhi	r3,1
    ff88:	000f883a 	mov	r7,zero
    ff8c:	10c7883a 	add	r3,r2,r3
    ff90:	199e7a17 	ldw	r6,31208(r3)
    ff94:	000f7880 	call	f788 <__multadd>
    ff98:	1025883a 	mov	r18,r2
    ff9c:	003fcc06 	br	fed0 <__pow5mult+0x2c>
    ffa0:	01400044 	movi	r5,1
    ffa4:	9809883a 	mov	r4,r19
    ffa8:	000f6c00 	call	f6c0 <_Balloc>
    ffac:	1023883a 	mov	r17,r2
    ffb0:	10000726 	beq	r2,zero,ffd0 <__pow5mult+0x12c>
    ffb4:	00809c44 	movi	r2,625
    ffb8:	88800515 	stw	r2,20(r17)
    ffbc:	00800044 	movi	r2,1
    ffc0:	88800415 	stw	r2,16(r17)
    ffc4:	9c401215 	stw	r17,72(r19)
    ffc8:	88000015 	stw	zero,0(r17)
    ffcc:	003fca06 	br	fef8 <__pow5mult+0x54>
    ffd0:	01c00074 	movhi	r7,1
    ffd4:	01000074 	movhi	r4,1
    ffd8:	39de5604 	addi	r7,r7,31064
    ffdc:	000d883a 	mov	r6,zero
    ffe0:	01405004 	movi	r5,320
    ffe4:	211e6b04 	addi	r4,r4,31148
    ffe8:	00124300 	call	12430 <__assert_func>

0000ffec <__lshift>:
    ffec:	defff804 	addi	sp,sp,-32
    fff0:	dd800615 	stw	r22,24(sp)
    fff4:	dc000015 	stw	r16,0(sp)
    fff8:	302dd17a 	srai	r22,r6,5
    fffc:	2c000417 	ldw	r16,16(r5)
   10000:	28800217 	ldw	r2,8(r5)
   10004:	dd000415 	stw	r20,16(sp)
   10008:	b421883a 	add	r16,r22,r16
   1000c:	dcc00315 	stw	r19,12(sp)
   10010:	dc800215 	stw	r18,8(sp)
   10014:	dc400115 	stw	r17,4(sp)
   10018:	dfc00715 	stw	ra,28(sp)
   1001c:	dd400515 	stw	r21,20(sp)
   10020:	85000044 	addi	r20,r16,1
   10024:	2827883a 	mov	r19,r5
   10028:	3025883a 	mov	r18,r6
   1002c:	29400117 	ldw	r5,4(r5)
   10030:	2023883a 	mov	r17,r4
   10034:	1500030e 	bge	r2,r20,10044 <__lshift+0x58>
   10038:	1085883a 	add	r2,r2,r2
   1003c:	29400044 	addi	r5,r5,1
   10040:	153ffd16 	blt	r2,r20,10038 <__lshift+0x4c>
   10044:	8809883a 	mov	r4,r17
   10048:	000f6c00 	call	f6c0 <_Balloc>
   1004c:	102b883a 	mov	r21,r2
   10050:	10004126 	beq	r2,zero,10158 <__lshift+0x16c>
   10054:	11000504 	addi	r4,r2,20
   10058:	0580050e 	bge	zero,r22,10070 <__lshift+0x84>
   1005c:	b02c90ba 	slli	r22,r22,2
   10060:	000b883a 	mov	r5,zero
   10064:	b00d883a 	mov	r6,r22
   10068:	000f5d00 	call	f5d0 <memset>
   1006c:	1589883a 	add	r4,r2,r22
   10070:	9a000417 	ldw	r8,16(r19)
   10074:	98c00504 	addi	r3,r19,20
   10078:	948007cc 	andi	r18,r18,31
   1007c:	401090ba 	slli	r8,r8,2
   10080:	1a11883a 	add	r8,r3,r8
   10084:	90002c26 	beq	r18,zero,10138 <__lshift+0x14c>
   10088:	01400804 	movi	r5,32
   1008c:	2c8bc83a 	sub	r5,r5,r18
   10090:	2005883a 	mov	r2,r4
   10094:	000f883a 	mov	r7,zero
   10098:	19800017 	ldw	r6,0(r3)
   1009c:	10800104 	addi	r2,r2,4
   100a0:	18c00104 	addi	r3,r3,4
   100a4:	348c983a 	sll	r6,r6,r18
   100a8:	31ccb03a 	or	r6,r6,r7
   100ac:	11bfff15 	stw	r6,-4(r2)
   100b0:	19bfff17 	ldw	r6,-4(r3)
   100b4:	314ed83a 	srl	r7,r6,r5
   100b8:	1a3ff736 	bltu	r3,r8,10098 <__lshift+0xac>
   100bc:	98800544 	addi	r2,r19,21
   100c0:	40802336 	bltu	r8,r2,10150 <__lshift+0x164>
   100c4:	44c7c83a 	sub	r3,r8,r19
   100c8:	18fffac4 	addi	r3,r3,-21
   100cc:	1806d0ba 	srli	r3,r3,2
   100d0:	18c00044 	addi	r3,r3,1
   100d4:	180690ba 	slli	r3,r3,2
   100d8:	20c9883a 	add	r4,r4,r3
   100dc:	21c00015 	stw	r7,0(r4)
   100e0:	38000126 	beq	r7,zero,100e8 <__lshift+0xfc>
   100e4:	a021883a 	mov	r16,r20
   100e8:	ac000415 	stw	r16,16(r21)
   100ec:	98000726 	beq	r19,zero,1010c <__lshift+0x120>
   100f0:	98c00117 	ldw	r3,4(r19)
   100f4:	88801317 	ldw	r2,76(r17)
   100f8:	180690ba 	slli	r3,r3,2
   100fc:	10c5883a 	add	r2,r2,r3
   10100:	10c00017 	ldw	r3,0(r2)
   10104:	98c00015 	stw	r3,0(r19)
   10108:	14c00015 	stw	r19,0(r2)
   1010c:	a805883a 	mov	r2,r21
   10110:	dfc00717 	ldw	ra,28(sp)
   10114:	dd800617 	ldw	r22,24(sp)
   10118:	dd400517 	ldw	r21,20(sp)
   1011c:	dd000417 	ldw	r20,16(sp)
   10120:	dcc00317 	ldw	r19,12(sp)
   10124:	dc800217 	ldw	r18,8(sp)
   10128:	dc400117 	ldw	r17,4(sp)
   1012c:	dc000017 	ldw	r16,0(sp)
   10130:	dec00804 	addi	sp,sp,32
   10134:	f800283a 	ret
   10138:	18800017 	ldw	r2,0(r3)
   1013c:	18c00104 	addi	r3,r3,4
   10140:	21000104 	addi	r4,r4,4
   10144:	20bfff15 	stw	r2,-4(r4)
   10148:	1a3ffb36 	bltu	r3,r8,10138 <__lshift+0x14c>
   1014c:	003fe606 	br	100e8 <__lshift+0xfc>
   10150:	00c00104 	movi	r3,4
   10154:	003fe006 	br	100d8 <__lshift+0xec>
   10158:	01c00074 	movhi	r7,1
   1015c:	01000074 	movhi	r4,1
   10160:	39de5604 	addi	r7,r7,31064
   10164:	000d883a 	mov	r6,zero
   10168:	01407644 	movi	r5,473
   1016c:	211e6b04 	addi	r4,r4,31148
   10170:	00124300 	call	12430 <__assert_func>

00010174 <__mcmp>:
   10174:	21800417 	ldw	r6,16(r4)
   10178:	28c00417 	ldw	r3,16(r5)
   1017c:	30c5c83a 	sub	r2,r6,r3
   10180:	30c00e1e 	bne	r6,r3,101bc <__mcmp+0x48>
   10184:	180690ba 	slli	r3,r3,2
   10188:	21c00504 	addi	r7,r4,20
   1018c:	29400504 	addi	r5,r5,20
   10190:	38c9883a 	add	r4,r7,r3
   10194:	28c7883a 	add	r3,r5,r3
   10198:	00000106 	br	101a0 <__mcmp+0x2c>
   1019c:	3900082e 	bgeu	r7,r4,101c0 <__mcmp+0x4c>
   101a0:	21bfff17 	ldw	r6,-4(r4)
   101a4:	197fff17 	ldw	r5,-4(r3)
   101a8:	213fff04 	addi	r4,r4,-4
   101ac:	18ffff04 	addi	r3,r3,-4
   101b0:	317ffa26 	beq	r6,r5,1019c <__mcmp+0x28>
   101b4:	3140032e 	bgeu	r6,r5,101c4 <__mcmp+0x50>
   101b8:	00bfffc4 	movi	r2,-1
   101bc:	f800283a 	ret
   101c0:	f800283a 	ret
   101c4:	00800044 	movi	r2,1
   101c8:	f800283a 	ret

000101cc <__mdiff>:
   101cc:	28800417 	ldw	r2,16(r5)
   101d0:	30c00417 	ldw	r3,16(r6)
   101d4:	defffc04 	addi	sp,sp,-16
   101d8:	dc800215 	stw	r18,8(sp)
   101dc:	dc400115 	stw	r17,4(sp)
   101e0:	dc000015 	stw	r16,0(sp)
   101e4:	dfc00315 	stw	ra,12(sp)
   101e8:	2823883a 	mov	r17,r5
   101ec:	3021883a 	mov	r16,r6
   101f0:	10e5c83a 	sub	r18,r2,r3
   101f4:	10c0641e 	bne	r2,r3,10388 <__mdiff+0x1bc>
   101f8:	180c90ba 	slli	r6,r3,2
   101fc:	29400504 	addi	r5,r5,20
   10200:	80c00504 	addi	r3,r16,20
   10204:	2985883a 	add	r2,r5,r6
   10208:	1987883a 	add	r3,r3,r6
   1020c:	00000106 	br	10214 <__mdiff+0x48>
   10210:	2880642e 	bgeu	r5,r2,103a4 <__mdiff+0x1d8>
   10214:	11bfff17 	ldw	r6,-4(r2)
   10218:	19ffff17 	ldw	r7,-4(r3)
   1021c:	10bfff04 	addi	r2,r2,-4
   10220:	18ffff04 	addi	r3,r3,-4
   10224:	31fffa26 	beq	r6,r7,10210 <__mdiff+0x44>
   10228:	31c05236 	bltu	r6,r7,10374 <__mdiff+0x1a8>
   1022c:	89400117 	ldw	r5,4(r17)
   10230:	000f6c00 	call	f6c0 <_Balloc>
   10234:	10006226 	beq	r2,zero,103c0 <__mdiff+0x1f4>
   10238:	8a400417 	ldw	r9,16(r17)
   1023c:	83000417 	ldw	r12,16(r16)
   10240:	8ac00504 	addi	r11,r17,20
   10244:	481090ba 	slli	r8,r9,2
   10248:	601890ba 	slli	r12,r12,2
   1024c:	81800504 	addi	r6,r16,20
   10250:	13400504 	addi	r13,r2,20
   10254:	14800315 	stw	r18,12(r2)
   10258:	5a11883a 	add	r8,r11,r8
   1025c:	3319883a 	add	r12,r6,r12
   10260:	681d883a 	mov	r14,r13
   10264:	5815883a 	mov	r10,r11
   10268:	0007883a 	mov	r3,zero
   1026c:	51000017 	ldw	r4,0(r10)
   10270:	31c00017 	ldw	r7,0(r6)
   10274:	73800104 	addi	r14,r14,4
   10278:	217fffcc 	andi	r5,r4,65535
   1027c:	28cb883a 	add	r5,r5,r3
   10280:	38ffffcc 	andi	r3,r7,65535
   10284:	28cbc83a 	sub	r5,r5,r3
   10288:	380ed43a 	srli	r7,r7,16
   1028c:	2006d43a 	srli	r3,r4,16
   10290:	2809d43a 	srai	r4,r5,16
   10294:	297fffcc 	andi	r5,r5,65535
   10298:	19c7c83a 	sub	r3,r3,r7
   1029c:	1907883a 	add	r3,r3,r4
   102a0:	1808943a 	slli	r4,r3,16
   102a4:	31800104 	addi	r6,r6,4
   102a8:	1807d43a 	srai	r3,r3,16
   102ac:	214ab03a 	or	r5,r4,r5
   102b0:	717fff15 	stw	r5,-4(r14)
   102b4:	52800104 	addi	r10,r10,4
   102b8:	333fec36 	bltu	r6,r12,1026c <__mdiff+0xa0>
   102bc:	640fc83a 	sub	r7,r12,r16
   102c0:	39fffac4 	addi	r7,r7,-21
   102c4:	84000544 	addi	r16,r16,21
   102c8:	380ed0ba 	srli	r7,r7,2
   102cc:	64003336 	bltu	r12,r16,1039c <__mdiff+0x1d0>
   102d0:	380890ba 	slli	r4,r7,2
   102d4:	6909883a 	add	r4,r13,r4
   102d8:	64002e36 	bltu	r12,r16,10394 <__mdiff+0x1c8>
   102dc:	39800044 	addi	r6,r7,1
   102e0:	300c90ba 	slli	r6,r6,2
   102e4:	5997883a 	add	r11,r11,r6
   102e8:	699b883a 	add	r13,r13,r6
   102ec:	5a00152e 	bgeu	r11,r8,10344 <__mdiff+0x178>
   102f0:	680f883a 	mov	r7,r13
   102f4:	580d883a 	mov	r6,r11
   102f8:	31000017 	ldw	r4,0(r6)
   102fc:	39c00104 	addi	r7,r7,4
   10300:	31800104 	addi	r6,r6,4
   10304:	217fffcc 	andi	r5,r4,65535
   10308:	28cb883a 	add	r5,r5,r3
   1030c:	2815d43a 	srai	r10,r5,16
   10310:	2006d43a 	srli	r3,r4,16
   10314:	297fffcc 	andi	r5,r5,65535
   10318:	1a87883a 	add	r3,r3,r10
   1031c:	1814943a 	slli	r10,r3,16
   10320:	1807d43a 	srai	r3,r3,16
   10324:	514ab03a 	or	r5,r10,r5
   10328:	397fff15 	stw	r5,-4(r7)
   1032c:	323ff236 	bltu	r6,r8,102f8 <__mdiff+0x12c>
   10330:	413fffc4 	addi	r4,r8,-1
   10334:	22c9c83a 	sub	r4,r4,r11
   10338:	2008d0ba 	srli	r4,r4,2
   1033c:	200890ba 	slli	r4,r4,2
   10340:	6909883a 	add	r4,r13,r4
   10344:	2800041e 	bne	r5,zero,10358 <__mdiff+0x18c>
   10348:	20ffff17 	ldw	r3,-4(r4)
   1034c:	4a7fffc4 	addi	r9,r9,-1
   10350:	213fff04 	addi	r4,r4,-4
   10354:	183ffc26 	beq	r3,zero,10348 <__mdiff+0x17c>
   10358:	12400415 	stw	r9,16(r2)
   1035c:	dfc00317 	ldw	ra,12(sp)
   10360:	dc800217 	ldw	r18,8(sp)
   10364:	dc400117 	ldw	r17,4(sp)
   10368:	dc000017 	ldw	r16,0(sp)
   1036c:	dec00404 	addi	sp,sp,16
   10370:	f800283a 	ret
   10374:	8805883a 	mov	r2,r17
   10378:	04800044 	movi	r18,1
   1037c:	8023883a 	mov	r17,r16
   10380:	1021883a 	mov	r16,r2
   10384:	003fa906 	br	1022c <__mdiff+0x60>
   10388:	903ffa16 	blt	r18,zero,10374 <__mdiff+0x1a8>
   1038c:	0025883a 	mov	r18,zero
   10390:	003fa606 	br	1022c <__mdiff+0x60>
   10394:	01800104 	movi	r6,4
   10398:	003fd206 	br	102e4 <__mdiff+0x118>
   1039c:	0009883a 	mov	r4,zero
   103a0:	003fcc06 	br	102d4 <__mdiff+0x108>
   103a4:	000b883a 	mov	r5,zero
   103a8:	000f6c00 	call	f6c0 <_Balloc>
   103ac:	10000b26 	beq	r2,zero,103dc <__mdiff+0x210>
   103b0:	00c00044 	movi	r3,1
   103b4:	10c00415 	stw	r3,16(r2)
   103b8:	10000515 	stw	zero,20(r2)
   103bc:	003fe706 	br	1035c <__mdiff+0x190>
   103c0:	01c00074 	movhi	r7,1
   103c4:	01000074 	movhi	r4,1
   103c8:	39de5604 	addi	r7,r7,31064
   103cc:	000d883a 	mov	r6,zero
   103d0:	01409004 	movi	r5,576
   103d4:	211e6b04 	addi	r4,r4,31148
   103d8:	00124300 	call	12430 <__assert_func>
   103dc:	01c00074 	movhi	r7,1
   103e0:	01000074 	movhi	r4,1
   103e4:	39de5604 	addi	r7,r7,31064
   103e8:	000d883a 	mov	r6,zero
   103ec:	01408c84 	movi	r5,562
   103f0:	211e6b04 	addi	r4,r4,31148
   103f4:	00124300 	call	12430 <__assert_func>

000103f8 <__ulp>:
   103f8:	28dffc2c 	andhi	r3,r5,32752
   103fc:	017f3034 	movhi	r5,64704
   10400:	1947883a 	add	r3,r3,r5
   10404:	00c0020e 	bge	zero,r3,10410 <__ulp+0x18>
   10408:	0005883a 	mov	r2,zero
   1040c:	f800283a 	ret
   10410:	00c7c83a 	sub	r3,zero,r3
   10414:	1807d53a 	srai	r3,r3,20
   10418:	18800508 	cmpgei	r2,r3,20
   1041c:	1000041e 	bne	r2,zero,10430 <__ulp+0x38>
   10420:	00800234 	movhi	r2,8
   10424:	10c7d83a 	sra	r3,r2,r3
   10428:	0005883a 	mov	r2,zero
   1042c:	f800283a 	ret
   10430:	193ffb04 	addi	r4,r3,-20
   10434:	208007c8 	cmpgei	r2,r4,31
   10438:	0007883a 	mov	r3,zero
   1043c:	1000031e 	bne	r2,zero,1044c <__ulp+0x54>
   10440:	00a00034 	movhi	r2,32768
   10444:	1104d83a 	srl	r2,r2,r4
   10448:	f800283a 	ret
   1044c:	00800044 	movi	r2,1
   10450:	f800283a 	ret

00010454 <__b2d>:
   10454:	defffa04 	addi	sp,sp,-24
   10458:	dc400115 	stw	r17,4(sp)
   1045c:	24400417 	ldw	r17,16(r4)
   10460:	dc000015 	stw	r16,0(sp)
   10464:	24000504 	addi	r16,r4,20
   10468:	882290ba 	slli	r17,r17,2
   1046c:	dc800215 	stw	r18,8(sp)
   10470:	dd000415 	stw	r20,16(sp)
   10474:	8463883a 	add	r17,r16,r17
   10478:	8cbfff17 	ldw	r18,-4(r17)
   1047c:	dcc00315 	stw	r19,12(sp)
   10480:	dfc00515 	stw	ra,20(sp)
   10484:	9009883a 	mov	r4,r18
   10488:	2827883a 	mov	r19,r5
   1048c:	000fa1c0 	call	fa1c <__hi0bits>
   10490:	00c00804 	movi	r3,32
   10494:	1889c83a 	sub	r4,r3,r2
   10498:	99000015 	stw	r4,0(r19)
   1049c:	110002c8 	cmpgei	r4,r2,11
   104a0:	8d3fff04 	addi	r20,r17,-4
   104a4:	20002026 	beq	r4,zero,10528 <__b2d+0xd4>
   104a8:	10bffd44 	addi	r2,r2,-11
   104ac:	85000e2e 	bgeu	r16,r20,104e8 <__b2d+0x94>
   104b0:	897ffe17 	ldw	r5,-8(r17)
   104b4:	10001226 	beq	r2,zero,10500 <__b2d+0xac>
   104b8:	1889c83a 	sub	r4,r3,r2
   104bc:	90a4983a 	sll	r18,r18,r2
   104c0:	2906d83a 	srl	r3,r5,r4
   104c4:	89bffe04 	addi	r6,r17,-8
   104c8:	2884983a 	sll	r2,r5,r2
   104cc:	90e4b03a 	or	r18,r18,r3
   104d0:	90cffc34 	orhi	r3,r18,16368
   104d4:	81800c2e 	bgeu	r16,r6,10508 <__b2d+0xb4>
   104d8:	897ffd17 	ldw	r5,-12(r17)
   104dc:	2908d83a 	srl	r4,r5,r4
   104e0:	1104b03a 	or	r2,r2,r4
   104e4:	00000806 	br	10508 <__b2d+0xb4>
   104e8:	10000426 	beq	r2,zero,104fc <__b2d+0xa8>
   104ec:	90a4983a 	sll	r18,r18,r2
   104f0:	0005883a 	mov	r2,zero
   104f4:	90cffc34 	orhi	r3,r18,16368
   104f8:	00000306 	br	10508 <__b2d+0xb4>
   104fc:	000b883a 	mov	r5,zero
   10500:	90cffc34 	orhi	r3,r18,16368
   10504:	2805883a 	mov	r2,r5
   10508:	dfc00517 	ldw	ra,20(sp)
   1050c:	dd000417 	ldw	r20,16(sp)
   10510:	dcc00317 	ldw	r19,12(sp)
   10514:	dc800217 	ldw	r18,8(sp)
   10518:	dc400117 	ldw	r17,4(sp)
   1051c:	dc000017 	ldw	r16,0(sp)
   10520:	dec00604 	addi	sp,sp,24
   10524:	f800283a 	ret
   10528:	014002c4 	movi	r5,11
   1052c:	2889c83a 	sub	r4,r5,r2
   10530:	9106d83a 	srl	r3,r18,r4
   10534:	18cffc34 	orhi	r3,r3,16368
   10538:	85000536 	bltu	r16,r20,10550 <__b2d+0xfc>
   1053c:	000b883a 	mov	r5,zero
   10540:	10800544 	addi	r2,r2,21
   10544:	9084983a 	sll	r2,r18,r2
   10548:	1144b03a 	or	r2,r2,r5
   1054c:	003fee06 	br	10508 <__b2d+0xb4>
   10550:	897ffe17 	ldw	r5,-8(r17)
   10554:	290ad83a 	srl	r5,r5,r4
   10558:	003ff906 	br	10540 <__b2d+0xec>

0001055c <__d2b>:
   1055c:	defff804 	addi	sp,sp,-32
   10560:	dd000615 	stw	r20,24(sp)
   10564:	2829883a 	mov	r20,r5
   10568:	01400044 	movi	r5,1
   1056c:	dcc00515 	stw	r19,20(sp)
   10570:	dc000215 	stw	r16,8(sp)
   10574:	dfc00715 	stw	ra,28(sp)
   10578:	dc800415 	stw	r18,16(sp)
   1057c:	dc400315 	stw	r17,12(sp)
   10580:	3021883a 	mov	r16,r6
   10584:	3827883a 	mov	r19,r7
   10588:	000f6c00 	call	f6c0 <_Balloc>
   1058c:	10004526 	beq	r2,zero,106a4 <__d2b+0x148>
   10590:	8024d53a 	srli	r18,r16,20
   10594:	01800434 	movhi	r6,16
   10598:	31bfffc4 	addi	r6,r6,-1
   1059c:	9481ffcc 	andi	r18,r18,2047
   105a0:	1023883a 	mov	r17,r2
   105a4:	81a0703a 	and	r16,r16,r6
   105a8:	90000126 	beq	r18,zero,105b0 <__d2b+0x54>
   105ac:	84000434 	orhi	r16,r16,16
   105b0:	dc000115 	stw	r16,4(sp)
   105b4:	a0002226 	beq	r20,zero,10640 <__d2b+0xe4>
   105b8:	d809883a 	mov	r4,sp
   105bc:	dd000015 	stw	r20,0(sp)
   105c0:	000fa800 	call	fa80 <__lo0bits>
   105c4:	d8c00117 	ldw	r3,4(sp)
   105c8:	10003326 	beq	r2,zero,10698 <__d2b+0x13c>
   105cc:	01000804 	movi	r4,32
   105d0:	2089c83a 	sub	r4,r4,r2
   105d4:	1908983a 	sll	r4,r3,r4
   105d8:	d9400017 	ldw	r5,0(sp)
   105dc:	1886d83a 	srl	r3,r3,r2
   105e0:	2148b03a 	or	r4,r4,r5
   105e4:	89000515 	stw	r4,20(r17)
   105e8:	d8c00115 	stw	r3,4(sp)
   105ec:	88c00615 	stw	r3,24(r17)
   105f0:	1800271e 	bne	r3,zero,10690 <__d2b+0x134>
   105f4:	04000044 	movi	r16,1
   105f8:	8c000415 	stw	r16,16(r17)
   105fc:	90001926 	beq	r18,zero,10664 <__d2b+0x108>
   10600:	00c00d44 	movi	r3,53
   10604:	94bef344 	addi	r18,r18,-1075
   10608:	90a5883a 	add	r18,r18,r2
   1060c:	1885c83a 	sub	r2,r3,r2
   10610:	d8c00817 	ldw	r3,32(sp)
   10614:	9c800015 	stw	r18,0(r19)
   10618:	18800015 	stw	r2,0(r3)
   1061c:	8805883a 	mov	r2,r17
   10620:	dfc00717 	ldw	ra,28(sp)
   10624:	dd000617 	ldw	r20,24(sp)
   10628:	dcc00517 	ldw	r19,20(sp)
   1062c:	dc800417 	ldw	r18,16(sp)
   10630:	dc400317 	ldw	r17,12(sp)
   10634:	dc000217 	ldw	r16,8(sp)
   10638:	dec00804 	addi	sp,sp,32
   1063c:	f800283a 	ret
   10640:	d9000104 	addi	r4,sp,4
   10644:	000fa800 	call	fa80 <__lo0bits>
   10648:	00c00044 	movi	r3,1
   1064c:	88c00415 	stw	r3,16(r17)
   10650:	d8c00117 	ldw	r3,4(sp)
   10654:	10800804 	addi	r2,r2,32
   10658:	04000044 	movi	r16,1
   1065c:	88c00515 	stw	r3,20(r17)
   10660:	903fe71e 	bne	r18,zero,10600 <__d2b+0xa4>
   10664:	800690ba 	slli	r3,r16,2
   10668:	10bef384 	addi	r2,r2,-1074
   1066c:	98800015 	stw	r2,0(r19)
   10670:	88c5883a 	add	r2,r17,r3
   10674:	11000417 	ldw	r4,16(r2)
   10678:	8020917a 	slli	r16,r16,5
   1067c:	000fa1c0 	call	fa1c <__hi0bits>
   10680:	80a1c83a 	sub	r16,r16,r2
   10684:	d8800817 	ldw	r2,32(sp)
   10688:	14000015 	stw	r16,0(r2)
   1068c:	003fe306 	br	1061c <__d2b+0xc0>
   10690:	04000084 	movi	r16,2
   10694:	003fd806 	br	105f8 <__d2b+0x9c>
   10698:	d9000017 	ldw	r4,0(sp)
   1069c:	89000515 	stw	r4,20(r17)
   106a0:	003fd206 	br	105ec <__d2b+0x90>
   106a4:	01c00074 	movhi	r7,1
   106a8:	01000074 	movhi	r4,1
   106ac:	39de5604 	addi	r7,r7,31064
   106b0:	000d883a 	mov	r6,zero
   106b4:	0140c284 	movi	r5,778
   106b8:	211e6b04 	addi	r4,r4,31148
   106bc:	00124300 	call	12430 <__assert_func>

000106c0 <__ratio>:
   106c0:	defff904 	addi	sp,sp,-28
   106c4:	dc400315 	stw	r17,12(sp)
   106c8:	2823883a 	mov	r17,r5
   106cc:	d80b883a 	mov	r5,sp
   106d0:	dfc00615 	stw	ra,24(sp)
   106d4:	dcc00515 	stw	r19,20(sp)
   106d8:	dc800415 	stw	r18,16(sp)
   106dc:	2027883a 	mov	r19,r4
   106e0:	dc000215 	stw	r16,8(sp)
   106e4:	00104540 	call	10454 <__b2d>
   106e8:	d9400104 	addi	r5,sp,4
   106ec:	8809883a 	mov	r4,r17
   106f0:	1025883a 	mov	r18,r2
   106f4:	1821883a 	mov	r16,r3
   106f8:	00104540 	call	10454 <__b2d>
   106fc:	89000417 	ldw	r4,16(r17)
   10700:	9a000417 	ldw	r8,16(r19)
   10704:	d9400117 	ldw	r5,4(sp)
   10708:	100d883a 	mov	r6,r2
   1070c:	4111c83a 	sub	r8,r8,r4
   10710:	d9000017 	ldw	r4,0(sp)
   10714:	4010917a 	slli	r8,r8,5
   10718:	180f883a 	mov	r7,r3
   1071c:	2149c83a 	sub	r4,r4,r5
   10720:	4111883a 	add	r8,r8,r4
   10724:	02000c0e 	bge	zero,r8,10758 <__ratio+0x98>
   10728:	4010953a 	slli	r8,r8,20
   1072c:	4421883a 	add	r16,r8,r16
   10730:	9009883a 	mov	r4,r18
   10734:	800b883a 	mov	r5,r16
   10738:	00079600 	call	7960 <__divdf3>
   1073c:	dfc00617 	ldw	ra,24(sp)
   10740:	dcc00517 	ldw	r19,20(sp)
   10744:	dc800417 	ldw	r18,16(sp)
   10748:	dc400317 	ldw	r17,12(sp)
   1074c:	dc000217 	ldw	r16,8(sp)
   10750:	dec00704 	addi	sp,sp,28
   10754:	f800283a 	ret
   10758:	4010953a 	slli	r8,r8,20
   1075c:	1a0fc83a 	sub	r7,r3,r8
   10760:	003ff306 	br	10730 <__ratio+0x70>

00010764 <_mprec_log10>:
   10764:	defffe04 	addi	sp,sp,-8
   10768:	dc000015 	stw	r16,0(sp)
   1076c:	dfc00115 	stw	ra,4(sp)
   10770:	20800608 	cmpgei	r2,r4,24
   10774:	2021883a 	mov	r16,r4
   10778:	10000f26 	beq	r2,zero,107b8 <_mprec_log10+0x54>
   1077c:	0009883a 	mov	r4,zero
   10780:	014ffc34 	movhi	r5,16368
   10784:	000d883a 	mov	r6,zero
   10788:	01d00934 	movhi	r7,16420
   1078c:	00084c40 	call	84c4 <__muldf3>
   10790:	843fffc4 	addi	r16,r16,-1
   10794:	1009883a 	mov	r4,r2
   10798:	180b883a 	mov	r5,r3
   1079c:	803ff91e 	bne	r16,zero,10784 <_mprec_log10+0x20>
   107a0:	2005883a 	mov	r2,r4
   107a4:	2807883a 	mov	r3,r5
   107a8:	dfc00117 	ldw	ra,4(sp)
   107ac:	dc000017 	ldw	r16,0(sp)
   107b0:	dec00204 	addi	sp,sp,8
   107b4:	f800283a 	ret
   107b8:	202090fa 	slli	r16,r4,3
   107bc:	00800074 	movhi	r2,1
   107c0:	109e9204 	addi	r2,r2,31304
   107c4:	1421883a 	add	r16,r2,r16
   107c8:	81000017 	ldw	r4,0(r16)
   107cc:	81400117 	ldw	r5,4(r16)
   107d0:	003ff306 	br	107a0 <_mprec_log10+0x3c>

000107d4 <__copybits>:
   107d4:	297fffc4 	addi	r5,r5,-1
   107d8:	280fd17a 	srai	r7,r5,5
   107dc:	31400417 	ldw	r5,16(r6)
   107e0:	30800504 	addi	r2,r6,20
   107e4:	39c00044 	addi	r7,r7,1
   107e8:	280a90ba 	slli	r5,r5,2
   107ec:	380e90ba 	slli	r7,r7,2
   107f0:	114b883a 	add	r5,r2,r5
   107f4:	21cf883a 	add	r7,r4,r7
   107f8:	11400c2e 	bgeu	r2,r5,1082c <__copybits+0x58>
   107fc:	2007883a 	mov	r3,r4
   10800:	12000017 	ldw	r8,0(r2)
   10804:	10800104 	addi	r2,r2,4
   10808:	18c00104 	addi	r3,r3,4
   1080c:	1a3fff15 	stw	r8,-4(r3)
   10810:	117ffb36 	bltu	r2,r5,10800 <__copybits+0x2c>
   10814:	2985c83a 	sub	r2,r5,r6
   10818:	10bffac4 	addi	r2,r2,-21
   1081c:	1004d0ba 	srli	r2,r2,2
   10820:	10800044 	addi	r2,r2,1
   10824:	100490ba 	slli	r2,r2,2
   10828:	2089883a 	add	r4,r4,r2
   1082c:	21c0072e 	bgeu	r4,r7,1084c <__copybits+0x78>
   10830:	39bfffc4 	addi	r6,r7,-1
   10834:	310dc83a 	sub	r6,r6,r4
   10838:	300cd0ba 	srli	r6,r6,2
   1083c:	000b883a 	mov	r5,zero
   10840:	31800044 	addi	r6,r6,1
   10844:	300c90ba 	slli	r6,r6,2
   10848:	000f5d01 	jmpi	f5d0 <memset>
   1084c:	f800283a 	ret

00010850 <__any_on>:
   10850:	20c00417 	ldw	r3,16(r4)
   10854:	280dd17a 	srai	r6,r5,5
   10858:	21000504 	addi	r4,r4,20
   1085c:	1980080e 	bge	r3,r6,10880 <__any_on+0x30>
   10860:	180490ba 	slli	r2,r3,2
   10864:	2085883a 	add	r2,r4,r2
   10868:	20800f2e 	bgeu	r4,r2,108a8 <__any_on+0x58>
   1086c:	10ffff17 	ldw	r3,-4(r2)
   10870:	10bfff04 	addi	r2,r2,-4
   10874:	183ffc26 	beq	r3,zero,10868 <__any_on+0x18>
   10878:	00800044 	movi	r2,1
   1087c:	f800283a 	ret
   10880:	300490ba 	slli	r2,r6,2
   10884:	2085883a 	add	r2,r4,r2
   10888:	30fff70e 	bge	r6,r3,10868 <__any_on+0x18>
   1088c:	294007cc 	andi	r5,r5,31
   10890:	283ff526 	beq	r5,zero,10868 <__any_on+0x18>
   10894:	11800017 	ldw	r6,0(r2)
   10898:	3146d83a 	srl	r3,r6,r5
   1089c:	194a983a 	sll	r5,r3,r5
   108a0:	317ff51e 	bne	r6,r5,10878 <__any_on+0x28>
   108a4:	003ff006 	br	10868 <__any_on+0x18>
   108a8:	0005883a 	mov	r2,zero
   108ac:	f800283a 	ret

000108b0 <_realloc_r>:
   108b0:	defff604 	addi	sp,sp,-40
   108b4:	dc800215 	stw	r18,8(sp)
   108b8:	dfc00915 	stw	ra,36(sp)
   108bc:	df000815 	stw	fp,32(sp)
   108c0:	ddc00715 	stw	r23,28(sp)
   108c4:	dd800615 	stw	r22,24(sp)
   108c8:	dd400515 	stw	r21,20(sp)
   108cc:	dd000415 	stw	r20,16(sp)
   108d0:	dcc00315 	stw	r19,12(sp)
   108d4:	dc400115 	stw	r17,4(sp)
   108d8:	dc000015 	stw	r16,0(sp)
   108dc:	3025883a 	mov	r18,r6
   108e0:	28008b26 	beq	r5,zero,10b10 <_realloc_r+0x260>
   108e4:	2821883a 	mov	r16,r5
   108e8:	2027883a 	mov	r19,r4
   108ec:	944002c4 	addi	r17,r18,11
   108f0:	001494c0 	call	1494c <__malloc_lock>
   108f4:	888005f0 	cmpltui	r2,r17,23
   108f8:	1000521e 	bne	r2,zero,10a44 <_realloc_r+0x194>
   108fc:	017ffe04 	movi	r5,-8
   10900:	8962703a 	and	r17,r17,r5
   10904:	8807883a 	mov	r3,r17
   10908:	88005116 	blt	r17,zero,10a50 <_realloc_r+0x1a0>
   1090c:	8c805036 	bltu	r17,r18,10a50 <_realloc_r+0x1a0>
   10910:	80bfff17 	ldw	r2,-4(r16)
   10914:	017fff04 	movi	r5,-4
   10918:	857ffe04 	addi	r21,r16,-8
   1091c:	1168703a 	and	r20,r2,r5
   10920:	a0c0390e 	bge	r20,r3,10a08 <_realloc_r+0x158>
   10924:	05c000b4 	movhi	r23,2
   10928:	bde0aa04 	addi	r23,r23,-32088
   1092c:	ba000217 	ldw	r8,8(r23)
   10930:	ad0f883a 	add	r7,r21,r20
   10934:	39000117 	ldw	r4,4(r7)
   10938:	41c08e26 	beq	r8,r7,10b74 <_realloc_r+0x2c4>
   1093c:	01bfff84 	movi	r6,-2
   10940:	218c703a 	and	r6,r4,r6
   10944:	398d883a 	add	r6,r7,r6
   10948:	31800117 	ldw	r6,4(r6)
   1094c:	3180004c 	andi	r6,r6,1
   10950:	30004f1e 	bne	r6,zero,10a90 <_realloc_r+0x1e0>
   10954:	2148703a 	and	r4,r4,r5
   10958:	a10b883a 	add	r5,r20,r4
   1095c:	28c0bb0e 	bge	r5,r3,10c4c <_realloc_r+0x39c>
   10960:	1080004c 	andi	r2,r2,1
   10964:	10004c1e 	bne	r2,zero,10a98 <_realloc_r+0x1e8>
   10968:	873ffe17 	ldw	fp,-8(r16)
   1096c:	00bfff04 	movi	r2,-4
   10970:	af39c83a 	sub	fp,r21,fp
   10974:	e1400117 	ldw	r5,4(fp)
   10978:	288a703a 	and	r5,r5,r2
   1097c:	38000426 	beq	r7,zero,10990 <_realloc_r+0xe0>
   10980:	a16d883a 	add	r22,r20,r5
   10984:	b12d883a 	add	r22,r22,r4
   10988:	41c0ba26 	beq	r8,r7,10c74 <_realloc_r+0x3c4>
   1098c:	b0c0930e 	bge	r22,r3,10bdc <_realloc_r+0x32c>
   10990:	e0004126 	beq	fp,zero,10a98 <_realloc_r+0x1e8>
   10994:	a16d883a 	add	r22,r20,r5
   10998:	b0c03f16 	blt	r22,r3,10a98 <_realloc_r+0x1e8>
   1099c:	e0800317 	ldw	r2,12(fp)
   109a0:	e0c00217 	ldw	r3,8(fp)
   109a4:	a1bfff04 	addi	r6,r20,-4
   109a8:	31400968 	cmpgeui	r5,r6,37
   109ac:	18800315 	stw	r2,12(r3)
   109b0:	10c00215 	stw	r3,8(r2)
   109b4:	e1000204 	addi	r4,fp,8
   109b8:	2800941e 	bne	r5,zero,10c0c <_realloc_r+0x35c>
   109bc:	30800530 	cmpltui	r2,r6,20
   109c0:	1000db1e 	bne	r2,zero,10d30 <_realloc_r+0x480>
   109c4:	80c00017 	ldw	r3,0(r16)
   109c8:	30800728 	cmpgeui	r2,r6,28
   109cc:	e0c00215 	stw	r3,8(fp)
   109d0:	80c00117 	ldw	r3,4(r16)
   109d4:	e0c00315 	stw	r3,12(fp)
   109d8:	1000d71e 	bne	r2,zero,10d38 <_realloc_r+0x488>
   109dc:	84000204 	addi	r16,r16,8
   109e0:	e0800404 	addi	r2,fp,16
   109e4:	80c00017 	ldw	r3,0(r16)
   109e8:	b029883a 	mov	r20,r22
   109ec:	e02b883a 	mov	r21,fp
   109f0:	10c00015 	stw	r3,0(r2)
   109f4:	80c00117 	ldw	r3,4(r16)
   109f8:	10c00115 	stw	r3,4(r2)
   109fc:	80c00217 	ldw	r3,8(r16)
   10a00:	2021883a 	mov	r16,r4
   10a04:	10c00215 	stw	r3,8(r2)
   10a08:	a9800117 	ldw	r6,4(r21)
   10a0c:	a447c83a 	sub	r3,r20,r17
   10a10:	19000430 	cmpltui	r4,r3,16
   10a14:	3180004c 	andi	r6,r6,1
   10a18:	ad05883a 	add	r2,r21,r20
   10a1c:	20004926 	beq	r4,zero,10b44 <_realloc_r+0x294>
   10a20:	a18cb03a 	or	r6,r20,r6
   10a24:	a9800115 	stw	r6,4(r21)
   10a28:	10c00117 	ldw	r3,4(r2)
   10a2c:	18c00054 	ori	r3,r3,1
   10a30:	10c00115 	stw	r3,4(r2)
   10a34:	9809883a 	mov	r4,r19
   10a38:	00149700 	call	14970 <__malloc_unlock>
   10a3c:	8025883a 	mov	r18,r16
   10a40:	00000606 	br	10a5c <_realloc_r+0x1ac>
   10a44:	04400404 	movi	r17,16
   10a48:	00c00404 	movi	r3,16
   10a4c:	8cbfb02e 	bgeu	r17,r18,10910 <_realloc_r+0x60>
   10a50:	00800304 	movi	r2,12
   10a54:	98800015 	stw	r2,0(r19)
   10a58:	0025883a 	mov	r18,zero
   10a5c:	9005883a 	mov	r2,r18
   10a60:	dfc00917 	ldw	ra,36(sp)
   10a64:	df000817 	ldw	fp,32(sp)
   10a68:	ddc00717 	ldw	r23,28(sp)
   10a6c:	dd800617 	ldw	r22,24(sp)
   10a70:	dd400517 	ldw	r21,20(sp)
   10a74:	dd000417 	ldw	r20,16(sp)
   10a78:	dcc00317 	ldw	r19,12(sp)
   10a7c:	dc800217 	ldw	r18,8(sp)
   10a80:	dc400117 	ldw	r17,4(sp)
   10a84:	dc000017 	ldw	r16,0(sp)
   10a88:	dec00a04 	addi	sp,sp,40
   10a8c:	f800283a 	ret
   10a90:	1080004c 	andi	r2,r2,1
   10a94:	10006826 	beq	r2,zero,10c38 <_realloc_r+0x388>
   10a98:	900b883a 	mov	r5,r18
   10a9c:	9809883a 	mov	r4,r19
   10aa0:	00099f40 	call	99f4 <_malloc_r>
   10aa4:	1025883a 	mov	r18,r2
   10aa8:	10001626 	beq	r2,zero,10b04 <_realloc_r+0x254>
   10aac:	80bfff17 	ldw	r2,-4(r16)
   10ab0:	013fff84 	movi	r4,-2
   10ab4:	90fffe04 	addi	r3,r18,-8
   10ab8:	1104703a 	and	r2,r2,r4
   10abc:	a885883a 	add	r2,r21,r2
   10ac0:	10c05826 	beq	r2,r3,10c24 <_realloc_r+0x374>
   10ac4:	a1bfff04 	addi	r6,r20,-4
   10ac8:	30800968 	cmpgeui	r2,r6,37
   10acc:	1000651e 	bne	r2,zero,10c64 <_realloc_r+0x3b4>
   10ad0:	30800530 	cmpltui	r2,r6,20
   10ad4:	10003826 	beq	r2,zero,10bb8 <_realloc_r+0x308>
   10ad8:	9005883a 	mov	r2,r18
   10adc:	8007883a 	mov	r3,r16
   10ae0:	19000017 	ldw	r4,0(r3)
   10ae4:	11000015 	stw	r4,0(r2)
   10ae8:	19000117 	ldw	r4,4(r3)
   10aec:	11000115 	stw	r4,4(r2)
   10af0:	18c00217 	ldw	r3,8(r3)
   10af4:	10c00215 	stw	r3,8(r2)
   10af8:	800b883a 	mov	r5,r16
   10afc:	9809883a 	mov	r4,r19
   10b00:	000e89c0 	call	e89c <_free_r>
   10b04:	9809883a 	mov	r4,r19
   10b08:	00149700 	call	14970 <__malloc_unlock>
   10b0c:	003fd306 	br	10a5c <_realloc_r+0x1ac>
   10b10:	300b883a 	mov	r5,r6
   10b14:	dfc00917 	ldw	ra,36(sp)
   10b18:	df000817 	ldw	fp,32(sp)
   10b1c:	ddc00717 	ldw	r23,28(sp)
   10b20:	dd800617 	ldw	r22,24(sp)
   10b24:	dd400517 	ldw	r21,20(sp)
   10b28:	dd000417 	ldw	r20,16(sp)
   10b2c:	dcc00317 	ldw	r19,12(sp)
   10b30:	dc800217 	ldw	r18,8(sp)
   10b34:	dc400117 	ldw	r17,4(sp)
   10b38:	dc000017 	ldw	r16,0(sp)
   10b3c:	dec00a04 	addi	sp,sp,40
   10b40:	00099f41 	jmpi	99f4 <_malloc_r>
   10b44:	344cb03a 	or	r6,r6,r17
   10b48:	a9800115 	stw	r6,4(r21)
   10b4c:	ac4b883a 	add	r5,r21,r17
   10b50:	18c00054 	ori	r3,r3,1
   10b54:	28c00115 	stw	r3,4(r5)
   10b58:	10c00117 	ldw	r3,4(r2)
   10b5c:	29400204 	addi	r5,r5,8
   10b60:	9809883a 	mov	r4,r19
   10b64:	18c00054 	ori	r3,r3,1
   10b68:	10c00115 	stw	r3,4(r2)
   10b6c:	000e89c0 	call	e89c <_free_r>
   10b70:	003fb006 	br	10a34 <_realloc_r+0x184>
   10b74:	2148703a 	and	r4,r4,r5
   10b78:	a10b883a 	add	r5,r20,r4
   10b7c:	89800404 	addi	r6,r17,16
   10b80:	29bf7716 	blt	r5,r6,10960 <_realloc_r+0xb0>
   10b84:	ac6b883a 	add	r21,r21,r17
   10b88:	2c45c83a 	sub	r2,r5,r17
   10b8c:	bd400215 	stw	r21,8(r23)
   10b90:	10800054 	ori	r2,r2,1
   10b94:	a8800115 	stw	r2,4(r21)
   10b98:	80bfff17 	ldw	r2,-4(r16)
   10b9c:	9809883a 	mov	r4,r19
   10ba0:	8025883a 	mov	r18,r16
   10ba4:	1080004c 	andi	r2,r2,1
   10ba8:	1462b03a 	or	r17,r2,r17
   10bac:	847fff15 	stw	r17,-4(r16)
   10bb0:	00149700 	call	14970 <__malloc_unlock>
   10bb4:	003fa906 	br	10a5c <_realloc_r+0x1ac>
   10bb8:	80c00017 	ldw	r3,0(r16)
   10bbc:	30800728 	cmpgeui	r2,r6,28
   10bc0:	90c00015 	stw	r3,0(r18)
   10bc4:	80c00117 	ldw	r3,4(r16)
   10bc8:	90c00115 	stw	r3,4(r18)
   10bcc:	10004f1e 	bne	r2,zero,10d0c <_realloc_r+0x45c>
   10bd0:	80c00204 	addi	r3,r16,8
   10bd4:	90800204 	addi	r2,r18,8
   10bd8:	003fc106 	br	10ae0 <_realloc_r+0x230>
   10bdc:	38800317 	ldw	r2,12(r7)
   10be0:	38c00217 	ldw	r3,8(r7)
   10be4:	a1bfff04 	addi	r6,r20,-4
   10be8:	31400968 	cmpgeui	r5,r6,37
   10bec:	18800315 	stw	r2,12(r3)
   10bf0:	10c00215 	stw	r3,8(r2)
   10bf4:	e0c00217 	ldw	r3,8(fp)
   10bf8:	e0800317 	ldw	r2,12(fp)
   10bfc:	e1000204 	addi	r4,fp,8
   10c00:	18800315 	stw	r2,12(r3)
   10c04:	10c00215 	stw	r3,8(r2)
   10c08:	283f6c26 	beq	r5,zero,109bc <_realloc_r+0x10c>
   10c0c:	800b883a 	mov	r5,r16
   10c10:	000f4a40 	call	f4a4 <memmove>
   10c14:	1021883a 	mov	r16,r2
   10c18:	b029883a 	mov	r20,r22
   10c1c:	e02b883a 	mov	r21,fp
   10c20:	003f7906 	br	10a08 <_realloc_r+0x158>
   10c24:	90bfff17 	ldw	r2,-4(r18)
   10c28:	00ffff04 	movi	r3,-4
   10c2c:	10c4703a 	and	r2,r2,r3
   10c30:	a0a9883a 	add	r20,r20,r2
   10c34:	003f7406 	br	10a08 <_realloc_r+0x158>
   10c38:	873ffe17 	ldw	fp,-8(r16)
   10c3c:	af39c83a 	sub	fp,r21,fp
   10c40:	e0800117 	ldw	r2,4(fp)
   10c44:	114a703a 	and	r5,r2,r5
   10c48:	003f5106 	br	10990 <_realloc_r+0xe0>
   10c4c:	38800317 	ldw	r2,12(r7)
   10c50:	38c00217 	ldw	r3,8(r7)
   10c54:	2829883a 	mov	r20,r5
   10c58:	18800315 	stw	r2,12(r3)
   10c5c:	10c00215 	stw	r3,8(r2)
   10c60:	003f6906 	br	10a08 <_realloc_r+0x158>
   10c64:	800b883a 	mov	r5,r16
   10c68:	9009883a 	mov	r4,r18
   10c6c:	000f4a40 	call	f4a4 <memmove>
   10c70:	003fa106 	br	10af8 <_realloc_r+0x248>
   10c74:	88800404 	addi	r2,r17,16
   10c78:	b0bf4516 	blt	r22,r2,10990 <_realloc_r+0xe0>
   10c7c:	e0800317 	ldw	r2,12(fp)
   10c80:	e0c00217 	ldw	r3,8(fp)
   10c84:	a1bfff04 	addi	r6,r20,-4
   10c88:	31000968 	cmpgeui	r4,r6,37
   10c8c:	18800315 	stw	r2,12(r3)
   10c90:	10c00215 	stw	r3,8(r2)
   10c94:	e4800204 	addi	r18,fp,8
   10c98:	2000391e 	bne	r4,zero,10d80 <_realloc_r+0x4d0>
   10c9c:	30800530 	cmpltui	r2,r6,20
   10ca0:	1000351e 	bne	r2,zero,10d78 <_realloc_r+0x4c8>
   10ca4:	80c00017 	ldw	r3,0(r16)
   10ca8:	30800728 	cmpgeui	r2,r6,28
   10cac:	e0c00215 	stw	r3,8(fp)
   10cb0:	80c00117 	ldw	r3,4(r16)
   10cb4:	e0c00315 	stw	r3,12(fp)
   10cb8:	10003c1e 	bne	r2,zero,10dac <_realloc_r+0x4fc>
   10cbc:	84000204 	addi	r16,r16,8
   10cc0:	e0800404 	addi	r2,fp,16
   10cc4:	80c00017 	ldw	r3,0(r16)
   10cc8:	10c00015 	stw	r3,0(r2)
   10ccc:	80c00117 	ldw	r3,4(r16)
   10cd0:	10c00115 	stw	r3,4(r2)
   10cd4:	80c00217 	ldw	r3,8(r16)
   10cd8:	10c00215 	stw	r3,8(r2)
   10cdc:	e447883a 	add	r3,fp,r17
   10ce0:	b445c83a 	sub	r2,r22,r17
   10ce4:	b8c00215 	stw	r3,8(r23)
   10ce8:	10800054 	ori	r2,r2,1
   10cec:	18800115 	stw	r2,4(r3)
   10cf0:	e0800117 	ldw	r2,4(fp)
   10cf4:	9809883a 	mov	r4,r19
   10cf8:	1080004c 	andi	r2,r2,1
   10cfc:	1462b03a 	or	r17,r2,r17
   10d00:	e4400115 	stw	r17,4(fp)
   10d04:	00149700 	call	14970 <__malloc_unlock>
   10d08:	003f5406 	br	10a5c <_realloc_r+0x1ac>
   10d0c:	80800217 	ldw	r2,8(r16)
   10d10:	31800920 	cmpeqi	r6,r6,36
   10d14:	90800215 	stw	r2,8(r18)
   10d18:	80800317 	ldw	r2,12(r16)
   10d1c:	90800315 	stw	r2,12(r18)
   10d20:	30000e1e 	bne	r6,zero,10d5c <_realloc_r+0x4ac>
   10d24:	80c00404 	addi	r3,r16,16
   10d28:	90800404 	addi	r2,r18,16
   10d2c:	003f6c06 	br	10ae0 <_realloc_r+0x230>
   10d30:	2005883a 	mov	r2,r4
   10d34:	003f2b06 	br	109e4 <_realloc_r+0x134>
   10d38:	80800217 	ldw	r2,8(r16)
   10d3c:	31800920 	cmpeqi	r6,r6,36
   10d40:	e0800415 	stw	r2,16(fp)
   10d44:	80800317 	ldw	r2,12(r16)
   10d48:	e0800515 	stw	r2,20(fp)
   10d4c:	3000101e 	bne	r6,zero,10d90 <_realloc_r+0x4e0>
   10d50:	84000404 	addi	r16,r16,16
   10d54:	e0800604 	addi	r2,fp,24
   10d58:	003f2206 	br	109e4 <_realloc_r+0x134>
   10d5c:	81000417 	ldw	r4,16(r16)
   10d60:	80c00604 	addi	r3,r16,24
   10d64:	90800604 	addi	r2,r18,24
   10d68:	91000415 	stw	r4,16(r18)
   10d6c:	81000517 	ldw	r4,20(r16)
   10d70:	91000515 	stw	r4,20(r18)
   10d74:	003f5a06 	br	10ae0 <_realloc_r+0x230>
   10d78:	9005883a 	mov	r2,r18
   10d7c:	003fd106 	br	10cc4 <_realloc_r+0x414>
   10d80:	800b883a 	mov	r5,r16
   10d84:	9009883a 	mov	r4,r18
   10d88:	000f4a40 	call	f4a4 <memmove>
   10d8c:	003fd306 	br	10cdc <_realloc_r+0x42c>
   10d90:	80c00417 	ldw	r3,16(r16)
   10d94:	84000604 	addi	r16,r16,24
   10d98:	e0800804 	addi	r2,fp,32
   10d9c:	e0c00615 	stw	r3,24(fp)
   10da0:	80ffff17 	ldw	r3,-4(r16)
   10da4:	e0c00715 	stw	r3,28(fp)
   10da8:	003f0e06 	br	109e4 <_realloc_r+0x134>
   10dac:	80800217 	ldw	r2,8(r16)
   10db0:	31800920 	cmpeqi	r6,r6,36
   10db4:	e0800415 	stw	r2,16(fp)
   10db8:	80800317 	ldw	r2,12(r16)
   10dbc:	e0800515 	stw	r2,20(fp)
   10dc0:	3000031e 	bne	r6,zero,10dd0 <_realloc_r+0x520>
   10dc4:	84000404 	addi	r16,r16,16
   10dc8:	e0800604 	addi	r2,fp,24
   10dcc:	003fbd06 	br	10cc4 <_realloc_r+0x414>
   10dd0:	80c00417 	ldw	r3,16(r16)
   10dd4:	84000604 	addi	r16,r16,24
   10dd8:	e0800804 	addi	r2,fp,32
   10ddc:	e0c00615 	stw	r3,24(fp)
   10de0:	80ffff17 	ldw	r3,-4(r16)
   10de4:	e0c00715 	stw	r3,28(fp)
   10de8:	003fb606 	br	10cc4 <_realloc_r+0x414>

00010dec <__sread>:
   10dec:	defffe04 	addi	sp,sp,-8
   10df0:	dc000015 	stw	r16,0(sp)
   10df4:	2821883a 	mov	r16,r5
   10df8:	2940038f 	ldh	r5,14(r5)
   10dfc:	dfc00115 	stw	ra,4(sp)
   10e00:	0012c540 	call	12c54 <_read_r>
   10e04:	10000716 	blt	r2,zero,10e24 <__sread+0x38>
   10e08:	80c01417 	ldw	r3,80(r16)
   10e0c:	1887883a 	add	r3,r3,r2
   10e10:	80c01415 	stw	r3,80(r16)
   10e14:	dfc00117 	ldw	ra,4(sp)
   10e18:	dc000017 	ldw	r16,0(sp)
   10e1c:	dec00204 	addi	sp,sp,8
   10e20:	f800283a 	ret
   10e24:	80c0030b 	ldhu	r3,12(r16)
   10e28:	18fbffcc 	andi	r3,r3,61439
   10e2c:	80c0030d 	sth	r3,12(r16)
   10e30:	dfc00117 	ldw	ra,4(sp)
   10e34:	dc000017 	ldw	r16,0(sp)
   10e38:	dec00204 	addi	sp,sp,8
   10e3c:	f800283a 	ret

00010e40 <__seofread>:
   10e40:	0005883a 	mov	r2,zero
   10e44:	f800283a 	ret

00010e48 <__swrite>:
   10e48:	2880030b 	ldhu	r2,12(r5)
   10e4c:	defffb04 	addi	sp,sp,-20
   10e50:	dcc00315 	stw	r19,12(sp)
   10e54:	dc800215 	stw	r18,8(sp)
   10e58:	dc400115 	stw	r17,4(sp)
   10e5c:	dc000015 	stw	r16,0(sp)
   10e60:	dfc00415 	stw	ra,16(sp)
   10e64:	10c0400c 	andi	r3,r2,256
   10e68:	2821883a 	mov	r16,r5
   10e6c:	2023883a 	mov	r17,r4
   10e70:	3025883a 	mov	r18,r6
   10e74:	3827883a 	mov	r19,r7
   10e78:	18000d1e 	bne	r3,zero,10eb0 <__swrite+0x68>
   10e7c:	8140038f 	ldh	r5,14(r16)
   10e80:	10bbffcc 	andi	r2,r2,61439
   10e84:	980f883a 	mov	r7,r19
   10e88:	900d883a 	mov	r6,r18
   10e8c:	8809883a 	mov	r4,r17
   10e90:	8080030d 	sth	r2,12(r16)
   10e94:	dfc00417 	ldw	ra,16(sp)
   10e98:	dcc00317 	ldw	r19,12(sp)
   10e9c:	dc800217 	ldw	r18,8(sp)
   10ea0:	dc400117 	ldw	r17,4(sp)
   10ea4:	dc000017 	ldw	r16,0(sp)
   10ea8:	dec00504 	addi	sp,sp,20
   10eac:	00123741 	jmpi	12374 <_write_r>
   10eb0:	2940038f 	ldh	r5,14(r5)
   10eb4:	01c00084 	movi	r7,2
   10eb8:	000d883a 	mov	r6,zero
   10ebc:	0012ba00 	call	12ba0 <_lseek_r>
   10ec0:	8080030b 	ldhu	r2,12(r16)
   10ec4:	003fed06 	br	10e7c <__swrite+0x34>

00010ec8 <__sseek>:
   10ec8:	defffe04 	addi	sp,sp,-8
   10ecc:	dc000015 	stw	r16,0(sp)
   10ed0:	2821883a 	mov	r16,r5
   10ed4:	2940038f 	ldh	r5,14(r5)
   10ed8:	dfc00115 	stw	ra,4(sp)
   10edc:	0012ba00 	call	12ba0 <_lseek_r>
   10ee0:	10ffffd8 	cmpnei	r3,r2,-1
   10ee4:	18000826 	beq	r3,zero,10f08 <__sseek+0x40>
   10ee8:	80c0030b 	ldhu	r3,12(r16)
   10eec:	80801415 	stw	r2,80(r16)
   10ef0:	18c40014 	ori	r3,r3,4096
   10ef4:	80c0030d 	sth	r3,12(r16)
   10ef8:	dfc00117 	ldw	ra,4(sp)
   10efc:	dc000017 	ldw	r16,0(sp)
   10f00:	dec00204 	addi	sp,sp,8
   10f04:	f800283a 	ret
   10f08:	80c0030b 	ldhu	r3,12(r16)
   10f0c:	18fbffcc 	andi	r3,r3,61439
   10f10:	80c0030d 	sth	r3,12(r16)
   10f14:	dfc00117 	ldw	ra,4(sp)
   10f18:	dc000017 	ldw	r16,0(sp)
   10f1c:	dec00204 	addi	sp,sp,8
   10f20:	f800283a 	ret

00010f24 <__sclose>:
   10f24:	2940038f 	ldh	r5,14(r5)
   10f28:	00123d81 	jmpi	123d8 <_close_r>

00010f2c <__sprint_r.part.0>:
   10f2c:	28801917 	ldw	r2,100(r5)
   10f30:	defff604 	addi	sp,sp,-40
   10f34:	dcc00315 	stw	r19,12(sp)
   10f38:	dfc00915 	stw	ra,36(sp)
   10f3c:	df000815 	stw	fp,32(sp)
   10f40:	ddc00715 	stw	r23,28(sp)
   10f44:	dd800615 	stw	r22,24(sp)
   10f48:	dd400515 	stw	r21,20(sp)
   10f4c:	dd000415 	stw	r20,16(sp)
   10f50:	dc800215 	stw	r18,8(sp)
   10f54:	dc400115 	stw	r17,4(sp)
   10f58:	dc000015 	stw	r16,0(sp)
   10f5c:	1088000c 	andi	r2,r2,8192
   10f60:	3027883a 	mov	r19,r6
   10f64:	10002c26 	beq	r2,zero,11018 <__sprint_r.part.0+0xec>
   10f68:	30800217 	ldw	r2,8(r6)
   10f6c:	35000017 	ldw	r20,0(r6)
   10f70:	2821883a 	mov	r16,r5
   10f74:	2023883a 	mov	r17,r4
   10f78:	05bfff04 	movi	r22,-4
   10f7c:	10002426 	beq	r2,zero,11010 <__sprint_r.part.0+0xe4>
   10f80:	a5400117 	ldw	r21,4(r20)
   10f84:	a5c00017 	ldw	r23,0(r20)
   10f88:	a824d0ba 	srli	r18,r21,2
   10f8c:	90001b26 	beq	r18,zero,10ffc <__sprint_r.part.0+0xd0>
   10f90:	0039883a 	mov	fp,zero
   10f94:	00000206 	br	10fa0 <__sprint_r.part.0+0x74>
   10f98:	bdc00104 	addi	r23,r23,4
   10f9c:	97001626 	beq	r18,fp,10ff8 <__sprint_r.part.0+0xcc>
   10fa0:	b9400017 	ldw	r5,0(r23)
   10fa4:	800d883a 	mov	r6,r16
   10fa8:	8809883a 	mov	r4,r17
   10fac:	00129580 	call	12958 <_fputwc_r>
   10fb0:	10bfffe0 	cmpeqi	r2,r2,-1
   10fb4:	e7000044 	addi	fp,fp,1
   10fb8:	103ff726 	beq	r2,zero,10f98 <__sprint_r.part.0+0x6c>
   10fbc:	00bfffc4 	movi	r2,-1
   10fc0:	98000215 	stw	zero,8(r19)
   10fc4:	98000115 	stw	zero,4(r19)
   10fc8:	dfc00917 	ldw	ra,36(sp)
   10fcc:	df000817 	ldw	fp,32(sp)
   10fd0:	ddc00717 	ldw	r23,28(sp)
   10fd4:	dd800617 	ldw	r22,24(sp)
   10fd8:	dd400517 	ldw	r21,20(sp)
   10fdc:	dd000417 	ldw	r20,16(sp)
   10fe0:	dcc00317 	ldw	r19,12(sp)
   10fe4:	dc800217 	ldw	r18,8(sp)
   10fe8:	dc400117 	ldw	r17,4(sp)
   10fec:	dc000017 	ldw	r16,0(sp)
   10ff0:	dec00a04 	addi	sp,sp,40
   10ff4:	f800283a 	ret
   10ff8:	98800217 	ldw	r2,8(r19)
   10ffc:	adaa703a 	and	r21,r21,r22
   11000:	1545c83a 	sub	r2,r2,r21
   11004:	98800215 	stw	r2,8(r19)
   11008:	a5000204 	addi	r20,r20,8
   1100c:	103fdc1e 	bne	r2,zero,10f80 <__sprint_r.part.0+0x54>
   11010:	0005883a 	mov	r2,zero
   11014:	003fea06 	br	10fc0 <__sprint_r.part.0+0x94>
   11018:	000eb980 	call	eb98 <__sfvwrite_r>
   1101c:	003fe806 	br	10fc0 <__sprint_r.part.0+0x94>

00011020 <__sprint_r>:
   11020:	30c00217 	ldw	r3,8(r6)
   11024:	18000126 	beq	r3,zero,1102c <__sprint_r+0xc>
   11028:	0010f2c1 	jmpi	10f2c <__sprint_r.part.0>
   1102c:	30000115 	stw	zero,4(r6)
   11030:	0005883a 	mov	r2,zero
   11034:	f800283a 	ret

00011038 <___vfiprintf_internal_r>:
   11038:	deffcf04 	addi	sp,sp,-196
   1103c:	dd802d15 	stw	r22,180(sp)
   11040:	dd402c15 	stw	r21,176(sp)
   11044:	dd002b15 	stw	r20,172(sp)
   11048:	dfc03015 	stw	ra,192(sp)
   1104c:	df002f15 	stw	fp,188(sp)
   11050:	ddc02e15 	stw	r23,184(sp)
   11054:	dcc02a15 	stw	r19,168(sp)
   11058:	dc802915 	stw	r18,164(sp)
   1105c:	dc402815 	stw	r17,160(sp)
   11060:	dc002715 	stw	r16,156(sp)
   11064:	d9c00415 	stw	r7,16(sp)
   11068:	202d883a 	mov	r22,r4
   1106c:	282b883a 	mov	r21,r5
   11070:	3029883a 	mov	r20,r6
   11074:	20000226 	beq	r4,zero,11080 <___vfiprintf_internal_r+0x48>
   11078:	20800e17 	ldw	r2,56(r4)
   1107c:	1001ba26 	beq	r2,zero,11768 <___vfiprintf_internal_r+0x730>
   11080:	a880030b 	ldhu	r2,12(r21)
   11084:	10c8000c 	andi	r3,r2,8192
   11088:	1800061e 	bne	r3,zero,110a4 <___vfiprintf_internal_r+0x6c>
   1108c:	a8c01917 	ldw	r3,100(r21)
   11090:	0137ffc4 	movi	r4,-8193
   11094:	10880014 	ori	r2,r2,8192
   11098:	1906703a 	and	r3,r3,r4
   1109c:	a880030d 	sth	r2,12(r21)
   110a0:	a8c01915 	stw	r3,100(r21)
   110a4:	10c0020c 	andi	r3,r2,8
   110a8:	18010526 	beq	r3,zero,114c0 <___vfiprintf_internal_r+0x488>
   110ac:	a8c00417 	ldw	r3,16(r21)
   110b0:	18010326 	beq	r3,zero,114c0 <___vfiprintf_internal_r+0x488>
   110b4:	1080068c 	andi	r2,r2,26
   110b8:	10800298 	cmpnei	r2,r2,10
   110bc:	10010826 	beq	r2,zero,114e0 <___vfiprintf_internal_r+0x4a8>
   110c0:	dc801704 	addi	r18,sp,92
   110c4:	dc800a15 	stw	r18,40(sp)
   110c8:	d8000c15 	stw	zero,48(sp)
   110cc:	d8000b15 	stw	zero,44(sp)
   110d0:	9021883a 	mov	r16,r18
   110d4:	d8000515 	stw	zero,20(sp)
   110d8:	d8000115 	stw	zero,4(sp)
   110dc:	a0800007 	ldb	r2,0(r20)
   110e0:	1000e526 	beq	r2,zero,11478 <___vfiprintf_internal_r+0x440>
   110e4:	a023883a 	mov	r17,r20
   110e8:	00000306 	br	110f8 <___vfiprintf_internal_r+0xc0>
   110ec:	88800047 	ldb	r2,1(r17)
   110f0:	8c400044 	addi	r17,r17,1
   110f4:	10013026 	beq	r2,zero,115b8 <___vfiprintf_internal_r+0x580>
   110f8:	10800958 	cmpnei	r2,r2,37
   110fc:	103ffb1e 	bne	r2,zero,110ec <___vfiprintf_internal_r+0xb4>
   11100:	8d27c83a 	sub	r19,r17,r20
   11104:	8d012e1e 	bne	r17,r20,115c0 <___vfiprintf_internal_r+0x588>
   11108:	88800003 	ldbu	r2,0(r17)
   1110c:	10803fcc 	andi	r2,r2,255
   11110:	1080201c 	xori	r2,r2,128
   11114:	10bfe004 	addi	r2,r2,-128
   11118:	1000d726 	beq	r2,zero,11478 <___vfiprintf_internal_r+0x440>
   1111c:	88800047 	ldb	r2,1(r17)
   11120:	8d000044 	addi	r20,r17,1
   11124:	d8000945 	stb	zero,37(sp)
   11128:	000b883a 	mov	r5,zero
   1112c:	000d883a 	mov	r6,zero
   11130:	023fffc4 	movi	r8,-1
   11134:	0023883a 	mov	r17,zero
   11138:	001b883a 	mov	r13,zero
   1113c:	a5000044 	addi	r20,r20,1
   11140:	10fff804 	addi	r3,r2,-32
   11144:	19001668 	cmpgeui	r4,r3,89
   11148:	20006c1e 	bne	r4,zero,112fc <___vfiprintf_internal_r+0x2c4>
   1114c:	180690ba 	slli	r3,r3,2
   11150:	01000074 	movhi	r4,1
   11154:	1909883a 	add	r4,r3,r4
   11158:	20c45817 	ldw	r3,4448(r4)
   1115c:	1800683a 	jmp	r3
   11160:	00011988 	cmpgei	zero,zero,1126
   11164:	000112fc 	xorhi	zero,zero,1099
   11168:	000112fc 	xorhi	zero,zero,1099
   1116c:	0001197c 	xorhi	zero,zero,1125
   11170:	000112fc 	xorhi	zero,zero,1099
   11174:	000112fc 	xorhi	zero,zero,1099
   11178:	000112fc 	xorhi	zero,zero,1099
   1117c:	000112fc 	xorhi	zero,zero,1099
   11180:	000112fc 	xorhi	zero,zero,1099
   11184:	000112fc 	xorhi	zero,zero,1099
   11188:	000117e4 	muli	zero,zero,1119
   1118c:	0001196c 	andhi	zero,zero,1125
   11190:	000112fc 	xorhi	zero,zero,1099
   11194:	000117fc 	xorhi	zero,zero,1119
   11198:	00011808 	cmpgei	zero,zero,1120
   1119c:	000112fc 	xorhi	zero,zero,1099
   111a0:	00011960 	cmpeqi	zero,zero,1125
   111a4:	000112c4 	movi	zero,1099
   111a8:	000112c4 	movi	zero,1099
   111ac:	000112c4 	movi	zero,1099
   111b0:	000112c4 	movi	zero,1099
   111b4:	000112c4 	movi	zero,1099
   111b8:	000112c4 	movi	zero,1099
   111bc:	000112c4 	movi	zero,1099
   111c0:	000112c4 	movi	zero,1099
   111c4:	000112c4 	movi	zero,1099
   111c8:	000112fc 	xorhi	zero,zero,1099
   111cc:	000112fc 	xorhi	zero,zero,1099
   111d0:	000112fc 	xorhi	zero,zero,1099
   111d4:	000112fc 	xorhi	zero,zero,1099
   111d8:	000112fc 	xorhi	zero,zero,1099
   111dc:	000112fc 	xorhi	zero,zero,1099
   111e0:	000112fc 	xorhi	zero,zero,1099
   111e4:	000112fc 	xorhi	zero,zero,1099
   111e8:	000112fc 	xorhi	zero,zero,1099
   111ec:	000112fc 	xorhi	zero,zero,1099
   111f0:	00011854 	movui	zero,1121
   111f4:	000112fc 	xorhi	zero,zero,1099
   111f8:	000112fc 	xorhi	zero,zero,1099
   111fc:	000112fc 	xorhi	zero,zero,1099
   11200:	000112fc 	xorhi	zero,zero,1099
   11204:	000112fc 	xorhi	zero,zero,1099
   11208:	000112fc 	xorhi	zero,zero,1099
   1120c:	000112fc 	xorhi	zero,zero,1099
   11210:	000112fc 	xorhi	zero,zero,1099
   11214:	000112fc 	xorhi	zero,zero,1099
   11218:	000112fc 	xorhi	zero,zero,1099
   1121c:	00011550 	cmplti	zero,zero,1109
   11220:	000112fc 	xorhi	zero,zero,1099
   11224:	000112fc 	xorhi	zero,zero,1099
   11228:	000112fc 	xorhi	zero,zero,1099
   1122c:	000112fc 	xorhi	zero,zero,1099
   11230:	000112fc 	xorhi	zero,zero,1099
   11234:	00011528 	cmpgeui	zero,zero,1108
   11238:	000112fc 	xorhi	zero,zero,1099
   1123c:	000112fc 	xorhi	zero,zero,1099
   11240:	00011a58 	cmpnei	zero,zero,1129
   11244:	000112fc 	xorhi	zero,zero,1099
   11248:	000112fc 	xorhi	zero,zero,1099
   1124c:	000112fc 	xorhi	zero,zero,1099
   11250:	000112fc 	xorhi	zero,zero,1099
   11254:	000112fc 	xorhi	zero,zero,1099
   11258:	000112fc 	xorhi	zero,zero,1099
   1125c:	000112fc 	xorhi	zero,zero,1099
   11260:	000112fc 	xorhi	zero,zero,1099
   11264:	000112fc 	xorhi	zero,zero,1099
   11268:	000112fc 	xorhi	zero,zero,1099
   1126c:	00011a30 	cmpltui	zero,zero,1128
   11270:	00011770 	cmpltui	zero,zero,1117
   11274:	000112fc 	xorhi	zero,zero,1099
   11278:	000112fc 	xorhi	zero,zero,1099
   1127c:	000112fc 	xorhi	zero,zero,1099
   11280:	000119d0 	cmplti	zero,zero,1127
   11284:	00011770 	cmpltui	zero,zero,1117
   11288:	000112fc 	xorhi	zero,zero,1099
   1128c:	000112fc 	xorhi	zero,zero,1099
   11290:	00011a1c 	xori	zero,zero,1128
   11294:	000112fc 	xorhi	zero,zero,1099
   11298:	000119dc 	xori	zero,zero,1127
   1129c:	00011554 	movui	zero,1109
   112a0:	00011b4c 	andi	zero,zero,1133
   112a4:	00011b40 	call	11b4 <kf_bfly5+0x5a8>
   112a8:	000112fc 	xorhi	zero,zero,1099
   112ac:	00011ae8 	cmpgeui	zero,zero,1131
   112b0:	000112fc 	xorhi	zero,zero,1099
   112b4:	0001152c 	andhi	zero,zero,1108
   112b8:	000112fc 	xorhi	zero,zero,1099
   112bc:	000112fc 	xorhi	zero,zero,1099
   112c0:	00011aa0 	cmpeqi	zero,zero,1130
   112c4:	0023883a 	mov	r17,zero
   112c8:	113ff404 	addi	r4,r2,-48
   112cc:	880690ba 	slli	r3,r17,2
   112d0:	a0800007 	ldb	r2,0(r20)
   112d4:	a5000044 	addi	r20,r20,1
   112d8:	1c63883a 	add	r17,r3,r17
   112dc:	8c63883a 	add	r17,r17,r17
   112e0:	2463883a 	add	r17,r4,r17
   112e4:	113ff404 	addi	r4,r2,-48
   112e8:	20c002b0 	cmpltui	r3,r4,10
   112ec:	183ff71e 	bne	r3,zero,112cc <___vfiprintf_internal_r+0x294>
   112f0:	10fff804 	addi	r3,r2,-32
   112f4:	19001668 	cmpgeui	r4,r3,89
   112f8:	203f9426 	beq	r4,zero,1114c <___vfiprintf_internal_r+0x114>
   112fc:	29403fcc 	andi	r5,r5,255
   11300:	2803b61e 	bne	r5,zero,121dc <___vfiprintf_internal_r+0x11a4>
   11304:	10005c26 	beq	r2,zero,11478 <___vfiprintf_internal_r+0x440>
   11308:	d8800d05 	stb	r2,52(sp)
   1130c:	d8000945 	stb	zero,37(sp)
   11310:	05c00044 	movi	r23,1
   11314:	07000044 	movi	fp,1
   11318:	dcc00d04 	addi	r19,sp,52
   1131c:	db400015 	stw	r13,0(sp)
   11320:	0011883a 	mov	r8,zero
   11324:	d8800017 	ldw	r2,0(sp)
   11328:	1380008c 	andi	r14,r2,2
   1132c:	70000126 	beq	r14,zero,11334 <___vfiprintf_internal_r+0x2fc>
   11330:	bdc00084 	addi	r23,r23,2
   11334:	d8800017 	ldw	r2,0(sp)
   11338:	d9000b17 	ldw	r4,44(sp)
   1133c:	1340210c 	andi	r13,r2,132
   11340:	21800044 	addi	r6,r4,1
   11344:	d8800c17 	ldw	r2,48(sp)
   11348:	300b883a 	mov	r5,r6
   1134c:	6800021e 	bne	r13,zero,11358 <___vfiprintf_internal_r+0x320>
   11350:	8dc7c83a 	sub	r3,r17,r23
   11354:	00c2e516 	blt	zero,r3,11eec <___vfiprintf_internal_r+0xeb4>
   11358:	d8c00947 	ldb	r3,37(sp)
   1135c:	18000c26 	beq	r3,zero,11390 <___vfiprintf_internal_r+0x358>
   11360:	d8c00944 	addi	r3,sp,37
   11364:	10800044 	addi	r2,r2,1
   11368:	80c00015 	stw	r3,0(r16)
   1136c:	00c00044 	movi	r3,1
   11370:	80c00115 	stw	r3,4(r16)
   11374:	d8800c15 	stw	r2,48(sp)
   11378:	d9400b15 	stw	r5,44(sp)
   1137c:	28c00208 	cmpgei	r3,r5,8
   11380:	1802a01e 	bne	r3,zero,11e04 <___vfiprintf_internal_r+0xdcc>
   11384:	2809883a 	mov	r4,r5
   11388:	84000204 	addi	r16,r16,8
   1138c:	29400044 	addi	r5,r5,1
   11390:	70001726 	beq	r14,zero,113f0 <___vfiprintf_internal_r+0x3b8>
   11394:	d8c00984 	addi	r3,sp,38
   11398:	10800084 	addi	r2,r2,2
   1139c:	80c00015 	stw	r3,0(r16)
   113a0:	00c00084 	movi	r3,2
   113a4:	80c00115 	stw	r3,4(r16)
   113a8:	d8800c15 	stw	r2,48(sp)
   113ac:	d9400b15 	stw	r5,44(sp)
   113b0:	28c00208 	cmpgei	r3,r5,8
   113b4:	1802aa26 	beq	r3,zero,11e60 <___vfiprintf_internal_r+0xe28>
   113b8:	10032526 	beq	r2,zero,12050 <___vfiprintf_internal_r+0x1018>
   113bc:	d9800a04 	addi	r6,sp,40
   113c0:	a80b883a 	mov	r5,r21
   113c4:	b009883a 	mov	r4,r22
   113c8:	da000315 	stw	r8,12(sp)
   113cc:	db400215 	stw	r13,8(sp)
   113d0:	0010f2c0 	call	10f2c <__sprint_r.part.0>
   113d4:	10002a1e 	bne	r2,zero,11480 <___vfiprintf_internal_r+0x448>
   113d8:	d9000b17 	ldw	r4,44(sp)
   113dc:	d8800c17 	ldw	r2,48(sp)
   113e0:	da000317 	ldw	r8,12(sp)
   113e4:	db400217 	ldw	r13,8(sp)
   113e8:	9021883a 	mov	r16,r18
   113ec:	21400044 	addi	r5,r4,1
   113f0:	6b402018 	cmpnei	r13,r13,128
   113f4:	6801f126 	beq	r13,zero,11bbc <___vfiprintf_internal_r+0xb84>
   113f8:	4711c83a 	sub	r8,r8,fp
   113fc:	02022e16 	blt	zero,r8,11cb8 <___vfiprintf_internal_r+0xc80>
   11400:	e085883a 	add	r2,fp,r2
   11404:	d9400b15 	stw	r5,44(sp)
   11408:	84c00015 	stw	r19,0(r16)
   1140c:	87000115 	stw	fp,4(r16)
   11410:	d8800c15 	stw	r2,48(sp)
   11414:	29400208 	cmpgei	r5,r5,8
   11418:	2801e226 	beq	r5,zero,11ba4 <___vfiprintf_internal_r+0xb6c>
   1141c:	10009826 	beq	r2,zero,11680 <___vfiprintf_internal_r+0x648>
   11420:	d9800a04 	addi	r6,sp,40
   11424:	a80b883a 	mov	r5,r21
   11428:	b009883a 	mov	r4,r22
   1142c:	0010f2c0 	call	10f2c <__sprint_r.part.0>
   11430:	1000131e 	bne	r2,zero,11480 <___vfiprintf_internal_r+0x448>
   11434:	d8800c17 	ldw	r2,48(sp)
   11438:	9021883a 	mov	r16,r18
   1143c:	d8c00017 	ldw	r3,0(sp)
   11440:	1cc0010c 	andi	r19,r3,4
   11444:	98000226 	beq	r19,zero,11450 <___vfiprintf_internal_r+0x418>
   11448:	8de7c83a 	sub	r19,r17,r23
   1144c:	04c09316 	blt	zero,r19,1169c <___vfiprintf_internal_r+0x664>
   11450:	8dc0010e 	bge	r17,r23,11458 <___vfiprintf_internal_r+0x420>
   11454:	b823883a 	mov	r17,r23
   11458:	d8c00117 	ldw	r3,4(sp)
   1145c:	1c47883a 	add	r3,r3,r17
   11460:	d8c00115 	stw	r3,4(sp)
   11464:	10025d1e 	bne	r2,zero,11ddc <___vfiprintf_internal_r+0xda4>
   11468:	a0800007 	ldb	r2,0(r20)
   1146c:	d8000b15 	stw	zero,44(sp)
   11470:	9021883a 	mov	r16,r18
   11474:	103f1b1e 	bne	r2,zero,110e4 <___vfiprintf_internal_r+0xac>
   11478:	d8800c17 	ldw	r2,48(sp)
   1147c:	1003591e 	bne	r2,zero,121e4 <___vfiprintf_internal_r+0x11ac>
   11480:	a880030b 	ldhu	r2,12(r21)
   11484:	1080100c 	andi	r2,r2,64
   11488:	1003741e 	bne	r2,zero,1225c <___vfiprintf_internal_r+0x1224>
   1148c:	d8800117 	ldw	r2,4(sp)
   11490:	dfc03017 	ldw	ra,192(sp)
   11494:	df002f17 	ldw	fp,188(sp)
   11498:	ddc02e17 	ldw	r23,184(sp)
   1149c:	dd802d17 	ldw	r22,180(sp)
   114a0:	dd402c17 	ldw	r21,176(sp)
   114a4:	dd002b17 	ldw	r20,172(sp)
   114a8:	dcc02a17 	ldw	r19,168(sp)
   114ac:	dc802917 	ldw	r18,164(sp)
   114b0:	dc402817 	ldw	r17,160(sp)
   114b4:	dc002717 	ldw	r16,156(sp)
   114b8:	dec03104 	addi	sp,sp,196
   114bc:	f800283a 	ret
   114c0:	a80b883a 	mov	r5,r21
   114c4:	b009883a 	mov	r4,r22
   114c8:	000c5fc0 	call	c5fc <__swsetup_r>
   114cc:	1003631e 	bne	r2,zero,1225c <___vfiprintf_internal_r+0x1224>
   114d0:	a880030b 	ldhu	r2,12(r21)
   114d4:	1080068c 	andi	r2,r2,26
   114d8:	10800298 	cmpnei	r2,r2,10
   114dc:	103ef81e 	bne	r2,zero,110c0 <___vfiprintf_internal_r+0x88>
   114e0:	a880038f 	ldh	r2,14(r21)
   114e4:	103ef616 	blt	r2,zero,110c0 <___vfiprintf_internal_r+0x88>
   114e8:	d9c00417 	ldw	r7,16(sp)
   114ec:	a00d883a 	mov	r6,r20
   114f0:	a80b883a 	mov	r5,r21
   114f4:	b009883a 	mov	r4,r22
   114f8:	dfc03017 	ldw	ra,192(sp)
   114fc:	df002f17 	ldw	fp,188(sp)
   11500:	ddc02e17 	ldw	r23,184(sp)
   11504:	dd802d17 	ldw	r22,180(sp)
   11508:	dd402c17 	ldw	r21,176(sp)
   1150c:	dd002b17 	ldw	r20,172(sp)
   11510:	dcc02a17 	ldw	r19,168(sp)
   11514:	dc802917 	ldw	r18,164(sp)
   11518:	dc402817 	ldw	r17,160(sp)
   1151c:	dc002717 	ldw	r16,156(sp)
   11520:	dec03104 	addi	sp,sp,196
   11524:	00122b41 	jmpi	122b4 <__sbprintf>
   11528:	6b400414 	ori	r13,r13,16
   1152c:	6880080c 	andi	r2,r13,32
   11530:	10004726 	beq	r2,zero,11650 <___vfiprintf_internal_r+0x618>
   11534:	d8c00417 	ldw	r3,16(sp)
   11538:	00800044 	movi	r2,1
   1153c:	1dc00017 	ldw	r23,0(r3)
   11540:	1f000117 	ldw	fp,4(r3)
   11544:	18c00204 	addi	r3,r3,8
   11548:	d8c00415 	stw	r3,16(sp)
   1154c:	00000906 	br	11574 <___vfiprintf_internal_r+0x53c>
   11550:	6b400414 	ori	r13,r13,16
   11554:	6880080c 	andi	r2,r13,32
   11558:	10003126 	beq	r2,zero,11620 <___vfiprintf_internal_r+0x5e8>
   1155c:	d8c00417 	ldw	r3,16(sp)
   11560:	0005883a 	mov	r2,zero
   11564:	1dc00017 	ldw	r23,0(r3)
   11568:	1f000117 	ldw	fp,4(r3)
   1156c:	18c00204 	addi	r3,r3,8
   11570:	d8c00415 	stw	r3,16(sp)
   11574:	d8000945 	stb	zero,37(sp)
   11578:	40ffffe0 	cmpeqi	r3,r8,-1
   1157c:	001d883a 	mov	r14,zero
   11580:	1800d11e 	bne	r3,zero,118c8 <___vfiprintf_internal_r+0x890>
   11584:	04ffdfc4 	movi	r19,-129
   11588:	6cc8703a 	and	r4,r13,r19
   1158c:	bf06b03a 	or	r3,r23,fp
   11590:	d9000015 	stw	r4,0(sp)
   11594:	1802361e 	bne	r3,zero,11e70 <___vfiprintf_internal_r+0xe38>
   11598:	4001fb1e 	bne	r8,zero,11d88 <___vfiprintf_internal_r+0xd50>
   1159c:	1002a31e 	bne	r2,zero,1202c <___vfiprintf_internal_r+0xff4>
   115a0:	6f00004c 	andi	fp,r13,1
   115a4:	e002c726 	beq	fp,zero,120c4 <___vfiprintf_internal_r+0x108c>
   115a8:	00800c04 	movi	r2,48
   115ac:	d88016c5 	stb	r2,91(sp)
   115b0:	dcc016c4 	addi	r19,sp,91
   115b4:	0000e106 	br	1193c <___vfiprintf_internal_r+0x904>
   115b8:	8d27c83a 	sub	r19,r17,r20
   115bc:	8d3fae26 	beq	r17,r20,11478 <___vfiprintf_internal_r+0x440>
   115c0:	d8c00c17 	ldw	r3,48(sp)
   115c4:	d8800b17 	ldw	r2,44(sp)
   115c8:	85000015 	stw	r20,0(r16)
   115cc:	98c7883a 	add	r3,r19,r3
   115d0:	10800044 	addi	r2,r2,1
   115d4:	d8800b15 	stw	r2,44(sp)
   115d8:	84c00115 	stw	r19,4(r16)
   115dc:	d8c00c15 	stw	r3,48(sp)
   115e0:	10800208 	cmpgei	r2,r2,8
   115e4:	1000061e 	bne	r2,zero,11600 <___vfiprintf_internal_r+0x5c8>
   115e8:	84000204 	addi	r16,r16,8
   115ec:	d8c00117 	ldw	r3,4(sp)
   115f0:	88800003 	ldbu	r2,0(r17)
   115f4:	1cc7883a 	add	r3,r3,r19
   115f8:	d8c00115 	stw	r3,4(sp)
   115fc:	003ec306 	br	1110c <___vfiprintf_internal_r+0xd4>
   11600:	18028626 	beq	r3,zero,1201c <___vfiprintf_internal_r+0xfe4>
   11604:	d9800a04 	addi	r6,sp,40
   11608:	a80b883a 	mov	r5,r21
   1160c:	b009883a 	mov	r4,r22
   11610:	0010f2c0 	call	10f2c <__sprint_r.part.0>
   11614:	103f9a1e 	bne	r2,zero,11480 <___vfiprintf_internal_r+0x448>
   11618:	9021883a 	mov	r16,r18
   1161c:	003ff306 	br	115ec <___vfiprintf_internal_r+0x5b4>
   11620:	d8c00417 	ldw	r3,16(sp)
   11624:	6880040c 	andi	r2,r13,16
   11628:	1dc00017 	ldw	r23,0(r3)
   1162c:	18c00104 	addi	r3,r3,4
   11630:	d8c00415 	stw	r3,16(sp)
   11634:	1000031e 	bne	r2,zero,11644 <___vfiprintf_internal_r+0x60c>
   11638:	6880100c 	andi	r2,r13,64
   1163c:	10000126 	beq	r2,zero,11644 <___vfiprintf_internal_r+0x60c>
   11640:	bdffffcc 	andi	r23,r23,65535
   11644:	0039883a 	mov	fp,zero
   11648:	0005883a 	mov	r2,zero
   1164c:	003fc906 	br	11574 <___vfiprintf_internal_r+0x53c>
   11650:	d8c00417 	ldw	r3,16(sp)
   11654:	6880040c 	andi	r2,r13,16
   11658:	1dc00017 	ldw	r23,0(r3)
   1165c:	18c00104 	addi	r3,r3,4
   11660:	d8c00415 	stw	r3,16(sp)
   11664:	1000031e 	bne	r2,zero,11674 <___vfiprintf_internal_r+0x63c>
   11668:	6880100c 	andi	r2,r13,64
   1166c:	10000126 	beq	r2,zero,11674 <___vfiprintf_internal_r+0x63c>
   11670:	bdffffcc 	andi	r23,r23,65535
   11674:	0039883a 	mov	fp,zero
   11678:	00800044 	movi	r2,1
   1167c:	003fbd06 	br	11574 <___vfiprintf_internal_r+0x53c>
   11680:	d8c00017 	ldw	r3,0(sp)
   11684:	d8000b15 	stw	zero,44(sp)
   11688:	1cc0010c 	andi	r19,r3,4
   1168c:	98025226 	beq	r19,zero,11fd8 <___vfiprintf_internal_r+0xfa0>
   11690:	8de7c83a 	sub	r19,r17,r23
   11694:	04c2500e 	bge	zero,r19,11fd8 <___vfiprintf_internal_r+0xfa0>
   11698:	9021883a 	mov	r16,r18
   1169c:	98c00450 	cmplti	r3,r19,17
   116a0:	d9000b17 	ldw	r4,44(sp)
   116a4:	01c00074 	movhi	r7,1
   116a8:	1802e61e 	bne	r3,zero,12244 <___vfiprintf_internal_r+0x120c>
   116ac:	39dec804 	addi	r7,r7,31520
   116b0:	07000404 	movi	fp,16
   116b4:	00000606 	br	116d0 <___vfiprintf_internal_r+0x698>
   116b8:	21400084 	addi	r5,r4,2
   116bc:	84000204 	addi	r16,r16,8
   116c0:	1809883a 	mov	r4,r3
   116c4:	9cfffc04 	addi	r19,r19,-16
   116c8:	98c00448 	cmpgei	r3,r19,17
   116cc:	18001726 	beq	r3,zero,1172c <___vfiprintf_internal_r+0x6f4>
   116d0:	20c00044 	addi	r3,r4,1
   116d4:	10800404 	addi	r2,r2,16
   116d8:	81c00015 	stw	r7,0(r16)
   116dc:	87000115 	stw	fp,4(r16)
   116e0:	d8800c15 	stw	r2,48(sp)
   116e4:	d8c00b15 	stw	r3,44(sp)
   116e8:	19400208 	cmpgei	r5,r3,8
   116ec:	283ff226 	beq	r5,zero,116b8 <___vfiprintf_internal_r+0x680>
   116f0:	d9800a04 	addi	r6,sp,40
   116f4:	a80b883a 	mov	r5,r21
   116f8:	b009883a 	mov	r4,r22
   116fc:	10012b26 	beq	r2,zero,11bac <___vfiprintf_internal_r+0xb74>
   11700:	d9c00015 	stw	r7,0(sp)
   11704:	0010f2c0 	call	10f2c <__sprint_r.part.0>
   11708:	103f5d1e 	bne	r2,zero,11480 <___vfiprintf_internal_r+0x448>
   1170c:	d9000b17 	ldw	r4,44(sp)
   11710:	9cfffc04 	addi	r19,r19,-16
   11714:	98c00448 	cmpgei	r3,r19,17
   11718:	d8800c17 	ldw	r2,48(sp)
   1171c:	d9c00017 	ldw	r7,0(sp)
   11720:	9021883a 	mov	r16,r18
   11724:	21400044 	addi	r5,r4,1
   11728:	183fe91e 	bne	r3,zero,116d0 <___vfiprintf_internal_r+0x698>
   1172c:	14c5883a 	add	r2,r2,r19
   11730:	d9400b15 	stw	r5,44(sp)
   11734:	81c00015 	stw	r7,0(r16)
   11738:	84c00115 	stw	r19,4(r16)
   1173c:	d8800c15 	stw	r2,48(sp)
   11740:	29400210 	cmplti	r5,r5,8
   11744:	283f421e 	bne	r5,zero,11450 <___vfiprintf_internal_r+0x418>
   11748:	10022326 	beq	r2,zero,11fd8 <___vfiprintf_internal_r+0xfa0>
   1174c:	d9800a04 	addi	r6,sp,40
   11750:	a80b883a 	mov	r5,r21
   11754:	b009883a 	mov	r4,r22
   11758:	0010f2c0 	call	10f2c <__sprint_r.part.0>
   1175c:	103f481e 	bne	r2,zero,11480 <___vfiprintf_internal_r+0x448>
   11760:	d8800c17 	ldw	r2,48(sp)
   11764:	003f3a06 	br	11450 <___vfiprintf_internal_r+0x418>
   11768:	000e7380 	call	e738 <__sinit>
   1176c:	003e4406 	br	11080 <___vfiprintf_internal_r+0x48>
   11770:	29403fcc 	andi	r5,r5,255
   11774:	2802b11e 	bne	r5,zero,1223c <___vfiprintf_internal_r+0x1204>
   11778:	6880080c 	andi	r2,r13,32
   1177c:	10003a26 	beq	r2,zero,11868 <___vfiprintf_internal_r+0x830>
   11780:	d8c00417 	ldw	r3,16(sp)
   11784:	18800117 	ldw	r2,4(r3)
   11788:	1dc00017 	ldw	r23,0(r3)
   1178c:	18c00204 	addi	r3,r3,8
   11790:	d8c00415 	stw	r3,16(sp)
   11794:	1039883a 	mov	fp,r2
   11798:	10004116 	blt	r2,zero,118a0 <___vfiprintf_internal_r+0x868>
   1179c:	40bfffd8 	cmpnei	r2,r8,-1
   117a0:	db800943 	ldbu	r14,37(sp)
   117a4:	10000626 	beq	r2,zero,117c0 <___vfiprintf_internal_r+0x788>
   117a8:	04ffdfc4 	movi	r19,-129
   117ac:	6cc6703a 	and	r3,r13,r19
   117b0:	bf04b03a 	or	r2,r23,fp
   117b4:	d8c00015 	stw	r3,0(sp)
   117b8:	10021b26 	beq	r2,zero,12028 <___vfiprintf_internal_r+0xff0>
   117bc:	db400017 	ldw	r13,0(sp)
   117c0:	e001ad1e 	bne	fp,zero,11e78 <___vfiprintf_internal_r+0xe40>
   117c4:	b88002a8 	cmpgeui	r2,r23,10
   117c8:	1001ab1e 	bne	r2,zero,11e78 <___vfiprintf_internal_r+0xe40>
   117cc:	bdc00c04 	addi	r23,r23,48
   117d0:	ddc016c5 	stb	r23,91(sp)
   117d4:	db400015 	stw	r13,0(sp)
   117d8:	07000044 	movi	fp,1
   117dc:	dcc016c4 	addi	r19,sp,91
   117e0:	00005606 	br	1193c <___vfiprintf_internal_r+0x904>
   117e4:	d8800417 	ldw	r2,16(sp)
   117e8:	14400017 	ldw	r17,0(r2)
   117ec:	10c00104 	addi	r3,r2,4
   117f0:	8802310e 	bge	r17,zero,120b8 <___vfiprintf_internal_r+0x1080>
   117f4:	0463c83a 	sub	r17,zero,r17
   117f8:	d8c00415 	stw	r3,16(sp)
   117fc:	a0800007 	ldb	r2,0(r20)
   11800:	6b400114 	ori	r13,r13,4
   11804:	003e4d06 	br	1113c <___vfiprintf_internal_r+0x104>
   11808:	a0800007 	ldb	r2,0(r20)
   1180c:	a0c00044 	addi	r3,r20,1
   11810:	11000aa0 	cmpeqi	r4,r2,42
   11814:	2002941e 	bne	r4,zero,12268 <___vfiprintf_internal_r+0x1230>
   11818:	113ff404 	addi	r4,r2,-48
   1181c:	21c002b0 	cmpltui	r7,r4,10
   11820:	1829883a 	mov	r20,r3
   11824:	0011883a 	mov	r8,zero
   11828:	383e4526 	beq	r7,zero,11140 <___vfiprintf_internal_r+0x108>
   1182c:	400690ba 	slli	r3,r8,2
   11830:	a0800007 	ldb	r2,0(r20)
   11834:	a5000044 	addi	r20,r20,1
   11838:	1a11883a 	add	r8,r3,r8
   1183c:	4211883a 	add	r8,r8,r8
   11840:	4111883a 	add	r8,r8,r4
   11844:	113ff404 	addi	r4,r2,-48
   11848:	20c002b0 	cmpltui	r3,r4,10
   1184c:	183ff71e 	bne	r3,zero,1182c <___vfiprintf_internal_r+0x7f4>
   11850:	003e3b06 	br	11140 <___vfiprintf_internal_r+0x108>
   11854:	29403fcc 	andi	r5,r5,255
   11858:	28026d1e 	bne	r5,zero,12210 <___vfiprintf_internal_r+0x11d8>
   1185c:	6b400414 	ori	r13,r13,16
   11860:	6880080c 	andi	r2,r13,32
   11864:	103fc61e 	bne	r2,zero,11780 <___vfiprintf_internal_r+0x748>
   11868:	d8c00417 	ldw	r3,16(sp)
   1186c:	6880040c 	andi	r2,r13,16
   11870:	1dc00017 	ldw	r23,0(r3)
   11874:	18c00104 	addi	r3,r3,4
   11878:	d8c00415 	stw	r3,16(sp)
   1187c:	1001f11e 	bne	r2,zero,12044 <___vfiprintf_internal_r+0x100c>
   11880:	6880100c 	andi	r2,r13,64
   11884:	1001ef26 	beq	r2,zero,12044 <___vfiprintf_internal_r+0x100c>
   11888:	bdffffcc 	andi	r23,r23,65535
   1188c:	bde0001c 	xori	r23,r23,32768
   11890:	bde00004 	addi	r23,r23,-32768
   11894:	b839d7fa 	srai	fp,r23,31
   11898:	e005883a 	mov	r2,fp
   1189c:	103fbf0e 	bge	r2,zero,1179c <___vfiprintf_internal_r+0x764>
   118a0:	b804c03a 	cmpne	r2,r23,zero
   118a4:	0739c83a 	sub	fp,zero,fp
   118a8:	e0b9c83a 	sub	fp,fp,r2
   118ac:	00800b44 	movi	r2,45
   118b0:	d8800945 	stb	r2,37(sp)
   118b4:	40ffffe0 	cmpeqi	r3,r8,-1
   118b8:	05efc83a 	sub	r23,zero,r23
   118bc:	03800b44 	movi	r14,45
   118c0:	00800044 	movi	r2,1
   118c4:	183f2f26 	beq	r3,zero,11584 <___vfiprintf_internal_r+0x54c>
   118c8:	10c00060 	cmpeqi	r3,r2,1
   118cc:	183fbc1e 	bne	r3,zero,117c0 <___vfiprintf_internal_r+0x788>
   118d0:	108000a0 	cmpeqi	r2,r2,2
   118d4:	1001311e 	bne	r2,zero,11d9c <___vfiprintf_internal_r+0xd64>
   118d8:	9027883a 	mov	r19,r18
   118dc:	e008977a 	slli	r4,fp,29
   118e0:	b806d0fa 	srli	r3,r23,3
   118e4:	e038d0fa 	srli	fp,fp,3
   118e8:	b88001cc 	andi	r2,r23,7
   118ec:	10800c04 	addi	r2,r2,48
   118f0:	20eeb03a 	or	r23,r4,r3
   118f4:	98bfffc5 	stb	r2,-1(r19)
   118f8:	bf06b03a 	or	r3,r23,fp
   118fc:	980b883a 	mov	r5,r19
   11900:	9cffffc4 	addi	r19,r19,-1
   11904:	183ff51e 	bne	r3,zero,118dc <___vfiprintf_internal_r+0x8a4>
   11908:	68c0004c 	andi	r3,r13,1
   1190c:	18013026 	beq	r3,zero,11dd0 <___vfiprintf_internal_r+0xd98>
   11910:	10803fcc 	andi	r2,r2,255
   11914:	1080201c 	xori	r2,r2,128
   11918:	10bfe004 	addi	r2,r2,-128
   1191c:	10800c18 	cmpnei	r2,r2,48
   11920:	10012b26 	beq	r2,zero,11dd0 <___vfiprintf_internal_r+0xd98>
   11924:	297fff84 	addi	r5,r5,-2
   11928:	00800c04 	movi	r2,48
   1192c:	98bfffc5 	stb	r2,-1(r19)
   11930:	9179c83a 	sub	fp,r18,r5
   11934:	db400015 	stw	r13,0(sp)
   11938:	2827883a 	mov	r19,r5
   1193c:	e02f883a 	mov	r23,fp
   11940:	e200010e 	bge	fp,r8,11948 <___vfiprintf_internal_r+0x910>
   11944:	402f883a 	mov	r23,r8
   11948:	73803fcc 	andi	r14,r14,255
   1194c:	7380201c 	xori	r14,r14,128
   11950:	73bfe004 	addi	r14,r14,-128
   11954:	703e7326 	beq	r14,zero,11324 <___vfiprintf_internal_r+0x2ec>
   11958:	bdc00044 	addi	r23,r23,1
   1195c:	003e7106 	br	11324 <___vfiprintf_internal_r+0x2ec>
   11960:	a0800007 	ldb	r2,0(r20)
   11964:	6b402014 	ori	r13,r13,128
   11968:	003df406 	br	1113c <___vfiprintf_internal_r+0x104>
   1196c:	a0800007 	ldb	r2,0(r20)
   11970:	01400044 	movi	r5,1
   11974:	01800ac4 	movi	r6,43
   11978:	003df006 	br	1113c <___vfiprintf_internal_r+0x104>
   1197c:	a0800007 	ldb	r2,0(r20)
   11980:	6b400054 	ori	r13,r13,1
   11984:	003ded06 	br	1113c <___vfiprintf_internal_r+0x104>
   11988:	30c03fcc 	andi	r3,r6,255
   1198c:	18c0201c 	xori	r3,r3,128
   11990:	18ffe004 	addi	r3,r3,-128
   11994:	a0800003 	ldbu	r2,0(r20)
   11998:	1800091e 	bne	r3,zero,119c0 <___vfiprintf_internal_r+0x988>
   1199c:	10803fcc 	andi	r2,r2,255
   119a0:	1080201c 	xori	r2,r2,128
   119a4:	01400044 	movi	r5,1
   119a8:	01800804 	movi	r6,32
   119ac:	10bfe004 	addi	r2,r2,-128
   119b0:	003de206 	br	1113c <___vfiprintf_internal_r+0x104>
   119b4:	a0800043 	ldbu	r2,1(r20)
   119b8:	6b400814 	ori	r13,r13,32
   119bc:	a5000044 	addi	r20,r20,1
   119c0:	10803fcc 	andi	r2,r2,255
   119c4:	1080201c 	xori	r2,r2,128
   119c8:	10bfe004 	addi	r2,r2,-128
   119cc:	003ddb06 	br	1113c <___vfiprintf_internal_r+0x104>
   119d0:	a0800007 	ldb	r2,0(r20)
   119d4:	6b401014 	ori	r13,r13,64
   119d8:	003dd806 	br	1113c <___vfiprintf_internal_r+0x104>
   119dc:	29403fcc 	andi	r5,r5,255
   119e0:	28020f1e 	bne	r5,zero,12220 <___vfiprintf_internal_r+0x11e8>
   119e4:	d9000417 	ldw	r4,16(sp)
   119e8:	6880080c 	andi	r2,r13,32
   119ec:	20c00104 	addi	r3,r4,4
   119f0:	1001c01e 	bne	r2,zero,120f4 <___vfiprintf_internal_r+0x10bc>
   119f4:	6880040c 	andi	r2,r13,16
   119f8:	1001df1e 	bne	r2,zero,12178 <___vfiprintf_internal_r+0x1140>
   119fc:	6b40100c 	andi	r13,r13,64
   11a00:	6801dd26 	beq	r13,zero,12178 <___vfiprintf_internal_r+0x1140>
   11a04:	d8800417 	ldw	r2,16(sp)
   11a08:	d8c00415 	stw	r3,16(sp)
   11a0c:	d8c00117 	ldw	r3,4(sp)
   11a10:	10800017 	ldw	r2,0(r2)
   11a14:	10c0000d 	sth	r3,0(r2)
   11a18:	003db006 	br	110dc <___vfiprintf_internal_r+0xa4>
   11a1c:	a0800007 	ldb	r2,0(r20)
   11a20:	10c01b18 	cmpnei	r3,r2,108
   11a24:	183fe326 	beq	r3,zero,119b4 <___vfiprintf_internal_r+0x97c>
   11a28:	6b400414 	ori	r13,r13,16
   11a2c:	003dc306 	br	1113c <___vfiprintf_internal_r+0x104>
   11a30:	d8c00417 	ldw	r3,16(sp)
   11a34:	d8000945 	stb	zero,37(sp)
   11a38:	05c00044 	movi	r23,1
   11a3c:	18800017 	ldw	r2,0(r3)
   11a40:	18c00104 	addi	r3,r3,4
   11a44:	d8c00415 	stw	r3,16(sp)
   11a48:	d8800d05 	stb	r2,52(sp)
   11a4c:	07000044 	movi	fp,1
   11a50:	dcc00d04 	addi	r19,sp,52
   11a54:	003e3106 	br	1131c <___vfiprintf_internal_r+0x2e4>
   11a58:	29403fcc 	andi	r5,r5,255
   11a5c:	2801ee1e 	bne	r5,zero,12218 <___vfiprintf_internal_r+0x11e0>
   11a60:	00c00074 	movhi	r3,1
   11a64:	18de4204 	addi	r3,r3,30984
   11a68:	d8c00515 	stw	r3,20(sp)
   11a6c:	68c0080c 	andi	r3,r13,32
   11a70:	18001226 	beq	r3,zero,11abc <___vfiprintf_internal_r+0xa84>
   11a74:	d8c00417 	ldw	r3,16(sp)
   11a78:	1dc00017 	ldw	r23,0(r3)
   11a7c:	1f000117 	ldw	fp,4(r3)
   11a80:	18c00204 	addi	r3,r3,8
   11a84:	d8c00415 	stw	r3,16(sp)
   11a88:	68c0004c 	andi	r3,r13,1
   11a8c:	18000226 	beq	r3,zero,11a98 <___vfiprintf_internal_r+0xa60>
   11a90:	bf06b03a 	or	r3,r23,fp
   11a94:	1801911e 	bne	r3,zero,120dc <___vfiprintf_internal_r+0x10a4>
   11a98:	00800084 	movi	r2,2
   11a9c:	003eb506 	br	11574 <___vfiprintf_internal_r+0x53c>
   11aa0:	29403fcc 	andi	r5,r5,255
   11aa4:	2801e01e 	bne	r5,zero,12228 <___vfiprintf_internal_r+0x11f0>
   11aa8:	00c00074 	movhi	r3,1
   11aac:	18de3d04 	addi	r3,r3,30964
   11ab0:	d8c00515 	stw	r3,20(sp)
   11ab4:	68c0080c 	andi	r3,r13,32
   11ab8:	183fee1e 	bne	r3,zero,11a74 <___vfiprintf_internal_r+0xa3c>
   11abc:	d9000417 	ldw	r4,16(sp)
   11ac0:	68c0040c 	andi	r3,r13,16
   11ac4:	25c00017 	ldw	r23,0(r4)
   11ac8:	21000104 	addi	r4,r4,4
   11acc:	d9000415 	stw	r4,16(sp)
   11ad0:	18015a1e 	bne	r3,zero,1203c <___vfiprintf_internal_r+0x1004>
   11ad4:	68c0100c 	andi	r3,r13,64
   11ad8:	18015826 	beq	r3,zero,1203c <___vfiprintf_internal_r+0x1004>
   11adc:	bdffffcc 	andi	r23,r23,65535
   11ae0:	0039883a 	mov	fp,zero
   11ae4:	003fe806 	br	11a88 <___vfiprintf_internal_r+0xa50>
   11ae8:	d8800417 	ldw	r2,16(sp)
   11aec:	d8000945 	stb	zero,37(sp)
   11af0:	14c00017 	ldw	r19,0(r2)
   11af4:	10c00104 	addi	r3,r2,4
   11af8:	9801a526 	beq	r19,zero,12190 <___vfiprintf_internal_r+0x1158>
   11afc:	40bfffe0 	cmpeqi	r2,r8,-1
   11b00:	10018a1e 	bne	r2,zero,1212c <___vfiprintf_internal_r+0x10f4>
   11b04:	400d883a 	mov	r6,r8
   11b08:	000b883a 	mov	r5,zero
   11b0c:	9809883a 	mov	r4,r19
   11b10:	d8c00315 	stw	r3,12(sp)
   11b14:	db400215 	stw	r13,8(sp)
   11b18:	da000015 	stw	r8,0(sp)
   11b1c:	000f3d40 	call	f3d4 <memchr>
   11b20:	da000017 	ldw	r8,0(sp)
   11b24:	db400217 	ldw	r13,8(sp)
   11b28:	d8c00317 	ldw	r3,12(sp)
   11b2c:	1001b426 	beq	r2,zero,12200 <___vfiprintf_internal_r+0x11c8>
   11b30:	14f9c83a 	sub	fp,r2,r19
   11b34:	e02f883a 	mov	r23,fp
   11b38:	d8c00415 	stw	r3,16(sp)
   11b3c:	003df706 	br	1131c <___vfiprintf_internal_r+0x2e4>
   11b40:	a0800007 	ldb	r2,0(r20)
   11b44:	6b400814 	ori	r13,r13,32
   11b48:	003d7c06 	br	1113c <___vfiprintf_internal_r+0x104>
   11b4c:	d8c00417 	ldw	r3,16(sp)
   11b50:	00800c04 	movi	r2,48
   11b54:	d8800985 	stb	r2,38(sp)
   11b58:	00801e04 	movi	r2,120
   11b5c:	01000074 	movhi	r4,1
   11b60:	d88009c5 	stb	r2,39(sp)
   11b64:	18800104 	addi	r2,r3,4
   11b68:	d8800415 	stw	r2,16(sp)
   11b6c:	209e3d04 	addi	r2,r4,30964
   11b70:	d8800515 	stw	r2,20(sp)
   11b74:	1dc00017 	ldw	r23,0(r3)
   11b78:	0039883a 	mov	fp,zero
   11b7c:	6b400094 	ori	r13,r13,2
   11b80:	00800084 	movi	r2,2
   11b84:	003e7b06 	br	11574 <___vfiprintf_internal_r+0x53c>
   11b88:	00c00044 	movi	r3,1
   11b8c:	e005883a 	mov	r2,fp
   11b90:	dcc01715 	stw	r19,92(sp)
   11b94:	df001815 	stw	fp,96(sp)
   11b98:	df000c15 	stw	fp,48(sp)
   11b9c:	d8c00b15 	stw	r3,44(sp)
   11ba0:	9021883a 	mov	r16,r18
   11ba4:	84000204 	addi	r16,r16,8
   11ba8:	003e2406 	br	1143c <___vfiprintf_internal_r+0x404>
   11bac:	01400044 	movi	r5,1
   11bb0:	0009883a 	mov	r4,zero
   11bb4:	9021883a 	mov	r16,r18
   11bb8:	003ec206 	br	116c4 <___vfiprintf_internal_r+0x68c>
   11bbc:	8dc7c83a 	sub	r3,r17,r23
   11bc0:	00fe0d0e 	bge	zero,r3,113f8 <___vfiprintf_internal_r+0x3c0>
   11bc4:	19800450 	cmplti	r6,r3,17
   11bc8:	01c00074 	movhi	r7,1
   11bcc:	3001a01e 	bne	r6,zero,12250 <___vfiprintf_internal_r+0x1218>
   11bd0:	39dec404 	addi	r7,r7,31504
   11bd4:	03400404 	movi	r13,16
   11bd8:	00000606 	br	11bf4 <___vfiprintf_internal_r+0xbbc>
   11bdc:	21800084 	addi	r6,r4,2
   11be0:	84000204 	addi	r16,r16,8
   11be4:	2809883a 	mov	r4,r5
   11be8:	18fffc04 	addi	r3,r3,-16
   11bec:	19400448 	cmpgei	r5,r3,17
   11bf0:	28001c26 	beq	r5,zero,11c64 <___vfiprintf_internal_r+0xc2c>
   11bf4:	21400044 	addi	r5,r4,1
   11bf8:	10800404 	addi	r2,r2,16
   11bfc:	81c00015 	stw	r7,0(r16)
   11c00:	83400115 	stw	r13,4(r16)
   11c04:	d8800c15 	stw	r2,48(sp)
   11c08:	d9400b15 	stw	r5,44(sp)
   11c0c:	29800208 	cmpgei	r6,r5,8
   11c10:	303ff226 	beq	r6,zero,11bdc <___vfiprintf_internal_r+0xba4>
   11c14:	d9800a04 	addi	r6,sp,40
   11c18:	a80b883a 	mov	r5,r21
   11c1c:	b009883a 	mov	r4,r22
   11c20:	10007426 	beq	r2,zero,11df4 <___vfiprintf_internal_r+0xdbc>
   11c24:	d9c00615 	stw	r7,24(sp)
   11c28:	d8c00315 	stw	r3,12(sp)
   11c2c:	da000215 	stw	r8,8(sp)
   11c30:	0010f2c0 	call	10f2c <__sprint_r.part.0>
   11c34:	103e121e 	bne	r2,zero,11480 <___vfiprintf_internal_r+0x448>
   11c38:	d8c00317 	ldw	r3,12(sp)
   11c3c:	d9000b17 	ldw	r4,44(sp)
   11c40:	d8800c17 	ldw	r2,48(sp)
   11c44:	18fffc04 	addi	r3,r3,-16
   11c48:	19400448 	cmpgei	r5,r3,17
   11c4c:	d9c00617 	ldw	r7,24(sp)
   11c50:	da000217 	ldw	r8,8(sp)
   11c54:	9021883a 	mov	r16,r18
   11c58:	21800044 	addi	r6,r4,1
   11c5c:	03400404 	movi	r13,16
   11c60:	283fe41e 	bne	r5,zero,11bf4 <___vfiprintf_internal_r+0xbbc>
   11c64:	10c5883a 	add	r2,r2,r3
   11c68:	80c00115 	stw	r3,4(r16)
   11c6c:	81c00015 	stw	r7,0(r16)
   11c70:	d8800c15 	stw	r2,48(sp)
   11c74:	d9800b15 	stw	r6,44(sp)
   11c78:	30c00208 	cmpgei	r3,r6,8
   11c7c:	18011326 	beq	r3,zero,120cc <___vfiprintf_internal_r+0x1094>
   11c80:	10014b26 	beq	r2,zero,121b0 <___vfiprintf_internal_r+0x1178>
   11c84:	d9800a04 	addi	r6,sp,40
   11c88:	a80b883a 	mov	r5,r21
   11c8c:	b009883a 	mov	r4,r22
   11c90:	da000215 	stw	r8,8(sp)
   11c94:	0010f2c0 	call	10f2c <__sprint_r.part.0>
   11c98:	103df91e 	bne	r2,zero,11480 <___vfiprintf_internal_r+0x448>
   11c9c:	da000217 	ldw	r8,8(sp)
   11ca0:	d9000b17 	ldw	r4,44(sp)
   11ca4:	d8800c17 	ldw	r2,48(sp)
   11ca8:	4711c83a 	sub	r8,r8,fp
   11cac:	9021883a 	mov	r16,r18
   11cb0:	21400044 	addi	r5,r4,1
   11cb4:	023dd20e 	bge	zero,r8,11400 <___vfiprintf_internal_r+0x3c8>
   11cb8:	01c00074 	movhi	r7,1
   11cbc:	40c00450 	cmplti	r3,r8,17
   11cc0:	39dec404 	addi	r7,r7,31504
   11cc4:	03400404 	movi	r13,16
   11cc8:	18000726 	beq	r3,zero,11ce8 <___vfiprintf_internal_r+0xcb0>
   11ccc:	00002006 	br	11d50 <___vfiprintf_internal_r+0xd18>
   11cd0:	21400084 	addi	r5,r4,2
   11cd4:	84000204 	addi	r16,r16,8
   11cd8:	1809883a 	mov	r4,r3
   11cdc:	423ffc04 	addi	r8,r8,-16
   11ce0:	40c00448 	cmpgei	r3,r8,17
   11ce4:	18001a26 	beq	r3,zero,11d50 <___vfiprintf_internal_r+0xd18>
   11ce8:	20c00044 	addi	r3,r4,1
   11cec:	10800404 	addi	r2,r2,16
   11cf0:	81c00015 	stw	r7,0(r16)
   11cf4:	83400115 	stw	r13,4(r16)
   11cf8:	d8800c15 	stw	r2,48(sp)
   11cfc:	d8c00b15 	stw	r3,44(sp)
   11d00:	19400208 	cmpgei	r5,r3,8
   11d04:	283ff226 	beq	r5,zero,11cd0 <___vfiprintf_internal_r+0xc98>
   11d08:	d9800a04 	addi	r6,sp,40
   11d0c:	a80b883a 	mov	r5,r21
   11d10:	b009883a 	mov	r4,r22
   11d14:	10001826 	beq	r2,zero,11d78 <___vfiprintf_internal_r+0xd40>
   11d18:	d9c00315 	stw	r7,12(sp)
   11d1c:	da000215 	stw	r8,8(sp)
   11d20:	0010f2c0 	call	10f2c <__sprint_r.part.0>
   11d24:	103dd61e 	bne	r2,zero,11480 <___vfiprintf_internal_r+0x448>
   11d28:	da000217 	ldw	r8,8(sp)
   11d2c:	d9000b17 	ldw	r4,44(sp)
   11d30:	d8800c17 	ldw	r2,48(sp)
   11d34:	423ffc04 	addi	r8,r8,-16
   11d38:	40c00448 	cmpgei	r3,r8,17
   11d3c:	d9c00317 	ldw	r7,12(sp)
   11d40:	9021883a 	mov	r16,r18
   11d44:	21400044 	addi	r5,r4,1
   11d48:	03400404 	movi	r13,16
   11d4c:	183fe61e 	bne	r3,zero,11ce8 <___vfiprintf_internal_r+0xcb0>
   11d50:	1205883a 	add	r2,r2,r8
   11d54:	81c00015 	stw	r7,0(r16)
   11d58:	82000115 	stw	r8,4(r16)
   11d5c:	d8800c15 	stw	r2,48(sp)
   11d60:	d9400b15 	stw	r5,44(sp)
   11d64:	28c00208 	cmpgei	r3,r5,8
   11d68:	1800a11e 	bne	r3,zero,11ff0 <___vfiprintf_internal_r+0xfb8>
   11d6c:	84000204 	addi	r16,r16,8
   11d70:	29400044 	addi	r5,r5,1
   11d74:	003da206 	br	11400 <___vfiprintf_internal_r+0x3c8>
   11d78:	01400044 	movi	r5,1
   11d7c:	0009883a 	mov	r4,zero
   11d80:	9021883a 	mov	r16,r18
   11d84:	003fd506 	br	11cdc <___vfiprintf_internal_r+0xca4>
   11d88:	10c00060 	cmpeqi	r3,r2,1
   11d8c:	18011a1e 	bne	r3,zero,121f8 <___vfiprintf_internal_r+0x11c0>
   11d90:	108000a0 	cmpeqi	r2,r2,2
   11d94:	db400017 	ldw	r13,0(sp)
   11d98:	103ecf26 	beq	r2,zero,118d8 <___vfiprintf_internal_r+0x8a0>
   11d9c:	9027883a 	mov	r19,r18
   11da0:	d9000517 	ldw	r4,20(sp)
   11da4:	b88003cc 	andi	r2,r23,15
   11da8:	e006973a 	slli	r3,fp,28
   11dac:	b82ed13a 	srli	r23,r23,4
   11db0:	2085883a 	add	r2,r4,r2
   11db4:	10800003 	ldbu	r2,0(r2)
   11db8:	e038d13a 	srli	fp,fp,4
   11dbc:	1deeb03a 	or	r23,r3,r23
   11dc0:	98bfffc5 	stb	r2,-1(r19)
   11dc4:	bf04b03a 	or	r2,r23,fp
   11dc8:	9cffffc4 	addi	r19,r19,-1
   11dcc:	103ff41e 	bne	r2,zero,11da0 <___vfiprintf_internal_r+0xd68>
   11dd0:	94f9c83a 	sub	fp,r18,r19
   11dd4:	db400015 	stw	r13,0(sp)
   11dd8:	003ed806 	br	1193c <___vfiprintf_internal_r+0x904>
   11ddc:	d9800a04 	addi	r6,sp,40
   11de0:	a80b883a 	mov	r5,r21
   11de4:	b009883a 	mov	r4,r22
   11de8:	0010f2c0 	call	10f2c <__sprint_r.part.0>
   11dec:	103d9e26 	beq	r2,zero,11468 <___vfiprintf_internal_r+0x430>
   11df0:	003da306 	br	11480 <___vfiprintf_internal_r+0x448>
   11df4:	01800044 	movi	r6,1
   11df8:	0009883a 	mov	r4,zero
   11dfc:	9021883a 	mov	r16,r18
   11e00:	003f7906 	br	11be8 <___vfiprintf_internal_r+0xbb0>
   11e04:	10009626 	beq	r2,zero,12060 <___vfiprintf_internal_r+0x1028>
   11e08:	d9800a04 	addi	r6,sp,40
   11e0c:	a80b883a 	mov	r5,r21
   11e10:	b009883a 	mov	r4,r22
   11e14:	da000615 	stw	r8,24(sp)
   11e18:	db400315 	stw	r13,12(sp)
   11e1c:	db800215 	stw	r14,8(sp)
   11e20:	0010f2c0 	call	10f2c <__sprint_r.part.0>
   11e24:	103d961e 	bne	r2,zero,11480 <___vfiprintf_internal_r+0x448>
   11e28:	d9000b17 	ldw	r4,44(sp)
   11e2c:	d8800c17 	ldw	r2,48(sp)
   11e30:	da000617 	ldw	r8,24(sp)
   11e34:	db400317 	ldw	r13,12(sp)
   11e38:	db800217 	ldw	r14,8(sp)
   11e3c:	9021883a 	mov	r16,r18
   11e40:	21400044 	addi	r5,r4,1
   11e44:	003d5206 	br	11390 <___vfiprintf_internal_r+0x358>
   11e48:	d8800984 	addi	r2,sp,38
   11e4c:	d8801715 	stw	r2,92(sp)
   11e50:	00800084 	movi	r2,2
   11e54:	d8801815 	stw	r2,96(sp)
   11e58:	01400044 	movi	r5,1
   11e5c:	9021883a 	mov	r16,r18
   11e60:	2809883a 	mov	r4,r5
   11e64:	84000204 	addi	r16,r16,8
   11e68:	21400044 	addi	r5,r4,1
   11e6c:	003d6006 	br	113f0 <___vfiprintf_internal_r+0x3b8>
   11e70:	db400017 	ldw	r13,0(sp)
   11e74:	003e9406 	br	118c8 <___vfiprintf_internal_r+0x890>
   11e78:	9027883a 	mov	r19,r18
   11e7c:	b809883a 	mov	r4,r23
   11e80:	e00b883a 	mov	r5,fp
   11e84:	01800284 	movi	r6,10
   11e88:	000f883a 	mov	r7,zero
   11e8c:	db800315 	stw	r14,12(sp)
   11e90:	da000215 	stw	r8,8(sp)
   11e94:	db400015 	stw	r13,0(sp)
   11e98:	0013b8c0 	call	13b8c <__umoddi3>
   11e9c:	10800c04 	addi	r2,r2,48
   11ea0:	b809883a 	mov	r4,r23
   11ea4:	e00b883a 	mov	r5,fp
   11ea8:	98bfffc5 	stb	r2,-1(r19)
   11eac:	01800284 	movi	r6,10
   11eb0:	000f883a 	mov	r7,zero
   11eb4:	001356c0 	call	1356c <__udivdi3>
   11eb8:	e009883a 	mov	r4,fp
   11ebc:	b80b883a 	mov	r5,r23
   11ec0:	db400017 	ldw	r13,0(sp)
   11ec4:	da000217 	ldw	r8,8(sp)
   11ec8:	db800317 	ldw	r14,12(sp)
   11ecc:	9cffffc4 	addi	r19,r19,-1
   11ed0:	102f883a 	mov	r23,r2
   11ed4:	1839883a 	mov	fp,r3
   11ed8:	203fe81e 	bne	r4,zero,11e7c <___vfiprintf_internal_r+0xe44>
   11edc:	294002a8 	cmpgeui	r5,r5,10
   11ee0:	283fe61e 	bne	r5,zero,11e7c <___vfiprintf_internal_r+0xe44>
   11ee4:	94f9c83a 	sub	fp,r18,r19
   11ee8:	003e9406 	br	1193c <___vfiprintf_internal_r+0x904>
   11eec:	19400450 	cmplti	r5,r3,17
   11ef0:	01c00074 	movhi	r7,1
   11ef4:	2800ce1e 	bne	r5,zero,12230 <___vfiprintf_internal_r+0x11f8>
   11ef8:	39dec804 	addi	r7,r7,31520
   11efc:	03c00404 	movi	r15,16
   11f00:	00000706 	br	11f20 <___vfiprintf_internal_r+0xee8>
   11f04:	27c00084 	addi	ra,r4,2
   11f08:	84000204 	addi	r16,r16,8
   11f0c:	3009883a 	mov	r4,r6
   11f10:	18fffc04 	addi	r3,r3,-16
   11f14:	19400448 	cmpgei	r5,r3,17
   11f18:	28002026 	beq	r5,zero,11f9c <___vfiprintf_internal_r+0xf64>
   11f1c:	21800044 	addi	r6,r4,1
   11f20:	10800404 	addi	r2,r2,16
   11f24:	81c00015 	stw	r7,0(r16)
   11f28:	83c00115 	stw	r15,4(r16)
   11f2c:	d8800c15 	stw	r2,48(sp)
   11f30:	d9800b15 	stw	r6,44(sp)
   11f34:	31400208 	cmpgei	r5,r6,8
   11f38:	283ff226 	beq	r5,zero,11f04 <___vfiprintf_internal_r+0xecc>
   11f3c:	d9800a04 	addi	r6,sp,40
   11f40:	a80b883a 	mov	r5,r21
   11f44:	b009883a 	mov	r4,r22
   11f48:	10001f26 	beq	r2,zero,11fc8 <___vfiprintf_internal_r+0xf90>
   11f4c:	d9c00815 	stw	r7,32(sp)
   11f50:	d8c00715 	stw	r3,28(sp)
   11f54:	da000615 	stw	r8,24(sp)
   11f58:	db400315 	stw	r13,12(sp)
   11f5c:	db800215 	stw	r14,8(sp)
   11f60:	0010f2c0 	call	10f2c <__sprint_r.part.0>
   11f64:	103d461e 	bne	r2,zero,11480 <___vfiprintf_internal_r+0x448>
   11f68:	d8c00717 	ldw	r3,28(sp)
   11f6c:	d9000b17 	ldw	r4,44(sp)
   11f70:	d8800c17 	ldw	r2,48(sp)
   11f74:	18fffc04 	addi	r3,r3,-16
   11f78:	19400448 	cmpgei	r5,r3,17
   11f7c:	d9c00817 	ldw	r7,32(sp)
   11f80:	da000617 	ldw	r8,24(sp)
   11f84:	db400317 	ldw	r13,12(sp)
   11f88:	db800217 	ldw	r14,8(sp)
   11f8c:	9021883a 	mov	r16,r18
   11f90:	27c00044 	addi	ra,r4,1
   11f94:	03c00404 	movi	r15,16
   11f98:	283fe01e 	bne	r5,zero,11f1c <___vfiprintf_internal_r+0xee4>
   11f9c:	10c5883a 	add	r2,r2,r3
   11fa0:	80c00115 	stw	r3,4(r16)
   11fa4:	81c00015 	stw	r7,0(r16)
   11fa8:	d8800c15 	stw	r2,48(sp)
   11fac:	dfc00b15 	stw	ra,44(sp)
   11fb0:	f8c00208 	cmpgei	r3,ra,8
   11fb4:	18002f1e 	bne	r3,zero,12074 <___vfiprintf_internal_r+0x103c>
   11fb8:	84000204 	addi	r16,r16,8
   11fbc:	f9400044 	addi	r5,ra,1
   11fc0:	f809883a 	mov	r4,ra
   11fc4:	003ce406 	br	11358 <___vfiprintf_internal_r+0x320>
   11fc8:	0009883a 	mov	r4,zero
   11fcc:	07c00044 	movi	ra,1
   11fd0:	9021883a 	mov	r16,r18
   11fd4:	003fce06 	br	11f10 <___vfiprintf_internal_r+0xed8>
   11fd8:	8dc0010e 	bge	r17,r23,11fe0 <___vfiprintf_internal_r+0xfa8>
   11fdc:	b823883a 	mov	r17,r23
   11fe0:	d8800117 	ldw	r2,4(sp)
   11fe4:	1445883a 	add	r2,r2,r17
   11fe8:	d8800115 	stw	r2,4(sp)
   11fec:	003d1e06 	br	11468 <___vfiprintf_internal_r+0x430>
   11ff0:	103ee526 	beq	r2,zero,11b88 <___vfiprintf_internal_r+0xb50>
   11ff4:	d9800a04 	addi	r6,sp,40
   11ff8:	a80b883a 	mov	r5,r21
   11ffc:	b009883a 	mov	r4,r22
   12000:	0010f2c0 	call	10f2c <__sprint_r.part.0>
   12004:	103d1e1e 	bne	r2,zero,11480 <___vfiprintf_internal_r+0x448>
   12008:	d9400b17 	ldw	r5,44(sp)
   1200c:	d8800c17 	ldw	r2,48(sp)
   12010:	9021883a 	mov	r16,r18
   12014:	29400044 	addi	r5,r5,1
   12018:	003cf906 	br	11400 <___vfiprintf_internal_r+0x3c8>
   1201c:	d8000b15 	stw	zero,44(sp)
   12020:	9021883a 	mov	r16,r18
   12024:	003d7106 	br	115ec <___vfiprintf_internal_r+0x5b4>
   12028:	4000731e 	bne	r8,zero,121f8 <___vfiprintf_internal_r+0x11c0>
   1202c:	0011883a 	mov	r8,zero
   12030:	0039883a 	mov	fp,zero
   12034:	9027883a 	mov	r19,r18
   12038:	003e4006 	br	1193c <___vfiprintf_internal_r+0x904>
   1203c:	0039883a 	mov	fp,zero
   12040:	003e9106 	br	11a88 <___vfiprintf_internal_r+0xa50>
   12044:	b839d7fa 	srai	fp,r23,31
   12048:	e005883a 	mov	r2,fp
   1204c:	003dd206 	br	11798 <___vfiprintf_internal_r+0x760>
   12050:	01400044 	movi	r5,1
   12054:	0009883a 	mov	r4,zero
   12058:	9021883a 	mov	r16,r18
   1205c:	003ce406 	br	113f0 <___vfiprintf_internal_r+0x3b8>
   12060:	70002b1e 	bne	r14,zero,12110 <___vfiprintf_internal_r+0x10d8>
   12064:	0009883a 	mov	r4,zero
   12068:	01400044 	movi	r5,1
   1206c:	9021883a 	mov	r16,r18
   12070:	003cdf06 	br	113f0 <___vfiprintf_internal_r+0x3b8>
   12074:	10003726 	beq	r2,zero,12154 <___vfiprintf_internal_r+0x111c>
   12078:	d9800a04 	addi	r6,sp,40
   1207c:	a80b883a 	mov	r5,r21
   12080:	b009883a 	mov	r4,r22
   12084:	da000615 	stw	r8,24(sp)
   12088:	db400315 	stw	r13,12(sp)
   1208c:	db800215 	stw	r14,8(sp)
   12090:	0010f2c0 	call	10f2c <__sprint_r.part.0>
   12094:	103cfa1e 	bne	r2,zero,11480 <___vfiprintf_internal_r+0x448>
   12098:	d9000b17 	ldw	r4,44(sp)
   1209c:	d8800c17 	ldw	r2,48(sp)
   120a0:	da000617 	ldw	r8,24(sp)
   120a4:	db400317 	ldw	r13,12(sp)
   120a8:	db800217 	ldw	r14,8(sp)
   120ac:	9021883a 	mov	r16,r18
   120b0:	21400044 	addi	r5,r4,1
   120b4:	003ca806 	br	11358 <___vfiprintf_internal_r+0x320>
   120b8:	a0800007 	ldb	r2,0(r20)
   120bc:	d8c00415 	stw	r3,16(sp)
   120c0:	003c1e06 	br	1113c <___vfiprintf_internal_r+0x104>
   120c4:	9027883a 	mov	r19,r18
   120c8:	003e1c06 	br	1193c <___vfiprintf_internal_r+0x904>
   120cc:	84000204 	addi	r16,r16,8
   120d0:	31400044 	addi	r5,r6,1
   120d4:	3009883a 	mov	r4,r6
   120d8:	003cc706 	br	113f8 <___vfiprintf_internal_r+0x3c0>
   120dc:	00c00c04 	movi	r3,48
   120e0:	d88009c5 	stb	r2,39(sp)
   120e4:	d8c00985 	stb	r3,38(sp)
   120e8:	6b400094 	ori	r13,r13,2
   120ec:	00800084 	movi	r2,2
   120f0:	003d2006 	br	11574 <___vfiprintf_internal_r+0x53c>
   120f4:	d9400117 	ldw	r5,4(sp)
   120f8:	20800017 	ldw	r2,0(r4)
   120fc:	d8c00415 	stw	r3,16(sp)
   12100:	2809d7fa 	srai	r4,r5,31
   12104:	11400015 	stw	r5,0(r2)
   12108:	11000115 	stw	r4,4(r2)
   1210c:	003bf306 	br	110dc <___vfiprintf_internal_r+0xa4>
   12110:	d8800984 	addi	r2,sp,38
   12114:	d8801715 	stw	r2,92(sp)
   12118:	00800084 	movi	r2,2
   1211c:	d8801815 	stw	r2,96(sp)
   12120:	01000044 	movi	r4,1
   12124:	9021883a 	mov	r16,r18
   12128:	003f4e06 	br	11e64 <___vfiprintf_internal_r+0xe2c>
   1212c:	9809883a 	mov	r4,r19
   12130:	d8c00215 	stw	r3,8(sp)
   12134:	db400015 	stw	r13,0(sp)
   12138:	000a4700 	call	a470 <strlen>
   1213c:	d8c00217 	ldw	r3,8(sp)
   12140:	db400017 	ldw	r13,0(sp)
   12144:	1039883a 	mov	fp,r2
   12148:	102f883a 	mov	r23,r2
   1214c:	d8c00415 	stw	r3,16(sp)
   12150:	003c7206 	br	1131c <___vfiprintf_internal_r+0x2e4>
   12154:	d8c00947 	ldb	r3,37(sp)
   12158:	18001b26 	beq	r3,zero,121c8 <___vfiprintf_internal_r+0x1190>
   1215c:	d8800944 	addi	r2,sp,37
   12160:	d8801715 	stw	r2,92(sp)
   12164:	00800044 	movi	r2,1
   12168:	d8801815 	stw	r2,96(sp)
   1216c:	01400044 	movi	r5,1
   12170:	9021883a 	mov	r16,r18
   12174:	003c8306 	br	11384 <___vfiprintf_internal_r+0x34c>
   12178:	d8800417 	ldw	r2,16(sp)
   1217c:	10800017 	ldw	r2,0(r2)
   12180:	d8c00415 	stw	r3,16(sp)
   12184:	d8c00117 	ldw	r3,4(sp)
   12188:	10c00015 	stw	r3,0(r2)
   1218c:	003bd306 	br	110dc <___vfiprintf_internal_r+0xa4>
   12190:	408001f0 	cmpltui	r2,r8,7
   12194:	4039883a 	mov	fp,r8
   12198:	10000926 	beq	r2,zero,121c0 <___vfiprintf_internal_r+0x1188>
   1219c:	04c00074 	movhi	r19,1
   121a0:	e02f883a 	mov	r23,fp
   121a4:	d8c00415 	stw	r3,16(sp)
   121a8:	9cde4704 	addi	r19,r19,31004
   121ac:	003c5b06 	br	1131c <___vfiprintf_internal_r+0x2e4>
   121b0:	01400044 	movi	r5,1
   121b4:	0009883a 	mov	r4,zero
   121b8:	9021883a 	mov	r16,r18
   121bc:	003c8e06 	br	113f8 <___vfiprintf_internal_r+0x3c0>
   121c0:	07000184 	movi	fp,6
   121c4:	003ff506 	br	1219c <___vfiprintf_internal_r+0x1164>
   121c8:	703f1f1e 	bne	r14,zero,11e48 <___vfiprintf_internal_r+0xe10>
   121cc:	0009883a 	mov	r4,zero
   121d0:	01400044 	movi	r5,1
   121d4:	9021883a 	mov	r16,r18
   121d8:	003c8706 	br	113f8 <___vfiprintf_internal_r+0x3c0>
   121dc:	d9800945 	stb	r6,37(sp)
   121e0:	003c4806 	br	11304 <___vfiprintf_internal_r+0x2cc>
   121e4:	d9800a04 	addi	r6,sp,40
   121e8:	a80b883a 	mov	r5,r21
   121ec:	b009883a 	mov	r4,r22
   121f0:	0010f2c0 	call	10f2c <__sprint_r.part.0>
   121f4:	003ca206 	br	11480 <___vfiprintf_internal_r+0x448>
   121f8:	db400017 	ldw	r13,0(sp)
   121fc:	003d7306 	br	117cc <___vfiprintf_internal_r+0x794>
   12200:	402f883a 	mov	r23,r8
   12204:	d8c00415 	stw	r3,16(sp)
   12208:	4039883a 	mov	fp,r8
   1220c:	003c4306 	br	1131c <___vfiprintf_internal_r+0x2e4>
   12210:	d9800945 	stb	r6,37(sp)
   12214:	003d9106 	br	1185c <___vfiprintf_internal_r+0x824>
   12218:	d9800945 	stb	r6,37(sp)
   1221c:	003e1006 	br	11a60 <___vfiprintf_internal_r+0xa28>
   12220:	d9800945 	stb	r6,37(sp)
   12224:	003def06 	br	119e4 <___vfiprintf_internal_r+0x9ac>
   12228:	d9800945 	stb	r6,37(sp)
   1222c:	003e1e06 	br	11aa8 <___vfiprintf_internal_r+0xa70>
   12230:	303f883a 	mov	ra,r6
   12234:	39dec804 	addi	r7,r7,31520
   12238:	003f5806 	br	11f9c <___vfiprintf_internal_r+0xf64>
   1223c:	d9800945 	stb	r6,37(sp)
   12240:	003d4d06 	br	11778 <___vfiprintf_internal_r+0x740>
   12244:	21400044 	addi	r5,r4,1
   12248:	39dec804 	addi	r7,r7,31520
   1224c:	003d3706 	br	1172c <___vfiprintf_internal_r+0x6f4>
   12250:	280d883a 	mov	r6,r5
   12254:	39dec404 	addi	r7,r7,31504
   12258:	003e8206 	br	11c64 <___vfiprintf_internal_r+0xc2c>
   1225c:	00bfffc4 	movi	r2,-1
   12260:	d8800115 	stw	r2,4(sp)
   12264:	003c8906 	br	1148c <___vfiprintf_internal_r+0x454>
   12268:	d8800417 	ldw	r2,16(sp)
   1226c:	12000017 	ldw	r8,0(r2)
   12270:	11000104 	addi	r4,r2,4
   12274:	4000010e 	bge	r8,zero,1227c <___vfiprintf_internal_r+0x1244>
   12278:	023fffc4 	movi	r8,-1
   1227c:	a0800043 	ldbu	r2,1(r20)
   12280:	d9000415 	stw	r4,16(sp)
   12284:	1829883a 	mov	r20,r3
   12288:	10803fcc 	andi	r2,r2,255
   1228c:	1080201c 	xori	r2,r2,128
   12290:	10bfe004 	addi	r2,r2,-128
   12294:	003ba906 	br	1113c <___vfiprintf_internal_r+0x104>

00012298 <__vfiprintf_internal>:
   12298:	00c000b4 	movhi	r3,2
   1229c:	2005883a 	mov	r2,r4
   122a0:	1926b817 	ldw	r4,-25888(r3)
   122a4:	300f883a 	mov	r7,r6
   122a8:	280d883a 	mov	r6,r5
   122ac:	100b883a 	mov	r5,r2
   122b0:	00110381 	jmpi	11038 <___vfiprintf_internal_r>

000122b4 <__sbprintf>:
   122b4:	2880030b 	ldhu	r2,12(r5)
   122b8:	2b001917 	ldw	r12,100(r5)
   122bc:	2ac0038b 	ldhu	r11,14(r5)
   122c0:	2a800717 	ldw	r10,28(r5)
   122c4:	2a400917 	ldw	r9,36(r5)
   122c8:	defee204 	addi	sp,sp,-1144
   122cc:	da001a04 	addi	r8,sp,104
   122d0:	00c10004 	movi	r3,1024
   122d4:	dc011a15 	stw	r16,1128(sp)
   122d8:	10bfff4c 	andi	r2,r2,65533
   122dc:	2821883a 	mov	r16,r5
   122e0:	d80b883a 	mov	r5,sp
   122e4:	dc811c15 	stw	r18,1136(sp)
   122e8:	dc411b15 	stw	r17,1132(sp)
   122ec:	dfc11d15 	stw	ra,1140(sp)
   122f0:	2025883a 	mov	r18,r4
   122f4:	d880030d 	sth	r2,12(sp)
   122f8:	db001915 	stw	r12,100(sp)
   122fc:	dac0038d 	sth	r11,14(sp)
   12300:	da800715 	stw	r10,28(sp)
   12304:	da400915 	stw	r9,36(sp)
   12308:	da000015 	stw	r8,0(sp)
   1230c:	da000415 	stw	r8,16(sp)
   12310:	d8c00215 	stw	r3,8(sp)
   12314:	d8c00515 	stw	r3,20(sp)
   12318:	d8000615 	stw	zero,24(sp)
   1231c:	00110380 	call	11038 <___vfiprintf_internal_r>
   12320:	1023883a 	mov	r17,r2
   12324:	10000d0e 	bge	r2,zero,1235c <__sbprintf+0xa8>
   12328:	d880030b 	ldhu	r2,12(sp)
   1232c:	1080100c 	andi	r2,r2,64
   12330:	10000326 	beq	r2,zero,12340 <__sbprintf+0x8c>
   12334:	8080030b 	ldhu	r2,12(r16)
   12338:	10801014 	ori	r2,r2,64
   1233c:	8080030d 	sth	r2,12(r16)
   12340:	8805883a 	mov	r2,r17
   12344:	dfc11d17 	ldw	ra,1140(sp)
   12348:	dc811c17 	ldw	r18,1136(sp)
   1234c:	dc411b17 	ldw	r17,1132(sp)
   12350:	dc011a17 	ldw	r16,1128(sp)
   12354:	dec11e04 	addi	sp,sp,1144
   12358:	f800283a 	ret
   1235c:	d80b883a 	mov	r5,sp
   12360:	9009883a 	mov	r4,r18
   12364:	000e2f00 	call	e2f0 <_fflush_r>
   12368:	103fef26 	beq	r2,zero,12328 <__sbprintf+0x74>
   1236c:	047fffc4 	movi	r17,-1
   12370:	003fed06 	br	12328 <__sbprintf+0x74>

00012374 <_write_r>:
   12374:	2807883a 	mov	r3,r5
   12378:	defffe04 	addi	sp,sp,-8
   1237c:	dc000015 	stw	r16,0(sp)
   12380:	300b883a 	mov	r5,r6
   12384:	008000b4 	movhi	r2,2
   12388:	380d883a 	mov	r6,r7
   1238c:	2021883a 	mov	r16,r4
   12390:	1809883a 	mov	r4,r3
   12394:	dfc00115 	stw	ra,4(sp)
   12398:	102dec15 	stw	zero,-18512(r2)
   1239c:	0014c3c0 	call	14c3c <write>
   123a0:	10ffffd8 	cmpnei	r3,r2,-1
   123a4:	18000426 	beq	r3,zero,123b8 <_write_r+0x44>
   123a8:	dfc00117 	ldw	ra,4(sp)
   123ac:	dc000017 	ldw	r16,0(sp)
   123b0:	dec00204 	addi	sp,sp,8
   123b4:	f800283a 	ret
   123b8:	00c000b4 	movhi	r3,2
   123bc:	18edec17 	ldw	r3,-18512(r3)
   123c0:	183ff926 	beq	r3,zero,123a8 <_write_r+0x34>
   123c4:	80c00015 	stw	r3,0(r16)
   123c8:	dfc00117 	ldw	ra,4(sp)
   123cc:	dc000017 	ldw	r16,0(sp)
   123d0:	dec00204 	addi	sp,sp,8
   123d4:	f800283a 	ret

000123d8 <_close_r>:
   123d8:	defffe04 	addi	sp,sp,-8
   123dc:	dc000015 	stw	r16,0(sp)
   123e0:	008000b4 	movhi	r2,2
   123e4:	2021883a 	mov	r16,r4
   123e8:	2809883a 	mov	r4,r5
   123ec:	dfc00115 	stw	ra,4(sp)
   123f0:	102dec15 	stw	zero,-18512(r2)
   123f4:	001421c0 	call	1421c <close>
   123f8:	10ffffd8 	cmpnei	r3,r2,-1
   123fc:	18000426 	beq	r3,zero,12410 <_close_r+0x38>
   12400:	dfc00117 	ldw	ra,4(sp)
   12404:	dc000017 	ldw	r16,0(sp)
   12408:	dec00204 	addi	sp,sp,8
   1240c:	f800283a 	ret
   12410:	00c000b4 	movhi	r3,2
   12414:	18edec17 	ldw	r3,-18512(r3)
   12418:	183ff926 	beq	r3,zero,12400 <_close_r+0x28>
   1241c:	80c00015 	stw	r3,0(r16)
   12420:	dfc00117 	ldw	ra,4(sp)
   12424:	dc000017 	ldw	r16,0(sp)
   12428:	dec00204 	addi	sp,sp,8
   1242c:	f800283a 	ret

00012430 <__assert_func>:
   12430:	008000b4 	movhi	r2,2
   12434:	1226b817 	ldw	r8,-25888(r2)
   12438:	defffc04 	addi	sp,sp,-16
   1243c:	3807883a 	mov	r3,r7
   12440:	3005883a 	mov	r2,r6
   12444:	dfc00315 	stw	ra,12(sp)
   12448:	42400317 	ldw	r9,12(r8)
   1244c:	200f883a 	mov	r7,r4
   12450:	2811883a 	mov	r8,r5
   12454:	180d883a 	mov	r6,r3
   12458:	10000a26 	beq	r2,zero,12484 <__assert_func+0x54>
   1245c:	00c00074 	movhi	r3,1
   12460:	18decc04 	addi	r3,r3,31536
   12464:	01400074 	movhi	r5,1
   12468:	295ed004 	addi	r5,r5,31552
   1246c:	4809883a 	mov	r4,r9
   12470:	d8c00115 	stw	r3,4(sp)
   12474:	da000015 	stw	r8,0(sp)
   12478:	d8800215 	stw	r2,8(sp)
   1247c:	00127bc0 	call	127bc <fiprintf>
   12480:	00130040 	call	13004 <abort>
   12484:	00c00074 	movhi	r3,1
   12488:	18decf04 	addi	r3,r3,31548
   1248c:	1805883a 	mov	r2,r3
   12490:	003ff406 	br	12464 <__assert_func+0x34>

00012494 <__assert>:
   12494:	deffff04 	addi	sp,sp,-4
   12498:	300f883a 	mov	r7,r6
   1249c:	000d883a 	mov	r6,zero
   124a0:	dfc00015 	stw	ra,0(sp)
   124a4:	00124300 	call	12430 <__assert_func>

000124a8 <_calloc_r>:
   124a8:	2806d43a 	srli	r3,r5,16
   124ac:	defffb04 	addi	sp,sp,-20
   124b0:	dc400115 	stw	r17,4(sp)
   124b4:	dc000015 	stw	r16,0(sp)
   124b8:	dfc00415 	stw	ra,16(sp)
   124bc:	dcc00315 	stw	r19,12(sp)
   124c0:	dc800215 	stw	r18,8(sp)
   124c4:	3022d43a 	srli	r17,r6,16
   124c8:	2805883a 	mov	r2,r5
   124cc:	2021883a 	mov	r16,r4
   124d0:	18002d1e 	bne	r3,zero,12588 <_calloc_r+0xe0>
   124d4:	88003e1e 	bne	r17,zero,125d0 <_calloc_r+0x128>
   124d8:	317fffcc 	andi	r5,r6,65535
   124dc:	113fffcc 	andi	r4,r2,65535
   124e0:	000608c0 	call	608c <__mulsi3>
   124e4:	100b883a 	mov	r5,r2
   124e8:	8009883a 	mov	r4,r16
   124ec:	00099f40 	call	99f4 <_malloc_r>
   124f0:	1009883a 	mov	r4,r2
   124f4:	10001626 	beq	r2,zero,12550 <_calloc_r+0xa8>
   124f8:	11bfff17 	ldw	r6,-4(r2)
   124fc:	00bfff04 	movi	r2,-4
   12500:	308c703a 	and	r6,r6,r2
   12504:	31bfff04 	addi	r6,r6,-4
   12508:	30800968 	cmpgeui	r2,r6,37
   1250c:	1000181e 	bne	r2,zero,12570 <_calloc_r+0xc8>
   12510:	30800530 	cmpltui	r2,r6,20
   12514:	10000a1e 	bne	r2,zero,12540 <_calloc_r+0x98>
   12518:	20000015 	stw	zero,0(r4)
   1251c:	20000115 	stw	zero,4(r4)
   12520:	30800728 	cmpgeui	r2,r6,28
   12524:	10001626 	beq	r2,zero,12580 <_calloc_r+0xd8>
   12528:	20000215 	stw	zero,8(r4)
   1252c:	20000315 	stw	zero,12(r4)
   12530:	31800920 	cmpeqi	r6,r6,36
   12534:	30002d1e 	bne	r6,zero,125ec <_calloc_r+0x144>
   12538:	20800404 	addi	r2,r4,16
   1253c:	00000106 	br	12544 <_calloc_r+0x9c>
   12540:	2005883a 	mov	r2,r4
   12544:	10000015 	stw	zero,0(r2)
   12548:	10000115 	stw	zero,4(r2)
   1254c:	10000215 	stw	zero,8(r2)
   12550:	2005883a 	mov	r2,r4
   12554:	dfc00417 	ldw	ra,16(sp)
   12558:	dcc00317 	ldw	r19,12(sp)
   1255c:	dc800217 	ldw	r18,8(sp)
   12560:	dc400117 	ldw	r17,4(sp)
   12564:	dc000017 	ldw	r16,0(sp)
   12568:	dec00504 	addi	sp,sp,20
   1256c:	f800283a 	ret
   12570:	000b883a 	mov	r5,zero
   12574:	000f5d00 	call	f5d0 <memset>
   12578:	1009883a 	mov	r4,r2
   1257c:	003ff406 	br	12550 <_calloc_r+0xa8>
   12580:	20800204 	addi	r2,r4,8
   12584:	003fef06 	br	12544 <_calloc_r+0x9c>
   12588:	8800131e 	bne	r17,zero,125d8 <_calloc_r+0x130>
   1258c:	1823883a 	mov	r17,r3
   12590:	3027883a 	mov	r19,r6
   12594:	317fffcc 	andi	r5,r6,65535
   12598:	113fffcc 	andi	r4,r2,65535
   1259c:	000608c0 	call	608c <__mulsi3>
   125a0:	897fffcc 	andi	r5,r17,65535
   125a4:	993fffcc 	andi	r4,r19,65535
   125a8:	1025883a 	mov	r18,r2
   125ac:	000608c0 	call	608c <__mulsi3>
   125b0:	900ad43a 	srli	r5,r18,16
   125b4:	114b883a 	add	r5,r2,r5
   125b8:	2804d43a 	srli	r2,r5,16
   125bc:	1000061e 	bne	r2,zero,125d8 <_calloc_r+0x130>
   125c0:	280a943a 	slli	r5,r5,16
   125c4:	94bfffcc 	andi	r18,r18,65535
   125c8:	2c8ab03a 	or	r5,r5,r18
   125cc:	003fc606 	br	124e8 <_calloc_r+0x40>
   125d0:	2827883a 	mov	r19,r5
   125d4:	003fef06 	br	12594 <_calloc_r+0xec>
   125d8:	00099c80 	call	99c8 <__errno>
   125dc:	00c00304 	movi	r3,12
   125e0:	10c00015 	stw	r3,0(r2)
   125e4:	0009883a 	mov	r4,zero
   125e8:	003fd906 	br	12550 <_calloc_r+0xa8>
   125ec:	20000415 	stw	zero,16(r4)
   125f0:	20800604 	addi	r2,r4,24
   125f4:	20000515 	stw	zero,20(r4)
   125f8:	003fd206 	br	12544 <_calloc_r+0x9c>

000125fc <_fclose_r.part.0>:
   125fc:	defffc04 	addi	sp,sp,-16
   12600:	dc800215 	stw	r18,8(sp)
   12604:	dc400115 	stw	r17,4(sp)
   12608:	dc000015 	stw	r16,0(sp)
   1260c:	dfc00315 	stw	ra,12(sp)
   12610:	2821883a 	mov	r16,r5
   12614:	2023883a 	mov	r17,r4
   12618:	000e0c80 	call	e0c8 <__sflush_r>
   1261c:	80c00b17 	ldw	r3,44(r16)
   12620:	1025883a 	mov	r18,r2
   12624:	18000426 	beq	r3,zero,12638 <_fclose_r.part.0+0x3c>
   12628:	81400717 	ldw	r5,28(r16)
   1262c:	8809883a 	mov	r4,r17
   12630:	183ee83a 	callr	r3
   12634:	10001916 	blt	r2,zero,1269c <_fclose_r.part.0+0xa0>
   12638:	8080030b 	ldhu	r2,12(r16)
   1263c:	1080200c 	andi	r2,r2,128
   12640:	10001a1e 	bne	r2,zero,126ac <_fclose_r.part.0+0xb0>
   12644:	81400c17 	ldw	r5,48(r16)
   12648:	28000526 	beq	r5,zero,12660 <_fclose_r.part.0+0x64>
   1264c:	80801004 	addi	r2,r16,64
   12650:	28800226 	beq	r5,r2,1265c <_fclose_r.part.0+0x60>
   12654:	8809883a 	mov	r4,r17
   12658:	000e89c0 	call	e89c <_free_r>
   1265c:	80000c15 	stw	zero,48(r16)
   12660:	81401117 	ldw	r5,68(r16)
   12664:	28000326 	beq	r5,zero,12674 <_fclose_r.part.0+0x78>
   12668:	8809883a 	mov	r4,r17
   1266c:	000e89c0 	call	e89c <_free_r>
   12670:	80001115 	stw	zero,68(r16)
   12674:	000e7480 	call	e748 <__sfp_lock_acquire>
   12678:	8000030d 	sth	zero,12(r16)
   1267c:	000e74c0 	call	e74c <__sfp_lock_release>
   12680:	9005883a 	mov	r2,r18
   12684:	dfc00317 	ldw	ra,12(sp)
   12688:	dc800217 	ldw	r18,8(sp)
   1268c:	dc400117 	ldw	r17,4(sp)
   12690:	dc000017 	ldw	r16,0(sp)
   12694:	dec00404 	addi	sp,sp,16
   12698:	f800283a 	ret
   1269c:	8080030b 	ldhu	r2,12(r16)
   126a0:	04bfffc4 	movi	r18,-1
   126a4:	1080200c 	andi	r2,r2,128
   126a8:	103fe626 	beq	r2,zero,12644 <_fclose_r.part.0+0x48>
   126ac:	81400417 	ldw	r5,16(r16)
   126b0:	8809883a 	mov	r4,r17
   126b4:	000e89c0 	call	e89c <_free_r>
   126b8:	003fe206 	br	12644 <_fclose_r.part.0+0x48>

000126bc <_fclose_r>:
   126bc:	28001926 	beq	r5,zero,12724 <_fclose_r+0x68>
   126c0:	defffd04 	addi	sp,sp,-12
   126c4:	dc000115 	stw	r16,4(sp)
   126c8:	dfc00215 	stw	ra,8(sp)
   126cc:	2021883a 	mov	r16,r4
   126d0:	20000226 	beq	r4,zero,126dc <_fclose_r+0x20>
   126d4:	20800e17 	ldw	r2,56(r4)
   126d8:	10000c26 	beq	r2,zero,1270c <_fclose_r+0x50>
   126dc:	2880030f 	ldh	r2,12(r5)
   126e0:	1000051e 	bne	r2,zero,126f8 <_fclose_r+0x3c>
   126e4:	0005883a 	mov	r2,zero
   126e8:	dfc00217 	ldw	ra,8(sp)
   126ec:	dc000117 	ldw	r16,4(sp)
   126f0:	dec00304 	addi	sp,sp,12
   126f4:	f800283a 	ret
   126f8:	8009883a 	mov	r4,r16
   126fc:	dfc00217 	ldw	ra,8(sp)
   12700:	dc000117 	ldw	r16,4(sp)
   12704:	dec00304 	addi	sp,sp,12
   12708:	00125fc1 	jmpi	125fc <_fclose_r.part.0>
   1270c:	d9400015 	stw	r5,0(sp)
   12710:	000e7380 	call	e738 <__sinit>
   12714:	d9400017 	ldw	r5,0(sp)
   12718:	2880030f 	ldh	r2,12(r5)
   1271c:	103ff126 	beq	r2,zero,126e4 <_fclose_r+0x28>
   12720:	003ff506 	br	126f8 <_fclose_r+0x3c>
   12724:	0005883a 	mov	r2,zero
   12728:	f800283a 	ret

0001272c <fclose>:
   1272c:	20000826 	beq	r4,zero,12750 <fclose+0x24>
   12730:	008000b4 	movhi	r2,2
   12734:	200b883a 	mov	r5,r4
   12738:	1126b817 	ldw	r4,-25888(r2)
   1273c:	20000226 	beq	r4,zero,12748 <fclose+0x1c>
   12740:	20800e17 	ldw	r2,56(r4)
   12744:	10000526 	beq	r2,zero,1275c <fclose+0x30>
   12748:	2880030f 	ldh	r2,12(r5)
   1274c:	1000021e 	bne	r2,zero,12758 <fclose+0x2c>
   12750:	0005883a 	mov	r2,zero
   12754:	f800283a 	ret
   12758:	00125fc1 	jmpi	125fc <_fclose_r.part.0>
   1275c:	defffd04 	addi	sp,sp,-12
   12760:	d9400115 	stw	r5,4(sp)
   12764:	d9000015 	stw	r4,0(sp)
   12768:	dfc00215 	stw	ra,8(sp)
   1276c:	000e7380 	call	e738 <__sinit>
   12770:	d9400117 	ldw	r5,4(sp)
   12774:	d9000017 	ldw	r4,0(sp)
   12778:	2880030f 	ldh	r2,12(r5)
   1277c:	10000326 	beq	r2,zero,1278c <fclose+0x60>
   12780:	dfc00217 	ldw	ra,8(sp)
   12784:	dec00304 	addi	sp,sp,12
   12788:	00125fc1 	jmpi	125fc <_fclose_r.part.0>
   1278c:	0005883a 	mov	r2,zero
   12790:	dfc00217 	ldw	ra,8(sp)
   12794:	dec00304 	addi	sp,sp,12
   12798:	f800283a 	ret

0001279c <_fiprintf_r>:
   1279c:	defffe04 	addi	sp,sp,-8
   127a0:	dfc00015 	stw	ra,0(sp)
   127a4:	d9c00115 	stw	r7,4(sp)
   127a8:	d9c00104 	addi	r7,sp,4
   127ac:	0012d700 	call	12d70 <_vfiprintf_r>
   127b0:	dfc00017 	ldw	ra,0(sp)
   127b4:	dec00204 	addi	sp,sp,8
   127b8:	f800283a 	ret

000127bc <fiprintf>:
   127bc:	defffd04 	addi	sp,sp,-12
   127c0:	2005883a 	mov	r2,r4
   127c4:	dfc00015 	stw	ra,0(sp)
   127c8:	d9800115 	stw	r6,4(sp)
   127cc:	d9c00215 	stw	r7,8(sp)
   127d0:	00c000b4 	movhi	r3,2
   127d4:	1926b817 	ldw	r4,-25888(r3)
   127d8:	280d883a 	mov	r6,r5
   127dc:	d9c00104 	addi	r7,sp,4
   127e0:	100b883a 	mov	r5,r2
   127e4:	0012d700 	call	12d70 <_vfiprintf_r>
   127e8:	dfc00017 	ldw	ra,0(sp)
   127ec:	dec00304 	addi	sp,sp,12
   127f0:	f800283a 	ret

000127f4 <__fputwc>:
   127f4:	defff904 	addi	sp,sp,-28
   127f8:	dcc00415 	stw	r19,16(sp)
   127fc:	dc800315 	stw	r18,12(sp)
   12800:	dc000115 	stw	r16,4(sp)
   12804:	dfc00615 	stw	ra,24(sp)
   12808:	dd000515 	stw	r20,20(sp)
   1280c:	dc400215 	stw	r17,8(sp)
   12810:	2025883a 	mov	r18,r4
   12814:	2827883a 	mov	r19,r5
   12818:	3021883a 	mov	r16,r6
   1281c:	0012b200 	call	12b20 <__locale_mb_cur_max>
   12820:	10800058 	cmpnei	r2,r2,1
   12824:	1000071e 	bne	r2,zero,12844 <__fputwc+0x50>
   12828:	98bfffc4 	addi	r2,r19,-1
   1282c:	10803fe8 	cmpgeui	r2,r2,255
   12830:	1000041e 	bne	r2,zero,12844 <__fputwc+0x50>
   12834:	980b883a 	mov	r5,r19
   12838:	dcc000c5 	stb	r19,3(sp)
   1283c:	05000044 	movi	r20,1
   12840:	00000a06 	br	1286c <__fputwc+0x78>
   12844:	81c01704 	addi	r7,r16,92
   12848:	980d883a 	mov	r6,r19
   1284c:	d94000c4 	addi	r5,sp,3
   12850:	9009883a 	mov	r4,r18
   12854:	0012ed40 	call	12ed4 <_wcrtomb_r>
   12858:	1029883a 	mov	r20,r2
   1285c:	10bfffd8 	cmpnei	r2,r2,-1
   12860:	10003926 	beq	r2,zero,12948 <__fputwc+0x154>
   12864:	a0001f26 	beq	r20,zero,128e4 <__fputwc+0xf0>
   12868:	d94000c3 	ldbu	r5,3(sp)
   1286c:	0023883a 	mov	r17,zero
   12870:	00000a06 	br	1289c <__fputwc+0xa8>
   12874:	80800017 	ldw	r2,0(r16)
   12878:	11400005 	stb	r5,0(r2)
   1287c:	80c00017 	ldw	r3,0(r16)
   12880:	18c00044 	addi	r3,r3,1
   12884:	80c00015 	stw	r3,0(r16)
   12888:	8c400044 	addi	r17,r17,1
   1288c:	d88000c4 	addi	r2,sp,3
   12890:	1447883a 	add	r3,r2,r17
   12894:	8d00132e 	bgeu	r17,r20,128e4 <__fputwc+0xf0>
   12898:	19400003 	ldbu	r5,0(r3)
   1289c:	80c00217 	ldw	r3,8(r16)
   128a0:	18ffffc4 	addi	r3,r3,-1
   128a4:	80c00215 	stw	r3,8(r16)
   128a8:	183ff20e 	bge	r3,zero,12874 <__fputwc+0x80>
   128ac:	80800617 	ldw	r2,24(r16)
   128b0:	18801616 	blt	r3,r2,1290c <__fputwc+0x118>
   128b4:	80800017 	ldw	r2,0(r16)
   128b8:	11400005 	stb	r5,0(r2)
   128bc:	80800017 	ldw	r2,0(r16)
   128c0:	10c00003 	ldbu	r3,0(r2)
   128c4:	10800044 	addi	r2,r2,1
   128c8:	18c002a0 	cmpeqi	r3,r3,10
   128cc:	1800171e 	bne	r3,zero,1292c <__fputwc+0x138>
   128d0:	80800015 	stw	r2,0(r16)
   128d4:	8c400044 	addi	r17,r17,1
   128d8:	d88000c4 	addi	r2,sp,3
   128dc:	1447883a 	add	r3,r2,r17
   128e0:	8d3fed36 	bltu	r17,r20,12898 <__fputwc+0xa4>
   128e4:	9829883a 	mov	r20,r19
   128e8:	a005883a 	mov	r2,r20
   128ec:	dfc00617 	ldw	ra,24(sp)
   128f0:	dd000517 	ldw	r20,20(sp)
   128f4:	dcc00417 	ldw	r19,16(sp)
   128f8:	dc800317 	ldw	r18,12(sp)
   128fc:	dc400217 	ldw	r17,8(sp)
   12900:	dc000117 	ldw	r16,4(sp)
   12904:	dec00704 	addi	sp,sp,28
   12908:	f800283a 	ret
   1290c:	29403fcc 	andi	r5,r5,255
   12910:	800d883a 	mov	r6,r16
   12914:	9009883a 	mov	r4,r18
   12918:	0012d740 	call	12d74 <__swbuf_r>
   1291c:	10bfffe0 	cmpeqi	r2,r2,-1
   12920:	103fd926 	beq	r2,zero,12888 <__fputwc+0x94>
   12924:	053fffc4 	movi	r20,-1
   12928:	003fef06 	br	128e8 <__fputwc+0xf4>
   1292c:	800d883a 	mov	r6,r16
   12930:	01400284 	movi	r5,10
   12934:	9009883a 	mov	r4,r18
   12938:	0012d740 	call	12d74 <__swbuf_r>
   1293c:	10bfffe0 	cmpeqi	r2,r2,-1
   12940:	103fd126 	beq	r2,zero,12888 <__fputwc+0x94>
   12944:	003ff706 	br	12924 <__fputwc+0x130>
   12948:	8080030b 	ldhu	r2,12(r16)
   1294c:	10801014 	ori	r2,r2,64
   12950:	8080030d 	sth	r2,12(r16)
   12954:	003fe406 	br	128e8 <__fputwc+0xf4>

00012958 <_fputwc_r>:
   12958:	3080030b 	ldhu	r2,12(r6)
   1295c:	10c8000c 	andi	r3,r2,8192
   12960:	1800051e 	bne	r3,zero,12978 <_fputwc_r+0x20>
   12964:	30c01917 	ldw	r3,100(r6)
   12968:	10880014 	ori	r2,r2,8192
   1296c:	3080030d 	sth	r2,12(r6)
   12970:	18880014 	ori	r2,r3,8192
   12974:	30801915 	stw	r2,100(r6)
   12978:	00127f41 	jmpi	127f4 <__fputwc>

0001297c <fputwc>:
   1297c:	defffc04 	addi	sp,sp,-16
   12980:	008000b4 	movhi	r2,2
   12984:	dc000215 	stw	r16,8(sp)
   12988:	1426b817 	ldw	r16,-25888(r2)
   1298c:	dfc00315 	stw	ra,12(sp)
   12990:	280d883a 	mov	r6,r5
   12994:	200b883a 	mov	r5,r4
   12998:	80000226 	beq	r16,zero,129a4 <fputwc+0x28>
   1299c:	80800e17 	ldw	r2,56(r16)
   129a0:	10000d26 	beq	r2,zero,129d8 <fputwc+0x5c>
   129a4:	3080030b 	ldhu	r2,12(r6)
   129a8:	10c8000c 	andi	r3,r2,8192
   129ac:	1800051e 	bne	r3,zero,129c4 <fputwc+0x48>
   129b0:	30c01917 	ldw	r3,100(r6)
   129b4:	10880014 	ori	r2,r2,8192
   129b8:	3080030d 	sth	r2,12(r6)
   129bc:	18880014 	ori	r2,r3,8192
   129c0:	30801915 	stw	r2,100(r6)
   129c4:	8009883a 	mov	r4,r16
   129c8:	dfc00317 	ldw	ra,12(sp)
   129cc:	dc000217 	ldw	r16,8(sp)
   129d0:	dec00404 	addi	sp,sp,16
   129d4:	00127f41 	jmpi	127f4 <__fputwc>
   129d8:	d9000015 	stw	r4,0(sp)
   129dc:	8009883a 	mov	r4,r16
   129e0:	d9800115 	stw	r6,4(sp)
   129e4:	000e7380 	call	e738 <__sinit>
   129e8:	d9800117 	ldw	r6,4(sp)
   129ec:	d9400017 	ldw	r5,0(sp)
   129f0:	003fec06 	br	129a4 <fputwc+0x28>

000129f4 <_fstat_r>:
   129f4:	2807883a 	mov	r3,r5
   129f8:	defffe04 	addi	sp,sp,-8
   129fc:	dc000015 	stw	r16,0(sp)
   12a00:	008000b4 	movhi	r2,2
   12a04:	300b883a 	mov	r5,r6
   12a08:	2021883a 	mov	r16,r4
   12a0c:	1809883a 	mov	r4,r3
   12a10:	dfc00115 	stw	ra,4(sp)
   12a14:	102dec15 	stw	zero,-18512(r2)
   12a18:	00143980 	call	14398 <fstat>
   12a1c:	10ffffd8 	cmpnei	r3,r2,-1
   12a20:	18000426 	beq	r3,zero,12a34 <_fstat_r+0x40>
   12a24:	dfc00117 	ldw	ra,4(sp)
   12a28:	dc000017 	ldw	r16,0(sp)
   12a2c:	dec00204 	addi	sp,sp,8
   12a30:	f800283a 	ret
   12a34:	00c000b4 	movhi	r3,2
   12a38:	18edec17 	ldw	r3,-18512(r3)
   12a3c:	183ff926 	beq	r3,zero,12a24 <_fstat_r+0x30>
   12a40:	80c00015 	stw	r3,0(r16)
   12a44:	dfc00117 	ldw	ra,4(sp)
   12a48:	dc000017 	ldw	r16,0(sp)
   12a4c:	dec00204 	addi	sp,sp,8
   12a50:	f800283a 	ret

00012a54 <_isatty_r>:
   12a54:	defffe04 	addi	sp,sp,-8
   12a58:	dc000015 	stw	r16,0(sp)
   12a5c:	008000b4 	movhi	r2,2
   12a60:	2021883a 	mov	r16,r4
   12a64:	2809883a 	mov	r4,r5
   12a68:	dfc00115 	stw	ra,4(sp)
   12a6c:	102dec15 	stw	zero,-18512(r2)
   12a70:	00144b00 	call	144b0 <isatty>
   12a74:	10ffffd8 	cmpnei	r3,r2,-1
   12a78:	18000426 	beq	r3,zero,12a8c <_isatty_r+0x38>
   12a7c:	dfc00117 	ldw	ra,4(sp)
   12a80:	dc000017 	ldw	r16,0(sp)
   12a84:	dec00204 	addi	sp,sp,8
   12a88:	f800283a 	ret
   12a8c:	00c000b4 	movhi	r3,2
   12a90:	18edec17 	ldw	r3,-18512(r3)
   12a94:	183ff926 	beq	r3,zero,12a7c <_isatty_r+0x28>
   12a98:	80c00015 	stw	r3,0(r16)
   12a9c:	dfc00117 	ldw	ra,4(sp)
   12aa0:	dc000017 	ldw	r16,0(sp)
   12aa4:	dec00204 	addi	sp,sp,8
   12aa8:	f800283a 	ret

00012aac <_setlocale_r>:
   12aac:	30001626 	beq	r6,zero,12b08 <_setlocale_r+0x5c>
   12ab0:	01400074 	movhi	r5,1
   12ab4:	defffe04 	addi	sp,sp,-8
   12ab8:	295edd04 	addi	r5,r5,31604
   12abc:	3009883a 	mov	r4,r6
   12ac0:	dc000015 	stw	r16,0(sp)
   12ac4:	dfc00115 	stw	ra,4(sp)
   12ac8:	3021883a 	mov	r16,r6
   12acc:	0012cb80 	call	12cb8 <strcmp>
   12ad0:	1000061e 	bne	r2,zero,12aec <_setlocale_r+0x40>
   12ad4:	00800074 	movhi	r2,1
   12ad8:	109edc04 	addi	r2,r2,31600
   12adc:	dfc00117 	ldw	ra,4(sp)
   12ae0:	dc000017 	ldw	r16,0(sp)
   12ae4:	dec00204 	addi	sp,sp,8
   12ae8:	f800283a 	ret
   12aec:	80800003 	ldbu	r2,0(r16)
   12af0:	10bfef44 	addi	r2,r2,-67
   12af4:	10000726 	beq	r2,zero,12b14 <_setlocale_r+0x68>
   12af8:	80800003 	ldbu	r2,0(r16)
   12afc:	103ff526 	beq	r2,zero,12ad4 <_setlocale_r+0x28>
   12b00:	0005883a 	mov	r2,zero
   12b04:	003ff506 	br	12adc <_setlocale_r+0x30>
   12b08:	00800074 	movhi	r2,1
   12b0c:	109edc04 	addi	r2,r2,31600
   12b10:	f800283a 	ret
   12b14:	80800043 	ldbu	r2,1(r16)
   12b18:	103fee26 	beq	r2,zero,12ad4 <_setlocale_r+0x28>
   12b1c:	003ff606 	br	12af8 <_setlocale_r+0x4c>

00012b20 <__locale_mb_cur_max>:
   12b20:	008000b4 	movhi	r2,2
   12b24:	10a1f607 	ldb	r2,-30760(r2)
   12b28:	f800283a 	ret

00012b2c <setlocale>:
   12b2c:	28001626 	beq	r5,zero,12b88 <setlocale+0x5c>
   12b30:	defffe04 	addi	sp,sp,-8
   12b34:	dc000015 	stw	r16,0(sp)
   12b38:	2821883a 	mov	r16,r5
   12b3c:	01400074 	movhi	r5,1
   12b40:	295edd04 	addi	r5,r5,31604
   12b44:	8009883a 	mov	r4,r16
   12b48:	dfc00115 	stw	ra,4(sp)
   12b4c:	0012cb80 	call	12cb8 <strcmp>
   12b50:	1000061e 	bne	r2,zero,12b6c <setlocale+0x40>
   12b54:	00800074 	movhi	r2,1
   12b58:	109edc04 	addi	r2,r2,31600
   12b5c:	dfc00117 	ldw	ra,4(sp)
   12b60:	dc000017 	ldw	r16,0(sp)
   12b64:	dec00204 	addi	sp,sp,8
   12b68:	f800283a 	ret
   12b6c:	80800003 	ldbu	r2,0(r16)
   12b70:	10bfef44 	addi	r2,r2,-67
   12b74:	10000726 	beq	r2,zero,12b94 <setlocale+0x68>
   12b78:	80800003 	ldbu	r2,0(r16)
   12b7c:	103ff526 	beq	r2,zero,12b54 <setlocale+0x28>
   12b80:	0005883a 	mov	r2,zero
   12b84:	003ff506 	br	12b5c <setlocale+0x30>
   12b88:	00800074 	movhi	r2,1
   12b8c:	109edc04 	addi	r2,r2,31600
   12b90:	f800283a 	ret
   12b94:	80800043 	ldbu	r2,1(r16)
   12b98:	103fee26 	beq	r2,zero,12b54 <setlocale+0x28>
   12b9c:	003ff606 	br	12b78 <setlocale+0x4c>

00012ba0 <_lseek_r>:
   12ba0:	2807883a 	mov	r3,r5
   12ba4:	defffe04 	addi	sp,sp,-8
   12ba8:	dc000015 	stw	r16,0(sp)
   12bac:	300b883a 	mov	r5,r6
   12bb0:	008000b4 	movhi	r2,2
   12bb4:	380d883a 	mov	r6,r7
   12bb8:	2021883a 	mov	r16,r4
   12bbc:	1809883a 	mov	r4,r3
   12bc0:	dfc00115 	stw	ra,4(sp)
   12bc4:	102dec15 	stw	zero,-18512(r2)
   12bc8:	00147f00 	call	147f0 <lseek>
   12bcc:	10ffffd8 	cmpnei	r3,r2,-1
   12bd0:	18000426 	beq	r3,zero,12be4 <_lseek_r+0x44>
   12bd4:	dfc00117 	ldw	ra,4(sp)
   12bd8:	dc000017 	ldw	r16,0(sp)
   12bdc:	dec00204 	addi	sp,sp,8
   12be0:	f800283a 	ret
   12be4:	00c000b4 	movhi	r3,2
   12be8:	18edec17 	ldw	r3,-18512(r3)
   12bec:	183ff926 	beq	r3,zero,12bd4 <_lseek_r+0x34>
   12bf0:	80c00015 	stw	r3,0(r16)
   12bf4:	dfc00117 	ldw	ra,4(sp)
   12bf8:	dc000017 	ldw	r16,0(sp)
   12bfc:	dec00204 	addi	sp,sp,8
   12c00:	f800283a 	ret

00012c04 <_mbtowc_r>:
   12c04:	008000b4 	movhi	r2,2
   12c08:	10a1e517 	ldw	r2,-30828(r2)
   12c0c:	1000683a 	jmp	r2

00012c10 <__ascii_mbtowc>:
   12c10:	deffff04 	addi	sp,sp,-4
   12c14:	28000826 	beq	r5,zero,12c38 <__ascii_mbtowc+0x28>
   12c18:	30000926 	beq	r6,zero,12c40 <__ascii_mbtowc+0x30>
   12c1c:	38000b26 	beq	r7,zero,12c4c <__ascii_mbtowc+0x3c>
   12c20:	30800003 	ldbu	r2,0(r6)
   12c24:	28800015 	stw	r2,0(r5)
   12c28:	30800003 	ldbu	r2,0(r6)
   12c2c:	1004c03a 	cmpne	r2,r2,zero
   12c30:	dec00104 	addi	sp,sp,4
   12c34:	f800283a 	ret
   12c38:	d80b883a 	mov	r5,sp
   12c3c:	303ff71e 	bne	r6,zero,12c1c <__ascii_mbtowc+0xc>
   12c40:	0005883a 	mov	r2,zero
   12c44:	dec00104 	addi	sp,sp,4
   12c48:	f800283a 	ret
   12c4c:	00bfff84 	movi	r2,-2
   12c50:	003ff706 	br	12c30 <__ascii_mbtowc+0x20>

00012c54 <_read_r>:
   12c54:	2807883a 	mov	r3,r5
   12c58:	defffe04 	addi	sp,sp,-8
   12c5c:	dc000015 	stw	r16,0(sp)
   12c60:	300b883a 	mov	r5,r6
   12c64:	008000b4 	movhi	r2,2
   12c68:	380d883a 	mov	r6,r7
   12c6c:	2021883a 	mov	r16,r4
   12c70:	1809883a 	mov	r4,r3
   12c74:	dfc00115 	stw	ra,4(sp)
   12c78:	102dec15 	stw	zero,-18512(r2)
   12c7c:	00149d00 	call	149d0 <read>
   12c80:	10ffffd8 	cmpnei	r3,r2,-1
   12c84:	18000426 	beq	r3,zero,12c98 <_read_r+0x44>
   12c88:	dfc00117 	ldw	ra,4(sp)
   12c8c:	dc000017 	ldw	r16,0(sp)
   12c90:	dec00204 	addi	sp,sp,8
   12c94:	f800283a 	ret
   12c98:	00c000b4 	movhi	r3,2
   12c9c:	18edec17 	ldw	r3,-18512(r3)
   12ca0:	183ff926 	beq	r3,zero,12c88 <_read_r+0x34>
   12ca4:	80c00015 	stw	r3,0(r16)
   12ca8:	dfc00117 	ldw	ra,4(sp)
   12cac:	dc000017 	ldw	r16,0(sp)
   12cb0:	dec00204 	addi	sp,sp,8
   12cb4:	f800283a 	ret

00012cb8 <strcmp>:
   12cb8:	2144b03a 	or	r2,r4,r5
   12cbc:	108000cc 	andi	r2,r2,3
   12cc0:	1000141e 	bne	r2,zero,12d14 <strcmp+0x5c>
   12cc4:	20800017 	ldw	r2,0(r4)
   12cc8:	28c00017 	ldw	r3,0(r5)
   12ccc:	10c0111e 	bne	r2,r3,12d14 <strcmp+0x5c>
   12cd0:	01ffbff4 	movhi	r7,65279
   12cd4:	01a02074 	movhi	r6,32897
   12cd8:	39ffbfc4 	addi	r7,r7,-257
   12cdc:	31a02004 	addi	r6,r6,-32640
   12ce0:	00000306 	br	12cf0 <strcmp+0x38>
   12ce4:	20800017 	ldw	r2,0(r4)
   12ce8:	28c00017 	ldw	r3,0(r5)
   12cec:	10c0091e 	bne	r2,r3,12d14 <strcmp+0x5c>
   12cf0:	11c7883a 	add	r3,r2,r7
   12cf4:	0084303a 	nor	r2,zero,r2
   12cf8:	1884703a 	and	r2,r3,r2
   12cfc:	1184703a 	and	r2,r2,r6
   12d00:	21000104 	addi	r4,r4,4
   12d04:	29400104 	addi	r5,r5,4
   12d08:	103ff626 	beq	r2,zero,12ce4 <strcmp+0x2c>
   12d0c:	0005883a 	mov	r2,zero
   12d10:	f800283a 	ret
   12d14:	20c00003 	ldbu	r3,0(r4)
   12d18:	18803fcc 	andi	r2,r3,255
   12d1c:	1080201c 	xori	r2,r2,128
   12d20:	10bfe004 	addi	r2,r2,-128
   12d24:	1000071e 	bne	r2,zero,12d44 <strcmp+0x8c>
   12d28:	00000a06 	br	12d54 <strcmp+0x9c>
   12d2c:	20c00003 	ldbu	r3,0(r4)
   12d30:	29400044 	addi	r5,r5,1
   12d34:	18803fcc 	andi	r2,r3,255
   12d38:	1080201c 	xori	r2,r2,128
   12d3c:	10bfe004 	addi	r2,r2,-128
   12d40:	10000726 	beq	r2,zero,12d60 <strcmp+0xa8>
   12d44:	29800007 	ldb	r6,0(r5)
   12d48:	21000044 	addi	r4,r4,1
   12d4c:	30bff726 	beq	r6,r2,12d2c <strcmp+0x74>
   12d50:	18803fcc 	andi	r2,r3,255
   12d54:	28c00003 	ldbu	r3,0(r5)
   12d58:	10c5c83a 	sub	r2,r2,r3
   12d5c:	f800283a 	ret
   12d60:	28c00003 	ldbu	r3,0(r5)
   12d64:	0005883a 	mov	r2,zero
   12d68:	10c5c83a 	sub	r2,r2,r3
   12d6c:	f800283a 	ret

00012d70 <_vfiprintf_r>:
   12d70:	00110381 	jmpi	11038 <___vfiprintf_internal_r>

00012d74 <__swbuf_r>:
   12d74:	defffb04 	addi	sp,sp,-20
   12d78:	dcc00315 	stw	r19,12(sp)
   12d7c:	dc400115 	stw	r17,4(sp)
   12d80:	dc000015 	stw	r16,0(sp)
   12d84:	dfc00415 	stw	ra,16(sp)
   12d88:	dc800215 	stw	r18,8(sp)
   12d8c:	2027883a 	mov	r19,r4
   12d90:	2823883a 	mov	r17,r5
   12d94:	3021883a 	mov	r16,r6
   12d98:	20000226 	beq	r4,zero,12da4 <__swbuf_r+0x30>
   12d9c:	20800e17 	ldw	r2,56(r4)
   12da0:	10003e26 	beq	r2,zero,12e9c <__swbuf_r+0x128>
   12da4:	80800617 	ldw	r2,24(r16)
   12da8:	80c0030b 	ldhu	r3,12(r16)
   12dac:	80800215 	stw	r2,8(r16)
   12db0:	1880020c 	andi	r2,r3,8
   12db4:	10001f26 	beq	r2,zero,12e34 <__swbuf_r+0xc0>
   12db8:	80800417 	ldw	r2,16(r16)
   12dbc:	10001d26 	beq	r2,zero,12e34 <__swbuf_r+0xc0>
   12dc0:	1948000c 	andi	r5,r3,8192
   12dc4:	8c803fcc 	andi	r18,r17,255
   12dc8:	28002326 	beq	r5,zero,12e58 <__swbuf_r+0xe4>
   12dcc:	80c00017 	ldw	r3,0(r16)
   12dd0:	81000517 	ldw	r4,20(r16)
   12dd4:	1885c83a 	sub	r2,r3,r2
   12dd8:	1100290e 	bge	r2,r4,12e80 <__swbuf_r+0x10c>
   12ddc:	10800044 	addi	r2,r2,1
   12de0:	81400217 	ldw	r5,8(r16)
   12de4:	19000044 	addi	r4,r3,1
   12de8:	81000015 	stw	r4,0(r16)
   12dec:	297fffc4 	addi	r5,r5,-1
   12df0:	81400215 	stw	r5,8(r16)
   12df4:	1c400005 	stb	r17,0(r3)
   12df8:	80c00517 	ldw	r3,20(r16)
   12dfc:	18802926 	beq	r3,r2,12ea4 <__swbuf_r+0x130>
   12e00:	8080030b 	ldhu	r2,12(r16)
   12e04:	1080004c 	andi	r2,r2,1
   12e08:	10000226 	beq	r2,zero,12e14 <__swbuf_r+0xa0>
   12e0c:	90800298 	cmpnei	r2,r18,10
   12e10:	10002426 	beq	r2,zero,12ea4 <__swbuf_r+0x130>
   12e14:	9005883a 	mov	r2,r18
   12e18:	dfc00417 	ldw	ra,16(sp)
   12e1c:	dcc00317 	ldw	r19,12(sp)
   12e20:	dc800217 	ldw	r18,8(sp)
   12e24:	dc400117 	ldw	r17,4(sp)
   12e28:	dc000017 	ldw	r16,0(sp)
   12e2c:	dec00504 	addi	sp,sp,20
   12e30:	f800283a 	ret
   12e34:	800b883a 	mov	r5,r16
   12e38:	9809883a 	mov	r4,r19
   12e3c:	000c5fc0 	call	c5fc <__swsetup_r>
   12e40:	10001c1e 	bne	r2,zero,12eb4 <__swbuf_r+0x140>
   12e44:	80c0030b 	ldhu	r3,12(r16)
   12e48:	80800417 	ldw	r2,16(r16)
   12e4c:	8c803fcc 	andi	r18,r17,255
   12e50:	1948000c 	andi	r5,r3,8192
   12e54:	283fdd1e 	bne	r5,zero,12dcc <__swbuf_r+0x58>
   12e58:	81001917 	ldw	r4,100(r16)
   12e5c:	18c80014 	ori	r3,r3,8192
   12e60:	0177ffc4 	movi	r5,-8193
   12e64:	2148703a 	and	r4,r4,r5
   12e68:	80c0030d 	sth	r3,12(r16)
   12e6c:	80c00017 	ldw	r3,0(r16)
   12e70:	81001915 	stw	r4,100(r16)
   12e74:	81000517 	ldw	r4,20(r16)
   12e78:	1885c83a 	sub	r2,r3,r2
   12e7c:	113fd716 	blt	r2,r4,12ddc <__swbuf_r+0x68>
   12e80:	800b883a 	mov	r5,r16
   12e84:	9809883a 	mov	r4,r19
   12e88:	000e2f00 	call	e2f0 <_fflush_r>
   12e8c:	1000091e 	bne	r2,zero,12eb4 <__swbuf_r+0x140>
   12e90:	80c00017 	ldw	r3,0(r16)
   12e94:	00800044 	movi	r2,1
   12e98:	003fd106 	br	12de0 <__swbuf_r+0x6c>
   12e9c:	000e7380 	call	e738 <__sinit>
   12ea0:	003fc006 	br	12da4 <__swbuf_r+0x30>
   12ea4:	800b883a 	mov	r5,r16
   12ea8:	9809883a 	mov	r4,r19
   12eac:	000e2f00 	call	e2f0 <_fflush_r>
   12eb0:	103fd826 	beq	r2,zero,12e14 <__swbuf_r+0xa0>
   12eb4:	04bfffc4 	movi	r18,-1
   12eb8:	003fd606 	br	12e14 <__swbuf_r+0xa0>

00012ebc <__swbuf>:
   12ebc:	00c000b4 	movhi	r3,2
   12ec0:	2005883a 	mov	r2,r4
   12ec4:	1926b817 	ldw	r4,-25888(r3)
   12ec8:	280d883a 	mov	r6,r5
   12ecc:	100b883a 	mov	r5,r2
   12ed0:	0012d741 	jmpi	12d74 <__swbuf_r>

00012ed4 <_wcrtomb_r>:
   12ed4:	defffa04 	addi	sp,sp,-24
   12ed8:	dc400415 	stw	r17,16(sp)
   12edc:	dc000315 	stw	r16,12(sp)
   12ee0:	008000b4 	movhi	r2,2
   12ee4:	dfc00515 	stw	ra,20(sp)
   12ee8:	10a1e417 	ldw	r2,-30832(r2)
   12eec:	2023883a 	mov	r17,r4
   12ef0:	3821883a 	mov	r16,r7
   12ef4:	28000826 	beq	r5,zero,12f18 <_wcrtomb_r+0x44>
   12ef8:	103ee83a 	callr	r2
   12efc:	10ffffd8 	cmpnei	r3,r2,-1
   12f00:	18000a26 	beq	r3,zero,12f2c <_wcrtomb_r+0x58>
   12f04:	dfc00517 	ldw	ra,20(sp)
   12f08:	dc400417 	ldw	r17,16(sp)
   12f0c:	dc000317 	ldw	r16,12(sp)
   12f10:	dec00604 	addi	sp,sp,24
   12f14:	f800283a 	ret
   12f18:	000d883a 	mov	r6,zero
   12f1c:	d9400084 	addi	r5,sp,2
   12f20:	103ee83a 	callr	r2
   12f24:	10ffffd8 	cmpnei	r3,r2,-1
   12f28:	183ff61e 	bne	r3,zero,12f04 <_wcrtomb_r+0x30>
   12f2c:	00802284 	movi	r2,138
   12f30:	80000015 	stw	zero,0(r16)
   12f34:	88800015 	stw	r2,0(r17)
   12f38:	00bfffc4 	movi	r2,-1
   12f3c:	003ff106 	br	12f04 <_wcrtomb_r+0x30>

00012f40 <wcrtomb>:
   12f40:	defffa04 	addi	sp,sp,-24
   12f44:	00c000b4 	movhi	r3,2
   12f48:	dc400415 	stw	r17,16(sp)
   12f4c:	dc000315 	stw	r16,12(sp)
   12f50:	1c66b817 	ldw	r17,-25888(r3)
   12f54:	dfc00515 	stw	ra,20(sp)
   12f58:	00c000b4 	movhi	r3,2
   12f5c:	18e1e417 	ldw	r3,-30832(r3)
   12f60:	3021883a 	mov	r16,r6
   12f64:	20000c26 	beq	r4,zero,12f98 <wcrtomb+0x58>
   12f68:	280d883a 	mov	r6,r5
   12f6c:	800f883a 	mov	r7,r16
   12f70:	200b883a 	mov	r5,r4
   12f74:	8809883a 	mov	r4,r17
   12f78:	183ee83a 	callr	r3
   12f7c:	10ffffd8 	cmpnei	r3,r2,-1
   12f80:	18000c26 	beq	r3,zero,12fb4 <wcrtomb+0x74>
   12f84:	dfc00517 	ldw	ra,20(sp)
   12f88:	dc400417 	ldw	r17,16(sp)
   12f8c:	dc000317 	ldw	r16,12(sp)
   12f90:	dec00604 	addi	sp,sp,24
   12f94:	f800283a 	ret
   12f98:	300f883a 	mov	r7,r6
   12f9c:	d9400084 	addi	r5,sp,2
   12fa0:	000d883a 	mov	r6,zero
   12fa4:	8809883a 	mov	r4,r17
   12fa8:	183ee83a 	callr	r3
   12fac:	10ffffd8 	cmpnei	r3,r2,-1
   12fb0:	183ff41e 	bne	r3,zero,12f84 <wcrtomb+0x44>
   12fb4:	00802284 	movi	r2,138
   12fb8:	80000015 	stw	zero,0(r16)
   12fbc:	88800015 	stw	r2,0(r17)
   12fc0:	00bfffc4 	movi	r2,-1
   12fc4:	003fef06 	br	12f84 <wcrtomb+0x44>

00012fc8 <_wctomb_r>:
   12fc8:	008000b4 	movhi	r2,2
   12fcc:	10a1e417 	ldw	r2,-30832(r2)
   12fd0:	1000683a 	jmp	r2

00012fd4 <__ascii_wctomb>:
   12fd4:	28000926 	beq	r5,zero,12ffc <__ascii_wctomb+0x28>
   12fd8:	30804030 	cmpltui	r2,r6,256
   12fdc:	10000326 	beq	r2,zero,12fec <__ascii_wctomb+0x18>
   12fe0:	29800005 	stb	r6,0(r5)
   12fe4:	00800044 	movi	r2,1
   12fe8:	f800283a 	ret
   12fec:	00802284 	movi	r2,138
   12ff0:	20800015 	stw	r2,0(r4)
   12ff4:	00bfffc4 	movi	r2,-1
   12ff8:	f800283a 	ret
   12ffc:	0005883a 	mov	r2,zero
   13000:	f800283a 	ret

00013004 <abort>:
   13004:	deffff04 	addi	sp,sp,-4
   13008:	01000184 	movi	r4,6
   1300c:	dfc00015 	stw	ra,0(sp)
   13010:	00132900 	call	13290 <raise>
   13014:	01000044 	movi	r4,1
   13018:	00143240 	call	14324 <_exit>

0001301c <_init_signal_r>:
   1301c:	2080b717 	ldw	r2,732(r4)
   13020:	10000226 	beq	r2,zero,1302c <_init_signal_r+0x10>
   13024:	0005883a 	mov	r2,zero
   13028:	f800283a 	ret
   1302c:	defffe04 	addi	sp,sp,-8
   13030:	01402004 	movi	r5,128
   13034:	dc000015 	stw	r16,0(sp)
   13038:	dfc00115 	stw	ra,4(sp)
   1303c:	2021883a 	mov	r16,r4
   13040:	00099f40 	call	99f4 <_malloc_r>
   13044:	8080b715 	stw	r2,732(r16)
   13048:	1009883a 	mov	r4,r2
   1304c:	10000826 	beq	r2,zero,13070 <_init_signal_r+0x54>
   13050:	01802004 	movi	r6,128
   13054:	000b883a 	mov	r5,zero
   13058:	000f5d00 	call	f5d0 <memset>
   1305c:	0005883a 	mov	r2,zero
   13060:	dfc00117 	ldw	ra,4(sp)
   13064:	dc000017 	ldw	r16,0(sp)
   13068:	dec00204 	addi	sp,sp,8
   1306c:	f800283a 	ret
   13070:	00bfffc4 	movi	r2,-1
   13074:	003ffa06 	br	13060 <_init_signal_r+0x44>

00013078 <_signal_r>:
   13078:	defffc04 	addi	sp,sp,-16
   1307c:	dc400115 	stw	r17,4(sp)
   13080:	dfc00315 	stw	ra,12(sp)
   13084:	dc800215 	stw	r18,8(sp)
   13088:	dc000015 	stw	r16,0(sp)
   1308c:	28800830 	cmpltui	r2,r5,32
   13090:	2023883a 	mov	r17,r4
   13094:	10000e26 	beq	r2,zero,130d0 <_signal_r+0x58>
   13098:	20c0b717 	ldw	r3,732(r4)
   1309c:	2821883a 	mov	r16,r5
   130a0:	3025883a 	mov	r18,r6
   130a4:	18000e26 	beq	r3,zero,130e0 <_signal_r+0x68>
   130a8:	802090ba 	slli	r16,r16,2
   130ac:	1c21883a 	add	r16,r3,r16
   130b0:	80800017 	ldw	r2,0(r16)
   130b4:	84800015 	stw	r18,0(r16)
   130b8:	dfc00317 	ldw	ra,12(sp)
   130bc:	dc800217 	ldw	r18,8(sp)
   130c0:	dc400117 	ldw	r17,4(sp)
   130c4:	dc000017 	ldw	r16,0(sp)
   130c8:	dec00404 	addi	sp,sp,16
   130cc:	f800283a 	ret
   130d0:	00800584 	movi	r2,22
   130d4:	20800015 	stw	r2,0(r4)
   130d8:	00bfffc4 	movi	r2,-1
   130dc:	003ff606 	br	130b8 <_signal_r+0x40>
   130e0:	01402004 	movi	r5,128
   130e4:	00099f40 	call	99f4 <_malloc_r>
   130e8:	8880b715 	stw	r2,732(r17)
   130ec:	10000626 	beq	r2,zero,13108 <_signal_r+0x90>
   130f0:	01802004 	movi	r6,128
   130f4:	000b883a 	mov	r5,zero
   130f8:	1009883a 	mov	r4,r2
   130fc:	000f5d00 	call	f5d0 <memset>
   13100:	1007883a 	mov	r3,r2
   13104:	003fe806 	br	130a8 <_signal_r+0x30>
   13108:	00bfffc4 	movi	r2,-1
   1310c:	003fea06 	br	130b8 <_signal_r+0x40>

00013110 <_raise_r>:
   13110:	28800830 	cmpltui	r2,r5,32
   13114:	10002b26 	beq	r2,zero,131c4 <_raise_r+0xb4>
   13118:	2080b717 	ldw	r2,732(r4)
   1311c:	defffd04 	addi	sp,sp,-12
   13120:	dc000115 	stw	r16,4(sp)
   13124:	dfc00215 	stw	ra,8(sp)
   13128:	2821883a 	mov	r16,r5
   1312c:	10001026 	beq	r2,zero,13170 <_raise_r+0x60>
   13130:	280690ba 	slli	r3,r5,2
   13134:	10c5883a 	add	r2,r2,r3
   13138:	10c00017 	ldw	r3,0(r2)
   1313c:	18000c26 	beq	r3,zero,13170 <_raise_r+0x60>
   13140:	19400060 	cmpeqi	r5,r3,1
   13144:	28001a1e 	bne	r5,zero,131b0 <_raise_r+0xa0>
   13148:	197fffd8 	cmpnei	r5,r3,-1
   1314c:	28001126 	beq	r5,zero,13194 <_raise_r+0x84>
   13150:	10000015 	stw	zero,0(r2)
   13154:	8009883a 	mov	r4,r16
   13158:	183ee83a 	callr	r3
   1315c:	0005883a 	mov	r2,zero
   13160:	dfc00217 	ldw	ra,8(sp)
   13164:	dc000117 	ldw	r16,4(sp)
   13168:	dec00304 	addi	sp,sp,12
   1316c:	f800283a 	ret
   13170:	d9000015 	stw	r4,0(sp)
   13174:	00135680 	call	13568 <_getpid_r>
   13178:	d9000017 	ldw	r4,0(sp)
   1317c:	800d883a 	mov	r6,r16
   13180:	100b883a 	mov	r5,r2
   13184:	dfc00217 	ldw	ra,8(sp)
   13188:	dc000117 	ldw	r16,4(sp)
   1318c:	dec00304 	addi	sp,sp,12
   13190:	00135081 	jmpi	13508 <_kill_r>
   13194:	00800584 	movi	r2,22
   13198:	20800015 	stw	r2,0(r4)
   1319c:	00800044 	movi	r2,1
   131a0:	dfc00217 	ldw	ra,8(sp)
   131a4:	dc000117 	ldw	r16,4(sp)
   131a8:	dec00304 	addi	sp,sp,12
   131ac:	f800283a 	ret
   131b0:	0005883a 	mov	r2,zero
   131b4:	dfc00217 	ldw	ra,8(sp)
   131b8:	dc000117 	ldw	r16,4(sp)
   131bc:	dec00304 	addi	sp,sp,12
   131c0:	f800283a 	ret
   131c4:	00800584 	movi	r2,22
   131c8:	20800015 	stw	r2,0(r4)
   131cc:	00bfffc4 	movi	r2,-1
   131d0:	f800283a 	ret

000131d4 <__sigtramp_r>:
   131d4:	28800830 	cmpltui	r2,r5,32
   131d8:	10002b26 	beq	r2,zero,13288 <__sigtramp_r+0xb4>
   131dc:	20c0b717 	ldw	r3,732(r4)
   131e0:	defffd04 	addi	sp,sp,-12
   131e4:	dc400115 	stw	r17,4(sp)
   131e8:	dc000015 	stw	r16,0(sp)
   131ec:	dfc00215 	stw	ra,8(sp)
   131f0:	2821883a 	mov	r16,r5
   131f4:	2023883a 	mov	r17,r4
   131f8:	18001326 	beq	r3,zero,13248 <__sigtramp_r+0x74>
   131fc:	800490ba 	slli	r2,r16,2
   13200:	1887883a 	add	r3,r3,r2
   13204:	18800017 	ldw	r2,0(r3)
   13208:	10000d26 	beq	r2,zero,13240 <__sigtramp_r+0x6c>
   1320c:	113fffe0 	cmpeqi	r4,r2,-1
   13210:	2000191e 	bne	r4,zero,13278 <__sigtramp_r+0xa4>
   13214:	11000060 	cmpeqi	r4,r2,1
   13218:	2000151e 	bne	r4,zero,13270 <__sigtramp_r+0x9c>
   1321c:	18000015 	stw	zero,0(r3)
   13220:	8009883a 	mov	r4,r16
   13224:	103ee83a 	callr	r2
   13228:	0005883a 	mov	r2,zero
   1322c:	dfc00217 	ldw	ra,8(sp)
   13230:	dc400117 	ldw	r17,4(sp)
   13234:	dc000017 	ldw	r16,0(sp)
   13238:	dec00304 	addi	sp,sp,12
   1323c:	f800283a 	ret
   13240:	00800044 	movi	r2,1
   13244:	003ff906 	br	1322c <__sigtramp_r+0x58>
   13248:	01402004 	movi	r5,128
   1324c:	00099f40 	call	99f4 <_malloc_r>
   13250:	8880b715 	stw	r2,732(r17)
   13254:	10000a26 	beq	r2,zero,13280 <__sigtramp_r+0xac>
   13258:	01802004 	movi	r6,128
   1325c:	000b883a 	mov	r5,zero
   13260:	1009883a 	mov	r4,r2
   13264:	000f5d00 	call	f5d0 <memset>
   13268:	1007883a 	mov	r3,r2
   1326c:	003fe306 	br	131fc <__sigtramp_r+0x28>
   13270:	008000c4 	movi	r2,3
   13274:	003fed06 	br	1322c <__sigtramp_r+0x58>
   13278:	00800084 	movi	r2,2
   1327c:	003feb06 	br	1322c <__sigtramp_r+0x58>
   13280:	00bfffc4 	movi	r2,-1
   13284:	003fe906 	br	1322c <__sigtramp_r+0x58>
   13288:	00bfffc4 	movi	r2,-1
   1328c:	f800283a 	ret

00013290 <raise>:
   13290:	defffd04 	addi	sp,sp,-12
   13294:	dc400115 	stw	r17,4(sp)
   13298:	00c000b4 	movhi	r3,2
   1329c:	dfc00215 	stw	ra,8(sp)
   132a0:	dc000015 	stw	r16,0(sp)
   132a4:	20800830 	cmpltui	r2,r4,32
   132a8:	1c66b817 	ldw	r17,-25888(r3)
   132ac:	10002326 	beq	r2,zero,1333c <raise+0xac>
   132b0:	8880b717 	ldw	r2,732(r17)
   132b4:	2021883a 	mov	r16,r4
   132b8:	10001026 	beq	r2,zero,132fc <raise+0x6c>
   132bc:	200690ba 	slli	r3,r4,2
   132c0:	10c5883a 	add	r2,r2,r3
   132c4:	10c00017 	ldw	r3,0(r2)
   132c8:	18000c26 	beq	r3,zero,132fc <raise+0x6c>
   132cc:	19400060 	cmpeqi	r5,r3,1
   132d0:	2800181e 	bne	r5,zero,13334 <raise+0xa4>
   132d4:	197fffd8 	cmpnei	r5,r3,-1
   132d8:	28001226 	beq	r5,zero,13324 <raise+0x94>
   132dc:	10000015 	stw	zero,0(r2)
   132e0:	183ee83a 	callr	r3
   132e4:	0005883a 	mov	r2,zero
   132e8:	dfc00217 	ldw	ra,8(sp)
   132ec:	dc400117 	ldw	r17,4(sp)
   132f0:	dc000017 	ldw	r16,0(sp)
   132f4:	dec00304 	addi	sp,sp,12
   132f8:	f800283a 	ret
   132fc:	8809883a 	mov	r4,r17
   13300:	00135680 	call	13568 <_getpid_r>
   13304:	800d883a 	mov	r6,r16
   13308:	100b883a 	mov	r5,r2
   1330c:	8809883a 	mov	r4,r17
   13310:	dfc00217 	ldw	ra,8(sp)
   13314:	dc400117 	ldw	r17,4(sp)
   13318:	dc000017 	ldw	r16,0(sp)
   1331c:	dec00304 	addi	sp,sp,12
   13320:	00135081 	jmpi	13508 <_kill_r>
   13324:	00800584 	movi	r2,22
   13328:	88800015 	stw	r2,0(r17)
   1332c:	00800044 	movi	r2,1
   13330:	003fed06 	br	132e8 <raise+0x58>
   13334:	0005883a 	mov	r2,zero
   13338:	003feb06 	br	132e8 <raise+0x58>
   1333c:	00800584 	movi	r2,22
   13340:	88800015 	stw	r2,0(r17)
   13344:	00bfffc4 	movi	r2,-1
   13348:	003fe706 	br	132e8 <raise+0x58>

0001334c <signal>:
   1334c:	defffc04 	addi	sp,sp,-16
   13350:	dc800215 	stw	r18,8(sp)
   13354:	00c000b4 	movhi	r3,2
   13358:	dfc00315 	stw	ra,12(sp)
   1335c:	dc400115 	stw	r17,4(sp)
   13360:	dc000015 	stw	r16,0(sp)
   13364:	20800830 	cmpltui	r2,r4,32
   13368:	1ca6b817 	ldw	r18,-25888(r3)
   1336c:	10000e26 	beq	r2,zero,133a8 <signal+0x5c>
   13370:	2021883a 	mov	r16,r4
   13374:	9100b717 	ldw	r4,732(r18)
   13378:	2823883a 	mov	r17,r5
   1337c:	20000e26 	beq	r4,zero,133b8 <signal+0x6c>
   13380:	802090ba 	slli	r16,r16,2
   13384:	2421883a 	add	r16,r4,r16
   13388:	80800017 	ldw	r2,0(r16)
   1338c:	84400015 	stw	r17,0(r16)
   13390:	dfc00317 	ldw	ra,12(sp)
   13394:	dc800217 	ldw	r18,8(sp)
   13398:	dc400117 	ldw	r17,4(sp)
   1339c:	dc000017 	ldw	r16,0(sp)
   133a0:	dec00404 	addi	sp,sp,16
   133a4:	f800283a 	ret
   133a8:	00800584 	movi	r2,22
   133ac:	90800015 	stw	r2,0(r18)
   133b0:	00bfffc4 	movi	r2,-1
   133b4:	003ff606 	br	13390 <signal+0x44>
   133b8:	9009883a 	mov	r4,r18
   133bc:	01402004 	movi	r5,128
   133c0:	00099f40 	call	99f4 <_malloc_r>
   133c4:	9080b715 	stw	r2,732(r18)
   133c8:	1009883a 	mov	r4,r2
   133cc:	10000526 	beq	r2,zero,133e4 <signal+0x98>
   133d0:	01802004 	movi	r6,128
   133d4:	000b883a 	mov	r5,zero
   133d8:	000f5d00 	call	f5d0 <memset>
   133dc:	1009883a 	mov	r4,r2
   133e0:	003fe706 	br	13380 <signal+0x34>
   133e4:	00bfffc4 	movi	r2,-1
   133e8:	003fe906 	br	13390 <signal+0x44>

000133ec <_init_signal>:
   133ec:	defffe04 	addi	sp,sp,-8
   133f0:	008000b4 	movhi	r2,2
   133f4:	dc000015 	stw	r16,0(sp)
   133f8:	1426b817 	ldw	r16,-25888(r2)
   133fc:	dfc00115 	stw	ra,4(sp)
   13400:	8080b717 	ldw	r2,732(r16)
   13404:	10000526 	beq	r2,zero,1341c <_init_signal+0x30>
   13408:	0005883a 	mov	r2,zero
   1340c:	dfc00117 	ldw	ra,4(sp)
   13410:	dc000017 	ldw	r16,0(sp)
   13414:	dec00204 	addi	sp,sp,8
   13418:	f800283a 	ret
   1341c:	8009883a 	mov	r4,r16
   13420:	01402004 	movi	r5,128
   13424:	00099f40 	call	99f4 <_malloc_r>
   13428:	8080b715 	stw	r2,732(r16)
   1342c:	1009883a 	mov	r4,r2
   13430:	10000426 	beq	r2,zero,13444 <_init_signal+0x58>
   13434:	01802004 	movi	r6,128
   13438:	000b883a 	mov	r5,zero
   1343c:	000f5d00 	call	f5d0 <memset>
   13440:	003ff106 	br	13408 <_init_signal+0x1c>
   13444:	00bfffc4 	movi	r2,-1
   13448:	003ff006 	br	1340c <_init_signal+0x20>

0001344c <__sigtramp>:
   1344c:	defffd04 	addi	sp,sp,-12
   13450:	dc400115 	stw	r17,4(sp)
   13454:	00c000b4 	movhi	r3,2
   13458:	dfc00215 	stw	ra,8(sp)
   1345c:	dc000015 	stw	r16,0(sp)
   13460:	20800830 	cmpltui	r2,r4,32
   13464:	1c66b817 	ldw	r17,-25888(r3)
   13468:	10002526 	beq	r2,zero,13500 <__sigtramp+0xb4>
   1346c:	88c0b717 	ldw	r3,732(r17)
   13470:	2021883a 	mov	r16,r4
   13474:	18001326 	beq	r3,zero,134c4 <__sigtramp+0x78>
   13478:	800890ba 	slli	r4,r16,2
   1347c:	1907883a 	add	r3,r3,r4
   13480:	18800017 	ldw	r2,0(r3)
   13484:	10000d26 	beq	r2,zero,134bc <__sigtramp+0x70>
   13488:	113fffe0 	cmpeqi	r4,r2,-1
   1348c:	20001a1e 	bne	r4,zero,134f8 <__sigtramp+0xac>
   13490:	11000060 	cmpeqi	r4,r2,1
   13494:	2000161e 	bne	r4,zero,134f0 <__sigtramp+0xa4>
   13498:	18000015 	stw	zero,0(r3)
   1349c:	8009883a 	mov	r4,r16
   134a0:	103ee83a 	callr	r2
   134a4:	0005883a 	mov	r2,zero
   134a8:	dfc00217 	ldw	ra,8(sp)
   134ac:	dc400117 	ldw	r17,4(sp)
   134b0:	dc000017 	ldw	r16,0(sp)
   134b4:	dec00304 	addi	sp,sp,12
   134b8:	f800283a 	ret
   134bc:	00800044 	movi	r2,1
   134c0:	003ff906 	br	134a8 <__sigtramp+0x5c>
   134c4:	01402004 	movi	r5,128
   134c8:	8809883a 	mov	r4,r17
   134cc:	00099f40 	call	99f4 <_malloc_r>
   134d0:	8880b715 	stw	r2,732(r17)
   134d4:	10000a26 	beq	r2,zero,13500 <__sigtramp+0xb4>
   134d8:	01802004 	movi	r6,128
   134dc:	000b883a 	mov	r5,zero
   134e0:	1009883a 	mov	r4,r2
   134e4:	000f5d00 	call	f5d0 <memset>
   134e8:	1007883a 	mov	r3,r2
   134ec:	003fe206 	br	13478 <__sigtramp+0x2c>
   134f0:	008000c4 	movi	r2,3
   134f4:	003fec06 	br	134a8 <__sigtramp+0x5c>
   134f8:	00800084 	movi	r2,2
   134fc:	003fea06 	br	134a8 <__sigtramp+0x5c>
   13500:	00bfffc4 	movi	r2,-1
   13504:	003fe806 	br	134a8 <__sigtramp+0x5c>

00013508 <_kill_r>:
   13508:	2807883a 	mov	r3,r5
   1350c:	defffe04 	addi	sp,sp,-8
   13510:	dc000015 	stw	r16,0(sp)
   13514:	008000b4 	movhi	r2,2
   13518:	300b883a 	mov	r5,r6
   1351c:	2021883a 	mov	r16,r4
   13520:	1809883a 	mov	r4,r3
   13524:	dfc00115 	stw	ra,4(sp)
   13528:	102dec15 	stw	zero,-18512(r2)
   1352c:	001459c0 	call	1459c <kill>
   13530:	10ffffd8 	cmpnei	r3,r2,-1
   13534:	18000426 	beq	r3,zero,13548 <_kill_r+0x40>
   13538:	dfc00117 	ldw	ra,4(sp)
   1353c:	dc000017 	ldw	r16,0(sp)
   13540:	dec00204 	addi	sp,sp,8
   13544:	f800283a 	ret
   13548:	00c000b4 	movhi	r3,2
   1354c:	18edec17 	ldw	r3,-18512(r3)
   13550:	183ff926 	beq	r3,zero,13538 <_kill_r+0x30>
   13554:	80c00015 	stw	r3,0(r16)
   13558:	dfc00117 	ldw	ra,4(sp)
   1355c:	dc000017 	ldw	r16,0(sp)
   13560:	dec00204 	addi	sp,sp,8
   13564:	f800283a 	ret

00013568 <_getpid_r>:
   13568:	00144541 	jmpi	14454 <getpid>

0001356c <__udivdi3>:
   1356c:	defff504 	addi	sp,sp,-44
   13570:	dd000515 	stw	r20,20(sp)
   13574:	dc800315 	stw	r18,12(sp)
   13578:	dfc00a15 	stw	ra,40(sp)
   1357c:	df000915 	stw	fp,36(sp)
   13580:	ddc00815 	stw	r23,32(sp)
   13584:	dd800715 	stw	r22,28(sp)
   13588:	dd400615 	stw	r21,24(sp)
   1358c:	dcc00415 	stw	r19,16(sp)
   13590:	dc400215 	stw	r17,8(sp)
   13594:	dc000115 	stw	r16,4(sp)
   13598:	2029883a 	mov	r20,r4
   1359c:	2825883a 	mov	r18,r5
   135a0:	3800461e 	bne	r7,zero,136bc <__udivdi3+0x150>
   135a4:	3823883a 	mov	r17,r7
   135a8:	3021883a 	mov	r16,r6
   135ac:	2027883a 	mov	r19,r4
   135b0:	2980622e 	bgeu	r5,r6,1373c <__udivdi3+0x1d0>
   135b4:	00bfffd4 	movui	r2,65535
   135b8:	282b883a 	mov	r21,r5
   135bc:	1180aa2e 	bgeu	r2,r6,13868 <__udivdi3+0x2fc>
   135c0:	00804034 	movhi	r2,256
   135c4:	30815a36 	bltu	r6,r2,13b30 <__udivdi3+0x5c4>
   135c8:	3006d63a 	srli	r3,r6,24
   135cc:	04400604 	movi	r17,24
   135d0:	00800074 	movhi	r2,1
   135d4:	1885883a 	add	r2,r3,r2
   135d8:	109df803 	ldbu	r2,30688(r2)
   135dc:	00c00804 	movi	r3,32
   135e0:	1463883a 	add	r17,r2,r17
   135e4:	1c45c83a 	sub	r2,r3,r17
   135e8:	1c400526 	beq	r3,r17,13600 <__udivdi3+0x94>
   135ec:	9086983a 	sll	r3,r18,r2
   135f0:	a462d83a 	srl	r17,r20,r17
   135f4:	30a0983a 	sll	r16,r6,r2
   135f8:	a0a6983a 	sll	r19,r20,r2
   135fc:	88eab03a 	or	r21,r17,r3
   13600:	802cd43a 	srli	r22,r16,16
   13604:	a809883a 	mov	r4,r21
   13608:	853fffcc 	andi	r20,r16,65535
   1360c:	b00b883a 	mov	r5,r22
   13610:	00060300 	call	6030 <__umodsi3>
   13614:	a809883a 	mov	r4,r21
   13618:	b00b883a 	mov	r5,r22
   1361c:	1025883a 	mov	r18,r2
   13620:	0005fcc0 	call	5fcc <__udivsi3>
   13624:	a009883a 	mov	r4,r20
   13628:	100b883a 	mov	r5,r2
   1362c:	102b883a 	mov	r21,r2
   13630:	000608c0 	call	608c <__mulsi3>
   13634:	9024943a 	slli	r18,r18,16
   13638:	9808d43a 	srli	r4,r19,16
   1363c:	9108b03a 	or	r4,r18,r4
   13640:	2080052e 	bgeu	r4,r2,13658 <__udivdi3+0xec>
   13644:	2409883a 	add	r4,r4,r16
   13648:	a8ffffc4 	addi	r3,r21,-1
   1364c:	24000136 	bltu	r4,r16,13654 <__udivdi3+0xe8>
   13650:	20814836 	bltu	r4,r2,13b74 <__udivdi3+0x608>
   13654:	182b883a 	mov	r21,r3
   13658:	20a3c83a 	sub	r17,r4,r2
   1365c:	8809883a 	mov	r4,r17
   13660:	b00b883a 	mov	r5,r22
   13664:	00060300 	call	6030 <__umodsi3>
   13668:	8809883a 	mov	r4,r17
   1366c:	1023883a 	mov	r17,r2
   13670:	b00b883a 	mov	r5,r22
   13674:	8822943a 	slli	r17,r17,16
   13678:	0005fcc0 	call	5fcc <__udivsi3>
   1367c:	100b883a 	mov	r5,r2
   13680:	a009883a 	mov	r4,r20
   13684:	9cffffcc 	andi	r19,r19,65535
   13688:	1025883a 	mov	r18,r2
   1368c:	8ce6b03a 	or	r19,r17,r19
   13690:	000608c0 	call	608c <__mulsi3>
   13694:	9880052e 	bgeu	r19,r2,136ac <__udivdi3+0x140>
   13698:	84e7883a 	add	r19,r16,r19
   1369c:	90ffffc4 	addi	r3,r18,-1
   136a0:	9c000136 	bltu	r19,r16,136a8 <__udivdi3+0x13c>
   136a4:	98813136 	bltu	r19,r2,13b6c <__udivdi3+0x600>
   136a8:	1825883a 	mov	r18,r3
   136ac:	a80c943a 	slli	r6,r21,16
   136b0:	0007883a 	mov	r3,zero
   136b4:	3484b03a 	or	r2,r6,r18
   136b8:	00000306 	br	136c8 <__udivdi3+0x15c>
   136bc:	29c00e2e 	bgeu	r5,r7,136f8 <__udivdi3+0x18c>
   136c0:	0007883a 	mov	r3,zero
   136c4:	0005883a 	mov	r2,zero
   136c8:	dfc00a17 	ldw	ra,40(sp)
   136cc:	df000917 	ldw	fp,36(sp)
   136d0:	ddc00817 	ldw	r23,32(sp)
   136d4:	dd800717 	ldw	r22,28(sp)
   136d8:	dd400617 	ldw	r21,24(sp)
   136dc:	dd000517 	ldw	r20,20(sp)
   136e0:	dcc00417 	ldw	r19,16(sp)
   136e4:	dc800317 	ldw	r18,12(sp)
   136e8:	dc400217 	ldw	r17,8(sp)
   136ec:	dc000117 	ldw	r16,4(sp)
   136f0:	dec00b04 	addi	sp,sp,44
   136f4:	f800283a 	ret
   136f8:	00bfffd4 	movui	r2,65535
   136fc:	11c05f2e 	bgeu	r2,r7,1387c <__udivdi3+0x310>
   13700:	00804034 	movhi	r2,256
   13704:	3880fc36 	bltu	r7,r2,13af8 <__udivdi3+0x58c>
   13708:	3804d63a 	srli	r2,r7,24
   1370c:	01000604 	movi	r4,24
   13710:	00c00074 	movhi	r3,1
   13714:	10c7883a 	add	r3,r2,r3
   13718:	189df803 	ldbu	r2,30688(r3)
   1371c:	00c00804 	movi	r3,32
   13720:	1105883a 	add	r2,r2,r4
   13724:	18a3c83a 	sub	r17,r3,r2
   13728:	1880901e 	bne	r3,r2,1396c <__udivdi3+0x400>
   1372c:	3c80f736 	bltu	r7,r18,13b0c <__udivdi3+0x5a0>
   13730:	a185403a 	cmpgeu	r2,r20,r6
   13734:	0007883a 	mov	r3,zero
   13738:	003fe306 	br	136c8 <__udivdi3+0x15c>
   1373c:	3000041e 	bne	r6,zero,13750 <__udivdi3+0x1e4>
   13740:	000b883a 	mov	r5,zero
   13744:	01000044 	movi	r4,1
   13748:	0005fcc0 	call	5fcc <__udivsi3>
   1374c:	1021883a 	mov	r16,r2
   13750:	00bfffd4 	movui	r2,65535
   13754:	14003f2e 	bgeu	r2,r16,13854 <__udivdi3+0x2e8>
   13758:	00804034 	movhi	r2,256
   1375c:	8080f136 	bltu	r16,r2,13b24 <__udivdi3+0x5b8>
   13760:	8006d63a 	srli	r3,r16,24
   13764:	04400604 	movi	r17,24
   13768:	00800074 	movhi	r2,1
   1376c:	1885883a 	add	r2,r3,r2
   13770:	109df803 	ldbu	r2,30688(r2)
   13774:	00c00804 	movi	r3,32
   13778:	1463883a 	add	r17,r2,r17
   1377c:	1c45c83a 	sub	r2,r3,r17
   13780:	1c40431e 	bne	r3,r17,13890 <__udivdi3+0x324>
   13784:	802cd43a 	srli	r22,r16,16
   13788:	9423c83a 	sub	r17,r18,r16
   1378c:	853fffcc 	andi	r20,r16,65535
   13790:	00c00044 	movi	r3,1
   13794:	b00b883a 	mov	r5,r22
   13798:	8809883a 	mov	r4,r17
   1379c:	d8c00015 	stw	r3,0(sp)
   137a0:	00060300 	call	6030 <__umodsi3>
   137a4:	b00b883a 	mov	r5,r22
   137a8:	8809883a 	mov	r4,r17
   137ac:	1025883a 	mov	r18,r2
   137b0:	0005fcc0 	call	5fcc <__udivsi3>
   137b4:	1009883a 	mov	r4,r2
   137b8:	a00b883a 	mov	r5,r20
   137bc:	102b883a 	mov	r21,r2
   137c0:	000608c0 	call	608c <__mulsi3>
   137c4:	9024943a 	slli	r18,r18,16
   137c8:	9808d43a 	srli	r4,r19,16
   137cc:	d8c00017 	ldw	r3,0(sp)
   137d0:	9108b03a 	or	r4,r18,r4
   137d4:	2080052e 	bgeu	r4,r2,137ec <__udivdi3+0x280>
   137d8:	2409883a 	add	r4,r4,r16
   137dc:	a97fffc4 	addi	r5,r21,-1
   137e0:	24000136 	bltu	r4,r16,137e8 <__udivdi3+0x27c>
   137e4:	2080e636 	bltu	r4,r2,13b80 <__udivdi3+0x614>
   137e8:	282b883a 	mov	r21,r5
   137ec:	20a3c83a 	sub	r17,r4,r2
   137f0:	8809883a 	mov	r4,r17
   137f4:	b00b883a 	mov	r5,r22
   137f8:	d8c00015 	stw	r3,0(sp)
   137fc:	00060300 	call	6030 <__umodsi3>
   13800:	8809883a 	mov	r4,r17
   13804:	1023883a 	mov	r17,r2
   13808:	b00b883a 	mov	r5,r22
   1380c:	8822943a 	slli	r17,r17,16
   13810:	0005fcc0 	call	5fcc <__udivsi3>
   13814:	a00b883a 	mov	r5,r20
   13818:	1009883a 	mov	r4,r2
   1381c:	9cffffcc 	andi	r19,r19,65535
   13820:	1025883a 	mov	r18,r2
   13824:	8ce6b03a 	or	r19,r17,r19
   13828:	000608c0 	call	608c <__mulsi3>
   1382c:	d8c00017 	ldw	r3,0(sp)
   13830:	9880052e 	bgeu	r19,r2,13848 <__udivdi3+0x2dc>
   13834:	84e7883a 	add	r19,r16,r19
   13838:	913fffc4 	addi	r4,r18,-1
   1383c:	9c000136 	bltu	r19,r16,13844 <__udivdi3+0x2d8>
   13840:	9880c836 	bltu	r19,r2,13b64 <__udivdi3+0x5f8>
   13844:	2025883a 	mov	r18,r4
   13848:	a80c943a 	slli	r6,r21,16
   1384c:	3484b03a 	or	r2,r6,r18
   13850:	003f9d06 	br	136c8 <__udivdi3+0x15c>
   13854:	80804030 	cmpltui	r2,r16,256
   13858:	1000b81e 	bne	r2,zero,13b3c <__udivdi3+0x5d0>
   1385c:	8006d23a 	srli	r3,r16,8
   13860:	04400204 	movi	r17,8
   13864:	003fc006 	br	13768 <__udivdi3+0x1fc>
   13868:	30804030 	cmpltui	r2,r6,256
   1386c:	1000a51e 	bne	r2,zero,13b04 <__udivdi3+0x598>
   13870:	3006d23a 	srli	r3,r6,8
   13874:	04400204 	movi	r17,8
   13878:	003f5506 	br	135d0 <__udivdi3+0x64>
   1387c:	38804030 	cmpltui	r2,r7,256
   13880:	1000a51e 	bne	r2,zero,13b18 <__udivdi3+0x5ac>
   13884:	3804d23a 	srli	r2,r7,8
   13888:	01000204 	movi	r4,8
   1388c:	003fa006 	br	13710 <__udivdi3+0x1a4>
   13890:	80a0983a 	sll	r16,r16,r2
   13894:	946ed83a 	srl	r23,r18,r17
   13898:	9086983a 	sll	r3,r18,r2
   1389c:	802cd43a 	srli	r22,r16,16
   138a0:	a462d83a 	srl	r17,r20,r17
   138a4:	b809883a 	mov	r4,r23
   138a8:	b00b883a 	mov	r5,r22
   138ac:	88eab03a 	or	r21,r17,r3
   138b0:	a0a6983a 	sll	r19,r20,r2
   138b4:	00060300 	call	6030 <__umodsi3>
   138b8:	b809883a 	mov	r4,r23
   138bc:	b00b883a 	mov	r5,r22
   138c0:	1025883a 	mov	r18,r2
   138c4:	853fffcc 	andi	r20,r16,65535
   138c8:	0005fcc0 	call	5fcc <__udivsi3>
   138cc:	a009883a 	mov	r4,r20
   138d0:	100b883a 	mov	r5,r2
   138d4:	102f883a 	mov	r23,r2
   138d8:	000608c0 	call	608c <__mulsi3>
   138dc:	9024943a 	slli	r18,r18,16
   138e0:	a808d43a 	srli	r4,r21,16
   138e4:	9108b03a 	or	r4,r18,r4
   138e8:	2080062e 	bgeu	r4,r2,13904 <__udivdi3+0x398>
   138ec:	2409883a 	add	r4,r4,r16
   138f0:	b8ffffc4 	addi	r3,r23,-1
   138f4:	24009936 	bltu	r4,r16,13b5c <__udivdi3+0x5f0>
   138f8:	2080982e 	bgeu	r4,r2,13b5c <__udivdi3+0x5f0>
   138fc:	bdffff84 	addi	r23,r23,-2
   13900:	2409883a 	add	r4,r4,r16
   13904:	20a3c83a 	sub	r17,r4,r2
   13908:	8809883a 	mov	r4,r17
   1390c:	b00b883a 	mov	r5,r22
   13910:	00060300 	call	6030 <__umodsi3>
   13914:	1025883a 	mov	r18,r2
   13918:	8809883a 	mov	r4,r17
   1391c:	b00b883a 	mov	r5,r22
   13920:	9024943a 	slli	r18,r18,16
   13924:	0005fcc0 	call	5fcc <__udivsi3>
   13928:	100b883a 	mov	r5,r2
   1392c:	a009883a 	mov	r4,r20
   13930:	ac7fffcc 	andi	r17,r21,65535
   13934:	1039883a 	mov	fp,r2
   13938:	9462b03a 	or	r17,r18,r17
   1393c:	000608c0 	call	608c <__mulsi3>
   13940:	8880062e 	bgeu	r17,r2,1395c <__udivdi3+0x3f0>
   13944:	8c23883a 	add	r17,r17,r16
   13948:	e0ffffc4 	addi	r3,fp,-1
   1394c:	8c007f36 	bltu	r17,r16,13b4c <__udivdi3+0x5e0>
   13950:	88807e2e 	bgeu	r17,r2,13b4c <__udivdi3+0x5e0>
   13954:	e73fff84 	addi	fp,fp,-2
   13958:	8c23883a 	add	r17,r17,r16
   1395c:	b806943a 	slli	r3,r23,16
   13960:	88a3c83a 	sub	r17,r17,r2
   13964:	1f06b03a 	or	r3,r3,fp
   13968:	003f8a06 	br	13794 <__udivdi3+0x228>
   1396c:	30a6d83a 	srl	r19,r6,r2
   13970:	3c4e983a 	sll	r7,r7,r17
   13974:	90a0d83a 	srl	r16,r18,r2
   13978:	9446983a 	sll	r3,r18,r17
   1397c:	99e6b03a 	or	r19,r19,r7
   13980:	a084d83a 	srl	r2,r20,r2
   13984:	9838d43a 	srli	fp,r19,16
   13988:	8009883a 	mov	r4,r16
   1398c:	10eab03a 	or	r21,r2,r3
   13990:	e00b883a 	mov	r5,fp
   13994:	346c983a 	sll	r22,r6,r17
   13998:	dd400015 	stw	r21,0(sp)
   1399c:	00060300 	call	6030 <__umodsi3>
   139a0:	8009883a 	mov	r4,r16
   139a4:	e00b883a 	mov	r5,fp
   139a8:	102f883a 	mov	r23,r2
   139ac:	9cbfffcc 	andi	r18,r19,65535
   139b0:	0005fcc0 	call	5fcc <__udivsi3>
   139b4:	9009883a 	mov	r4,r18
   139b8:	100b883a 	mov	r5,r2
   139bc:	1021883a 	mov	r16,r2
   139c0:	000608c0 	call	608c <__mulsi3>
   139c4:	b82e943a 	slli	r23,r23,16
   139c8:	a808d43a 	srli	r4,r21,16
   139cc:	b908b03a 	or	r4,r23,r4
   139d0:	2080062e 	bgeu	r4,r2,139ec <__udivdi3+0x480>
   139d4:	24c9883a 	add	r4,r4,r19
   139d8:	817fffc4 	addi	r5,r16,-1
   139dc:	24c05d36 	bltu	r4,r19,13b54 <__udivdi3+0x5e8>
   139e0:	20805c2e 	bgeu	r4,r2,13b54 <__udivdi3+0x5e8>
   139e4:	843fff84 	addi	r16,r16,-2
   139e8:	24c9883a 	add	r4,r4,r19
   139ec:	20abc83a 	sub	r21,r4,r2
   139f0:	a809883a 	mov	r4,r21
   139f4:	e00b883a 	mov	r5,fp
   139f8:	00060300 	call	6030 <__umodsi3>
   139fc:	a809883a 	mov	r4,r21
   13a00:	e00b883a 	mov	r5,fp
   13a04:	102b883a 	mov	r21,r2
   13a08:	0005fcc0 	call	5fcc <__udivsi3>
   13a0c:	9009883a 	mov	r4,r18
   13a10:	100b883a 	mov	r5,r2
   13a14:	102f883a 	mov	r23,r2
   13a18:	000608c0 	call	608c <__mulsi3>
   13a1c:	d8c00017 	ldw	r3,0(sp)
   13a20:	a82a943a 	slli	r21,r21,16
   13a24:	100d883a 	mov	r6,r2
   13a28:	1cbfffcc 	andi	r18,r3,65535
   13a2c:	aca4b03a 	or	r18,r21,r18
   13a30:	9080062e 	bgeu	r18,r2,13a4c <__udivdi3+0x4e0>
   13a34:	94e5883a 	add	r18,r18,r19
   13a38:	b8bfffc4 	addi	r2,r23,-1
   13a3c:	94c04136 	bltu	r18,r19,13b44 <__udivdi3+0x5d8>
   13a40:	9180402e 	bgeu	r18,r6,13b44 <__udivdi3+0x5d8>
   13a44:	bdffff84 	addi	r23,r23,-2
   13a48:	94e5883a 	add	r18,r18,r19
   13a4c:	8004943a 	slli	r2,r16,16
   13a50:	bd7fffcc 	andi	r21,r23,65535
   13a54:	b73fffcc 	andi	fp,r22,65535
   13a58:	15e0b03a 	or	r16,r2,r23
   13a5c:	8026d43a 	srli	r19,r16,16
   13a60:	a809883a 	mov	r4,r21
   13a64:	e00b883a 	mov	r5,fp
   13a68:	91a5c83a 	sub	r18,r18,r6
   13a6c:	b02cd43a 	srli	r22,r22,16
   13a70:	000608c0 	call	608c <__mulsi3>
   13a74:	9809883a 	mov	r4,r19
   13a78:	e00b883a 	mov	r5,fp
   13a7c:	102f883a 	mov	r23,r2
   13a80:	000608c0 	call	608c <__mulsi3>
   13a84:	9809883a 	mov	r4,r19
   13a88:	b00b883a 	mov	r5,r22
   13a8c:	1027883a 	mov	r19,r2
   13a90:	000608c0 	call	608c <__mulsi3>
   13a94:	a809883a 	mov	r4,r21
   13a98:	b00b883a 	mov	r5,r22
   13a9c:	102b883a 	mov	r21,r2
   13aa0:	000608c0 	call	608c <__mulsi3>
   13aa4:	b806d43a 	srli	r3,r23,16
   13aa8:	14c5883a 	add	r2,r2,r19
   13aac:	1887883a 	add	r3,r3,r2
   13ab0:	1cc0022e 	bgeu	r3,r19,13abc <__udivdi3+0x550>
   13ab4:	00800074 	movhi	r2,1
   13ab8:	a8ab883a 	add	r21,r21,r2
   13abc:	1804d43a 	srli	r2,r3,16
   13ac0:	156b883a 	add	r21,r2,r21
   13ac4:	95400936 	bltu	r18,r21,13aec <__udivdi3+0x580>
   13ac8:	95400326 	beq	r18,r21,13ad8 <__udivdi3+0x56c>
   13acc:	8005883a 	mov	r2,r16
   13ad0:	0007883a 	mov	r3,zero
   13ad4:	003efc06 	br	136c8 <__udivdi3+0x15c>
   13ad8:	1806943a 	slli	r3,r3,16
   13adc:	a44c983a 	sll	r6,r20,r17
   13ae0:	bdffffcc 	andi	r23,r23,65535
   13ae4:	1dc7883a 	add	r3,r3,r23
   13ae8:	30fff82e 	bgeu	r6,r3,13acc <__udivdi3+0x560>
   13aec:	80bfffc4 	addi	r2,r16,-1
   13af0:	0007883a 	mov	r3,zero
   13af4:	003ef406 	br	136c8 <__udivdi3+0x15c>
   13af8:	3804d43a 	srli	r2,r7,16
   13afc:	01000404 	movi	r4,16
   13b00:	003f0306 	br	13710 <__udivdi3+0x1a4>
   13b04:	3007883a 	mov	r3,r6
   13b08:	003eb106 	br	135d0 <__udivdi3+0x64>
   13b0c:	0007883a 	mov	r3,zero
   13b10:	00800044 	movi	r2,1
   13b14:	003eec06 	br	136c8 <__udivdi3+0x15c>
   13b18:	3805883a 	mov	r2,r7
   13b1c:	0009883a 	mov	r4,zero
   13b20:	003efb06 	br	13710 <__udivdi3+0x1a4>
   13b24:	8006d43a 	srli	r3,r16,16
   13b28:	04400404 	movi	r17,16
   13b2c:	003f0e06 	br	13768 <__udivdi3+0x1fc>
   13b30:	3006d43a 	srli	r3,r6,16
   13b34:	04400404 	movi	r17,16
   13b38:	003ea506 	br	135d0 <__udivdi3+0x64>
   13b3c:	8007883a 	mov	r3,r16
   13b40:	003f0906 	br	13768 <__udivdi3+0x1fc>
   13b44:	102f883a 	mov	r23,r2
   13b48:	003fc006 	br	13a4c <__udivdi3+0x4e0>
   13b4c:	1839883a 	mov	fp,r3
   13b50:	003f8206 	br	1395c <__udivdi3+0x3f0>
   13b54:	2821883a 	mov	r16,r5
   13b58:	003fa406 	br	139ec <__udivdi3+0x480>
   13b5c:	182f883a 	mov	r23,r3
   13b60:	003f6806 	br	13904 <__udivdi3+0x398>
   13b64:	94bfff84 	addi	r18,r18,-2
   13b68:	003f3706 	br	13848 <__udivdi3+0x2dc>
   13b6c:	94bfff84 	addi	r18,r18,-2
   13b70:	003ece06 	br	136ac <__udivdi3+0x140>
   13b74:	ad7fff84 	addi	r21,r21,-2
   13b78:	2409883a 	add	r4,r4,r16
   13b7c:	003eb606 	br	13658 <__udivdi3+0xec>
   13b80:	ad7fff84 	addi	r21,r21,-2
   13b84:	2409883a 	add	r4,r4,r16
   13b88:	003f1806 	br	137ec <__udivdi3+0x280>

00013b8c <__umoddi3>:
   13b8c:	defff304 	addi	sp,sp,-52
   13b90:	dc400415 	stw	r17,16(sp)
   13b94:	dc000315 	stw	r16,12(sp)
   13b98:	dfc00c15 	stw	ra,48(sp)
   13b9c:	df000b15 	stw	fp,44(sp)
   13ba0:	ddc00a15 	stw	r23,40(sp)
   13ba4:	dd800915 	stw	r22,36(sp)
   13ba8:	dd400815 	stw	r21,32(sp)
   13bac:	dd000715 	stw	r20,28(sp)
   13bb0:	dcc00615 	stw	r19,24(sp)
   13bb4:	dc800515 	stw	r18,20(sp)
   13bb8:	2823883a 	mov	r17,r5
   13bbc:	2021883a 	mov	r16,r4
   13bc0:	38003b1e 	bne	r7,zero,13cb0 <__umoddi3+0x124>
   13bc4:	3825883a 	mov	r18,r7
   13bc8:	3029883a 	mov	r20,r6
   13bcc:	2027883a 	mov	r19,r4
   13bd0:	29805b2e 	bgeu	r5,r6,13d40 <__umoddi3+0x1b4>
   13bd4:	00bfffd4 	movui	r2,65535
   13bd8:	282d883a 	mov	r22,r5
   13bdc:	11809a2e 	bgeu	r2,r6,13e48 <__umoddi3+0x2bc>
   13be0:	00804034 	movhi	r2,256
   13be4:	30814436 	bltu	r6,r2,140f8 <__umoddi3+0x56c>
   13be8:	3006d63a 	srli	r3,r6,24
   13bec:	04800604 	movi	r18,24
   13bf0:	00800074 	movhi	r2,1
   13bf4:	1885883a 	add	r2,r3,r2
   13bf8:	109df803 	ldbu	r2,30688(r2)
   13bfc:	00c00804 	movi	r3,32
   13c00:	1485883a 	add	r2,r2,r18
   13c04:	18a5c83a 	sub	r18,r3,r2
   13c08:	18800526 	beq	r3,r2,13c20 <__umoddi3+0x94>
   13c0c:	8ca2983a 	sll	r17,r17,r18
   13c10:	8084d83a 	srl	r2,r16,r2
   13c14:	34a8983a 	sll	r20,r6,r18
   13c18:	84a6983a 	sll	r19,r16,r18
   13c1c:	146cb03a 	or	r22,r2,r17
   13c20:	a02ed43a 	srli	r23,r20,16
   13c24:	b009883a 	mov	r4,r22
   13c28:	a57fffcc 	andi	r21,r20,65535
   13c2c:	b80b883a 	mov	r5,r23
   13c30:	00060300 	call	6030 <__umodsi3>
   13c34:	b80b883a 	mov	r5,r23
   13c38:	b009883a 	mov	r4,r22
   13c3c:	1023883a 	mov	r17,r2
   13c40:	0005fcc0 	call	5fcc <__udivsi3>
   13c44:	a809883a 	mov	r4,r21
   13c48:	100b883a 	mov	r5,r2
   13c4c:	000608c0 	call	608c <__mulsi3>
   13c50:	8822943a 	slli	r17,r17,16
   13c54:	9808d43a 	srli	r4,r19,16
   13c58:	8908b03a 	or	r4,r17,r4
   13c5c:	2080042e 	bgeu	r4,r2,13c70 <__umoddi3+0xe4>
   13c60:	2509883a 	add	r4,r4,r20
   13c64:	25000236 	bltu	r4,r20,13c70 <__umoddi3+0xe4>
   13c68:	2080012e 	bgeu	r4,r2,13c70 <__umoddi3+0xe4>
   13c6c:	2509883a 	add	r4,r4,r20
   13c70:	20a1c83a 	sub	r16,r4,r2
   13c74:	b80b883a 	mov	r5,r23
   13c78:	8009883a 	mov	r4,r16
   13c7c:	00060300 	call	6030 <__umodsi3>
   13c80:	b80b883a 	mov	r5,r23
   13c84:	8009883a 	mov	r4,r16
   13c88:	1023883a 	mov	r17,r2
   13c8c:	0005fcc0 	call	5fcc <__udivsi3>
   13c90:	8822943a 	slli	r17,r17,16
   13c94:	100b883a 	mov	r5,r2
   13c98:	a809883a 	mov	r4,r21
   13c9c:	000608c0 	call	608c <__mulsi3>
   13ca0:	98ffffcc 	andi	r3,r19,65535
   13ca4:	88c6b03a 	or	r3,r17,r3
   13ca8:	18805e2e 	bgeu	r3,r2,13e24 <__umoddi3+0x298>
   13cac:	00005906 	br	13e14 <__umoddi3+0x288>
   13cb0:	2005883a 	mov	r2,r4
   13cb4:	29c00d2e 	bgeu	r5,r7,13cec <__umoddi3+0x160>
   13cb8:	2807883a 	mov	r3,r5
   13cbc:	dfc00c17 	ldw	ra,48(sp)
   13cc0:	df000b17 	ldw	fp,44(sp)
   13cc4:	ddc00a17 	ldw	r23,40(sp)
   13cc8:	dd800917 	ldw	r22,36(sp)
   13ccc:	dd400817 	ldw	r21,32(sp)
   13cd0:	dd000717 	ldw	r20,28(sp)
   13cd4:	dcc00617 	ldw	r19,24(sp)
   13cd8:	dc800517 	ldw	r18,20(sp)
   13cdc:	dc400417 	ldw	r17,16(sp)
   13ce0:	dc000317 	ldw	r16,12(sp)
   13ce4:	dec00d04 	addi	sp,sp,52
   13ce8:	f800283a 	ret
   13cec:	013fffd4 	movui	r4,65535
   13cf0:	2807883a 	mov	r3,r5
   13cf4:	21c0592e 	bgeu	r4,r7,13e5c <__umoddi3+0x2d0>
   13cf8:	01004034 	movhi	r4,256
   13cfc:	39010336 	bltu	r7,r4,1410c <__umoddi3+0x580>
   13d00:	3808d63a 	srli	r4,r7,24
   13d04:	02000604 	movi	r8,24
   13d08:	01400074 	movhi	r5,1
   13d0c:	214b883a 	add	r5,r4,r5
   13d10:	2d1df803 	ldbu	r20,30688(r5)
   13d14:	01000804 	movi	r4,32
   13d18:	a229883a 	add	r20,r20,r8
   13d1c:	252bc83a 	sub	r21,r4,r20
   13d20:	2500531e 	bne	r4,r20,13e70 <__umoddi3+0x2e4>
   13d24:	3c400136 	bltu	r7,r17,13d2c <__umoddi3+0x1a0>
   13d28:	81bfe436 	bltu	r16,r6,13cbc <__umoddi3+0x130>
   13d2c:	8185c83a 	sub	r2,r16,r6
   13d30:	89cfc83a 	sub	r7,r17,r7
   13d34:	8087803a 	cmpltu	r3,r16,r2
   13d38:	38c7c83a 	sub	r3,r7,r3
   13d3c:	003fdf06 	br	13cbc <__umoddi3+0x130>
   13d40:	3000041e 	bne	r6,zero,13d54 <__umoddi3+0x1c8>
   13d44:	000b883a 	mov	r5,zero
   13d48:	01000044 	movi	r4,1
   13d4c:	0005fcc0 	call	5fcc <__udivsi3>
   13d50:	1029883a 	mov	r20,r2
   13d54:	00bfffd4 	movui	r2,65535
   13d58:	1500362e 	bgeu	r2,r20,13e34 <__umoddi3+0x2a8>
   13d5c:	00804034 	movhi	r2,256
   13d60:	a080ed36 	bltu	r20,r2,14118 <__umoddi3+0x58c>
   13d64:	a006d63a 	srli	r3,r20,24
   13d68:	04800604 	movi	r18,24
   13d6c:	00800074 	movhi	r2,1
   13d70:	1885883a 	add	r2,r3,r2
   13d74:	159df803 	ldbu	r22,30688(r2)
   13d78:	00800804 	movi	r2,32
   13d7c:	b4ad883a 	add	r22,r22,r18
   13d80:	15a5c83a 	sub	r18,r2,r22
   13d84:	1580a51e 	bne	r2,r22,1401c <__umoddi3+0x490>
   13d88:	a02ed43a 	srli	r23,r20,16
   13d8c:	8d23c83a 	sub	r17,r17,r20
   13d90:	a57fffcc 	andi	r21,r20,65535
   13d94:	8809883a 	mov	r4,r17
   13d98:	b80b883a 	mov	r5,r23
   13d9c:	00060300 	call	6030 <__umodsi3>
   13da0:	8809883a 	mov	r4,r17
   13da4:	b80b883a 	mov	r5,r23
   13da8:	1023883a 	mov	r17,r2
   13dac:	0005fcc0 	call	5fcc <__udivsi3>
   13db0:	1009883a 	mov	r4,r2
   13db4:	a80b883a 	mov	r5,r21
   13db8:	000608c0 	call	608c <__mulsi3>
   13dbc:	8822943a 	slli	r17,r17,16
   13dc0:	9808d43a 	srli	r4,r19,16
   13dc4:	8908b03a 	or	r4,r17,r4
   13dc8:	2080032e 	bgeu	r4,r2,13dd8 <__umoddi3+0x24c>
   13dcc:	2509883a 	add	r4,r4,r20
   13dd0:	25000136 	bltu	r4,r20,13dd8 <__umoddi3+0x24c>
   13dd4:	2080dc36 	bltu	r4,r2,14148 <__umoddi3+0x5bc>
   13dd8:	20a1c83a 	sub	r16,r4,r2
   13ddc:	b80b883a 	mov	r5,r23
   13de0:	8009883a 	mov	r4,r16
   13de4:	00060300 	call	6030 <__umodsi3>
   13de8:	b80b883a 	mov	r5,r23
   13dec:	8009883a 	mov	r4,r16
   13df0:	1023883a 	mov	r17,r2
   13df4:	8822943a 	slli	r17,r17,16
   13df8:	0005fcc0 	call	5fcc <__udivsi3>
   13dfc:	a80b883a 	mov	r5,r21
   13e00:	1009883a 	mov	r4,r2
   13e04:	000608c0 	call	608c <__mulsi3>
   13e08:	9cffffcc 	andi	r19,r19,65535
   13e0c:	8cc6b03a 	or	r3,r17,r19
   13e10:	1880042e 	bgeu	r3,r2,13e24 <__umoddi3+0x298>
   13e14:	1d07883a 	add	r3,r3,r20
   13e18:	1d000236 	bltu	r3,r20,13e24 <__umoddi3+0x298>
   13e1c:	1880012e 	bgeu	r3,r2,13e24 <__umoddi3+0x298>
   13e20:	1d07883a 	add	r3,r3,r20
   13e24:	1885c83a 	sub	r2,r3,r2
   13e28:	1484d83a 	srl	r2,r2,r18
   13e2c:	0007883a 	mov	r3,zero
   13e30:	003fa206 	br	13cbc <__umoddi3+0x130>
   13e34:	a0804030 	cmpltui	r2,r20,256
   13e38:	1000ba1e 	bne	r2,zero,14124 <__umoddi3+0x598>
   13e3c:	a006d23a 	srli	r3,r20,8
   13e40:	04800204 	movi	r18,8
   13e44:	003fc906 	br	13d6c <__umoddi3+0x1e0>
   13e48:	30804030 	cmpltui	r2,r6,256
   13e4c:	1000ad1e 	bne	r2,zero,14104 <__umoddi3+0x578>
   13e50:	3006d23a 	srli	r3,r6,8
   13e54:	04800204 	movi	r18,8
   13e58:	003f6506 	br	13bf0 <__umoddi3+0x64>
   13e5c:	39004030 	cmpltui	r4,r7,256
   13e60:	2000b21e 	bne	r4,zero,1412c <__umoddi3+0x5a0>
   13e64:	3808d23a 	srli	r4,r7,8
   13e68:	02000204 	movi	r8,8
   13e6c:	003fa606 	br	13d08 <__umoddi3+0x17c>
   13e70:	3d4e983a 	sll	r7,r7,r21
   13e74:	3508d83a 	srl	r4,r6,r20
   13e78:	8d2cd83a 	srl	r22,r17,r20
   13e7c:	8504d83a 	srl	r2,r16,r20
   13e80:	21e4b03a 	or	r18,r4,r7
   13e84:	8d62983a 	sll	r17,r17,r21
   13e88:	9026d43a 	srli	r19,r18,16
   13e8c:	354c983a 	sll	r6,r6,r21
   13e90:	1444b03a 	or	r2,r2,r17
   13e94:	b009883a 	mov	r4,r22
   13e98:	980b883a 	mov	r5,r19
   13e9c:	d9800115 	stw	r6,4(sp)
   13ea0:	d8800015 	stw	r2,0(sp)
   13ea4:	00060300 	call	6030 <__umodsi3>
   13ea8:	980b883a 	mov	r5,r19
   13eac:	b009883a 	mov	r4,r22
   13eb0:	102f883a 	mov	r23,r2
   13eb4:	947fffcc 	andi	r17,r18,65535
   13eb8:	0005fcc0 	call	5fcc <__udivsi3>
   13ebc:	8809883a 	mov	r4,r17
   13ec0:	100b883a 	mov	r5,r2
   13ec4:	1039883a 	mov	fp,r2
   13ec8:	000608c0 	call	608c <__mulsi3>
   13ecc:	d8c00017 	ldw	r3,0(sp)
   13ed0:	b82e943a 	slli	r23,r23,16
   13ed4:	8560983a 	sll	r16,r16,r21
   13ed8:	1808d43a 	srli	r4,r3,16
   13edc:	b908b03a 	or	r4,r23,r4
   13ee0:	2080062e 	bgeu	r4,r2,13efc <__umoddi3+0x370>
   13ee4:	2489883a 	add	r4,r4,r18
   13ee8:	e17fffc4 	addi	r5,fp,-1
   13eec:	24809436 	bltu	r4,r18,14140 <__umoddi3+0x5b4>
   13ef0:	2080932e 	bgeu	r4,r2,14140 <__umoddi3+0x5b4>
   13ef4:	e73fff84 	addi	fp,fp,-2
   13ef8:	2489883a 	add	r4,r4,r18
   13efc:	20adc83a 	sub	r22,r4,r2
   13f00:	980b883a 	mov	r5,r19
   13f04:	b009883a 	mov	r4,r22
   13f08:	00060300 	call	6030 <__umodsi3>
   13f0c:	980b883a 	mov	r5,r19
   13f10:	b009883a 	mov	r4,r22
   13f14:	102f883a 	mov	r23,r2
   13f18:	0005fcc0 	call	5fcc <__udivsi3>
   13f1c:	100b883a 	mov	r5,r2
   13f20:	8809883a 	mov	r4,r17
   13f24:	d8800215 	stw	r2,8(sp)
   13f28:	000608c0 	call	608c <__mulsi3>
   13f2c:	d8c00017 	ldw	r3,0(sp)
   13f30:	b82e943a 	slli	r23,r23,16
   13f34:	d9400217 	ldw	r5,8(sp)
   13f38:	1c7fffcc 	andi	r17,r3,65535
   13f3c:	bc62b03a 	or	r17,r23,r17
   13f40:	8880062e 	bgeu	r17,r2,13f5c <__umoddi3+0x3d0>
   13f44:	8ca3883a 	add	r17,r17,r18
   13f48:	28ffffc4 	addi	r3,r5,-1
   13f4c:	8c807a36 	bltu	r17,r18,14138 <__umoddi3+0x5ac>
   13f50:	8880792e 	bgeu	r17,r2,14138 <__umoddi3+0x5ac>
   13f54:	297fff84 	addi	r5,r5,-2
   13f58:	8ca3883a 	add	r17,r17,r18
   13f5c:	e02c943a 	slli	r22,fp,16
   13f60:	d9c00117 	ldw	r7,4(sp)
   13f64:	29bfffcc 	andi	r6,r5,65535
   13f68:	b16cb03a 	or	r22,r22,r5
   13f6c:	38ffffcc 	andi	r3,r7,65535
   13f70:	b02cd43a 	srli	r22,r22,16
   13f74:	180b883a 	mov	r5,r3
   13f78:	3009883a 	mov	r4,r6
   13f7c:	3838d43a 	srli	fp,r7,16
   13f80:	182f883a 	mov	r23,r3
   13f84:	d9800015 	stw	r6,0(sp)
   13f88:	88a3c83a 	sub	r17,r17,r2
   13f8c:	000608c0 	call	608c <__mulsi3>
   13f90:	b80b883a 	mov	r5,r23
   13f94:	b009883a 	mov	r4,r22
   13f98:	102f883a 	mov	r23,r2
   13f9c:	000608c0 	call	608c <__mulsi3>
   13fa0:	e00b883a 	mov	r5,fp
   13fa4:	b009883a 	mov	r4,r22
   13fa8:	102d883a 	mov	r22,r2
   13fac:	000608c0 	call	608c <__mulsi3>
   13fb0:	d9800017 	ldw	r6,0(sp)
   13fb4:	e00b883a 	mov	r5,fp
   13fb8:	1039883a 	mov	fp,r2
   13fbc:	3009883a 	mov	r4,r6
   13fc0:	000608c0 	call	608c <__mulsi3>
   13fc4:	b808d43a 	srli	r4,r23,16
   13fc8:	1585883a 	add	r2,r2,r22
   13fcc:	2089883a 	add	r4,r4,r2
   13fd0:	2580022e 	bgeu	r4,r22,13fdc <__umoddi3+0x450>
   13fd4:	00800074 	movhi	r2,1
   13fd8:	e0b9883a 	add	fp,fp,r2
   13fdc:	2006d43a 	srli	r3,r4,16
   13fe0:	2008943a 	slli	r4,r4,16
   13fe4:	bdffffcc 	andi	r23,r23,65535
   13fe8:	1f07883a 	add	r3,r3,fp
   13fec:	25c9883a 	add	r4,r4,r23
   13ff0:	88c03a36 	bltu	r17,r3,140dc <__umoddi3+0x550>
   13ff4:	88c03826 	beq	r17,r3,140d8 <__umoddi3+0x54c>
   13ff8:	8109c83a 	sub	r4,r16,r4
   13ffc:	8121803a 	cmpltu	r16,r16,r4
   14000:	88c7c83a 	sub	r3,r17,r3
   14004:	1c07c83a 	sub	r3,r3,r16
   14008:	1d04983a 	sll	r2,r3,r20
   1400c:	2548d83a 	srl	r4,r4,r21
   14010:	1d46d83a 	srl	r3,r3,r21
   14014:	1104b03a 	or	r2,r2,r4
   14018:	003f2806 	br	13cbc <__umoddi3+0x130>
   1401c:	a4a8983a 	sll	r20,r20,r18
   14020:	8da6d83a 	srl	r19,r17,r22
   14024:	8ca2983a 	sll	r17,r17,r18
   14028:	a02ed43a 	srli	r23,r20,16
   1402c:	9809883a 	mov	r4,r19
   14030:	85acd83a 	srl	r22,r16,r22
   14034:	b80b883a 	mov	r5,r23
   14038:	00060300 	call	6030 <__umodsi3>
   1403c:	9809883a 	mov	r4,r19
   14040:	b80b883a 	mov	r5,r23
   14044:	b46cb03a 	or	r22,r22,r17
   14048:	a57fffcc 	andi	r21,r20,65535
   1404c:	1023883a 	mov	r17,r2
   14050:	0005fcc0 	call	5fcc <__udivsi3>
   14054:	a809883a 	mov	r4,r21
   14058:	100b883a 	mov	r5,r2
   1405c:	000608c0 	call	608c <__mulsi3>
   14060:	8822943a 	slli	r17,r17,16
   14064:	b008d43a 	srli	r4,r22,16
   14068:	84a6983a 	sll	r19,r16,r18
   1406c:	8908b03a 	or	r4,r17,r4
   14070:	2080042e 	bgeu	r4,r2,14084 <__umoddi3+0x4f8>
   14074:	2509883a 	add	r4,r4,r20
   14078:	25000236 	bltu	r4,r20,14084 <__umoddi3+0x4f8>
   1407c:	2080012e 	bgeu	r4,r2,14084 <__umoddi3+0x4f8>
   14080:	2509883a 	add	r4,r4,r20
   14084:	20a1c83a 	sub	r16,r4,r2
   14088:	8009883a 	mov	r4,r16
   1408c:	b80b883a 	mov	r5,r23
   14090:	00060300 	call	6030 <__umodsi3>
   14094:	8009883a 	mov	r4,r16
   14098:	1021883a 	mov	r16,r2
   1409c:	b80b883a 	mov	r5,r23
   140a0:	8020943a 	slli	r16,r16,16
   140a4:	0005fcc0 	call	5fcc <__udivsi3>
   140a8:	100b883a 	mov	r5,r2
   140ac:	a809883a 	mov	r4,r21
   140b0:	b47fffcc 	andi	r17,r22,65535
   140b4:	000608c0 	call	608c <__mulsi3>
   140b8:	8462b03a 	or	r17,r16,r17
   140bc:	8880042e 	bgeu	r17,r2,140d0 <__umoddi3+0x544>
   140c0:	8d23883a 	add	r17,r17,r20
   140c4:	8d000236 	bltu	r17,r20,140d0 <__umoddi3+0x544>
   140c8:	8880012e 	bgeu	r17,r2,140d0 <__umoddi3+0x544>
   140cc:	8d23883a 	add	r17,r17,r20
   140d0:	88a3c83a 	sub	r17,r17,r2
   140d4:	003f2f06 	br	13d94 <__umoddi3+0x208>
   140d8:	813fc72e 	bgeu	r16,r4,13ff8 <__umoddi3+0x46c>
   140dc:	d8800117 	ldw	r2,4(sp)
   140e0:	20a7c83a 	sub	r19,r4,r2
   140e4:	24c9803a 	cmpltu	r4,r4,r19
   140e8:	2489883a 	add	r4,r4,r18
   140ec:	1907c83a 	sub	r3,r3,r4
   140f0:	9809883a 	mov	r4,r19
   140f4:	003fc006 	br	13ff8 <__umoddi3+0x46c>
   140f8:	3006d43a 	srli	r3,r6,16
   140fc:	04800404 	movi	r18,16
   14100:	003ebb06 	br	13bf0 <__umoddi3+0x64>
   14104:	3007883a 	mov	r3,r6
   14108:	003eb906 	br	13bf0 <__umoddi3+0x64>
   1410c:	3808d43a 	srli	r4,r7,16
   14110:	02000404 	movi	r8,16
   14114:	003efc06 	br	13d08 <__umoddi3+0x17c>
   14118:	a006d43a 	srli	r3,r20,16
   1411c:	04800404 	movi	r18,16
   14120:	003f1206 	br	13d6c <__umoddi3+0x1e0>
   14124:	a007883a 	mov	r3,r20
   14128:	003f1006 	br	13d6c <__umoddi3+0x1e0>
   1412c:	3809883a 	mov	r4,r7
   14130:	0011883a 	mov	r8,zero
   14134:	003ef406 	br	13d08 <__umoddi3+0x17c>
   14138:	180b883a 	mov	r5,r3
   1413c:	003f8706 	br	13f5c <__umoddi3+0x3d0>
   14140:	2839883a 	mov	fp,r5
   14144:	003f6d06 	br	13efc <__umoddi3+0x370>
   14148:	2509883a 	add	r4,r4,r20
   1414c:	003f2206 	br	13dd8 <__umoddi3+0x24c>

00014150 <__floatunsidf>:
   14150:	defffe04 	addi	sp,sp,-8
   14154:	dc000015 	stw	r16,0(sp)
   14158:	dfc00115 	stw	ra,4(sp)
   1415c:	2021883a 	mov	r16,r4
   14160:	20000f26 	beq	r4,zero,141a0 <__floatunsidf+0x50>
   14164:	00099740 	call	9974 <__clzsi2>
   14168:	00c10784 	movi	r3,1054
   1416c:	1887c83a 	sub	r3,r3,r2
   14170:	110002c8 	cmpgei	r4,r2,11
   14174:	18c1ffcc 	andi	r3,r3,2047
   14178:	2000121e 	bne	r4,zero,141c4 <__floatunsidf+0x74>
   1417c:	014002c4 	movi	r5,11
   14180:	288bc83a 	sub	r5,r5,r2
   14184:	814ad83a 	srl	r5,r16,r5
   14188:	01000434 	movhi	r4,16
   1418c:	10800544 	addi	r2,r2,21
   14190:	213fffc4 	addi	r4,r4,-1
   14194:	80a0983a 	sll	r16,r16,r2
   14198:	290a703a 	and	r5,r5,r4
   1419c:	00000206 	br	141a8 <__floatunsidf+0x58>
   141a0:	0007883a 	mov	r3,zero
   141a4:	000b883a 	mov	r5,zero
   141a8:	1806953a 	slli	r3,r3,20
   141ac:	8005883a 	mov	r2,r16
   141b0:	1946b03a 	or	r3,r3,r5
   141b4:	dfc00117 	ldw	ra,4(sp)
   141b8:	dc000017 	ldw	r16,0(sp)
   141bc:	dec00204 	addi	sp,sp,8
   141c0:	f800283a 	ret
   141c4:	117ffd44 	addi	r5,r2,-11
   141c8:	814a983a 	sll	r5,r16,r5
   141cc:	00800434 	movhi	r2,16
   141d0:	10bfffc4 	addi	r2,r2,-1
   141d4:	288a703a 	and	r5,r5,r2
   141d8:	0021883a 	mov	r16,zero
   141dc:	003ff206 	br	141a8 <__floatunsidf+0x58>

000141e0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   141e0:	defffe04 	addi	sp,sp,-8
   141e4:	dfc00115 	stw	ra,4(sp)
   141e8:	df000015 	stw	fp,0(sp)
   141ec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   141f0:	d0a00917 	ldw	r2,-32732(gp)
   141f4:	10000326 	beq	r2,zero,14204 <alt_get_errno+0x24>
   141f8:	d0a00917 	ldw	r2,-32732(gp)
   141fc:	103ee83a 	callr	r2
   14200:	00000106 	br	14208 <alt_get_errno+0x28>
   14204:	d0a73504 	addi	r2,gp,-25388
}
   14208:	e037883a 	mov	sp,fp
   1420c:	dfc00117 	ldw	ra,4(sp)
   14210:	df000017 	ldw	fp,0(sp)
   14214:	dec00204 	addi	sp,sp,8
   14218:	f800283a 	ret

0001421c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   1421c:	defffb04 	addi	sp,sp,-20
   14220:	dfc00415 	stw	ra,16(sp)
   14224:	df000315 	stw	fp,12(sp)
   14228:	df000304 	addi	fp,sp,12
   1422c:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   14230:	e0bffd17 	ldw	r2,-12(fp)
   14234:	10000916 	blt	r2,zero,1425c <close+0x40>
   14238:	e0fffd17 	ldw	r3,-12(fp)
   1423c:	1805883a 	mov	r2,r3
   14240:	1085883a 	add	r2,r2,r2
   14244:	10c5883a 	add	r2,r2,r3
   14248:	100490ba 	slli	r2,r2,2
   1424c:	00c000b4 	movhi	r3,2
   14250:	18e21104 	addi	r3,r3,-30652
   14254:	10c5883a 	add	r2,r2,r3
   14258:	00000106 	br	14260 <close+0x44>
   1425c:	0005883a 	mov	r2,zero
   14260:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
   14264:	e0bfff17 	ldw	r2,-4(fp)
   14268:	10001926 	beq	r2,zero,142d0 <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   1426c:	e0bfff17 	ldw	r2,-4(fp)
   14270:	10800017 	ldw	r2,0(r2)
   14274:	10800417 	ldw	r2,16(r2)
   14278:	10000626 	beq	r2,zero,14294 <close+0x78>
   1427c:	e0bfff17 	ldw	r2,-4(fp)
   14280:	10800017 	ldw	r2,0(r2)
   14284:	10800417 	ldw	r2,16(r2)
   14288:	e13fff17 	ldw	r4,-4(fp)
   1428c:	103ee83a 	callr	r2
   14290:	00000106 	br	14298 <close+0x7c>
   14294:	0005883a 	mov	r2,zero
   14298:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   1429c:	e13ffd17 	ldw	r4,-12(fp)
   142a0:	0014ad80 	call	14ad8 <alt_release_fd>
    if (rval < 0)
   142a4:	e0bffe17 	ldw	r2,-8(fp)
   142a8:	1000070e 	bge	r2,zero,142c8 <close+0xac>
    {
      ALT_ERRNO = -rval;
   142ac:	00141e00 	call	141e0 <alt_get_errno>
   142b0:	1007883a 	mov	r3,r2
   142b4:	e0bffe17 	ldw	r2,-8(fp)
   142b8:	0085c83a 	sub	r2,zero,r2
   142bc:	18800015 	stw	r2,0(r3)
      return -1;
   142c0:	00bfffc4 	movi	r2,-1
   142c4:	00000706 	br	142e4 <close+0xc8>
    }
    return 0;
   142c8:	0005883a 	mov	r2,zero
   142cc:	00000506 	br	142e4 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   142d0:	00141e00 	call	141e0 <alt_get_errno>
   142d4:	1007883a 	mov	r3,r2
   142d8:	00801444 	movi	r2,81
   142dc:	18800015 	stw	r2,0(r3)
    return -1;
   142e0:	00bfffc4 	movi	r2,-1
  }
}
   142e4:	e037883a 	mov	sp,fp
   142e8:	dfc00117 	ldw	ra,4(sp)
   142ec:	df000017 	ldw	fp,0(sp)
   142f0:	dec00204 	addi	sp,sp,8
   142f4:	f800283a 	ret

000142f8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   142f8:	defffc04 	addi	sp,sp,-16
   142fc:	df000315 	stw	fp,12(sp)
   14300:	df000304 	addi	fp,sp,12
   14304:	e13fff15 	stw	r4,-4(fp)
   14308:	e17ffe15 	stw	r5,-8(fp)
   1430c:	e1bffd15 	stw	r6,-12(fp)
  return len;
   14310:	e0bffd17 	ldw	r2,-12(fp)
}
   14314:	e037883a 	mov	sp,fp
   14318:	df000017 	ldw	fp,0(sp)
   1431c:	dec00104 	addi	sp,sp,4
   14320:	f800283a 	ret

00014324 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   14324:	defffd04 	addi	sp,sp,-12
   14328:	df000215 	stw	fp,8(sp)
   1432c:	df000204 	addi	fp,sp,8
   14330:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   14334:	0001883a 	nop
   14338:	e0bffe17 	ldw	r2,-8(fp)
   1433c:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   14340:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   14344:	10000226 	beq	r2,zero,14350 <_exit+0x2c>
    ALT_SIM_FAIL();
   14348:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
   1434c:	00000106 	br	14354 <_exit+0x30>
    ALT_SIM_PASS();
   14350:	002af0b0 	cmpltui	zero,zero,43970
}
   14354:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   14358:	003fff06 	br	14358 <_exit+0x34>

0001435c <alt_get_errno>:
{
   1435c:	defffe04 	addi	sp,sp,-8
   14360:	dfc00115 	stw	ra,4(sp)
   14364:	df000015 	stw	fp,0(sp)
   14368:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   1436c:	d0a00917 	ldw	r2,-32732(gp)
   14370:	10000326 	beq	r2,zero,14380 <alt_get_errno+0x24>
   14374:	d0a00917 	ldw	r2,-32732(gp)
   14378:	103ee83a 	callr	r2
   1437c:	00000106 	br	14384 <alt_get_errno+0x28>
   14380:	d0a73504 	addi	r2,gp,-25388
}
   14384:	e037883a 	mov	sp,fp
   14388:	dfc00117 	ldw	ra,4(sp)
   1438c:	df000017 	ldw	fp,0(sp)
   14390:	dec00204 	addi	sp,sp,8
   14394:	f800283a 	ret

00014398 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   14398:	defffb04 	addi	sp,sp,-20
   1439c:	dfc00415 	stw	ra,16(sp)
   143a0:	df000315 	stw	fp,12(sp)
   143a4:	df000304 	addi	fp,sp,12
   143a8:	e13ffe15 	stw	r4,-8(fp)
   143ac:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   143b0:	e0bffe17 	ldw	r2,-8(fp)
   143b4:	10000916 	blt	r2,zero,143dc <fstat+0x44>
   143b8:	e0fffe17 	ldw	r3,-8(fp)
   143bc:	1805883a 	mov	r2,r3
   143c0:	1085883a 	add	r2,r2,r2
   143c4:	10c5883a 	add	r2,r2,r3
   143c8:	100490ba 	slli	r2,r2,2
   143cc:	00c000b4 	movhi	r3,2
   143d0:	18e21104 	addi	r3,r3,-30652
   143d4:	10c5883a 	add	r2,r2,r3
   143d8:	00000106 	br	143e0 <fstat+0x48>
   143dc:	0005883a 	mov	r2,zero
   143e0:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   143e4:	e0bfff17 	ldw	r2,-4(fp)
   143e8:	10001026 	beq	r2,zero,1442c <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   143ec:	e0bfff17 	ldw	r2,-4(fp)
   143f0:	10800017 	ldw	r2,0(r2)
   143f4:	10800817 	ldw	r2,32(r2)
   143f8:	10000726 	beq	r2,zero,14418 <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
   143fc:	e0bfff17 	ldw	r2,-4(fp)
   14400:	10800017 	ldw	r2,0(r2)
   14404:	10800817 	ldw	r2,32(r2)
   14408:	e17ffd17 	ldw	r5,-12(fp)
   1440c:	e13fff17 	ldw	r4,-4(fp)
   14410:	103ee83a 	callr	r2
   14414:	00000a06 	br	14440 <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   14418:	e0bffd17 	ldw	r2,-12(fp)
   1441c:	00c80004 	movi	r3,8192
   14420:	10c00115 	stw	r3,4(r2)
      return 0;
   14424:	0005883a 	mov	r2,zero
   14428:	00000506 	br	14440 <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   1442c:	001435c0 	call	1435c <alt_get_errno>
   14430:	1007883a 	mov	r3,r2
   14434:	00801444 	movi	r2,81
   14438:	18800015 	stw	r2,0(r3)
    return -1;
   1443c:	00bfffc4 	movi	r2,-1
  }
}
   14440:	e037883a 	mov	sp,fp
   14444:	dfc00117 	ldw	ra,4(sp)
   14448:	df000017 	ldw	fp,0(sp)
   1444c:	dec00204 	addi	sp,sp,8
   14450:	f800283a 	ret

00014454 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
   14454:	deffff04 	addi	sp,sp,-4
   14458:	df000015 	stw	fp,0(sp)
   1445c:	d839883a 	mov	fp,sp
  return 0;
   14460:	0005883a 	mov	r2,zero
}
   14464:	e037883a 	mov	sp,fp
   14468:	df000017 	ldw	fp,0(sp)
   1446c:	dec00104 	addi	sp,sp,4
   14470:	f800283a 	ret

00014474 <alt_get_errno>:
{
   14474:	defffe04 	addi	sp,sp,-8
   14478:	dfc00115 	stw	ra,4(sp)
   1447c:	df000015 	stw	fp,0(sp)
   14480:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   14484:	d0a00917 	ldw	r2,-32732(gp)
   14488:	10000326 	beq	r2,zero,14498 <alt_get_errno+0x24>
   1448c:	d0a00917 	ldw	r2,-32732(gp)
   14490:	103ee83a 	callr	r2
   14494:	00000106 	br	1449c <alt_get_errno+0x28>
   14498:	d0a73504 	addi	r2,gp,-25388
}
   1449c:	e037883a 	mov	sp,fp
   144a0:	dfc00117 	ldw	ra,4(sp)
   144a4:	df000017 	ldw	fp,0(sp)
   144a8:	dec00204 	addi	sp,sp,8
   144ac:	f800283a 	ret

000144b0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   144b0:	deffea04 	addi	sp,sp,-88
   144b4:	dfc01515 	stw	ra,84(sp)
   144b8:	df001415 	stw	fp,80(sp)
   144bc:	df001404 	addi	fp,sp,80
   144c0:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   144c4:	e0bfec17 	ldw	r2,-80(fp)
   144c8:	10000916 	blt	r2,zero,144f0 <isatty+0x40>
   144cc:	e0ffec17 	ldw	r3,-80(fp)
   144d0:	1805883a 	mov	r2,r3
   144d4:	1085883a 	add	r2,r2,r2
   144d8:	10c5883a 	add	r2,r2,r3
   144dc:	100490ba 	slli	r2,r2,2
   144e0:	00c000b4 	movhi	r3,2
   144e4:	18e21104 	addi	r3,r3,-30652
   144e8:	10c5883a 	add	r2,r2,r3
   144ec:	00000106 	br	144f4 <isatty+0x44>
   144f0:	0005883a 	mov	r2,zero
   144f4:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   144f8:	e0bfff17 	ldw	r2,-4(fp)
   144fc:	10000e26 	beq	r2,zero,14538 <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   14500:	e0bfff17 	ldw	r2,-4(fp)
   14504:	10800017 	ldw	r2,0(r2)
   14508:	10800817 	ldw	r2,32(r2)
   1450c:	1000021e 	bne	r2,zero,14518 <isatty+0x68>
    {
      return 1;
   14510:	00800044 	movi	r2,1
   14514:	00000d06 	br	1454c <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   14518:	e0bfed04 	addi	r2,fp,-76
   1451c:	100b883a 	mov	r5,r2
   14520:	e13fec17 	ldw	r4,-80(fp)
   14524:	00143980 	call	14398 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   14528:	e0bfee17 	ldw	r2,-72(fp)
   1452c:	10880020 	cmpeqi	r2,r2,8192
   14530:	10803fcc 	andi	r2,r2,255
   14534:	00000506 	br	1454c <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   14538:	00144740 	call	14474 <alt_get_errno>
   1453c:	1007883a 	mov	r3,r2
   14540:	00801444 	movi	r2,81
   14544:	18800015 	stw	r2,0(r3)
    return 0;
   14548:	0005883a 	mov	r2,zero
  }
}
   1454c:	e037883a 	mov	sp,fp
   14550:	dfc00117 	ldw	ra,4(sp)
   14554:	df000017 	ldw	fp,0(sp)
   14558:	dec00204 	addi	sp,sp,8
   1455c:	f800283a 	ret

00014560 <alt_get_errno>:
{
   14560:	defffe04 	addi	sp,sp,-8
   14564:	dfc00115 	stw	ra,4(sp)
   14568:	df000015 	stw	fp,0(sp)
   1456c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   14570:	d0a00917 	ldw	r2,-32732(gp)
   14574:	10000326 	beq	r2,zero,14584 <alt_get_errno+0x24>
   14578:	d0a00917 	ldw	r2,-32732(gp)
   1457c:	103ee83a 	callr	r2
   14580:	00000106 	br	14588 <alt_get_errno+0x28>
   14584:	d0a73504 	addi	r2,gp,-25388
}
   14588:	e037883a 	mov	sp,fp
   1458c:	dfc00117 	ldw	ra,4(sp)
   14590:	df000017 	ldw	fp,0(sp)
   14594:	dec00204 	addi	sp,sp,8
   14598:	f800283a 	ret

0001459c <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
   1459c:	defffb04 	addi	sp,sp,-20
   145a0:	dfc00415 	stw	ra,16(sp)
   145a4:	df000315 	stw	fp,12(sp)
   145a8:	df000304 	addi	fp,sp,12
   145ac:	e13ffe15 	stw	r4,-8(fp)
   145b0:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
   145b4:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
   145b8:	e0bffe17 	ldw	r2,-8(fp)
   145bc:	00802e16 	blt	zero,r2,14678 <kill+0xdc>
  {
    switch (sig)
   145c0:	e0bffd17 	ldw	r2,-12(fp)
   145c4:	10800828 	cmpgeui	r2,r2,32
   145c8:	1000281e 	bne	r2,zero,1466c <kill+0xd0>
   145cc:	e0bffd17 	ldw	r2,-12(fp)
   145d0:	100690ba 	slli	r3,r2,2
   145d4:	00800074 	movhi	r2,1
   145d8:	1885883a 	add	r2,r3,r2
   145dc:	10917917 	ldw	r2,17892(r2)
   145e0:	1000683a 	jmp	r2
   145e4:	0001468c 	andi	zero,zero,1306
   145e8:	0001466c 	andhi	zero,zero,1305
   145ec:	0001466c 	andhi	zero,zero,1305
   145f0:	00014664 	muli	zero,zero,1305
   145f4:	00014664 	muli	zero,zero,1305
   145f8:	00014664 	muli	zero,zero,1305
   145fc:	00014664 	muli	zero,zero,1305
   14600:	0001466c 	andhi	zero,zero,1305
   14604:	00014664 	muli	zero,zero,1305
   14608:	00014664 	muli	zero,zero,1305
   1460c:	00014664 	muli	zero,zero,1305
   14610:	00014664 	muli	zero,zero,1305
   14614:	00014664 	muli	zero,zero,1305
   14618:	00014664 	muli	zero,zero,1305
   1461c:	00014664 	muli	zero,zero,1305
   14620:	00014664 	muli	zero,zero,1305
   14624:	0001468c 	andi	zero,zero,1306
   14628:	0001466c 	andhi	zero,zero,1305
   1462c:	0001466c 	andhi	zero,zero,1305
   14630:	0001466c 	andhi	zero,zero,1305
   14634:	0001468c 	andi	zero,zero,1306
   14638:	0001466c 	andhi	zero,zero,1305
   1463c:	0001466c 	andhi	zero,zero,1305
   14640:	00014664 	muli	zero,zero,1305
   14644:	00014664 	muli	zero,zero,1305
   14648:	00014664 	muli	zero,zero,1305
   1464c:	00014664 	muli	zero,zero,1305
   14650:	00014664 	muli	zero,zero,1305
   14654:	0001466c 	andhi	zero,zero,1305
   14658:	0001466c 	andhi	zero,zero,1305
   1465c:	00014664 	muli	zero,zero,1305
   14660:	00014664 	muli	zero,zero,1305
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
   14664:	0009883a 	mov	r4,zero
   14668:	00143240 	call	14324 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
   1466c:	00800584 	movi	r2,22
   14670:	e0bfff15 	stw	r2,-4(fp)
   14674:	00000606 	br	14690 <kill+0xf4>
    }
  }

  else if (pid > 0)
   14678:	e0bffe17 	ldw	r2,-8(fp)
   1467c:	0080040e 	bge	zero,r2,14690 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
   14680:	008000c4 	movi	r2,3
   14684:	e0bfff15 	stw	r2,-4(fp)
   14688:	00000106 	br	14690 <kill+0xf4>
      break;
   1468c:	0001883a 	nop
  }

  if (status)
   14690:	e0bfff17 	ldw	r2,-4(fp)
   14694:	10000626 	beq	r2,zero,146b0 <kill+0x114>
  {
    ALT_ERRNO = status;
   14698:	00145600 	call	14560 <alt_get_errno>
   1469c:	1007883a 	mov	r3,r2
   146a0:	e0bfff17 	ldw	r2,-4(fp)
   146a4:	18800015 	stw	r2,0(r3)
    return -1;
   146a8:	00bfffc4 	movi	r2,-1
   146ac:	00000106 	br	146b4 <kill+0x118>
  }

  return 0;
   146b0:	0005883a 	mov	r2,zero
}
   146b4:	e037883a 	mov	sp,fp
   146b8:	dfc00117 	ldw	ra,4(sp)
   146bc:	df000017 	ldw	fp,0(sp)
   146c0:	dec00204 	addi	sp,sp,8
   146c4:	f800283a 	ret

000146c8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   146c8:	defffc04 	addi	sp,sp,-16
   146cc:	df000315 	stw	fp,12(sp)
   146d0:	df000304 	addi	fp,sp,12
   146d4:	e13fff15 	stw	r4,-4(fp)
   146d8:	e17ffe15 	stw	r5,-8(fp)
   146dc:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
   146e0:	e0fffe17 	ldw	r3,-8(fp)
   146e4:	e0bfff17 	ldw	r2,-4(fp)
   146e8:	18800c26 	beq	r3,r2,1471c <alt_load_section+0x54>
  {
    while( to != end )
   146ec:	00000806 	br	14710 <alt_load_section+0x48>
    {
      *to++ = *from++;
   146f0:	e0ffff17 	ldw	r3,-4(fp)
   146f4:	18800104 	addi	r2,r3,4
   146f8:	e0bfff15 	stw	r2,-4(fp)
   146fc:	e0bffe17 	ldw	r2,-8(fp)
   14700:	11000104 	addi	r4,r2,4
   14704:	e13ffe15 	stw	r4,-8(fp)
   14708:	18c00017 	ldw	r3,0(r3)
   1470c:	10c00015 	stw	r3,0(r2)
    while( to != end )
   14710:	e0fffe17 	ldw	r3,-8(fp)
   14714:	e0bffd17 	ldw	r2,-12(fp)
   14718:	18bff51e 	bne	r3,r2,146f0 <alt_load_section+0x28>
    }
  }
}
   1471c:	0001883a 	nop
   14720:	e037883a 	mov	sp,fp
   14724:	df000017 	ldw	fp,0(sp)
   14728:	dec00104 	addi	sp,sp,4
   1472c:	f800283a 	ret

00014730 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   14730:	defffe04 	addi	sp,sp,-8
   14734:	dfc00115 	stw	ra,4(sp)
   14738:	df000015 	stw	fp,0(sp)
   1473c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   14740:	018000b4 	movhi	r6,2
   14744:	31a6c504 	addi	r6,r6,-25836
   14748:	01400074 	movhi	r5,1
   1474c:	295fa104 	addi	r5,r5,32388
   14750:	010000b4 	movhi	r4,2
   14754:	2126c504 	addi	r4,r4,-25836
   14758:	00146c80 	call	146c8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   1475c:	01800034 	movhi	r6,0
   14760:	31808a04 	addi	r6,r6,552
   14764:	01400034 	movhi	r5,0
   14768:	29400804 	addi	r5,r5,32
   1476c:	01000034 	movhi	r4,0
   14770:	21000804 	addi	r4,r4,32
   14774:	00146c80 	call	146c8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   14778:	01800074 	movhi	r6,1
   1477c:	319fa104 	addi	r6,r6,32388
   14780:	01400074 	movhi	r5,1
   14784:	295c8904 	addi	r5,r5,29220
   14788:	01000074 	movhi	r4,1
   1478c:	211c8904 	addi	r4,r4,29220
   14790:	00146c80 	call	146c8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   14794:	00163a40 	call	163a4 <alt_dcache_flush_all>
  alt_icache_flush_all();
   14798:	00166000 	call	16600 <alt_icache_flush_all>
}
   1479c:	0001883a 	nop
   147a0:	e037883a 	mov	sp,fp
   147a4:	dfc00117 	ldw	ra,4(sp)
   147a8:	df000017 	ldw	fp,0(sp)
   147ac:	dec00204 	addi	sp,sp,8
   147b0:	f800283a 	ret

000147b4 <alt_get_errno>:
{
   147b4:	defffe04 	addi	sp,sp,-8
   147b8:	dfc00115 	stw	ra,4(sp)
   147bc:	df000015 	stw	fp,0(sp)
   147c0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   147c4:	d0a00917 	ldw	r2,-32732(gp)
   147c8:	10000326 	beq	r2,zero,147d8 <alt_get_errno+0x24>
   147cc:	d0a00917 	ldw	r2,-32732(gp)
   147d0:	103ee83a 	callr	r2
   147d4:	00000106 	br	147dc <alt_get_errno+0x28>
   147d8:	d0a73504 	addi	r2,gp,-25388
}
   147dc:	e037883a 	mov	sp,fp
   147e0:	dfc00117 	ldw	ra,4(sp)
   147e4:	df000017 	ldw	fp,0(sp)
   147e8:	dec00204 	addi	sp,sp,8
   147ec:	f800283a 	ret

000147f0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   147f0:	defff904 	addi	sp,sp,-28
   147f4:	dfc00615 	stw	ra,24(sp)
   147f8:	df000515 	stw	fp,20(sp)
   147fc:	df000504 	addi	fp,sp,20
   14800:	e13ffd15 	stw	r4,-12(fp)
   14804:	e17ffc15 	stw	r5,-16(fp)
   14808:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   1480c:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   14810:	e0bffd17 	ldw	r2,-12(fp)
   14814:	10000916 	blt	r2,zero,1483c <lseek+0x4c>
   14818:	e0fffd17 	ldw	r3,-12(fp)
   1481c:	1805883a 	mov	r2,r3
   14820:	1085883a 	add	r2,r2,r2
   14824:	10c5883a 	add	r2,r2,r3
   14828:	100490ba 	slli	r2,r2,2
   1482c:	00c000b4 	movhi	r3,2
   14830:	18e21104 	addi	r3,r3,-30652
   14834:	10c5883a 	add	r2,r2,r3
   14838:	00000106 	br	14840 <lseek+0x50>
   1483c:	0005883a 	mov	r2,zero
   14840:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
   14844:	e0bffe17 	ldw	r2,-8(fp)
   14848:	10001026 	beq	r2,zero,1488c <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   1484c:	e0bffe17 	ldw	r2,-8(fp)
   14850:	10800017 	ldw	r2,0(r2)
   14854:	10800717 	ldw	r2,28(r2)
   14858:	10000926 	beq	r2,zero,14880 <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   1485c:	e0bffe17 	ldw	r2,-8(fp)
   14860:	10800017 	ldw	r2,0(r2)
   14864:	10800717 	ldw	r2,28(r2)
   14868:	e1bffb17 	ldw	r6,-20(fp)
   1486c:	e17ffc17 	ldw	r5,-16(fp)
   14870:	e13ffe17 	ldw	r4,-8(fp)
   14874:	103ee83a 	callr	r2
   14878:	e0bfff15 	stw	r2,-4(fp)
   1487c:	00000506 	br	14894 <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   14880:	00bfde84 	movi	r2,-134
   14884:	e0bfff15 	stw	r2,-4(fp)
   14888:	00000206 	br	14894 <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
   1488c:	00bfebc4 	movi	r2,-81
   14890:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
   14894:	e0bfff17 	ldw	r2,-4(fp)
   14898:	1000070e 	bge	r2,zero,148b8 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
   1489c:	00147b40 	call	147b4 <alt_get_errno>
   148a0:	1007883a 	mov	r3,r2
   148a4:	e0bfff17 	ldw	r2,-4(fp)
   148a8:	0085c83a 	sub	r2,zero,r2
   148ac:	18800015 	stw	r2,0(r3)
    rc = -1;
   148b0:	00bfffc4 	movi	r2,-1
   148b4:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
   148b8:	e0bfff17 	ldw	r2,-4(fp)
}
   148bc:	e037883a 	mov	sp,fp
   148c0:	dfc00117 	ldw	ra,4(sp)
   148c4:	df000017 	ldw	fp,0(sp)
   148c8:	dec00204 	addi	sp,sp,8
   148cc:	f800283a 	ret

000148d0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   148d0:	defffd04 	addi	sp,sp,-12
   148d4:	dfc00215 	stw	ra,8(sp)
   148d8:	df000115 	stw	fp,4(sp)
   148dc:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   148e0:	0009883a 	mov	r4,zero
   148e4:	0014d740 	call	14d74 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   148e8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   148ec:	0014db00 	call	14db0 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   148f0:	01800074 	movhi	r6,1
   148f4:	319f8404 	addi	r6,r6,32272
   148f8:	01400074 	movhi	r5,1
   148fc:	295f8404 	addi	r5,r5,32272
   14900:	01000074 	movhi	r4,1
   14904:	211f8404 	addi	r4,r4,32272
   14908:	00166f40 	call	166f4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   1490c:	00164a80 	call	164a8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   14910:	01000074 	movhi	r4,1
   14914:	21194304 	addi	r4,r4,25868
   14918:	0016fb40 	call	16fb4 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   1491c:	d0a73717 	ldw	r2,-25380(gp)
   14920:	d0e73817 	ldw	r3,-25376(gp)
   14924:	d1273917 	ldw	r4,-25372(gp)
   14928:	200d883a 	mov	r6,r4
   1492c:	180b883a 	mov	r5,r3
   14930:	1009883a 	mov	r4,r2
   14934:	0001e0c0 	call	1e0c <main>
   14938:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   1493c:	01000044 	movi	r4,1
   14940:	001421c0 	call	1421c <close>
  exit (result);
   14944:	e13fff17 	ldw	r4,-4(fp)
   14948:	0016fc80 	call	16fc8 <exit>

0001494c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   1494c:	defffe04 	addi	sp,sp,-8
   14950:	df000115 	stw	fp,4(sp)
   14954:	df000104 	addi	fp,sp,4
   14958:	e13fff15 	stw	r4,-4(fp)
}
   1495c:	0001883a 	nop
   14960:	e037883a 	mov	sp,fp
   14964:	df000017 	ldw	fp,0(sp)
   14968:	dec00104 	addi	sp,sp,4
   1496c:	f800283a 	ret

00014970 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   14970:	defffe04 	addi	sp,sp,-8
   14974:	df000115 	stw	fp,4(sp)
   14978:	df000104 	addi	fp,sp,4
   1497c:	e13fff15 	stw	r4,-4(fp)
}
   14980:	0001883a 	nop
   14984:	e037883a 	mov	sp,fp
   14988:	df000017 	ldw	fp,0(sp)
   1498c:	dec00104 	addi	sp,sp,4
   14990:	f800283a 	ret

00014994 <alt_get_errno>:
{
   14994:	defffe04 	addi	sp,sp,-8
   14998:	dfc00115 	stw	ra,4(sp)
   1499c:	df000015 	stw	fp,0(sp)
   149a0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   149a4:	d0a00917 	ldw	r2,-32732(gp)
   149a8:	10000326 	beq	r2,zero,149b8 <alt_get_errno+0x24>
   149ac:	d0a00917 	ldw	r2,-32732(gp)
   149b0:	103ee83a 	callr	r2
   149b4:	00000106 	br	149bc <alt_get_errno+0x28>
   149b8:	d0a73504 	addi	r2,gp,-25388
}
   149bc:	e037883a 	mov	sp,fp
   149c0:	dfc00117 	ldw	ra,4(sp)
   149c4:	df000017 	ldw	fp,0(sp)
   149c8:	dec00204 	addi	sp,sp,8
   149cc:	f800283a 	ret

000149d0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   149d0:	defff904 	addi	sp,sp,-28
   149d4:	dfc00615 	stw	ra,24(sp)
   149d8:	df000515 	stw	fp,20(sp)
   149dc:	df000504 	addi	fp,sp,20
   149e0:	e13ffd15 	stw	r4,-12(fp)
   149e4:	e17ffc15 	stw	r5,-16(fp)
   149e8:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   149ec:	e0bffd17 	ldw	r2,-12(fp)
   149f0:	10000916 	blt	r2,zero,14a18 <read+0x48>
   149f4:	e0fffd17 	ldw	r3,-12(fp)
   149f8:	1805883a 	mov	r2,r3
   149fc:	1085883a 	add	r2,r2,r2
   14a00:	10c5883a 	add	r2,r2,r3
   14a04:	100490ba 	slli	r2,r2,2
   14a08:	00c000b4 	movhi	r3,2
   14a0c:	18e21104 	addi	r3,r3,-30652
   14a10:	10c5883a 	add	r2,r2,r3
   14a14:	00000106 	br	14a1c <read+0x4c>
   14a18:	0005883a 	mov	r2,zero
   14a1c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   14a20:	e0bfff17 	ldw	r2,-4(fp)
   14a24:	10002226 	beq	r2,zero,14ab0 <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   14a28:	e0bfff17 	ldw	r2,-4(fp)
   14a2c:	10800217 	ldw	r2,8(r2)
   14a30:	108000cc 	andi	r2,r2,3
   14a34:	10800060 	cmpeqi	r2,r2,1
   14a38:	1000181e 	bne	r2,zero,14a9c <read+0xcc>
        (fd->dev->read))
   14a3c:	e0bfff17 	ldw	r2,-4(fp)
   14a40:	10800017 	ldw	r2,0(r2)
   14a44:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   14a48:	10001426 	beq	r2,zero,14a9c <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   14a4c:	e0bfff17 	ldw	r2,-4(fp)
   14a50:	10800017 	ldw	r2,0(r2)
   14a54:	10800517 	ldw	r2,20(r2)
   14a58:	e0fffb17 	ldw	r3,-20(fp)
   14a5c:	180d883a 	mov	r6,r3
   14a60:	e17ffc17 	ldw	r5,-16(fp)
   14a64:	e13fff17 	ldw	r4,-4(fp)
   14a68:	103ee83a 	callr	r2
   14a6c:	e0bffe15 	stw	r2,-8(fp)
   14a70:	e0bffe17 	ldw	r2,-8(fp)
   14a74:	1000070e 	bge	r2,zero,14a94 <read+0xc4>
        {
          ALT_ERRNO = -rval;
   14a78:	00149940 	call	14994 <alt_get_errno>
   14a7c:	1007883a 	mov	r3,r2
   14a80:	e0bffe17 	ldw	r2,-8(fp)
   14a84:	0085c83a 	sub	r2,zero,r2
   14a88:	18800015 	stw	r2,0(r3)
          return -1;
   14a8c:	00bfffc4 	movi	r2,-1
   14a90:	00000c06 	br	14ac4 <read+0xf4>
        }
        return rval;
   14a94:	e0bffe17 	ldw	r2,-8(fp)
   14a98:	00000a06 	br	14ac4 <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
   14a9c:	00149940 	call	14994 <alt_get_errno>
   14aa0:	1007883a 	mov	r3,r2
   14aa4:	00800344 	movi	r2,13
   14aa8:	18800015 	stw	r2,0(r3)
   14aac:	00000406 	br	14ac0 <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   14ab0:	00149940 	call	14994 <alt_get_errno>
   14ab4:	1007883a 	mov	r3,r2
   14ab8:	00801444 	movi	r2,81
   14abc:	18800015 	stw	r2,0(r3)
  }
  return -1;
   14ac0:	00bfffc4 	movi	r2,-1
}
   14ac4:	e037883a 	mov	sp,fp
   14ac8:	dfc00117 	ldw	ra,4(sp)
   14acc:	df000017 	ldw	fp,0(sp)
   14ad0:	dec00204 	addi	sp,sp,8
   14ad4:	f800283a 	ret

00014ad8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   14ad8:	defffe04 	addi	sp,sp,-8
   14adc:	df000115 	stw	fp,4(sp)
   14ae0:	df000104 	addi	fp,sp,4
   14ae4:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   14ae8:	e0bfff17 	ldw	r2,-4(fp)
   14aec:	108000d0 	cmplti	r2,r2,3
   14af0:	1000101e 	bne	r2,zero,14b34 <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
   14af4:	e0ffff17 	ldw	r3,-4(fp)
   14af8:	1805883a 	mov	r2,r3
   14afc:	1085883a 	add	r2,r2,r2
   14b00:	10c5883a 	add	r2,r2,r3
   14b04:	100490ba 	slli	r2,r2,2
   14b08:	00c000b4 	movhi	r3,2
   14b0c:	10c7883a 	add	r3,r2,r3
   14b10:	18221315 	stw	zero,-30644(r3)
    alt_fd_list[fd].dev      = 0;
   14b14:	e0ffff17 	ldw	r3,-4(fp)
   14b18:	1805883a 	mov	r2,r3
   14b1c:	1085883a 	add	r2,r2,r2
   14b20:	10c5883a 	add	r2,r2,r3
   14b24:	100490ba 	slli	r2,r2,2
   14b28:	00c000b4 	movhi	r3,2
   14b2c:	10c7883a 	add	r3,r2,r3
   14b30:	18221115 	stw	zero,-30652(r3)
  }
}
   14b34:	0001883a 	nop
   14b38:	e037883a 	mov	sp,fp
   14b3c:	df000017 	ldw	fp,0(sp)
   14b40:	dec00104 	addi	sp,sp,4
   14b44:	f800283a 	ret

00014b48 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   14b48:	defff904 	addi	sp,sp,-28
   14b4c:	df000615 	stw	fp,24(sp)
   14b50:	df000604 	addi	fp,sp,24
   14b54:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
   14b58:	0005303a 	rdctl	r2,status
   14b5c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   14b60:	e0fffd17 	ldw	r3,-12(fp)
   14b64:	00bfff84 	movi	r2,-2
   14b68:	1884703a 	and	r2,r3,r2
   14b6c:	1001703a 	wrctl	status,r2
  return context;
   14b70:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   14b74:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   14b78:	d0a00a17 	ldw	r2,-32728(gp)
   14b7c:	10c000c4 	addi	r3,r2,3
   14b80:	00bfff04 	movi	r2,-4
   14b84:	1884703a 	and	r2,r3,r2
   14b88:	d0a00a15 	stw	r2,-32728(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   14b8c:	d0e00a17 	ldw	r3,-32728(gp)
   14b90:	e0bffa17 	ldw	r2,-24(fp)
   14b94:	1887883a 	add	r3,r3,r2
   14b98:	00820034 	movhi	r2,2048
   14b9c:	10800004 	addi	r2,r2,0
   14ba0:	10c0072e 	bgeu	r2,r3,14bc0 <sbrk+0x78>
   14ba4:	e0bfff17 	ldw	r2,-4(fp)
   14ba8:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   14bac:	e0bffc17 	ldw	r2,-16(fp)
   14bb0:	1001703a 	wrctl	status,r2
}
   14bb4:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   14bb8:	00bfffc4 	movi	r2,-1
   14bbc:	00000c06 	br	14bf0 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   14bc0:	d0a00a17 	ldw	r2,-32728(gp)
   14bc4:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
   14bc8:	d0e00a17 	ldw	r3,-32728(gp)
   14bcc:	e0bffa17 	ldw	r2,-24(fp)
   14bd0:	1885883a 	add	r2,r3,r2
   14bd4:	d0a00a15 	stw	r2,-32728(gp)
   14bd8:	e0bfff17 	ldw	r2,-4(fp)
   14bdc:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   14be0:	e0bffb17 	ldw	r2,-20(fp)
   14be4:	1001703a 	wrctl	status,r2
}
   14be8:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   14bec:	e0bffe17 	ldw	r2,-8(fp)
} 
   14bf0:	e037883a 	mov	sp,fp
   14bf4:	df000017 	ldw	fp,0(sp)
   14bf8:	dec00104 	addi	sp,sp,4
   14bfc:	f800283a 	ret

00014c00 <alt_get_errno>:
{
   14c00:	defffe04 	addi	sp,sp,-8
   14c04:	dfc00115 	stw	ra,4(sp)
   14c08:	df000015 	stw	fp,0(sp)
   14c0c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   14c10:	d0a00917 	ldw	r2,-32732(gp)
   14c14:	10000326 	beq	r2,zero,14c24 <alt_get_errno+0x24>
   14c18:	d0a00917 	ldw	r2,-32732(gp)
   14c1c:	103ee83a 	callr	r2
   14c20:	00000106 	br	14c28 <alt_get_errno+0x28>
   14c24:	d0a73504 	addi	r2,gp,-25388
}
   14c28:	e037883a 	mov	sp,fp
   14c2c:	dfc00117 	ldw	ra,4(sp)
   14c30:	df000017 	ldw	fp,0(sp)
   14c34:	dec00204 	addi	sp,sp,8
   14c38:	f800283a 	ret

00014c3c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   14c3c:	defff904 	addi	sp,sp,-28
   14c40:	dfc00615 	stw	ra,24(sp)
   14c44:	df000515 	stw	fp,20(sp)
   14c48:	df000504 	addi	fp,sp,20
   14c4c:	e13ffd15 	stw	r4,-12(fp)
   14c50:	e17ffc15 	stw	r5,-16(fp)
   14c54:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   14c58:	e0bffd17 	ldw	r2,-12(fp)
   14c5c:	10000916 	blt	r2,zero,14c84 <write+0x48>
   14c60:	e0fffd17 	ldw	r3,-12(fp)
   14c64:	1805883a 	mov	r2,r3
   14c68:	1085883a 	add	r2,r2,r2
   14c6c:	10c5883a 	add	r2,r2,r3
   14c70:	100490ba 	slli	r2,r2,2
   14c74:	00c000b4 	movhi	r3,2
   14c78:	18e21104 	addi	r3,r3,-30652
   14c7c:	10c5883a 	add	r2,r2,r3
   14c80:	00000106 	br	14c88 <write+0x4c>
   14c84:	0005883a 	mov	r2,zero
   14c88:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   14c8c:	e0bfff17 	ldw	r2,-4(fp)
   14c90:	10002126 	beq	r2,zero,14d18 <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   14c94:	e0bfff17 	ldw	r2,-4(fp)
   14c98:	10800217 	ldw	r2,8(r2)
   14c9c:	108000cc 	andi	r2,r2,3
   14ca0:	10001826 	beq	r2,zero,14d04 <write+0xc8>
   14ca4:	e0bfff17 	ldw	r2,-4(fp)
   14ca8:	10800017 	ldw	r2,0(r2)
   14cac:	10800617 	ldw	r2,24(r2)
   14cb0:	10001426 	beq	r2,zero,14d04 <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   14cb4:	e0bfff17 	ldw	r2,-4(fp)
   14cb8:	10800017 	ldw	r2,0(r2)
   14cbc:	10800617 	ldw	r2,24(r2)
   14cc0:	e0fffb17 	ldw	r3,-20(fp)
   14cc4:	180d883a 	mov	r6,r3
   14cc8:	e17ffc17 	ldw	r5,-16(fp)
   14ccc:	e13fff17 	ldw	r4,-4(fp)
   14cd0:	103ee83a 	callr	r2
   14cd4:	e0bffe15 	stw	r2,-8(fp)
   14cd8:	e0bffe17 	ldw	r2,-8(fp)
   14cdc:	1000070e 	bge	r2,zero,14cfc <write+0xc0>
      {
        ALT_ERRNO = -rval;
   14ce0:	0014c000 	call	14c00 <alt_get_errno>
   14ce4:	1007883a 	mov	r3,r2
   14ce8:	e0bffe17 	ldw	r2,-8(fp)
   14cec:	0085c83a 	sub	r2,zero,r2
   14cf0:	18800015 	stw	r2,0(r3)
        return -1;
   14cf4:	00bfffc4 	movi	r2,-1
   14cf8:	00000c06 	br	14d2c <write+0xf0>
      }
      return rval;
   14cfc:	e0bffe17 	ldw	r2,-8(fp)
   14d00:	00000a06 	br	14d2c <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
   14d04:	0014c000 	call	14c00 <alt_get_errno>
   14d08:	1007883a 	mov	r3,r2
   14d0c:	00800344 	movi	r2,13
   14d10:	18800015 	stw	r2,0(r3)
   14d14:	00000406 	br	14d28 <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   14d18:	0014c000 	call	14c00 <alt_get_errno>
   14d1c:	1007883a 	mov	r3,r2
   14d20:	00801444 	movi	r2,81
   14d24:	18800015 	stw	r2,0(r3)
  }
  return -1;
   14d28:	00bfffc4 	movi	r2,-1
}
   14d2c:	e037883a 	mov	sp,fp
   14d30:	dfc00117 	ldw	ra,4(sp)
   14d34:	df000017 	ldw	fp,0(sp)
   14d38:	dec00204 	addi	sp,sp,8
   14d3c:	f800283a 	ret

00014d40 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   14d40:	defffd04 	addi	sp,sp,-12
   14d44:	dfc00215 	stw	ra,8(sp)
   14d48:	df000115 	stw	fp,4(sp)
   14d4c:	df000104 	addi	fp,sp,4
   14d50:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   14d54:	d1600604 	addi	r5,gp,-32744
   14d58:	e13fff17 	ldw	r4,-4(fp)
   14d5c:	00164000 	call	16400 <alt_dev_llist_insert>
}
   14d60:	e037883a 	mov	sp,fp
   14d64:	dfc00117 	ldw	ra,4(sp)
   14d68:	df000017 	ldw	fp,0(sp)
   14d6c:	dec00204 	addi	sp,sp,8
   14d70:	f800283a 	ret

00014d74 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   14d74:	defffd04 	addi	sp,sp,-12
   14d78:	dfc00215 	stw	ra,8(sp)
   14d7c:	df000115 	stw	fp,4(sp)
   14d80:	df000104 	addi	fp,sp,4
   14d84:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2, Nios2);
   14d88:	0016d380 	call	16d38 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   14d8c:	00800044 	movi	r2,1
   14d90:	1001703a 	wrctl	status,r2
}
   14d94:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
   14d98:	0001883a 	nop
   14d9c:	e037883a 	mov	sp,fp
   14da0:	dfc00117 	ldw	ra,4(sp)
   14da4:	df000017 	ldw	fp,0(sp)
   14da8:	dec00204 	addi	sp,sp,8
   14dac:	f800283a 	ret

00014db0 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   14db0:	defffe04 	addi	sp,sp,-8
   14db4:	dfc00115 	stw	ra,4(sp)
   14db8:	df000015 	stw	fp,0(sp)
   14dbc:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER, Interval_Timer);
   14dc0:	01c00204 	movi	r7,8
   14dc4:	01800144 	movi	r6,5
   14dc8:	000b883a 	mov	r5,zero
   14dcc:	013fc834 	movhi	r4,65312
   14dd0:	21080004 	addi	r4,r4,8192
   14dd4:	001593c0 	call	1593c <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER_2, Interval_Timer_2);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, JTAG_UART);
   14dd8:	01800104 	movi	r6,4
   14ddc:	000b883a 	mov	r5,zero
   14de0:	010000b4 	movhi	r4,2
   14de4:	21227b04 	addi	r4,r4,-30228
   14de8:	0014fb40 	call	14fb4 <altera_avalon_jtag_uart_init>
   14dec:	010000b4 	movhi	r4,2
   14df0:	21227104 	addi	r4,r4,-30268
   14df4:	0014d400 	call	14d40 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, SysID);
   14df8:	0001883a 	nop
    ALTERA_UP_AVALON_AUDIO_AND_VIDEO_CONFIG_INIT ( AV_CONFIG, AV_Config);
   14dfc:	010000b4 	movhi	r4,2
   14e00:	21268904 	addi	r4,r4,-26076
   14e04:	0014d400 	call	14d40 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_INIT ( AUDIO_SUBSYSTEM_AUDIO, Audio_Subsystem_Audio);
   14e08:	010000b4 	movhi	r4,2
   14e0c:	21269504 	addi	r4,r4,-26028
   14e10:	0014d400 	call	14d40 <alt_dev_reg>
    ALTERA_UP_AVALON_CHARACTER_LCD_INIT ( CHAR_LCD_16X2, Char_LCD_16x2);
   14e14:	010000b4 	movhi	r4,2
   14e18:	2126a104 	addi	r4,r4,-25980
   14e1c:	0015a6c0 	call	15a6c <alt_up_character_lcd_init>
   14e20:	010000b4 	movhi	r4,2
   14e24:	2126a104 	addi	r4,r4,-25980
   14e28:	0014d400 	call	14d40 <alt_dev_reg>
    ALTERA_UP_AVALON_RS232_INIT ( SERIAL_PORT, Serial_Port);
   14e2c:	010000b4 	movhi	r4,2
   14e30:	2126ac04 	addi	r4,r4,-25936
   14e34:	0014d400 	call	14d40 <alt_dev_reg>
}
   14e38:	0001883a 	nop
   14e3c:	e037883a 	mov	sp,fp
   14e40:	dfc00117 	ldw	ra,4(sp)
   14e44:	df000017 	ldw	fp,0(sp)
   14e48:	dec00204 	addi	sp,sp,8
   14e4c:	f800283a 	ret

00014e50 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   14e50:	defffa04 	addi	sp,sp,-24
   14e54:	dfc00515 	stw	ra,20(sp)
   14e58:	df000415 	stw	fp,16(sp)
   14e5c:	df000404 	addi	fp,sp,16
   14e60:	e13ffe15 	stw	r4,-8(fp)
   14e64:	e17ffd15 	stw	r5,-12(fp)
   14e68:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   14e6c:	e0bffe17 	ldw	r2,-8(fp)
   14e70:	10800017 	ldw	r2,0(r2)
   14e74:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   14e78:	e0bfff17 	ldw	r2,-4(fp)
   14e7c:	10c00a04 	addi	r3,r2,40
   14e80:	e0bffe17 	ldw	r2,-8(fp)
   14e84:	10800217 	ldw	r2,8(r2)
   14e88:	100f883a 	mov	r7,r2
   14e8c:	e1bffc17 	ldw	r6,-16(fp)
   14e90:	e17ffd17 	ldw	r5,-12(fp)
   14e94:	1809883a 	mov	r4,r3
   14e98:	00154740 	call	15474 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   14e9c:	e037883a 	mov	sp,fp
   14ea0:	dfc00117 	ldw	ra,4(sp)
   14ea4:	df000017 	ldw	fp,0(sp)
   14ea8:	dec00204 	addi	sp,sp,8
   14eac:	f800283a 	ret

00014eb0 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   14eb0:	defffa04 	addi	sp,sp,-24
   14eb4:	dfc00515 	stw	ra,20(sp)
   14eb8:	df000415 	stw	fp,16(sp)
   14ebc:	df000404 	addi	fp,sp,16
   14ec0:	e13ffe15 	stw	r4,-8(fp)
   14ec4:	e17ffd15 	stw	r5,-12(fp)
   14ec8:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   14ecc:	e0bffe17 	ldw	r2,-8(fp)
   14ed0:	10800017 	ldw	r2,0(r2)
   14ed4:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   14ed8:	e0bfff17 	ldw	r2,-4(fp)
   14edc:	10c00a04 	addi	r3,r2,40
   14ee0:	e0bffe17 	ldw	r2,-8(fp)
   14ee4:	10800217 	ldw	r2,8(r2)
   14ee8:	100f883a 	mov	r7,r2
   14eec:	e1bffc17 	ldw	r6,-16(fp)
   14ef0:	e17ffd17 	ldw	r5,-12(fp)
   14ef4:	1809883a 	mov	r4,r3
   14ef8:	00156940 	call	15694 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   14efc:	e037883a 	mov	sp,fp
   14f00:	dfc00117 	ldw	ra,4(sp)
   14f04:	df000017 	ldw	fp,0(sp)
   14f08:	dec00204 	addi	sp,sp,8
   14f0c:	f800283a 	ret

00014f10 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   14f10:	defffc04 	addi	sp,sp,-16
   14f14:	dfc00315 	stw	ra,12(sp)
   14f18:	df000215 	stw	fp,8(sp)
   14f1c:	df000204 	addi	fp,sp,8
   14f20:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   14f24:	e0bffe17 	ldw	r2,-8(fp)
   14f28:	10800017 	ldw	r2,0(r2)
   14f2c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   14f30:	e0bfff17 	ldw	r2,-4(fp)
   14f34:	10c00a04 	addi	r3,r2,40
   14f38:	e0bffe17 	ldw	r2,-8(fp)
   14f3c:	10800217 	ldw	r2,8(r2)
   14f40:	100b883a 	mov	r5,r2
   14f44:	1809883a 	mov	r4,r3
   14f48:	00153180 	call	15318 <altera_avalon_jtag_uart_close>
}
   14f4c:	e037883a 	mov	sp,fp
   14f50:	dfc00117 	ldw	ra,4(sp)
   14f54:	df000017 	ldw	fp,0(sp)
   14f58:	dec00204 	addi	sp,sp,8
   14f5c:	f800283a 	ret

00014f60 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   14f60:	defffa04 	addi	sp,sp,-24
   14f64:	dfc00515 	stw	ra,20(sp)
   14f68:	df000415 	stw	fp,16(sp)
   14f6c:	df000404 	addi	fp,sp,16
   14f70:	e13ffe15 	stw	r4,-8(fp)
   14f74:	e17ffd15 	stw	r5,-12(fp)
   14f78:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   14f7c:	e0bffe17 	ldw	r2,-8(fp)
   14f80:	10800017 	ldw	r2,0(r2)
   14f84:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   14f88:	e0bfff17 	ldw	r2,-4(fp)
   14f8c:	10800a04 	addi	r2,r2,40
   14f90:	e1bffc17 	ldw	r6,-16(fp)
   14f94:	e17ffd17 	ldw	r5,-12(fp)
   14f98:	1009883a 	mov	r4,r2
   14f9c:	00153800 	call	15380 <altera_avalon_jtag_uart_ioctl>
}
   14fa0:	e037883a 	mov	sp,fp
   14fa4:	dfc00117 	ldw	ra,4(sp)
   14fa8:	df000017 	ldw	fp,0(sp)
   14fac:	dec00204 	addi	sp,sp,8
   14fb0:	f800283a 	ret

00014fb4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   14fb4:	defffb04 	addi	sp,sp,-20
   14fb8:	dfc00415 	stw	ra,16(sp)
   14fbc:	df000315 	stw	fp,12(sp)
   14fc0:	df000304 	addi	fp,sp,12
   14fc4:	e13fff15 	stw	r4,-4(fp)
   14fc8:	e17ffe15 	stw	r5,-8(fp)
   14fcc:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   14fd0:	e0bfff17 	ldw	r2,-4(fp)
   14fd4:	00c00044 	movi	r3,1
   14fd8:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   14fdc:	e0bfff17 	ldw	r2,-4(fp)
   14fe0:	10800017 	ldw	r2,0(r2)
   14fe4:	10800104 	addi	r2,r2,4
   14fe8:	1007883a 	mov	r3,r2
   14fec:	e0bfff17 	ldw	r2,-4(fp)
   14ff0:	10800817 	ldw	r2,32(r2)
   14ff4:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
   14ff8:	e0bffd17 	ldw	r2,-12(fp)
   14ffc:	01800074 	movhi	r6,1
   15000:	31941a04 	addi	r6,r6,20584
   15004:	e17fff17 	ldw	r5,-4(fp)
   15008:	1009883a 	mov	r4,r2
   1500c:	00167700 	call	16770 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   15010:	e0bfff17 	ldw	r2,-4(fp)
   15014:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   15018:	e0bfff17 	ldw	r2,-4(fp)
   1501c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   15020:	d0e73b17 	ldw	r3,-25364(gp)
   15024:	e1ffff17 	ldw	r7,-4(fp)
   15028:	01800074 	movhi	r6,1
   1502c:	31949e04 	addi	r6,r6,21112
   15030:	180b883a 	mov	r5,r3
   15034:	1009883a 	mov	r4,r2
   15038:	00162440 	call	16244 <alt_alarm_start>
   1503c:	1000040e 	bge	r2,zero,15050 <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   15040:	e0ffff17 	ldw	r3,-4(fp)
   15044:	00a00034 	movhi	r2,32768
   15048:	10bfffc4 	addi	r2,r2,-1
   1504c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   15050:	0001883a 	nop
   15054:	e037883a 	mov	sp,fp
   15058:	dfc00117 	ldw	ra,4(sp)
   1505c:	df000017 	ldw	fp,0(sp)
   15060:	dec00204 	addi	sp,sp,8
   15064:	f800283a 	ret

00015068 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   15068:	defff704 	addi	sp,sp,-36
   1506c:	df000815 	stw	fp,32(sp)
   15070:	df000804 	addi	fp,sp,32
   15074:	e13ff915 	stw	r4,-28(fp)
   15078:	e17ff815 	stw	r5,-32(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   1507c:	e0bff917 	ldw	r2,-28(fp)
   15080:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
   15084:	e0bffd17 	ldw	r2,-12(fp)
   15088:	10800017 	ldw	r2,0(r2)
   1508c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   15090:	e0bffc17 	ldw	r2,-16(fp)
   15094:	10800104 	addi	r2,r2,4
   15098:	10800037 	ldwio	r2,0(r2)
   1509c:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   150a0:	e0bffb17 	ldw	r2,-20(fp)
   150a4:	1080c00c 	andi	r2,r2,768
   150a8:	10006d26 	beq	r2,zero,15260 <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   150ac:	e0bffb17 	ldw	r2,-20(fp)
   150b0:	1080400c 	andi	r2,r2,256
   150b4:	10003526 	beq	r2,zero,1518c <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   150b8:	00800074 	movhi	r2,1
   150bc:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   150c0:	e0bffd17 	ldw	r2,-12(fp)
   150c4:	10800a17 	ldw	r2,40(r2)
   150c8:	10800044 	addi	r2,r2,1
   150cc:	1081ffcc 	andi	r2,r2,2047
   150d0:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   150d4:	e0bffd17 	ldw	r2,-12(fp)
   150d8:	10800b17 	ldw	r2,44(r2)
   150dc:	e0fffa17 	ldw	r3,-24(fp)
   150e0:	18801526 	beq	r3,r2,15138 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   150e4:	e0bffc17 	ldw	r2,-16(fp)
   150e8:	10800037 	ldwio	r2,0(r2)
   150ec:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   150f0:	e0bfff17 	ldw	r2,-4(fp)
   150f4:	10a0000c 	andi	r2,r2,32768
   150f8:	10001126 	beq	r2,zero,15140 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   150fc:	e0bffd17 	ldw	r2,-12(fp)
   15100:	10800a17 	ldw	r2,40(r2)
   15104:	e0ffff17 	ldw	r3,-4(fp)
   15108:	1809883a 	mov	r4,r3
   1510c:	e0fffd17 	ldw	r3,-12(fp)
   15110:	1885883a 	add	r2,r3,r2
   15114:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   15118:	e0bffd17 	ldw	r2,-12(fp)
   1511c:	10800a17 	ldw	r2,40(r2)
   15120:	10800044 	addi	r2,r2,1
   15124:	10c1ffcc 	andi	r3,r2,2047
   15128:	e0bffd17 	ldw	r2,-12(fp)
   1512c:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   15130:	0001883a 	nop
      {
   15134:	003fe206 	br	150c0 <altera_avalon_jtag_uart_irq+0x58>
          break;
   15138:	0001883a 	nop
   1513c:	00000106 	br	15144 <altera_avalon_jtag_uart_irq+0xdc>
          break;
   15140:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   15144:	e0bfff17 	ldw	r2,-4(fp)
   15148:	10bfffec 	andhi	r2,r2,65535
   1514c:	10000f26 	beq	r2,zero,1518c <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   15150:	e0bffd17 	ldw	r2,-12(fp)
   15154:	10c00817 	ldw	r3,32(r2)
   15158:	00bfff84 	movi	r2,-2
   1515c:	1886703a 	and	r3,r3,r2
   15160:	e0bffd17 	ldw	r2,-12(fp)
   15164:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   15168:	e0bffc17 	ldw	r2,-16(fp)
   1516c:	10800104 	addi	r2,r2,4
   15170:	1007883a 	mov	r3,r2
   15174:	e0bffd17 	ldw	r2,-12(fp)
   15178:	10800817 	ldw	r2,32(r2)
   1517c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   15180:	e0bffc17 	ldw	r2,-16(fp)
   15184:	10800104 	addi	r2,r2,4
   15188:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   1518c:	e0bffb17 	ldw	r2,-20(fp)
   15190:	1080800c 	andi	r2,r2,512
   15194:	103fbe26 	beq	r2,zero,15090 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   15198:	e0bffb17 	ldw	r2,-20(fp)
   1519c:	1004d43a 	srli	r2,r2,16
   151a0:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   151a4:	00001406 	br	151f8 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   151a8:	e0bffc17 	ldw	r2,-16(fp)
   151ac:	e0fffd17 	ldw	r3,-12(fp)
   151b0:	18c00d17 	ldw	r3,52(r3)
   151b4:	e13ffd17 	ldw	r4,-12(fp)
   151b8:	20c7883a 	add	r3,r4,r3
   151bc:	18c20e03 	ldbu	r3,2104(r3)
   151c0:	18c03fcc 	andi	r3,r3,255
   151c4:	18c0201c 	xori	r3,r3,128
   151c8:	18ffe004 	addi	r3,r3,-128
   151cc:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   151d0:	e0bffd17 	ldw	r2,-12(fp)
   151d4:	10800d17 	ldw	r2,52(r2)
   151d8:	10800044 	addi	r2,r2,1
   151dc:	10c1ffcc 	andi	r3,r2,2047
   151e0:	e0bffd17 	ldw	r2,-12(fp)
   151e4:	10c00d15 	stw	r3,52(r2)
   151e8:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   151ec:	e0bffe17 	ldw	r2,-8(fp)
   151f0:	10bfffc4 	addi	r2,r2,-1
   151f4:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
   151f8:	e0bffe17 	ldw	r2,-8(fp)
   151fc:	10000526 	beq	r2,zero,15214 <altera_avalon_jtag_uart_irq+0x1ac>
   15200:	e0bffd17 	ldw	r2,-12(fp)
   15204:	10c00d17 	ldw	r3,52(r2)
   15208:	e0bffd17 	ldw	r2,-12(fp)
   1520c:	10800c17 	ldw	r2,48(r2)
   15210:	18bfe51e 	bne	r3,r2,151a8 <altera_avalon_jtag_uart_irq+0x140>
      }

      if (space > 0)
   15214:	e0bffe17 	ldw	r2,-8(fp)
   15218:	103f9d26 	beq	r2,zero,15090 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   1521c:	e0bffd17 	ldw	r2,-12(fp)
   15220:	10c00817 	ldw	r3,32(r2)
   15224:	00bfff44 	movi	r2,-3
   15228:	1886703a 	and	r3,r3,r2
   1522c:	e0bffd17 	ldw	r2,-12(fp)
   15230:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   15234:	e0bffd17 	ldw	r2,-12(fp)
   15238:	10800017 	ldw	r2,0(r2)
   1523c:	10800104 	addi	r2,r2,4
   15240:	1007883a 	mov	r3,r2
   15244:	e0bffd17 	ldw	r2,-12(fp)
   15248:	10800817 	ldw	r2,32(r2)
   1524c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   15250:	e0bffc17 	ldw	r2,-16(fp)
   15254:	10800104 	addi	r2,r2,4
   15258:	10800037 	ldwio	r2,0(r2)
  {
   1525c:	003f8c06 	br	15090 <altera_avalon_jtag_uart_irq+0x28>
      break;
   15260:	0001883a 	nop
      }
    }
  }
}
   15264:	0001883a 	nop
   15268:	e037883a 	mov	sp,fp
   1526c:	df000017 	ldw	fp,0(sp)
   15270:	dec00104 	addi	sp,sp,4
   15274:	f800283a 	ret

00015278 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   15278:	defffc04 	addi	sp,sp,-16
   1527c:	df000315 	stw	fp,12(sp)
   15280:	df000304 	addi	fp,sp,12
   15284:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   15288:	e0bffd17 	ldw	r2,-12(fp)
   1528c:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   15290:	e0bfff17 	ldw	r2,-4(fp)
   15294:	10800017 	ldw	r2,0(r2)
   15298:	10800104 	addi	r2,r2,4
   1529c:	10800037 	ldwio	r2,0(r2)
   152a0:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   152a4:	e0bffe17 	ldw	r2,-8(fp)
   152a8:	1081000c 	andi	r2,r2,1024
   152ac:	10000b26 	beq	r2,zero,152dc <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   152b0:	e0bfff17 	ldw	r2,-4(fp)
   152b4:	10800017 	ldw	r2,0(r2)
   152b8:	10800104 	addi	r2,r2,4
   152bc:	1007883a 	mov	r3,r2
   152c0:	e0bfff17 	ldw	r2,-4(fp)
   152c4:	10800817 	ldw	r2,32(r2)
   152c8:	10810014 	ori	r2,r2,1024
   152cc:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   152d0:	e0bfff17 	ldw	r2,-4(fp)
   152d4:	10000915 	stw	zero,36(r2)
   152d8:	00000a06 	br	15304 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   152dc:	e0bfff17 	ldw	r2,-4(fp)
   152e0:	10c00917 	ldw	r3,36(r2)
   152e4:	00a00034 	movhi	r2,32768
   152e8:	10bfff04 	addi	r2,r2,-4
   152ec:	10c00536 	bltu	r2,r3,15304 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   152f0:	e0bfff17 	ldw	r2,-4(fp)
   152f4:	10800917 	ldw	r2,36(r2)
   152f8:	10c00044 	addi	r3,r2,1
   152fc:	e0bfff17 	ldw	r2,-4(fp)
   15300:	10c00915 	stw	r3,36(r2)
   15304:	d0a73b17 	ldw	r2,-25364(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   15308:	e037883a 	mov	sp,fp
   1530c:	df000017 	ldw	fp,0(sp)
   15310:	dec00104 	addi	sp,sp,4
   15314:	f800283a 	ret

00015318 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   15318:	defffd04 	addi	sp,sp,-12
   1531c:	df000215 	stw	fp,8(sp)
   15320:	df000204 	addi	fp,sp,8
   15324:	e13fff15 	stw	r4,-4(fp)
   15328:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   1532c:	00000506 	br	15344 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   15330:	e0bffe17 	ldw	r2,-8(fp)
   15334:	1090000c 	andi	r2,r2,16384
   15338:	10000226 	beq	r2,zero,15344 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   1533c:	00bffd44 	movi	r2,-11
   15340:	00000b06 	br	15370 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   15344:	e0bfff17 	ldw	r2,-4(fp)
   15348:	10c00d17 	ldw	r3,52(r2)
   1534c:	e0bfff17 	ldw	r2,-4(fp)
   15350:	10800c17 	ldw	r2,48(r2)
   15354:	18800526 	beq	r3,r2,1536c <altera_avalon_jtag_uart_close+0x54>
   15358:	e0bfff17 	ldw	r2,-4(fp)
   1535c:	10c00917 	ldw	r3,36(r2)
   15360:	e0bfff17 	ldw	r2,-4(fp)
   15364:	10800117 	ldw	r2,4(r2)
   15368:	18bff136 	bltu	r3,r2,15330 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
   1536c:	0005883a 	mov	r2,zero
}
   15370:	e037883a 	mov	sp,fp
   15374:	df000017 	ldw	fp,0(sp)
   15378:	dec00104 	addi	sp,sp,4
   1537c:	f800283a 	ret

00015380 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   15380:	defffa04 	addi	sp,sp,-24
   15384:	df000515 	stw	fp,20(sp)
   15388:	df000504 	addi	fp,sp,20
   1538c:	e13ffd15 	stw	r4,-12(fp)
   15390:	e17ffc15 	stw	r5,-16(fp)
   15394:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
   15398:	00bff9c4 	movi	r2,-25
   1539c:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
   153a0:	e0bffc17 	ldw	r2,-16(fp)
   153a4:	109a8060 	cmpeqi	r2,r2,27137
   153a8:	1000041e 	bne	r2,zero,153bc <altera_avalon_jtag_uart_ioctl+0x3c>
   153ac:	e0bffc17 	ldw	r2,-16(fp)
   153b0:	109a80a0 	cmpeqi	r2,r2,27138
   153b4:	1000181e 	bne	r2,zero,15418 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   153b8:	00002906 	br	15460 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
   153bc:	e0bffd17 	ldw	r2,-12(fp)
   153c0:	10c00117 	ldw	r3,4(r2)
   153c4:	00a00034 	movhi	r2,32768
   153c8:	10bfffc4 	addi	r2,r2,-1
   153cc:	18802126 	beq	r3,r2,15454 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
   153d0:	e0bffb17 	ldw	r2,-20(fp)
   153d4:	10800017 	ldw	r2,0(r2)
   153d8:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   153dc:	e0bffe17 	ldw	r2,-8(fp)
   153e0:	10800090 	cmplti	r2,r2,2
   153e4:	1000061e 	bne	r2,zero,15400 <altera_avalon_jtag_uart_ioctl+0x80>
   153e8:	e0fffe17 	ldw	r3,-8(fp)
   153ec:	00a00034 	movhi	r2,32768
   153f0:	10bfffc4 	addi	r2,r2,-1
   153f4:	18800226 	beq	r3,r2,15400 <altera_avalon_jtag_uart_ioctl+0x80>
   153f8:	e0bffe17 	ldw	r2,-8(fp)
   153fc:	00000206 	br	15408 <altera_avalon_jtag_uart_ioctl+0x88>
   15400:	00a00034 	movhi	r2,32768
   15404:	10bfff84 	addi	r2,r2,-2
   15408:	e0fffd17 	ldw	r3,-12(fp)
   1540c:	18800115 	stw	r2,4(r3)
      rc = 0;
   15410:	e03fff15 	stw	zero,-4(fp)
    break;
   15414:	00000f06 	br	15454 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
   15418:	e0bffd17 	ldw	r2,-12(fp)
   1541c:	10c00117 	ldw	r3,4(r2)
   15420:	00a00034 	movhi	r2,32768
   15424:	10bfffc4 	addi	r2,r2,-1
   15428:	18800c26 	beq	r3,r2,1545c <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   1542c:	e0bffd17 	ldw	r2,-12(fp)
   15430:	10c00917 	ldw	r3,36(r2)
   15434:	e0bffd17 	ldw	r2,-12(fp)
   15438:	10800117 	ldw	r2,4(r2)
   1543c:	1885803a 	cmpltu	r2,r3,r2
   15440:	10c03fcc 	andi	r3,r2,255
   15444:	e0bffb17 	ldw	r2,-20(fp)
   15448:	10c00015 	stw	r3,0(r2)
      rc = 0;
   1544c:	e03fff15 	stw	zero,-4(fp)
    break;
   15450:	00000206 	br	1545c <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
   15454:	0001883a 	nop
   15458:	00000106 	br	15460 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
   1545c:	0001883a 	nop
  }

  return rc;
   15460:	e0bfff17 	ldw	r2,-4(fp)
}
   15464:	e037883a 	mov	sp,fp
   15468:	df000017 	ldw	fp,0(sp)
   1546c:	dec00104 	addi	sp,sp,4
   15470:	f800283a 	ret

00015474 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   15474:	defff304 	addi	sp,sp,-52
   15478:	dfc00c15 	stw	ra,48(sp)
   1547c:	df000b15 	stw	fp,44(sp)
   15480:	df000b04 	addi	fp,sp,44
   15484:	e13ff815 	stw	r4,-32(fp)
   15488:	e17ff715 	stw	r5,-36(fp)
   1548c:	e1bff615 	stw	r6,-40(fp)
   15490:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
   15494:	e0bff717 	ldw	r2,-36(fp)
   15498:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   1549c:	00004706 	br	155bc <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   154a0:	e0bff817 	ldw	r2,-32(fp)
   154a4:	10800a17 	ldw	r2,40(r2)
   154a8:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
   154ac:	e0bff817 	ldw	r2,-32(fp)
   154b0:	10800b17 	ldw	r2,44(r2)
   154b4:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
   154b8:	e0fffd17 	ldw	r3,-12(fp)
   154bc:	e0bffc17 	ldw	r2,-16(fp)
   154c0:	18800536 	bltu	r3,r2,154d8 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   154c4:	e0fffd17 	ldw	r3,-12(fp)
   154c8:	e0bffc17 	ldw	r2,-16(fp)
   154cc:	1885c83a 	sub	r2,r3,r2
   154d0:	e0bffe15 	stw	r2,-8(fp)
   154d4:	00000406 	br	154e8 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   154d8:	00c20004 	movi	r3,2048
   154dc:	e0bffc17 	ldw	r2,-16(fp)
   154e0:	1885c83a 	sub	r2,r3,r2
   154e4:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   154e8:	e0bffe17 	ldw	r2,-8(fp)
   154ec:	10001e26 	beq	r2,zero,15568 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   154f0:	e0fff617 	ldw	r3,-40(fp)
   154f4:	e0bffe17 	ldw	r2,-8(fp)
   154f8:	1880022e 	bgeu	r3,r2,15504 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   154fc:	e0bff617 	ldw	r2,-40(fp)
   15500:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   15504:	e0bff817 	ldw	r2,-32(fp)
   15508:	10c00e04 	addi	r3,r2,56
   1550c:	e0bffc17 	ldw	r2,-16(fp)
   15510:	1885883a 	add	r2,r3,r2
   15514:	e1bffe17 	ldw	r6,-8(fp)
   15518:	100b883a 	mov	r5,r2
   1551c:	e13fff17 	ldw	r4,-4(fp)
   15520:	000a1d40 	call	a1d4 <memcpy>
      ptr   += n;
   15524:	e0ffff17 	ldw	r3,-4(fp)
   15528:	e0bffe17 	ldw	r2,-8(fp)
   1552c:	1885883a 	add	r2,r3,r2
   15530:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
   15534:	e0fff617 	ldw	r3,-40(fp)
   15538:	e0bffe17 	ldw	r2,-8(fp)
   1553c:	1885c83a 	sub	r2,r3,r2
   15540:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   15544:	e0fffc17 	ldw	r3,-16(fp)
   15548:	e0bffe17 	ldw	r2,-8(fp)
   1554c:	1885883a 	add	r2,r3,r2
   15550:	10c1ffcc 	andi	r3,r2,2047
   15554:	e0bff817 	ldw	r2,-32(fp)
   15558:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   1555c:	e0bff617 	ldw	r2,-40(fp)
   15560:	00bfcf16 	blt	zero,r2,154a0 <altera_avalon_jtag_uart_read+0x2c>
   15564:	00000106 	br	1556c <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
   15568:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
   1556c:	e0ffff17 	ldw	r3,-4(fp)
   15570:	e0bff717 	ldw	r2,-36(fp)
   15574:	1880141e 	bne	r3,r2,155c8 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   15578:	e0bff517 	ldw	r2,-44(fp)
   1557c:	1090000c 	andi	r2,r2,16384
   15580:	1000131e 	bne	r2,zero,155d0 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   15584:	0001883a 	nop
   15588:	e0bff817 	ldw	r2,-32(fp)
   1558c:	10800a17 	ldw	r2,40(r2)
   15590:	e0fffd17 	ldw	r3,-12(fp)
   15594:	1880051e 	bne	r3,r2,155ac <altera_avalon_jtag_uart_read+0x138>
   15598:	e0bff817 	ldw	r2,-32(fp)
   1559c:	10c00917 	ldw	r3,36(r2)
   155a0:	e0bff817 	ldw	r2,-32(fp)
   155a4:	10800117 	ldw	r2,4(r2)
   155a8:	18bff736 	bltu	r3,r2,15588 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   155ac:	e0bff817 	ldw	r2,-32(fp)
   155b0:	10800a17 	ldw	r2,40(r2)
   155b4:	e0fffd17 	ldw	r3,-12(fp)
   155b8:	18800726 	beq	r3,r2,155d8 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
   155bc:	e0bff617 	ldw	r2,-40(fp)
   155c0:	00bfb716 	blt	zero,r2,154a0 <altera_avalon_jtag_uart_read+0x2c>
   155c4:	00000506 	br	155dc <altera_avalon_jtag_uart_read+0x168>
      break;
   155c8:	0001883a 	nop
   155cc:	00000306 	br	155dc <altera_avalon_jtag_uart_read+0x168>
      break;
   155d0:	0001883a 	nop
   155d4:	00000106 	br	155dc <altera_avalon_jtag_uart_read+0x168>
      break;
   155d8:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   155dc:	e0ffff17 	ldw	r3,-4(fp)
   155e0:	e0bff717 	ldw	r2,-36(fp)
   155e4:	18801926 	beq	r3,r2,1564c <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
   155e8:	0005303a 	rdctl	r2,status
   155ec:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   155f0:	e0fff917 	ldw	r3,-28(fp)
   155f4:	00bfff84 	movi	r2,-2
   155f8:	1884703a 	and	r2,r3,r2
   155fc:	1001703a 	wrctl	status,r2
  return context;
   15600:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   15604:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   15608:	e0bff817 	ldw	r2,-32(fp)
   1560c:	10800817 	ldw	r2,32(r2)
   15610:	10c00054 	ori	r3,r2,1
   15614:	e0bff817 	ldw	r2,-32(fp)
   15618:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   1561c:	e0bff817 	ldw	r2,-32(fp)
   15620:	10800017 	ldw	r2,0(r2)
   15624:	10800104 	addi	r2,r2,4
   15628:	1007883a 	mov	r3,r2
   1562c:	e0bff817 	ldw	r2,-32(fp)
   15630:	10800817 	ldw	r2,32(r2)
   15634:	18800035 	stwio	r2,0(r3)
   15638:	e0bffb17 	ldw	r2,-20(fp)
   1563c:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   15640:	e0bffa17 	ldw	r2,-24(fp)
   15644:	1001703a 	wrctl	status,r2
}
   15648:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   1564c:	e0ffff17 	ldw	r3,-4(fp)
   15650:	e0bff717 	ldw	r2,-36(fp)
   15654:	18800426 	beq	r3,r2,15668 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
   15658:	e0ffff17 	ldw	r3,-4(fp)
   1565c:	e0bff717 	ldw	r2,-36(fp)
   15660:	1885c83a 	sub	r2,r3,r2
   15664:	00000606 	br	15680 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   15668:	e0bff517 	ldw	r2,-44(fp)
   1566c:	1090000c 	andi	r2,r2,16384
   15670:	10000226 	beq	r2,zero,1567c <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
   15674:	00bffd44 	movi	r2,-11
   15678:	00000106 	br	15680 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   1567c:	00bffec4 	movi	r2,-5
}
   15680:	e037883a 	mov	sp,fp
   15684:	dfc00117 	ldw	ra,4(sp)
   15688:	df000017 	ldw	fp,0(sp)
   1568c:	dec00204 	addi	sp,sp,8
   15690:	f800283a 	ret

00015694 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   15694:	defff304 	addi	sp,sp,-52
   15698:	dfc00c15 	stw	ra,48(sp)
   1569c:	df000b15 	stw	fp,44(sp)
   156a0:	df000b04 	addi	fp,sp,44
   156a4:	e13ff815 	stw	r4,-32(fp)
   156a8:	e17ff715 	stw	r5,-36(fp)
   156ac:	e1bff615 	stw	r6,-40(fp)
   156b0:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   156b4:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   156b8:	e0bff717 	ldw	r2,-36(fp)
   156bc:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   156c0:	00003706 	br	157a0 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   156c4:	e0bff817 	ldw	r2,-32(fp)
   156c8:	10800c17 	ldw	r2,48(r2)
   156cc:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
   156d0:	e0bff817 	ldw	r2,-32(fp)
   156d4:	10800d17 	ldw	r2,52(r2)
   156d8:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
   156dc:	e0fffc17 	ldw	r3,-16(fp)
   156e0:	e0bfff17 	ldw	r2,-4(fp)
   156e4:	1880062e 	bgeu	r3,r2,15700 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   156e8:	e0ffff17 	ldw	r3,-4(fp)
   156ec:	e0bffc17 	ldw	r2,-16(fp)
   156f0:	1885c83a 	sub	r2,r3,r2
   156f4:	10bfffc4 	addi	r2,r2,-1
   156f8:	e0bffe15 	stw	r2,-8(fp)
   156fc:	00000b06 	br	1572c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   15700:	e0bfff17 	ldw	r2,-4(fp)
   15704:	10000526 	beq	r2,zero,1571c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   15708:	00c20004 	movi	r3,2048
   1570c:	e0bffc17 	ldw	r2,-16(fp)
   15710:	1885c83a 	sub	r2,r3,r2
   15714:	e0bffe15 	stw	r2,-8(fp)
   15718:	00000406 	br	1572c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   1571c:	00c1ffc4 	movi	r3,2047
   15720:	e0bffc17 	ldw	r2,-16(fp)
   15724:	1885c83a 	sub	r2,r3,r2
   15728:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   1572c:	e0bffe17 	ldw	r2,-8(fp)
   15730:	10001e26 	beq	r2,zero,157ac <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   15734:	e0fff617 	ldw	r3,-40(fp)
   15738:	e0bffe17 	ldw	r2,-8(fp)
   1573c:	1880022e 	bgeu	r3,r2,15748 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   15740:	e0bff617 	ldw	r2,-40(fp)
   15744:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   15748:	e0bff817 	ldw	r2,-32(fp)
   1574c:	10c20e04 	addi	r3,r2,2104
   15750:	e0bffc17 	ldw	r2,-16(fp)
   15754:	1885883a 	add	r2,r3,r2
   15758:	e1bffe17 	ldw	r6,-8(fp)
   1575c:	e17ff717 	ldw	r5,-36(fp)
   15760:	1009883a 	mov	r4,r2
   15764:	000a1d40 	call	a1d4 <memcpy>
      ptr   += n;
   15768:	e0fff717 	ldw	r3,-36(fp)
   1576c:	e0bffe17 	ldw	r2,-8(fp)
   15770:	1885883a 	add	r2,r3,r2
   15774:	e0bff715 	stw	r2,-36(fp)
      count -= n;
   15778:	e0fff617 	ldw	r3,-40(fp)
   1577c:	e0bffe17 	ldw	r2,-8(fp)
   15780:	1885c83a 	sub	r2,r3,r2
   15784:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   15788:	e0fffc17 	ldw	r3,-16(fp)
   1578c:	e0bffe17 	ldw	r2,-8(fp)
   15790:	1885883a 	add	r2,r3,r2
   15794:	10c1ffcc 	andi	r3,r2,2047
   15798:	e0bff817 	ldw	r2,-32(fp)
   1579c:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
   157a0:	e0bff617 	ldw	r2,-40(fp)
   157a4:	00bfc716 	blt	zero,r2,156c4 <altera_avalon_jtag_uart_write+0x30>
   157a8:	00000106 	br	157b0 <altera_avalon_jtag_uart_write+0x11c>
        break;
   157ac:	0001883a 	nop
  NIOS2_READ_STATUS (context);
   157b0:	0005303a 	rdctl	r2,status
   157b4:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   157b8:	e0fff917 	ldw	r3,-28(fp)
   157bc:	00bfff84 	movi	r2,-2
   157c0:	1884703a 	and	r2,r3,r2
   157c4:	1001703a 	wrctl	status,r2
  return context;
   157c8:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   157cc:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   157d0:	e0bff817 	ldw	r2,-32(fp)
   157d4:	10800817 	ldw	r2,32(r2)
   157d8:	10c00094 	ori	r3,r2,2
   157dc:	e0bff817 	ldw	r2,-32(fp)
   157e0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   157e4:	e0bff817 	ldw	r2,-32(fp)
   157e8:	10800017 	ldw	r2,0(r2)
   157ec:	10800104 	addi	r2,r2,4
   157f0:	1007883a 	mov	r3,r2
   157f4:	e0bff817 	ldw	r2,-32(fp)
   157f8:	10800817 	ldw	r2,32(r2)
   157fc:	18800035 	stwio	r2,0(r3)
   15800:	e0bffb17 	ldw	r2,-20(fp)
   15804:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   15808:	e0bffa17 	ldw	r2,-24(fp)
   1580c:	1001703a 	wrctl	status,r2
}
   15810:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   15814:	e0bff617 	ldw	r2,-40(fp)
   15818:	0080100e 	bge	zero,r2,1585c <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   1581c:	e0bff517 	ldw	r2,-44(fp)
   15820:	1090000c 	andi	r2,r2,16384
   15824:	1000101e 	bne	r2,zero,15868 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   15828:	0001883a 	nop
   1582c:	e0bff817 	ldw	r2,-32(fp)
   15830:	10800d17 	ldw	r2,52(r2)
   15834:	e0ffff17 	ldw	r3,-4(fp)
   15838:	1880051e 	bne	r3,r2,15850 <altera_avalon_jtag_uart_write+0x1bc>
   1583c:	e0bff817 	ldw	r2,-32(fp)
   15840:	10c00917 	ldw	r3,36(r2)
   15844:	e0bff817 	ldw	r2,-32(fp)
   15848:	10800117 	ldw	r2,4(r2)
   1584c:	18bff736 	bltu	r3,r2,1582c <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   15850:	e0bff817 	ldw	r2,-32(fp)
   15854:	10800917 	ldw	r2,36(r2)
   15858:	1000051e 	bne	r2,zero,15870 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
   1585c:	e0bff617 	ldw	r2,-40(fp)
   15860:	00bfcf16 	blt	zero,r2,157a0 <altera_avalon_jtag_uart_write+0x10c>
   15864:	00000306 	br	15874 <altera_avalon_jtag_uart_write+0x1e0>
        break;
   15868:	0001883a 	nop
   1586c:	00000106 	br	15874 <altera_avalon_jtag_uart_write+0x1e0>
         break;
   15870:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   15874:	e0fff717 	ldw	r3,-36(fp)
   15878:	e0bffd17 	ldw	r2,-12(fp)
   1587c:	18800426 	beq	r3,r2,15890 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
   15880:	e0fff717 	ldw	r3,-36(fp)
   15884:	e0bffd17 	ldw	r2,-12(fp)
   15888:	1885c83a 	sub	r2,r3,r2
   1588c:	00000606 	br	158a8 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
   15890:	e0bff517 	ldw	r2,-44(fp)
   15894:	1090000c 	andi	r2,r2,16384
   15898:	10000226 	beq	r2,zero,158a4 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
   1589c:	00bffd44 	movi	r2,-11
   158a0:	00000106 	br	158a8 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   158a4:	00bffec4 	movi	r2,-5
}
   158a8:	e037883a 	mov	sp,fp
   158ac:	dfc00117 	ldw	ra,4(sp)
   158b0:	df000017 	ldw	fp,0(sp)
   158b4:	dec00204 	addi	sp,sp,8
   158b8:	f800283a 	ret

000158bc <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   158bc:	defff904 	addi	sp,sp,-28
   158c0:	dfc00615 	stw	ra,24(sp)
   158c4:	df000515 	stw	fp,20(sp)
   158c8:	df000504 	addi	fp,sp,20
   158cc:	e13ffc15 	stw	r4,-16(fp)
   158d0:	e17ffb15 	stw	r5,-20(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   158d4:	0007883a 	mov	r3,zero
   158d8:	e0bffc17 	ldw	r2,-16(fp)
   158dc:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   158e0:	e0bffc17 	ldw	r2,-16(fp)
   158e4:	10800104 	addi	r2,r2,4
   158e8:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
   158ec:	0005303a 	rdctl	r2,status
   158f0:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   158f4:	e0fffd17 	ldw	r3,-12(fp)
   158f8:	00bfff84 	movi	r2,-2
   158fc:	1884703a 	and	r2,r3,r2
   15900:	1001703a 	wrctl	status,r2
  return context;
   15904:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   15908:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
   1590c:	0016c0c0 	call	16c0c <alt_tick>
   15910:	e0bfff17 	ldw	r2,-4(fp)
   15914:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   15918:	e0bffe17 	ldw	r2,-8(fp)
   1591c:	1001703a 	wrctl	status,r2
}
   15920:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
   15924:	0001883a 	nop
   15928:	e037883a 	mov	sp,fp
   1592c:	dfc00117 	ldw	ra,4(sp)
   15930:	df000017 	ldw	fp,0(sp)
   15934:	dec00204 	addi	sp,sp,8
   15938:	f800283a 	ret

0001593c <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   1593c:	defff904 	addi	sp,sp,-28
   15940:	dfc00615 	stw	ra,24(sp)
   15944:	df000515 	stw	fp,20(sp)
   15948:	df000504 	addi	fp,sp,20
   1594c:	e13ffe15 	stw	r4,-8(fp)
   15950:	e17ffd15 	stw	r5,-12(fp)
   15954:	e1bffc15 	stw	r6,-16(fp)
   15958:	e1fffb15 	stw	r7,-20(fp)
   1595c:	e0bffb17 	ldw	r2,-20(fp)
   15960:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   15964:	d0a73b17 	ldw	r2,-25364(gp)
   15968:	1000031e 	bne	r2,zero,15978 <alt_avalon_timer_sc_init+0x3c>
  {
    _alt_tick_rate = nticks;
   1596c:	e0bfff17 	ldw	r2,-4(fp)
   15970:	d0a73b15 	stw	r2,-25364(gp)
    return 0;
   15974:	00000106 	br	1597c <alt_avalon_timer_sc_init+0x40>
  }
  else
  {
    return -1;
   15978:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   1597c:	e0bffe17 	ldw	r2,-8(fp)
   15980:	10800104 	addi	r2,r2,4
   15984:	00c001c4 	movi	r3,7
   15988:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
   1598c:	01800074 	movhi	r6,1
   15990:	31962f04 	addi	r6,r6,22716
   15994:	e17ffe17 	ldw	r5,-8(fp)
   15998:	e13ffc17 	ldw	r4,-16(fp)
   1599c:	00167700 	call	16770 <alt_irq_register>
#endif  
}
   159a0:	0001883a 	nop
   159a4:	e037883a 	mov	sp,fp
   159a8:	dfc00117 	ldw	ra,4(sp)
   159ac:	df000017 	ldw	fp,0(sp)
   159b0:	dec00204 	addi	sp,sp,8
   159b4:	f800283a 	ret

000159b8 <get_DDRAM_addr>:
 * @sa the datasheet for the LCD Display Controller on the DE2 Board
 * @note the function requires that the input are in the valid range
 *
 **/
unsigned char get_DDRAM_addr(unsigned x_pos, unsigned y_pos)
{
   159b8:	defffc04 	addi	sp,sp,-16
   159bc:	df000315 	stw	fp,12(sp)
   159c0:	df000304 	addi	fp,sp,12
   159c4:	e13ffe15 	stw	r4,-8(fp)
   159c8:	e17ffd15 	stw	r5,-12(fp)
	//assume valid inputs
	unsigned char addr = 0x00000000;
   159cc:	e03fffc5 	stb	zero,-1(fp)
	if (y_pos == 0)
   159d0:	e0bffd17 	ldw	r2,-12(fp)
   159d4:	1000061e 	bne	r2,zero,159f0 <get_DDRAM_addr+0x38>
	{
		addr |= x_pos;
   159d8:	e0bffe17 	ldw	r2,-8(fp)
   159dc:	1007883a 	mov	r3,r2
   159e0:	e0bfffc3 	ldbu	r2,-1(fp)
   159e4:	10c4b03a 	or	r2,r2,r3
   159e8:	e0bfffc5 	stb	r2,-1(fp)
   159ec:	00000806 	br	15a10 <get_DDRAM_addr+0x58>
	}
	else
	{
		addr |= x_pos;
   159f0:	e0bffe17 	ldw	r2,-8(fp)
   159f4:	1007883a 	mov	r3,r2
   159f8:	e0bfffc3 	ldbu	r2,-1(fp)
   159fc:	10c4b03a 	or	r2,r2,r3
   15a00:	e0bfffc5 	stb	r2,-1(fp)
		addr |= 0x00000040;
   15a04:	e0bfffc3 	ldbu	r2,-1(fp)
   15a08:	10801014 	ori	r2,r2,64
   15a0c:	e0bfffc5 	stb	r2,-1(fp)
	}
	// b_7 is always 1 for DDRAM address, see datasheet
	return (addr | 0x00000080);
   15a10:	e0ffffc3 	ldbu	r3,-1(fp)
   15a14:	00bfe004 	movi	r2,-128
   15a18:	1884b03a 	or	r2,r3,r2
}
   15a1c:	e037883a 	mov	sp,fp
   15a20:	df000017 	ldw	fp,0(sp)
   15a24:	dec00104 	addi	sp,sp,4
   15a28:	f800283a 	ret

00015a2c <alt_up_character_lcd_send_cmd>:
 * @param cmd -- the command bits 
 *
 * @return nothing
 **/
void alt_up_character_lcd_send_cmd(alt_up_character_lcd_dev *lcd, unsigned char cmd)
{
   15a2c:	defffd04 	addi	sp,sp,-12
   15a30:	df000215 	stw	fp,8(sp)
   15a34:	df000204 	addi	fp,sp,8
   15a38:	e13fff15 	stw	r4,-4(fp)
   15a3c:	2805883a 	mov	r2,r5
   15a40:	e0bffe05 	stb	r2,-8(fp)
 	// NOTE: We use the term Instruction Register and Control Register interchangeably
	IOWR_ALT_UP_CHARACTER_LCD_COMMAND(lcd->base, cmd);
   15a44:	e0bfff17 	ldw	r2,-4(fp)
   15a48:	10800a17 	ldw	r2,40(r2)
   15a4c:	1007883a 	mov	r3,r2
   15a50:	e0bffe03 	ldbu	r2,-8(fp)
   15a54:	18800025 	stbio	r2,0(r3)
}
   15a58:	0001883a 	nop
   15a5c:	e037883a 	mov	sp,fp
   15a60:	df000017 	ldw	fp,0(sp)
   15a64:	dec00104 	addi	sp,sp,4
   15a68:	f800283a 	ret

00015a6c <alt_up_character_lcd_init>:
 * file for a detailed description of each function
 */
////////////////////////////////////////////////////////////////////////////

void alt_up_character_lcd_init(alt_up_character_lcd_dev *lcd)
{
   15a6c:	defffe04 	addi	sp,sp,-8
   15a70:	df000115 	stw	fp,4(sp)
   15a74:	df000104 	addi	fp,sp,4
   15a78:	e13fff15 	stw	r4,-4(fp)
	IOWR_ALT_UP_CHARACTER_LCD_COMMAND(lcd->base, ALT_UP_CHARACTER_LCD_COMM_CLEAR_DISPLAY);
   15a7c:	e0bfff17 	ldw	r2,-4(fp)
   15a80:	10800a17 	ldw	r2,40(r2)
   15a84:	1007883a 	mov	r3,r2
   15a88:	00800044 	movi	r2,1
   15a8c:	18800025 	stbio	r2,0(r3)
	// register the device 
	// see "Developing Device Drivers for the HAL" in "Nios II Software Developer's Handbook"
}
   15a90:	0001883a 	nop
   15a94:	e037883a 	mov	sp,fp
   15a98:	df000017 	ldw	fp,0(sp)
   15a9c:	dec00104 	addi	sp,sp,4
   15aa0:	f800283a 	ret

00015aa4 <alt_up_character_lcd_open_dev>:

alt_up_character_lcd_dev* alt_up_character_lcd_open_dev(const char* name)
{
   15aa4:	defffc04 	addi	sp,sp,-16
   15aa8:	dfc00315 	stw	ra,12(sp)
   15aac:	df000215 	stw	fp,8(sp)
   15ab0:	df000204 	addi	fp,sp,8
   15ab4:	e13ffe15 	stw	r4,-8(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_character_lcd_dev *dev = (alt_up_character_lcd_dev*)alt_find_dev(name, &alt_dev_list);
   15ab8:	d1600604 	addi	r5,gp,-32744
   15abc:	e13ffe17 	ldw	r4,-8(fp)
   15ac0:	00165700 	call	16570 <alt_find_dev>
   15ac4:	e0bfff15 	stw	r2,-4(fp)

  return dev;
   15ac8:	e0bfff17 	ldw	r2,-4(fp)
}
   15acc:	e037883a 	mov	sp,fp
   15ad0:	dfc00117 	ldw	ra,4(sp)
   15ad4:	df000017 	ldw	fp,0(sp)
   15ad8:	dec00204 	addi	sp,sp,8
   15adc:	f800283a 	ret

00015ae0 <alt_up_character_lcd_write>:

void alt_up_character_lcd_write(alt_up_character_lcd_dev *dev, const char *ptr, unsigned int len)
{
   15ae0:	defffb04 	addi	sp,sp,-20
   15ae4:	df000415 	stw	fp,16(sp)
   15ae8:	df000404 	addi	fp,sp,16
   15aec:	e13ffe15 	stw	r4,-8(fp)
   15af0:	e17ffd15 	stw	r5,-12(fp)
   15af4:	e1bffc15 	stw	r6,-16(fp)
	unsigned int i;
	for (i = 0; i < len; i++)
   15af8:	e03fff15 	stw	zero,-4(fp)
   15afc:	00000f06 	br	15b3c <alt_up_character_lcd_write+0x5c>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr+i));
   15b00:	e0bffe17 	ldw	r2,-8(fp)
   15b04:	10800a17 	ldw	r2,40(r2)
   15b08:	10800044 	addi	r2,r2,1
   15b0c:	1009883a 	mov	r4,r2
   15b10:	e0fffd17 	ldw	r3,-12(fp)
   15b14:	e0bfff17 	ldw	r2,-4(fp)
   15b18:	1885883a 	add	r2,r3,r2
   15b1c:	10800003 	ldbu	r2,0(r2)
   15b20:	10803fcc 	andi	r2,r2,255
   15b24:	1080201c 	xori	r2,r2,128
   15b28:	10bfe004 	addi	r2,r2,-128
   15b2c:	20800025 	stbio	r2,0(r4)
	for (i = 0; i < len; i++)
   15b30:	e0bfff17 	ldw	r2,-4(fp)
   15b34:	10800044 	addi	r2,r2,1
   15b38:	e0bfff15 	stw	r2,-4(fp)
   15b3c:	e0ffff17 	ldw	r3,-4(fp)
   15b40:	e0bffc17 	ldw	r2,-16(fp)
   15b44:	18bfee36 	bltu	r3,r2,15b00 <alt_up_character_lcd_write+0x20>
	}
}
   15b48:	0001883a 	nop
   15b4c:	0001883a 	nop
   15b50:	e037883a 	mov	sp,fp
   15b54:	df000017 	ldw	fp,0(sp)
   15b58:	dec00104 	addi	sp,sp,4
   15b5c:	f800283a 	ret

00015b60 <alt_up_character_lcd_string>:

void alt_up_character_lcd_string(alt_up_character_lcd_dev *dev, const char *ptr)
{
   15b60:	defffd04 	addi	sp,sp,-12
   15b64:	df000215 	stw	fp,8(sp)
   15b68:	df000204 	addi	fp,sp,8
   15b6c:	e13fff15 	stw	r4,-4(fp)
   15b70:	e17ffe15 	stw	r5,-8(fp)
	while ( *ptr )
   15b74:	00000d06 	br	15bac <alt_up_character_lcd_string+0x4c>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr));
   15b78:	e0bfff17 	ldw	r2,-4(fp)
   15b7c:	10800a17 	ldw	r2,40(r2)
   15b80:	10800044 	addi	r2,r2,1
   15b84:	1007883a 	mov	r3,r2
   15b88:	e0bffe17 	ldw	r2,-8(fp)
   15b8c:	10800003 	ldbu	r2,0(r2)
   15b90:	10803fcc 	andi	r2,r2,255
   15b94:	1080201c 	xori	r2,r2,128
   15b98:	10bfe004 	addi	r2,r2,-128
   15b9c:	18800025 	stbio	r2,0(r3)
		++ptr;
   15ba0:	e0bffe17 	ldw	r2,-8(fp)
   15ba4:	10800044 	addi	r2,r2,1
   15ba8:	e0bffe15 	stw	r2,-8(fp)
	while ( *ptr )
   15bac:	e0bffe17 	ldw	r2,-8(fp)
   15bb0:	10800003 	ldbu	r2,0(r2)
   15bb4:	10803fcc 	andi	r2,r2,255
   15bb8:	1080201c 	xori	r2,r2,128
   15bbc:	10bfe004 	addi	r2,r2,-128
   15bc0:	103fed1e 	bne	r2,zero,15b78 <alt_up_character_lcd_string+0x18>
	}
}
   15bc4:	0001883a 	nop
   15bc8:	0001883a 	nop
   15bcc:	e037883a 	mov	sp,fp
   15bd0:	df000017 	ldw	fp,0(sp)
   15bd4:	dec00104 	addi	sp,sp,4
   15bd8:	f800283a 	ret

00015bdc <alt_up_character_lcd_write_fd>:

// this function isn't used, and is included for future upgrades
int alt_up_character_lcd_write_fd(alt_fd *fd, const char *ptr, int len)
{
   15bdc:	defffb04 	addi	sp,sp,-20
   15be0:	dfc00415 	stw	ra,16(sp)
   15be4:	df000315 	stw	fp,12(sp)
   15be8:	df000304 	addi	fp,sp,12
   15bec:	e13fff15 	stw	r4,-4(fp)
   15bf0:	e17ffe15 	stw	r5,-8(fp)
   15bf4:	e1bffd15 	stw	r6,-12(fp)
	alt_up_character_lcd_write( (alt_up_character_lcd_dev *) fd->dev, ptr, (unsigned int) len);
   15bf8:	e0bfff17 	ldw	r2,-4(fp)
   15bfc:	10800017 	ldw	r2,0(r2)
   15c00:	e0fffd17 	ldw	r3,-12(fp)
   15c04:	180d883a 	mov	r6,r3
   15c08:	e17ffe17 	ldw	r5,-8(fp)
   15c0c:	1009883a 	mov	r4,r2
   15c10:	0015ae00 	call	15ae0 <alt_up_character_lcd_write>
	return 0;
   15c14:	0005883a 	mov	r2,zero
}
   15c18:	e037883a 	mov	sp,fp
   15c1c:	dfc00117 	ldw	ra,4(sp)
   15c20:	df000017 	ldw	fp,0(sp)
   15c24:	dec00204 	addi	sp,sp,8
   15c28:	f800283a 	ret

00015c2c <alt_up_character_lcd_set_cursor_pos>:

int alt_up_character_lcd_set_cursor_pos(alt_up_character_lcd_dev *lcd, unsigned x_pos, 
	 unsigned y_pos)
{
   15c2c:	defffa04 	addi	sp,sp,-24
   15c30:	dfc00515 	stw	ra,20(sp)
   15c34:	df000415 	stw	fp,16(sp)
   15c38:	df000404 	addi	fp,sp,16
   15c3c:	e13ffe15 	stw	r4,-8(fp)
   15c40:	e17ffd15 	stw	r5,-12(fp)
   15c44:	e1bffc15 	stw	r6,-16(fp)
	//boundary check
	if (x_pos > 39 || y_pos > 1 )
   15c48:	e0bffd17 	ldw	r2,-12(fp)
   15c4c:	10800a28 	cmpgeui	r2,r2,40
   15c50:	1000031e 	bne	r2,zero,15c60 <alt_up_character_lcd_set_cursor_pos+0x34>
   15c54:	e0bffc17 	ldw	r2,-16(fp)
   15c58:	108000b0 	cmpltui	r2,r2,2
   15c5c:	1000021e 	bne	r2,zero,15c68 <alt_up_character_lcd_set_cursor_pos+0x3c>
		// invalid argument
		return -1;
   15c60:	00bfffc4 	movi	r2,-1
   15c64:	00000906 	br	15c8c <alt_up_character_lcd_set_cursor_pos+0x60>
	// calculate address
	unsigned char addr = get_DDRAM_addr(x_pos, y_pos);
   15c68:	e17ffc17 	ldw	r5,-16(fp)
   15c6c:	e13ffd17 	ldw	r4,-12(fp)
   15c70:	00159b80 	call	159b8 <get_DDRAM_addr>
   15c74:	e0bfffc5 	stb	r2,-1(fp)
	// set the cursor
	alt_up_character_lcd_send_cmd(lcd, addr);
   15c78:	e0bfffc3 	ldbu	r2,-1(fp)
   15c7c:	100b883a 	mov	r5,r2
   15c80:	e13ffe17 	ldw	r4,-8(fp)
   15c84:	0015a2c0 	call	15a2c <alt_up_character_lcd_send_cmd>
	return 0;
   15c88:	0005883a 	mov	r2,zero
}
   15c8c:	e037883a 	mov	sp,fp
   15c90:	dfc00117 	ldw	ra,4(sp)
   15c94:	df000017 	ldw	fp,0(sp)
   15c98:	dec00204 	addi	sp,sp,8
   15c9c:	f800283a 	ret

00015ca0 <alt_up_character_lcd_shift_cursor>:

void alt_up_character_lcd_shift_cursor(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
   15ca0:	defffb04 	addi	sp,sp,-20
   15ca4:	dfc00415 	stw	ra,16(sp)
   15ca8:	df000315 	stw	fp,12(sp)
   15cac:	df000304 	addi	fp,sp,12
   15cb0:	e13ffe15 	stw	r4,-8(fp)
   15cb4:	e17ffd15 	stw	r5,-12(fp)
	if (x_right_shift_offset == 0) 
   15cb8:	e0bffd17 	ldw	r2,-12(fp)
   15cbc:	10001526 	beq	r2,zero,15d14 <alt_up_character_lcd_shift_cursor+0x74>
		// don't ask me to do nothing 
		return;

	// see shift right or left
	unsigned char shift_cmd = (x_right_shift_offset > 0) ? 
   15cc0:	e0bffd17 	ldw	r2,-12(fp)
   15cc4:	0080020e 	bge	zero,r2,15cd0 <alt_up_character_lcd_shift_cursor+0x30>
   15cc8:	00800504 	movi	r2,20
   15ccc:	00000106 	br	15cd4 <alt_up_character_lcd_shift_cursor+0x34>
   15cd0:	00800404 	movi	r2,16
   15cd4:	e0bfff85 	stb	r2,-2(fp)
		ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
   15cd8:	e0bffd17 	ldw	r2,-12(fp)
   15cdc:	1000010e 	bge	r2,zero,15ce4 <alt_up_character_lcd_shift_cursor+0x44>
   15ce0:	0085c83a 	sub	r2,zero,r2
   15ce4:	e0bfffc5 	stb	r2,-1(fp)
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
   15ce8:	00000406 	br	15cfc <alt_up_character_lcd_shift_cursor+0x5c>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
   15cec:	e0bfff83 	ldbu	r2,-2(fp)
   15cf0:	100b883a 	mov	r5,r2
   15cf4:	e13ffe17 	ldw	r4,-8(fp)
   15cf8:	0015a2c0 	call	15a2c <alt_up_character_lcd_send_cmd>
	while (num_offset-- > 0)
   15cfc:	e0bfffc3 	ldbu	r2,-1(fp)
   15d00:	10ffffc4 	addi	r3,r2,-1
   15d04:	e0ffffc5 	stb	r3,-1(fp)
   15d08:	10803fcc 	andi	r2,r2,255
   15d0c:	103ff71e 	bne	r2,zero,15cec <alt_up_character_lcd_shift_cursor+0x4c>
   15d10:	00000106 	br	15d18 <alt_up_character_lcd_shift_cursor+0x78>
		return;
   15d14:	0001883a 	nop
}
   15d18:	e037883a 	mov	sp,fp
   15d1c:	dfc00117 	ldw	ra,4(sp)
   15d20:	df000017 	ldw	fp,0(sp)
   15d24:	dec00204 	addi	sp,sp,8
   15d28:	f800283a 	ret

00015d2c <alt_up_character_lcd_shift_display>:

void alt_up_character_lcd_shift_display(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
   15d2c:	defffb04 	addi	sp,sp,-20
   15d30:	dfc00415 	stw	ra,16(sp)
   15d34:	df000315 	stw	fp,12(sp)
   15d38:	df000304 	addi	fp,sp,12
   15d3c:	e13ffe15 	stw	r4,-8(fp)
   15d40:	e17ffd15 	stw	r5,-12(fp)
	if (x_right_shift_offset == 0) 
   15d44:	e0bffd17 	ldw	r2,-12(fp)
   15d48:	10001526 	beq	r2,zero,15da0 <alt_up_character_lcd_shift_display+0x74>
		// don't ask me to do nothing 
		return;

	// see shift right or left
	unsigned char shift_cmd = (x_right_shift_offset > 0) ? 
   15d4c:	e0bffd17 	ldw	r2,-12(fp)
   15d50:	0080020e 	bge	zero,r2,15d5c <alt_up_character_lcd_shift_display+0x30>
   15d54:	00800704 	movi	r2,28
   15d58:	00000106 	br	15d60 <alt_up_character_lcd_shift_display+0x34>
   15d5c:	00800604 	movi	r2,24
   15d60:	e0bfff85 	stb	r2,-2(fp)
		ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
   15d64:	e0bffd17 	ldw	r2,-12(fp)
   15d68:	1000010e 	bge	r2,zero,15d70 <alt_up_character_lcd_shift_display+0x44>
   15d6c:	0085c83a 	sub	r2,zero,r2
   15d70:	e0bfffc5 	stb	r2,-1(fp)
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
   15d74:	00000406 	br	15d88 <alt_up_character_lcd_shift_display+0x5c>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
   15d78:	e0bfff83 	ldbu	r2,-2(fp)
   15d7c:	100b883a 	mov	r5,r2
   15d80:	e13ffe17 	ldw	r4,-8(fp)
   15d84:	0015a2c0 	call	15a2c <alt_up_character_lcd_send_cmd>
	while (num_offset-- > 0)
   15d88:	e0bfffc3 	ldbu	r2,-1(fp)
   15d8c:	10ffffc4 	addi	r3,r2,-1
   15d90:	e0ffffc5 	stb	r3,-1(fp)
   15d94:	10803fcc 	andi	r2,r2,255
   15d98:	103ff71e 	bne	r2,zero,15d78 <alt_up_character_lcd_shift_display+0x4c>
   15d9c:	00000106 	br	15da4 <alt_up_character_lcd_shift_display+0x78>
		return;
   15da0:	0001883a 	nop
}
   15da4:	e037883a 	mov	sp,fp
   15da8:	dfc00117 	ldw	ra,4(sp)
   15dac:	df000017 	ldw	fp,0(sp)
   15db0:	dec00204 	addi	sp,sp,8
   15db4:	f800283a 	ret

00015db8 <alt_up_character_lcd_erase_pos>:

int alt_up_character_lcd_erase_pos(alt_up_character_lcd_dev *lcd, unsigned x_pos, unsigned y_pos)
{
   15db8:	defffa04 	addi	sp,sp,-24
   15dbc:	dfc00515 	stw	ra,20(sp)
   15dc0:	df000415 	stw	fp,16(sp)
   15dc4:	df000404 	addi	fp,sp,16
   15dc8:	e13ffe15 	stw	r4,-8(fp)
   15dcc:	e17ffd15 	stw	r5,-12(fp)
   15dd0:	e1bffc15 	stw	r6,-16(fp)
	// boundary check
	if (x_pos > 39 || y_pos > 1 )
   15dd4:	e0bffd17 	ldw	r2,-12(fp)
   15dd8:	10800a28 	cmpgeui	r2,r2,40
   15ddc:	1000031e 	bne	r2,zero,15dec <alt_up_character_lcd_erase_pos+0x34>
   15de0:	e0bffc17 	ldw	r2,-16(fp)
   15de4:	108000b0 	cmpltui	r2,r2,2
   15de8:	1000021e 	bne	r2,zero,15df4 <alt_up_character_lcd_erase_pos+0x3c>
		return -1;
   15dec:	00bfffc4 	movi	r2,-1
   15df0:	00000f06 	br	15e30 <alt_up_character_lcd_erase_pos+0x78>

	// get address
	unsigned char addr = get_DDRAM_addr(x_pos, y_pos);
   15df4:	e17ffc17 	ldw	r5,-16(fp)
   15df8:	e13ffd17 	ldw	r4,-12(fp)
   15dfc:	00159b80 	call	159b8 <get_DDRAM_addr>
   15e00:	e0bfffc5 	stb	r2,-1(fp)
	// set cursor to dest point
	alt_up_character_lcd_send_cmd(lcd, addr);
   15e04:	e0bfffc3 	ldbu	r2,-1(fp)
   15e08:	100b883a 	mov	r5,r2
   15e0c:	e13ffe17 	ldw	r4,-8(fp)
   15e10:	0015a2c0 	call	15a2c <alt_up_character_lcd_send_cmd>
	//send an empty char as erase (refer to the Character Generator ROM part of the Datasheet)
	IOWR_ALT_UP_CHARACTER_LCD_DATA(lcd->base, (0x00000002) );
   15e14:	e0bffe17 	ldw	r2,-8(fp)
   15e18:	10800a17 	ldw	r2,40(r2)
   15e1c:	10800044 	addi	r2,r2,1
   15e20:	1007883a 	mov	r3,r2
   15e24:	00800084 	movi	r2,2
   15e28:	18800025 	stbio	r2,0(r3)
	return 0;
   15e2c:	0005883a 	mov	r2,zero
}
   15e30:	e037883a 	mov	sp,fp
   15e34:	dfc00117 	ldw	ra,4(sp)
   15e38:	df000017 	ldw	fp,0(sp)
   15e3c:	dec00204 	addi	sp,sp,8
   15e40:	f800283a 	ret

00015e44 <alt_up_character_lcd_cursor_off>:

void alt_up_character_lcd_cursor_off(alt_up_character_lcd_dev *lcd)
{
   15e44:	defffd04 	addi	sp,sp,-12
   15e48:	dfc00215 	stw	ra,8(sp)
   15e4c:	df000115 	stw	fp,4(sp)
   15e50:	df000104 	addi	fp,sp,4
   15e54:	e13fff15 	stw	r4,-4(fp)
	alt_up_character_lcd_send_cmd(lcd, ALT_UP_CHARACTER_LCD_COMM_CURSOR_OFF);
   15e58:	01400304 	movi	r5,12
   15e5c:	e13fff17 	ldw	r4,-4(fp)
   15e60:	0015a2c0 	call	15a2c <alt_up_character_lcd_send_cmd>
}
   15e64:	0001883a 	nop
   15e68:	e037883a 	mov	sp,fp
   15e6c:	dfc00117 	ldw	ra,4(sp)
   15e70:	df000017 	ldw	fp,0(sp)
   15e74:	dec00204 	addi	sp,sp,8
   15e78:	f800283a 	ret

00015e7c <alt_up_character_lcd_cursor_blink_on>:

void alt_up_character_lcd_cursor_blink_on(alt_up_character_lcd_dev *lcd)
{
   15e7c:	defffd04 	addi	sp,sp,-12
   15e80:	dfc00215 	stw	ra,8(sp)
   15e84:	df000115 	stw	fp,4(sp)
   15e88:	df000104 	addi	fp,sp,4
   15e8c:	e13fff15 	stw	r4,-4(fp)
	alt_up_character_lcd_send_cmd(lcd, ALT_UP_CHARACTER_LCD_COMM_CURSOR_BLINK_ON);
   15e90:	014003c4 	movi	r5,15
   15e94:	e13fff17 	ldw	r4,-4(fp)
   15e98:	0015a2c0 	call	15a2c <alt_up_character_lcd_send_cmd>
}
   15e9c:	0001883a 	nop
   15ea0:	e037883a 	mov	sp,fp
   15ea4:	dfc00117 	ldw	ra,4(sp)
   15ea8:	df000017 	ldw	fp,0(sp)
   15eac:	dec00204 	addi	sp,sp,8
   15eb0:	f800283a 	ret

00015eb4 <alt_up_rs232_enable_read_interrupt>:
#include "altera_up_avalon_rs232.h"
#include "altera_up_avalon_rs232_regs.h"


void alt_up_rs232_enable_read_interrupt(alt_up_rs232_dev *rs232)
{
   15eb4:	defffd04 	addi	sp,sp,-12
   15eb8:	df000215 	stw	fp,8(sp)
   15ebc:	df000204 	addi	fp,sp,8
   15ec0:	e13ffe15 	stw	r4,-8(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
   15ec4:	e0bffe17 	ldw	r2,-8(fp)
   15ec8:	10800a17 	ldw	r2,40(r2)
   15ecc:	10800104 	addi	r2,r2,4
   15ed0:	10800037 	ldwio	r2,0(r2)
   15ed4:	e0bfff15 	stw	r2,-4(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_RS232_CONTROL_RE_MSK;
   15ed8:	e0bfff17 	ldw	r2,-4(fp)
   15edc:	10800054 	ori	r2,r2,1
   15ee0:	e0bfff15 	stw	r2,-4(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
   15ee4:	e0bffe17 	ldw	r2,-8(fp)
   15ee8:	10800a17 	ldw	r2,40(r2)
   15eec:	10800104 	addi	r2,r2,4
   15ef0:	1007883a 	mov	r3,r2
   15ef4:	e0bfff17 	ldw	r2,-4(fp)
   15ef8:	18800035 	stwio	r2,0(r3)
}
   15efc:	0001883a 	nop
   15f00:	e037883a 	mov	sp,fp
   15f04:	df000017 	ldw	fp,0(sp)
   15f08:	dec00104 	addi	sp,sp,4
   15f0c:	f800283a 	ret

00015f10 <alt_up_rs232_disable_read_interrupt>:

void alt_up_rs232_disable_read_interrupt(alt_up_rs232_dev *rs232)
{
   15f10:	defffd04 	addi	sp,sp,-12
   15f14:	df000215 	stw	fp,8(sp)
   15f18:	df000204 	addi	fp,sp,8
   15f1c:	e13ffe15 	stw	r4,-8(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
   15f20:	e0bffe17 	ldw	r2,-8(fp)
   15f24:	10800a17 	ldw	r2,40(r2)
   15f28:	10800104 	addi	r2,r2,4
   15f2c:	10800037 	ldwio	r2,0(r2)
   15f30:	e0bfff15 	stw	r2,-4(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_RS232_CONTROL_RE_MSK;
   15f34:	e0ffff17 	ldw	r3,-4(fp)
   15f38:	00bfff84 	movi	r2,-2
   15f3c:	1884703a 	and	r2,r3,r2
   15f40:	e0bfff15 	stw	r2,-4(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
   15f44:	e0bffe17 	ldw	r2,-8(fp)
   15f48:	10800a17 	ldw	r2,40(r2)
   15f4c:	10800104 	addi	r2,r2,4
   15f50:	1007883a 	mov	r3,r2
   15f54:	e0bfff17 	ldw	r2,-4(fp)
   15f58:	18800035 	stwio	r2,0(r3)
}
   15f5c:	0001883a 	nop
   15f60:	e037883a 	mov	sp,fp
   15f64:	df000017 	ldw	fp,0(sp)
   15f68:	dec00104 	addi	sp,sp,4
   15f6c:	f800283a 	ret

00015f70 <alt_up_rs232_get_used_space_in_read_FIFO>:

unsigned alt_up_rs232_get_used_space_in_read_FIFO(alt_up_rs232_dev *rs232)
{
   15f70:	defffd04 	addi	sp,sp,-12
   15f74:	df000215 	stw	fp,8(sp)
   15f78:	df000204 	addi	fp,sp,8
   15f7c:	e13ffe15 	stw	r4,-8(fp)
	alt_u16 ravail = 0;
   15f80:	e03fff8d 	sth	zero,-2(fp)
	// we can only read the 16 bits for RAVAIL --- a read of DATA will discard the data
//	ravail = IORD_16DIRECT(IOADDR_ALT_UP_RS232_DATA(rs232->base), 2); 
	ravail = IORD_ALT_UP_RS232_RAVAIL(rs232->base); 
   15f84:	e0bffe17 	ldw	r2,-8(fp)
   15f88:	10800a17 	ldw	r2,40(r2)
   15f8c:	10800084 	addi	r2,r2,2
   15f90:	1080002b 	ldhuio	r2,0(r2)
   15f94:	10bfffcc 	andi	r2,r2,65535
   15f98:	e0bfff8d 	sth	r2,-2(fp)
//	return ravail;
	return (ravail & ALT_UP_RS232_RAVAIL_MSK) >> ALT_UP_RS232_RAVAIL_OFST;
   15f9c:	e0bfff8b 	ldhu	r2,-2(fp)
}
   15fa0:	e037883a 	mov	sp,fp
   15fa4:	df000017 	ldw	fp,0(sp)
   15fa8:	dec00104 	addi	sp,sp,4
   15fac:	f800283a 	ret

00015fb0 <alt_up_rs232_get_available_space_in_write_FIFO>:

unsigned alt_up_rs232_get_available_space_in_write_FIFO(alt_up_rs232_dev *rs232)
{
   15fb0:	defffd04 	addi	sp,sp,-12
   15fb4:	df000215 	stw	fp,8(sp)
   15fb8:	df000204 	addi	fp,sp,8
   15fbc:	e13ffe15 	stw	r4,-8(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
   15fc0:	e0bffe17 	ldw	r2,-8(fp)
   15fc4:	10800a17 	ldw	r2,40(r2)
   15fc8:	10800104 	addi	r2,r2,4
   15fcc:	10800037 	ldwio	r2,0(r2)
   15fd0:	e0bfff15 	stw	r2,-4(fp)
	return (ctrl_reg & ALT_UP_RS232_CONTROL_WSPACE_MSK) >> ALT_UP_RS232_CONTROL_WSPACE_OFST;
   15fd4:	e0bfff17 	ldw	r2,-4(fp)
   15fd8:	1004d43a 	srli	r2,r2,16
}
   15fdc:	e037883a 	mov	sp,fp
   15fe0:	df000017 	ldw	fp,0(sp)
   15fe4:	dec00104 	addi	sp,sp,4
   15fe8:	f800283a 	ret

00015fec <alt_up_rs232_check_parity>:

int alt_up_rs232_check_parity(alt_u32 data_reg)
{
   15fec:	defffd04 	addi	sp,sp,-12
   15ff0:	df000215 	stw	fp,8(sp)
   15ff4:	df000204 	addi	fp,sp,8
   15ff8:	e13ffe15 	stw	r4,-8(fp)
	unsigned parity_error = (data_reg & ALT_UP_RS232_DATA_PE_MSK) >> ALT_UP_RS232_DATA_PE_OFST;
   15ffc:	e0bffe17 	ldw	r2,-8(fp)
   16000:	1004d27a 	srli	r2,r2,9
   16004:	1080004c 	andi	r2,r2,1
   16008:	e0bfff15 	stw	r2,-4(fp)
	return (parity_error ? -1 : 0);
   1600c:	e0bfff17 	ldw	r2,-4(fp)
   16010:	10000226 	beq	r2,zero,1601c <alt_up_rs232_check_parity+0x30>
   16014:	00bfffc4 	movi	r2,-1
   16018:	00000106 	br	16020 <alt_up_rs232_check_parity+0x34>
   1601c:	0005883a 	mov	r2,zero
}
   16020:	e037883a 	mov	sp,fp
   16024:	df000017 	ldw	fp,0(sp)
   16028:	dec00104 	addi	sp,sp,4
   1602c:	f800283a 	ret

00016030 <alt_up_rs232_write_data>:

int alt_up_rs232_write_data(alt_up_rs232_dev *rs232, alt_u8 data)
{
   16030:	defffd04 	addi	sp,sp,-12
   16034:	df000215 	stw	fp,8(sp)
   16038:	df000204 	addi	fp,sp,8
   1603c:	e13fff15 	stw	r4,-4(fp)
   16040:	2805883a 	mov	r2,r5
   16044:	e0bffe05 	stb	r2,-8(fp)
	/*alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);*/
    
	// we can write directly without thinking about other bit fields for this
	// case ONLY, because only DATA field of the data register is writable
	IOWR_ALT_UP_RS232_DATA(rs232->base, (data>>ALT_UP_RS232_DATA_DATA_OFST) & ALT_UP_RS232_DATA_DATA_MSK);
   16048:	e0bfff17 	ldw	r2,-4(fp)
   1604c:	10800a17 	ldw	r2,40(r2)
   16050:	1007883a 	mov	r3,r2
   16054:	e0bffe03 	ldbu	r2,-8(fp)
   16058:	18800035 	stwio	r2,0(r3)
	return 0;
   1605c:	0005883a 	mov	r2,zero
}
   16060:	e037883a 	mov	sp,fp
   16064:	df000017 	ldw	fp,0(sp)
   16068:	dec00104 	addi	sp,sp,4
   1606c:	f800283a 	ret

00016070 <alt_up_rs232_read_data>:

int alt_up_rs232_read_data(alt_up_rs232_dev *rs232, alt_u8 *data, alt_u8 *parity_error)
{
   16070:	defffa04 	addi	sp,sp,-24
   16074:	dfc00515 	stw	ra,20(sp)
   16078:	df000415 	stw	fp,16(sp)
   1607c:	df000404 	addi	fp,sp,16
   16080:	e13ffe15 	stw	r4,-8(fp)
   16084:	e17ffd15 	stw	r5,-12(fp)
   16088:	e1bffc15 	stw	r6,-16(fp)
	alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);
   1608c:	e0bffe17 	ldw	r2,-8(fp)
   16090:	10800a17 	ldw	r2,40(r2)
   16094:	10800037 	ldwio	r2,0(r2)
   16098:	e0bfff15 	stw	r2,-4(fp)
	*data = (data_reg & ALT_UP_RS232_DATA_DATA_MSK) >> ALT_UP_RS232_DATA_DATA_OFST;
   1609c:	e0bfff17 	ldw	r2,-4(fp)
   160a0:	1007883a 	mov	r3,r2
   160a4:	e0bffd17 	ldw	r2,-12(fp)
   160a8:	10c00005 	stb	r3,0(r2)
	*parity_error = alt_up_rs232_check_parity(data_reg);
   160ac:	e13fff17 	ldw	r4,-4(fp)
   160b0:	0015fec0 	call	15fec <alt_up_rs232_check_parity>
   160b4:	1007883a 	mov	r3,r2
   160b8:	e0bffc17 	ldw	r2,-16(fp)
   160bc:	10c00005 	stb	r3,0(r2)
	return (((data_reg & ALT_UP_RS232_DATA_RVALID_MSK) >> ALT_UP_RS232_DATA_RVALID_OFST) - 1);
   160c0:	e0bfff17 	ldw	r2,-4(fp)
   160c4:	1004d3fa 	srli	r2,r2,15
   160c8:	1080004c 	andi	r2,r2,1
   160cc:	10bfffc4 	addi	r2,r2,-1
}
   160d0:	e037883a 	mov	sp,fp
   160d4:	dfc00117 	ldw	ra,4(sp)
   160d8:	df000017 	ldw	fp,0(sp)
   160dc:	dec00204 	addi	sp,sp,8
   160e0:	f800283a 	ret

000160e4 <alt_up_rs232_read_fd>:

int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
   160e4:	defff804 	addi	sp,sp,-32
   160e8:	dfc00715 	stw	ra,28(sp)
   160ec:	df000615 	stw	fp,24(sp)
   160f0:	df000604 	addi	fp,sp,24
   160f4:	e13ffc15 	stw	r4,-16(fp)
   160f8:	e17ffb15 	stw	r5,-20(fp)
   160fc:	e1bffa15 	stw	r6,-24(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
   16100:	e0bffc17 	ldw	r2,-16(fp)
   16104:	10800017 	ldw	r2,0(r2)
   16108:	e0bffe15 	stw	r2,-8(fp)
	int count = 0;
   1610c:	e03fff15 	stw	zero,-4(fp)
	alt_u8 parity_error;
	while(len--)
   16110:	00000c06 	br	16144 <alt_up_rs232_read_fd+0x60>
	{
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
   16114:	e0bffb17 	ldw	r2,-20(fp)
   16118:	10c00044 	addi	r3,r2,1
   1611c:	e0fffb15 	stw	r3,-20(fp)
   16120:	e0fffdc4 	addi	r3,fp,-9
   16124:	180d883a 	mov	r6,r3
   16128:	100b883a 	mov	r5,r2
   1612c:	e13ffe17 	ldw	r4,-8(fp)
   16130:	00160700 	call	16070 <alt_up_rs232_read_data>
   16134:	1000081e 	bne	r2,zero,16158 <alt_up_rs232_read_fd+0x74>
			count++;
   16138:	e0bfff17 	ldw	r2,-4(fp)
   1613c:	10800044 	addi	r2,r2,1
   16140:	e0bfff15 	stw	r2,-4(fp)
	while(len--)
   16144:	e0bffa17 	ldw	r2,-24(fp)
   16148:	10ffffc4 	addi	r3,r2,-1
   1614c:	e0fffa15 	stw	r3,-24(fp)
   16150:	103ff01e 	bne	r2,zero,16114 <alt_up_rs232_read_fd+0x30>
   16154:	00000106 	br	1615c <alt_up_rs232_read_fd+0x78>
		else
			break;
   16158:	0001883a 	nop
	}
	return count;
   1615c:	e0bfff17 	ldw	r2,-4(fp)
}
   16160:	e037883a 	mov	sp,fp
   16164:	dfc00117 	ldw	ra,4(sp)
   16168:	df000017 	ldw	fp,0(sp)
   1616c:	dec00204 	addi	sp,sp,8
   16170:	f800283a 	ret

00016174 <alt_up_rs232_write_fd>:

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
   16174:	defff904 	addi	sp,sp,-28
   16178:	dfc00615 	stw	ra,24(sp)
   1617c:	df000515 	stw	fp,20(sp)
   16180:	df000504 	addi	fp,sp,20
   16184:	e13ffd15 	stw	r4,-12(fp)
   16188:	e17ffc15 	stw	r5,-16(fp)
   1618c:	e1bffb15 	stw	r6,-20(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
   16190:	e0bffd17 	ldw	r2,-12(fp)
   16194:	10800017 	ldw	r2,0(r2)
   16198:	e0bffe15 	stw	r2,-8(fp)
	int count = 0;
   1619c:	e03fff15 	stw	zero,-4(fp)
	while(len--)
   161a0:	00000d06 	br	161d8 <alt_up_rs232_write_fd+0x64>
	{
		if (alt_up_rs232_write_data(rs232, *ptr)==0)
   161a4:	e0bffc17 	ldw	r2,-16(fp)
   161a8:	10800003 	ldbu	r2,0(r2)
   161ac:	10803fcc 	andi	r2,r2,255
   161b0:	100b883a 	mov	r5,r2
   161b4:	e13ffe17 	ldw	r4,-8(fp)
   161b8:	00160300 	call	16030 <alt_up_rs232_write_data>
   161bc:	10000b1e 	bne	r2,zero,161ec <alt_up_rs232_write_fd+0x78>
		{
			count++;
   161c0:	e0bfff17 	ldw	r2,-4(fp)
   161c4:	10800044 	addi	r2,r2,1
   161c8:	e0bfff15 	stw	r2,-4(fp)
			ptr++;
   161cc:	e0bffc17 	ldw	r2,-16(fp)
   161d0:	10800044 	addi	r2,r2,1
   161d4:	e0bffc15 	stw	r2,-16(fp)
	while(len--)
   161d8:	e0bffb17 	ldw	r2,-20(fp)
   161dc:	10ffffc4 	addi	r3,r2,-1
   161e0:	e0fffb15 	stw	r3,-20(fp)
   161e4:	103fef1e 	bne	r2,zero,161a4 <alt_up_rs232_write_fd+0x30>
   161e8:	00000106 	br	161f0 <alt_up_rs232_write_fd+0x7c>
		}
		else
			break;
   161ec:	0001883a 	nop
	}
	return count;
   161f0:	e0bfff17 	ldw	r2,-4(fp)
}
   161f4:	e037883a 	mov	sp,fp
   161f8:	dfc00117 	ldw	ra,4(sp)
   161fc:	df000017 	ldw	fp,0(sp)
   16200:	dec00204 	addi	sp,sp,8
   16204:	f800283a 	ret

00016208 <alt_up_rs232_open_dev>:

alt_up_rs232_dev* alt_up_rs232_open_dev(const char* name)
{
   16208:	defffc04 	addi	sp,sp,-16
   1620c:	dfc00315 	stw	ra,12(sp)
   16210:	df000215 	stw	fp,8(sp)
   16214:	df000204 	addi	fp,sp,8
   16218:	e13ffe15 	stw	r4,-8(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_rs232_dev *dev = (alt_up_rs232_dev*)alt_find_dev(name, &alt_dev_list);
   1621c:	d1600604 	addi	r5,gp,-32744
   16220:	e13ffe17 	ldw	r4,-8(fp)
   16224:	00165700 	call	16570 <alt_find_dev>
   16228:	e0bfff15 	stw	r2,-4(fp)

  return dev;
   1622c:	e0bfff17 	ldw	r2,-4(fp)
}
   16230:	e037883a 	mov	sp,fp
   16234:	dfc00117 	ldw	ra,4(sp)
   16238:	df000017 	ldw	fp,0(sp)
   1623c:	dec00204 	addi	sp,sp,8
   16240:	f800283a 	ret

00016244 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   16244:	defff404 	addi	sp,sp,-48
   16248:	df000b15 	stw	fp,44(sp)
   1624c:	df000b04 	addi	fp,sp,44
   16250:	e13ff815 	stw	r4,-32(fp)
   16254:	e17ff715 	stw	r5,-36(fp)
   16258:	e1bff615 	stw	r6,-40(fp)
   1625c:	e1fff515 	stw	r7,-44(fp)
  alt_irq_context irq_context;
  alt_u64 current_nticks = 0;
   16260:	e03ffe15 	stw	zero,-8(fp)
   16264:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
   16268:	d0a73b17 	ldw	r2,-25364(gp)
  
  if (alt_ticks_per_second ())
   1626c:	10004826 	beq	r2,zero,16390 <alt_alarm_start+0x14c>
  {
    if (alarm)
   16270:	e0bff817 	ldw	r2,-32(fp)
   16274:	10004426 	beq	r2,zero,16388 <alt_alarm_start+0x144>
    {
      alarm->callback = callback;
   16278:	e0bff817 	ldw	r2,-32(fp)
   1627c:	e0fff617 	ldw	r3,-40(fp)
   16280:	10c00415 	stw	r3,16(r2)
      alarm->context  = context;
   16284:	e0bff817 	ldw	r2,-32(fp)
   16288:	e0fff517 	ldw	r3,-44(fp)
   1628c:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
   16290:	0005303a 	rdctl	r2,status
   16294:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   16298:	e0fff917 	ldw	r3,-28(fp)
   1629c:	00bfff84 	movi	r2,-2
   162a0:	1884703a 	and	r2,r3,r2
   162a4:	1001703a 	wrctl	status,r2
  return context;
   162a8:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   162ac:	e0bffd15 	stw	r2,-12(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u64 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   162b0:	d0a73c17 	ldw	r2,-25360(gp)
   162b4:	d0e73d17 	ldw	r3,-25356(gp)
      
      current_nticks = alt_nticks();
   162b8:	e0bffe15 	stw	r2,-8(fp)
   162bc:	e0ffff15 	stw	r3,-4(fp)
      
      alarm->time = (alt_u64)nticks + current_nticks + 1; 
   162c0:	e0bff717 	ldw	r2,-36(fp)
   162c4:	1011883a 	mov	r8,r2
   162c8:	0013883a 	mov	r9,zero
   162cc:	e13ffe17 	ldw	r4,-8(fp)
   162d0:	e17fff17 	ldw	r5,-4(fp)
   162d4:	4105883a 	add	r2,r8,r4
   162d8:	120d803a 	cmpltu	r6,r2,r8
   162dc:	4947883a 	add	r3,r9,r5
   162e0:	30c9883a 	add	r4,r6,r3
   162e4:	2007883a 	mov	r3,r4
   162e8:	1009883a 	mov	r4,r2
   162ec:	180b883a 	mov	r5,r3
   162f0:	01800044 	movi	r6,1
   162f4:	000f883a 	mov	r7,zero
   162f8:	2185883a 	add	r2,r4,r6
   162fc:	1111803a 	cmpltu	r8,r2,r4
   16300:	29c7883a 	add	r3,r5,r7
   16304:	40c9883a 	add	r4,r8,r3
   16308:	2007883a 	mov	r3,r4
   1630c:	1009883a 	mov	r4,r2
   16310:	180b883a 	mov	r5,r3
   16314:	e0bff817 	ldw	r2,-32(fp)
   16318:	11000215 	stw	r4,8(r2)
   1631c:	11400315 	stw	r5,12(r2)
          
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   16320:	e0bff817 	ldw	r2,-32(fp)
   16324:	d0e00c04 	addi	r3,gp,-32720
   16328:	e0fffb15 	stw	r3,-20(fp)
   1632c:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   16330:	e0bffa17 	ldw	r2,-24(fp)
   16334:	e0fffb17 	ldw	r3,-20(fp)
   16338:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   1633c:	e0bffb17 	ldw	r2,-20(fp)
   16340:	10c00017 	ldw	r3,0(r2)
   16344:	e0bffa17 	ldw	r2,-24(fp)
   16348:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   1634c:	e0bffb17 	ldw	r2,-20(fp)
   16350:	10800017 	ldw	r2,0(r2)
   16354:	e0fffa17 	ldw	r3,-24(fp)
   16358:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   1635c:	e0bffb17 	ldw	r2,-20(fp)
   16360:	e0fffa17 	ldw	r3,-24(fp)
   16364:	10c00015 	stw	r3,0(r2)
}
   16368:	0001883a 	nop
   1636c:	e0bffd17 	ldw	r2,-12(fp)
   16370:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   16374:	e0bffc17 	ldw	r2,-16(fp)
   16378:	1001703a 	wrctl	status,r2
}
   1637c:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
   16380:	0005883a 	mov	r2,zero
   16384:	00000306 	br	16394 <alt_alarm_start+0x150>
    }
    else
    {
      return -EINVAL;
   16388:	00bffa84 	movi	r2,-22
   1638c:	00000106 	br	16394 <alt_alarm_start+0x150>
    }
  }
  else
  {
    return -ENOTSUP;
   16390:	00bfde84 	movi	r2,-134
  }
}
   16394:	e037883a 	mov	sp,fp
   16398:	df000017 	ldw	fp,0(sp)
   1639c:	dec00104 	addi	sp,sp,4
   163a0:	f800283a 	ret

000163a4 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   163a4:	deffff04 	addi	sp,sp,-4
   163a8:	df000015 	stw	fp,0(sp)
   163ac:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   163b0:	0001883a 	nop
   163b4:	e037883a 	mov	sp,fp
   163b8:	df000017 	ldw	fp,0(sp)
   163bc:	dec00104 	addi	sp,sp,4
   163c0:	f800283a 	ret

000163c4 <alt_get_errno>:
{
   163c4:	defffe04 	addi	sp,sp,-8
   163c8:	dfc00115 	stw	ra,4(sp)
   163cc:	df000015 	stw	fp,0(sp)
   163d0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   163d4:	d0a00917 	ldw	r2,-32732(gp)
   163d8:	10000326 	beq	r2,zero,163e8 <alt_get_errno+0x24>
   163dc:	d0a00917 	ldw	r2,-32732(gp)
   163e0:	103ee83a 	callr	r2
   163e4:	00000106 	br	163ec <alt_get_errno+0x28>
   163e8:	d0a73504 	addi	r2,gp,-25388
}
   163ec:	e037883a 	mov	sp,fp
   163f0:	dfc00117 	ldw	ra,4(sp)
   163f4:	df000017 	ldw	fp,0(sp)
   163f8:	dec00204 	addi	sp,sp,8
   163fc:	f800283a 	ret

00016400 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   16400:	defffa04 	addi	sp,sp,-24
   16404:	dfc00515 	stw	ra,20(sp)
   16408:	df000415 	stw	fp,16(sp)
   1640c:	df000404 	addi	fp,sp,16
   16410:	e13ffd15 	stw	r4,-12(fp)
   16414:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   16418:	e0bffd17 	ldw	r2,-12(fp)
   1641c:	10000326 	beq	r2,zero,1642c <alt_dev_llist_insert+0x2c>
   16420:	e0bffd17 	ldw	r2,-12(fp)
   16424:	10800217 	ldw	r2,8(r2)
   16428:	1000061e 	bne	r2,zero,16444 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   1642c:	00163c40 	call	163c4 <alt_get_errno>
   16430:	1007883a 	mov	r3,r2
   16434:	00800584 	movi	r2,22
   16438:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   1643c:	00bffa84 	movi	r2,-22
   16440:	00001406 	br	16494 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   16444:	e0bffd17 	ldw	r2,-12(fp)
   16448:	e0fffc17 	ldw	r3,-16(fp)
   1644c:	e0ffff15 	stw	r3,-4(fp)
   16450:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
   16454:	e0bffe17 	ldw	r2,-8(fp)
   16458:	e0ffff17 	ldw	r3,-4(fp)
   1645c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   16460:	e0bfff17 	ldw	r2,-4(fp)
   16464:	10c00017 	ldw	r3,0(r2)
   16468:	e0bffe17 	ldw	r2,-8(fp)
   1646c:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
   16470:	e0bfff17 	ldw	r2,-4(fp)
   16474:	10800017 	ldw	r2,0(r2)
   16478:	e0fffe17 	ldw	r3,-8(fp)
   1647c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   16480:	e0bfff17 	ldw	r2,-4(fp)
   16484:	e0fffe17 	ldw	r3,-8(fp)
   16488:	10c00015 	stw	r3,0(r2)
}
   1648c:	0001883a 	nop

  return 0;  
   16490:	0005883a 	mov	r2,zero
}
   16494:	e037883a 	mov	sp,fp
   16498:	dfc00117 	ldw	ra,4(sp)
   1649c:	df000017 	ldw	fp,0(sp)
   164a0:	dec00204 	addi	sp,sp,8
   164a4:	f800283a 	ret

000164a8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   164a8:	defffd04 	addi	sp,sp,-12
   164ac:	dfc00215 	stw	ra,8(sp)
   164b0:	df000115 	stw	fp,4(sp)
   164b4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   164b8:	00800074 	movhi	r2,1
   164bc:	109c8804 	addi	r2,r2,29216
   164c0:	e0bfff15 	stw	r2,-4(fp)
   164c4:	00000606 	br	164e0 <_do_ctors+0x38>
        (*ctor) (); 
   164c8:	e0bfff17 	ldw	r2,-4(fp)
   164cc:	10800017 	ldw	r2,0(r2)
   164d0:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   164d4:	e0bfff17 	ldw	r2,-4(fp)
   164d8:	10bfff04 	addi	r2,r2,-4
   164dc:	e0bfff15 	stw	r2,-4(fp)
   164e0:	e0ffff17 	ldw	r3,-4(fp)
   164e4:	00800074 	movhi	r2,1
   164e8:	109c8904 	addi	r2,r2,29220
   164ec:	18bff62e 	bgeu	r3,r2,164c8 <_do_ctors+0x20>
}
   164f0:	0001883a 	nop
   164f4:	0001883a 	nop
   164f8:	e037883a 	mov	sp,fp
   164fc:	dfc00117 	ldw	ra,4(sp)
   16500:	df000017 	ldw	fp,0(sp)
   16504:	dec00204 	addi	sp,sp,8
   16508:	f800283a 	ret

0001650c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   1650c:	defffd04 	addi	sp,sp,-12
   16510:	dfc00215 	stw	ra,8(sp)
   16514:	df000115 	stw	fp,4(sp)
   16518:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   1651c:	00800074 	movhi	r2,1
   16520:	109c8804 	addi	r2,r2,29216
   16524:	e0bfff15 	stw	r2,-4(fp)
   16528:	00000606 	br	16544 <_do_dtors+0x38>
        (*dtor) (); 
   1652c:	e0bfff17 	ldw	r2,-4(fp)
   16530:	10800017 	ldw	r2,0(r2)
   16534:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   16538:	e0bfff17 	ldw	r2,-4(fp)
   1653c:	10bfff04 	addi	r2,r2,-4
   16540:	e0bfff15 	stw	r2,-4(fp)
   16544:	e0ffff17 	ldw	r3,-4(fp)
   16548:	00800074 	movhi	r2,1
   1654c:	109c8904 	addi	r2,r2,29220
   16550:	18bff62e 	bgeu	r3,r2,1652c <_do_dtors+0x20>
}
   16554:	0001883a 	nop
   16558:	0001883a 	nop
   1655c:	e037883a 	mov	sp,fp
   16560:	dfc00117 	ldw	ra,4(sp)
   16564:	df000017 	ldw	fp,0(sp)
   16568:	dec00204 	addi	sp,sp,8
   1656c:	f800283a 	ret

00016570 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   16570:	defffa04 	addi	sp,sp,-24
   16574:	dfc00515 	stw	ra,20(sp)
   16578:	df000415 	stw	fp,16(sp)
   1657c:	df000404 	addi	fp,sp,16
   16580:	e13ffd15 	stw	r4,-12(fp)
   16584:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
   16588:	e0bffc17 	ldw	r2,-16(fp)
   1658c:	10800017 	ldw	r2,0(r2)
   16590:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   16594:	e13ffd17 	ldw	r4,-12(fp)
   16598:	000a4700 	call	a470 <strlen>
   1659c:	10800044 	addi	r2,r2,1
   165a0:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   165a4:	00000d06 	br	165dc <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   165a8:	e0bfff17 	ldw	r2,-4(fp)
   165ac:	10800217 	ldw	r2,8(r2)
   165b0:	e0fffe17 	ldw	r3,-8(fp)
   165b4:	180d883a 	mov	r6,r3
   165b8:	e17ffd17 	ldw	r5,-12(fp)
   165bc:	1009883a 	mov	r4,r2
   165c0:	0016ffc0 	call	16ffc <memcmp>
   165c4:	1000021e 	bne	r2,zero,165d0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   165c8:	e0bfff17 	ldw	r2,-4(fp)
   165cc:	00000706 	br	165ec <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   165d0:	e0bfff17 	ldw	r2,-4(fp)
   165d4:	10800017 	ldw	r2,0(r2)
   165d8:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
   165dc:	e0ffff17 	ldw	r3,-4(fp)
   165e0:	e0bffc17 	ldw	r2,-16(fp)
   165e4:	18bff01e 	bne	r3,r2,165a8 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
   165e8:	0005883a 	mov	r2,zero
}
   165ec:	e037883a 	mov	sp,fp
   165f0:	dfc00117 	ldw	ra,4(sp)
   165f4:	df000017 	ldw	fp,0(sp)
   165f8:	dec00204 	addi	sp,sp,8
   165fc:	f800283a 	ret

00016600 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   16600:	deffff04 	addi	sp,sp,-4
   16604:	df000015 	stw	fp,0(sp)
   16608:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   1660c:	0001883a 	nop
   16610:	e037883a 	mov	sp,fp
   16614:	df000017 	ldw	fp,0(sp)
   16618:	dec00104 	addi	sp,sp,4
   1661c:	f800283a 	ret

00016620 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   16620:	defff904 	addi	sp,sp,-28
   16624:	dfc00615 	stw	ra,24(sp)
   16628:	df000515 	stw	fp,20(sp)
   1662c:	df000504 	addi	fp,sp,20
   16630:	e13ffe15 	stw	r4,-8(fp)
   16634:	e17ffd15 	stw	r5,-12(fp)
   16638:	e1bffc15 	stw	r6,-16(fp)
   1663c:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
   16640:	e1bffb17 	ldw	r6,-20(fp)
   16644:	e17ffc17 	ldw	r5,-16(fp)
   16648:	e13ffd17 	ldw	r4,-12(fp)
   1664c:	0016a080 	call	16a08 <open>
   16650:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
   16654:	e0bfff17 	ldw	r2,-4(fp)
   16658:	10002016 	blt	r2,zero,166dc <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
   1665c:	e0ffff17 	ldw	r3,-4(fp)
   16660:	1805883a 	mov	r2,r3
   16664:	1085883a 	add	r2,r2,r2
   16668:	10c5883a 	add	r2,r2,r3
   1666c:	100490ba 	slli	r2,r2,2
   16670:	00c000b4 	movhi	r3,2
   16674:	10c7883a 	add	r3,r2,r3
   16678:	18e21117 	ldw	r3,-30652(r3)
   1667c:	e0bffe17 	ldw	r2,-8(fp)
   16680:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   16684:	e0ffff17 	ldw	r3,-4(fp)
   16688:	1805883a 	mov	r2,r3
   1668c:	1085883a 	add	r2,r2,r2
   16690:	10c5883a 	add	r2,r2,r3
   16694:	100490ba 	slli	r2,r2,2
   16698:	00c000b4 	movhi	r3,2
   1669c:	10c7883a 	add	r3,r2,r3
   166a0:	18e21217 	ldw	r3,-30648(r3)
   166a4:	e0bffe17 	ldw	r2,-8(fp)
   166a8:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   166ac:	e0ffff17 	ldw	r3,-4(fp)
   166b0:	1805883a 	mov	r2,r3
   166b4:	1085883a 	add	r2,r2,r2
   166b8:	10c5883a 	add	r2,r2,r3
   166bc:	100490ba 	slli	r2,r2,2
   166c0:	00c000b4 	movhi	r3,2
   166c4:	10c7883a 	add	r3,r2,r3
   166c8:	18e21317 	ldw	r3,-30644(r3)
   166cc:	e0bffe17 	ldw	r2,-8(fp)
   166d0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   166d4:	e13fff17 	ldw	r4,-4(fp)
   166d8:	0014ad80 	call	14ad8 <alt_release_fd>
  }
} 
   166dc:	0001883a 	nop
   166e0:	e037883a 	mov	sp,fp
   166e4:	dfc00117 	ldw	ra,4(sp)
   166e8:	df000017 	ldw	fp,0(sp)
   166ec:	dec00204 	addi	sp,sp,8
   166f0:	f800283a 	ret

000166f4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   166f4:	defffb04 	addi	sp,sp,-20
   166f8:	dfc00415 	stw	ra,16(sp)
   166fc:	df000315 	stw	fp,12(sp)
   16700:	df000304 	addi	fp,sp,12
   16704:	e13fff15 	stw	r4,-4(fp)
   16708:	e17ffe15 	stw	r5,-8(fp)
   1670c:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   16710:	01c07fc4 	movi	r7,511
   16714:	01800044 	movi	r6,1
   16718:	e17fff17 	ldw	r5,-4(fp)
   1671c:	010000b4 	movhi	r4,2
   16720:	21221404 	addi	r4,r4,-30640
   16724:	00166200 	call	16620 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   16728:	01c07fc4 	movi	r7,511
   1672c:	000d883a 	mov	r6,zero
   16730:	e17ffe17 	ldw	r5,-8(fp)
   16734:	010000b4 	movhi	r4,2
   16738:	21221104 	addi	r4,r4,-30652
   1673c:	00166200 	call	16620 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   16740:	01c07fc4 	movi	r7,511
   16744:	01800044 	movi	r6,1
   16748:	e17ffd17 	ldw	r5,-12(fp)
   1674c:	010000b4 	movhi	r4,2
   16750:	21221704 	addi	r4,r4,-30628
   16754:	00166200 	call	16620 <alt_open_fd>
}  
   16758:	0001883a 	nop
   1675c:	e037883a 	mov	sp,fp
   16760:	dfc00117 	ldw	ra,4(sp)
   16764:	df000017 	ldw	fp,0(sp)
   16768:	dec00204 	addi	sp,sp,8
   1676c:	f800283a 	ret

00016770 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
   16770:	defff004 	addi	sp,sp,-64
   16774:	df000f15 	stw	fp,60(sp)
   16778:	df000f04 	addi	fp,sp,60
   1677c:	e13ff315 	stw	r4,-52(fp)
   16780:	e17ff215 	stw	r5,-56(fp)
   16784:	e1bff115 	stw	r6,-60(fp)
  int rc = -EINVAL;  
   16788:	00bffa84 	movi	r2,-22
   1678c:	e0bfff15 	stw	r2,-4(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   16790:	e0bff317 	ldw	r2,-52(fp)
   16794:	10800828 	cmpgeui	r2,r2,32
   16798:	1000501e 	bne	r2,zero,168dc <alt_irq_register+0x16c>
  NIOS2_READ_STATUS (context);
   1679c:	0005303a 	rdctl	r2,status
   167a0:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   167a4:	e0fffd17 	ldw	r3,-12(fp)
   167a8:	00bfff84 	movi	r2,-2
   167ac:	1884703a 	and	r2,r3,r2
   167b0:	1001703a 	wrctl	status,r2
  return context;
   167b4:	e0bffd17 	ldw	r2,-12(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
   167b8:	e0bffe15 	stw	r2,-8(fp)

    alt_irq[id].handler = handler;
   167bc:	e0bff317 	ldw	r2,-52(fp)
   167c0:	100890fa 	slli	r4,r2,3
   167c4:	e0fff117 	ldw	r3,-60(fp)
   167c8:	008000b4 	movhi	r2,2
   167cc:	2085883a 	add	r2,r4,r2
   167d0:	10ee0015 	stw	r3,-18432(r2)
    alt_irq[id].context = context;
   167d4:	e0bff317 	ldw	r2,-52(fp)
   167d8:	100890fa 	slli	r4,r2,3
   167dc:	e0fff217 	ldw	r3,-56(fp)
   167e0:	008000b4 	movhi	r2,2
   167e4:	2085883a 	add	r2,r4,r2
   167e8:	10ee0115 	stw	r3,-18428(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   167ec:	e0bff117 	ldw	r2,-60(fp)
   167f0:	10001a26 	beq	r2,zero,1685c <alt_irq_register+0xec>
   167f4:	e0bff317 	ldw	r2,-52(fp)
   167f8:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_READ_STATUS (context);
   167fc:	0005303a 	rdctl	r2,status
   16800:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   16804:	e0fffb17 	ldw	r3,-20(fp)
   16808:	00bfff84 	movi	r2,-2
   1680c:	1884703a 	and	r2,r3,r2
   16810:	1001703a 	wrctl	status,r2
  return context;
   16814:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   16818:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active |= (1 << id);
   1681c:	00c00044 	movi	r3,1
   16820:	e0bffc17 	ldw	r2,-16(fp)
   16824:	1884983a 	sll	r2,r3,r2
   16828:	1007883a 	mov	r3,r2
   1682c:	d0a73a17 	ldw	r2,-25368(gp)
   16830:	1884b03a 	or	r2,r3,r2
   16834:	d0a73a15 	stw	r2,-25368(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   16838:	d0a73a17 	ldw	r2,-25368(gp)
   1683c:	100170fa 	wrctl	ienable,r2
   16840:	e0bffa17 	ldw	r2,-24(fp)
   16844:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context);
   16848:	e0bff917 	ldw	r2,-28(fp)
   1684c:	1001703a 	wrctl	status,r2
}
   16850:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
   16854:	0005883a 	mov	r2,zero
   16858:	00001a06 	br	168c4 <alt_irq_register+0x154>
   1685c:	e0bff317 	ldw	r2,-52(fp)
   16860:	e0bff815 	stw	r2,-32(fp)
  NIOS2_READ_STATUS (context);
   16864:	0005303a 	rdctl	r2,status
   16868:	e0bff715 	stw	r2,-36(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1686c:	e0fff717 	ldw	r3,-36(fp)
   16870:	00bfff84 	movi	r2,-2
   16874:	1884703a 	and	r2,r3,r2
   16878:	1001703a 	wrctl	status,r2
  return context;
   1687c:	e0bff717 	ldw	r2,-36(fp)
  status = alt_irq_disable_all ();
   16880:	e0bff615 	stw	r2,-40(fp)
  alt_irq_active &= ~(1 << id);
   16884:	00c00044 	movi	r3,1
   16888:	e0bff817 	ldw	r2,-32(fp)
   1688c:	1884983a 	sll	r2,r3,r2
   16890:	0084303a 	nor	r2,zero,r2
   16894:	1007883a 	mov	r3,r2
   16898:	d0a73a17 	ldw	r2,-25368(gp)
   1689c:	1884703a 	and	r2,r3,r2
   168a0:	d0a73a15 	stw	r2,-25368(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   168a4:	d0a73a17 	ldw	r2,-25368(gp)
   168a8:	100170fa 	wrctl	ienable,r2
   168ac:	e0bff617 	ldw	r2,-40(fp)
   168b0:	e0bff515 	stw	r2,-44(fp)
  NIOS2_WRITE_STATUS (context);
   168b4:	e0bff517 	ldw	r2,-44(fp)
   168b8:	1001703a 	wrctl	status,r2
}
   168bc:	0001883a 	nop
  return 0;
   168c0:	0005883a 	mov	r2,zero
   168c4:	e0bfff15 	stw	r2,-4(fp)
   168c8:	e0bffe17 	ldw	r2,-8(fp)
   168cc:	e0bff415 	stw	r2,-48(fp)
  NIOS2_WRITE_STATUS (context);
   168d0:	e0bff417 	ldw	r2,-48(fp)
   168d4:	1001703a 	wrctl	status,r2
}
   168d8:	0001883a 	nop

    alt_irq_enable_all(status);
  }
  return rc; 
   168dc:	e0bfff17 	ldw	r2,-4(fp)
}
   168e0:	e037883a 	mov	sp,fp
   168e4:	df000017 	ldw	fp,0(sp)
   168e8:	dec00104 	addi	sp,sp,4
   168ec:	f800283a 	ret

000168f0 <alt_get_errno>:
{
   168f0:	defffe04 	addi	sp,sp,-8
   168f4:	dfc00115 	stw	ra,4(sp)
   168f8:	df000015 	stw	fp,0(sp)
   168fc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   16900:	d0a00917 	ldw	r2,-32732(gp)
   16904:	10000326 	beq	r2,zero,16914 <alt_get_errno+0x24>
   16908:	d0a00917 	ldw	r2,-32732(gp)
   1690c:	103ee83a 	callr	r2
   16910:	00000106 	br	16918 <alt_get_errno+0x28>
   16914:	d0a73504 	addi	r2,gp,-25388
}
   16918:	e037883a 	mov	sp,fp
   1691c:	dfc00117 	ldw	ra,4(sp)
   16920:	df000017 	ldw	fp,0(sp)
   16924:	dec00204 	addi	sp,sp,8
   16928:	f800283a 	ret

0001692c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   1692c:	defffd04 	addi	sp,sp,-12
   16930:	df000215 	stw	fp,8(sp)
   16934:	df000204 	addi	fp,sp,8
   16938:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   1693c:	e0bffe17 	ldw	r2,-8(fp)
   16940:	10800217 	ldw	r2,8(r2)
   16944:	10d00034 	orhi	r3,r2,16384
   16948:	e0bffe17 	ldw	r2,-8(fp)
   1694c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   16950:	e03fff15 	stw	zero,-4(fp)
   16954:	00002306 	br	169e4 <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   16958:	e0ffff17 	ldw	r3,-4(fp)
   1695c:	1805883a 	mov	r2,r3
   16960:	1085883a 	add	r2,r2,r2
   16964:	10c5883a 	add	r2,r2,r3
   16968:	100490ba 	slli	r2,r2,2
   1696c:	00c000b4 	movhi	r3,2
   16970:	10c7883a 	add	r3,r2,r3
   16974:	18e21117 	ldw	r3,-30652(r3)
   16978:	e0bffe17 	ldw	r2,-8(fp)
   1697c:	10800017 	ldw	r2,0(r2)
   16980:	1880151e 	bne	r3,r2,169d8 <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   16984:	e0ffff17 	ldw	r3,-4(fp)
   16988:	1805883a 	mov	r2,r3
   1698c:	1085883a 	add	r2,r2,r2
   16990:	10c5883a 	add	r2,r2,r3
   16994:	100490ba 	slli	r2,r2,2
   16998:	00c000b4 	movhi	r3,2
   1699c:	10c7883a 	add	r3,r2,r3
   169a0:	18a21317 	ldw	r2,-30644(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
   169a4:	10000c0e 	bge	r2,zero,169d8 <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
   169a8:	e0ffff17 	ldw	r3,-4(fp)
   169ac:	1805883a 	mov	r2,r3
   169b0:	1085883a 	add	r2,r2,r2
   169b4:	10c5883a 	add	r2,r2,r3
   169b8:	100490ba 	slli	r2,r2,2
   169bc:	00c000b4 	movhi	r3,2
   169c0:	18e21104 	addi	r3,r3,-30652
   169c4:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   169c8:	e0fffe17 	ldw	r3,-8(fp)
   169cc:	18800226 	beq	r3,r2,169d8 <alt_file_locked+0xac>
    {
      return -EACCES;
   169d0:	00bffcc4 	movi	r2,-13
   169d4:	00000806 	br	169f8 <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
   169d8:	e0bfff17 	ldw	r2,-4(fp)
   169dc:	10800044 	addi	r2,r2,1
   169e0:	e0bfff15 	stw	r2,-4(fp)
   169e4:	d0a00817 	ldw	r2,-32736(gp)
   169e8:	1007883a 	mov	r3,r2
   169ec:	e0bfff17 	ldw	r2,-4(fp)
   169f0:	18bfd92e 	bgeu	r3,r2,16958 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   169f4:	0005883a 	mov	r2,zero
}
   169f8:	e037883a 	mov	sp,fp
   169fc:	df000017 	ldw	fp,0(sp)
   16a00:	dec00104 	addi	sp,sp,4
   16a04:	f800283a 	ret

00016a08 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   16a08:	defff604 	addi	sp,sp,-40
   16a0c:	dfc00915 	stw	ra,36(sp)
   16a10:	df000815 	stw	fp,32(sp)
   16a14:	df000804 	addi	fp,sp,32
   16a18:	e13ffa15 	stw	r4,-24(fp)
   16a1c:	e17ff915 	stw	r5,-28(fp)
   16a20:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   16a24:	00bfffc4 	movi	r2,-1
   16a28:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
   16a2c:	00bffb44 	movi	r2,-19
   16a30:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
   16a34:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   16a38:	d1600604 	addi	r5,gp,-32744
   16a3c:	e13ffa17 	ldw	r4,-24(fp)
   16a40:	00165700 	call	16570 <alt_find_dev>
   16a44:	e0bfff15 	stw	r2,-4(fp)
   16a48:	e0bfff17 	ldw	r2,-4(fp)
   16a4c:	1000051e 	bne	r2,zero,16a64 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   16a50:	e13ffa17 	ldw	r4,-24(fp)
   16a54:	0016d5c0 	call	16d5c <alt_find_file>
   16a58:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
   16a5c:	00800044 	movi	r2,1
   16a60:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   16a64:	e0bfff17 	ldw	r2,-4(fp)
   16a68:	10002c26 	beq	r2,zero,16b1c <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
   16a6c:	e13fff17 	ldw	r4,-4(fp)
   16a70:	0016e640 	call	16e64 <alt_get_fd>
   16a74:	e0bffe15 	stw	r2,-8(fp)
   16a78:	e0bffe17 	ldw	r2,-8(fp)
   16a7c:	1000030e 	bge	r2,zero,16a8c <open+0x84>
    {
      status = index;
   16a80:	e0bffe17 	ldw	r2,-8(fp)
   16a84:	e0bffd15 	stw	r2,-12(fp)
   16a88:	00002606 	br	16b24 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
   16a8c:	e0fffe17 	ldw	r3,-8(fp)
   16a90:	1805883a 	mov	r2,r3
   16a94:	1085883a 	add	r2,r2,r2
   16a98:	10c5883a 	add	r2,r2,r3
   16a9c:	100490ba 	slli	r2,r2,2
   16aa0:	00c000b4 	movhi	r3,2
   16aa4:	18e21104 	addi	r3,r3,-30652
   16aa8:	10c5883a 	add	r2,r2,r3
   16aac:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   16ab0:	e0fff917 	ldw	r3,-28(fp)
   16ab4:	00900034 	movhi	r2,16384
   16ab8:	10bfffc4 	addi	r2,r2,-1
   16abc:	1886703a 	and	r3,r3,r2
   16ac0:	e0bffb17 	ldw	r2,-20(fp)
   16ac4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   16ac8:	e0bffc17 	ldw	r2,-16(fp)
   16acc:	1000051e 	bne	r2,zero,16ae4 <open+0xdc>
   16ad0:	e13ffb17 	ldw	r4,-20(fp)
   16ad4:	001692c0 	call	1692c <alt_file_locked>
   16ad8:	e0bffd15 	stw	r2,-12(fp)
   16adc:	e0bffd17 	ldw	r2,-12(fp)
   16ae0:	10001016 	blt	r2,zero,16b24 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   16ae4:	e0bfff17 	ldw	r2,-4(fp)
   16ae8:	10800317 	ldw	r2,12(r2)
   16aec:	10000826 	beq	r2,zero,16b10 <open+0x108>
   16af0:	e0bfff17 	ldw	r2,-4(fp)
   16af4:	10800317 	ldw	r2,12(r2)
   16af8:	e1fff817 	ldw	r7,-32(fp)
   16afc:	e1bff917 	ldw	r6,-28(fp)
   16b00:	e17ffa17 	ldw	r5,-24(fp)
   16b04:	e13ffb17 	ldw	r4,-20(fp)
   16b08:	103ee83a 	callr	r2
   16b0c:	00000106 	br	16b14 <open+0x10c>
   16b10:	0005883a 	mov	r2,zero
   16b14:	e0bffd15 	stw	r2,-12(fp)
   16b18:	00000206 	br	16b24 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
   16b1c:	00bffb44 	movi	r2,-19
   16b20:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   16b24:	e0bffd17 	ldw	r2,-12(fp)
   16b28:	1000090e 	bge	r2,zero,16b50 <open+0x148>
  {
    alt_release_fd (index);  
   16b2c:	e13ffe17 	ldw	r4,-8(fp)
   16b30:	0014ad80 	call	14ad8 <alt_release_fd>
    ALT_ERRNO = -status;
   16b34:	00168f00 	call	168f0 <alt_get_errno>
   16b38:	1007883a 	mov	r3,r2
   16b3c:	e0bffd17 	ldw	r2,-12(fp)
   16b40:	0085c83a 	sub	r2,zero,r2
   16b44:	18800015 	stw	r2,0(r3)
    return -1;
   16b48:	00bfffc4 	movi	r2,-1
   16b4c:	00000106 	br	16b54 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
   16b50:	e0bffe17 	ldw	r2,-8(fp)
}
   16b54:	e037883a 	mov	sp,fp
   16b58:	dfc00117 	ldw	ra,4(sp)
   16b5c:	df000017 	ldw	fp,0(sp)
   16b60:	dec00204 	addi	sp,sp,8
   16b64:	f800283a 	ret

00016b68 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   16b68:	defffa04 	addi	sp,sp,-24
   16b6c:	df000515 	stw	fp,20(sp)
   16b70:	df000504 	addi	fp,sp,20
   16b74:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
   16b78:	0005303a 	rdctl	r2,status
   16b7c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   16b80:	e0fffc17 	ldw	r3,-16(fp)
   16b84:	00bfff84 	movi	r2,-2
   16b88:	1884703a 	and	r2,r3,r2
   16b8c:	1001703a 	wrctl	status,r2
  return context;
   16b90:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   16b94:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
   16b98:	e0bffb17 	ldw	r2,-20(fp)
   16b9c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   16ba0:	e0bffd17 	ldw	r2,-12(fp)
   16ba4:	10800017 	ldw	r2,0(r2)
   16ba8:	e0fffd17 	ldw	r3,-12(fp)
   16bac:	18c00117 	ldw	r3,4(r3)
   16bb0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   16bb4:	e0bffd17 	ldw	r2,-12(fp)
   16bb8:	10800117 	ldw	r2,4(r2)
   16bbc:	e0fffd17 	ldw	r3,-12(fp)
   16bc0:	18c00017 	ldw	r3,0(r3)
   16bc4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   16bc8:	e0bffd17 	ldw	r2,-12(fp)
   16bcc:	e0fffd17 	ldw	r3,-12(fp)
   16bd0:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   16bd4:	e0bffd17 	ldw	r2,-12(fp)
   16bd8:	e0fffd17 	ldw	r3,-12(fp)
   16bdc:	10c00015 	stw	r3,0(r2)
} 
   16be0:	0001883a 	nop
   16be4:	e0bfff17 	ldw	r2,-4(fp)
   16be8:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   16bec:	e0bffe17 	ldw	r2,-8(fp)
   16bf0:	1001703a 	wrctl	status,r2
}
   16bf4:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
   16bf8:	0001883a 	nop
   16bfc:	e037883a 	mov	sp,fp
   16c00:	df000017 	ldw	fp,0(sp)
   16c04:	dec00104 	addi	sp,sp,4
   16c08:	f800283a 	ret

00016c0c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   16c0c:	defff904 	addi	sp,sp,-28
   16c10:	dfc00615 	stw	ra,24(sp)
   16c14:	df000515 	stw	fp,20(sp)
   16c18:	dc400415 	stw	r17,16(sp)
   16c1c:	dc000315 	stw	r16,12(sp)
   16c20:	df000504 	addi	fp,sp,20
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   16c24:	d0a00c17 	ldw	r2,-32720(gp)
   16c28:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   16c2c:	d1273c17 	ldw	r4,-25360(gp)
   16c30:	d1673d17 	ldw	r5,-25356(gp)
   16c34:	01800044 	movi	r6,1
   16c38:	000f883a 	mov	r7,zero
   16c3c:	2185883a 	add	r2,r4,r6
   16c40:	1111803a 	cmpltu	r8,r2,r4
   16c44:	29c7883a 	add	r3,r5,r7
   16c48:	40c9883a 	add	r4,r8,r3
   16c4c:	2007883a 	mov	r3,r4
   16c50:	1009883a 	mov	r4,r2
   16c54:	180b883a 	mov	r5,r3
   16c58:	d1273c15 	stw	r4,-25360(gp)
   16c5c:	d1673d15 	stw	r5,-25356(gp)
 
  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   16c60:	00002906 	br	16d08 <alt_tick+0xfc>
  {
    next = (alt_alarm*) alarm->llist.next;
   16c64:	e0bffd17 	ldw	r2,-12(fp)
   16c68:	10800017 	ldw	r2,0(r2)
   16c6c:	e0bffc15 	stw	r2,-16(fp)
    
    /* if the alarm period has expired, make the callback */    
    if (alarm->time <= _alt_nticks)
   16c70:	e13ffd17 	ldw	r4,-12(fp)
   16c74:	20800217 	ldw	r2,8(r4)
   16c78:	20c00317 	ldw	r3,12(r4)
   16c7c:	d1273c17 	ldw	r4,-25360(gp)
   16c80:	d1673d17 	ldw	r5,-25356(gp)
   16c84:	28c01e36 	bltu	r5,r3,16d00 <alt_tick+0xf4>
   16c88:	1940011e 	bne	r3,r5,16c90 <alt_tick+0x84>
   16c8c:	20801c36 	bltu	r4,r2,16d00 <alt_tick+0xf4>
    {
      next_callback = alarm->callback (alarm->context);
   16c90:	e0bffd17 	ldw	r2,-12(fp)
   16c94:	10800417 	ldw	r2,16(r2)
   16c98:	e0fffd17 	ldw	r3,-12(fp)
   16c9c:	18c00517 	ldw	r3,20(r3)
   16ca0:	1809883a 	mov	r4,r3
   16ca4:	103ee83a 	callr	r2
   16ca8:	e0bffb15 	stw	r2,-20(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   16cac:	e0bffb17 	ldw	r2,-20(fp)
   16cb0:	1000031e 	bne	r2,zero,16cc0 <alt_tick+0xb4>
      {
        alt_alarm_stop (alarm);
   16cb4:	e13ffd17 	ldw	r4,-12(fp)
   16cb8:	0016b680 	call	16b68 <alt_alarm_stop>
   16cbc:	00001006 	br	16d00 <alt_tick+0xf4>
      }
      else
      {
        alarm->time += next_callback;
   16cc0:	e0bffd17 	ldw	r2,-12(fp)
   16cc4:	11000217 	ldw	r4,8(r2)
   16cc8:	11400317 	ldw	r5,12(r2)
   16ccc:	e0bffb17 	ldw	r2,-20(fp)
   16cd0:	1021883a 	mov	r16,r2
   16cd4:	0023883a 	mov	r17,zero
   16cd8:	2405883a 	add	r2,r4,r16
   16cdc:	110d803a 	cmpltu	r6,r2,r4
   16ce0:	2c47883a 	add	r3,r5,r17
   16ce4:	30c9883a 	add	r4,r6,r3
   16ce8:	2007883a 	mov	r3,r4
   16cec:	1009883a 	mov	r4,r2
   16cf0:	180b883a 	mov	r5,r3
   16cf4:	e0bffd17 	ldw	r2,-12(fp)
   16cf8:	11000215 	stw	r4,8(r2)
   16cfc:	11400315 	stw	r5,12(r2)
      }
    }
    alarm = next;
   16d00:	e0bffc17 	ldw	r2,-16(fp)
   16d04:	e0bffd15 	stw	r2,-12(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
   16d08:	e0fffd17 	ldw	r3,-12(fp)
   16d0c:	d0a00c04 	addi	r2,gp,-32720
   16d10:	18bfd41e 	bne	r3,r2,16c64 <alt_tick+0x58>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   16d14:	0001883a 	nop
}
   16d18:	0001883a 	nop
   16d1c:	e6fffe04 	addi	sp,fp,-8
   16d20:	dfc00317 	ldw	ra,12(sp)
   16d24:	df000217 	ldw	fp,8(sp)
   16d28:	dc400117 	ldw	r17,4(sp)
   16d2c:	dc000017 	ldw	r16,0(sp)
   16d30:	dec00404 	addi	sp,sp,16
   16d34:	f800283a 	ret

00016d38 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   16d38:	deffff04 	addi	sp,sp,-4
   16d3c:	df000015 	stw	fp,0(sp)
   16d40:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   16d44:	000170fa 	wrctl	ienable,zero
}
   16d48:	0001883a 	nop
   16d4c:	e037883a 	mov	sp,fp
   16d50:	df000017 	ldw	fp,0(sp)
   16d54:	dec00104 	addi	sp,sp,4
   16d58:	f800283a 	ret

00016d5c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   16d5c:	defffb04 	addi	sp,sp,-20
   16d60:	dfc00415 	stw	ra,16(sp)
   16d64:	df000315 	stw	fp,12(sp)
   16d68:	df000304 	addi	fp,sp,12
   16d6c:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   16d70:	d0a00417 	ldw	r2,-32752(gp)
   16d74:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   16d78:	00003106 	br	16e40 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   16d7c:	e0bfff17 	ldw	r2,-4(fp)
   16d80:	10800217 	ldw	r2,8(r2)
   16d84:	1009883a 	mov	r4,r2
   16d88:	000a4700 	call	a470 <strlen>
   16d8c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   16d90:	e0bfff17 	ldw	r2,-4(fp)
   16d94:	10c00217 	ldw	r3,8(r2)
   16d98:	e0bffe17 	ldw	r2,-8(fp)
   16d9c:	10bfffc4 	addi	r2,r2,-1
   16da0:	1885883a 	add	r2,r3,r2
   16da4:	10800003 	ldbu	r2,0(r2)
   16da8:	10803fcc 	andi	r2,r2,255
   16dac:	1080201c 	xori	r2,r2,128
   16db0:	10bfe004 	addi	r2,r2,-128
   16db4:	10800bd8 	cmpnei	r2,r2,47
   16db8:	1000031e 	bne	r2,zero,16dc8 <alt_find_file+0x6c>
    {
      len -= 1;
   16dbc:	e0bffe17 	ldw	r2,-8(fp)
   16dc0:	10bfffc4 	addi	r2,r2,-1
   16dc4:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   16dc8:	e0bffe17 	ldw	r2,-8(fp)
   16dcc:	e0fffd17 	ldw	r3,-12(fp)
   16dd0:	1885883a 	add	r2,r3,r2
   16dd4:	10800003 	ldbu	r2,0(r2)
   16dd8:	10803fcc 	andi	r2,r2,255
   16ddc:	1080201c 	xori	r2,r2,128
   16de0:	10bfe004 	addi	r2,r2,-128
   16de4:	10800be0 	cmpeqi	r2,r2,47
   16de8:	1000081e 	bne	r2,zero,16e0c <alt_find_file+0xb0>
   16dec:	e0bffe17 	ldw	r2,-8(fp)
   16df0:	e0fffd17 	ldw	r3,-12(fp)
   16df4:	1885883a 	add	r2,r3,r2
   16df8:	10800003 	ldbu	r2,0(r2)
   16dfc:	10803fcc 	andi	r2,r2,255
   16e00:	1080201c 	xori	r2,r2,128
   16e04:	10bfe004 	addi	r2,r2,-128
   16e08:	10000a1e 	bne	r2,zero,16e34 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   16e0c:	e0bfff17 	ldw	r2,-4(fp)
   16e10:	10800217 	ldw	r2,8(r2)
   16e14:	e0fffe17 	ldw	r3,-8(fp)
   16e18:	180d883a 	mov	r6,r3
   16e1c:	e17ffd17 	ldw	r5,-12(fp)
   16e20:	1009883a 	mov	r4,r2
   16e24:	0016ffc0 	call	16ffc <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
   16e28:	1000021e 	bne	r2,zero,16e34 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
   16e2c:	e0bfff17 	ldw	r2,-4(fp)
   16e30:	00000706 	br	16e50 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   16e34:	e0bfff17 	ldw	r2,-4(fp)
   16e38:	10800017 	ldw	r2,0(r2)
   16e3c:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
   16e40:	e0ffff17 	ldw	r3,-4(fp)
   16e44:	d0a00404 	addi	r2,gp,-32752
   16e48:	18bfcc1e 	bne	r3,r2,16d7c <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
   16e4c:	0005883a 	mov	r2,zero
}
   16e50:	e037883a 	mov	sp,fp
   16e54:	dfc00117 	ldw	ra,4(sp)
   16e58:	df000017 	ldw	fp,0(sp)
   16e5c:	dec00204 	addi	sp,sp,8
   16e60:	f800283a 	ret

00016e64 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   16e64:	defffc04 	addi	sp,sp,-16
   16e68:	df000315 	stw	fp,12(sp)
   16e6c:	df000304 	addi	fp,sp,12
   16e70:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
   16e74:	00bffa04 	movi	r2,-24
   16e78:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   16e7c:	e03fff15 	stw	zero,-4(fp)
   16e80:	00001d06 	br	16ef8 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
   16e84:	e0ffff17 	ldw	r3,-4(fp)
   16e88:	1805883a 	mov	r2,r3
   16e8c:	1085883a 	add	r2,r2,r2
   16e90:	10c5883a 	add	r2,r2,r3
   16e94:	100490ba 	slli	r2,r2,2
   16e98:	00c000b4 	movhi	r3,2
   16e9c:	10c7883a 	add	r3,r2,r3
   16ea0:	18a21117 	ldw	r2,-30652(r3)
   16ea4:	1000111e 	bne	r2,zero,16eec <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
   16ea8:	e0ffff17 	ldw	r3,-4(fp)
   16eac:	1805883a 	mov	r2,r3
   16eb0:	1085883a 	add	r2,r2,r2
   16eb4:	10c5883a 	add	r2,r2,r3
   16eb8:	100490ba 	slli	r2,r2,2
   16ebc:	e13ffd17 	ldw	r4,-12(fp)
   16ec0:	00c000b4 	movhi	r3,2
   16ec4:	10c7883a 	add	r3,r2,r3
   16ec8:	19221115 	stw	r4,-30652(r3)
      if (i > alt_max_fd)
   16ecc:	d0e00817 	ldw	r3,-32736(gp)
   16ed0:	e0bfff17 	ldw	r2,-4(fp)
   16ed4:	1880020e 	bge	r3,r2,16ee0 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
   16ed8:	e0bfff17 	ldw	r2,-4(fp)
   16edc:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
   16ee0:	e0bfff17 	ldw	r2,-4(fp)
   16ee4:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   16ee8:	00000706 	br	16f08 <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
   16eec:	e0bfff17 	ldw	r2,-4(fp)
   16ef0:	10800044 	addi	r2,r2,1
   16ef4:	e0bfff15 	stw	r2,-4(fp)
   16ef8:	e0bfff17 	ldw	r2,-4(fp)
   16efc:	10800810 	cmplti	r2,r2,32
   16f00:	103fe01e 	bne	r2,zero,16e84 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
   16f04:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   16f08:	e0bffe17 	ldw	r2,-8(fp)
}
   16f0c:	e037883a 	mov	sp,fp
   16f10:	df000017 	ldw	fp,0(sp)
   16f14:	dec00104 	addi	sp,sp,4
   16f18:	f800283a 	ret

00016f1c <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   16f1c:	defffe04 	addi	sp,sp,-8
   16f20:	df000115 	stw	fp,4(sp)
   16f24:	df000104 	addi	fp,sp,4
   16f28:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   16f2c:	e0bfff17 	ldw	r2,-4(fp)
   16f30:	10bffe84 	addi	r2,r2,-6
   16f34:	10c00428 	cmpgeui	r3,r2,16
   16f38:	1800191e 	bne	r3,zero,16fa0 <alt_exception_cause_generated_bad_addr+0x84>
   16f3c:	100690ba 	slli	r3,r2,2
   16f40:	00800074 	movhi	r2,1
   16f44:	1885883a 	add	r2,r3,r2
   16f48:	109bd417 	ldw	r2,28496(r2)
   16f4c:	1000683a 	jmp	r2
   16f50:	00016f90 	cmplti	zero,zero,1470
   16f54:	00016f90 	cmplti	zero,zero,1470
   16f58:	00016fa0 	cmpeqi	zero,zero,1470
   16f5c:	00016fa0 	cmpeqi	zero,zero,1470
   16f60:	00016fa0 	cmpeqi	zero,zero,1470
   16f64:	00016f90 	cmplti	zero,zero,1470
   16f68:	00016f98 	cmpnei	zero,zero,1470
   16f6c:	00016fa0 	cmpeqi	zero,zero,1470
   16f70:	00016f90 	cmplti	zero,zero,1470
   16f74:	00016f90 	cmplti	zero,zero,1470
   16f78:	00016fa0 	cmpeqi	zero,zero,1470
   16f7c:	00016f90 	cmplti	zero,zero,1470
   16f80:	00016f98 	cmpnei	zero,zero,1470
   16f84:	00016fa0 	cmpeqi	zero,zero,1470
   16f88:	00016fa0 	cmpeqi	zero,zero,1470
   16f8c:	00016f90 	cmplti	zero,zero,1470
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   16f90:	00800044 	movi	r2,1
   16f94:	00000306 	br	16fa4 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   16f98:	0005883a 	mov	r2,zero
   16f9c:	00000106 	br	16fa4 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
   16fa0:	0005883a 	mov	r2,zero
  }
}
   16fa4:	e037883a 	mov	sp,fp
   16fa8:	df000017 	ldw	fp,0(sp)
   16fac:	dec00104 	addi	sp,sp,4
   16fb0:	f800283a 	ret

00016fb4 <atexit>:
   16fb4:	200b883a 	mov	r5,r4
   16fb8:	000f883a 	mov	r7,zero
   16fbc:	000d883a 	mov	r6,zero
   16fc0:	0009883a 	mov	r4,zero
   16fc4:	00170741 	jmpi	17074 <__register_exitproc>

00016fc8 <exit>:
   16fc8:	defffe04 	addi	sp,sp,-8
   16fcc:	000b883a 	mov	r5,zero
   16fd0:	dc000015 	stw	r16,0(sp)
   16fd4:	dfc00115 	stw	ra,4(sp)
   16fd8:	2021883a 	mov	r16,r4
   16fdc:	00171040 	call	17104 <__call_exitprocs>
   16fe0:	008000b4 	movhi	r2,2
   16fe4:	1126b717 	ldw	r4,-25892(r2)
   16fe8:	20800f17 	ldw	r2,60(r4)
   16fec:	10000126 	beq	r2,zero,16ff4 <exit+0x2c>
   16ff0:	103ee83a 	callr	r2
   16ff4:	8009883a 	mov	r4,r16
   16ff8:	00143240 	call	14324 <_exit>

00016ffc <memcmp>:
   16ffc:	30800130 	cmpltui	r2,r6,4
   17000:	10000b1e 	bne	r2,zero,17030 <memcmp+0x34>
   17004:	2144b03a 	or	r2,r4,r5
   17008:	108000cc 	andi	r2,r2,3
   1700c:	1000171e 	bne	r2,zero,1706c <memcmp+0x70>
   17010:	20c00017 	ldw	r3,0(r4)
   17014:	28800017 	ldw	r2,0(r5)
   17018:	1880141e 	bne	r3,r2,1706c <memcmp+0x70>
   1701c:	31bfff04 	addi	r6,r6,-4
   17020:	30800128 	cmpgeui	r2,r6,4
   17024:	21000104 	addi	r4,r4,4
   17028:	29400104 	addi	r5,r5,4
   1702c:	103ff81e 	bne	r2,zero,17010 <memcmp+0x14>
   17030:	30bfffc4 	addi	r2,r6,-1
   17034:	30000b26 	beq	r6,zero,17064 <memcmp+0x68>
   17038:	11800044 	addi	r6,r2,1
   1703c:	218d883a 	add	r6,r4,r6
   17040:	00000106 	br	17048 <memcmp+0x4c>
   17044:	21800726 	beq	r4,r6,17064 <memcmp+0x68>
   17048:	20800003 	ldbu	r2,0(r4)
   1704c:	28c00003 	ldbu	r3,0(r5)
   17050:	21000044 	addi	r4,r4,1
   17054:	29400044 	addi	r5,r5,1
   17058:	10fffa26 	beq	r2,r3,17044 <memcmp+0x48>
   1705c:	10c5c83a 	sub	r2,r2,r3
   17060:	f800283a 	ret
   17064:	0005883a 	mov	r2,zero
   17068:	f800283a 	ret
   1706c:	30bfffc4 	addi	r2,r6,-1
   17070:	003ff106 	br	17038 <memcmp+0x3c>

00017074 <__register_exitproc>:
   17074:	008000b4 	movhi	r2,2
   17078:	10e6b717 	ldw	r3,-25892(r2)
   1707c:	18805217 	ldw	r2,328(r3)
   17080:	10001726 	beq	r2,zero,170e0 <__register_exitproc+0x6c>
   17084:	10c00117 	ldw	r3,4(r2)
   17088:	1a000808 	cmpgei	r8,r3,32
   1708c:	40001b1e 	bne	r8,zero,170fc <__register_exitproc+0x88>
   17090:	20000b26 	beq	r4,zero,170c0 <__register_exitproc+0x4c>
   17094:	181090ba 	slli	r8,r3,2
   17098:	02400044 	movi	r9,1
   1709c:	48d2983a 	sll	r9,r9,r3
   170a0:	1211883a 	add	r8,r2,r8
   170a4:	41802215 	stw	r6,136(r8)
   170a8:	11806217 	ldw	r6,392(r2)
   170ac:	21000098 	cmpnei	r4,r4,2
   170b0:	324cb03a 	or	r6,r6,r9
   170b4:	11806215 	stw	r6,392(r2)
   170b8:	41c04215 	stw	r7,264(r8)
   170bc:	20000b26 	beq	r4,zero,170ec <__register_exitproc+0x78>
   170c0:	19000084 	addi	r4,r3,2
   170c4:	200890ba 	slli	r4,r4,2
   170c8:	18c00044 	addi	r3,r3,1
   170cc:	10c00115 	stw	r3,4(r2)
   170d0:	1105883a 	add	r2,r2,r4
   170d4:	11400015 	stw	r5,0(r2)
   170d8:	0005883a 	mov	r2,zero
   170dc:	f800283a 	ret
   170e0:	18805304 	addi	r2,r3,332
   170e4:	18805215 	stw	r2,328(r3)
   170e8:	003fe606 	br	17084 <__register_exitproc+0x10>
   170ec:	11006317 	ldw	r4,396(r2)
   170f0:	2252b03a 	or	r9,r4,r9
   170f4:	12406315 	stw	r9,396(r2)
   170f8:	003ff106 	br	170c0 <__register_exitproc+0x4c>
   170fc:	00bfffc4 	movi	r2,-1
   17100:	f800283a 	ret

00017104 <__call_exitprocs>:
   17104:	defff704 	addi	sp,sp,-36
   17108:	008000b4 	movhi	r2,2
   1710c:	dcc00315 	stw	r19,12(sp)
   17110:	14e6b717 	ldw	r19,-25892(r2)
   17114:	dc800215 	stw	r18,8(sp)
   17118:	dfc00815 	stw	ra,32(sp)
   1711c:	9c805217 	ldw	r18,328(r19)
   17120:	ddc00715 	stw	r23,28(sp)
   17124:	dd800615 	stw	r22,24(sp)
   17128:	dd400515 	stw	r21,20(sp)
   1712c:	dd000415 	stw	r20,16(sp)
   17130:	dc400115 	stw	r17,4(sp)
   17134:	dc000015 	stw	r16,0(sp)
   17138:	90001026 	beq	r18,zero,1717c <__call_exitprocs+0x78>
   1713c:	202b883a 	mov	r21,r4
   17140:	282d883a 	mov	r22,r5
   17144:	05000044 	movi	r20,1
   17148:	94000117 	ldw	r16,4(r18)
   1714c:	847fffc4 	addi	r17,r16,-1
   17150:	88000a16 	blt	r17,zero,1717c <__call_exitprocs+0x78>
   17154:	84000044 	addi	r16,r16,1
   17158:	802090ba 	slli	r16,r16,2
   1715c:	9421883a 	add	r16,r18,r16
   17160:	b0001126 	beq	r22,zero,171a8 <__call_exitprocs+0xa4>
   17164:	80804017 	ldw	r2,256(r16)
   17168:	15800f26 	beq	r2,r22,171a8 <__call_exitprocs+0xa4>
   1716c:	8c7fffc4 	addi	r17,r17,-1
   17170:	88bfffd8 	cmpnei	r2,r17,-1
   17174:	843fff04 	addi	r16,r16,-4
   17178:	103ff91e 	bne	r2,zero,17160 <__call_exitprocs+0x5c>
   1717c:	dfc00817 	ldw	ra,32(sp)
   17180:	ddc00717 	ldw	r23,28(sp)
   17184:	dd800617 	ldw	r22,24(sp)
   17188:	dd400517 	ldw	r21,20(sp)
   1718c:	dd000417 	ldw	r20,16(sp)
   17190:	dcc00317 	ldw	r19,12(sp)
   17194:	dc800217 	ldw	r18,8(sp)
   17198:	dc400117 	ldw	r17,4(sp)
   1719c:	dc000017 	ldw	r16,0(sp)
   171a0:	dec00904 	addi	sp,sp,36
   171a4:	f800283a 	ret
   171a8:	90800117 	ldw	r2,4(r18)
   171ac:	81800017 	ldw	r6,0(r16)
   171b0:	10bfffc4 	addi	r2,r2,-1
   171b4:	14401726 	beq	r2,r17,17214 <__call_exitprocs+0x110>
   171b8:	80000015 	stw	zero,0(r16)
   171bc:	303feb26 	beq	r6,zero,1716c <__call_exitprocs+0x68>
   171c0:	a446983a 	sll	r3,r20,r17
   171c4:	90806217 	ldw	r2,392(r18)
   171c8:	95c00117 	ldw	r23,4(r18)
   171cc:	1884703a 	and	r2,r3,r2
   171d0:	1000081e 	bne	r2,zero,171f4 <__call_exitprocs+0xf0>
   171d4:	303ee83a 	callr	r6
   171d8:	90c00117 	ldw	r3,4(r18)
   171dc:	98805217 	ldw	r2,328(r19)
   171e0:	1dc0011e 	bne	r3,r23,171e8 <__call_exitprocs+0xe4>
   171e4:	90bfe126 	beq	r18,r2,1716c <__call_exitprocs+0x68>
   171e8:	103fe426 	beq	r2,zero,1717c <__call_exitprocs+0x78>
   171ec:	1025883a 	mov	r18,r2
   171f0:	003fd506 	br	17148 <__call_exitprocs+0x44>
   171f4:	90806317 	ldw	r2,396(r18)
   171f8:	81002017 	ldw	r4,128(r16)
   171fc:	1886703a 	and	r3,r3,r2
   17200:	1800061e 	bne	r3,zero,1721c <__call_exitprocs+0x118>
   17204:	200b883a 	mov	r5,r4
   17208:	a809883a 	mov	r4,r21
   1720c:	303ee83a 	callr	r6
   17210:	003ff106 	br	171d8 <__call_exitprocs+0xd4>
   17214:	94400115 	stw	r17,4(r18)
   17218:	003fe806 	br	171bc <__call_exitprocs+0xb8>
   1721c:	303ee83a 	callr	r6
   17220:	003fed06 	br	171d8 <__call_exitprocs+0xd4>
