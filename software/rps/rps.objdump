
rps.elf:     file format elf32-littlenios2
rps.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000228

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0001aed4 memsz 0x0001aed4 flags r-x
    LOAD off    0x0001bef4 vaddr 0x0001aef4 paddr 0x0001cb84 align 2**12
         filesz 0x00001c90 memsz 0x00001c90 flags rw-
    LOAD off    0x00000814 vaddr 0x0001e814 paddr 0x0001e814 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000208  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00019f04  00000228  00000228  00001228  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000dc8  0001a12c  0001a12c  0001b12c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c90  0001aef4  0001cb84  0001bef4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  0001e814  0001e814  0001e814  2**2
                  ALLOC, SMALL_DATA
  6 .SDRAM        00000000  0001e974  0001e974  0001db84  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  0001db84  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 000015b0  00000000  00000000  0001dbb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   000384ff  00000000  00000000  0001f168  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000ea06  00000000  00000000  00057667  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   00020060  00000000  00000000  0006606d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  0000361c  00000000  00000000  000860d0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    000055d2  00000000  00000000  000896ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    00027d83  00000000  00000000  0008ecbe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000010  00000000  00000000  000b6a44  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00003200  00000000  00000000  000b6a58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  000be02d  2**0
                  CONTENTS, READONLY
 18 .cpu          00000005  00000000  00000000  000be030  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000be035  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000be036  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000be037  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000be03b  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000be03f  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  000be043  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  000be04c  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  000be055  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000f  00000000  00000000  000be05e  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000002c  00000000  00000000  000be06d  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     000a4f38  00000000  00000000  000be099  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000228 l    d  .text	00000000 .text
0001a12c l    d  .rodata	00000000 .rodata
0001aef4 l    d  .rwdata	00000000 .rwdata
0001e814 l    d  .bss	00000000 .bss
0001e974 l    d  .SDRAM	00000000 .SDRAM
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/school/Jaar-3/Periode-4/FPGA/FPGA-project/software/rps_bsp//obj/HAL/src/crt0.o
00000260 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 kiss_fft.c
00000264 l     F .text	00000154 kf_bfly2
000003b8 l     F .text	000004b4 kf_bfly4
0000086c l     F .text	000003a0 kf_bfly3
00000c0c l     F .text	00000768 kf_bfly5
00001374 l     F .text	000002d4 kf_bfly_generic
00001648 l     F .text	00000238 kf_work
00001880 l     F .text	00000144 kf_factor
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 libmfcc.c
00000000 l    df *ABS*	00000000 s_cos.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_sin.c
00000000 l    df *ABS*	00000000 sf_cos.c
00000000 l    df *ABS*	00000000 w_log.c
00000000 l    df *ABS*	00000000 w_pow.c
00000000 l    df *ABS*	00000000 w_sqrt.c
00000000 l    df *ABS*	00000000 e_log.c
00000000 l    df *ABS*	00000000 e_pow.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
0001a2ac l     O .rodata	00000080 npio2_hw
0001a32c l     O .rodata	00000108 two_over_pi
00000000 l    df *ABS*	00000000 e_sqrt.c
00000000 l    df *ABS*	00000000 ef_rem_pio2.c
0001a434 l     O .rodata	00000080 npio2_hw
0001a4b4 l     O .rodata	00000318 two_over_pi
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
0001a80c l     O .rodata	00000010 init_jk
0001a7cc l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 kf_cos.c
00000000 l    df *ABS*	00000000 kf_rem_pio2.c
0001a848 l     O .rodata	0000000c init_jk
0001a81c l     O .rodata	0000002c PIo2
00000000 l    df *ABS*	00000000 kf_sin.c
00000000 l    df *ABS*	00000000 math_err.c
000082f8 l     F .text	00000048 with_errno
00008340 l     F .text	00000050 xflow
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 sf_floor.c
00000000 l    df *ABS*	00000000 sf_scalbn.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 impure.c
0001aef4 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000f034 l     F .text	000000c0 __sbprintf
0001a9a8 l     O .rodata	00000010 blanks.1
0001a998 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0000f258 l     F .text	00000220 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00010ecc l     F .text	00000008 __fp_lock
00010ee0 l     F .text	00000008 __fp_unlock
00010ee8 l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0001aa5c l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0001316c l     F .text	000000f4 __sprint_r.part.0
000144f4 l     F .text	000000c0 __sbprintf
0001ab90 l     O .rodata	00000010 blanks.1
0001ab80 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
0001499c l     F .text	000000c0 _fclose_r.part.0
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
00016e8c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
00016fa4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00017008 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
00017120 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0001720c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
00017374 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
00017460 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_printf.c
00000000 l    df *ABS*	00000000 alt_putchar.c
00000000 l    df *ABS*	00000000 alt_read.c
0001789c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0001cb74 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
00017b08 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00017c48 l     F .text	00000034 alt_dev_reg
0001ba34 l     O .rwdata	00001060 JTAG_UART
0001ca94 l     O .rwdata	00000030 AV_Config
0001cac4 l     O .rwdata	00000030 Audio_Subsystem_Audio
0001caf4 l     O .rwdata	0000002c Char_LCD_16x2
0001cb20 l     O .rwdata	0000002c Serial_Port
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00017f70 l     F .text	00000210 altera_avalon_jtag_uart_irq
00018180 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
000187c4 l     F .text	00000080 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_character_lcd.c
00000000 l    df *ABS*	00000000 altera_up_avalon_rs232.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
000192cc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00019528 l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
000197f8 l     F .text	0000003c alt_get_errno
00019834 l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0001e848 g     O .bss	00000004 alt_instruction_exception_handler
0000cf90 g     F .text	00000018 putchar
00012c9c g     F .text	00000070 _mprec_log10
00012d88 g     F .text	00000060 __any_on
00015288 g     F .text	00000058 _isatty_r
0001aa68 g     O .rodata	00000028 __mprec_tinytens
0001757c g     F .text	0000007c alt_main
0001e874 g     O .bss	00000100 alt_irq
000153d4 g     F .text	00000064 _lseek_r
000034c0 g     F .text	000000c4 log
00003840 g     F .text	000000ac sqrt
0001cb84 g       *ABS*	00000000 __flash_rwdata_start
00018934 g     F .text	00000040 alt_up_character_lcd_send_cmd
0000ae30 g     F .text	00000080 .hidden __eqdf2
0001e974 g       *ABS*	00000000 __alt_heap_start
00016244 g     F .text	00000060 _kill_r
0000cf50 g     F .text	00000038 printf
00015c10 g     F .text	0000006c _wcrtomb_r
00015db4 g     F .text	00000098 _signal_r
00013070 g     F .text	0000005c __sseek
00011230 g     F .text	00000010 __sinit
000145b4 g     F .text	00000148 __swbuf_r
000152e0 g     F .text	00000074 _setlocale_r
00011050 g     F .text	00000078 __sfmoreglue
0001761c g     F .text	00000024 __malloc_unlock
00018fec g     F .text	00000090 alt_up_rs232_read_fd
00002fb0 g     F .text	0000011c GetCenterFrequency
000083b4 g     F .text	0000004c .hidden __math_divzero
00015488 g     F .text	0000012c memmove
0001121c g     F .text	00000014 _cleanup
00011bf8 g     F .text	000000a4 _Balloc
0000999c g     F .text	00000070 .hidden __fixsfsi
0000aeb0 g     F .text	000000e8 .hidden __gtdf2
00019c40 g     F .text	00000024 altera_nios2_gen2_irq_init
0000c614 g     F .text	0000000c __errno
000188c0 g     F .text	00000074 get_DDRAM_addr
00000000 g     F .entry	0000000c __reset
000117d0 g     F .text	00000008 __localeconv_l
00005a38 g     F .text	000004fc __ieee754_rem_pio2f
00000020 g       *ABS*	00000000 __flash_exceptions_start
00014d94 g     F .text	00000060 _fstat_r
0001e824 g     O .bss	00000004 errno
0000317c g     F .text	000001e4 floor
00012fe8 g     F .text	00000008 __seofread
0001e830 g     O .bss	00000004 alt_argv
00024b4c g       *ABS*	00000000 _gp
00009508 g     F .text	00000494 .hidden __subsf3
00017100 g     F .text	00000020 getpid
0001b8b4 g     O .rwdata	00000180 alt_fd_list
00005080 g     F .text	0000074c __ieee754_rem_pio2
0000cf88 g     F .text	00000008 _putchar_r
00019478 g     F .text	00000090 alt_find_dev
0000ce20 g     F .text	00000100 memcpy
00018ae4 g     F .text	00000050 alt_up_character_lcd_write_fd
00008400 g     F .text	00000094 .hidden __math_invalid
00010ed4 g     F .text	0000000c _cleanup_r
0000c20c g     F .text	000000b8 .hidden __floatsidf
000195fc g     F .text	0000007c alt_io_redirect
0000af98 g     F .text	000000e8 .hidden __ltdf2
0001a12c g       *ABS*	00000000 __DTOR_END__
00018f78 g     F .text	00000074 alt_up_rs232_read_data
00019e24 g     F .text	00000098 alt_exception_cause_generated_bad_addr
00012bf8 g     F .text	000000a4 __ratio
000144d8 g     F .text	0000001c __vfiprintf_internal
0001837c g     F .text	00000220 altera_avalon_jtag_uart_read
0000c620 g     F .text	00000010 malloc
0000cf20 g     F .text	00000030 _printf_r
00008a8c g     F .text	00000064 .hidden __udivsi3
0001715c g     F .text	000000b0 isatty
00015e4c g     F .text	000000c4 _raise_r
000147d0 g     F .text	00000064 __assert_func
0001aab8 g     O .rodata	000000c8 __mprec_tens
00005f34 g     F .text	000004ac __kernel_cos
0001e820 g     O .bss	00000004 __malloc_top_pad
000162a4 g     F .text	00000004 _getpid_r
000117d8 g     F .text	0000000c _localeconv_r
00014df4 g     F .text	00000494 __sfvwrite_r
00012068 g     F .text	000000b0 __i2b
00015f10 g     F .text	000000bc __sigtramp_r
0000cfa8 g     F .text	00000058 _sbrk_r
000155b4 g     F .text	00000064 _read_r
0001cb6c g     O .rwdata	00000004 alt_max_fd
00018ef4 g     F .text	00000044 alt_up_rs232_check_parity
00014a5c g     F .text	00000070 _fclose_r
00010e48 g     F .text	00000084 fflush
0001e81c g     O .bss	00000004 __malloc_max_sbrked_mem
00019678 g     F .text	00000180 alt_irq_register
000070f4 g     F .text	000002c8 __kernel_sin
0000c354 g     F .text	000000fc .hidden __extendsfdf2
00009c2c g     F .text	000008f0 .hidden __adddf3
00008fe0 g     F .text	00000070 .hidden __nesf2
0001298c g     F .text	00000108 __b2d
000168c8 g     F .text	000005c4 .hidden __umoddi3
0001749c g     F .text	000000e0 lseek
0001cb4c g     O .rwdata	00000004 _global_impure_ptr
00015618 g     F .text	0000053c _realloc_r
00008144 g     F .text	000001b4 __kernel_sinf
0001e974 g       *ABS*	00000000 __bss_end
00019b14 g     F .text	0000012c alt_tick
000162a8 g     F .text	00000620 .hidden __udivdi3
00014cf8 g     F .text	00000024 _fputwc_r
0001aa90 g     O .rodata	00000028 __mprec_bigtens
00011e1c g     F .text	00000138 __s2b
00015d40 g     F .text	00000018 abort
0000c2c4 g     F .text	00000090 .hidden __floatunsidf
000126ac g     F .text	00000058 __mcmp
00011250 g     F .text	00000014 __fp_lock_all
00002154 g     F .text	000000cc check_KEYs
00019a70 g     F .text	000000a4 alt_alarm_stop
00003424 g     F .text	0000009c cosf
0001e838 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000cc alt_irq_handler
0001b88c g     O .rwdata	00000028 alt_dev_null
000063e0 g     F .text	00000d14 __kernel_rem_pio2
0001e814 g     O .bss	00000004 char_lcd_dev
00018d84 g     F .text	00000038 alt_up_character_lcd_cursor_blink_on
000192ac g     F .text	00000020 alt_dcache_flush_all
00011f54 g     F .text	00000064 __hi0bits
0000c18c g     F .text	00000080 .hidden __fixdfsi
000073bc g     F .text	000002c4 __kernel_cosf
0001cb84 g       *ABS*	00000000 __ram_rwdata_end
0001cb64 g     O .rwdata	00000008 alt_dev_list
00017b44 g     F .text	00000104 write
00012de8 g     F .text	000000cc _putc_r
00009050 g     F .text	000000b8 .hidden __gtsf2
0001aef4 g       *ABS*	00000000 __ram_rodata_end
00017044 g     F .text	000000bc fstat
0001907c g     F .text	00000094 alt_up_rs232_write_fd
00017248 g     F .text	0000012c kill
00000000 g       *ABS*	00000000 __alt_mem_SDRAM
0000af98 g     F .text	000000e8 .hidden __ledf2
000083a8 g     F .text	0000000c .hidden __math_oflow
000123dc g     F .text	00000148 __pow5mult
00013278 g     F .text	00001260 ___vfiprintf_internal_r
00008af0 g     F .text	0000005c .hidden __umodsi3
0001e974 g       *ABS*	00000000 end
000027c8 g     F .text	0000007c writeToLCD
00017ebc g     F .text	000000b4 altera_avalon_jtag_uart_init
000001c8 g     F .exceptions	00000060 alt_instruction_exception_entry
000084f8 g     F .text	000000a0 .hidden __math_check_oflow
0001a12c g       *ABS*	00000000 __CTOR_LIST__
08000000 g       *ABS*	00000000 __alt_stack_pointer
0000839c g     F .text	0000000c .hidden __math_may_uflow
00018844 g     F .text	0000007c alt_avalon_timer_sc_init
0000c5c0 g     F .text	00000054 .hidden __clzsi2
0001859c g     F .text	00000228 altera_avalon_jtag_uart_write
000030cc g     F .text	000000b0 cos
00001c00 g     F .text	000000d4 kiss_fft_stride
00011240 g     F .text	00000004 __sfp_lock_acquire
00011a38 g     F .text	000000d0 memchr
00001cd4 g     F .text	00000048 kiss_fft
000189e8 g     F .text	00000080 alt_up_character_lcd_write
0000d000 g     F .text	00002018 ___vfprintf_internal_r
00011394 g     F .text	000002fc _free_r
00017640 g     F .text	0000022c alt_printf
0001acf4 g     O .rodata	00000180 _ctype_b
00015354 g     F .text	0000000c __locale_mb_cur_max
0001a00c g     F .text	00000120 __call_exitprocs
0001cb54 g     O .rwdata	00000004 __malloc_sbrk_base
00000228 g     F .text	0000003c _start
0001e83c g     O .bss	00000004 _alt_tick_rate
00003360 g     F .text	000000c4 sin
00012524 g     F .text	00000188 __lshift
0001e840 g     O .bss	00000008 _alt_nticks
00016088 g     F .text	000000a0 signal
000178d8 g     F .text	00000108 read
00017cb8 g     F .text	000000a0 alt_sys_init
00018c34 g     F .text	0000008c alt_up_character_lcd_shift_display
00009a0c g     F .text	00000124 .hidden __floatsisf
00019f7c g     F .text	00000090 __register_exitproc
00018eb8 g     F .text	0000003c alt_up_rs232_get_available_space_in_write_FIFO
00002220 g     F .text	00000118 normalize_audio
00012118 g     F .text	000002c4 __multiply
00003f78 g     F .text	00001108 __ieee754_pow
00018cc0 g     F .text	0000008c alt_up_character_lcd_erase_pos
00018220 g     F .text	00000068 altera_avalon_jtag_uart_close
00003584 g     F .text	000002bc pow
00008b4c g     F .text	00000028 .hidden __mulsi3
0001aef4 g       *ABS*	00000000 __ram_rwdata_start
0001a12c g       *ABS*	00000000 __ram_rodata_start
0001e84c g     O .bss	00000028 __malloc_current_mallinfo
00008fe0 g     F .text	00000070 .hidden __eqsf2
00012a94 g     F .text	00000164 __d2b
0000274c g     F .text	0000007c clearLCD
00017d58 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00019d6c g     F .text	000000b8 alt_get_fd
00014778 g     F .text	00000058 _close_r
00019f04 g     F .text	00000078 memcmp
00017e18 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0001e974 g       *ABS*	00000000 __alt_stack_base
00017e68 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0000f0f4 g     F .text	00000164 __swsetup_r
0000a51c g     F .text	00000914 .hidden __divdf3
000110c8 g     F .text	00000154 __sfp
00012d0c g     F .text	0000007c __copybits
0001b318 g     O .rwdata	00000408 __malloc_av_
0001124c g     F .text	00000004 __sinit_lock_release
0000b080 g     F .text	000007ac .hidden __muldf3
00012f94 g     F .text	00000054 __sread
00018e18 g     F .text	00000060 alt_up_rs232_disable_read_interrupt
00019c64 g     F .text	00000108 alt_find_file
00019308 g     F .text	000000a8 alt_dev_llist_insert
000175f8 g     F .text	00000024 __malloc_lock
00017a50 g     F .text	000000b8 sbrk
0000884c g     F .text	0000014c scalbnf
00010de8 g     F .text	00000060 _fflush_r
00014848 g     F .text	00000154 _calloc_r
0001e814 g       *ABS*	00000000 __bss_start
00011b08 g     F .text	000000f0 memset
00001e0c g     F .text	00000348 main
0001e834 g     O .bss	00000004 alt_envp
0001e818 g     O .bss	00000004 __malloc_max_total_mem
00017db8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
000146fc g     F .text	00000018 __swbuf
00018ba8 g     F .text	0000008c alt_up_character_lcd_shift_cursor
000130cc g     F .text	00000008 __sclose
08000000 g       *ABS*	00000000 __alt_heap_limit
00014acc g     F .text	00000070 fclose
0000c450 g     F .text	00000170 .hidden __truncdfsf2
0000f478 g     F .text	00001748 _dtoa_r
0000c640 g     F .text	000007e0 _malloc_r
00015d10 g     F .text	00000030 __ascii_wctomb
0001cb70 g     O .rwdata	00000004 alt_errno
00014b3c g     F .text	00000020 _fiprintf_r
00016128 g     F .text	00000060 _init_signal
00011690 g     F .text	00000098 _fwalk
00015438 g     F .text	0000000c _mbtowc_r
00012eb4 g     F .text	000000e0 putc
00008998 g     F .text	00000080 .hidden __divsi3
000189ac g     F .text	0000003c alt_up_character_lcd_open_dev
00011278 g     F .text	0000011c _malloc_trim_r
0001a12c g       *ABS*	00000000 __CTOR_END__
00009108 g     F .text	00000400 .hidden __mulsf3
00008494 g     F .text	00000064 .hidden __math_check_uflow
00018974 g     F .text	00000038 alt_up_character_lcd_init
00002e9c g     F .text	00000114 GetMagnitudeFactor
00015b54 g     F .text	000000b8 strcmp
0001a12c g       *ABS*	00000000 __flash_rodata_start
00002844 g     F .text	00000290 GetCoefficient
0001a12c g       *ABS*	00000000 __DTOR_LIST__
00019110 g     F .text	0000003c alt_up_rs232_open_dev
0000ae30 g     F .text	00000080 .hidden __nedf2
00017c7c g     F .text	0000003c alt_irq_init
000179e0 g     F .text	00000070 alt_release_fd
00018d4c g     F .text	00000038 alt_up_character_lcd_cursor_off
0001a854 g     O .rodata	00000100 .hidden __clz_tab
0001e828 g     O .bss	00000004 _PathLocale
00019ebc g     F .text	00000014 atexit
00009050 g     F .text	000000b8 .hidden __gesf2
00014714 g     F .text	00000064 _write_r
00015360 g     F .text	00000074 setlocale
0001cb50 g     O .rwdata	00000004 _impure_ptr
0001e82c g     O .bss	00000004 alt_argc
00010bc0 g     F .text	00000228 __sflush_r
00008598 g     F .text	000001c0 scalbn
00019414 g     F .text	00000064 _do_dtors
000038ec g     F .text	0000068c __ieee754_log
000024e8 g     F .text	00000264 calculate_mfcc
00000020 g       .exceptions	00000000 alt_irq_entry
00015444 g     F .text	00000044 __ascii_mbtowc
00012930 g     F .text	0000005c __ulp
00011264 g     F .text	00000014 __fp_unlock_all
00002430 g     F .text	000000b8 fft
0001cb5c g     O .rwdata	00000008 alt_fs_list
00018dbc g     F .text	0000005c alt_up_rs232_enable_read_interrupt
00018f38 g     F .text	00000040 alt_up_rs232_write_data
00000020 g       *ABS*	00000000 __ram_exceptions_start
000117e4 g     F .text	0000000c localeconv
000057cc g     F .text	0000026c __ieee754_sqrt
000119a0 g     F .text	00000098 __swhatbuf_r
0001cb84 g       *ABS*	00000000 _edata
0001e974 g       *ABS*	00000000 _end
00014b94 g     F .text	00000164 __fputwc
00000228 g       *ABS*	00000000 __ram_exceptions_end
00018288 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
00012ff0 g     F .text	00000080 __swrite
0001cb58 g     O .rwdata	00000004 __malloc_trim_threshold
00019ed0 g     F .text	00000034 exit
00014b5c g     F .text	00000038 fiprintf
00015c0c g     F .text	00000004 _vfiprintf_r
00011728 g     F .text	000000a8 _fwalk_reent
00009b30 g     F .text	000000fc .hidden __floatunsisf
00012704 g     F .text	0000022c __mdiff
00001d1c g     F .text	00000020 kiss_fft_cleanup
00008390 g     F .text	0000000c .hidden __math_uflow
00008a18 g     F .text	00000074 .hidden __modsi3
08000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00011244 g     F .text	00000004 __sfp_lock_release
00018a68 g     F .text	0000007c alt_up_character_lcd_string
0001abf0 g     O .rodata	00000101 _ctype_
0000c138 g     F .text	00000054 .hidden __unorddf2
00002338 g     F .text	000000f8 hamming_window
00016fd0 g     F .text	00000038 _exit
00007680 g     F .text	00000ac4 __kernel_rem_pio2f
0001914c g     F .text	00000160 alt_alarm_start
000117f0 g     F .text	000001b0 __smakebuf_r
000130d4 g     F .text	00000098 strlen
00015d58 g     F .text	0000005c _init_signal_r
00019910 g     F .text	00000160 open
0000aeb0 g     F .text	000000e8 .hidden __gedf2
0001786c g     F .text	00000030 alt_putchar
00014834 g     F .text	00000014 __assert
00002b9c g     F .text	00000300 GetFilterParameter
00013260 g     F .text	00000018 __sprint_r
00019508 g     F .text	00000020 alt_icache_flush_all
00008758 g     F .text	000000f4 floorf
00002ad4 g     F .text	000000c8 NormalizationFactor
00018b34 g     F .text	00000074 alt_up_character_lcd_set_cursor_pos
0001cb78 g     O .rwdata	00000004 alt_priority_mask
0000f018 g     F .text	0000001c __vfprintf_internal
00001d3c g     F .text	000000d0 kiss_fft_next_fast_size
00015d04 g     F .text	0000000c _wctomb_r
000019c4 g     F .text	0000023c kiss_fft_alloc
0000b82c g     F .text	0000090c .hidden __subdf3
00011fb8 g     F .text	000000b0 __lo0bits
0001cb7c g     O .rwdata	00000008 alt_alarm_list
000193b0 g     F .text	00000064 _do_ctors
00016188 g     F .text	000000bc __sigtramp
00018e78 g     F .text	00000040 alt_up_rs232_get_used_space_in_read_FIFO
00015c7c g     F .text	00000088 wcrtomb
00016ec8 g     F .text	000000dc close
00008b74 g     F .text	0000046c .hidden __addsf3
0001b720 g     O .rwdata	0000016c __global_locale
000173dc g     F .text	00000084 alt_load
00014d1c g     F .text	00000078 fputwc
00015fcc g     F .text	000000bc raise
0000c630 g     F .text	00000010 free
00011248 g     F .text	00000004 __sinit_lock_acquire
00011cc0 g     F .text	0000015c __multadd
00011c9c g     F .text	00000024 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408a14 	ori	at,at,552
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001c80 	call	1c8 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffc15 	stw	r2,-16(fp)

  return active;
 118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0ffff17 	ldw	r3,-4(fp)
 130:	e0bffe17 	ldw	r2,-8(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001226 	beq	r2,zero,184 <alt_irq_handler+0x88>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 13c:	e0bffd17 	ldw	r2,-12(fp)
 140:	100690fa 	slli	r3,r2,3
 144:	008000b4 	movhi	r2,2
 148:	1885883a 	add	r2,r3,r2
 14c:	10fa1d17 	ldw	r3,-6028(r2)
 150:	e0bffd17 	ldw	r2,-12(fp)
 154:	100890fa 	slli	r4,r2,3
 158:	008000b4 	movhi	r2,2
 15c:	2085883a 	add	r2,r4,r2
 160:	10ba1e17 	ldw	r2,-6024(r2)
 164:	e17ffd17 	ldw	r5,-12(fp)
 168:	1009883a 	mov	r4,r2
 16c:	183ee83a 	callr	r3
#endif
        break;
 170:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
 174:	0005313a 	rdctl	r2,ipending
 178:	e0bffb15 	stw	r2,-20(fp)
  return active;
 17c:	e0bffb17 	ldw	r2,-20(fp)
 180:	00000706 	br	1a0 <alt_irq_handler+0xa4>
      }
      mask <<= 1;
 184:	e0bffe17 	ldw	r2,-8(fp)
 188:	1085883a 	add	r2,r2,r2
 18c:	e0bffe15 	stw	r2,-8(fp)
      i++;
 190:	e0bffd17 	ldw	r2,-12(fp)
 194:	10800044 	addi	r2,r2,1
 198:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
 19c:	003fe306 	br	12c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
 1a0:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 1a4:	e0bfff17 	ldw	r2,-4(fp)
 1a8:	103fdd1e 	bne	r2,zero,120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1ac:	0001883a 	nop
}
 1b0:	0001883a 	nop
 1b4:	e037883a 	mov	sp,fp
 1b8:	dfc00117 	ldw	ra,4(sp)
 1bc:	df000017 	ldw	fp,0(sp)
 1c0:	dec00204 	addi	sp,sp,8
 1c4:	f800283a 	ret

000001c8 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1c8:	defffb04 	addi	sp,sp,-20
 1cc:	dfc00415 	stw	ra,16(sp)
 1d0:	df000315 	stw	fp,12(sp)
 1d4:	df000304 	addi	fp,sp,12
 1d8:	e13ffd15 	stw	r4,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1dc:	00bfffc4 	movi	r2,-1
 1e0:	e0bfff15 	stw	r2,-4(fp)
  badaddr = 0;
 1e4:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1e8:	d0a73f17 	ldw	r2,-25348(gp)
 1ec:	10000726 	beq	r2,zero,20c <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1f0:	d0a73f17 	ldw	r2,-25348(gp)
 1f4:	e0ffff17 	ldw	r3,-4(fp)
 1f8:	e1bffe17 	ldw	r6,-8(fp)
 1fc:	e17ffd17 	ldw	r5,-12(fp)
 200:	1809883a 	mov	r4,r3
 204:	103ee83a 	callr	r2
 208:	00000206 	br	214 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 20c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 210:	0005883a 	mov	r2,zero
}
 214:	e037883a 	mov	sp,fp
 218:	dfc00117 	ldw	ra,4(sp)
 21c:	df000017 	ldw	fp,0(sp)
 220:	dec00204 	addi	sp,sp,8
 224:	f800283a 	ret

Disassembly of section .text:

00000228 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     228:	06c20034 	movhi	sp,2048
    ori sp, sp, %lo(__alt_stack_pointer)
     22c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     230:	068000b4 	movhi	gp,2
    ori gp, gp, %lo(_gp)
     234:	d692d314 	ori	gp,gp,19276
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     238:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     23c:	10ba0514 	ori	r2,r2,59412

    movhi r3, %hi(__bss_end)
     240:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     244:	18fa5d14 	ori	r3,r3,59764

    beq r2, r3, 1f
     248:	10c00326 	beq	r2,r3,258 <_start+0x30>

0:
    stw zero, (r2)
     24c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     250:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     254:	10fffd36 	bltu	r2,r3,24c <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     258:	00173dc0 	call	173dc <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     25c:	001757c0 	call	1757c <alt_main>

00000260 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     260:	003fff06 	br	260 <alt_after_alt_main>

00000264 <kf_bfly2>:
        kiss_fft_cpx * Fout,
        const size_t fstride,
        const kiss_fft_cfg st,
        int m
        )
{
     264:	defff704 	addi	sp,sp,-36
     268:	df000815 	stw	fp,32(sp)
     26c:	df000804 	addi	fp,sp,32
     270:	e13ffb15 	stw	r4,-20(fp)
     274:	e17ffa15 	stw	r5,-24(fp)
     278:	e1bff915 	stw	r6,-28(fp)
     27c:	e1fff815 	stw	r7,-32(fp)
    kiss_fft_cpx * Fout2;
    kiss_fft_cpx * tw1 = st->twiddles;
     280:	e0bff917 	ldw	r2,-28(fp)
     284:	10804204 	addi	r2,r2,264
     288:	e0bffe15 	stw	r2,-8(fp)
    kiss_fft_cpx t;
    Fout2 = Fout + m;
     28c:	e0bff817 	ldw	r2,-32(fp)
     290:	100490fa 	slli	r2,r2,3
     294:	e0fffb17 	ldw	r3,-20(fp)
     298:	1885883a 	add	r2,r3,r2
     29c:	e0bfff15 	stw	r2,-4(fp)
    do{
        C_FIXDIV(*Fout,2); C_FIXDIV(*Fout2,2);

        C_MUL (t,  *Fout2 , *tw1);
     2a0:	e0bfff17 	ldw	r2,-4(fp)
     2a4:	10c00017 	ldw	r3,0(r2)
     2a8:	e13ffe17 	ldw	r4,-8(fp)
     2ac:	20800017 	ldw	r2,0(r4)
     2b0:	1887ff32 	custom	252,r3,r3,r2
     2b4:	e0bfff17 	ldw	r2,-4(fp)
     2b8:	11000117 	ldw	r4,4(r2)
     2bc:	e17ffe17 	ldw	r5,-8(fp)
     2c0:	28800117 	ldw	r2,4(r5)
     2c4:	2085ff32 	custom	252,r2,r4,r2
     2c8:	1885ffb2 	custom	254,r2,r3,r2
     2cc:	e0bffc15 	stw	r2,-16(fp)
     2d0:	e0bfff17 	ldw	r2,-4(fp)
     2d4:	10c00017 	ldw	r3,0(r2)
     2d8:	e13ffe17 	ldw	r4,-8(fp)
     2dc:	20800117 	ldw	r2,4(r4)
     2e0:	1887ff32 	custom	252,r3,r3,r2
     2e4:	e0bfff17 	ldw	r2,-4(fp)
     2e8:	11000117 	ldw	r4,4(r2)
     2ec:	e17ffe17 	ldw	r5,-8(fp)
     2f0:	28800017 	ldw	r2,0(r5)
     2f4:	2085ff32 	custom	252,r2,r4,r2
     2f8:	1885ff72 	custom	253,r2,r3,r2
     2fc:	e0bffd15 	stw	r2,-12(fp)
        tw1 += fstride;
     300:	e0bffa17 	ldw	r2,-24(fp)
     304:	100490fa 	slli	r2,r2,3
     308:	e0fffe17 	ldw	r3,-8(fp)
     30c:	1885883a 	add	r2,r3,r2
     310:	e0bffe15 	stw	r2,-8(fp)
        C_SUB( *Fout2 ,  *Fout , t );
     314:	e0bffb17 	ldw	r2,-20(fp)
     318:	10c00017 	ldw	r3,0(r2)
     31c:	e0bffc17 	ldw	r2,-16(fp)
     320:	1887ffb2 	custom	254,r3,r3,r2
     324:	e0bfff17 	ldw	r2,-4(fp)
     328:	10c00015 	stw	r3,0(r2)
     32c:	e0bffb17 	ldw	r2,-20(fp)
     330:	10c00117 	ldw	r3,4(r2)
     334:	e0bffd17 	ldw	r2,-12(fp)
     338:	1887ffb2 	custom	254,r3,r3,r2
     33c:	e0bfff17 	ldw	r2,-4(fp)
     340:	10c00115 	stw	r3,4(r2)
        C_ADDTO( *Fout ,  t );
     344:	e0bffb17 	ldw	r2,-20(fp)
     348:	10c00017 	ldw	r3,0(r2)
     34c:	e0bffc17 	ldw	r2,-16(fp)
     350:	1887ff72 	custom	253,r3,r3,r2
     354:	e0bffb17 	ldw	r2,-20(fp)
     358:	10c00015 	stw	r3,0(r2)
     35c:	e0bffb17 	ldw	r2,-20(fp)
     360:	10c00117 	ldw	r3,4(r2)
     364:	e0bffd17 	ldw	r2,-12(fp)
     368:	1887ff72 	custom	253,r3,r3,r2
     36c:	e0bffb17 	ldw	r2,-20(fp)
     370:	10c00115 	stw	r3,4(r2)
        ++Fout2;
     374:	e0bfff17 	ldw	r2,-4(fp)
     378:	10800204 	addi	r2,r2,8
     37c:	e0bfff15 	stw	r2,-4(fp)
        ++Fout;
     380:	e0bffb17 	ldw	r2,-20(fp)
     384:	10800204 	addi	r2,r2,8
     388:	e0bffb15 	stw	r2,-20(fp)
    }while (--m);
     38c:	e0bff817 	ldw	r2,-32(fp)
     390:	10bfffc4 	addi	r2,r2,-1
     394:	e0bff815 	stw	r2,-32(fp)
     398:	e0bff817 	ldw	r2,-32(fp)
     39c:	103fc01e 	bne	r2,zero,2a0 <kf_bfly2+0x3c>
}
     3a0:	0001883a 	nop
     3a4:	0001883a 	nop
     3a8:	e037883a 	mov	sp,fp
     3ac:	df000017 	ldw	fp,0(sp)
     3b0:	dec00104 	addi	sp,sp,4
     3b4:	f800283a 	ret

000003b8 <kf_bfly4>:
        kiss_fft_cpx * Fout,
        const size_t fstride,
        const kiss_fft_cfg st,
        const size_t m
        )
{
     3b8:	deffe904 	addi	sp,sp,-92
     3bc:	df001615 	stw	fp,88(sp)
     3c0:	df001604 	addi	fp,sp,88
     3c4:	e13fed15 	stw	r4,-76(fp)
     3c8:	e17fec15 	stw	r5,-80(fp)
     3cc:	e1bfeb15 	stw	r6,-84(fp)
     3d0:	e1ffea15 	stw	r7,-88(fp)
    kiss_fft_cpx *tw1,*tw2,*tw3;
    kiss_fft_cpx scratch[6];
    size_t k=m;
     3d4:	e0bfea17 	ldw	r2,-88(fp)
     3d8:	e0bffc15 	stw	r2,-16(fp)
    const size_t m2=2*m;
     3dc:	e0bfea17 	ldw	r2,-88(fp)
     3e0:	1085883a 	add	r2,r2,r2
     3e4:	e0bffb15 	stw	r2,-20(fp)
    const size_t m3=3*m;
     3e8:	e0ffea17 	ldw	r3,-88(fp)
     3ec:	1805883a 	mov	r2,r3
     3f0:	1085883a 	add	r2,r2,r2
     3f4:	10c5883a 	add	r2,r2,r3
     3f8:	e0bffa15 	stw	r2,-24(fp)


    tw3 = tw2 = tw1 = st->twiddles;
     3fc:	e0bfeb17 	ldw	r2,-84(fp)
     400:	10804204 	addi	r2,r2,264
     404:	e0bfff15 	stw	r2,-4(fp)
     408:	e0bfff17 	ldw	r2,-4(fp)
     40c:	e0bffe15 	stw	r2,-8(fp)
     410:	e0bffe17 	ldw	r2,-8(fp)
     414:	e0bffd15 	stw	r2,-12(fp)

    do {
        C_FIXDIV(*Fout,4); C_FIXDIV(Fout[m],4); C_FIXDIV(Fout[m2],4); C_FIXDIV(Fout[m3],4);

        C_MUL(scratch[0],Fout[m] , *tw1 );
     418:	e0bfea17 	ldw	r2,-88(fp)
     41c:	100490fa 	slli	r2,r2,3
     420:	e0ffed17 	ldw	r3,-76(fp)
     424:	1885883a 	add	r2,r3,r2
     428:	10c00017 	ldw	r3,0(r2)
     42c:	e13fff17 	ldw	r4,-4(fp)
     430:	20800017 	ldw	r2,0(r4)
     434:	1887ff32 	custom	252,r3,r3,r2
     438:	e0bfea17 	ldw	r2,-88(fp)
     43c:	100490fa 	slli	r2,r2,3
     440:	e13fed17 	ldw	r4,-76(fp)
     444:	2085883a 	add	r2,r4,r2
     448:	11000117 	ldw	r4,4(r2)
     44c:	e17fff17 	ldw	r5,-4(fp)
     450:	28800117 	ldw	r2,4(r5)
     454:	2085ff32 	custom	252,r2,r4,r2
     458:	1885ffb2 	custom	254,r2,r3,r2
     45c:	e0bfee15 	stw	r2,-72(fp)
     460:	e0bfea17 	ldw	r2,-88(fp)
     464:	100490fa 	slli	r2,r2,3
     468:	e0ffed17 	ldw	r3,-76(fp)
     46c:	1885883a 	add	r2,r3,r2
     470:	10c00017 	ldw	r3,0(r2)
     474:	e13fff17 	ldw	r4,-4(fp)
     478:	20800117 	ldw	r2,4(r4)
     47c:	1887ff32 	custom	252,r3,r3,r2
     480:	e0bfea17 	ldw	r2,-88(fp)
     484:	100490fa 	slli	r2,r2,3
     488:	e13fed17 	ldw	r4,-76(fp)
     48c:	2085883a 	add	r2,r4,r2
     490:	11000117 	ldw	r4,4(r2)
     494:	e17fff17 	ldw	r5,-4(fp)
     498:	28800017 	ldw	r2,0(r5)
     49c:	2085ff32 	custom	252,r2,r4,r2
     4a0:	1885ff72 	custom	253,r2,r3,r2
     4a4:	e0bfef15 	stw	r2,-68(fp)
        C_MUL(scratch[1],Fout[m2] , *tw2 );
     4a8:	e0bffb17 	ldw	r2,-20(fp)
     4ac:	100490fa 	slli	r2,r2,3
     4b0:	e0ffed17 	ldw	r3,-76(fp)
     4b4:	1885883a 	add	r2,r3,r2
     4b8:	10c00017 	ldw	r3,0(r2)
     4bc:	e13ffe17 	ldw	r4,-8(fp)
     4c0:	20800017 	ldw	r2,0(r4)
     4c4:	1887ff32 	custom	252,r3,r3,r2
     4c8:	e0bffb17 	ldw	r2,-20(fp)
     4cc:	100490fa 	slli	r2,r2,3
     4d0:	e13fed17 	ldw	r4,-76(fp)
     4d4:	2085883a 	add	r2,r4,r2
     4d8:	11000117 	ldw	r4,4(r2)
     4dc:	e17ffe17 	ldw	r5,-8(fp)
     4e0:	28800117 	ldw	r2,4(r5)
     4e4:	2085ff32 	custom	252,r2,r4,r2
     4e8:	1885ffb2 	custom	254,r2,r3,r2
     4ec:	e0bff015 	stw	r2,-64(fp)
     4f0:	e0bffb17 	ldw	r2,-20(fp)
     4f4:	100490fa 	slli	r2,r2,3
     4f8:	e0ffed17 	ldw	r3,-76(fp)
     4fc:	1885883a 	add	r2,r3,r2
     500:	10c00017 	ldw	r3,0(r2)
     504:	e13ffe17 	ldw	r4,-8(fp)
     508:	20800117 	ldw	r2,4(r4)
     50c:	1887ff32 	custom	252,r3,r3,r2
     510:	e0bffb17 	ldw	r2,-20(fp)
     514:	100490fa 	slli	r2,r2,3
     518:	e13fed17 	ldw	r4,-76(fp)
     51c:	2085883a 	add	r2,r4,r2
     520:	11000117 	ldw	r4,4(r2)
     524:	e17ffe17 	ldw	r5,-8(fp)
     528:	28800017 	ldw	r2,0(r5)
     52c:	2085ff32 	custom	252,r2,r4,r2
     530:	1885ff72 	custom	253,r2,r3,r2
     534:	e0bff115 	stw	r2,-60(fp)
        C_MUL(scratch[2],Fout[m3] , *tw3 );
     538:	e0bffa17 	ldw	r2,-24(fp)
     53c:	100490fa 	slli	r2,r2,3
     540:	e0ffed17 	ldw	r3,-76(fp)
     544:	1885883a 	add	r2,r3,r2
     548:	10c00017 	ldw	r3,0(r2)
     54c:	e13ffd17 	ldw	r4,-12(fp)
     550:	20800017 	ldw	r2,0(r4)
     554:	1887ff32 	custom	252,r3,r3,r2
     558:	e0bffa17 	ldw	r2,-24(fp)
     55c:	100490fa 	slli	r2,r2,3
     560:	e13fed17 	ldw	r4,-76(fp)
     564:	2085883a 	add	r2,r4,r2
     568:	11000117 	ldw	r4,4(r2)
     56c:	e17ffd17 	ldw	r5,-12(fp)
     570:	28800117 	ldw	r2,4(r5)
     574:	2085ff32 	custom	252,r2,r4,r2
     578:	1885ffb2 	custom	254,r2,r3,r2
     57c:	e0bff215 	stw	r2,-56(fp)
     580:	e0bffa17 	ldw	r2,-24(fp)
     584:	100490fa 	slli	r2,r2,3
     588:	e0ffed17 	ldw	r3,-76(fp)
     58c:	1885883a 	add	r2,r3,r2
     590:	10c00017 	ldw	r3,0(r2)
     594:	e13ffd17 	ldw	r4,-12(fp)
     598:	20800117 	ldw	r2,4(r4)
     59c:	1887ff32 	custom	252,r3,r3,r2
     5a0:	e0bffa17 	ldw	r2,-24(fp)
     5a4:	100490fa 	slli	r2,r2,3
     5a8:	e13fed17 	ldw	r4,-76(fp)
     5ac:	2085883a 	add	r2,r4,r2
     5b0:	11000117 	ldw	r4,4(r2)
     5b4:	e17ffd17 	ldw	r5,-12(fp)
     5b8:	28800017 	ldw	r2,0(r5)
     5bc:	2085ff32 	custom	252,r2,r4,r2
     5c0:	1885ff72 	custom	253,r2,r3,r2
     5c4:	e0bff315 	stw	r2,-52(fp)

        C_SUB( scratch[5] , *Fout, scratch[1] );
     5c8:	e0bfed17 	ldw	r2,-76(fp)
     5cc:	10c00017 	ldw	r3,0(r2)
     5d0:	e0bff017 	ldw	r2,-64(fp)
     5d4:	1885ffb2 	custom	254,r2,r3,r2
     5d8:	e0bff815 	stw	r2,-32(fp)
     5dc:	e0bfed17 	ldw	r2,-76(fp)
     5e0:	10c00117 	ldw	r3,4(r2)
     5e4:	e0bff117 	ldw	r2,-60(fp)
     5e8:	1885ffb2 	custom	254,r2,r3,r2
     5ec:	e0bff915 	stw	r2,-28(fp)
        C_ADDTO(*Fout, scratch[1]);
     5f0:	e0bfed17 	ldw	r2,-76(fp)
     5f4:	10c00017 	ldw	r3,0(r2)
     5f8:	e0bff017 	ldw	r2,-64(fp)
     5fc:	1887ff72 	custom	253,r3,r3,r2
     600:	e0bfed17 	ldw	r2,-76(fp)
     604:	10c00015 	stw	r3,0(r2)
     608:	e0bfed17 	ldw	r2,-76(fp)
     60c:	10c00117 	ldw	r3,4(r2)
     610:	e0bff117 	ldw	r2,-60(fp)
     614:	1887ff72 	custom	253,r3,r3,r2
     618:	e0bfed17 	ldw	r2,-76(fp)
     61c:	10c00115 	stw	r3,4(r2)
        C_ADD( scratch[3] , scratch[0] , scratch[2] );
     620:	e0ffee17 	ldw	r3,-72(fp)
     624:	e0bff217 	ldw	r2,-56(fp)
     628:	1885ff72 	custom	253,r2,r3,r2
     62c:	e0bff415 	stw	r2,-48(fp)
     630:	e0ffef17 	ldw	r3,-68(fp)
     634:	e0bff317 	ldw	r2,-52(fp)
     638:	1885ff72 	custom	253,r2,r3,r2
     63c:	e0bff515 	stw	r2,-44(fp)
        C_SUB( scratch[4] , scratch[0] , scratch[2] );
     640:	e0ffee17 	ldw	r3,-72(fp)
     644:	e0bff217 	ldw	r2,-56(fp)
     648:	1885ffb2 	custom	254,r2,r3,r2
     64c:	e0bff615 	stw	r2,-40(fp)
     650:	e0ffef17 	ldw	r3,-68(fp)
     654:	e0bff317 	ldw	r2,-52(fp)
     658:	1885ffb2 	custom	254,r2,r3,r2
     65c:	e0bff715 	stw	r2,-36(fp)
        C_SUB( Fout[m2], *Fout, scratch[3] );
     660:	e0bfed17 	ldw	r2,-76(fp)
     664:	11000017 	ldw	r4,0(r2)
     668:	e0fff417 	ldw	r3,-48(fp)
     66c:	e0bffb17 	ldw	r2,-20(fp)
     670:	100490fa 	slli	r2,r2,3
     674:	e17fed17 	ldw	r5,-76(fp)
     678:	2885883a 	add	r2,r5,r2
     67c:	20c7ffb2 	custom	254,r3,r4,r3
     680:	10c00015 	stw	r3,0(r2)
     684:	e0bfed17 	ldw	r2,-76(fp)
     688:	11000117 	ldw	r4,4(r2)
     68c:	e0fff517 	ldw	r3,-44(fp)
     690:	e0bffb17 	ldw	r2,-20(fp)
     694:	100490fa 	slli	r2,r2,3
     698:	e17fed17 	ldw	r5,-76(fp)
     69c:	2885883a 	add	r2,r5,r2
     6a0:	20c7ffb2 	custom	254,r3,r4,r3
     6a4:	10c00115 	stw	r3,4(r2)
        tw1 += fstride;
     6a8:	e0bfec17 	ldw	r2,-80(fp)
     6ac:	100490fa 	slli	r2,r2,3
     6b0:	e0ffff17 	ldw	r3,-4(fp)
     6b4:	1885883a 	add	r2,r3,r2
     6b8:	e0bfff15 	stw	r2,-4(fp)
        tw2 += fstride*2;
     6bc:	e0bfec17 	ldw	r2,-80(fp)
     6c0:	1004913a 	slli	r2,r2,4
     6c4:	e0fffe17 	ldw	r3,-8(fp)
     6c8:	1885883a 	add	r2,r3,r2
     6cc:	e0bffe15 	stw	r2,-8(fp)
        tw3 += fstride*3;
     6d0:	e0ffec17 	ldw	r3,-80(fp)
     6d4:	1805883a 	mov	r2,r3
     6d8:	1085883a 	add	r2,r2,r2
     6dc:	10c5883a 	add	r2,r2,r3
     6e0:	100490fa 	slli	r2,r2,3
     6e4:	1007883a 	mov	r3,r2
     6e8:	e0bffd17 	ldw	r2,-12(fp)
     6ec:	10c5883a 	add	r2,r2,r3
     6f0:	e0bffd15 	stw	r2,-12(fp)
        C_ADDTO( *Fout , scratch[3] );
     6f4:	e0bfed17 	ldw	r2,-76(fp)
     6f8:	10c00017 	ldw	r3,0(r2)
     6fc:	e0bff417 	ldw	r2,-48(fp)
     700:	1887ff72 	custom	253,r3,r3,r2
     704:	e0bfed17 	ldw	r2,-76(fp)
     708:	10c00015 	stw	r3,0(r2)
     70c:	e0bfed17 	ldw	r2,-76(fp)
     710:	10c00117 	ldw	r3,4(r2)
     714:	e0bff517 	ldw	r2,-44(fp)
     718:	1887ff72 	custom	253,r3,r3,r2
     71c:	e0bfed17 	ldw	r2,-76(fp)
     720:	10c00115 	stw	r3,4(r2)

        if(st->inverse) {
     724:	e0bfeb17 	ldw	r2,-84(fp)
     728:	10800117 	ldw	r2,4(r2)
     72c:	10002126 	beq	r2,zero,7b4 <kf_bfly4+0x3fc>
            Fout[m].r = scratch[5].r - scratch[4].i;
     730:	e13ff817 	ldw	r4,-32(fp)
     734:	e0fff717 	ldw	r3,-36(fp)
     738:	e0bfea17 	ldw	r2,-88(fp)
     73c:	100490fa 	slli	r2,r2,3
     740:	e17fed17 	ldw	r5,-76(fp)
     744:	2885883a 	add	r2,r5,r2
     748:	20c7ffb2 	custom	254,r3,r4,r3
     74c:	10c00015 	stw	r3,0(r2)
            Fout[m].i = scratch[5].i + scratch[4].r;
     750:	e13ff917 	ldw	r4,-28(fp)
     754:	e0fff617 	ldw	r3,-40(fp)
     758:	e0bfea17 	ldw	r2,-88(fp)
     75c:	100490fa 	slli	r2,r2,3
     760:	e17fed17 	ldw	r5,-76(fp)
     764:	2885883a 	add	r2,r5,r2
     768:	20c7ff72 	custom	253,r3,r4,r3
     76c:	10c00115 	stw	r3,4(r2)
            Fout[m3].r = scratch[5].r + scratch[4].i;
     770:	e13ff817 	ldw	r4,-32(fp)
     774:	e0fff717 	ldw	r3,-36(fp)
     778:	e0bffa17 	ldw	r2,-24(fp)
     77c:	100490fa 	slli	r2,r2,3
     780:	e17fed17 	ldw	r5,-76(fp)
     784:	2885883a 	add	r2,r5,r2
     788:	20c7ff72 	custom	253,r3,r4,r3
     78c:	10c00015 	stw	r3,0(r2)
            Fout[m3].i = scratch[5].i - scratch[4].r;
     790:	e13ff917 	ldw	r4,-28(fp)
     794:	e0fff617 	ldw	r3,-40(fp)
     798:	e0bffa17 	ldw	r2,-24(fp)
     79c:	100490fa 	slli	r2,r2,3
     7a0:	e17fed17 	ldw	r5,-76(fp)
     7a4:	2885883a 	add	r2,r5,r2
     7a8:	20c7ffb2 	custom	254,r3,r4,r3
     7ac:	10c00115 	stw	r3,4(r2)
     7b0:	00002006 	br	834 <kf_bfly4+0x47c>
        }else{
            Fout[m].r = scratch[5].r + scratch[4].i;
     7b4:	e13ff817 	ldw	r4,-32(fp)
     7b8:	e0fff717 	ldw	r3,-36(fp)
     7bc:	e0bfea17 	ldw	r2,-88(fp)
     7c0:	100490fa 	slli	r2,r2,3
     7c4:	e17fed17 	ldw	r5,-76(fp)
     7c8:	2885883a 	add	r2,r5,r2
     7cc:	20c7ff72 	custom	253,r3,r4,r3
     7d0:	10c00015 	stw	r3,0(r2)
            Fout[m].i = scratch[5].i - scratch[4].r;
     7d4:	e13ff917 	ldw	r4,-28(fp)
     7d8:	e0fff617 	ldw	r3,-40(fp)
     7dc:	e0bfea17 	ldw	r2,-88(fp)
     7e0:	100490fa 	slli	r2,r2,3
     7e4:	e17fed17 	ldw	r5,-76(fp)
     7e8:	2885883a 	add	r2,r5,r2
     7ec:	20c7ffb2 	custom	254,r3,r4,r3
     7f0:	10c00115 	stw	r3,4(r2)
            Fout[m3].r = scratch[5].r - scratch[4].i;
     7f4:	e13ff817 	ldw	r4,-32(fp)
     7f8:	e0fff717 	ldw	r3,-36(fp)
     7fc:	e0bffa17 	ldw	r2,-24(fp)
     800:	100490fa 	slli	r2,r2,3
     804:	e17fed17 	ldw	r5,-76(fp)
     808:	2885883a 	add	r2,r5,r2
     80c:	20c7ffb2 	custom	254,r3,r4,r3
     810:	10c00015 	stw	r3,0(r2)
            Fout[m3].i = scratch[5].i + scratch[4].r;
     814:	e13ff917 	ldw	r4,-28(fp)
     818:	e0fff617 	ldw	r3,-40(fp)
     81c:	e0bffa17 	ldw	r2,-24(fp)
     820:	100490fa 	slli	r2,r2,3
     824:	e17fed17 	ldw	r5,-76(fp)
     828:	2885883a 	add	r2,r5,r2
     82c:	20c7ff72 	custom	253,r3,r4,r3
     830:	10c00115 	stw	r3,4(r2)
        }
        ++Fout;
     834:	e0bfed17 	ldw	r2,-76(fp)
     838:	10800204 	addi	r2,r2,8
     83c:	e0bfed15 	stw	r2,-76(fp)
    }while(--k);
     840:	e0bffc17 	ldw	r2,-16(fp)
     844:	10bfffc4 	addi	r2,r2,-1
     848:	e0bffc15 	stw	r2,-16(fp)
     84c:	e0bffc17 	ldw	r2,-16(fp)
     850:	103ef11e 	bne	r2,zero,418 <kf_bfly4+0x60>
}
     854:	0001883a 	nop
     858:	0001883a 	nop
     85c:	e037883a 	mov	sp,fp
     860:	df000017 	ldw	fp,0(sp)
     864:	dec00104 	addi	sp,sp,4
     868:	f800283a 	ret

0000086c <kf_bfly3>:
         kiss_fft_cpx * Fout,
         const size_t fstride,
         const kiss_fft_cfg st,
         size_t m
         )
{
     86c:	deffea04 	addi	sp,sp,-88
     870:	dfc01515 	stw	ra,84(sp)
     874:	df001415 	stw	fp,80(sp)
     878:	df001404 	addi	fp,sp,80
     87c:	e13fef15 	stw	r4,-68(fp)
     880:	e17fee15 	stw	r5,-72(fp)
     884:	e1bfed15 	stw	r6,-76(fp)
     888:	e1ffec15 	stw	r7,-80(fp)
     size_t k=m;
     88c:	e0bfec17 	ldw	r2,-80(fp)
     890:	e0bfff15 	stw	r2,-4(fp)
     const size_t m2 = 2*m;
     894:	e0bfec17 	ldw	r2,-80(fp)
     898:	1085883a 	add	r2,r2,r2
     89c:	e0bffc15 	stw	r2,-16(fp)
     kiss_fft_cpx *tw1,*tw2;
     kiss_fft_cpx scratch[5];
     kiss_fft_cpx epi3;
     epi3 = st->twiddles[fstride*m];
     8a0:	e17fec17 	ldw	r5,-80(fp)
     8a4:	e13fee17 	ldw	r4,-72(fp)
     8a8:	0008b4c0 	call	8b4c <__mulsi3>
     8ac:	e0ffed17 	ldw	r3,-76(fp)
     8b0:	10800844 	addi	r2,r2,33
     8b4:	100490fa 	slli	r2,r2,3
     8b8:	1885883a 	add	r2,r3,r2
     8bc:	10c00017 	ldw	r3,0(r2)
     8c0:	e0fff015 	stw	r3,-64(fp)
     8c4:	10800117 	ldw	r2,4(r2)
     8c8:	e0bff115 	stw	r2,-60(fp)

     tw1=tw2=st->twiddles;
     8cc:	e0bfed17 	ldw	r2,-76(fp)
     8d0:	10804204 	addi	r2,r2,264
     8d4:	e0bffd15 	stw	r2,-12(fp)
     8d8:	e0bffd17 	ldw	r2,-12(fp)
     8dc:	e0bffe15 	stw	r2,-8(fp)

     do{
         C_FIXDIV(*Fout,3); C_FIXDIV(Fout[m],3); C_FIXDIV(Fout[m2],3);

         C_MUL(scratch[1],Fout[m] , *tw1);
     8e0:	e0bfec17 	ldw	r2,-80(fp)
     8e4:	100490fa 	slli	r2,r2,3
     8e8:	e0ffef17 	ldw	r3,-68(fp)
     8ec:	1885883a 	add	r2,r3,r2
     8f0:	10c00017 	ldw	r3,0(r2)
     8f4:	e13ffe17 	ldw	r4,-8(fp)
     8f8:	20800017 	ldw	r2,0(r4)
     8fc:	1887ff32 	custom	252,r3,r3,r2
     900:	e0bfec17 	ldw	r2,-80(fp)
     904:	100490fa 	slli	r2,r2,3
     908:	e13fef17 	ldw	r4,-68(fp)
     90c:	2085883a 	add	r2,r4,r2
     910:	11000117 	ldw	r4,4(r2)
     914:	e17ffe17 	ldw	r5,-8(fp)
     918:	28800117 	ldw	r2,4(r5)
     91c:	2085ff32 	custom	252,r2,r4,r2
     920:	1885ffb2 	custom	254,r2,r3,r2
     924:	e0bff415 	stw	r2,-48(fp)
     928:	e0bfec17 	ldw	r2,-80(fp)
     92c:	100490fa 	slli	r2,r2,3
     930:	e0ffef17 	ldw	r3,-68(fp)
     934:	1885883a 	add	r2,r3,r2
     938:	10c00017 	ldw	r3,0(r2)
     93c:	e13ffe17 	ldw	r4,-8(fp)
     940:	20800117 	ldw	r2,4(r4)
     944:	1887ff32 	custom	252,r3,r3,r2
     948:	e0bfec17 	ldw	r2,-80(fp)
     94c:	100490fa 	slli	r2,r2,3
     950:	e13fef17 	ldw	r4,-68(fp)
     954:	2085883a 	add	r2,r4,r2
     958:	11000117 	ldw	r4,4(r2)
     95c:	e17ffe17 	ldw	r5,-8(fp)
     960:	28800017 	ldw	r2,0(r5)
     964:	2085ff32 	custom	252,r2,r4,r2
     968:	1885ff72 	custom	253,r2,r3,r2
     96c:	e0bff515 	stw	r2,-44(fp)
         C_MUL(scratch[2],Fout[m2] , *tw2);
     970:	e0bffc17 	ldw	r2,-16(fp)
     974:	100490fa 	slli	r2,r2,3
     978:	e0ffef17 	ldw	r3,-68(fp)
     97c:	1885883a 	add	r2,r3,r2
     980:	10c00017 	ldw	r3,0(r2)
     984:	e13ffd17 	ldw	r4,-12(fp)
     988:	20800017 	ldw	r2,0(r4)
     98c:	1887ff32 	custom	252,r3,r3,r2
     990:	e0bffc17 	ldw	r2,-16(fp)
     994:	100490fa 	slli	r2,r2,3
     998:	e13fef17 	ldw	r4,-68(fp)
     99c:	2085883a 	add	r2,r4,r2
     9a0:	11000117 	ldw	r4,4(r2)
     9a4:	e17ffd17 	ldw	r5,-12(fp)
     9a8:	28800117 	ldw	r2,4(r5)
     9ac:	2085ff32 	custom	252,r2,r4,r2
     9b0:	1885ffb2 	custom	254,r2,r3,r2
     9b4:	e0bff615 	stw	r2,-40(fp)
     9b8:	e0bffc17 	ldw	r2,-16(fp)
     9bc:	100490fa 	slli	r2,r2,3
     9c0:	e0ffef17 	ldw	r3,-68(fp)
     9c4:	1885883a 	add	r2,r3,r2
     9c8:	10c00017 	ldw	r3,0(r2)
     9cc:	e13ffd17 	ldw	r4,-12(fp)
     9d0:	20800117 	ldw	r2,4(r4)
     9d4:	1887ff32 	custom	252,r3,r3,r2
     9d8:	e0bffc17 	ldw	r2,-16(fp)
     9dc:	100490fa 	slli	r2,r2,3
     9e0:	e13fef17 	ldw	r4,-68(fp)
     9e4:	2085883a 	add	r2,r4,r2
     9e8:	11000117 	ldw	r4,4(r2)
     9ec:	e17ffd17 	ldw	r5,-12(fp)
     9f0:	28800017 	ldw	r2,0(r5)
     9f4:	2085ff32 	custom	252,r2,r4,r2
     9f8:	1885ff72 	custom	253,r2,r3,r2
     9fc:	e0bff715 	stw	r2,-36(fp)

         C_ADD(scratch[3],scratch[1],scratch[2]);
     a00:	e0fff417 	ldw	r3,-48(fp)
     a04:	e0bff617 	ldw	r2,-40(fp)
     a08:	1885ff72 	custom	253,r2,r3,r2
     a0c:	e0bff815 	stw	r2,-32(fp)
     a10:	e0fff517 	ldw	r3,-44(fp)
     a14:	e0bff717 	ldw	r2,-36(fp)
     a18:	1885ff72 	custom	253,r2,r3,r2
     a1c:	e0bff915 	stw	r2,-28(fp)
         C_SUB(scratch[0],scratch[1],scratch[2]);
     a20:	e0fff417 	ldw	r3,-48(fp)
     a24:	e0bff617 	ldw	r2,-40(fp)
     a28:	1885ffb2 	custom	254,r2,r3,r2
     a2c:	e0bff215 	stw	r2,-56(fp)
     a30:	e0fff517 	ldw	r3,-44(fp)
     a34:	e0bff717 	ldw	r2,-36(fp)
     a38:	1885ffb2 	custom	254,r2,r3,r2
     a3c:	e0bff315 	stw	r2,-52(fp)
         tw1 += fstride;
     a40:	e0bfee17 	ldw	r2,-72(fp)
     a44:	100490fa 	slli	r2,r2,3
     a48:	e0fffe17 	ldw	r3,-8(fp)
     a4c:	1885883a 	add	r2,r3,r2
     a50:	e0bffe15 	stw	r2,-8(fp)
         tw2 += fstride*2;
     a54:	e0bfee17 	ldw	r2,-72(fp)
     a58:	1004913a 	slli	r2,r2,4
     a5c:	e0fffd17 	ldw	r3,-12(fp)
     a60:	1885883a 	add	r2,r3,r2
     a64:	e0bffd15 	stw	r2,-12(fp)

         Fout[m].r = Fout->r - HALF_OF(scratch[3].r);
     a68:	e0bfef17 	ldw	r2,-68(fp)
     a6c:	11000017 	ldw	r4,0(r2)
     a70:	e0fff817 	ldw	r3,-32(fp)
     a74:	008fc034 	movhi	r2,16128
     a78:	1887ff32 	custom	252,r3,r3,r2
     a7c:	e0bfec17 	ldw	r2,-80(fp)
     a80:	100490fa 	slli	r2,r2,3
     a84:	e17fef17 	ldw	r5,-68(fp)
     a88:	2885883a 	add	r2,r5,r2
     a8c:	20c7ffb2 	custom	254,r3,r4,r3
     a90:	10c00015 	stw	r3,0(r2)
         Fout[m].i = Fout->i - HALF_OF(scratch[3].i);
     a94:	e0bfef17 	ldw	r2,-68(fp)
     a98:	11000117 	ldw	r4,4(r2)
     a9c:	e0fff917 	ldw	r3,-28(fp)
     aa0:	008fc034 	movhi	r2,16128
     aa4:	1887ff32 	custom	252,r3,r3,r2
     aa8:	e0bfec17 	ldw	r2,-80(fp)
     aac:	100490fa 	slli	r2,r2,3
     ab0:	e17fef17 	ldw	r5,-68(fp)
     ab4:	2885883a 	add	r2,r5,r2
     ab8:	20c7ffb2 	custom	254,r3,r4,r3
     abc:	10c00115 	stw	r3,4(r2)

         C_MULBYSCALAR( scratch[0] , epi3.i );
     ac0:	e0fff217 	ldw	r3,-56(fp)
     ac4:	e0bff117 	ldw	r2,-60(fp)
     ac8:	1885ff32 	custom	252,r2,r3,r2
     acc:	e0bff215 	stw	r2,-56(fp)
     ad0:	e0fff317 	ldw	r3,-52(fp)
     ad4:	e0bff117 	ldw	r2,-60(fp)
     ad8:	1885ff32 	custom	252,r2,r3,r2
     adc:	e0bff315 	stw	r2,-52(fp)

         C_ADDTO(*Fout,scratch[3]);
     ae0:	e0bfef17 	ldw	r2,-68(fp)
     ae4:	10c00017 	ldw	r3,0(r2)
     ae8:	e0bff817 	ldw	r2,-32(fp)
     aec:	1887ff72 	custom	253,r3,r3,r2
     af0:	e0bfef17 	ldw	r2,-68(fp)
     af4:	10c00015 	stw	r3,0(r2)
     af8:	e0bfef17 	ldw	r2,-68(fp)
     afc:	10c00117 	ldw	r3,4(r2)
     b00:	e0bff917 	ldw	r2,-28(fp)
     b04:	1887ff72 	custom	253,r3,r3,r2
     b08:	e0bfef17 	ldw	r2,-68(fp)
     b0c:	10c00115 	stw	r3,4(r2)

         Fout[m2].r = Fout[m].r + scratch[0].i;
     b10:	e0bfec17 	ldw	r2,-80(fp)
     b14:	100490fa 	slli	r2,r2,3
     b18:	e0ffef17 	ldw	r3,-68(fp)
     b1c:	1885883a 	add	r2,r3,r2
     b20:	11000017 	ldw	r4,0(r2)
     b24:	e0fff317 	ldw	r3,-52(fp)
     b28:	e0bffc17 	ldw	r2,-16(fp)
     b2c:	100490fa 	slli	r2,r2,3
     b30:	e17fef17 	ldw	r5,-68(fp)
     b34:	2885883a 	add	r2,r5,r2
     b38:	20c7ff72 	custom	253,r3,r4,r3
     b3c:	10c00015 	stw	r3,0(r2)
         Fout[m2].i = Fout[m].i - scratch[0].r;
     b40:	e0bfec17 	ldw	r2,-80(fp)
     b44:	100490fa 	slli	r2,r2,3
     b48:	e0ffef17 	ldw	r3,-68(fp)
     b4c:	1885883a 	add	r2,r3,r2
     b50:	11000117 	ldw	r4,4(r2)
     b54:	e0fff217 	ldw	r3,-56(fp)
     b58:	e0bffc17 	ldw	r2,-16(fp)
     b5c:	100490fa 	slli	r2,r2,3
     b60:	e17fef17 	ldw	r5,-68(fp)
     b64:	2885883a 	add	r2,r5,r2
     b68:	20c7ffb2 	custom	254,r3,r4,r3
     b6c:	10c00115 	stw	r3,4(r2)

         Fout[m].r -= scratch[0].i;
     b70:	e0bfec17 	ldw	r2,-80(fp)
     b74:	100490fa 	slli	r2,r2,3
     b78:	e0ffef17 	ldw	r3,-68(fp)
     b7c:	1885883a 	add	r2,r3,r2
     b80:	11000017 	ldw	r4,0(r2)
     b84:	e0fff317 	ldw	r3,-52(fp)
     b88:	e0bfec17 	ldw	r2,-80(fp)
     b8c:	100490fa 	slli	r2,r2,3
     b90:	e17fef17 	ldw	r5,-68(fp)
     b94:	2885883a 	add	r2,r5,r2
     b98:	20c7ffb2 	custom	254,r3,r4,r3
     b9c:	10c00015 	stw	r3,0(r2)
         Fout[m].i += scratch[0].r;
     ba0:	e0bfec17 	ldw	r2,-80(fp)
     ba4:	100490fa 	slli	r2,r2,3
     ba8:	e0ffef17 	ldw	r3,-68(fp)
     bac:	1885883a 	add	r2,r3,r2
     bb0:	11000117 	ldw	r4,4(r2)
     bb4:	e0fff217 	ldw	r3,-56(fp)
     bb8:	e0bfec17 	ldw	r2,-80(fp)
     bbc:	100490fa 	slli	r2,r2,3
     bc0:	e17fef17 	ldw	r5,-68(fp)
     bc4:	2885883a 	add	r2,r5,r2
     bc8:	20c7ff72 	custom	253,r3,r4,r3
     bcc:	10c00115 	stw	r3,4(r2)

         ++Fout;
     bd0:	e0bfef17 	ldw	r2,-68(fp)
     bd4:	10800204 	addi	r2,r2,8
     bd8:	e0bfef15 	stw	r2,-68(fp)
     }while(--k);
     bdc:	e0bfff17 	ldw	r2,-4(fp)
     be0:	10bfffc4 	addi	r2,r2,-1
     be4:	e0bfff15 	stw	r2,-4(fp)
     be8:	e0bfff17 	ldw	r2,-4(fp)
     bec:	103f3c1e 	bne	r2,zero,8e0 <kf_bfly3+0x74>
}
     bf0:	0001883a 	nop
     bf4:	0001883a 	nop
     bf8:	e037883a 	mov	sp,fp
     bfc:	dfc00117 	ldw	ra,4(sp)
     c00:	df000017 	ldw	fp,0(sp)
     c04:	dec00204 	addi	sp,sp,8
     c08:	f800283a 	ret

00000c0c <kf_bfly5>:
        kiss_fft_cpx * Fout,
        const size_t fstride,
        const kiss_fft_cfg st,
        int m
        )
{
     c0c:	deffd204 	addi	sp,sp,-184
     c10:	dfc02d15 	stw	ra,180(sp)
     c14:	df002c15 	stw	fp,176(sp)
     c18:	dc402b15 	stw	r17,172(sp)
     c1c:	dc002a15 	stw	r16,168(sp)
     c20:	df002c04 	addi	fp,sp,176
     c24:	e13fd715 	stw	r4,-164(fp)
     c28:	e17fd615 	stw	r5,-168(fp)
     c2c:	e1bfd515 	stw	r6,-172(fp)
     c30:	e1ffd415 	stw	r7,-176(fp)
    kiss_fft_cpx *Fout0,*Fout1,*Fout2,*Fout3,*Fout4;
    int u;
    kiss_fft_cpx scratch[13];
    kiss_fft_cpx * twiddles = st->twiddles;
     c34:	e0bfd517 	ldw	r2,-172(fp)
     c38:	10804204 	addi	r2,r2,264
     c3c:	e0bff715 	stw	r2,-36(fp)
    kiss_fft_cpx *tw;
    kiss_fft_cpx ya,yb;
    ya = twiddles[fstride*m];
     c40:	e0bfd417 	ldw	r2,-176(fp)
     c44:	e17fd617 	ldw	r5,-168(fp)
     c48:	1009883a 	mov	r4,r2
     c4c:	0008b4c0 	call	8b4c <__mulsi3>
     c50:	100490fa 	slli	r2,r2,3
     c54:	e0fff717 	ldw	r3,-36(fp)
     c58:	1885883a 	add	r2,r3,r2
     c5c:	10c00017 	ldw	r3,0(r2)
     c60:	e0ffda15 	stw	r3,-152(fp)
     c64:	10800117 	ldw	r2,4(r2)
     c68:	e0bfdb15 	stw	r2,-148(fp)
    yb = twiddles[fstride*2*m];
     c6c:	e0bfd417 	ldw	r2,-176(fp)
     c70:	e17fd617 	ldw	r5,-168(fp)
     c74:	1009883a 	mov	r4,r2
     c78:	0008b4c0 	call	8b4c <__mulsi3>
     c7c:	1004913a 	slli	r2,r2,4
     c80:	e0fff717 	ldw	r3,-36(fp)
     c84:	1885883a 	add	r2,r3,r2
     c88:	10c00017 	ldw	r3,0(r2)
     c8c:	e0ffd815 	stw	r3,-160(fp)
     c90:	10800117 	ldw	r2,4(r2)
     c94:	e0bfd915 	stw	r2,-156(fp)

    Fout0=Fout;
     c98:	e0bfd717 	ldw	r2,-164(fp)
     c9c:	e0bffd15 	stw	r2,-12(fp)
    Fout1=Fout0+m;
     ca0:	e0bfd417 	ldw	r2,-176(fp)
     ca4:	100490fa 	slli	r2,r2,3
     ca8:	e0fffd17 	ldw	r3,-12(fp)
     cac:	1885883a 	add	r2,r3,r2
     cb0:	e0bffc15 	stw	r2,-16(fp)
    Fout2=Fout0+2*m;
     cb4:	e0bfd417 	ldw	r2,-176(fp)
     cb8:	1004913a 	slli	r2,r2,4
     cbc:	e0fffd17 	ldw	r3,-12(fp)
     cc0:	1885883a 	add	r2,r3,r2
     cc4:	e0bffb15 	stw	r2,-20(fp)
    Fout3=Fout0+3*m;
     cc8:	e0ffd417 	ldw	r3,-176(fp)
     ccc:	1805883a 	mov	r2,r3
     cd0:	1085883a 	add	r2,r2,r2
     cd4:	10c5883a 	add	r2,r2,r3
     cd8:	100490fa 	slli	r2,r2,3
     cdc:	1007883a 	mov	r3,r2
     ce0:	e0bffd17 	ldw	r2,-12(fp)
     ce4:	10c5883a 	add	r2,r2,r3
     ce8:	e0bffa15 	stw	r2,-24(fp)
    Fout4=Fout0+4*m;
     cec:	e0bfd417 	ldw	r2,-176(fp)
     cf0:	1004917a 	slli	r2,r2,5
     cf4:	e0fffd17 	ldw	r3,-12(fp)
     cf8:	1885883a 	add	r2,r3,r2
     cfc:	e0bff915 	stw	r2,-28(fp)

    tw=st->twiddles;
     d00:	e0bfd517 	ldw	r2,-172(fp)
     d04:	10804204 	addi	r2,r2,264
     d08:	e0bff615 	stw	r2,-40(fp)
    for ( u=0; u<m; ++u ) {
     d0c:	e03ff815 	stw	zero,-32(fp)
     d10:	00018c06 	br	1344 <kf_bfly5+0x738>
        C_FIXDIV( *Fout0,5); C_FIXDIV( *Fout1,5); C_FIXDIV( *Fout2,5); C_FIXDIV( *Fout3,5); C_FIXDIV( *Fout4,5);
        scratch[0] = *Fout0;
     d14:	e0bffd17 	ldw	r2,-12(fp)
     d18:	10c00017 	ldw	r3,0(r2)
     d1c:	e0ffdc15 	stw	r3,-144(fp)
     d20:	10800117 	ldw	r2,4(r2)
     d24:	e0bfdd15 	stw	r2,-140(fp)

        C_MUL(scratch[1] ,*Fout1, tw[u*fstride]);
     d28:	e0bffc17 	ldw	r2,-16(fp)
     d2c:	14000017 	ldw	r16,0(r2)
     d30:	e0bff817 	ldw	r2,-32(fp)
     d34:	e17fd617 	ldw	r5,-168(fp)
     d38:	1009883a 	mov	r4,r2
     d3c:	0008b4c0 	call	8b4c <__mulsi3>
     d40:	100490fa 	slli	r2,r2,3
     d44:	e0fff617 	ldw	r3,-40(fp)
     d48:	1887883a 	add	r3,r3,r2
     d4c:	18800017 	ldw	r2,0(r3)
     d50:	80a1ff32 	custom	252,r16,r16,r2
     d54:	e0bffc17 	ldw	r2,-16(fp)
     d58:	14400117 	ldw	r17,4(r2)
     d5c:	e0bff817 	ldw	r2,-32(fp)
     d60:	e17fd617 	ldw	r5,-168(fp)
     d64:	1009883a 	mov	r4,r2
     d68:	0008b4c0 	call	8b4c <__mulsi3>
     d6c:	100490fa 	slli	r2,r2,3
     d70:	e0fff617 	ldw	r3,-40(fp)
     d74:	1887883a 	add	r3,r3,r2
     d78:	18800117 	ldw	r2,4(r3)
     d7c:	8885ff32 	custom	252,r2,r17,r2
     d80:	8085ffb2 	custom	254,r2,r16,r2
     d84:	e0bfde15 	stw	r2,-136(fp)
     d88:	e0bffc17 	ldw	r2,-16(fp)
     d8c:	14000017 	ldw	r16,0(r2)
     d90:	e0bff817 	ldw	r2,-32(fp)
     d94:	e17fd617 	ldw	r5,-168(fp)
     d98:	1009883a 	mov	r4,r2
     d9c:	0008b4c0 	call	8b4c <__mulsi3>
     da0:	100490fa 	slli	r2,r2,3
     da4:	e0fff617 	ldw	r3,-40(fp)
     da8:	1887883a 	add	r3,r3,r2
     dac:	18800117 	ldw	r2,4(r3)
     db0:	80a1ff32 	custom	252,r16,r16,r2
     db4:	e0bffc17 	ldw	r2,-16(fp)
     db8:	14400117 	ldw	r17,4(r2)
     dbc:	e0bff817 	ldw	r2,-32(fp)
     dc0:	e17fd617 	ldw	r5,-168(fp)
     dc4:	1009883a 	mov	r4,r2
     dc8:	0008b4c0 	call	8b4c <__mulsi3>
     dcc:	100490fa 	slli	r2,r2,3
     dd0:	e0fff617 	ldw	r3,-40(fp)
     dd4:	1887883a 	add	r3,r3,r2
     dd8:	18800017 	ldw	r2,0(r3)
     ddc:	8885ff32 	custom	252,r2,r17,r2
     de0:	8085ff72 	custom	253,r2,r16,r2
     de4:	e0bfdf15 	stw	r2,-132(fp)
        C_MUL(scratch[2] ,*Fout2, tw[2*u*fstride]);
     de8:	e0bffb17 	ldw	r2,-20(fp)
     dec:	14000017 	ldw	r16,0(r2)
     df0:	e0bff817 	ldw	r2,-32(fp)
     df4:	e17fd617 	ldw	r5,-168(fp)
     df8:	1009883a 	mov	r4,r2
     dfc:	0008b4c0 	call	8b4c <__mulsi3>
     e00:	1004913a 	slli	r2,r2,4
     e04:	e0fff617 	ldw	r3,-40(fp)
     e08:	1887883a 	add	r3,r3,r2
     e0c:	18800017 	ldw	r2,0(r3)
     e10:	80a1ff32 	custom	252,r16,r16,r2
     e14:	e0bffb17 	ldw	r2,-20(fp)
     e18:	14400117 	ldw	r17,4(r2)
     e1c:	e0bff817 	ldw	r2,-32(fp)
     e20:	e17fd617 	ldw	r5,-168(fp)
     e24:	1009883a 	mov	r4,r2
     e28:	0008b4c0 	call	8b4c <__mulsi3>
     e2c:	1004913a 	slli	r2,r2,4
     e30:	e0fff617 	ldw	r3,-40(fp)
     e34:	1887883a 	add	r3,r3,r2
     e38:	18800117 	ldw	r2,4(r3)
     e3c:	8885ff32 	custom	252,r2,r17,r2
     e40:	8085ffb2 	custom	254,r2,r16,r2
     e44:	e0bfe015 	stw	r2,-128(fp)
     e48:	e0bffb17 	ldw	r2,-20(fp)
     e4c:	14000017 	ldw	r16,0(r2)
     e50:	e0bff817 	ldw	r2,-32(fp)
     e54:	e17fd617 	ldw	r5,-168(fp)
     e58:	1009883a 	mov	r4,r2
     e5c:	0008b4c0 	call	8b4c <__mulsi3>
     e60:	1004913a 	slli	r2,r2,4
     e64:	e0fff617 	ldw	r3,-40(fp)
     e68:	1887883a 	add	r3,r3,r2
     e6c:	18800117 	ldw	r2,4(r3)
     e70:	80a1ff32 	custom	252,r16,r16,r2
     e74:	e0bffb17 	ldw	r2,-20(fp)
     e78:	14400117 	ldw	r17,4(r2)
     e7c:	e0bff817 	ldw	r2,-32(fp)
     e80:	e17fd617 	ldw	r5,-168(fp)
     e84:	1009883a 	mov	r4,r2
     e88:	0008b4c0 	call	8b4c <__mulsi3>
     e8c:	1004913a 	slli	r2,r2,4
     e90:	e0fff617 	ldw	r3,-40(fp)
     e94:	1887883a 	add	r3,r3,r2
     e98:	18800017 	ldw	r2,0(r3)
     e9c:	8885ff32 	custom	252,r2,r17,r2
     ea0:	8085ff72 	custom	253,r2,r16,r2
     ea4:	e0bfe115 	stw	r2,-124(fp)
        C_MUL(scratch[3] ,*Fout3, tw[3*u*fstride]);
     ea8:	e0bffa17 	ldw	r2,-24(fp)
     eac:	14000017 	ldw	r16,0(r2)
     eb0:	e0bff817 	ldw	r2,-32(fp)
     eb4:	e17fd617 	ldw	r5,-168(fp)
     eb8:	1009883a 	mov	r4,r2
     ebc:	0008b4c0 	call	8b4c <__mulsi3>
     ec0:	1007883a 	mov	r3,r2
     ec4:	1805883a 	mov	r2,r3
     ec8:	1085883a 	add	r2,r2,r2
     ecc:	10c5883a 	add	r2,r2,r3
     ed0:	100490fa 	slli	r2,r2,3
     ed4:	1007883a 	mov	r3,r2
     ed8:	e0bff617 	ldw	r2,-40(fp)
     edc:	10c7883a 	add	r3,r2,r3
     ee0:	18800017 	ldw	r2,0(r3)
     ee4:	80a1ff32 	custom	252,r16,r16,r2
     ee8:	e0bffa17 	ldw	r2,-24(fp)
     eec:	14400117 	ldw	r17,4(r2)
     ef0:	e0bff817 	ldw	r2,-32(fp)
     ef4:	e17fd617 	ldw	r5,-168(fp)
     ef8:	1009883a 	mov	r4,r2
     efc:	0008b4c0 	call	8b4c <__mulsi3>
     f00:	1007883a 	mov	r3,r2
     f04:	1805883a 	mov	r2,r3
     f08:	1085883a 	add	r2,r2,r2
     f0c:	10c5883a 	add	r2,r2,r3
     f10:	100490fa 	slli	r2,r2,3
     f14:	1007883a 	mov	r3,r2
     f18:	e0bff617 	ldw	r2,-40(fp)
     f1c:	10c7883a 	add	r3,r2,r3
     f20:	18800117 	ldw	r2,4(r3)
     f24:	8885ff32 	custom	252,r2,r17,r2
     f28:	8085ffb2 	custom	254,r2,r16,r2
     f2c:	e0bfe215 	stw	r2,-120(fp)
     f30:	e0bffa17 	ldw	r2,-24(fp)
     f34:	14000017 	ldw	r16,0(r2)
     f38:	e0bff817 	ldw	r2,-32(fp)
     f3c:	e17fd617 	ldw	r5,-168(fp)
     f40:	1009883a 	mov	r4,r2
     f44:	0008b4c0 	call	8b4c <__mulsi3>
     f48:	1007883a 	mov	r3,r2
     f4c:	1805883a 	mov	r2,r3
     f50:	1085883a 	add	r2,r2,r2
     f54:	10c5883a 	add	r2,r2,r3
     f58:	100490fa 	slli	r2,r2,3
     f5c:	1007883a 	mov	r3,r2
     f60:	e0bff617 	ldw	r2,-40(fp)
     f64:	10c7883a 	add	r3,r2,r3
     f68:	18800117 	ldw	r2,4(r3)
     f6c:	80a1ff32 	custom	252,r16,r16,r2
     f70:	e0bffa17 	ldw	r2,-24(fp)
     f74:	14400117 	ldw	r17,4(r2)
     f78:	e0bff817 	ldw	r2,-32(fp)
     f7c:	e17fd617 	ldw	r5,-168(fp)
     f80:	1009883a 	mov	r4,r2
     f84:	0008b4c0 	call	8b4c <__mulsi3>
     f88:	1007883a 	mov	r3,r2
     f8c:	1805883a 	mov	r2,r3
     f90:	1085883a 	add	r2,r2,r2
     f94:	10c5883a 	add	r2,r2,r3
     f98:	100490fa 	slli	r2,r2,3
     f9c:	1007883a 	mov	r3,r2
     fa0:	e0bff617 	ldw	r2,-40(fp)
     fa4:	10c7883a 	add	r3,r2,r3
     fa8:	18800017 	ldw	r2,0(r3)
     fac:	8885ff32 	custom	252,r2,r17,r2
     fb0:	8085ff72 	custom	253,r2,r16,r2
     fb4:	e0bfe315 	stw	r2,-116(fp)
        C_MUL(scratch[4] ,*Fout4, tw[4*u*fstride]);
     fb8:	e0bff917 	ldw	r2,-28(fp)
     fbc:	14000017 	ldw	r16,0(r2)
     fc0:	e0bff817 	ldw	r2,-32(fp)
     fc4:	e17fd617 	ldw	r5,-168(fp)
     fc8:	1009883a 	mov	r4,r2
     fcc:	0008b4c0 	call	8b4c <__mulsi3>
     fd0:	1004917a 	slli	r2,r2,5
     fd4:	e0fff617 	ldw	r3,-40(fp)
     fd8:	1887883a 	add	r3,r3,r2
     fdc:	18800017 	ldw	r2,0(r3)
     fe0:	80a1ff32 	custom	252,r16,r16,r2
     fe4:	e0bff917 	ldw	r2,-28(fp)
     fe8:	14400117 	ldw	r17,4(r2)
     fec:	e0bff817 	ldw	r2,-32(fp)
     ff0:	e17fd617 	ldw	r5,-168(fp)
     ff4:	1009883a 	mov	r4,r2
     ff8:	0008b4c0 	call	8b4c <__mulsi3>
     ffc:	1004917a 	slli	r2,r2,5
    1000:	e0fff617 	ldw	r3,-40(fp)
    1004:	1887883a 	add	r3,r3,r2
    1008:	18800117 	ldw	r2,4(r3)
    100c:	8885ff32 	custom	252,r2,r17,r2
    1010:	8085ffb2 	custom	254,r2,r16,r2
    1014:	e0bfe415 	stw	r2,-112(fp)
    1018:	e0bff917 	ldw	r2,-28(fp)
    101c:	14000017 	ldw	r16,0(r2)
    1020:	e0bff817 	ldw	r2,-32(fp)
    1024:	e17fd617 	ldw	r5,-168(fp)
    1028:	1009883a 	mov	r4,r2
    102c:	0008b4c0 	call	8b4c <__mulsi3>
    1030:	1004917a 	slli	r2,r2,5
    1034:	e0fff617 	ldw	r3,-40(fp)
    1038:	1887883a 	add	r3,r3,r2
    103c:	18800117 	ldw	r2,4(r3)
    1040:	80a1ff32 	custom	252,r16,r16,r2
    1044:	e0bff917 	ldw	r2,-28(fp)
    1048:	14400117 	ldw	r17,4(r2)
    104c:	e0bff817 	ldw	r2,-32(fp)
    1050:	e17fd617 	ldw	r5,-168(fp)
    1054:	1009883a 	mov	r4,r2
    1058:	0008b4c0 	call	8b4c <__mulsi3>
    105c:	1004917a 	slli	r2,r2,5
    1060:	e0fff617 	ldw	r3,-40(fp)
    1064:	1887883a 	add	r3,r3,r2
    1068:	18800017 	ldw	r2,0(r3)
    106c:	8885ff32 	custom	252,r2,r17,r2
    1070:	8085ff72 	custom	253,r2,r16,r2
    1074:	e0bfe515 	stw	r2,-108(fp)

        C_ADD( scratch[7],scratch[1],scratch[4]);
    1078:	e0ffde17 	ldw	r3,-136(fp)
    107c:	e0bfe417 	ldw	r2,-112(fp)
    1080:	1885ff72 	custom	253,r2,r3,r2
    1084:	e0bfea15 	stw	r2,-88(fp)
    1088:	e0ffdf17 	ldw	r3,-132(fp)
    108c:	e0bfe517 	ldw	r2,-108(fp)
    1090:	1885ff72 	custom	253,r2,r3,r2
    1094:	e0bfeb15 	stw	r2,-84(fp)
        C_SUB( scratch[10],scratch[1],scratch[4]);
    1098:	e0ffde17 	ldw	r3,-136(fp)
    109c:	e0bfe417 	ldw	r2,-112(fp)
    10a0:	1885ffb2 	custom	254,r2,r3,r2
    10a4:	e0bff015 	stw	r2,-64(fp)
    10a8:	e0ffdf17 	ldw	r3,-132(fp)
    10ac:	e0bfe517 	ldw	r2,-108(fp)
    10b0:	1885ffb2 	custom	254,r2,r3,r2
    10b4:	e0bff115 	stw	r2,-60(fp)
        C_ADD( scratch[8],scratch[2],scratch[3]);
    10b8:	e0ffe017 	ldw	r3,-128(fp)
    10bc:	e0bfe217 	ldw	r2,-120(fp)
    10c0:	1885ff72 	custom	253,r2,r3,r2
    10c4:	e0bfec15 	stw	r2,-80(fp)
    10c8:	e0ffe117 	ldw	r3,-124(fp)
    10cc:	e0bfe317 	ldw	r2,-116(fp)
    10d0:	1885ff72 	custom	253,r2,r3,r2
    10d4:	e0bfed15 	stw	r2,-76(fp)
        C_SUB( scratch[9],scratch[2],scratch[3]);
    10d8:	e0ffe017 	ldw	r3,-128(fp)
    10dc:	e0bfe217 	ldw	r2,-120(fp)
    10e0:	1885ffb2 	custom	254,r2,r3,r2
    10e4:	e0bfee15 	stw	r2,-72(fp)
    10e8:	e0ffe117 	ldw	r3,-124(fp)
    10ec:	e0bfe317 	ldw	r2,-116(fp)
    10f0:	1885ffb2 	custom	254,r2,r3,r2
    10f4:	e0bfef15 	stw	r2,-68(fp)

        Fout0->r += scratch[7].r + scratch[8].r;
    10f8:	e0bffd17 	ldw	r2,-12(fp)
    10fc:	10c00017 	ldw	r3,0(r2)
    1100:	e13fea17 	ldw	r4,-88(fp)
    1104:	e0bfec17 	ldw	r2,-80(fp)
    1108:	2085ff72 	custom	253,r2,r4,r2
    110c:	1887ff72 	custom	253,r3,r3,r2
    1110:	e0bffd17 	ldw	r2,-12(fp)
    1114:	10c00015 	stw	r3,0(r2)
        Fout0->i += scratch[7].i + scratch[8].i;
    1118:	e0bffd17 	ldw	r2,-12(fp)
    111c:	10c00117 	ldw	r3,4(r2)
    1120:	e13feb17 	ldw	r4,-84(fp)
    1124:	e0bfed17 	ldw	r2,-76(fp)
    1128:	2085ff72 	custom	253,r2,r4,r2
    112c:	1887ff72 	custom	253,r3,r3,r2
    1130:	e0bffd17 	ldw	r2,-12(fp)
    1134:	10c00115 	stw	r3,4(r2)

        scratch[5].r = scratch[0].r + S_MUL(scratch[7].r,ya.r) + S_MUL(scratch[8].r,yb.r);
    1138:	e0ffdc17 	ldw	r3,-144(fp)
    113c:	e13fea17 	ldw	r4,-88(fp)
    1140:	e0bfda17 	ldw	r2,-152(fp)
    1144:	2085ff32 	custom	252,r2,r4,r2
    1148:	1887ff72 	custom	253,r3,r3,r2
    114c:	e13fec17 	ldw	r4,-80(fp)
    1150:	e0bfd817 	ldw	r2,-160(fp)
    1154:	2085ff32 	custom	252,r2,r4,r2
    1158:	1885ff72 	custom	253,r2,r3,r2
    115c:	e0bfe615 	stw	r2,-104(fp)
        scratch[5].i = scratch[0].i + S_MUL(scratch[7].i,ya.r) + S_MUL(scratch[8].i,yb.r);
    1160:	e0ffdd17 	ldw	r3,-140(fp)
    1164:	e13feb17 	ldw	r4,-84(fp)
    1168:	e0bfda17 	ldw	r2,-152(fp)
    116c:	2085ff32 	custom	252,r2,r4,r2
    1170:	1887ff72 	custom	253,r3,r3,r2
    1174:	e13fed17 	ldw	r4,-76(fp)
    1178:	e0bfd817 	ldw	r2,-160(fp)
    117c:	2085ff32 	custom	252,r2,r4,r2
    1180:	1885ff72 	custom	253,r2,r3,r2
    1184:	e0bfe715 	stw	r2,-100(fp)

        scratch[6].r =  S_MUL(scratch[10].i,ya.i) + S_MUL(scratch[9].i,yb.i);
    1188:	e0fff117 	ldw	r3,-60(fp)
    118c:	e0bfdb17 	ldw	r2,-148(fp)
    1190:	1887ff32 	custom	252,r3,r3,r2
    1194:	e13fef17 	ldw	r4,-68(fp)
    1198:	e0bfd917 	ldw	r2,-156(fp)
    119c:	2085ff32 	custom	252,r2,r4,r2
    11a0:	1885ff72 	custom	253,r2,r3,r2
    11a4:	e0bfe815 	stw	r2,-96(fp)
        scratch[6].i = -S_MUL(scratch[10].r,ya.i) - S_MUL(scratch[9].r,yb.i);
    11a8:	e0fff017 	ldw	r3,-64(fp)
    11ac:	e0bfdb17 	ldw	r2,-148(fp)
    11b0:	1885ff32 	custom	252,r2,r3,r2
    11b4:	10e0003c 	xorhi	r3,r2,32768
    11b8:	e13fee17 	ldw	r4,-72(fp)
    11bc:	e0bfd917 	ldw	r2,-156(fp)
    11c0:	2085ff32 	custom	252,r2,r4,r2
    11c4:	1885ffb2 	custom	254,r2,r3,r2
    11c8:	e0bfe915 	stw	r2,-92(fp)

        C_SUB(*Fout1,scratch[5],scratch[6]);
    11cc:	e0ffe617 	ldw	r3,-104(fp)
    11d0:	e0bfe817 	ldw	r2,-96(fp)
    11d4:	1887ffb2 	custom	254,r3,r3,r2
    11d8:	e0bffc17 	ldw	r2,-16(fp)
    11dc:	10c00015 	stw	r3,0(r2)
    11e0:	e0ffe717 	ldw	r3,-100(fp)
    11e4:	e0bfe917 	ldw	r2,-92(fp)
    11e8:	1887ffb2 	custom	254,r3,r3,r2
    11ec:	e0bffc17 	ldw	r2,-16(fp)
    11f0:	10c00115 	stw	r3,4(r2)
        C_ADD(*Fout4,scratch[5],scratch[6]);
    11f4:	e0ffe617 	ldw	r3,-104(fp)
    11f8:	e0bfe817 	ldw	r2,-96(fp)
    11fc:	1887ff72 	custom	253,r3,r3,r2
    1200:	e0bff917 	ldw	r2,-28(fp)
    1204:	10c00015 	stw	r3,0(r2)
    1208:	e0ffe717 	ldw	r3,-100(fp)
    120c:	e0bfe917 	ldw	r2,-92(fp)
    1210:	1887ff72 	custom	253,r3,r3,r2
    1214:	e0bff917 	ldw	r2,-28(fp)
    1218:	10c00115 	stw	r3,4(r2)

        scratch[11].r = scratch[0].r + S_MUL(scratch[7].r,yb.r) + S_MUL(scratch[8].r,ya.r);
    121c:	e0ffdc17 	ldw	r3,-144(fp)
    1220:	e13fea17 	ldw	r4,-88(fp)
    1224:	e0bfd817 	ldw	r2,-160(fp)
    1228:	2085ff32 	custom	252,r2,r4,r2
    122c:	1887ff72 	custom	253,r3,r3,r2
    1230:	e13fec17 	ldw	r4,-80(fp)
    1234:	e0bfda17 	ldw	r2,-152(fp)
    1238:	2085ff32 	custom	252,r2,r4,r2
    123c:	1885ff72 	custom	253,r2,r3,r2
    1240:	e0bff215 	stw	r2,-56(fp)
        scratch[11].i = scratch[0].i + S_MUL(scratch[7].i,yb.r) + S_MUL(scratch[8].i,ya.r);
    1244:	e0ffdd17 	ldw	r3,-140(fp)
    1248:	e13feb17 	ldw	r4,-84(fp)
    124c:	e0bfd817 	ldw	r2,-160(fp)
    1250:	2085ff32 	custom	252,r2,r4,r2
    1254:	1887ff72 	custom	253,r3,r3,r2
    1258:	e13fed17 	ldw	r4,-76(fp)
    125c:	e0bfda17 	ldw	r2,-152(fp)
    1260:	2085ff32 	custom	252,r2,r4,r2
    1264:	1885ff72 	custom	253,r2,r3,r2
    1268:	e0bff315 	stw	r2,-52(fp)
        scratch[12].r = - S_MUL(scratch[10].i,yb.i) + S_MUL(scratch[9].i,ya.i);
    126c:	e0ffef17 	ldw	r3,-68(fp)
    1270:	e0bfdb17 	ldw	r2,-148(fp)
    1274:	1887ff32 	custom	252,r3,r3,r2
    1278:	e13ff117 	ldw	r4,-60(fp)
    127c:	e0bfd917 	ldw	r2,-156(fp)
    1280:	2085ff32 	custom	252,r2,r4,r2
    1284:	1885ffb2 	custom	254,r2,r3,r2
    1288:	e0bff415 	stw	r2,-48(fp)
        scratch[12].i = S_MUL(scratch[10].r,yb.i) - S_MUL(scratch[9].r,ya.i);
    128c:	e0fff017 	ldw	r3,-64(fp)
    1290:	e0bfd917 	ldw	r2,-156(fp)
    1294:	1887ff32 	custom	252,r3,r3,r2
    1298:	e13fee17 	ldw	r4,-72(fp)
    129c:	e0bfdb17 	ldw	r2,-148(fp)
    12a0:	2085ff32 	custom	252,r2,r4,r2
    12a4:	1885ffb2 	custom	254,r2,r3,r2
    12a8:	e0bff515 	stw	r2,-44(fp)

        C_ADD(*Fout2,scratch[11],scratch[12]);
    12ac:	e0fff217 	ldw	r3,-56(fp)
    12b0:	e0bff417 	ldw	r2,-48(fp)
    12b4:	1887ff72 	custom	253,r3,r3,r2
    12b8:	e0bffb17 	ldw	r2,-20(fp)
    12bc:	10c00015 	stw	r3,0(r2)
    12c0:	e0fff317 	ldw	r3,-52(fp)
    12c4:	e0bff517 	ldw	r2,-44(fp)
    12c8:	1887ff72 	custom	253,r3,r3,r2
    12cc:	e0bffb17 	ldw	r2,-20(fp)
    12d0:	10c00115 	stw	r3,4(r2)
        C_SUB(*Fout3,scratch[11],scratch[12]);
    12d4:	e0fff217 	ldw	r3,-56(fp)
    12d8:	e0bff417 	ldw	r2,-48(fp)
    12dc:	1887ffb2 	custom	254,r3,r3,r2
    12e0:	e0bffa17 	ldw	r2,-24(fp)
    12e4:	10c00015 	stw	r3,0(r2)
    12e8:	e0fff317 	ldw	r3,-52(fp)
    12ec:	e0bff517 	ldw	r2,-44(fp)
    12f0:	1887ffb2 	custom	254,r3,r3,r2
    12f4:	e0bffa17 	ldw	r2,-24(fp)
    12f8:	10c00115 	stw	r3,4(r2)

        ++Fout0;++Fout1;++Fout2;++Fout3;++Fout4;
    12fc:	e0bffd17 	ldw	r2,-12(fp)
    1300:	10800204 	addi	r2,r2,8
    1304:	e0bffd15 	stw	r2,-12(fp)
    1308:	e0bffc17 	ldw	r2,-16(fp)
    130c:	10800204 	addi	r2,r2,8
    1310:	e0bffc15 	stw	r2,-16(fp)
    1314:	e0bffb17 	ldw	r2,-20(fp)
    1318:	10800204 	addi	r2,r2,8
    131c:	e0bffb15 	stw	r2,-20(fp)
    1320:	e0bffa17 	ldw	r2,-24(fp)
    1324:	10800204 	addi	r2,r2,8
    1328:	e0bffa15 	stw	r2,-24(fp)
    132c:	e0bff917 	ldw	r2,-28(fp)
    1330:	10800204 	addi	r2,r2,8
    1334:	e0bff915 	stw	r2,-28(fp)
    for ( u=0; u<m; ++u ) {
    1338:	e0bff817 	ldw	r2,-32(fp)
    133c:	10800044 	addi	r2,r2,1
    1340:	e0bff815 	stw	r2,-32(fp)
    1344:	e0fff817 	ldw	r3,-32(fp)
    1348:	e0bfd417 	ldw	r2,-176(fp)
    134c:	18be7116 	blt	r3,r2,d14 <kf_bfly5+0x108>
    }
}
    1350:	0001883a 	nop
    1354:	0001883a 	nop
    1358:	e6fffe04 	addi	sp,fp,-8
    135c:	dfc00317 	ldw	ra,12(sp)
    1360:	df000217 	ldw	fp,8(sp)
    1364:	dc400117 	ldw	r17,4(sp)
    1368:	dc000017 	ldw	r16,0(sp)
    136c:	dec00404 	addi	sp,sp,16
    1370:	f800283a 	ret

00001374 <kf_bfly_generic>:
        const size_t fstride,
        const kiss_fft_cfg st,
        int m,
        int p
        )
{
    1374:	defff004 	addi	sp,sp,-64
    1378:	dfc00f15 	stw	ra,60(sp)
    137c:	df000e15 	stw	fp,56(sp)
    1380:	df000e04 	addi	fp,sp,56
    1384:	e13ff515 	stw	r4,-44(fp)
    1388:	e17ff415 	stw	r5,-48(fp)
    138c:	e1bff315 	stw	r6,-52(fp)
    1390:	e1fff215 	stw	r7,-56(fp)
    int u,k,q1,q;
    kiss_fft_cpx * twiddles = st->twiddles;
    1394:	e0bff317 	ldw	r2,-52(fp)
    1398:	10804204 	addi	r2,r2,264
    139c:	e0bffa15 	stw	r2,-24(fp)
    kiss_fft_cpx t;
    int Norig = st->nfft;
    13a0:	e0bff317 	ldw	r2,-52(fp)
    13a4:	10800017 	ldw	r2,0(r2)
    13a8:	e0bff915 	stw	r2,-28(fp)

    kiss_fft_cpx * scratch = (kiss_fft_cpx*)KISS_FFT_TMP_ALLOC(sizeof(kiss_fft_cpx)*p);
    13ac:	e0800217 	ldw	r2,8(fp)
    13b0:	100490fa 	slli	r2,r2,3
    13b4:	1009883a 	mov	r4,r2
    13b8:	000c6200 	call	c620 <malloc>
    13bc:	e0bff815 	stw	r2,-32(fp)

    for ( u=0; u<m; ++u ) {
    13c0:	e03fff15 	stw	zero,-4(fp)
    13c4:	00009506 	br	161c <kf_bfly_generic+0x2a8>
        k=u;
    13c8:	e0bfff17 	ldw	r2,-4(fp)
    13cc:	e0bffe15 	stw	r2,-8(fp)
        for ( q1=0 ; q1<p ; ++q1 ) {
    13d0:	e03ffd15 	stw	zero,-12(fp)
    13d4:	00001306 	br	1424 <kf_bfly_generic+0xb0>
            scratch[q1] = Fout[ k  ];
    13d8:	e0bffe17 	ldw	r2,-8(fp)
    13dc:	100490fa 	slli	r2,r2,3
    13e0:	e0fff517 	ldw	r3,-44(fp)
    13e4:	1887883a 	add	r3,r3,r2
    13e8:	e0bffd17 	ldw	r2,-12(fp)
    13ec:	100490fa 	slli	r2,r2,3
    13f0:	e13ff817 	ldw	r4,-32(fp)
    13f4:	2085883a 	add	r2,r4,r2
    13f8:	19000017 	ldw	r4,0(r3)
    13fc:	11000015 	stw	r4,0(r2)
    1400:	18c00117 	ldw	r3,4(r3)
    1404:	10c00115 	stw	r3,4(r2)
            C_FIXDIV(scratch[q1],p);
            k += m;
    1408:	e0fffe17 	ldw	r3,-8(fp)
    140c:	e0bff217 	ldw	r2,-56(fp)
    1410:	1885883a 	add	r2,r3,r2
    1414:	e0bffe15 	stw	r2,-8(fp)
        for ( q1=0 ; q1<p ; ++q1 ) {
    1418:	e0bffd17 	ldw	r2,-12(fp)
    141c:	10800044 	addi	r2,r2,1
    1420:	e0bffd15 	stw	r2,-12(fp)
    1424:	e0fffd17 	ldw	r3,-12(fp)
    1428:	e0800217 	ldw	r2,8(fp)
    142c:	18bfea16 	blt	r3,r2,13d8 <kf_bfly_generic+0x64>
        }

        k=u;
    1430:	e0bfff17 	ldw	r2,-4(fp)
    1434:	e0bffe15 	stw	r2,-8(fp)
        for ( q1=0 ; q1<p ; ++q1 ) {
    1438:	e03ffd15 	stw	zero,-12(fp)
    143c:	00007106 	br	1604 <kf_bfly_generic+0x290>
            int twidx=0;
    1440:	e03ffb15 	stw	zero,-20(fp)
            Fout[ k ] = scratch[0];
    1444:	e0bffe17 	ldw	r2,-8(fp)
    1448:	100490fa 	slli	r2,r2,3
    144c:	e0fff517 	ldw	r3,-44(fp)
    1450:	1885883a 	add	r2,r3,r2
    1454:	e0fff817 	ldw	r3,-32(fp)
    1458:	19000017 	ldw	r4,0(r3)
    145c:	11000015 	stw	r4,0(r2)
    1460:	18c00117 	ldw	r3,4(r3)
    1464:	10c00115 	stw	r3,4(r2)
            for (q=1;q<p;++q ) {
    1468:	00800044 	movi	r2,1
    146c:	e0bffc15 	stw	r2,-16(fp)
    1470:	00005a06 	br	15dc <kf_bfly_generic+0x268>
                twidx += fstride * k;
    1474:	e0bffe17 	ldw	r2,-8(fp)
    1478:	e17ff417 	ldw	r5,-48(fp)
    147c:	1009883a 	mov	r4,r2
    1480:	0008b4c0 	call	8b4c <__mulsi3>
    1484:	1007883a 	mov	r3,r2
    1488:	e0bffb17 	ldw	r2,-20(fp)
    148c:	1885883a 	add	r2,r3,r2
    1490:	e0bffb15 	stw	r2,-20(fp)
                if (twidx>=Norig) twidx-=Norig;
    1494:	e0fffb17 	ldw	r3,-20(fp)
    1498:	e0bff917 	ldw	r2,-28(fp)
    149c:	18800416 	blt	r3,r2,14b0 <kf_bfly_generic+0x13c>
    14a0:	e0fffb17 	ldw	r3,-20(fp)
    14a4:	e0bff917 	ldw	r2,-28(fp)
    14a8:	1885c83a 	sub	r2,r3,r2
    14ac:	e0bffb15 	stw	r2,-20(fp)
                C_MUL(t,scratch[q] , twiddles[twidx] );
    14b0:	e0bffc17 	ldw	r2,-16(fp)
    14b4:	100490fa 	slli	r2,r2,3
    14b8:	e0fff817 	ldw	r3,-32(fp)
    14bc:	1885883a 	add	r2,r3,r2
    14c0:	10c00017 	ldw	r3,0(r2)
    14c4:	e0bffb17 	ldw	r2,-20(fp)
    14c8:	100490fa 	slli	r2,r2,3
    14cc:	e13ffa17 	ldw	r4,-24(fp)
    14d0:	2089883a 	add	r4,r4,r2
    14d4:	20800017 	ldw	r2,0(r4)
    14d8:	1887ff32 	custom	252,r3,r3,r2
    14dc:	e0bffc17 	ldw	r2,-16(fp)
    14e0:	100490fa 	slli	r2,r2,3
    14e4:	e13ff817 	ldw	r4,-32(fp)
    14e8:	2085883a 	add	r2,r4,r2
    14ec:	11000117 	ldw	r4,4(r2)
    14f0:	e0bffb17 	ldw	r2,-20(fp)
    14f4:	100490fa 	slli	r2,r2,3
    14f8:	e17ffa17 	ldw	r5,-24(fp)
    14fc:	288b883a 	add	r5,r5,r2
    1500:	28800117 	ldw	r2,4(r5)
    1504:	2085ff32 	custom	252,r2,r4,r2
    1508:	1885ffb2 	custom	254,r2,r3,r2
    150c:	e0bff615 	stw	r2,-40(fp)
    1510:	e0bffc17 	ldw	r2,-16(fp)
    1514:	100490fa 	slli	r2,r2,3
    1518:	e0fff817 	ldw	r3,-32(fp)
    151c:	1885883a 	add	r2,r3,r2
    1520:	10c00017 	ldw	r3,0(r2)
    1524:	e0bffb17 	ldw	r2,-20(fp)
    1528:	100490fa 	slli	r2,r2,3
    152c:	e13ffa17 	ldw	r4,-24(fp)
    1530:	2089883a 	add	r4,r4,r2
    1534:	20800117 	ldw	r2,4(r4)
    1538:	1887ff32 	custom	252,r3,r3,r2
    153c:	e0bffc17 	ldw	r2,-16(fp)
    1540:	100490fa 	slli	r2,r2,3
    1544:	e13ff817 	ldw	r4,-32(fp)
    1548:	2085883a 	add	r2,r4,r2
    154c:	11000117 	ldw	r4,4(r2)
    1550:	e0bffb17 	ldw	r2,-20(fp)
    1554:	100490fa 	slli	r2,r2,3
    1558:	e17ffa17 	ldw	r5,-24(fp)
    155c:	288b883a 	add	r5,r5,r2
    1560:	28800017 	ldw	r2,0(r5)
    1564:	2085ff32 	custom	252,r2,r4,r2
    1568:	1885ff72 	custom	253,r2,r3,r2
    156c:	e0bff715 	stw	r2,-36(fp)
                C_ADDTO( Fout[ k ] ,t);
    1570:	e0bffe17 	ldw	r2,-8(fp)
    1574:	100490fa 	slli	r2,r2,3
    1578:	e0fff517 	ldw	r3,-44(fp)
    157c:	1885883a 	add	r2,r3,r2
    1580:	11000017 	ldw	r4,0(r2)
    1584:	e0fff617 	ldw	r3,-40(fp)
    1588:	e0bffe17 	ldw	r2,-8(fp)
    158c:	100490fa 	slli	r2,r2,3
    1590:	e17ff517 	ldw	r5,-44(fp)
    1594:	2885883a 	add	r2,r5,r2
    1598:	20c7ff72 	custom	253,r3,r4,r3
    159c:	10c00015 	stw	r3,0(r2)
    15a0:	e0bffe17 	ldw	r2,-8(fp)
    15a4:	100490fa 	slli	r2,r2,3
    15a8:	e0fff517 	ldw	r3,-44(fp)
    15ac:	1885883a 	add	r2,r3,r2
    15b0:	11000117 	ldw	r4,4(r2)
    15b4:	e0fff717 	ldw	r3,-36(fp)
    15b8:	e0bffe17 	ldw	r2,-8(fp)
    15bc:	100490fa 	slli	r2,r2,3
    15c0:	e17ff517 	ldw	r5,-44(fp)
    15c4:	2885883a 	add	r2,r5,r2
    15c8:	20c7ff72 	custom	253,r3,r4,r3
    15cc:	10c00115 	stw	r3,4(r2)
            for (q=1;q<p;++q ) {
    15d0:	e0bffc17 	ldw	r2,-16(fp)
    15d4:	10800044 	addi	r2,r2,1
    15d8:	e0bffc15 	stw	r2,-16(fp)
    15dc:	e0fffc17 	ldw	r3,-16(fp)
    15e0:	e0800217 	ldw	r2,8(fp)
    15e4:	18bfa316 	blt	r3,r2,1474 <kf_bfly_generic+0x100>
            }
            k += m;
    15e8:	e0fffe17 	ldw	r3,-8(fp)
    15ec:	e0bff217 	ldw	r2,-56(fp)
    15f0:	1885883a 	add	r2,r3,r2
    15f4:	e0bffe15 	stw	r2,-8(fp)
        for ( q1=0 ; q1<p ; ++q1 ) {
    15f8:	e0bffd17 	ldw	r2,-12(fp)
    15fc:	10800044 	addi	r2,r2,1
    1600:	e0bffd15 	stw	r2,-12(fp)
    1604:	e0fffd17 	ldw	r3,-12(fp)
    1608:	e0800217 	ldw	r2,8(fp)
    160c:	18bf8c16 	blt	r3,r2,1440 <kf_bfly_generic+0xcc>
    for ( u=0; u<m; ++u ) {
    1610:	e0bfff17 	ldw	r2,-4(fp)
    1614:	10800044 	addi	r2,r2,1
    1618:	e0bfff15 	stw	r2,-4(fp)
    161c:	e0ffff17 	ldw	r3,-4(fp)
    1620:	e0bff217 	ldw	r2,-56(fp)
    1624:	18bf6816 	blt	r3,r2,13c8 <kf_bfly_generic+0x54>
        }
    }
    KISS_FFT_TMP_FREE(scratch);
    1628:	e13ff817 	ldw	r4,-32(fp)
    162c:	000c6300 	call	c630 <free>
}
    1630:	0001883a 	nop
    1634:	e037883a 	mov	sp,fp
    1638:	dfc00117 	ldw	ra,4(sp)
    163c:	df000017 	ldw	fp,0(sp)
    1640:	dec00204 	addi	sp,sp,8
    1644:	f800283a 	ret

00001648 <kf_work>:
        const size_t fstride,
        int in_stride,
        int * factors,
        const kiss_fft_cfg st
        )
{
    1648:	defff404 	addi	sp,sp,-48
    164c:	dfc00b15 	stw	ra,44(sp)
    1650:	df000a15 	stw	fp,40(sp)
    1654:	df000a04 	addi	fp,sp,40
    1658:	e13ffb15 	stw	r4,-20(fp)
    165c:	e17ffa15 	stw	r5,-24(fp)
    1660:	e1bff915 	stw	r6,-28(fp)
    1664:	e1fff815 	stw	r7,-32(fp)
    kiss_fft_cpx * Fout_beg=Fout;
    1668:	e0bffb17 	ldw	r2,-20(fp)
    166c:	e0bfff15 	stw	r2,-4(fp)
    const int p=*factors++; /* the radix  */
    1670:	e0800217 	ldw	r2,8(fp)
    1674:	10c00104 	addi	r3,r2,4
    1678:	e0c00215 	stw	r3,8(fp)
    167c:	10800017 	ldw	r2,0(r2)
    1680:	e0bffe15 	stw	r2,-8(fp)
    const int m=*factors++; /* stage's fft length/p */
    1684:	e0800217 	ldw	r2,8(fp)
    1688:	10c00104 	addi	r3,r2,4
    168c:	e0c00215 	stw	r3,8(fp)
    1690:	10800017 	ldw	r2,0(r2)
    1694:	e0bffd15 	stw	r2,-12(fp)
    const kiss_fft_cpx * Fout_end = Fout + p*m;
    1698:	e17ffd17 	ldw	r5,-12(fp)
    169c:	e13ffe17 	ldw	r4,-8(fp)
    16a0:	0008b4c0 	call	8b4c <__mulsi3>
    16a4:	100490fa 	slli	r2,r2,3
    16a8:	e0fffb17 	ldw	r3,-20(fp)
    16ac:	1885883a 	add	r2,r3,r2
    16b0:	e0bffc15 	stw	r2,-16(fp)
        }
        return;
    }
#endif

    if (m==1) {
    16b4:	e0bffd17 	ldw	r2,-12(fp)
    16b8:	10800058 	cmpnei	r2,r2,1
    16bc:	1000151e 	bne	r2,zero,1714 <kf_work+0xcc>
        do{
            *Fout = *f;
    16c0:	e0bffb17 	ldw	r2,-20(fp)
    16c4:	e0fffa17 	ldw	r3,-24(fp)
    16c8:	19000017 	ldw	r4,0(r3)
    16cc:	11000015 	stw	r4,0(r2)
    16d0:	18c00117 	ldw	r3,4(r3)
    16d4:	10c00115 	stw	r3,4(r2)
            f += fstride*in_stride;
    16d8:	e0bff817 	ldw	r2,-32(fp)
    16dc:	e17ff917 	ldw	r5,-28(fp)
    16e0:	1009883a 	mov	r4,r2
    16e4:	0008b4c0 	call	8b4c <__mulsi3>
    16e8:	100490fa 	slli	r2,r2,3
    16ec:	e0fffa17 	ldw	r3,-24(fp)
    16f0:	1885883a 	add	r2,r3,r2
    16f4:	e0bffa15 	stw	r2,-24(fp)
        }while(++Fout != Fout_end );
    16f8:	e0bffb17 	ldw	r2,-20(fp)
    16fc:	10800204 	addi	r2,r2,8
    1700:	e0bffb15 	stw	r2,-20(fp)
    1704:	e0fffb17 	ldw	r3,-20(fp)
    1708:	e0bffc17 	ldw	r2,-16(fp)
    170c:	18bfec1e 	bne	r3,r2,16c0 <kf_work+0x78>
    1710:	00001e06 	br	178c <kf_work+0x144>
        do{
            // recursive call:
            // DFT of size m*p performed by doing
            // p instances of smaller DFTs of size m, 
            // each one takes a decimated version of the input
            kf_work( Fout , f, fstride*p, in_stride, factors,st);
    1714:	e0bffe17 	ldw	r2,-8(fp)
    1718:	e17ff917 	ldw	r5,-28(fp)
    171c:	1009883a 	mov	r4,r2
    1720:	0008b4c0 	call	8b4c <__mulsi3>
    1724:	1007883a 	mov	r3,r2
    1728:	e0800317 	ldw	r2,12(fp)
    172c:	d8800115 	stw	r2,4(sp)
    1730:	e0800217 	ldw	r2,8(fp)
    1734:	d8800015 	stw	r2,0(sp)
    1738:	e1fff817 	ldw	r7,-32(fp)
    173c:	180d883a 	mov	r6,r3
    1740:	e17ffa17 	ldw	r5,-24(fp)
    1744:	e13ffb17 	ldw	r4,-20(fp)
    1748:	00016480 	call	1648 <kf_work>
            f += fstride*in_stride;
    174c:	e0bff817 	ldw	r2,-32(fp)
    1750:	e17ff917 	ldw	r5,-28(fp)
    1754:	1009883a 	mov	r4,r2
    1758:	0008b4c0 	call	8b4c <__mulsi3>
    175c:	100490fa 	slli	r2,r2,3
    1760:	e0fffa17 	ldw	r3,-24(fp)
    1764:	1885883a 	add	r2,r3,r2
    1768:	e0bffa15 	stw	r2,-24(fp)
        }while( (Fout += m) != Fout_end );
    176c:	e0bffd17 	ldw	r2,-12(fp)
    1770:	100490fa 	slli	r2,r2,3
    1774:	e0fffb17 	ldw	r3,-20(fp)
    1778:	1885883a 	add	r2,r3,r2
    177c:	e0bffb15 	stw	r2,-20(fp)
    1780:	e0fffb17 	ldw	r3,-20(fp)
    1784:	e0bffc17 	ldw	r2,-16(fp)
    1788:	18bfe21e 	bne	r3,r2,1714 <kf_work+0xcc>
    }

    Fout=Fout_beg;
    178c:	e0bfff17 	ldw	r2,-4(fp)
    1790:	e0bffb15 	stw	r2,-20(fp)

    // recombine the p smaller DFTs 
    switch (p) {
    1794:	e0bffe17 	ldw	r2,-8(fp)
    1798:	10800160 	cmpeqi	r2,r2,5
    179c:	1000241e 	bne	r2,zero,1830 <kf_work+0x1e8>
    17a0:	e0bffe17 	ldw	r2,-8(fp)
    17a4:	10800188 	cmpgei	r2,r2,6
    17a8:	1000271e 	bne	r2,zero,1848 <kf_work+0x200>
    17ac:	e0bffe17 	ldw	r2,-8(fp)
    17b0:	10800120 	cmpeqi	r2,r2,4
    17b4:	1000171e 	bne	r2,zero,1814 <kf_work+0x1cc>
    17b8:	e0bffe17 	ldw	r2,-8(fp)
    17bc:	10800148 	cmpgei	r2,r2,5
    17c0:	1000211e 	bne	r2,zero,1848 <kf_work+0x200>
    17c4:	e0bffe17 	ldw	r2,-8(fp)
    17c8:	108000a0 	cmpeqi	r2,r2,2
    17cc:	1000041e 	bne	r2,zero,17e0 <kf_work+0x198>
    17d0:	e0bffe17 	ldw	r2,-8(fp)
    17d4:	108000e0 	cmpeqi	r2,r2,3
    17d8:	1000071e 	bne	r2,zero,17f8 <kf_work+0x1b0>
    17dc:	00001a06 	br	1848 <kf_work+0x200>
        case 2: kf_bfly2(Fout,fstride,st,m); break;
    17e0:	e1fffd17 	ldw	r7,-12(fp)
    17e4:	e1800317 	ldw	r6,12(fp)
    17e8:	e17ff917 	ldw	r5,-28(fp)
    17ec:	e13ffb17 	ldw	r4,-20(fp)
    17f0:	00002640 	call	264 <kf_bfly2>
    17f4:	00001c06 	br	1868 <kf_work+0x220>
        case 3: kf_bfly3(Fout,fstride,st,m); break; 
    17f8:	e0bffd17 	ldw	r2,-12(fp)
    17fc:	100f883a 	mov	r7,r2
    1800:	e1800317 	ldw	r6,12(fp)
    1804:	e17ff917 	ldw	r5,-28(fp)
    1808:	e13ffb17 	ldw	r4,-20(fp)
    180c:	000086c0 	call	86c <kf_bfly3>
    1810:	00001506 	br	1868 <kf_work+0x220>
        case 4: kf_bfly4(Fout,fstride,st,m); break;
    1814:	e0bffd17 	ldw	r2,-12(fp)
    1818:	100f883a 	mov	r7,r2
    181c:	e1800317 	ldw	r6,12(fp)
    1820:	e17ff917 	ldw	r5,-28(fp)
    1824:	e13ffb17 	ldw	r4,-20(fp)
    1828:	00003b80 	call	3b8 <kf_bfly4>
    182c:	00000e06 	br	1868 <kf_work+0x220>
        case 5: kf_bfly5(Fout,fstride,st,m); break; 
    1830:	e1fffd17 	ldw	r7,-12(fp)
    1834:	e1800317 	ldw	r6,12(fp)
    1838:	e17ff917 	ldw	r5,-28(fp)
    183c:	e13ffb17 	ldw	r4,-20(fp)
    1840:	0000c0c0 	call	c0c <kf_bfly5>
    1844:	00000806 	br	1868 <kf_work+0x220>
        default: kf_bfly_generic(Fout,fstride,st,m,p); break;
    1848:	e0bffe17 	ldw	r2,-8(fp)
    184c:	d8800015 	stw	r2,0(sp)
    1850:	e1fffd17 	ldw	r7,-12(fp)
    1854:	e1800317 	ldw	r6,12(fp)
    1858:	e17ff917 	ldw	r5,-28(fp)
    185c:	e13ffb17 	ldw	r4,-20(fp)
    1860:	00013740 	call	1374 <kf_bfly_generic>
    1864:	0001883a 	nop
    }
}
    1868:	0001883a 	nop
    186c:	e037883a 	mov	sp,fp
    1870:	dfc00117 	ldw	ra,4(sp)
    1874:	df000017 	ldw	fp,0(sp)
    1878:	dec00204 	addi	sp,sp,8
    187c:	f800283a 	ret

00001880 <kf_factor>:
    where 
    p[i] * m[i] = m[i-1]
    m0 = n                  */
static 
void kf_factor(int n,int * facbuf)
{
    1880:	defff904 	addi	sp,sp,-28
    1884:	dfc00615 	stw	ra,24(sp)
    1888:	df000515 	stw	fp,20(sp)
    188c:	df000504 	addi	fp,sp,20
    1890:	e13ffc15 	stw	r4,-16(fp)
    1894:	e17ffb15 	stw	r5,-20(fp)
    int p=4;
    1898:	00800104 	movi	r2,4
    189c:	e0bfff15 	stw	r2,-4(fp)
    double floor_sqrt;
    floor_sqrt = floor( sqrt((double)n) );
    18a0:	e13ffc17 	ldw	r4,-16(fp)
    18a4:	000c20c0 	call	c20c <__floatsidf>
    18a8:	100d883a 	mov	r6,r2
    18ac:	180f883a 	mov	r7,r3
    18b0:	3009883a 	mov	r4,r6
    18b4:	380b883a 	mov	r5,r7
    18b8:	00038400 	call	3840 <sqrt>
    18bc:	100d883a 	mov	r6,r2
    18c0:	180f883a 	mov	r7,r3
    18c4:	3009883a 	mov	r4,r6
    18c8:	380b883a 	mov	r5,r7
    18cc:	000317c0 	call	317c <floor>
    18d0:	e0bffd15 	stw	r2,-12(fp)
    18d4:	e0fffe15 	stw	r3,-8(fp)

    /*factor out powers of 4, powers of 2, then any remaining primes */
    do {
        while (n % p) {
    18d8:	00001d06 	br	1950 <kf_factor+0xd0>
            switch (p) {
    18dc:	e0bfff17 	ldw	r2,-4(fp)
    18e0:	108000a0 	cmpeqi	r2,r2,2
    18e4:	1000061e 	bne	r2,zero,1900 <kf_factor+0x80>
    18e8:	e0bfff17 	ldw	r2,-4(fp)
    18ec:	10800118 	cmpnei	r2,r2,4
    18f0:	1000061e 	bne	r2,zero,190c <kf_factor+0x8c>
                case 4: p = 2; break;
    18f4:	00800084 	movi	r2,2
    18f8:	e0bfff15 	stw	r2,-4(fp)
    18fc:	00000706 	br	191c <kf_factor+0x9c>
                case 2: p = 3; break;
    1900:	008000c4 	movi	r2,3
    1904:	e0bfff15 	stw	r2,-4(fp)
    1908:	00000406 	br	191c <kf_factor+0x9c>
                default: p += 2; break;
    190c:	e0bfff17 	ldw	r2,-4(fp)
    1910:	10800084 	addi	r2,r2,2
    1914:	e0bfff15 	stw	r2,-4(fp)
    1918:	0001883a 	nop
            }
            if (p > floor_sqrt)
    191c:	e13fff17 	ldw	r4,-4(fp)
    1920:	000c20c0 	call	c20c <__floatsidf>
    1924:	1009883a 	mov	r4,r2
    1928:	180b883a 	mov	r5,r3
    192c:	200d883a 	mov	r6,r4
    1930:	280f883a 	mov	r7,r5
    1934:	e13ffd17 	ldw	r4,-12(fp)
    1938:	e17ffe17 	ldw	r5,-8(fp)
    193c:	000af980 	call	af98 <__ledf2>
    1940:	10000116 	blt	r2,zero,1948 <kf_factor+0xc8>
    1944:	00000206 	br	1950 <kf_factor+0xd0>
                p = n;          /* no more factors, skip to end */
    1948:	e0bffc17 	ldw	r2,-16(fp)
    194c:	e0bfff15 	stw	r2,-4(fp)
        while (n % p) {
    1950:	e0bffc17 	ldw	r2,-16(fp)
    1954:	e17fff17 	ldw	r5,-4(fp)
    1958:	1009883a 	mov	r4,r2
    195c:	0008a180 	call	8a18 <__modsi3>
    1960:	103fde1e 	bne	r2,zero,18dc <kf_factor+0x5c>
        }
        n /= p;
    1964:	e17fff17 	ldw	r5,-4(fp)
    1968:	e13ffc17 	ldw	r4,-16(fp)
    196c:	00089980 	call	8998 <__divsi3>
    1970:	e0bffc15 	stw	r2,-16(fp)
        *facbuf++ = p;
    1974:	e0bffb17 	ldw	r2,-20(fp)
    1978:	10c00104 	addi	r3,r2,4
    197c:	e0fffb15 	stw	r3,-20(fp)
    1980:	e0ffff17 	ldw	r3,-4(fp)
    1984:	10c00015 	stw	r3,0(r2)
        *facbuf++ = n;
    1988:	e0bffb17 	ldw	r2,-20(fp)
    198c:	10c00104 	addi	r3,r2,4
    1990:	e0fffb15 	stw	r3,-20(fp)
    1994:	e0fffc17 	ldw	r3,-16(fp)
    1998:	10c00015 	stw	r3,0(r2)
    } while (n > 1);
    199c:	e0bffc17 	ldw	r2,-16(fp)
    19a0:	10800088 	cmpgei	r2,r2,2
    19a4:	103fea1e 	bne	r2,zero,1950 <kf_factor+0xd0>
}
    19a8:	0001883a 	nop
    19ac:	0001883a 	nop
    19b0:	e037883a 	mov	sp,fp
    19b4:	dfc00117 	ldw	ra,4(sp)
    19b8:	df000017 	ldw	fp,0(sp)
    19bc:	dec00204 	addi	sp,sp,8
    19c0:	f800283a 	ret

000019c4 <kiss_fft_alloc>:
 *
 * The return value is a contiguous block of memory, allocated with malloc.  As such,
 * It can be freed with free(), rather than a kiss_fft-specific function.
 * */
kiss_fft_cfg kiss_fft_alloc(int nfft,int inverse_fft,void * mem,size_t * lenmem )
{
    19c4:	deffef04 	addi	sp,sp,-68
    19c8:	dfc01015 	stw	ra,64(sp)
    19cc:	df000f15 	stw	fp,60(sp)
    19d0:	dcc00e15 	stw	r19,56(sp)
    19d4:	dc800d15 	stw	r18,52(sp)
    19d8:	dc400c15 	stw	r17,48(sp)
    19dc:	dc000b15 	stw	r16,44(sp)
    19e0:	df000f04 	addi	fp,sp,60
    19e4:	e13ff415 	stw	r4,-48(fp)
    19e8:	e17ff315 	stw	r5,-52(fp)
    19ec:	e1bff215 	stw	r6,-56(fp)
    19f0:	e1fff115 	stw	r7,-60(fp)
    kiss_fft_cfg st=NULL;
    19f4:	e03ffb15 	stw	zero,-20(fp)
    size_t memneeded = sizeof(struct kiss_fft_state)
        + sizeof(kiss_fft_cpx)*(nfft-1); /* twiddle factors*/
    19f8:	e0bff417 	ldw	r2,-48(fp)
    19fc:	10800844 	addi	r2,r2,33
    size_t memneeded = sizeof(struct kiss_fft_state)
    1a00:	100490fa 	slli	r2,r2,3
    1a04:	e0bff715 	stw	r2,-36(fp)

    if ( lenmem==NULL ) {
    1a08:	e0bff117 	ldw	r2,-60(fp)
    1a0c:	1000041e 	bne	r2,zero,1a20 <kiss_fft_alloc+0x5c>
        st = ( kiss_fft_cfg)KISS_FFT_MALLOC( memneeded );
    1a10:	e13ff717 	ldw	r4,-36(fp)
    1a14:	000c6200 	call	c620 <malloc>
    1a18:	e0bffb15 	stw	r2,-20(fp)
    1a1c:	00000b06 	br	1a4c <kiss_fft_alloc+0x88>
    }else{
        if (mem != NULL && *lenmem >= memneeded)
    1a20:	e0bff217 	ldw	r2,-56(fp)
    1a24:	10000626 	beq	r2,zero,1a40 <kiss_fft_alloc+0x7c>
    1a28:	e0bff117 	ldw	r2,-60(fp)
    1a2c:	10c00017 	ldw	r3,0(r2)
    1a30:	e0bff717 	ldw	r2,-36(fp)
    1a34:	18800236 	bltu	r3,r2,1a40 <kiss_fft_alloc+0x7c>
            st = (kiss_fft_cfg)mem;
    1a38:	e0bff217 	ldw	r2,-56(fp)
    1a3c:	e0bffb15 	stw	r2,-20(fp)
        *lenmem = memneeded;
    1a40:	e0bff117 	ldw	r2,-60(fp)
    1a44:	e0fff717 	ldw	r3,-36(fp)
    1a48:	10c00015 	stw	r3,0(r2)
    }
    if (st) {
    1a4c:	e0bffb17 	ldw	r2,-20(fp)
    1a50:	10006126 	beq	r2,zero,1bd8 <kiss_fft_alloc+0x214>
        int i;
        st->nfft=nfft;
    1a54:	e0bffb17 	ldw	r2,-20(fp)
    1a58:	e0fff417 	ldw	r3,-48(fp)
    1a5c:	10c00015 	stw	r3,0(r2)
        st->inverse = inverse_fft;
    1a60:	e0bffb17 	ldw	r2,-20(fp)
    1a64:	e0fff317 	ldw	r3,-52(fp)
    1a68:	10c00115 	stw	r3,4(r2)

        for (i=0;i<nfft;++i) {
    1a6c:	e03ffa15 	stw	zero,-24(fp)
    1a70:	00005106 	br	1bb8 <kiss_fft_alloc+0x1f4>
            const double pi=3.141592653589793238462643383279502884197169399375105820974944;
    1a74:	00980034 	movhi	r2,24576
    1a78:	e0bff515 	stw	r2,-44(fp)
    1a7c:	00900274 	movhi	r2,16393
    1a80:	10887ec4 	addi	r2,r2,8699
    1a84:	e0bff615 	stw	r2,-40(fp)
            double phase = -2*pi*i / nfft;
    1a88:	000d883a 	mov	r6,zero
    1a8c:	01f00034 	movhi	r7,49152
    1a90:	e13ff517 	ldw	r4,-44(fp)
    1a94:	e17ff617 	ldw	r5,-40(fp)
    1a98:	000b0800 	call	b080 <__muldf3>
    1a9c:	1009883a 	mov	r4,r2
    1aa0:	180b883a 	mov	r5,r3
    1aa4:	2025883a 	mov	r18,r4
    1aa8:	2827883a 	mov	r19,r5
    1aac:	e13ffa17 	ldw	r4,-24(fp)
    1ab0:	000c20c0 	call	c20c <__floatsidf>
    1ab4:	1009883a 	mov	r4,r2
    1ab8:	180b883a 	mov	r5,r3
    1abc:	200d883a 	mov	r6,r4
    1ac0:	280f883a 	mov	r7,r5
    1ac4:	9009883a 	mov	r4,r18
    1ac8:	980b883a 	mov	r5,r19
    1acc:	000b0800 	call	b080 <__muldf3>
    1ad0:	1009883a 	mov	r4,r2
    1ad4:	180b883a 	mov	r5,r3
    1ad8:	2025883a 	mov	r18,r4
    1adc:	2827883a 	mov	r19,r5
    1ae0:	e13ff417 	ldw	r4,-48(fp)
    1ae4:	000c20c0 	call	c20c <__floatsidf>
    1ae8:	1009883a 	mov	r4,r2
    1aec:	180b883a 	mov	r5,r3
    1af0:	200d883a 	mov	r6,r4
    1af4:	280f883a 	mov	r7,r5
    1af8:	9009883a 	mov	r4,r18
    1afc:	980b883a 	mov	r5,r19
    1b00:	000a51c0 	call	a51c <__divdf3>
    1b04:	1009883a 	mov	r4,r2
    1b08:	180b883a 	mov	r5,r3
    1b0c:	e13ff815 	stw	r4,-32(fp)
    1b10:	e17ff915 	stw	r5,-28(fp)
            if (st->inverse)
    1b14:	e0bffb17 	ldw	r2,-20(fp)
    1b18:	10800117 	ldw	r2,4(r2)
    1b1c:	10000526 	beq	r2,zero,1b34 <kiss_fft_alloc+0x170>
                phase *= -1;
    1b20:	e43ff817 	ldw	r16,-32(fp)
    1b24:	e0bff917 	ldw	r2,-28(fp)
    1b28:	1460003c 	xorhi	r17,r2,32768
    1b2c:	e43ff815 	stw	r16,-32(fp)
    1b30:	e47ff915 	stw	r17,-28(fp)
            kf_cexp(st->twiddles+i, phase );
    1b34:	e13ff817 	ldw	r4,-32(fp)
    1b38:	e17ff917 	ldw	r5,-28(fp)
    1b3c:	00030cc0 	call	30cc <cos>
    1b40:	100d883a 	mov	r6,r2
    1b44:	180f883a 	mov	r7,r3
    1b48:	e0bffb17 	ldw	r2,-20(fp)
    1b4c:	10c04204 	addi	r3,r2,264
    1b50:	e0bffa17 	ldw	r2,-24(fp)
    1b54:	100490fa 	slli	r2,r2,3
    1b58:	18a5883a 	add	r18,r3,r2
    1b5c:	3009883a 	mov	r4,r6
    1b60:	380b883a 	mov	r5,r7
    1b64:	000c4500 	call	c450 <__truncdfsf2>
    1b68:	1007883a 	mov	r3,r2
    1b6c:	90c00015 	stw	r3,0(r18)
    1b70:	e13ff817 	ldw	r4,-32(fp)
    1b74:	e17ff917 	ldw	r5,-28(fp)
    1b78:	00033600 	call	3360 <sin>
    1b7c:	100d883a 	mov	r6,r2
    1b80:	180f883a 	mov	r7,r3
    1b84:	e0bffb17 	ldw	r2,-20(fp)
    1b88:	10c04204 	addi	r3,r2,264
    1b8c:	e0bffa17 	ldw	r2,-24(fp)
    1b90:	100490fa 	slli	r2,r2,3
    1b94:	18a5883a 	add	r18,r3,r2
    1b98:	3009883a 	mov	r4,r6
    1b9c:	380b883a 	mov	r5,r7
    1ba0:	000c4500 	call	c450 <__truncdfsf2>
    1ba4:	1007883a 	mov	r3,r2
    1ba8:	90c00115 	stw	r3,4(r18)
        for (i=0;i<nfft;++i) {
    1bac:	e0bffa17 	ldw	r2,-24(fp)
    1bb0:	10800044 	addi	r2,r2,1
    1bb4:	e0bffa15 	stw	r2,-24(fp)
    1bb8:	e0fffa17 	ldw	r3,-24(fp)
    1bbc:	e0bff417 	ldw	r2,-48(fp)
    1bc0:	18bfac16 	blt	r3,r2,1a74 <kiss_fft_alloc+0xb0>
        }

        kf_factor(nfft,st->factors);
    1bc4:	e0bffb17 	ldw	r2,-20(fp)
    1bc8:	10800204 	addi	r2,r2,8
    1bcc:	100b883a 	mov	r5,r2
    1bd0:	e13ff417 	ldw	r4,-48(fp)
    1bd4:	00018800 	call	1880 <kf_factor>
    }
    return st;
    1bd8:	e0bffb17 	ldw	r2,-20(fp)
}
    1bdc:	e6fffc04 	addi	sp,fp,-16
    1be0:	dfc00517 	ldw	ra,20(sp)
    1be4:	df000417 	ldw	fp,16(sp)
    1be8:	dcc00317 	ldw	r19,12(sp)
    1bec:	dc800217 	ldw	r18,8(sp)
    1bf0:	dc400117 	ldw	r17,4(sp)
    1bf4:	dc000017 	ldw	r16,0(sp)
    1bf8:	dec00604 	addi	sp,sp,24
    1bfc:	f800283a 	ret

00001c00 <kiss_fft_stride>:


void kiss_fft_stride(kiss_fft_cfg st,const kiss_fft_cpx *fin,kiss_fft_cpx *fout,int in_stride)
{
    1c00:	defff704 	addi	sp,sp,-36
    1c04:	dfc00815 	stw	ra,32(sp)
    1c08:	df000715 	stw	fp,28(sp)
    1c0c:	df000704 	addi	fp,sp,28
    1c10:	e13ffe15 	stw	r4,-8(fp)
    1c14:	e17ffd15 	stw	r5,-12(fp)
    1c18:	e1bffc15 	stw	r6,-16(fp)
    1c1c:	e1fffb15 	stw	r7,-20(fp)
    if (fin == fout) {
    1c20:	e0fffd17 	ldw	r3,-12(fp)
    1c24:	e0bffc17 	ldw	r2,-16(fp)
    1c28:	18801a1e 	bne	r3,r2,1c94 <kiss_fft_stride+0x94>
        //NOTE: this is not really an in-place FFT algorithm.
        //It just performs an out-of-place FFT into a temp buffer
        kiss_fft_cpx * tmpbuf = (kiss_fft_cpx*)KISS_FFT_TMP_ALLOC( sizeof(kiss_fft_cpx)*st->nfft);
    1c2c:	e0bffe17 	ldw	r2,-8(fp)
    1c30:	10800017 	ldw	r2,0(r2)
    1c34:	100490fa 	slli	r2,r2,3
    1c38:	1009883a 	mov	r4,r2
    1c3c:	000c6200 	call	c620 <malloc>
    1c40:	e0bfff15 	stw	r2,-4(fp)
        kf_work(tmpbuf,fin,1,in_stride, st->factors,st);
    1c44:	e0bffe17 	ldw	r2,-8(fp)
    1c48:	10800204 	addi	r2,r2,8
    1c4c:	e0fffe17 	ldw	r3,-8(fp)
    1c50:	d8c00115 	stw	r3,4(sp)
    1c54:	d8800015 	stw	r2,0(sp)
    1c58:	e1fffb17 	ldw	r7,-20(fp)
    1c5c:	01800044 	movi	r6,1
    1c60:	e17ffd17 	ldw	r5,-12(fp)
    1c64:	e13fff17 	ldw	r4,-4(fp)
    1c68:	00016480 	call	1648 <kf_work>
        memcpy(fout,tmpbuf,sizeof(kiss_fft_cpx)*st->nfft);
    1c6c:	e0bffe17 	ldw	r2,-8(fp)
    1c70:	10800017 	ldw	r2,0(r2)
    1c74:	100490fa 	slli	r2,r2,3
    1c78:	100d883a 	mov	r6,r2
    1c7c:	e17fff17 	ldw	r5,-4(fp)
    1c80:	e13ffc17 	ldw	r4,-16(fp)
    1c84:	000ce200 	call	ce20 <memcpy>
        KISS_FFT_TMP_FREE(tmpbuf);
    1c88:	e13fff17 	ldw	r4,-4(fp)
    1c8c:	000c6300 	call	c630 <free>
    }else{
        kf_work( fout, fin, 1,in_stride, st->factors,st );
    }
}
    1c90:	00000a06 	br	1cbc <kiss_fft_stride+0xbc>
        kf_work( fout, fin, 1,in_stride, st->factors,st );
    1c94:	e0bffe17 	ldw	r2,-8(fp)
    1c98:	10800204 	addi	r2,r2,8
    1c9c:	e0fffe17 	ldw	r3,-8(fp)
    1ca0:	d8c00115 	stw	r3,4(sp)
    1ca4:	d8800015 	stw	r2,0(sp)
    1ca8:	e1fffb17 	ldw	r7,-20(fp)
    1cac:	01800044 	movi	r6,1
    1cb0:	e17ffd17 	ldw	r5,-12(fp)
    1cb4:	e13ffc17 	ldw	r4,-16(fp)
    1cb8:	00016480 	call	1648 <kf_work>
}
    1cbc:	0001883a 	nop
    1cc0:	e037883a 	mov	sp,fp
    1cc4:	dfc00117 	ldw	ra,4(sp)
    1cc8:	df000017 	ldw	fp,0(sp)
    1ccc:	dec00204 	addi	sp,sp,8
    1cd0:	f800283a 	ret

00001cd4 <kiss_fft>:

void kiss_fft(kiss_fft_cfg cfg,const kiss_fft_cpx *fin,kiss_fft_cpx *fout)
{
    1cd4:	defffb04 	addi	sp,sp,-20
    1cd8:	dfc00415 	stw	ra,16(sp)
    1cdc:	df000315 	stw	fp,12(sp)
    1ce0:	df000304 	addi	fp,sp,12
    1ce4:	e13fff15 	stw	r4,-4(fp)
    1ce8:	e17ffe15 	stw	r5,-8(fp)
    1cec:	e1bffd15 	stw	r6,-12(fp)
    kiss_fft_stride(cfg,fin,fout,1);
    1cf0:	01c00044 	movi	r7,1
    1cf4:	e1bffd17 	ldw	r6,-12(fp)
    1cf8:	e17ffe17 	ldw	r5,-8(fp)
    1cfc:	e13fff17 	ldw	r4,-4(fp)
    1d00:	0001c000 	call	1c00 <kiss_fft_stride>
}
    1d04:	0001883a 	nop
    1d08:	e037883a 	mov	sp,fp
    1d0c:	dfc00117 	ldw	ra,4(sp)
    1d10:	df000017 	ldw	fp,0(sp)
    1d14:	dec00204 	addi	sp,sp,8
    1d18:	f800283a 	ret

00001d1c <kiss_fft_cleanup>:


void kiss_fft_cleanup(void)
{
    1d1c:	deffff04 	addi	sp,sp,-4
    1d20:	df000015 	stw	fp,0(sp)
    1d24:	d839883a 	mov	fp,sp
    // nothing needed any more
}
    1d28:	0001883a 	nop
    1d2c:	e037883a 	mov	sp,fp
    1d30:	df000017 	ldw	fp,0(sp)
    1d34:	dec00104 	addi	sp,sp,4
    1d38:	f800283a 	ret

00001d3c <kiss_fft_next_fast_size>:

int kiss_fft_next_fast_size(int n)
{
    1d3c:	defffc04 	addi	sp,sp,-16
    1d40:	dfc00315 	stw	ra,12(sp)
    1d44:	df000215 	stw	fp,8(sp)
    1d48:	df000204 	addi	fp,sp,8
    1d4c:	e13ffe15 	stw	r4,-8(fp)
    while(1) {
        int m=n;
    1d50:	e0bffe17 	ldw	r2,-8(fp)
    1d54:	e0bfff15 	stw	r2,-4(fp)
        while ( (m%2) == 0 ) m/=2;
    1d58:	00000506 	br	1d70 <kiss_fft_next_fast_size+0x34>
    1d5c:	e0bfff17 	ldw	r2,-4(fp)
    1d60:	1006d7fa 	srli	r3,r2,31
    1d64:	1885883a 	add	r2,r3,r2
    1d68:	1005d07a 	srai	r2,r2,1
    1d6c:	e0bfff15 	stw	r2,-4(fp)
    1d70:	e0bfff17 	ldw	r2,-4(fp)
    1d74:	1080004c 	andi	r2,r2,1
    1d78:	103ff826 	beq	r2,zero,1d5c <kiss_fft_next_fast_size+0x20>
        while ( (m%3) == 0 ) m/=3;
    1d7c:	00000506 	br	1d94 <kiss_fft_next_fast_size+0x58>
    1d80:	e0bfff17 	ldw	r2,-4(fp)
    1d84:	014000c4 	movi	r5,3
    1d88:	1009883a 	mov	r4,r2
    1d8c:	00089980 	call	8998 <__divsi3>
    1d90:	e0bfff15 	stw	r2,-4(fp)
    1d94:	e0bfff17 	ldw	r2,-4(fp)
    1d98:	014000c4 	movi	r5,3
    1d9c:	1009883a 	mov	r4,r2
    1da0:	0008a180 	call	8a18 <__modsi3>
    1da4:	103ff626 	beq	r2,zero,1d80 <kiss_fft_next_fast_size+0x44>
        while ( (m%5) == 0 ) m/=5;
    1da8:	00000506 	br	1dc0 <kiss_fft_next_fast_size+0x84>
    1dac:	e0bfff17 	ldw	r2,-4(fp)
    1db0:	01400144 	movi	r5,5
    1db4:	1009883a 	mov	r4,r2
    1db8:	00089980 	call	8998 <__divsi3>
    1dbc:	e0bfff15 	stw	r2,-4(fp)
    1dc0:	e0bfff17 	ldw	r2,-4(fp)
    1dc4:	01400144 	movi	r5,5
    1dc8:	1009883a 	mov	r4,r2
    1dcc:	0008a180 	call	8a18 <__modsi3>
    1dd0:	103ff626 	beq	r2,zero,1dac <kiss_fft_next_fast_size+0x70>
        if (m<=1)
    1dd4:	e0bfff17 	ldw	r2,-4(fp)
    1dd8:	10800088 	cmpgei	r2,r2,2
    1ddc:	10000426 	beq	r2,zero,1df0 <kiss_fft_next_fast_size+0xb4>
            break; /* n is completely factorable by twos, threes, and fives */
        n++;
    1de0:	e0bffe17 	ldw	r2,-8(fp)
    1de4:	10800044 	addi	r2,r2,1
    1de8:	e0bffe15 	stw	r2,-8(fp)
    while(1) {
    1dec:	003fd806 	br	1d50 <kiss_fft_next_fast_size+0x14>
            break; /* n is completely factorable by twos, threes, and fives */
    1df0:	0001883a 	nop
    }
    return n;
    1df4:	e0bffe17 	ldw	r2,-8(fp)
}
    1df8:	e037883a 	mov	sp,fp
    1dfc:	dfc00117 	ldw	ra,4(sp)
    1e00:	df000017 	ldw	fp,0(sp)
    1e04:	dec00204 	addi	sp,sp,8
    1e08:	f800283a 	ret

00001e0c <main>:
 * This program performs the following:
 *  1. records audio for 1.5 seconds when KEY[0] is pressed.
 *  2. Normalizes the audio to a range between -1 and 1.
 *  3. Applies the Hamming window to the samples.
 ******************************************************************************/
int main(void) {
    1e0c:	defffd04 	addi	sp,sp,-12
    1e10:	dfc00215 	stw	ra,8(sp)
    1e14:	df000115 	stw	fp,4(sp)
    1e18:	dc000015 	stw	r16,0(sp)
    1e1c:	df000104 	addi	fp,sp,4
    1e20:	023fffb4 	movhi	r8,65534
    1e24:	42322a04 	addi	r8,r8,-14168
    1e28:	da37883a 	add	sp,sp,r8
    /* Declare volatile pointers to I/O registers (volatile means that IO load
       and store instructions will be used to access these pointer locations,
       instead of regular memory loads and stores) */
    volatile int *red_LED_ptr = (int *)LED_BASE;
    1e2c:	00bfc834 	movhi	r2,65312
    1e30:	e0bffb15 	stw	r2,-20(fp)
    volatile int *audio_ptr = (int *)AUDIO_BASE;
    1e34:	00bfc834 	movhi	r2,65312
    1e38:	108c1004 	addi	r2,r2,12352
    1e3c:	e0bffa15 	stw	r2,-24(fp)
    int sdram_count = 0;
    1e40:	e03ff915 	stw	zero,-28(fp)
    int counter = 0;
    1e44:	e03ff815 	stw	zero,-32(fp)

    /* used for audio record and calculations */
    int fifospace;
    int record = 0, play = 0, buffer_index = 0;
    1e48:	e03ff615 	stw	zero,-40(fp)
    1e4c:	e03ff515 	stw	zero,-44(fp)
    1e50:	e03ff415 	stw	zero,-48(fp)
    int right_buffer[BUF_SIZE];
    float normalized_buffer[BUF_SIZE];
    //kiss_fft_cpx output[FFT_SIZE];
    float mfcc_buffer[(BUF_SIZE / FFT_SHIFT) * NUM_MFCC];
    // open the Character LCD port
    char_lcd_dev = alt_up_character_lcd_open_dev ("/dev/Char_LCD_16x2");
    1e54:	010000b4 	movhi	r4,2
    1e58:	21284b04 	addi	r4,r4,-24276
    1e5c:	00189ac0 	call	189ac <alt_up_character_lcd_open_dev>
    1e60:	d0a73215 	stw	r2,-25400(gp)
    if ( char_lcd_dev == NULL) alt_printf ("Error: could not open character LCD device\n");
    1e64:	d0a73217 	ldw	r2,-25400(gp)
    1e68:	1000041e 	bne	r2,zero,1e7c <main+0x70>
    1e6c:	010000b4 	movhi	r4,2
    1e70:	21285004 	addi	r4,r4,-24256
    1e74:	00176400 	call	17640 <alt_printf>
    1e78:	00000306 	br	1e88 <main+0x7c>
    else alt_printf ("Opened character LCD device\n");
    1e7c:	010000b4 	movhi	r4,2
    1e80:	21285b04 	addi	r4,r4,-24212
    1e84:	00176400 	call	17640 <alt_printf>
    /* Initialize the character display */
    alt_up_character_lcd_init (char_lcd_dev);
    1e88:	d0a73217 	ldw	r2,-25400(gp)
    1e8c:	1009883a 	mov	r4,r2
    1e90:	00189740 	call	18974 <alt_up_character_lcd_init>
    /* Write "Welcome to" in the first row */
    alt_up_character_lcd_string(char_lcd_dev, "Press KEY0 to");
    1e94:	d0a73217 	ldw	r2,-25400(gp)
    1e98:	014000b4 	movhi	r5,2
    1e9c:	29686304 	addi	r5,r5,-24180
    1ea0:	1009883a 	mov	r4,r2
    1ea4:	0018a680 	call	18a68 <alt_up_character_lcd_string>
    alt_up_character_lcd_set_cursor_pos(char_lcd_dev, 0, 1);
    1ea8:	d0a73217 	ldw	r2,-25400(gp)
    1eac:	01800044 	movi	r6,1
    1eb0:	000b883a 	mov	r5,zero
    1eb4:	1009883a 	mov	r4,r2
    1eb8:	0018b340 	call	18b34 <alt_up_character_lcd_set_cursor_pos>
	alt_up_character_lcd_string(char_lcd_dev, "Record audio...");
    1ebc:	d0a73217 	ldw	r2,-25400(gp)
    1ec0:	014000b4 	movhi	r5,2
    1ec4:	29686704 	addi	r5,r5,-24164
    1ec8:	1009883a 	mov	r4,r2
    1ecc:	0018a680 	call	18a68 <alt_up_character_lcd_string>

    /* read and echo audio data */
    play = 0;
    1ed0:	e03ff515 	stw	zero,-44(fp)
    int i;
    while (1) {
        check_KEYs(&record, &play, &buffer_index);
    1ed4:	e13ff404 	addi	r4,fp,-48
    1ed8:	e0fff504 	addi	r3,fp,-44
    1edc:	e0bff604 	addi	r2,fp,-40
    1ee0:	200d883a 	mov	r6,r4
    1ee4:	180b883a 	mov	r5,r3
    1ee8:	1009883a 	mov	r4,r2
    1eec:	00021540 	call	2154 <check_KEYs>
        if (record) {
    1ef0:	e0bff617 	ldw	r2,-40(fp)
    1ef4:	103ff726 	beq	r2,zero,1ed4 <main+0xc8>
            *(red_LED_ptr) = 0x1;  // turn on LEDR[0]
    1ef8:	e0bffb17 	ldw	r2,-20(fp)
    1efc:	00c00044 	movi	r3,1
    1f00:	10c00015 	stw	r3,0(r2)

            fifospace = *(audio_ptr + 1);  // read the audio port fifospace register
    1f04:	e0bffa17 	ldw	r2,-24(fp)
    1f08:	10800117 	ldw	r2,4(r2)
    1f0c:	e0bffe15 	stw	r2,-8(fp)
            if ((fifospace & 0x000000FF) > BUF_THRESHOLD)  // check RARC
    1f10:	e0bffe17 	ldw	r2,-8(fp)
    1f14:	10803fcc 	andi	r2,r2,255
    1f18:	10801850 	cmplti	r2,r2,97
    1f1c:	103fed1e 	bne	r2,zero,1ed4 <main+0xc8>
            {
                // store data until the the audio-in FIFO is empty or the buffer is full
                while ((fifospace & 0x000000FF) && (buffer_index < BUF_SIZE)) {
    1f20:	00008506 	br	2138 <main+0x32c>
                    left_buffer[buffer_index] = *(audio_ptr + 2);
    1f24:	e0bffa17 	ldw	r2,-24(fp)
    1f28:	10800204 	addi	r2,r2,8
    1f2c:	10800017 	ldw	r2,0(r2)
    1f30:	e43ff417 	ldw	r16,-48(fp)
    1f34:	1009883a 	mov	r4,r2
    1f38:	0009a0c0 	call	9a0c <__floatsisf>
    1f3c:	1009883a 	mov	r4,r2
    1f40:	00bffff4 	movhi	r2,65535
    1f44:	10911504 	addi	r2,r2,17492
    1f48:	10bfff04 	addi	r2,r2,-4
    1f4c:	1707883a 	add	r3,r2,fp
    1f50:	800490ba 	slli	r2,r16,2
    1f54:	1885883a 	add	r2,r3,r2
    1f58:	11000015 	stw	r4,0(r2)
                    right_buffer[buffer_index] = *(audio_ptr + 3);
    1f5c:	e17ff417 	ldw	r5,-48(fp)
    1f60:	e0bffa17 	ldw	r2,-24(fp)
    1f64:	10c00317 	ldw	r3,12(r2)
    1f68:	00bffff4 	movhi	r2,65535
    1f6c:	10a23504 	addi	r2,r2,-30508
    1f70:	10bfff04 	addi	r2,r2,-4
    1f74:	1709883a 	add	r4,r2,fp
    1f78:	280490ba 	slli	r2,r5,2
    1f7c:	2085883a 	add	r2,r4,r2
    1f80:	10c00015 	stw	r3,0(r2)
                    ++buffer_index;
    1f84:	e0bff417 	ldw	r2,-48(fp)
    1f88:	10800044 	addi	r2,r2,1
    1f8c:	e0bff415 	stw	r2,-48(fp)

                    if (buffer_index == BUF_SIZE) {
    1f90:	e0bff417 	ldw	r2,-48(fp)
    1f94:	108bb818 	cmpnei	r2,r2,12000
    1f98:	1000641e 	bne	r2,zero,212c <main+0x320>
                        // done recording
                        record = 0;
    1f9c:	e03ff615 	stw	zero,-40(fp)
                        *(red_LED_ptr) = 0x0;  // turn off LEDR
    1fa0:	e0bffb17 	ldw	r2,-20(fp)
    1fa4:	10000015 	stw	zero,0(r2)
                        //printf("Address of left_buffer: %p\n", (void*)&left_buffer);
                        clearLCD();
    1fa8:	000274c0 	call	274c <clearLCD>
                        alt_up_character_lcd_set_cursor_pos(char_lcd_dev, 0, 0);
    1fac:	d0a73217 	ldw	r2,-25400(gp)
    1fb0:	000d883a 	mov	r6,zero
    1fb4:	000b883a 	mov	r5,zero
    1fb8:	1009883a 	mov	r4,r2
    1fbc:	0018b340 	call	18b34 <alt_up_character_lcd_set_cursor_pos>
                        alt_up_character_lcd_string(char_lcd_dev, "Normalizing     \0");
    1fc0:	d0a73217 	ldw	r2,-25400(gp)
    1fc4:	014000b4 	movhi	r5,2
    1fc8:	29686b04 	addi	r5,r5,-24148
    1fcc:	1009883a 	mov	r4,r2
    1fd0:	0018a680 	call	18a68 <alt_up_character_lcd_string>
                        alt_up_character_lcd_set_cursor_pos(char_lcd_dev, 0, 1);
    1fd4:	d0a73217 	ldw	r2,-25400(gp)
    1fd8:	01800044 	movi	r6,1
    1fdc:	000b883a 	mov	r5,zero
    1fe0:	1009883a 	mov	r4,r2
    1fe4:	0018b340 	call	18b34 <alt_up_character_lcd_set_cursor_pos>
						alt_up_character_lcd_string(char_lcd_dev, "audio...        \0");
    1fe8:	d0a73217 	ldw	r2,-25400(gp)
    1fec:	014000b4 	movhi	r5,2
    1ff0:	29687004 	addi	r5,r5,-24128
    1ff4:	1009883a 	mov	r4,r2
    1ff8:	0018a680 	call	18a68 <alt_up_character_lcd_string>
                        normalize_audio(left_buffer, normalized_buffer, BUF_SIZE);
    1ffc:	00bfffb4 	movhi	r2,65534
    2000:	10b35504 	addi	r2,r2,-12972
    2004:	10bfff04 	addi	r2,r2,-4
    2008:	1707883a 	add	r3,r2,fp
    200c:	00bffff4 	movhi	r2,65535
    2010:	10911504 	addi	r2,r2,17492
    2014:	10bfff04 	addi	r2,r2,-4
    2018:	1705883a 	add	r2,r2,fp
    201c:	018bb804 	movi	r6,12000
    2020:	180b883a 	mov	r5,r3
    2024:	1009883a 	mov	r4,r2
    2028:	00022200 	call	2220 <normalize_audio>
                        // Calculate MFCCs
						calculate_mfcc(normalized_buffer, BUF_SIZE, mfcc_buffer);
    202c:	00bfffb4 	movhi	r2,65534
    2030:	10b22a04 	addi	r2,r2,-14168
    2034:	10bfff04 	addi	r2,r2,-4
    2038:	1707883a 	add	r3,r2,fp
    203c:	00bfffb4 	movhi	r2,65534
    2040:	10b35504 	addi	r2,r2,-12972
    2044:	10bfff04 	addi	r2,r2,-4
    2048:	1705883a 	add	r2,r2,fp
    204c:	180d883a 	mov	r6,r3
    2050:	014bb804 	movi	r5,12000
    2054:	1009883a 	mov	r4,r2
    2058:	00024e80 	call	24e8 <calculate_mfcc>
						writeToLCD("Finished        \0", "calculations...\0");
    205c:	014000b4 	movhi	r5,2
    2060:	29687504 	addi	r5,r5,-24108
    2064:	010000b4 	movhi	r4,2
    2068:	21287a04 	addi	r4,r4,-24088
    206c:	00027c80 	call	27c8 <writeToLCD>
						int num_frames = (BUF_SIZE - FFT_SIZE) / FFT_SHIFT + 1;
    2070:	00800584 	movi	r2,22
    2074:	e0bff715 	stw	r2,-36(fp)
						for (int frame = 0; frame < num_frames; frame++) {
    2078:	e03ffd15 	stw	zero,-12(fp)
    207c:	00002706 	br	211c <main+0x310>
							printf("Frame %d:\n", frame);
    2080:	e17ffd17 	ldw	r5,-12(fp)
    2084:	010000b4 	movhi	r4,2
    2088:	21287f04 	addi	r4,r4,-24068
    208c:	000cf500 	call	cf50 <printf>
							for (int m = 0; m < NUM_MFCC; m++) {
    2090:	e03ffc15 	stw	zero,-16(fp)
    2094:	00001906 	br	20fc <main+0x2f0>
								printf("%f ", mfcc_buffer[frame * NUM_MFCC + m]);
    2098:	01400344 	movi	r5,13
    209c:	e13ffd17 	ldw	r4,-12(fp)
    20a0:	0008b4c0 	call	8b4c <__mulsi3>
    20a4:	1007883a 	mov	r3,r2
    20a8:	e0bffc17 	ldw	r2,-16(fp)
    20ac:	1889883a 	add	r4,r3,r2
    20b0:	00bfffb4 	movhi	r2,65534
    20b4:	10b22a04 	addi	r2,r2,-14168
    20b8:	10bfff04 	addi	r2,r2,-4
    20bc:	1707883a 	add	r3,r2,fp
    20c0:	200490ba 	slli	r2,r4,2
    20c4:	1885883a 	add	r2,r3,r2
    20c8:	10c00017 	ldw	r3,0(r2)
    20cc:	1809883a 	mov	r4,r3
    20d0:	000c3540 	call	c354 <__extendsfdf2>
    20d4:	100d883a 	mov	r6,r2
    20d8:	180f883a 	mov	r7,r3
    20dc:	300b883a 	mov	r5,r6
    20e0:	380d883a 	mov	r6,r7
    20e4:	010000b4 	movhi	r4,2
    20e8:	21288204 	addi	r4,r4,-24056
    20ec:	000cf500 	call	cf50 <printf>
							for (int m = 0; m < NUM_MFCC; m++) {
    20f0:	e0bffc17 	ldw	r2,-16(fp)
    20f4:	10800044 	addi	r2,r2,1
    20f8:	e0bffc15 	stw	r2,-16(fp)
    20fc:	e0bffc17 	ldw	r2,-16(fp)
    2100:	10800350 	cmplti	r2,r2,13
    2104:	103fe41e 	bne	r2,zero,2098 <main+0x28c>
							}
							printf("\n");
    2108:	01000284 	movi	r4,10
    210c:	000cf900 	call	cf90 <putchar>
						for (int frame = 0; frame < num_frames; frame++) {
    2110:	e0bffd17 	ldw	r2,-12(fp)
    2114:	10800044 	addi	r2,r2,1
    2118:	e0bffd15 	stw	r2,-12(fp)
    211c:	e0fffd17 	ldw	r3,-12(fp)
    2120:	e0bff717 	ldw	r2,-36(fp)
    2124:	18bfd616 	blt	r3,r2,2080 <main+0x274>
						}
                         //write the float buffer to the SDRAM

                        buffer_index = 0;
    2128:	e03ff415 	stw	zero,-48(fp)
                    }
                    fifospace = *(audio_ptr + 1);  // read the audio port fifospace register
    212c:	e0bffa17 	ldw	r2,-24(fp)
    2130:	10800117 	ldw	r2,4(r2)
    2134:	e0bffe15 	stw	r2,-8(fp)
                while ((fifospace & 0x000000FF) && (buffer_index < BUF_SIZE)) {
    2138:	e0bffe17 	ldw	r2,-8(fp)
    213c:	10803fcc 	andi	r2,r2,255
    2140:	103f6426 	beq	r2,zero,1ed4 <main+0xc8>
    2144:	e0bff417 	ldw	r2,-48(fp)
    2148:	108bb810 	cmplti	r2,r2,12000
    214c:	103f751e 	bne	r2,zero,1f24 <main+0x118>
        check_KEYs(&record, &play, &buffer_index);
    2150:	003f6006 	br	1ed4 <main+0xc8>

00002154 <check_KEYs>:
}

/****************************************************************************************
 * Subroutine to read KEYs
 ****************************************************************************************/
void check_KEYs(int *KEY0, int *KEY1, int *counter) {
    2154:	defff904 	addi	sp,sp,-28
    2158:	df000615 	stw	fp,24(sp)
    215c:	df000604 	addi	fp,sp,24
    2160:	e13ffc15 	stw	r4,-16(fp)
    2164:	e17ffb15 	stw	r5,-20(fp)
    2168:	e1bffa15 	stw	r6,-24(fp)
    volatile int *KEY_ptr = (int *)KEY_BASE;
    216c:	00bfc834 	movhi	r2,65312
    2170:	10801404 	addi	r2,r2,80
    2174:	e0bfff15 	stw	r2,-4(fp)
    volatile int *audio_ptr = (int *)AUDIO_BASE;
    2178:	00bfc834 	movhi	r2,65312
    217c:	108c1004 	addi	r2,r2,12352
    2180:	e0bffe15 	stw	r2,-8(fp)
    int KEY_value;

    KEY_value = *(KEY_ptr);  // read the pushbutton KEY values
    2184:	e0bfff17 	ldw	r2,-4(fp)
    2188:	10800017 	ldw	r2,0(r2)
    218c:	e0bffd15 	stw	r2,-12(fp)
    while (*KEY_ptr)
    2190:	0001883a 	nop
    2194:	e0bfff17 	ldw	r2,-4(fp)
    2198:	10800017 	ldw	r2,0(r2)
    219c:	103ffd1e 	bne	r2,zero,2194 <check_KEYs+0x40>
        ;  // wait for pushbutton KEY release

    if (KEY_value == 0x1)  // check KEY0
    21a0:	e0bffd17 	ldw	r2,-12(fp)
    21a4:	10800058 	cmpnei	r2,r2,1
    21a8:	10000b1e 	bne	r2,zero,21d8 <check_KEYs+0x84>
    {
        // reset counter to start recording
        *counter = 0;
    21ac:	e0bffa17 	ldw	r2,-24(fp)
    21b0:	10000015 	stw	zero,0(r2)
        // clear audio-in FIFO
        *(audio_ptr) = 0x4;
    21b4:	e0bffe17 	ldw	r2,-8(fp)
    21b8:	00c00104 	movi	r3,4
    21bc:	10c00015 	stw	r3,0(r2)
        *(audio_ptr) = 0x0;
    21c0:	e0bffe17 	ldw	r2,-8(fp)
    21c4:	10000015 	stw	zero,0(r2)

        *KEY0 = 1;
    21c8:	e0bffc17 	ldw	r2,-16(fp)
    21cc:	00c00044 	movi	r3,1
    21d0:	10c00015 	stw	r3,0(r2)
        *(audio_ptr) = 0x8;
        *(audio_ptr) = 0x0;

        *KEY1 = 1;
    }
}
    21d4:	00000d06 	br	220c <check_KEYs+0xb8>
    } else if (KEY_value == 0x2)  // check KEY1
    21d8:	e0bffd17 	ldw	r2,-12(fp)
    21dc:	10800098 	cmpnei	r2,r2,2
    21e0:	10000a1e 	bne	r2,zero,220c <check_KEYs+0xb8>
        *counter = 0;
    21e4:	e0bffa17 	ldw	r2,-24(fp)
    21e8:	10000015 	stw	zero,0(r2)
        *(audio_ptr) = 0x8;
    21ec:	e0bffe17 	ldw	r2,-8(fp)
    21f0:	00c00204 	movi	r3,8
    21f4:	10c00015 	stw	r3,0(r2)
        *(audio_ptr) = 0x0;
    21f8:	e0bffe17 	ldw	r2,-8(fp)
    21fc:	10000015 	stw	zero,0(r2)
        *KEY1 = 1;
    2200:	e0bffb17 	ldw	r2,-20(fp)
    2204:	00c00044 	movi	r3,1
    2208:	10c00015 	stw	r3,0(r2)
}
    220c:	0001883a 	nop
    2210:	e037883a 	mov	sp,fp
    2214:	df000017 	ldw	fp,0(sp)
    2218:	dec00104 	addi	sp,sp,4
    221c:	f800283a 	ret

00002220 <normalize_audio>:

void normalize_audio(float *input_buffer, float *output_buffer, int size) {
    2220:	defff604 	addi	sp,sp,-40
    2224:	dfc00915 	stw	ra,36(sp)
    2228:	df000815 	stw	fp,32(sp)
    222c:	df000804 	addi	fp,sp,32
    2230:	e13ffa15 	stw	r4,-24(fp)
    2234:	e17ff915 	stw	r5,-28(fp)
    2238:	e1bff815 	stw	r6,-32(fp)
	float max_val = 0.0f;
    223c:	e03fff15 	stw	zero,-4(fp)

	// Find the maximum absolute value
	for (int i = 0; i < size; i++) {
    2240:	e03ffe15 	stw	zero,-8(fp)
    2244:	00001606 	br	22a0 <normalize_audio+0x80>
		float signed_val = input_buffer[i] - 32768.0f;  // Adjusting for unsigned 16-bit PCM
    2248:	e0bffe17 	ldw	r2,-8(fp)
    224c:	100490ba 	slli	r2,r2,2
    2250:	e0fffa17 	ldw	r3,-24(fp)
    2254:	1885883a 	add	r2,r3,r2
    2258:	10c00017 	ldw	r3,0(r2)
    225c:	0091c034 	movhi	r2,18176
    2260:	1885ffb2 	custom	254,r2,r3,r2
    2264:	e0bffc15 	stw	r2,-16(fp)
		float abs_val = fabs(signed_val);
    2268:	e0fffc17 	ldw	r3,-16(fp)
    226c:	00a00034 	movhi	r2,32768
    2270:	10bfffc4 	addi	r2,r2,-1
    2274:	1884703a 	and	r2,r3,r2
    2278:	e0bffb15 	stw	r2,-20(fp)
		if (abs_val > max_val) {
    227c:	e17fff17 	ldw	r5,-4(fp)
    2280:	e13ffb17 	ldw	r4,-20(fp)
    2284:	00090500 	call	9050 <__gesf2>
    2288:	0080020e 	bge	zero,r2,2294 <normalize_audio+0x74>
			max_val = abs_val;
    228c:	e0bffb17 	ldw	r2,-20(fp)
    2290:	e0bfff15 	stw	r2,-4(fp)
	for (int i = 0; i < size; i++) {
    2294:	e0bffe17 	ldw	r2,-8(fp)
    2298:	10800044 	addi	r2,r2,1
    229c:	e0bffe15 	stw	r2,-8(fp)
    22a0:	e0fffe17 	ldw	r3,-8(fp)
    22a4:	e0bff817 	ldw	r2,-32(fp)
    22a8:	18bfe716 	blt	r3,r2,2248 <normalize_audio+0x28>
		}
	}

	// Prevent division by zero
	if (max_val == 0) {
    22ac:	000b883a 	mov	r5,zero
    22b0:	e13fff17 	ldw	r4,-4(fp)
    22b4:	0008fe00 	call	8fe0 <__eqsf2>
    22b8:	1000021e 	bne	r2,zero,22c4 <normalize_audio+0xa4>
		max_val = 1.0f;  // To avoid division by zero
    22bc:	008fe034 	movhi	r2,16256
    22c0:	e0bfff15 	stw	r2,-4(fp)
	}

	// Normalize the input buffer to numbers between -1 and 1.
	for (int i = 0; i < size; i++) {
    22c4:	e03ffd15 	stw	zero,-12(fp)
    22c8:	00001106 	br	2310 <normalize_audio+0xf0>
		output_buffer[i] = (input_buffer[i] - 32768.0f) / max_val;
    22cc:	e0bffd17 	ldw	r2,-12(fp)
    22d0:	100490ba 	slli	r2,r2,2
    22d4:	e0fffa17 	ldw	r3,-24(fp)
    22d8:	1885883a 	add	r2,r3,r2
    22dc:	10c00017 	ldw	r3,0(r2)
    22e0:	0091c034 	movhi	r2,18176
    22e4:	1889ffb2 	custom	254,r4,r3,r2
    22e8:	e0bffd17 	ldw	r2,-12(fp)
    22ec:	100490ba 	slli	r2,r2,2
    22f0:	e0fff917 	ldw	r3,-28(fp)
    22f4:	1885883a 	add	r2,r3,r2
    22f8:	e0ffff17 	ldw	r3,-4(fp)
    22fc:	20c7fff2 	custom	255,r3,r4,r3
    2300:	10c00015 	stw	r3,0(r2)
	for (int i = 0; i < size; i++) {
    2304:	e0bffd17 	ldw	r2,-12(fp)
    2308:	10800044 	addi	r2,r2,1
    230c:	e0bffd15 	stw	r2,-12(fp)
    2310:	e0fffd17 	ldw	r3,-12(fp)
    2314:	e0bff817 	ldw	r2,-32(fp)
    2318:	18bfec16 	blt	r3,r2,22cc <normalize_audio+0xac>
	}
}
    231c:	0001883a 	nop
    2320:	0001883a 	nop
    2324:	e037883a 	mov	sp,fp
    2328:	dfc00117 	ldw	ra,4(sp)
    232c:	df000017 	ldw	fp,0(sp)
    2330:	dec00204 	addi	sp,sp,8
    2334:	f800283a 	ret

00002338 <hamming_window>:

// Source for this function: https://www.sciencedirect.com/topics/engineering/hamming-window.
void hamming_window(float *input, float *output, int size) {
    2338:	defff604 	addi	sp,sp,-40
    233c:	dfc00915 	stw	ra,36(sp)
    2340:	df000815 	stw	fp,32(sp)
    2344:	dc000715 	stw	r16,28(sp)
    2348:	df000804 	addi	fp,sp,32
    234c:	e13ffa15 	stw	r4,-24(fp)
    2350:	e17ff915 	stw	r5,-28(fp)
    2354:	e1bff815 	stw	r6,-32(fp)
    for (int i = 0; i < size; i++) {
    2358:	e03ffe15 	stw	zero,-8(fp)
    235c:	00002906 	br	2404 <hamming_window+0xcc>
        float alpha = 0.54f;
    2360:	008fc2b4 	movhi	r2,16138
    2364:	108f5c44 	addi	r2,r2,15729
    2368:	e0bffd15 	stw	r2,-12(fp)
        float beta = 0.46f;
    236c:	008fbb34 	movhi	r2,16108
    2370:	10a147c4 	addi	r2,r2,-31457
    2374:	e0bffc15 	stw	r2,-16(fp)
        float window = alpha - beta * cosf((2 * PI * i) / (size - 1));
    2378:	e13ffe17 	ldw	r4,-8(fp)
    237c:	0009a0c0 	call	9a0c <__floatsisf>
    2380:	1007883a 	mov	r3,r2
    2384:	00903274 	movhi	r2,16585
    2388:	1083f6c4 	addi	r2,r2,4059
    238c:	18a1ff32 	custom	252,r16,r3,r2
    2390:	e0bff817 	ldw	r2,-32(fp)
    2394:	10bfffc4 	addi	r2,r2,-1
    2398:	1009883a 	mov	r4,r2
    239c:	0009a0c0 	call	9a0c <__floatsisf>
    23a0:	1007883a 	mov	r3,r2
    23a4:	80c5fff2 	custom	255,r2,r16,r3
    23a8:	1009883a 	mov	r4,r2
    23ac:	00034240 	call	3424 <cosf>
    23b0:	1007883a 	mov	r3,r2
    23b4:	e0bffc17 	ldw	r2,-16(fp)
    23b8:	1885ff32 	custom	252,r2,r3,r2
    23bc:	e0fffd17 	ldw	r3,-12(fp)
    23c0:	1885ffb2 	custom	254,r2,r3,r2
    23c4:	e0bffb15 	stw	r2,-20(fp)
        output[i] = input[i] * window;
    23c8:	e0bffe17 	ldw	r2,-8(fp)
    23cc:	100490ba 	slli	r2,r2,2
    23d0:	e0fffa17 	ldw	r3,-24(fp)
    23d4:	1885883a 	add	r2,r3,r2
    23d8:	11000017 	ldw	r4,0(r2)
    23dc:	e0bffe17 	ldw	r2,-8(fp)
    23e0:	100490ba 	slli	r2,r2,2
    23e4:	e0fff917 	ldw	r3,-28(fp)
    23e8:	1885883a 	add	r2,r3,r2
    23ec:	e0fffb17 	ldw	r3,-20(fp)
    23f0:	20c7ff32 	custom	252,r3,r4,r3
    23f4:	10c00015 	stw	r3,0(r2)
    for (int i = 0; i < size; i++) {
    23f8:	e0bffe17 	ldw	r2,-8(fp)
    23fc:	10800044 	addi	r2,r2,1
    2400:	e0bffe15 	stw	r2,-8(fp)
    2404:	e0fffe17 	ldw	r3,-8(fp)
    2408:	e0bff817 	ldw	r2,-32(fp)
    240c:	18bfd416 	blt	r3,r2,2360 <hamming_window+0x28>
    }
}
    2410:	0001883a 	nop
    2414:	0001883a 	nop
    2418:	e6ffff04 	addi	sp,fp,-4
    241c:	dfc00217 	ldw	ra,8(sp)
    2420:	df000117 	ldw	fp,4(sp)
    2424:	dc000017 	ldw	r16,0(sp)
    2428:	dec00304 	addi	sp,sp,12
    242c:	f800283a 	ret

00002430 <fft>:

void fft(float *input_buffer, kiss_fft_cpx *output_buffer) {
    2430:	def7fa04 	addi	sp,sp,-8216
    2434:	dfc80515 	stw	ra,8212(sp)
    2438:	df080415 	stw	fp,8208(sp)
    243c:	df080404 	addi	fp,sp,8208
    2440:	e137fd15 	stw	r4,-8204(fp)
    2444:	e177fc15 	stw	r5,-8208(fp)
    kiss_fft_cfg config;

    config = kiss_fft_alloc(FFT_SIZE, 0, NULL, NULL);
    2448:	000f883a 	mov	r7,zero
    244c:	000d883a 	mov	r6,zero
    2450:	000b883a 	mov	r5,zero
    2454:	01010004 	movi	r4,1024
    2458:	00019c40 	call	19c4 <kiss_fft_alloc>
    245c:	e0bffe15 	stw	r2,-8(fp)

    // Convert input to kiss_fft_cpx format
    kiss_fft_cpx kiss_input_buffer[FFT_SIZE];
    for (int i = 0; i < FFT_SIZE; i++) {
    2460:	e03fff15 	stw	zero,-4(fp)
    2464:	00001006 	br	24a8 <fft+0x78>
        kiss_input_buffer[i].r = input_buffer[i];
    2468:	e0bfff17 	ldw	r2,-4(fp)
    246c:	100490ba 	slli	r2,r2,2
    2470:	e0f7fd17 	ldw	r3,-8204(fp)
    2474:	1885883a 	add	r2,r3,r2
    2478:	10c00017 	ldw	r3,0(r2)
    247c:	e0bfff17 	ldw	r2,-4(fp)
    2480:	100490fa 	slli	r2,r2,3
    2484:	e085883a 	add	r2,fp,r2
    2488:	10f7fe15 	stw	r3,-8200(r2)
        kiss_input_buffer[i].i = 0; // Assuming input is real, imaginary part is 0
    248c:	e0bfff17 	ldw	r2,-4(fp)
    2490:	100490fa 	slli	r2,r2,3
    2494:	e085883a 	add	r2,fp,r2
    2498:	1037ff15 	stw	zero,-8196(r2)
    for (int i = 0; i < FFT_SIZE; i++) {
    249c:	e0bfff17 	ldw	r2,-4(fp)
    24a0:	10800044 	addi	r2,r2,1
    24a4:	e0bfff15 	stw	r2,-4(fp)
    24a8:	e0bfff17 	ldw	r2,-4(fp)
    24ac:	10810010 	cmplti	r2,r2,1024
    24b0:	103fed1e 	bne	r2,zero,2468 <fft+0x38>
    }

    // Perform FFT
    kiss_fft(config, kiss_input_buffer, output_buffer);
    24b4:	e0b7fe04 	addi	r2,fp,-8200
    24b8:	e1b7fc17 	ldw	r6,-8208(fp)
    24bc:	100b883a 	mov	r5,r2
    24c0:	e13ffe17 	ldw	r4,-8(fp)
    24c4:	0001cd40 	call	1cd4 <kiss_fft>

    // Free the FFT configuration
    kiss_fft_free(config);
    24c8:	e13ffe17 	ldw	r4,-8(fp)
    24cc:	000c6300 	call	c630 <free>
}
    24d0:	0001883a 	nop
    24d4:	e037883a 	mov	sp,fp
    24d8:	dfc00117 	ldw	ra,4(sp)
    24dc:	df000017 	ldw	fp,0(sp)
    24e0:	dec00204 	addi	sp,sp,8
    24e4:	f800283a 	ret

000024e8 <calculate_mfcc>:

void calculate_mfcc(float *input_buffer, int signal_length, float *mfcc_buffer) {
    24e8:	dee7f304 	addi	sp,sp,-24628
    24ec:	dfd80c15 	stw	ra,24624(sp)
    24f0:	df180b15 	stw	fp,24620(sp)
    24f4:	dc980a15 	stw	r18,24616(sp)
    24f8:	dc580915 	stw	r17,24612(sp)
    24fc:	dc180815 	stw	r16,24608(sp)
    2500:	df180b04 	addi	fp,sp,24620
    2504:	e127f815 	stw	r4,-24608(fp)
    2508:	e167f715 	stw	r5,-24612(fp)
    250c:	e1a7f615 	stw	r6,-24616(fp)
    float frame[FFT_SIZE];
    float windowed_frame[FFT_SIZE];
    // Calculate how many frames can be extracted from the input signal.
    int num_frames = (signal_length - FFT_SIZE) / FFT_SHIFT + 1;
    2510:	e0a7f717 	ldw	r2,-24612(fp)
    2514:	10bf0004 	addi	r2,r2,-1024
    2518:	1000010e 	bge	r2,zero,2520 <calculate_mfcc+0x38>
    251c:	10807fc4 	addi	r2,r2,511
    2520:	1005d27a 	srai	r2,r2,9
    2524:	10800044 	addi	r2,r2,1
    2528:	e0bff915 	stw	r2,-28(fp)

    for (int frame_num = 0; frame_num < num_frames; frame_num++) {
    252c:	e03ffc15 	stw	zero,-16(fp)
    2530:	00007906 	br	2718 <calculate_mfcc+0x230>
        // Extract FFT_SIZE samples from the start of the current frame.
        memcpy(frame, input_buffer + frame_num * FFT_SHIFT, sizeof(float) * FFT_SIZE);
    2534:	e0bffc17 	ldw	r2,-16(fp)
    2538:	100492fa 	slli	r2,r2,11
    253c:	e0e7f817 	ldw	r3,-24608(fp)
    2540:	1887883a 	add	r3,r3,r2
    2544:	e0bbf904 	addi	r2,fp,-4124
    2548:	01840004 	movi	r6,4096
    254c:	180b883a 	mov	r5,r3
    2550:	1009883a 	mov	r4,r2
    2554:	000ce200 	call	ce20 <memcpy>

        writeToLCD("Hamming         \0", "window...       \0");
    2558:	014000b4 	movhi	r5,2
    255c:	29688304 	addi	r5,r5,-24052
    2560:	010000b4 	movhi	r4,2
    2564:	21288804 	addi	r4,r4,-24032
    2568:	00027c80 	call	27c8 <writeToLCD>
        hamming_window(frame, windowed_frame, FFT_SIZE);
    256c:	e0f7f904 	addi	r3,fp,-8220
    2570:	e0bbf904 	addi	r2,fp,-4124
    2574:	01810004 	movi	r6,1024
    2578:	180b883a 	mov	r5,r3
    257c:	1009883a 	mov	r4,r2
    2580:	00023380 	call	2338 <hamming_window>

        writeToLCD("Performing      \0", "FFT...          \0");
    2584:	014000b4 	movhi	r5,2
    2588:	29688d04 	addi	r5,r5,-24012
    258c:	010000b4 	movhi	r4,2
    2590:	21289204 	addi	r4,r4,-23992
    2594:	00027c80 	call	27c8 <writeToLCD>
        kiss_fft_cpx fft_output[FFT_SIZE];
        fft(windowed_frame, fft_output);
    2598:	e0e7f904 	addi	r3,fp,-24604
    259c:	e0b7f904 	addi	r2,fp,-8220
    25a0:	180b883a 	mov	r5,r3
    25a4:	1009883a 	mov	r4,r2
    25a8:	00024300 	call	2430 <fft>

        writeToLCD("Magnitude       \0", "spectrum...     \0");
    25ac:	014000b4 	movhi	r5,2
    25b0:	29689704 	addi	r5,r5,-23972
    25b4:	010000b4 	movhi	r4,2
    25b8:	21289c04 	addi	r4,r4,-23952
    25bc:	00027c80 	call	27c8 <writeToLCD>
        // Compute the magnitude spectrum of the current frame.
        double magnitude_spectrum[FFT_SIZE];
        for (int i = 0; i < FFT_SIZE; i++) {
    25c0:	e03ffb15 	stw	zero,-20(fp)
    25c4:	00002906 	br	266c <calculate_mfcc+0x184>
            magnitude_spectrum[i] = sqrt(fft_output[i].r * fft_output[i].r + fft_output[i].i * fft_output[i].i);
    25c8:	e0bffb17 	ldw	r2,-20(fp)
    25cc:	100490fa 	slli	r2,r2,3
    25d0:	10bffd04 	addi	r2,r2,-12
    25d4:	1705883a 	add	r2,r2,fp
    25d8:	10e7fc17 	ldw	r3,-24592(r2)
    25dc:	e0bffb17 	ldw	r2,-20(fp)
    25e0:	100490fa 	slli	r2,r2,3
    25e4:	10bffd04 	addi	r2,r2,-12
    25e8:	1709883a 	add	r4,r2,fp
    25ec:	20a7fc17 	ldw	r2,-24592(r4)
    25f0:	1887ff32 	custom	252,r3,r3,r2
    25f4:	e0bffb17 	ldw	r2,-20(fp)
    25f8:	100490fa 	slli	r2,r2,3
    25fc:	10bffd04 	addi	r2,r2,-12
    2600:	1705883a 	add	r2,r2,fp
    2604:	1127fd17 	ldw	r4,-24588(r2)
    2608:	e0bffb17 	ldw	r2,-20(fp)
    260c:	100490fa 	slli	r2,r2,3
    2610:	10bffd04 	addi	r2,r2,-12
    2614:	170b883a 	add	r5,r2,fp
    2618:	28a7fd17 	ldw	r2,-24588(r5)
    261c:	2085ff32 	custom	252,r2,r4,r2
    2620:	1885ff72 	custom	253,r2,r3,r2
    2624:	1009883a 	mov	r4,r2
    2628:	000c3540 	call	c354 <__extendsfdf2>
    262c:	100d883a 	mov	r6,r2
    2630:	180f883a 	mov	r7,r3
    2634:	3009883a 	mov	r4,r6
    2638:	380b883a 	mov	r5,r7
    263c:	00038400 	call	3840 <sqrt>
    2640:	1009883a 	mov	r4,r2
    2644:	180b883a 	mov	r5,r3
    2648:	e0bffb17 	ldw	r2,-20(fp)
    264c:	100490fa 	slli	r2,r2,3
    2650:	10bffd04 	addi	r2,r2,-12
    2654:	1705883a 	add	r2,r2,fp
    2658:	112ffc15 	stw	r4,-16400(r2)
    265c:	116ffd15 	stw	r5,-16396(r2)
        for (int i = 0; i < FFT_SIZE; i++) {
    2660:	e0bffb17 	ldw	r2,-20(fp)
    2664:	10800044 	addi	r2,r2,1
    2668:	e0bffb15 	stw	r2,-20(fp)
    266c:	e0bffb17 	ldw	r2,-20(fp)
    2670:	10810010 	cmplti	r2,r2,1024
    2674:	103fd41e 	bne	r2,zero,25c8 <calculate_mfcc+0xe0>
        }

        writeToLCD("Calculating     \0", "MFCCs...        \0");
    2678:	014000b4 	movhi	r5,2
    267c:	2968a104 	addi	r5,r5,-23932
    2680:	010000b4 	movhi	r4,2
    2684:	2128a604 	addi	r4,r4,-23912
    2688:	00027c80 	call	27c8 <writeToLCD>
        // Calculate MFCCs for the current frame.
        for (int m = 0; m < NUM_MFCC; m++) {
    268c:	e03ffa15 	stw	zero,-24(fp)
    2690:	00001b06 	br	2700 <calculate_mfcc+0x218>
            mfcc_buffer[frame_num * NUM_MFCC + m] = GetCoefficient(magnitude_spectrum, 8192, NUM_FILTERS, FFT_SIZE, m);
    2694:	e0bffa17 	ldw	r2,-24(fp)
    2698:	e0eff904 	addi	r3,fp,-16412
    269c:	d8800015 	stw	r2,0(sp)
    26a0:	01c10004 	movi	r7,1024
    26a4:	01800304 	movi	r6,12
    26a8:	01480004 	movi	r5,8192
    26ac:	1809883a 	mov	r4,r3
    26b0:	00028440 	call	2844 <GetCoefficient>
    26b4:	1021883a 	mov	r16,r2
    26b8:	1823883a 	mov	r17,r3
    26bc:	01400344 	movi	r5,13
    26c0:	e13ffc17 	ldw	r4,-16(fp)
    26c4:	0008b4c0 	call	8b4c <__mulsi3>
    26c8:	1007883a 	mov	r3,r2
    26cc:	e0bffa17 	ldw	r2,-24(fp)
    26d0:	1885883a 	add	r2,r3,r2
    26d4:	100490ba 	slli	r2,r2,2
    26d8:	e0e7f617 	ldw	r3,-24616(fp)
    26dc:	18a5883a 	add	r18,r3,r2
    26e0:	8009883a 	mov	r4,r16
    26e4:	880b883a 	mov	r5,r17
    26e8:	000c4500 	call	c450 <__truncdfsf2>
    26ec:	1007883a 	mov	r3,r2
    26f0:	90c00015 	stw	r3,0(r18)
        for (int m = 0; m < NUM_MFCC; m++) {
    26f4:	e0bffa17 	ldw	r2,-24(fp)
    26f8:	10800044 	addi	r2,r2,1
    26fc:	e0bffa15 	stw	r2,-24(fp)
    2700:	e0bffa17 	ldw	r2,-24(fp)
    2704:	10800350 	cmplti	r2,r2,13
    2708:	103fe21e 	bne	r2,zero,2694 <calculate_mfcc+0x1ac>
    for (int frame_num = 0; frame_num < num_frames; frame_num++) {
    270c:	e0bffc17 	ldw	r2,-16(fp)
    2710:	10800044 	addi	r2,r2,1
    2714:	e0bffc15 	stw	r2,-16(fp)
    2718:	e0fffc17 	ldw	r3,-16(fp)
    271c:	e0bff917 	ldw	r2,-28(fp)
    2720:	18bf8416 	blt	r3,r2,2534 <calculate_mfcc+0x4c>
        }
    }
}
    2724:	0001883a 	nop
    2728:	0001883a 	nop
    272c:	e6fffd04 	addi	sp,fp,-12
    2730:	dfc00417 	ldw	ra,16(sp)
    2734:	df000317 	ldw	fp,12(sp)
    2738:	dc800217 	ldw	r18,8(sp)
    273c:	dc400117 	ldw	r17,4(sp)
    2740:	dc000017 	ldw	r16,0(sp)
    2744:	dec00504 	addi	sp,sp,20
    2748:	f800283a 	ret

0000274c <clearLCD>:

void clearLCD() {
    274c:	defffd04 	addi	sp,sp,-12
    2750:	dfc00215 	stw	ra,8(sp)
    2754:	df000115 	stw	fp,4(sp)
    2758:	df000104 	addi	fp,sp,4
	for (int i = 0; i < 16; i++) {
    275c:	e03fff15 	stw	zero,-4(fp)
    2760:	00000f06 	br	27a0 <clearLCD+0x54>
		alt_up_character_lcd_erase_pos(char_lcd_dev, i, 0);
    2764:	d0a73217 	ldw	r2,-25400(gp)
    2768:	e0ffff17 	ldw	r3,-4(fp)
    276c:	000d883a 	mov	r6,zero
    2770:	180b883a 	mov	r5,r3
    2774:	1009883a 	mov	r4,r2
    2778:	0018cc00 	call	18cc0 <alt_up_character_lcd_erase_pos>
		alt_up_character_lcd_erase_pos(char_lcd_dev, i, 1);
    277c:	d0a73217 	ldw	r2,-25400(gp)
    2780:	e0ffff17 	ldw	r3,-4(fp)
    2784:	01800044 	movi	r6,1
    2788:	180b883a 	mov	r5,r3
    278c:	1009883a 	mov	r4,r2
    2790:	0018cc00 	call	18cc0 <alt_up_character_lcd_erase_pos>
	for (int i = 0; i < 16; i++) {
    2794:	e0bfff17 	ldw	r2,-4(fp)
    2798:	10800044 	addi	r2,r2,1
    279c:	e0bfff15 	stw	r2,-4(fp)
    27a0:	e0bfff17 	ldw	r2,-4(fp)
    27a4:	10800410 	cmplti	r2,r2,16
    27a8:	103fee1e 	bne	r2,zero,2764 <clearLCD+0x18>
	}
}
    27ac:	0001883a 	nop
    27b0:	0001883a 	nop
    27b4:	e037883a 	mov	sp,fp
    27b8:	dfc00117 	ldw	ra,4(sp)
    27bc:	df000017 	ldw	fp,0(sp)
    27c0:	dec00204 	addi	sp,sp,8
    27c4:	f800283a 	ret

000027c8 <writeToLCD>:

void writeToLCD(char* first_row, char* second_row) {
    27c8:	defffc04 	addi	sp,sp,-16
    27cc:	dfc00315 	stw	ra,12(sp)
    27d0:	df000215 	stw	fp,8(sp)
    27d4:	df000204 	addi	fp,sp,8
    27d8:	e13fff15 	stw	r4,-4(fp)
    27dc:	e17ffe15 	stw	r5,-8(fp)
	clearLCD();
    27e0:	000274c0 	call	274c <clearLCD>
	alt_up_character_lcd_set_cursor_pos(char_lcd_dev, 0, 0);
    27e4:	d0a73217 	ldw	r2,-25400(gp)
    27e8:	000d883a 	mov	r6,zero
    27ec:	000b883a 	mov	r5,zero
    27f0:	1009883a 	mov	r4,r2
    27f4:	0018b340 	call	18b34 <alt_up_character_lcd_set_cursor_pos>
	alt_up_character_lcd_string(char_lcd_dev, first_row);
    27f8:	d0a73217 	ldw	r2,-25400(gp)
    27fc:	e17fff17 	ldw	r5,-4(fp)
    2800:	1009883a 	mov	r4,r2
    2804:	0018a680 	call	18a68 <alt_up_character_lcd_string>
	alt_up_character_lcd_set_cursor_pos(char_lcd_dev, 0, 1);
    2808:	d0a73217 	ldw	r2,-25400(gp)
    280c:	01800044 	movi	r6,1
    2810:	000b883a 	mov	r5,zero
    2814:	1009883a 	mov	r4,r2
    2818:	0018b340 	call	18b34 <alt_up_character_lcd_set_cursor_pos>
	alt_up_character_lcd_string(char_lcd_dev, second_row);
    281c:	d0a73217 	ldw	r2,-25400(gp)
    2820:	e17ffe17 	ldw	r5,-8(fp)
    2824:	1009883a 	mov	r4,r2
    2828:	0018a680 	call	18a68 <alt_up_character_lcd_string>
}
    282c:	0001883a 	nop
    2830:	e037883a 	mov	sp,fp
    2834:	dfc00117 	ldw	ra,4(sp)
    2838:	df000017 	ldw	fp,0(sp)
    283c:	dec00204 	addi	sp,sp,8
    2840:	f800283a 	ret

00002844 <GetCoefficient>:
 * binSize - the size of the spectralData array, usually a power of 2
 * m - The mth MFCC coefficient to compute
 *
 */
double GetCoefficient(double* spectralData, unsigned int samplingRate, unsigned int NumFilters, unsigned int binSize, unsigned int m)
{
    2844:	deffee04 	addi	sp,sp,-72
    2848:	dfc01115 	stw	ra,68(sp)
    284c:	df001015 	stw	fp,64(sp)
    2850:	dcc00f15 	stw	r19,60(sp)
    2854:	dc800e15 	stw	r18,56(sp)
    2858:	dc400d15 	stw	r17,52(sp)
    285c:	dc000c15 	stw	r16,48(sp)
    2860:	df001004 	addi	fp,sp,64
    2864:	e13ff315 	stw	r4,-52(fp)
    2868:	e17ff215 	stw	r5,-56(fp)
    286c:	e1bff115 	stw	r6,-60(fp)
    2870:	e1fff015 	stw	r7,-64(fp)
	double result = 0.0f;
    2874:	e03ff415 	stw	zero,-48(fp)
    2878:	e03ff515 	stw	zero,-44(fp)
	double outerSum = 0.0f;
    287c:	e03ffa15 	stw	zero,-24(fp)
    2880:	e03ffb15 	stw	zero,-20(fp)
	double innerSum = 0.0f;
    2884:	e03ff815 	stw	zero,-32(fp)
    2888:	e03ff915 	stw	zero,-28(fp)
	unsigned int k, l;

	// 0 <= m < L
	if(m >= NumFilters)
    288c:	e0c00217 	ldw	r3,8(fp)
    2890:	e0bff117 	ldw	r2,-60(fp)
    2894:	18800336 	bltu	r3,r2,28a4 <GetCoefficient+0x60>
	{
		// This represents an error condition - the specified coefficient is greater than or equal to the number of filters. The behavior in this case is undefined.
		return 0.0f;
    2898:	0005883a 	mov	r2,zero
    289c:	0007883a 	mov	r3,zero
    28a0:	00007f06 	br	2aa0 <GetCoefficient+0x25c>
	}

	result = NormalizationFactor(NumFilters, m);
    28a4:	e0bff117 	ldw	r2,-60(fp)
    28a8:	e0c00217 	ldw	r3,8(fp)
    28ac:	180b883a 	mov	r5,r3
    28b0:	1009883a 	mov	r4,r2
    28b4:	0002ad40 	call	2ad4 <NormalizationFactor>
    28b8:	e0bff415 	stw	r2,-48(fp)
    28bc:	e0fff515 	stw	r3,-44(fp)

	for(l = 1; l <= NumFilters; l++)
    28c0:	00800044 	movi	r2,1
    28c4:	e0bff615 	stw	r2,-40(fp)
    28c8:	00006706 	br	2a68 <GetCoefficient+0x224>
	{
		// Compute inner sum
		innerSum = 0.0f;
    28cc:	e03ff815 	stw	zero,-32(fp)
    28d0:	e03ff915 	stw	zero,-28(fp)
		for(k = 0; k < binSize - 1; k++)
    28d4:	e03ff715 	stw	zero,-36(fp)
    28d8:	00002606 	br	2974 <GetCoefficient+0x130>
		{
			innerSum += fabs(spectralData[k] * GetFilterParameter(samplingRate, binSize, k, l));
    28dc:	e0bff717 	ldw	r2,-36(fp)
    28e0:	100490fa 	slli	r2,r2,3
    28e4:	e0fff317 	ldw	r3,-52(fp)
    28e8:	1885883a 	add	r2,r3,r2
    28ec:	14000017 	ldw	r16,0(r2)
    28f0:	14400117 	ldw	r17,4(r2)
    28f4:	e1fff617 	ldw	r7,-40(fp)
    28f8:	e1bff717 	ldw	r6,-36(fp)
    28fc:	e17ff017 	ldw	r5,-64(fp)
    2900:	e13ff217 	ldw	r4,-56(fp)
    2904:	0002b9c0 	call	2b9c <GetFilterParameter>
    2908:	1009883a 	mov	r4,r2
    290c:	180b883a 	mov	r5,r3
    2910:	200d883a 	mov	r6,r4
    2914:	280f883a 	mov	r7,r5
    2918:	8009883a 	mov	r4,r16
    291c:	880b883a 	mov	r5,r17
    2920:	000b0800 	call	b080 <__muldf3>
    2924:	100d883a 	mov	r6,r2
    2928:	180f883a 	mov	r7,r3
    292c:	3009883a 	mov	r4,r6
    2930:	380b883a 	mov	r5,r7
    2934:	2025883a 	mov	r18,r4
    2938:	00a00034 	movhi	r2,32768
    293c:	10bfffc4 	addi	r2,r2,-1
    2940:	28a6703a 	and	r19,r5,r2
    2944:	900d883a 	mov	r6,r18
    2948:	980f883a 	mov	r7,r19
    294c:	e13ff817 	ldw	r4,-32(fp)
    2950:	e17ff917 	ldw	r5,-28(fp)
    2954:	0009c2c0 	call	9c2c <__adddf3>
    2958:	1009883a 	mov	r4,r2
    295c:	180b883a 	mov	r5,r3
    2960:	e13ff815 	stw	r4,-32(fp)
    2964:	e17ff915 	stw	r5,-28(fp)
		for(k = 0; k < binSize - 1; k++)
    2968:	e0bff717 	ldw	r2,-36(fp)
    296c:	10800044 	addi	r2,r2,1
    2970:	e0bff715 	stw	r2,-36(fp)
    2974:	e0bff017 	ldw	r2,-64(fp)
    2978:	10bfffc4 	addi	r2,r2,-1
    297c:	e0fff717 	ldw	r3,-36(fp)
    2980:	18bfd636 	bltu	r3,r2,28dc <GetCoefficient+0x98>
		}

		if(innerSum > 0.0f)
    2984:	000d883a 	mov	r6,zero
    2988:	000f883a 	mov	r7,zero
    298c:	e13ff817 	ldw	r4,-32(fp)
    2990:	e17ff917 	ldw	r5,-28(fp)
    2994:	000aeb00 	call	aeb0 <__gedf2>
    2998:	0080050e 	bge	zero,r2,29b0 <GetCoefficient+0x16c>
		{
			innerSum = log(innerSum); // The log of 0 is undefined, so don't use it
    299c:	e13ff817 	ldw	r4,-32(fp)
    29a0:	e17ff917 	ldw	r5,-28(fp)
    29a4:	00034c00 	call	34c0 <log>
    29a8:	e0bff815 	stw	r2,-32(fp)
    29ac:	e0fff915 	stw	r3,-28(fp)
		}

		innerSum = innerSum * cos(((m * PI) / NumFilters) * (l - 0.5f));
    29b0:	e1000217 	ldw	r4,8(fp)
    29b4:	0009b300 	call	9b30 <__floatunsisf>
    29b8:	1007883a 	mov	r3,r2
    29bc:	00901274 	movhi	r2,16457
    29c0:	1083f6c4 	addi	r2,r2,4059
    29c4:	18a1ff32 	custom	252,r16,r3,r2
    29c8:	e13ff117 	ldw	r4,-60(fp)
    29cc:	0009b300 	call	9b30 <__floatunsisf>
    29d0:	1007883a 	mov	r3,r2
    29d4:	80e1fff2 	custom	255,r16,r16,r3
    29d8:	e13ff617 	ldw	r4,-40(fp)
    29dc:	0009b300 	call	9b30 <__floatunsisf>
    29e0:	1007883a 	mov	r3,r2
    29e4:	008fc034 	movhi	r2,16128
    29e8:	1885ffb2 	custom	254,r2,r3,r2
    29ec:	8085ff32 	custom	252,r2,r16,r2
    29f0:	1009883a 	mov	r4,r2
    29f4:	000c3540 	call	c354 <__extendsfdf2>
    29f8:	100d883a 	mov	r6,r2
    29fc:	180f883a 	mov	r7,r3
    2a00:	3009883a 	mov	r4,r6
    2a04:	380b883a 	mov	r5,r7
    2a08:	00030cc0 	call	30cc <cos>
    2a0c:	1009883a 	mov	r4,r2
    2a10:	180b883a 	mov	r5,r3
    2a14:	200d883a 	mov	r6,r4
    2a18:	280f883a 	mov	r7,r5
    2a1c:	e13ff817 	ldw	r4,-32(fp)
    2a20:	e17ff917 	ldw	r5,-28(fp)
    2a24:	000b0800 	call	b080 <__muldf3>
    2a28:	1009883a 	mov	r4,r2
    2a2c:	180b883a 	mov	r5,r3
    2a30:	e13ff815 	stw	r4,-32(fp)
    2a34:	e17ff915 	stw	r5,-28(fp)


		outerSum += innerSum;
    2a38:	e1bff817 	ldw	r6,-32(fp)
    2a3c:	e1fff917 	ldw	r7,-28(fp)
    2a40:	e13ffa17 	ldw	r4,-24(fp)
    2a44:	e17ffb17 	ldw	r5,-20(fp)
    2a48:	0009c2c0 	call	9c2c <__adddf3>
    2a4c:	1009883a 	mov	r4,r2
    2a50:	180b883a 	mov	r5,r3
    2a54:	e13ffa15 	stw	r4,-24(fp)
    2a58:	e17ffb15 	stw	r5,-20(fp)
	for(l = 1; l <= NumFilters; l++)
    2a5c:	e0bff617 	ldw	r2,-40(fp)
    2a60:	10800044 	addi	r2,r2,1
    2a64:	e0bff615 	stw	r2,-40(fp)
    2a68:	e0bff617 	ldw	r2,-40(fp)
    2a6c:	e0fff117 	ldw	r3,-60(fp)
    2a70:	18bf962e 	bgeu	r3,r2,28cc <GetCoefficient+0x88>
	}

	result *= outerSum;
    2a74:	e1bffa17 	ldw	r6,-24(fp)
    2a78:	e1fffb17 	ldw	r7,-20(fp)
    2a7c:	e13ff417 	ldw	r4,-48(fp)
    2a80:	e17ff517 	ldw	r5,-44(fp)
    2a84:	000b0800 	call	b080 <__muldf3>
    2a88:	1009883a 	mov	r4,r2
    2a8c:	180b883a 	mov	r5,r3
    2a90:	e13ff415 	stw	r4,-48(fp)
    2a94:	e17ff515 	stw	r5,-44(fp)

	return result;
    2a98:	e0bff417 	ldw	r2,-48(fp)
    2a9c:	e0fff517 	ldw	r3,-44(fp)
}
    2aa0:	1009883a 	mov	r4,r2
    2aa4:	180b883a 	mov	r5,r3
    2aa8:	2005883a 	mov	r2,r4
    2aac:	2807883a 	mov	r3,r5
    2ab0:	e6fffc04 	addi	sp,fp,-16
    2ab4:	dfc00517 	ldw	ra,20(sp)
    2ab8:	df000417 	ldw	fp,16(sp)
    2abc:	dcc00317 	ldw	r19,12(sp)
    2ac0:	dc800217 	ldw	r18,8(sp)
    2ac4:	dc400117 	ldw	r17,4(sp)
    2ac8:	dc000017 	ldw	r16,0(sp)
    2acc:	dec00604 	addi	sp,sp,24
    2ad0:	f800283a 	ret

00002ad4 <NormalizationFactor>:
/*
 * Computes the Normalization Factor (Equation 6)
 * Used for internal computation only - not to be called directly
 */
double NormalizationFactor(int NumFilters, int m)
{
    2ad4:	defffa04 	addi	sp,sp,-24
    2ad8:	dfc00515 	stw	ra,20(sp)
    2adc:	df000415 	stw	fp,16(sp)
    2ae0:	df000404 	addi	fp,sp,16
    2ae4:	e13ffd15 	stw	r4,-12(fp)
    2ae8:	e17ffc15 	stw	r5,-16(fp)
	double normalizationFactor = 0.0f;
    2aec:	e03ffe15 	stw	zero,-8(fp)
    2af0:	e03fff15 	stw	zero,-4(fp)

	if(m == 0)
    2af4:	e0bffc17 	ldw	r2,-16(fp)
    2af8:	10000f1e 	bne	r2,zero,2b38 <NormalizationFactor+0x64>
	{
		normalizationFactor = sqrt(1.0f / NumFilters);
    2afc:	e13ffd17 	ldw	r4,-12(fp)
    2b00:	0009a0c0 	call	9a0c <__floatsisf>
    2b04:	1007883a 	mov	r3,r2
    2b08:	008fe034 	movhi	r2,16256
    2b0c:	10c5fff2 	custom	255,r2,r2,r3
    2b10:	1009883a 	mov	r4,r2
    2b14:	000c3540 	call	c354 <__extendsfdf2>
    2b18:	100d883a 	mov	r6,r2
    2b1c:	180f883a 	mov	r7,r3
    2b20:	3009883a 	mov	r4,r6
    2b24:	380b883a 	mov	r5,r7
    2b28:	00038400 	call	3840 <sqrt>
    2b2c:	e0bffe15 	stw	r2,-8(fp)
    2b30:	e0ffff15 	stw	r3,-4(fp)
    2b34:	00000e06 	br	2b70 <NormalizationFactor+0x9c>
	}
	else
	{
		normalizationFactor = sqrt(2.0f / NumFilters);
    2b38:	e13ffd17 	ldw	r4,-12(fp)
    2b3c:	0009a0c0 	call	9a0c <__floatsisf>
    2b40:	1007883a 	mov	r3,r2
    2b44:	00900034 	movhi	r2,16384
    2b48:	10c5fff2 	custom	255,r2,r2,r3
    2b4c:	1009883a 	mov	r4,r2
    2b50:	000c3540 	call	c354 <__extendsfdf2>
    2b54:	100d883a 	mov	r6,r2
    2b58:	180f883a 	mov	r7,r3
    2b5c:	3009883a 	mov	r4,r6
    2b60:	380b883a 	mov	r5,r7
    2b64:	00038400 	call	3840 <sqrt>
    2b68:	e0bffe15 	stw	r2,-8(fp)
    2b6c:	e0ffff15 	stw	r3,-4(fp)
	}

	return normalizationFactor;
    2b70:	e0bffe17 	ldw	r2,-8(fp)
    2b74:	e0ffff17 	ldw	r3,-4(fp)
    2b78:	1009883a 	mov	r4,r2
    2b7c:	180b883a 	mov	r5,r3
}
    2b80:	2005883a 	mov	r2,r4
    2b84:	2807883a 	mov	r3,r5
    2b88:	e037883a 	mov	sp,fp
    2b8c:	dfc00117 	ldw	ra,4(sp)
    2b90:	df000017 	ldw	fp,0(sp)
    2b94:	dec00204 	addi	sp,sp,8
    2b98:	f800283a 	ret

00002b9c <GetFilterParameter>:
/*
 * Compute the filter parameter for the specified frequency and filter bands (Eq. 2)
 * Used for internal computation only - not the be called directly
 */
double GetFilterParameter(unsigned int samplingRate, unsigned int binSize, unsigned int frequencyBand, unsigned int filterBand)
{
    2b9c:	deffee04 	addi	sp,sp,-72
    2ba0:	dfc01115 	stw	ra,68(sp)
    2ba4:	df001015 	stw	fp,64(sp)
    2ba8:	dc400f15 	stw	r17,60(sp)
    2bac:	dc000e15 	stw	r16,56(sp)
    2bb0:	df001004 	addi	fp,sp,64
    2bb4:	e13ff315 	stw	r4,-52(fp)
    2bb8:	e17ff215 	stw	r5,-56(fp)
    2bbc:	e1bff115 	stw	r6,-60(fp)
    2bc0:	e1fff015 	stw	r7,-64(fp)
	double filterParameter = 0.0f;
    2bc4:	e03ffc15 	stw	zero,-16(fp)
    2bc8:	e03ffd15 	stw	zero,-12(fp)

	double boundary = (frequencyBand * samplingRate) / binSize;		// k * Fs / N
    2bcc:	e17ff317 	ldw	r5,-52(fp)
    2bd0:	e13ff117 	ldw	r4,-60(fp)
    2bd4:	0008b4c0 	call	8b4c <__mulsi3>
    2bd8:	e17ff217 	ldw	r5,-56(fp)
    2bdc:	1009883a 	mov	r4,r2
    2be0:	0008a8c0 	call	8a8c <__udivsi3>
    2be4:	1009883a 	mov	r4,r2
    2be8:	000c2c40 	call	c2c4 <__floatunsidf>
    2bec:	1009883a 	mov	r4,r2
    2bf0:	180b883a 	mov	r5,r3
    2bf4:	e13ffa15 	stw	r4,-24(fp)
    2bf8:	e17ffb15 	stw	r5,-20(fp)
	double prevCenterFrequency = GetCenterFrequency(filterBand - 1);		// fc(l - 1) etc.
    2bfc:	e0bff017 	ldw	r2,-64(fp)
    2c00:	10bfffc4 	addi	r2,r2,-1
    2c04:	1009883a 	mov	r4,r2
    2c08:	0002fb00 	call	2fb0 <GetCenterFrequency>
    2c0c:	e0bff815 	stw	r2,-32(fp)
    2c10:	e0fff915 	stw	r3,-28(fp)
	double thisCenterFrequency = GetCenterFrequency(filterBand);
    2c14:	e13ff017 	ldw	r4,-64(fp)
    2c18:	0002fb00 	call	2fb0 <GetCenterFrequency>
    2c1c:	e0bff615 	stw	r2,-40(fp)
    2c20:	e0fff715 	stw	r3,-36(fp)
	double nextCenterFrequency = GetCenterFrequency(filterBand + 1);
    2c24:	e0bff017 	ldw	r2,-64(fp)
    2c28:	10800044 	addi	r2,r2,1
    2c2c:	1009883a 	mov	r4,r2
    2c30:	0002fb00 	call	2fb0 <GetCenterFrequency>
    2c34:	e0bff415 	stw	r2,-48(fp)
    2c38:	e0fff515 	stw	r3,-44(fp)

	if(boundary >= 0 && boundary < prevCenterFrequency)
    2c3c:	000d883a 	mov	r6,zero
    2c40:	000f883a 	mov	r7,zero
    2c44:	e13ffa17 	ldw	r4,-24(fp)
    2c48:	e17ffb17 	ldw	r5,-20(fp)
    2c4c:	000aeb00 	call	aeb0 <__gedf2>
    2c50:	10000916 	blt	r2,zero,2c78 <GetFilterParameter+0xdc>
    2c54:	e1bff817 	ldw	r6,-32(fp)
    2c58:	e1fff917 	ldw	r7,-28(fp)
    2c5c:	e13ffa17 	ldw	r4,-24(fp)
    2c60:	e17ffb17 	ldw	r5,-20(fp)
    2c64:	000af980 	call	af98 <__ledf2>
    2c68:	1000030e 	bge	r2,zero,2c78 <GetFilterParameter+0xdc>
	{
		filterParameter = 0.0f;
    2c6c:	e03ffc15 	stw	zero,-16(fp)
    2c70:	e03ffd15 	stw	zero,-12(fp)
    2c74:	00007c06 	br	2e68 <GetFilterParameter+0x2cc>
	}
	else if(boundary >= prevCenterFrequency && boundary < thisCenterFrequency)
    2c78:	e1bff817 	ldw	r6,-32(fp)
    2c7c:	e1fff917 	ldw	r7,-28(fp)
    2c80:	e13ffa17 	ldw	r4,-24(fp)
    2c84:	e17ffb17 	ldw	r5,-20(fp)
    2c88:	000aeb00 	call	aeb0 <__gedf2>
    2c8c:	10002f16 	blt	r2,zero,2d4c <GetFilterParameter+0x1b0>
    2c90:	e1bff617 	ldw	r6,-40(fp)
    2c94:	e1fff717 	ldw	r7,-36(fp)
    2c98:	e13ffa17 	ldw	r4,-24(fp)
    2c9c:	e17ffb17 	ldw	r5,-20(fp)
    2ca0:	000af980 	call	af98 <__ledf2>
    2ca4:	1000290e 	bge	r2,zero,2d4c <GetFilterParameter+0x1b0>
	{
		filterParameter = (boundary - prevCenterFrequency) / (thisCenterFrequency - prevCenterFrequency);
    2ca8:	e1bff817 	ldw	r6,-32(fp)
    2cac:	e1fff917 	ldw	r7,-28(fp)
    2cb0:	e13ffa17 	ldw	r4,-24(fp)
    2cb4:	e17ffb17 	ldw	r5,-20(fp)
    2cb8:	000b82c0 	call	b82c <__subdf3>
    2cbc:	1009883a 	mov	r4,r2
    2cc0:	180b883a 	mov	r5,r3
    2cc4:	2021883a 	mov	r16,r4
    2cc8:	2823883a 	mov	r17,r5
    2ccc:	e1bff817 	ldw	r6,-32(fp)
    2cd0:	e1fff917 	ldw	r7,-28(fp)
    2cd4:	e13ff617 	ldw	r4,-40(fp)
    2cd8:	e17ff717 	ldw	r5,-36(fp)
    2cdc:	000b82c0 	call	b82c <__subdf3>
    2ce0:	1009883a 	mov	r4,r2
    2ce4:	180b883a 	mov	r5,r3
    2ce8:	2005883a 	mov	r2,r4
    2cec:	2807883a 	mov	r3,r5
    2cf0:	100d883a 	mov	r6,r2
    2cf4:	180f883a 	mov	r7,r3
    2cf8:	8009883a 	mov	r4,r16
    2cfc:	880b883a 	mov	r5,r17
    2d00:	000a51c0 	call	a51c <__divdf3>
    2d04:	1009883a 	mov	r4,r2
    2d08:	180b883a 	mov	r5,r3
    2d0c:	e13ffc15 	stw	r4,-16(fp)
    2d10:	e17ffd15 	stw	r5,-12(fp)
		filterParameter *= GetMagnitudeFactor(filterBand);
    2d14:	e13ff017 	ldw	r4,-64(fp)
    2d18:	0002e9c0 	call	2e9c <GetMagnitudeFactor>
    2d1c:	1009883a 	mov	r4,r2
    2d20:	180b883a 	mov	r5,r3
    2d24:	200d883a 	mov	r6,r4
    2d28:	280f883a 	mov	r7,r5
    2d2c:	e13ffc17 	ldw	r4,-16(fp)
    2d30:	e17ffd17 	ldw	r5,-12(fp)
    2d34:	000b0800 	call	b080 <__muldf3>
    2d38:	1009883a 	mov	r4,r2
    2d3c:	180b883a 	mov	r5,r3
    2d40:	e13ffc15 	stw	r4,-16(fp)
    2d44:	e17ffd15 	stw	r5,-12(fp)
    2d48:	00004706 	br	2e68 <GetFilterParameter+0x2cc>
	}
	else if(boundary >= thisCenterFrequency && boundary < nextCenterFrequency)
    2d4c:	e1bff617 	ldw	r6,-40(fp)
    2d50:	e1fff717 	ldw	r7,-36(fp)
    2d54:	e13ffa17 	ldw	r4,-24(fp)
    2d58:	e17ffb17 	ldw	r5,-20(fp)
    2d5c:	000aeb00 	call	aeb0 <__gedf2>
    2d60:	10002f16 	blt	r2,zero,2e20 <GetFilterParameter+0x284>
    2d64:	e1bff417 	ldw	r6,-48(fp)
    2d68:	e1fff517 	ldw	r7,-44(fp)
    2d6c:	e13ffa17 	ldw	r4,-24(fp)
    2d70:	e17ffb17 	ldw	r5,-20(fp)
    2d74:	000af980 	call	af98 <__ledf2>
    2d78:	1000290e 	bge	r2,zero,2e20 <GetFilterParameter+0x284>
	{
		filterParameter = (boundary - nextCenterFrequency) / (thisCenterFrequency - nextCenterFrequency);
    2d7c:	e1bff417 	ldw	r6,-48(fp)
    2d80:	e1fff517 	ldw	r7,-44(fp)
    2d84:	e13ffa17 	ldw	r4,-24(fp)
    2d88:	e17ffb17 	ldw	r5,-20(fp)
    2d8c:	000b82c0 	call	b82c <__subdf3>
    2d90:	1009883a 	mov	r4,r2
    2d94:	180b883a 	mov	r5,r3
    2d98:	2021883a 	mov	r16,r4
    2d9c:	2823883a 	mov	r17,r5
    2da0:	e1bff417 	ldw	r6,-48(fp)
    2da4:	e1fff517 	ldw	r7,-44(fp)
    2da8:	e13ff617 	ldw	r4,-40(fp)
    2dac:	e17ff717 	ldw	r5,-36(fp)
    2db0:	000b82c0 	call	b82c <__subdf3>
    2db4:	1009883a 	mov	r4,r2
    2db8:	180b883a 	mov	r5,r3
    2dbc:	2005883a 	mov	r2,r4
    2dc0:	2807883a 	mov	r3,r5
    2dc4:	100d883a 	mov	r6,r2
    2dc8:	180f883a 	mov	r7,r3
    2dcc:	8009883a 	mov	r4,r16
    2dd0:	880b883a 	mov	r5,r17
    2dd4:	000a51c0 	call	a51c <__divdf3>
    2dd8:	1009883a 	mov	r4,r2
    2ddc:	180b883a 	mov	r5,r3
    2de0:	e13ffc15 	stw	r4,-16(fp)
    2de4:	e17ffd15 	stw	r5,-12(fp)
		filterParameter *= GetMagnitudeFactor(filterBand);
    2de8:	e13ff017 	ldw	r4,-64(fp)
    2dec:	0002e9c0 	call	2e9c <GetMagnitudeFactor>
    2df0:	1009883a 	mov	r4,r2
    2df4:	180b883a 	mov	r5,r3
    2df8:	200d883a 	mov	r6,r4
    2dfc:	280f883a 	mov	r7,r5
    2e00:	e13ffc17 	ldw	r4,-16(fp)
    2e04:	e17ffd17 	ldw	r5,-12(fp)
    2e08:	000b0800 	call	b080 <__muldf3>
    2e0c:	1009883a 	mov	r4,r2
    2e10:	180b883a 	mov	r5,r3
    2e14:	e13ffc15 	stw	r4,-16(fp)
    2e18:	e17ffd15 	stw	r5,-12(fp)
    2e1c:	00001206 	br	2e68 <GetFilterParameter+0x2cc>
	}
	else if(boundary >= nextCenterFrequency && boundary < samplingRate)
    2e20:	e1bff417 	ldw	r6,-48(fp)
    2e24:	e1fff517 	ldw	r7,-44(fp)
    2e28:	e13ffa17 	ldw	r4,-24(fp)
    2e2c:	e17ffb17 	ldw	r5,-20(fp)
    2e30:	000aeb00 	call	aeb0 <__gedf2>
    2e34:	10000c16 	blt	r2,zero,2e68 <GetFilterParameter+0x2cc>
    2e38:	e13ff317 	ldw	r4,-52(fp)
    2e3c:	000c2c40 	call	c2c4 <__floatunsidf>
    2e40:	1009883a 	mov	r4,r2
    2e44:	180b883a 	mov	r5,r3
    2e48:	200d883a 	mov	r6,r4
    2e4c:	280f883a 	mov	r7,r5
    2e50:	e13ffa17 	ldw	r4,-24(fp)
    2e54:	e17ffb17 	ldw	r5,-20(fp)
    2e58:	000af980 	call	af98 <__ledf2>
    2e5c:	1000020e 	bge	r2,zero,2e68 <GetFilterParameter+0x2cc>
	{
		filterParameter = 0.0f;
    2e60:	e03ffc15 	stw	zero,-16(fp)
    2e64:	e03ffd15 	stw	zero,-12(fp)
	}

	return filterParameter;
    2e68:	e0bffc17 	ldw	r2,-16(fp)
    2e6c:	e0fffd17 	ldw	r3,-12(fp)
    2e70:	1009883a 	mov	r4,r2
    2e74:	180b883a 	mov	r5,r3
}
    2e78:	2005883a 	mov	r2,r4
    2e7c:	2807883a 	mov	r3,r5
    2e80:	e6fffe04 	addi	sp,fp,-8
    2e84:	dfc00317 	ldw	ra,12(sp)
    2e88:	df000217 	ldw	fp,8(sp)
    2e8c:	dc400117 	ldw	r17,4(sp)
    2e90:	dc000017 	ldw	r16,0(sp)
    2e94:	dec00404 	addi	sp,sp,16
    2e98:	f800283a 	ret

00002e9c <GetMagnitudeFactor>:
/*
 * Compute the band-dependent magnitude factor for the given filter band (Eq. 3)
 * Used for internal computation only - not the be called directly
 */
double GetMagnitudeFactor(unsigned int filterBand)
{
    2e9c:	defff904 	addi	sp,sp,-28
    2ea0:	dfc00615 	stw	ra,24(sp)
    2ea4:	df000515 	stw	fp,20(sp)
    2ea8:	dc400415 	stw	r17,16(sp)
    2eac:	dc000315 	stw	r16,12(sp)
    2eb0:	df000504 	addi	fp,sp,20
    2eb4:	e13ffb15 	stw	r4,-20(fp)
	double magnitudeFactor = 0.0f;
    2eb8:	e03ffc15 	stw	zero,-16(fp)
    2ebc:	e03ffd15 	stw	zero,-12(fp)

	if(filterBand >= 1 && filterBand <= 14)
    2ec0:	e0bffb17 	ldw	r2,-20(fp)
    2ec4:	10000926 	beq	r2,zero,2eec <GetMagnitudeFactor+0x50>
    2ec8:	e0bffb17 	ldw	r2,-20(fp)
    2ecc:	108003e8 	cmpgeui	r2,r2,15
    2ed0:	1000061e 	bne	r2,zero,2eec <GetMagnitudeFactor+0x50>
	{
		magnitudeFactor = 0.015;
    2ed4:	00b80034 	movhi	r2,57344
    2ed8:	e0bffc15 	stw	r2,-16(fp)
    2edc:	008fe3f4 	movhi	r2,16271
    2ee0:	10ae1444 	addi	r2,r2,-18351
    2ee4:	e0bffd15 	stw	r2,-12(fp)
    2ee8:	00002406 	br	2f7c <GetMagnitudeFactor+0xe0>
	}
	else if(filterBand >= 15 && filterBand <= 48)
    2eec:	e0bffb17 	ldw	r2,-20(fp)
    2ef0:	108003f0 	cmpltui	r2,r2,15
    2ef4:	1000211e 	bne	r2,zero,2f7c <GetMagnitudeFactor+0xe0>
    2ef8:	e0bffb17 	ldw	r2,-20(fp)
    2efc:	10800c68 	cmpgeui	r2,r2,49
    2f00:	10001e1e 	bne	r2,zero,2f7c <GetMagnitudeFactor+0xe0>
	{
		magnitudeFactor = 2.0f / (GetCenterFrequency(filterBand + 1) - GetCenterFrequency(filterBand -1));
    2f04:	e0bffb17 	ldw	r2,-20(fp)
    2f08:	10800044 	addi	r2,r2,1
    2f0c:	1009883a 	mov	r4,r2
    2f10:	0002fb00 	call	2fb0 <GetCenterFrequency>
    2f14:	1021883a 	mov	r16,r2
    2f18:	1823883a 	mov	r17,r3
    2f1c:	e0bffb17 	ldw	r2,-20(fp)
    2f20:	10bfffc4 	addi	r2,r2,-1
    2f24:	1009883a 	mov	r4,r2
    2f28:	0002fb00 	call	2fb0 <GetCenterFrequency>
    2f2c:	1009883a 	mov	r4,r2
    2f30:	180b883a 	mov	r5,r3
    2f34:	200d883a 	mov	r6,r4
    2f38:	280f883a 	mov	r7,r5
    2f3c:	8009883a 	mov	r4,r16
    2f40:	880b883a 	mov	r5,r17
    2f44:	000b82c0 	call	b82c <__subdf3>
    2f48:	1009883a 	mov	r4,r2
    2f4c:	180b883a 	mov	r5,r3
    2f50:	2005883a 	mov	r2,r4
    2f54:	2807883a 	mov	r3,r5
    2f58:	100d883a 	mov	r6,r2
    2f5c:	180f883a 	mov	r7,r3
    2f60:	0009883a 	mov	r4,zero
    2f64:	01500034 	movhi	r5,16384
    2f68:	000a51c0 	call	a51c <__divdf3>
    2f6c:	1009883a 	mov	r4,r2
    2f70:	180b883a 	mov	r5,r3
    2f74:	e13ffc15 	stw	r4,-16(fp)
    2f78:	e17ffd15 	stw	r5,-12(fp)
	}

	return magnitudeFactor;
    2f7c:	e0bffc17 	ldw	r2,-16(fp)
    2f80:	e0fffd17 	ldw	r3,-12(fp)
    2f84:	1009883a 	mov	r4,r2
    2f88:	180b883a 	mov	r5,r3
}
    2f8c:	2005883a 	mov	r2,r4
    2f90:	2807883a 	mov	r3,r5
    2f94:	e6fffe04 	addi	sp,fp,-8
    2f98:	dfc00317 	ldw	ra,12(sp)
    2f9c:	df000217 	ldw	fp,8(sp)
    2fa0:	dc400117 	ldw	r17,4(sp)
    2fa4:	dc000017 	ldw	r16,0(sp)
    2fa8:	dec00404 	addi	sp,sp,16
    2fac:	f800283a 	ret

00002fb0 <GetCenterFrequency>:
 * This where the mel-frequency scaling occurs. Filters are specified so that their
 * center frequencies are equally spaced on the mel scale
 * Used for internal computation only - not the be called directly
 */
double GetCenterFrequency(unsigned int filterBand)
{
    2fb0:	defff904 	addi	sp,sp,-28
    2fb4:	dfc00615 	stw	ra,24(sp)
    2fb8:	df000515 	stw	fp,20(sp)
    2fbc:	df000504 	addi	fp,sp,20
    2fc0:	e13ffb15 	stw	r4,-20(fp)
	double centerFrequency = 0.0f;
    2fc4:	e03ffe15 	stw	zero,-8(fp)
    2fc8:	e03fff15 	stw	zero,-4(fp)
	double exponent;

	if(filterBand == 0)
    2fcc:	e0bffb17 	ldw	r2,-20(fp)
    2fd0:	1000031e 	bne	r2,zero,2fe0 <GetCenterFrequency+0x30>
	{
		centerFrequency = 0;
    2fd4:	e03ffe15 	stw	zero,-8(fp)
    2fd8:	e03fff15 	stw	zero,-4(fp)
    2fdc:	00003006 	br	30a0 <GetCenterFrequency+0xf0>
	}
	else if(filterBand >= 1 && filterBand <= 14)
    2fe0:	e0bffb17 	ldw	r2,-20(fp)
    2fe4:	10001126 	beq	r2,zero,302c <GetCenterFrequency+0x7c>
    2fe8:	e0bffb17 	ldw	r2,-20(fp)
    2fec:	108003e8 	cmpgeui	r2,r2,15
    2ff0:	10000e1e 	bne	r2,zero,302c <GetCenterFrequency+0x7c>
	{
		centerFrequency = (200.0f * filterBand) / 3.0f;
    2ff4:	e13ffb17 	ldw	r4,-20(fp)
    2ff8:	0009b300 	call	9b30 <__floatunsisf>
    2ffc:	1007883a 	mov	r3,r2
    3000:	0090d234 	movhi	r2,17224
    3004:	1887ff32 	custom	252,r3,r3,r2
    3008:	00901034 	movhi	r2,16448
    300c:	1885fff2 	custom	255,r2,r3,r2
    3010:	1009883a 	mov	r4,r2
    3014:	000c3540 	call	c354 <__extendsfdf2>
    3018:	1009883a 	mov	r4,r2
    301c:	180b883a 	mov	r5,r3
    3020:	e13ffe15 	stw	r4,-8(fp)
    3024:	e17fff15 	stw	r5,-4(fp)
    3028:	00001d06 	br	30a0 <GetCenterFrequency+0xf0>
	}
	else
	{
		exponent = filterBand - 14.0f;
    302c:	e13ffb17 	ldw	r4,-20(fp)
    3030:	0009b300 	call	9b30 <__floatunsisf>
    3034:	1007883a 	mov	r3,r2
    3038:	00905834 	movhi	r2,16736
    303c:	1885ffb2 	custom	254,r2,r3,r2
    3040:	1009883a 	mov	r4,r2
    3044:	000c3540 	call	c354 <__extendsfdf2>
    3048:	1009883a 	mov	r4,r2
    304c:	180b883a 	mov	r5,r3
    3050:	e13ffc15 	stw	r4,-16(fp)
    3054:	e17ffd15 	stw	r5,-12(fp)
		centerFrequency = pow(1.0711703, exponent);
    3058:	e1bffc17 	ldw	r6,-16(fp)
    305c:	e1fffd17 	ldw	r7,-12(fp)
    3060:	01200034 	movhi	r4,32768
    3064:	014ffc74 	movhi	r5,16369
    3068:	2948e0c4 	addi	r5,r5,9091
    306c:	00035840 	call	3584 <pow>
    3070:	e0bffe15 	stw	r2,-8(fp)
    3074:	e0ffff15 	stw	r3,-4(fp)
		centerFrequency *= 1073.4;
    3078:	01a80034 	movhi	r6,40960
    307c:	01d02474 	movhi	r7,16529
    3080:	39f16644 	addi	r7,r7,-14951
    3084:	e13ffe17 	ldw	r4,-8(fp)
    3088:	e17fff17 	ldw	r5,-4(fp)
    308c:	000b0800 	call	b080 <__muldf3>
    3090:	1009883a 	mov	r4,r2
    3094:	180b883a 	mov	r5,r3
    3098:	e13ffe15 	stw	r4,-8(fp)
    309c:	e17fff15 	stw	r5,-4(fp)
	}

	return centerFrequency;
    30a0:	e0bffe17 	ldw	r2,-8(fp)
    30a4:	e0ffff17 	ldw	r3,-4(fp)
    30a8:	1009883a 	mov	r4,r2
    30ac:	180b883a 	mov	r5,r3
}
    30b0:	2005883a 	mov	r2,r4
    30b4:	2807883a 	mov	r3,r5
    30b8:	e037883a 	mov	sp,fp
    30bc:	dfc00117 	ldw	ra,4(sp)
    30c0:	df000017 	ldw	fp,0(sp)
    30c4:	dec00204 	addi	sp,sp,8
    30c8:	f800283a 	ret

000030cc <cos>:
    30cc:	00a00034 	movhi	r2,32768
    30d0:	10bfffc4 	addi	r2,r2,-1
    30d4:	00cffa74 	movhi	r3,16361
    30d8:	2884703a 	and	r2,r5,r2
    30dc:	18c87ec4 	addi	r3,r3,8699
    30e0:	18801a0e 	bge	r3,r2,314c <cos+0x80>
    30e4:	defffa04 	addi	sp,sp,-24
    30e8:	dfc00515 	stw	ra,20(sp)
    30ec:	00dffc34 	movhi	r3,32752
    30f0:	10c00616 	blt	r2,r3,310c <cos+0x40>
    30f4:	280f883a 	mov	r7,r5
    30f8:	200d883a 	mov	r6,r4
    30fc:	000b82c0 	call	b82c <__subdf3>
    3100:	dfc00517 	ldw	ra,20(sp)
    3104:	dec00604 	addi	sp,sp,24
    3108:	f800283a 	ret
    310c:	d9800104 	addi	r6,sp,4
    3110:	00050800 	call	5080 <__ieee754_rem_pio2>
    3114:	108000cc 	andi	r2,r2,3
    3118:	10c00060 	cmpeqi	r3,r2,1
    311c:	d9800317 	ldw	r6,12(sp)
    3120:	d9c00417 	ldw	r7,16(sp)
    3124:	d9000117 	ldw	r4,4(sp)
    3128:	d9400217 	ldw	r5,8(sp)
    312c:	18000a1e 	bne	r3,zero,3158 <cos+0x8c>
    3130:	10c000a0 	cmpeqi	r3,r2,2
    3134:	18000e1e 	bne	r3,zero,3170 <cos+0xa4>
    3138:	10000b26 	beq	r2,zero,3168 <cos+0x9c>
    313c:	00800044 	movi	r2,1
    3140:	d8800015 	stw	r2,0(sp)
    3144:	00070f40 	call	70f4 <__kernel_sin>
    3148:	003fed06 	br	3100 <cos+0x34>
    314c:	000d883a 	mov	r6,zero
    3150:	000f883a 	mov	r7,zero
    3154:	0005f341 	jmpi	5f34 <__kernel_cos>
    3158:	d8800015 	stw	r2,0(sp)
    315c:	00070f40 	call	70f4 <__kernel_sin>
    3160:	18e0003c 	xorhi	r3,r3,32768
    3164:	003fe606 	br	3100 <cos+0x34>
    3168:	0005f340 	call	5f34 <__kernel_cos>
    316c:	003fe406 	br	3100 <cos+0x34>
    3170:	0005f340 	call	5f34 <__kernel_cos>
    3174:	18e0003c 	xorhi	r3,r3,32768
    3178:	003fe106 	br	3100 <cos+0x34>

0000317c <floor>:
    317c:	280fd53a 	srai	r7,r5,20
    3180:	defffb04 	addi	sp,sp,-20
    3184:	dc800215 	stw	r18,8(sp)
    3188:	39c1ffcc 	andi	r7,r7,2047
    318c:	3cbf0044 	addi	r18,r7,-1023
    3190:	dc400115 	stw	r17,4(sp)
    3194:	dc000015 	stw	r16,0(sp)
    3198:	dfc00415 	stw	ra,16(sp)
    319c:	dcc00315 	stw	r19,12(sp)
    31a0:	90800508 	cmpgei	r2,r18,20
    31a4:	2821883a 	mov	r16,r5
    31a8:	200d883a 	mov	r6,r4
    31ac:	2023883a 	mov	r17,r4
    31b0:	10002b1e 	bne	r2,zero,3260 <floor+0xe4>
    31b4:	90001b16 	blt	r18,zero,3224 <floor+0xa8>
    31b8:	00800434 	movhi	r2,16
    31bc:	10bfffc4 	addi	r2,r2,-1
    31c0:	14a7d83a 	sra	r19,r2,r18
    31c4:	2cc4703a 	and	r2,r5,r19
    31c8:	1104b03a 	or	r2,r2,r4
    31cc:	10002826 	beq	r2,zero,3270 <floor+0xf4>
    31d0:	01a20034 	movhi	r6,34816
    31d4:	01df8e34 	movhi	r7,32312
    31d8:	319d6704 	addi	r6,r6,30108
    31dc:	39f90f04 	addi	r7,r7,-7108
    31e0:	0009c2c0 	call	9c2c <__adddf3>
    31e4:	000d883a 	mov	r6,zero
    31e8:	000f883a 	mov	r7,zero
    31ec:	1009883a 	mov	r4,r2
    31f0:	180b883a 	mov	r5,r3
    31f4:	000aeb00 	call	aeb0 <__gedf2>
    31f8:	0080070e 	bge	zero,r2,3218 <floor+0x9c>
    31fc:	8000030e 	bge	r16,zero,320c <floor+0x90>
    3200:	00800434 	movhi	r2,16
    3204:	14a5d83a 	sra	r18,r2,r18
    3208:	9421883a 	add	r16,r18,r16
    320c:	04c4303a 	nor	r2,zero,r19
    3210:	80a0703a 	and	r16,r16,r2
    3214:	0023883a 	mov	r17,zero
    3218:	8805883a 	mov	r2,r17
    321c:	8007883a 	mov	r3,r16
    3220:	00001506 	br	3278 <floor+0xfc>
    3224:	01a20034 	movhi	r6,34816
    3228:	01df8e34 	movhi	r7,32312
    322c:	319d6704 	addi	r6,r6,30108
    3230:	39f90f04 	addi	r7,r7,-7108
    3234:	0009c2c0 	call	9c2c <__adddf3>
    3238:	000d883a 	mov	r6,zero
    323c:	000f883a 	mov	r7,zero
    3240:	1009883a 	mov	r4,r2
    3244:	180b883a 	mov	r5,r3
    3248:	000aeb00 	call	aeb0 <__gedf2>
    324c:	00bff20e 	bge	zero,r2,3218 <floor+0x9c>
    3250:	80002a16 	blt	r16,zero,32fc <floor+0x180>
    3254:	0023883a 	mov	r17,zero
    3258:	0021883a 	mov	r16,zero
    325c:	003fee06 	br	3218 <floor+0x9c>
    3260:	90800d10 	cmplti	r2,r18,52
    3264:	10000b1e 	bne	r2,zero,3294 <floor+0x118>
    3268:	94810018 	cmpnei	r18,r18,1024
    326c:	90001d26 	beq	r18,zero,32e4 <floor+0x168>
    3270:	3005883a 	mov	r2,r6
    3274:	8007883a 	mov	r3,r16
    3278:	dfc00417 	ldw	ra,16(sp)
    327c:	dcc00317 	ldw	r19,12(sp)
    3280:	dc800217 	ldw	r18,8(sp)
    3284:	dc400117 	ldw	r17,4(sp)
    3288:	dc000017 	ldw	r16,0(sp)
    328c:	dec00504 	addi	sp,sp,20
    3290:	f800283a 	ret
    3294:	39fefb44 	addi	r7,r7,-1043
    3298:	04ffffc4 	movi	r19,-1
    329c:	99e6d83a 	srl	r19,r19,r7
    32a0:	9904703a 	and	r2,r19,r4
    32a4:	10001226 	beq	r2,zero,32f0 <floor+0x174>
    32a8:	01a20034 	movhi	r6,34816
    32ac:	01df8e34 	movhi	r7,32312
    32b0:	319d6704 	addi	r6,r6,30108
    32b4:	39f90f04 	addi	r7,r7,-7108
    32b8:	0009c2c0 	call	9c2c <__adddf3>
    32bc:	000d883a 	mov	r6,zero
    32c0:	000f883a 	mov	r7,zero
    32c4:	1009883a 	mov	r4,r2
    32c8:	180b883a 	mov	r5,r3
    32cc:	000aeb00 	call	aeb0 <__gedf2>
    32d0:	00bfd10e 	bge	zero,r2,3218 <floor+0x9c>
    32d4:	80001116 	blt	r16,zero,331c <floor+0x1a0>
    32d8:	04ce303a 	nor	r7,zero,r19
    32dc:	89e2703a 	and	r17,r17,r7
    32e0:	003fcd06 	br	3218 <floor+0x9c>
    32e4:	280f883a 	mov	r7,r5
    32e8:	0009c2c0 	call	9c2c <__adddf3>
    32ec:	003fe206 	br	3278 <floor+0xfc>
    32f0:	2807883a 	mov	r3,r5
    32f4:	2005883a 	mov	r2,r4
    32f8:	003fdf06 	br	3278 <floor+0xfc>
    32fc:	00a00034 	movhi	r2,32768
    3300:	10bfffc4 	addi	r2,r2,-1
    3304:	8084703a 	and	r2,r16,r2
    3308:	1462b03a 	or	r17,r2,r17
    330c:	88000e26 	beq	r17,zero,3348 <floor+0x1cc>
    3310:	0023883a 	mov	r17,zero
    3314:	042ffc34 	movhi	r16,49136
    3318:	003fbf06 	br	3218 <floor+0x9c>
    331c:	90800518 	cmpnei	r2,r18,20
    3320:	10000b26 	beq	r2,zero,3350 <floor+0x1d4>
    3324:	00800d04 	movi	r2,52
    3328:	14a5c83a 	sub	r18,r2,r18
    332c:	00800044 	movi	r2,1
    3330:	1484983a 	sll	r2,r2,r18
    3334:	1445883a 	add	r2,r2,r17
    3338:	1440072e 	bgeu	r2,r17,3358 <floor+0x1dc>
    333c:	84000044 	addi	r16,r16,1
    3340:	1023883a 	mov	r17,r2
    3344:	003fe406 	br	32d8 <floor+0x15c>
    3348:	0023883a 	mov	r17,zero
    334c:	003fb206 	br	3218 <floor+0x9c>
    3350:	84000044 	addi	r16,r16,1
    3354:	003fe006 	br	32d8 <floor+0x15c>
    3358:	1023883a 	mov	r17,r2
    335c:	003fde06 	br	32d8 <floor+0x15c>

00003360 <sin>:
    3360:	00a00034 	movhi	r2,32768
    3364:	defffa04 	addi	sp,sp,-24
    3368:	10bfffc4 	addi	r2,r2,-1
    336c:	00cffa74 	movhi	r3,16361
    3370:	dfc00515 	stw	ra,20(sp)
    3374:	2884703a 	and	r2,r5,r2
    3378:	18c87ec4 	addi	r3,r3,8699
    337c:	1880170e 	bge	r3,r2,33dc <sin+0x7c>
    3380:	00dffc34 	movhi	r3,32752
    3384:	10c00616 	blt	r2,r3,33a0 <sin+0x40>
    3388:	280f883a 	mov	r7,r5
    338c:	200d883a 	mov	r6,r4
    3390:	000b82c0 	call	b82c <__subdf3>
    3394:	dfc00517 	ldw	ra,20(sp)
    3398:	dec00604 	addi	sp,sp,24
    339c:	f800283a 	ret
    33a0:	d9800104 	addi	r6,sp,4
    33a4:	00050800 	call	5080 <__ieee754_rem_pio2>
    33a8:	108000cc 	andi	r2,r2,3
    33ac:	10c00060 	cmpeqi	r3,r2,1
    33b0:	d9800317 	ldw	r6,12(sp)
    33b4:	d9c00417 	ldw	r7,16(sp)
    33b8:	d9000117 	ldw	r4,4(sp)
    33bc:	d9400217 	ldw	r5,8(sp)
    33c0:	18000d1e 	bne	r3,zero,33f8 <sin+0x98>
    33c4:	10c000a0 	cmpeqi	r3,r2,2
    33c8:	1800111e 	bne	r3,zero,3410 <sin+0xb0>
    33cc:	10000c26 	beq	r2,zero,3400 <sin+0xa0>
    33d0:	0005f340 	call	5f34 <__kernel_cos>
    33d4:	18e0003c 	xorhi	r3,r3,32768
    33d8:	003fee06 	br	3394 <sin+0x34>
    33dc:	d8000015 	stw	zero,0(sp)
    33e0:	000d883a 	mov	r6,zero
    33e4:	000f883a 	mov	r7,zero
    33e8:	00070f40 	call	70f4 <__kernel_sin>
    33ec:	dfc00517 	ldw	ra,20(sp)
    33f0:	dec00604 	addi	sp,sp,24
    33f4:	f800283a 	ret
    33f8:	0005f340 	call	5f34 <__kernel_cos>
    33fc:	003fe506 	br	3394 <sin+0x34>
    3400:	00800044 	movi	r2,1
    3404:	d8800015 	stw	r2,0(sp)
    3408:	00070f40 	call	70f4 <__kernel_sin>
    340c:	003fe106 	br	3394 <sin+0x34>
    3410:	00800044 	movi	r2,1
    3414:	d8800015 	stw	r2,0(sp)
    3418:	00070f40 	call	70f4 <__kernel_sin>
    341c:	18e0003c 	xorhi	r3,r3,32768
    3420:	003fdc06 	br	3394 <sin+0x34>

00003424 <cosf>:
    3424:	00a00034 	movhi	r2,32768
    3428:	10bfffc4 	addi	r2,r2,-1
    342c:	00cfd274 	movhi	r3,16201
    3430:	1104703a 	and	r2,r2,r4
    3434:	18c3f604 	addi	r3,r3,4056
    3438:	1880160e 	bge	r3,r2,3494 <cosf+0x70>
    343c:	defffd04 	addi	sp,sp,-12
    3440:	dfc00215 	stw	ra,8(sp)
    3444:	00dfe034 	movhi	r3,32640
    3448:	10c00516 	blt	r2,r3,3460 <cosf+0x3c>
    344c:	200b883a 	mov	r5,r4
    3450:	00095080 	call	9508 <__subsf3>
    3454:	dfc00217 	ldw	ra,8(sp)
    3458:	dec00304 	addi	sp,sp,12
    345c:	f800283a 	ret
    3460:	d80b883a 	mov	r5,sp
    3464:	0005a380 	call	5a38 <__ieee754_rem_pio2f>
    3468:	108000cc 	andi	r2,r2,3
    346c:	10c00060 	cmpeqi	r3,r2,1
    3470:	d9400117 	ldw	r5,4(sp)
    3474:	d9000017 	ldw	r4,0(sp)
    3478:	1800081e 	bne	r3,zero,349c <cosf+0x78>
    347c:	10c000a0 	cmpeqi	r3,r2,2
    3480:	18000c1e 	bne	r3,zero,34b4 <cosf+0x90>
    3484:	10000926 	beq	r2,zero,34ac <cosf+0x88>
    3488:	01800044 	movi	r6,1
    348c:	00081440 	call	8144 <__kernel_sinf>
    3490:	003ff006 	br	3454 <cosf+0x30>
    3494:	000b883a 	mov	r5,zero
    3498:	00073bc1 	jmpi	73bc <__kernel_cosf>
    349c:	01800044 	movi	r6,1
    34a0:	00081440 	call	8144 <__kernel_sinf>
    34a4:	10a0003c 	xorhi	r2,r2,32768
    34a8:	003fea06 	br	3454 <cosf+0x30>
    34ac:	00073bc0 	call	73bc <__kernel_cosf>
    34b0:	003fe806 	br	3454 <cosf+0x30>
    34b4:	00073bc0 	call	73bc <__kernel_cosf>
    34b8:	10a0003c 	xorhi	r2,r2,32768
    34bc:	003fe506 	br	3454 <cosf+0x30>

000034c0 <log>:
    34c0:	defffb04 	addi	sp,sp,-20
    34c4:	dcc00315 	stw	r19,12(sp)
    34c8:	dc800215 	stw	r18,8(sp)
    34cc:	dc400115 	stw	r17,4(sp)
    34d0:	dc000015 	stw	r16,0(sp)
    34d4:	2023883a 	mov	r17,r4
    34d8:	2821883a 	mov	r16,r5
    34dc:	dfc00415 	stw	ra,16(sp)
    34e0:	00038ec0 	call	38ec <__ieee754_log>
    34e4:	880d883a 	mov	r6,r17
    34e8:	800f883a 	mov	r7,r16
    34ec:	8809883a 	mov	r4,r17
    34f0:	800b883a 	mov	r5,r16
    34f4:	1027883a 	mov	r19,r2
    34f8:	1825883a 	mov	r18,r3
    34fc:	000c1380 	call	c138 <__unorddf2>
    3500:	1000111e 	bne	r2,zero,3548 <log+0x88>
    3504:	000d883a 	mov	r6,zero
    3508:	000f883a 	mov	r7,zero
    350c:	8809883a 	mov	r4,r17
    3510:	800b883a 	mov	r5,r16
    3514:	000aeb00 	call	aeb0 <__gedf2>
    3518:	00800b16 	blt	zero,r2,3548 <log+0x88>
    351c:	000d883a 	mov	r6,zero
    3520:	000f883a 	mov	r7,zero
    3524:	8809883a 	mov	r4,r17
    3528:	800b883a 	mov	r5,r16
    352c:	000ae300 	call	ae30 <__eqdf2>
    3530:	10000e1e 	bne	r2,zero,356c <log+0xac>
    3534:	000c6140 	call	c614 <__errno>
    3538:	00c00884 	movi	r3,34
    353c:	10c00015 	stw	r3,0(r2)
    3540:	0027883a 	mov	r19,zero
    3544:	04bffc34 	movhi	r18,65520
    3548:	9805883a 	mov	r2,r19
    354c:	9007883a 	mov	r3,r18
    3550:	dfc00417 	ldw	ra,16(sp)
    3554:	dcc00317 	ldw	r19,12(sp)
    3558:	dc800217 	ldw	r18,8(sp)
    355c:	dc400117 	ldw	r17,4(sp)
    3560:	dc000017 	ldw	r16,0(sp)
    3564:	dec00504 	addi	sp,sp,20
    3568:	f800283a 	ret
    356c:	000c6140 	call	c614 <__errno>
    3570:	00c00844 	movi	r3,33
    3574:	10c00015 	stw	r3,0(r2)
    3578:	0027883a 	mov	r19,zero
    357c:	049ffe34 	movhi	r18,32760
    3580:	003ff106 	br	3548 <log+0x88>

00003584 <pow>:
    3584:	defff704 	addi	sp,sp,-36
    3588:	dd800615 	stw	r22,24(sp)
    358c:	dd000415 	stw	r20,16(sp)
    3590:	dcc00315 	stw	r19,12(sp)
    3594:	dc800215 	stw	r18,8(sp)
    3598:	dc400115 	stw	r17,4(sp)
    359c:	dc000015 	stw	r16,0(sp)
    35a0:	3823883a 	mov	r17,r7
    35a4:	3021883a 	mov	r16,r6
    35a8:	dfc00815 	stw	ra,32(sp)
    35ac:	ddc00715 	stw	r23,28(sp)
    35b0:	dd400515 	stw	r21,20(sp)
    35b4:	202d883a 	mov	r22,r4
    35b8:	2825883a 	mov	r18,r5
    35bc:	0003f780 	call	3f78 <__ieee754_pow>
    35c0:	800d883a 	mov	r6,r16
    35c4:	880f883a 	mov	r7,r17
    35c8:	8009883a 	mov	r4,r16
    35cc:	880b883a 	mov	r5,r17
    35d0:	1027883a 	mov	r19,r2
    35d4:	1829883a 	mov	r20,r3
    35d8:	000c1380 	call	c138 <__unorddf2>
    35dc:	10005d1e 	bne	r2,zero,3754 <pow+0x1d0>
    35e0:	000d883a 	mov	r6,zero
    35e4:	000f883a 	mov	r7,zero
    35e8:	b009883a 	mov	r4,r22
    35ec:	900b883a 	mov	r5,r18
    35f0:	000ae300 	call	ae30 <__eqdf2>
    35f4:	10006426 	beq	r2,zero,3788 <pow+0x204>
    35f8:	01600034 	movhi	r5,32768
    35fc:	297fffc4 	addi	r5,r5,-1
    3600:	a16a703a 	and	r21,r20,r5
    3604:	01dffc34 	movhi	r7,32752
    3608:	01bfffc4 	movi	r6,-1
    360c:	39ffffc4 	addi	r7,r7,-1
    3610:	9809883a 	mov	r4,r19
    3614:	a80b883a 	mov	r5,r21
    3618:	000c1380 	call	c138 <__unorddf2>
    361c:	1000071e 	bne	r2,zero,363c <pow+0xb8>
    3620:	01dffc34 	movhi	r7,32752
    3624:	01bfffc4 	movi	r6,-1
    3628:	39ffffc4 	addi	r7,r7,-1
    362c:	9809883a 	mov	r4,r19
    3630:	a80b883a 	mov	r5,r21
    3634:	000aeb00 	call	aeb0 <__gedf2>
    3638:	0080200e 	bge	zero,r2,36bc <pow+0x138>
    363c:	05600034 	movhi	r21,32768
    3640:	ad7fffc4 	addi	r21,r21,-1
    3644:	956e703a 	and	r23,r18,r21
    3648:	01dffc34 	movhi	r7,32752
    364c:	01bfffc4 	movi	r6,-1
    3650:	39ffffc4 	addi	r7,r7,-1
    3654:	b009883a 	mov	r4,r22
    3658:	b80b883a 	mov	r5,r23
    365c:	000c1380 	call	c138 <__unorddf2>
    3660:	10003c1e 	bne	r2,zero,3754 <pow+0x1d0>
    3664:	01dffc34 	movhi	r7,32752
    3668:	01bfffc4 	movi	r6,-1
    366c:	39ffffc4 	addi	r7,r7,-1
    3670:	b009883a 	mov	r4,r22
    3674:	b80b883a 	mov	r5,r23
    3678:	000aeb00 	call	aeb0 <__gedf2>
    367c:	00803516 	blt	zero,r2,3754 <pow+0x1d0>
    3680:	8d6a703a 	and	r21,r17,r21
    3684:	01dffc34 	movhi	r7,32752
    3688:	01bfffc4 	movi	r6,-1
    368c:	39ffffc4 	addi	r7,r7,-1
    3690:	8009883a 	mov	r4,r16
    3694:	a80b883a 	mov	r5,r21
    3698:	000c1380 	call	c138 <__unorddf2>
    369c:	1000071e 	bne	r2,zero,36bc <pow+0x138>
    36a0:	01dffc34 	movhi	r7,32752
    36a4:	01bfffc4 	movi	r6,-1
    36a8:	39ffffc4 	addi	r7,r7,-1
    36ac:	8009883a 	mov	r4,r16
    36b0:	a80b883a 	mov	r5,r21
    36b4:	000aeb00 	call	aeb0 <__gedf2>
    36b8:	0080570e 	bge	zero,r2,3818 <pow+0x294>
    36bc:	000d883a 	mov	r6,zero
    36c0:	000f883a 	mov	r7,zero
    36c4:	9809883a 	mov	r4,r19
    36c8:	a00b883a 	mov	r5,r20
    36cc:	000ae300 	call	ae30 <__eqdf2>
    36d0:	1000201e 	bne	r2,zero,3754 <pow+0x1d0>
    36d4:	05600034 	movhi	r21,32768
    36d8:	ad7fffc4 	addi	r21,r21,-1
    36dc:	9564703a 	and	r18,r18,r21
    36e0:	01dffc34 	movhi	r7,32752
    36e4:	01bfffc4 	movi	r6,-1
    36e8:	39ffffc4 	addi	r7,r7,-1
    36ec:	b009883a 	mov	r4,r22
    36f0:	900b883a 	mov	r5,r18
    36f4:	000c1380 	call	c138 <__unorddf2>
    36f8:	1000161e 	bne	r2,zero,3754 <pow+0x1d0>
    36fc:	01dffc34 	movhi	r7,32752
    3700:	01bfffc4 	movi	r6,-1
    3704:	39ffffc4 	addi	r7,r7,-1
    3708:	b009883a 	mov	r4,r22
    370c:	900b883a 	mov	r5,r18
    3710:	000aeb00 	call	aeb0 <__gedf2>
    3714:	00800f16 	blt	zero,r2,3754 <pow+0x1d0>
    3718:	8d62703a 	and	r17,r17,r21
    371c:	01dffc34 	movhi	r7,32752
    3720:	01bfffc4 	movi	r6,-1
    3724:	39ffffc4 	addi	r7,r7,-1
    3728:	8009883a 	mov	r4,r16
    372c:	880b883a 	mov	r5,r17
    3730:	000c1380 	call	c138 <__unorddf2>
    3734:	1000071e 	bne	r2,zero,3754 <pow+0x1d0>
    3738:	01dffc34 	movhi	r7,32752
    373c:	01bfffc4 	movi	r6,-1
    3740:	39ffffc4 	addi	r7,r7,-1
    3744:	8009883a 	mov	r4,r16
    3748:	880b883a 	mov	r5,r17
    374c:	000aeb00 	call	aeb0 <__gedf2>
    3750:	00802a0e 	bge	zero,r2,37fc <pow+0x278>
    3754:	9805883a 	mov	r2,r19
    3758:	a007883a 	mov	r3,r20
    375c:	dfc00817 	ldw	ra,32(sp)
    3760:	ddc00717 	ldw	r23,28(sp)
    3764:	dd800617 	ldw	r22,24(sp)
    3768:	dd400517 	ldw	r21,20(sp)
    376c:	dd000417 	ldw	r20,16(sp)
    3770:	dcc00317 	ldw	r19,12(sp)
    3774:	dc800217 	ldw	r18,8(sp)
    3778:	dc400117 	ldw	r17,4(sp)
    377c:	dc000017 	ldw	r16,0(sp)
    3780:	dec00904 	addi	sp,sp,36
    3784:	f800283a 	ret
    3788:	000d883a 	mov	r6,zero
    378c:	000f883a 	mov	r7,zero
    3790:	8009883a 	mov	r4,r16
    3794:	880b883a 	mov	r5,r17
    3798:	000ae300 	call	ae30 <__eqdf2>
    379c:	10001b26 	beq	r2,zero,380c <pow+0x288>
    37a0:	01600034 	movhi	r5,32768
    37a4:	297fffc4 	addi	r5,r5,-1
    37a8:	8964703a 	and	r18,r17,r5
    37ac:	01dffc34 	movhi	r7,32752
    37b0:	01bfffc4 	movi	r6,-1
    37b4:	39ffffc4 	addi	r7,r7,-1
    37b8:	8009883a 	mov	r4,r16
    37bc:	900b883a 	mov	r5,r18
    37c0:	000c1380 	call	c138 <__unorddf2>
    37c4:	103fe31e 	bne	r2,zero,3754 <pow+0x1d0>
    37c8:	01dffc34 	movhi	r7,32752
    37cc:	01bfffc4 	movi	r6,-1
    37d0:	39ffffc4 	addi	r7,r7,-1
    37d4:	8009883a 	mov	r4,r16
    37d8:	900b883a 	mov	r5,r18
    37dc:	000aeb00 	call	aeb0 <__gedf2>
    37e0:	00bfdc16 	blt	zero,r2,3754 <pow+0x1d0>
    37e4:	000d883a 	mov	r6,zero
    37e8:	000f883a 	mov	r7,zero
    37ec:	8009883a 	mov	r4,r16
    37f0:	880b883a 	mov	r5,r17
    37f4:	000af980 	call	af98 <__ledf2>
    37f8:	103fd60e 	bge	r2,zero,3754 <pow+0x1d0>
    37fc:	000c6140 	call	c614 <__errno>
    3800:	00c00884 	movi	r3,34
    3804:	10c00015 	stw	r3,0(r2)
    3808:	003fd206 	br	3754 <pow+0x1d0>
    380c:	0027883a 	mov	r19,zero
    3810:	050ffc34 	movhi	r20,16368
    3814:	003fcf06 	br	3754 <pow+0x1d0>
    3818:	980d883a 	mov	r6,r19
    381c:	a00f883a 	mov	r7,r20
    3820:	9809883a 	mov	r4,r19
    3824:	a00b883a 	mov	r5,r20
    3828:	000c1380 	call	c138 <__unorddf2>
    382c:	103ff326 	beq	r2,zero,37fc <pow+0x278>
    3830:	000c6140 	call	c614 <__errno>
    3834:	00c00844 	movi	r3,33
    3838:	10c00015 	stw	r3,0(r2)
    383c:	003fc506 	br	3754 <pow+0x1d0>

00003840 <sqrt>:
    3840:	defffb04 	addi	sp,sp,-20
    3844:	dcc00315 	stw	r19,12(sp)
    3848:	dc800215 	stw	r18,8(sp)
    384c:	dc400115 	stw	r17,4(sp)
    3850:	dc000015 	stw	r16,0(sp)
    3854:	2023883a 	mov	r17,r4
    3858:	2821883a 	mov	r16,r5
    385c:	dfc00415 	stw	ra,16(sp)
    3860:	00057cc0 	call	57cc <__ieee754_sqrt>
    3864:	880d883a 	mov	r6,r17
    3868:	800f883a 	mov	r7,r16
    386c:	8809883a 	mov	r4,r17
    3870:	800b883a 	mov	r5,r16
    3874:	1027883a 	mov	r19,r2
    3878:	1825883a 	mov	r18,r3
    387c:	000c1380 	call	c138 <__unorddf2>
    3880:	1000061e 	bne	r2,zero,389c <sqrt+0x5c>
    3884:	000d883a 	mov	r6,zero
    3888:	000f883a 	mov	r7,zero
    388c:	8809883a 	mov	r4,r17
    3890:	800b883a 	mov	r5,r16
    3894:	000af980 	call	af98 <__ledf2>
    3898:	10000916 	blt	r2,zero,38c0 <sqrt+0x80>
    389c:	9805883a 	mov	r2,r19
    38a0:	9007883a 	mov	r3,r18
    38a4:	dfc00417 	ldw	ra,16(sp)
    38a8:	dcc00317 	ldw	r19,12(sp)
    38ac:	dc800217 	ldw	r18,8(sp)
    38b0:	dc400117 	ldw	r17,4(sp)
    38b4:	dc000017 	ldw	r16,0(sp)
    38b8:	dec00504 	addi	sp,sp,20
    38bc:	f800283a 	ret
    38c0:	000c6140 	call	c614 <__errno>
    38c4:	00c00844 	movi	r3,33
    38c8:	10c00015 	stw	r3,0(r2)
    38cc:	000d883a 	mov	r6,zero
    38d0:	000f883a 	mov	r7,zero
    38d4:	0009883a 	mov	r4,zero
    38d8:	000b883a 	mov	r5,zero
    38dc:	000a51c0 	call	a51c <__divdf3>
    38e0:	1027883a 	mov	r19,r2
    38e4:	1825883a 	mov	r18,r3
    38e8:	003fec06 	br	389c <sqrt+0x5c>

000038ec <__ieee754_log>:
    38ec:	defff204 	addi	sp,sp,-56
    38f0:	dfc00d15 	stw	ra,52(sp)
    38f4:	df000c15 	stw	fp,48(sp)
    38f8:	ddc00b15 	stw	r23,44(sp)
    38fc:	dd800a15 	stw	r22,40(sp)
    3900:	dd400915 	stw	r21,36(sp)
    3904:	dd000815 	stw	r20,32(sp)
    3908:	dcc00715 	stw	r19,28(sp)
    390c:	dc800615 	stw	r18,24(sp)
    3910:	dc400515 	stw	r17,20(sp)
    3914:	dc000415 	stw	r16,16(sp)
    3918:	01800434 	movhi	r6,16
    391c:	2005883a 	mov	r2,r4
    3920:	280f883a 	mov	r7,r5
    3924:	2980690e 	bge	r5,r6,3acc <__ieee754_log+0x1e0>
    3928:	00e00034 	movhi	r3,32768
    392c:	18ffffc4 	addi	r3,r3,-1
    3930:	28c6703a 	and	r3,r5,r3
    3934:	1906b03a 	or	r3,r3,r4
    3938:	18011d26 	beq	r3,zero,3db0 <__ieee754_log+0x4c4>
    393c:	28015c16 	blt	r5,zero,3eb0 <__ieee754_log+0x5c4>
    3940:	000d883a 	mov	r6,zero
    3944:	01d0d434 	movhi	r7,17232
    3948:	000b0800 	call	b080 <__muldf3>
    394c:	011ffc34 	movhi	r4,32752
    3950:	180f883a 	mov	r7,r3
    3954:	01bff284 	movi	r6,-54
    3958:	1900600e 	bge	r3,r4,3adc <__ieee754_log+0x1f0>
    395c:	04000434 	movhi	r16,16
    3960:	843fffc4 	addi	r16,r16,-1
    3964:	01400274 	movhi	r5,9
    3968:	1c24703a 	and	r18,r3,r16
    396c:	2957d904 	addi	r5,r5,24420
    3970:	1807d53a 	srai	r3,r3,20
    3974:	914b883a 	add	r5,r18,r5
    3978:	2940042c 	andhi	r5,r5,16
    397c:	2827d53a 	srai	r19,r5,20
    3980:	18ff0044 	addi	r3,r3,-1023
    3984:	294ffc3c 	xorhi	r5,r5,16368
    3988:	1987883a 	add	r3,r3,r6
    398c:	2c8ab03a 	or	r5,r5,r18
    3990:	000d883a 	mov	r6,zero
    3994:	01cffc34 	movhi	r7,16368
    3998:	1009883a 	mov	r4,r2
    399c:	98e7883a 	add	r19,r19,r3
    39a0:	000b82c0 	call	b82c <__subdf3>
    39a4:	91400084 	addi	r5,r18,2
    39a8:	2c0a703a 	and	r5,r5,r16
    39ac:	294000c8 	cmpgei	r5,r5,3
    39b0:	000d883a 	mov	r6,zero
    39b4:	1023883a 	mov	r17,r2
    39b8:	1821883a 	mov	r16,r3
    39bc:	2800571e 	bne	r5,zero,3b1c <__ieee754_log+0x230>
    39c0:	000f883a 	mov	r7,zero
    39c4:	1009883a 	mov	r4,r2
    39c8:	180b883a 	mov	r5,r3
    39cc:	000ae300 	call	ae30 <__eqdf2>
    39d0:	1000fd26 	beq	r2,zero,3dc8 <__ieee754_log+0x4dc>
    39d4:	01955574 	movhi	r6,21845
    39d8:	01cff574 	movhi	r7,16341
    39dc:	8809883a 	mov	r4,r17
    39e0:	800b883a 	mov	r5,r16
    39e4:	31955544 	addi	r6,r6,21845
    39e8:	39d55544 	addi	r7,r7,21845
    39ec:	000b0800 	call	b080 <__muldf3>
    39f0:	100d883a 	mov	r6,r2
    39f4:	180f883a 	mov	r7,r3
    39f8:	0009883a 	mov	r4,zero
    39fc:	014ff834 	movhi	r5,16352
    3a00:	000b82c0 	call	b82c <__subdf3>
    3a04:	880d883a 	mov	r6,r17
    3a08:	800f883a 	mov	r7,r16
    3a0c:	8809883a 	mov	r4,r17
    3a10:	800b883a 	mov	r5,r16
    3a14:	1029883a 	mov	r20,r2
    3a18:	1825883a 	mov	r18,r3
    3a1c:	000b0800 	call	b080 <__muldf3>
    3a20:	a009883a 	mov	r4,r20
    3a24:	900b883a 	mov	r5,r18
    3a28:	100d883a 	mov	r6,r2
    3a2c:	180f883a 	mov	r7,r3
    3a30:	000b0800 	call	b080 <__muldf3>
    3a34:	1029883a 	mov	r20,r2
    3a38:	1825883a 	mov	r18,r3
    3a3c:	98011626 	beq	r19,zero,3e98 <__ieee754_log+0x5ac>
    3a40:	9809883a 	mov	r4,r19
    3a44:	000c20c0 	call	c20c <__floatsidf>
    3a48:	01cff9b4 	movhi	r7,16358
    3a4c:	01bfb834 	movhi	r6,65248
    3a50:	39cb9084 	addi	r7,r7,11842
    3a54:	1009883a 	mov	r4,r2
    3a58:	180b883a 	mov	r5,r3
    3a5c:	102b883a 	mov	r21,r2
    3a60:	1827883a 	mov	r19,r3
    3a64:	000b0800 	call	b080 <__muldf3>
    3a68:	018d5e74 	movhi	r6,13689
    3a6c:	01cf7ab4 	movhi	r7,15850
    3a70:	318f1d84 	addi	r6,r6,15478
    3a74:	39ce7bc4 	addi	r7,r7,14831
    3a78:	a809883a 	mov	r4,r21
    3a7c:	980b883a 	mov	r5,r19
    3a80:	102b883a 	mov	r21,r2
    3a84:	1827883a 	mov	r19,r3
    3a88:	000b0800 	call	b080 <__muldf3>
    3a8c:	a009883a 	mov	r4,r20
    3a90:	900b883a 	mov	r5,r18
    3a94:	100d883a 	mov	r6,r2
    3a98:	180f883a 	mov	r7,r3
    3a9c:	000b82c0 	call	b82c <__subdf3>
    3aa0:	880d883a 	mov	r6,r17
    3aa4:	800f883a 	mov	r7,r16
    3aa8:	1009883a 	mov	r4,r2
    3aac:	180b883a 	mov	r5,r3
    3ab0:	000b82c0 	call	b82c <__subdf3>
    3ab4:	100d883a 	mov	r6,r2
    3ab8:	180f883a 	mov	r7,r3
    3abc:	a809883a 	mov	r4,r21
    3ac0:	980b883a 	mov	r5,r19
    3ac4:	000b82c0 	call	b82c <__subdf3>
    3ac8:	00000806 	br	3aec <__ieee754_log+0x200>
    3acc:	2807883a 	mov	r3,r5
    3ad0:	011ffc34 	movhi	r4,32752
    3ad4:	000d883a 	mov	r6,zero
    3ad8:	193fa016 	blt	r3,r4,395c <__ieee754_log+0x70>
    3adc:	100d883a 	mov	r6,r2
    3ae0:	1009883a 	mov	r4,r2
    3ae4:	380b883a 	mov	r5,r7
    3ae8:	0009c2c0 	call	9c2c <__adddf3>
    3aec:	dfc00d17 	ldw	ra,52(sp)
    3af0:	df000c17 	ldw	fp,48(sp)
    3af4:	ddc00b17 	ldw	r23,44(sp)
    3af8:	dd800a17 	ldw	r22,40(sp)
    3afc:	dd400917 	ldw	r21,36(sp)
    3b00:	dd000817 	ldw	r20,32(sp)
    3b04:	dcc00717 	ldw	r19,28(sp)
    3b08:	dc800617 	ldw	r18,24(sp)
    3b0c:	dc400517 	ldw	r17,20(sp)
    3b10:	dc000417 	ldw	r16,16(sp)
    3b14:	dec00e04 	addi	sp,sp,56
    3b18:	f800283a 	ret
    3b1c:	01d00034 	movhi	r7,16384
    3b20:	1009883a 	mov	r4,r2
    3b24:	180b883a 	mov	r5,r3
    3b28:	0009c2c0 	call	9c2c <__adddf3>
    3b2c:	100d883a 	mov	r6,r2
    3b30:	180f883a 	mov	r7,r3
    3b34:	800b883a 	mov	r5,r16
    3b38:	8809883a 	mov	r4,r17
    3b3c:	000a51c0 	call	a51c <__divdf3>
    3b40:	9809883a 	mov	r4,r19
    3b44:	102d883a 	mov	r22,r2
    3b48:	182b883a 	mov	r21,r3
    3b4c:	000c20c0 	call	c20c <__floatsidf>
    3b50:	b00d883a 	mov	r6,r22
    3b54:	a80f883a 	mov	r7,r21
    3b58:	b009883a 	mov	r4,r22
    3b5c:	a80b883a 	mov	r5,r21
    3b60:	1039883a 	mov	fp,r2
    3b64:	d8c00315 	stw	r3,12(sp)
    3b68:	000b0800 	call	b080 <__muldf3>
    3b6c:	1015883a 	mov	r10,r2
    3b70:	00bffeb4 	movhi	r2,65530
    3b74:	10bae184 	addi	r2,r2,-5242
    3b78:	9097883a 	add	r11,r18,r2
    3b7c:	500d883a 	mov	r6,r10
    3b80:	5009883a 	mov	r4,r10
    3b84:	180f883a 	mov	r7,r3
    3b88:	180b883a 	mov	r5,r3
    3b8c:	dac00215 	stw	r11,8(sp)
    3b90:	da800115 	stw	r10,4(sp)
    3b94:	d8c00015 	stw	r3,0(sp)
    3b98:	000b0800 	call	b080 <__muldf3>
    3b9c:	01b7cfb4 	movhi	r6,57150
    3ba0:	01cff0f4 	movhi	r7,16323
    3ba4:	31949104 	addi	r6,r6,21060
    3ba8:	39fc4484 	addi	r7,r7,-3822
    3bac:	1009883a 	mov	r4,r2
    3bb0:	180b883a 	mov	r5,r3
    3bb4:	1829883a 	mov	r20,r3
    3bb8:	102f883a 	mov	r23,r2
    3bbc:	000b0800 	call	b080 <__muldf3>
    3bc0:	01a5b2f4 	movhi	r6,38603
    3bc4:	01cff1f4 	movhi	r7,16327
    3bc8:	3180f784 	addi	r6,r6,990
    3bcc:	39d19904 	addi	r7,r7,18020
    3bd0:	1009883a 	mov	r4,r2
    3bd4:	180b883a 	mov	r5,r3
    3bd8:	0009c2c0 	call	9c2c <__adddf3>
    3bdc:	a00f883a 	mov	r7,r20
    3be0:	b80d883a 	mov	r6,r23
    3be4:	1009883a 	mov	r4,r2
    3be8:	180b883a 	mov	r5,r3
    3bec:	000b0800 	call	b080 <__muldf3>
    3bf0:	01a508f4 	movhi	r6,37923
    3bf4:	01cff4b4 	movhi	r7,16338
    3bf8:	31a4d644 	addi	r6,r6,-27815
    3bfc:	39d24904 	addi	r7,r7,18724
    3c00:	1009883a 	mov	r4,r2
    3c04:	180b883a 	mov	r5,r3
    3c08:	0009c2c0 	call	9c2c <__adddf3>
    3c0c:	a00f883a 	mov	r7,r20
    3c10:	b80d883a 	mov	r6,r23
    3c14:	1009883a 	mov	r4,r2
    3c18:	180b883a 	mov	r5,r3
    3c1c:	000b0800 	call	b080 <__muldf3>
    3c20:	01955574 	movhi	r6,21845
    3c24:	01cff974 	movhi	r7,16357
    3c28:	319564c4 	addi	r6,r6,21907
    3c2c:	39d55544 	addi	r7,r7,21845
    3c30:	1009883a 	mov	r4,r2
    3c34:	180b883a 	mov	r5,r3
    3c38:	0009c2c0 	call	9c2c <__adddf3>
    3c3c:	da800117 	ldw	r10,4(sp)
    3c40:	da400017 	ldw	r9,0(sp)
    3c44:	1009883a 	mov	r4,r2
    3c48:	500d883a 	mov	r6,r10
    3c4c:	480f883a 	mov	r7,r9
    3c50:	180b883a 	mov	r5,r3
    3c54:	000b0800 	call	b080 <__muldf3>
    3c58:	01b41e74 	movhi	r6,53369
    3c5c:	01cff134 	movhi	r7,16324
    3c60:	a00b883a 	mov	r5,r20
    3c64:	31b1a7c4 	addi	r6,r6,-14689
    3c68:	39e68244 	addi	r7,r7,-26103
    3c6c:	b809883a 	mov	r4,r23
    3c70:	d8800115 	stw	r2,4(sp)
    3c74:	d8c00015 	stw	r3,0(sp)
    3c78:	000b0800 	call	b080 <__muldf3>
    3c7c:	018763b4 	movhi	r6,7566
    3c80:	01cff334 	movhi	r7,16332
    3c84:	319e2bc4 	addi	r6,r6,30895
    3c88:	39dc7144 	addi	r7,r7,29125
    3c8c:	1009883a 	mov	r4,r2
    3c90:	180b883a 	mov	r5,r3
    3c94:	0009c2c0 	call	9c2c <__adddf3>
    3c98:	a00f883a 	mov	r7,r20
    3c9c:	b80d883a 	mov	r6,r23
    3ca0:	1009883a 	mov	r4,r2
    3ca4:	180b883a 	mov	r5,r3
    3ca8:	000b0800 	call	b080 <__muldf3>
    3cac:	01a66634 	movhi	r6,39320
    3cb0:	01cff6b4 	movhi	r7,16346
    3cb4:	31be8104 	addi	r6,r6,-1532
    3cb8:	39e66644 	addi	r7,r7,-26215
    3cbc:	1009883a 	mov	r4,r2
    3cc0:	180b883a 	mov	r5,r3
    3cc4:	0009c2c0 	call	9c2c <__adddf3>
    3cc8:	a00f883a 	mov	r7,r20
    3ccc:	b80d883a 	mov	r6,r23
    3cd0:	1009883a 	mov	r4,r2
    3cd4:	180b883a 	mov	r5,r3
    3cd8:	000b0800 	call	b080 <__muldf3>
    3cdc:	da800117 	ldw	r10,4(sp)
    3ce0:	da400017 	ldw	r9,0(sp)
    3ce4:	100d883a 	mov	r6,r2
    3ce8:	180f883a 	mov	r7,r3
    3cec:	480b883a 	mov	r5,r9
    3cf0:	5009883a 	mov	r4,r10
    3cf4:	0009c2c0 	call	9c2c <__adddf3>
    3cf8:	dac00217 	ldw	r11,8(sp)
    3cfc:	014001f4 	movhi	r5,7
    3d00:	296e1444 	addi	r5,r5,-18351
    3d04:	2ca5c83a 	sub	r18,r5,r18
    3d08:	92e4b03a 	or	r18,r18,r11
    3d0c:	1829883a 	mov	r20,r3
    3d10:	0480470e 	bge	zero,r18,3e30 <__ieee754_log+0x544>
    3d14:	000d883a 	mov	r6,zero
    3d18:	01cff834 	movhi	r7,16352
    3d1c:	8809883a 	mov	r4,r17
    3d20:	800b883a 	mov	r5,r16
    3d24:	d8800115 	stw	r2,4(sp)
    3d28:	000b0800 	call	b080 <__muldf3>
    3d2c:	880d883a 	mov	r6,r17
    3d30:	800f883a 	mov	r7,r16
    3d34:	1009883a 	mov	r4,r2
    3d38:	180b883a 	mov	r5,r3
    3d3c:	000b0800 	call	b080 <__muldf3>
    3d40:	da000117 	ldw	r8,4(sp)
    3d44:	a00b883a 	mov	r5,r20
    3d48:	100d883a 	mov	r6,r2
    3d4c:	4009883a 	mov	r4,r8
    3d50:	180f883a 	mov	r7,r3
    3d54:	1825883a 	mov	r18,r3
    3d58:	d8800015 	stw	r2,0(sp)
    3d5c:	0009c2c0 	call	9c2c <__adddf3>
    3d60:	a80f883a 	mov	r7,r21
    3d64:	b00d883a 	mov	r6,r22
    3d68:	1009883a 	mov	r4,r2
    3d6c:	180b883a 	mov	r5,r3
    3d70:	000b0800 	call	b080 <__muldf3>
    3d74:	da400017 	ldw	r9,0(sp)
    3d78:	102b883a 	mov	r21,r2
    3d7c:	1829883a 	mov	r20,r3
    3d80:	9800531e 	bne	r19,zero,3ed0 <__ieee754_log+0x5e4>
    3d84:	4809883a 	mov	r4,r9
    3d88:	900b883a 	mov	r5,r18
    3d8c:	100d883a 	mov	r6,r2
    3d90:	180f883a 	mov	r7,r3
    3d94:	000b82c0 	call	b82c <__subdf3>
    3d98:	100d883a 	mov	r6,r2
    3d9c:	180f883a 	mov	r7,r3
    3da0:	8809883a 	mov	r4,r17
    3da4:	800b883a 	mov	r5,r16
    3da8:	000b82c0 	call	b82c <__subdf3>
    3dac:	003f4f06 	br	3aec <__ieee754_log+0x200>
    3db0:	000d883a 	mov	r6,zero
    3db4:	000f883a 	mov	r7,zero
    3db8:	0009883a 	mov	r4,zero
    3dbc:	0170d434 	movhi	r5,50000
    3dc0:	000a51c0 	call	a51c <__divdf3>
    3dc4:	003f4906 	br	3aec <__ieee754_log+0x200>
    3dc8:	98006826 	beq	r19,zero,3f6c <__ieee754_log+0x680>
    3dcc:	9809883a 	mov	r4,r19
    3dd0:	000c20c0 	call	c20c <__floatsidf>
    3dd4:	01cff9b4 	movhi	r7,16358
    3dd8:	01bfb834 	movhi	r6,65248
    3ddc:	39cb9084 	addi	r7,r7,11842
    3de0:	1009883a 	mov	r4,r2
    3de4:	180b883a 	mov	r5,r3
    3de8:	1023883a 	mov	r17,r2
    3dec:	1821883a 	mov	r16,r3
    3df0:	000b0800 	call	b080 <__muldf3>
    3df4:	018d5e74 	movhi	r6,13689
    3df8:	01cf7ab4 	movhi	r7,15850
    3dfc:	8809883a 	mov	r4,r17
    3e00:	800b883a 	mov	r5,r16
    3e04:	318f1d84 	addi	r6,r6,15478
    3e08:	39ce7bc4 	addi	r7,r7,14831
    3e0c:	1027883a 	mov	r19,r2
    3e10:	1825883a 	mov	r18,r3
    3e14:	000b0800 	call	b080 <__muldf3>
    3e18:	100d883a 	mov	r6,r2
    3e1c:	180f883a 	mov	r7,r3
    3e20:	9809883a 	mov	r4,r19
    3e24:	900b883a 	mov	r5,r18
    3e28:	0009c2c0 	call	9c2c <__adddf3>
    3e2c:	003f2f06 	br	3aec <__ieee754_log+0x200>
    3e30:	100d883a 	mov	r6,r2
    3e34:	180f883a 	mov	r7,r3
    3e38:	8809883a 	mov	r4,r17
    3e3c:	800b883a 	mov	r5,r16
    3e40:	000b82c0 	call	b82c <__subdf3>
    3e44:	b00d883a 	mov	r6,r22
    3e48:	a80f883a 	mov	r7,r21
    3e4c:	1009883a 	mov	r4,r2
    3e50:	180b883a 	mov	r5,r3
    3e54:	000b0800 	call	b080 <__muldf3>
    3e58:	1029883a 	mov	r20,r2
    3e5c:	1825883a 	mov	r18,r3
    3e60:	98000d26 	beq	r19,zero,3e98 <__ieee754_log+0x5ac>
    3e64:	dcc00317 	ldw	r19,12(sp)
    3e68:	01cff9b4 	movhi	r7,16358
    3e6c:	01bfb834 	movhi	r6,65248
    3e70:	39cb9084 	addi	r7,r7,11842
    3e74:	e009883a 	mov	r4,fp
    3e78:	980b883a 	mov	r5,r19
    3e7c:	000b0800 	call	b080 <__muldf3>
    3e80:	018d5e74 	movhi	r6,13689
    3e84:	01cf7ab4 	movhi	r7,15850
    3e88:	318f1d84 	addi	r6,r6,15478
    3e8c:	39ce7bc4 	addi	r7,r7,14831
    3e90:	e009883a 	mov	r4,fp
    3e94:	003ef906 	br	3a7c <__ieee754_log+0x190>
    3e98:	a00d883a 	mov	r6,r20
    3e9c:	900f883a 	mov	r7,r18
    3ea0:	8809883a 	mov	r4,r17
    3ea4:	800b883a 	mov	r5,r16
    3ea8:	000b82c0 	call	b82c <__subdf3>
    3eac:	003f0f06 	br	3aec <__ieee754_log+0x200>
    3eb0:	200d883a 	mov	r6,r4
    3eb4:	000b82c0 	call	b82c <__subdf3>
    3eb8:	000d883a 	mov	r6,zero
    3ebc:	000f883a 	mov	r7,zero
    3ec0:	1009883a 	mov	r4,r2
    3ec4:	180b883a 	mov	r5,r3
    3ec8:	000a51c0 	call	a51c <__divdf3>
    3ecc:	003f0706 	br	3aec <__ieee754_log+0x200>
    3ed0:	dcc00317 	ldw	r19,12(sp)
    3ed4:	01cff9b4 	movhi	r7,16358
    3ed8:	e009883a 	mov	r4,fp
    3edc:	980b883a 	mov	r5,r19
    3ee0:	01bfb834 	movhi	r6,65248
    3ee4:	39cb9084 	addi	r7,r7,11842
    3ee8:	da400015 	stw	r9,0(sp)
    3eec:	000b0800 	call	b080 <__muldf3>
    3ef0:	018d5e74 	movhi	r6,13689
    3ef4:	01cf7ab4 	movhi	r7,15850
    3ef8:	e009883a 	mov	r4,fp
    3efc:	980b883a 	mov	r5,r19
    3f00:	318f1d84 	addi	r6,r6,15478
    3f04:	39ce7bc4 	addi	r7,r7,14831
    3f08:	102d883a 	mov	r22,r2
    3f0c:	1827883a 	mov	r19,r3
    3f10:	000b0800 	call	b080 <__muldf3>
    3f14:	a80d883a 	mov	r6,r21
    3f18:	a00f883a 	mov	r7,r20
    3f1c:	1009883a 	mov	r4,r2
    3f20:	180b883a 	mov	r5,r3
    3f24:	0009c2c0 	call	9c2c <__adddf3>
    3f28:	da400017 	ldw	r9,0(sp)
    3f2c:	900b883a 	mov	r5,r18
    3f30:	100d883a 	mov	r6,r2
    3f34:	4809883a 	mov	r4,r9
    3f38:	180f883a 	mov	r7,r3
    3f3c:	000b82c0 	call	b82c <__subdf3>
    3f40:	880d883a 	mov	r6,r17
    3f44:	800f883a 	mov	r7,r16
    3f48:	1009883a 	mov	r4,r2
    3f4c:	180b883a 	mov	r5,r3
    3f50:	000b82c0 	call	b82c <__subdf3>
    3f54:	100d883a 	mov	r6,r2
    3f58:	180f883a 	mov	r7,r3
    3f5c:	b009883a 	mov	r4,r22
    3f60:	980b883a 	mov	r5,r19
    3f64:	000b82c0 	call	b82c <__subdf3>
    3f68:	003ee006 	br	3aec <__ieee754_log+0x200>
    3f6c:	0005883a 	mov	r2,zero
    3f70:	0007883a 	mov	r3,zero
    3f74:	003edd06 	br	3aec <__ieee754_log+0x200>

00003f78 <__ieee754_pow>:
    3f78:	00e00034 	movhi	r3,32768
    3f7c:	deffeb04 	addi	sp,sp,-84
    3f80:	18ffffc4 	addi	r3,r3,-1
    3f84:	dc000b15 	stw	r16,44(sp)
    3f88:	3021883a 	mov	r16,r6
    3f8c:	38cc703a 	and	r6,r7,r3
    3f90:	dd401015 	stw	r21,64(sp)
    3f94:	dc400c15 	stw	r17,48(sp)
    3f98:	dfc01415 	stw	ra,80(sp)
    3f9c:	df001315 	stw	fp,76(sp)
    3fa0:	ddc01215 	stw	r23,72(sp)
    3fa4:	dd801115 	stw	r22,68(sp)
    3fa8:	dd000f15 	stw	r20,60(sp)
    3fac:	dcc00e15 	stw	r19,56(sp)
    3fb0:	dc800d15 	stw	r18,52(sp)
    3fb4:	3404b03a 	or	r2,r6,r16
    3fb8:	3823883a 	mov	r17,r7
    3fbc:	282b883a 	mov	r21,r5
    3fc0:	1000191e 	bne	r2,zero,4028 <__ieee754_pow+0xb0>
    3fc4:	2880023c 	xorhi	r2,r5,8
    3fc8:	2006d7fa 	srli	r3,r4,31
    3fcc:	1004907a 	slli	r2,r2,1
    3fd0:	017ffc34 	movhi	r5,65520
    3fd4:	200c907a 	slli	r6,r4,1
    3fd8:	1884b03a 	or	r2,r3,r2
    3fdc:	2880202e 	bgeu	r5,r2,4060 <__ieee754_pow+0xe8>
    3fe0:	800d883a 	mov	r6,r16
    3fe4:	880f883a 	mov	r7,r17
    3fe8:	a80b883a 	mov	r5,r21
    3fec:	0009c2c0 	call	9c2c <__adddf3>
    3ff0:	102d883a 	mov	r22,r2
    3ff4:	b005883a 	mov	r2,r22
    3ff8:	dfc01417 	ldw	ra,80(sp)
    3ffc:	df001317 	ldw	fp,76(sp)
    4000:	ddc01217 	ldw	r23,72(sp)
    4004:	dd801117 	ldw	r22,68(sp)
    4008:	dd401017 	ldw	r21,64(sp)
    400c:	dd000f17 	ldw	r20,60(sp)
    4010:	dcc00e17 	ldw	r19,56(sp)
    4014:	dc800d17 	ldw	r18,52(sp)
    4018:	dc400c17 	ldw	r17,48(sp)
    401c:	dc000b17 	ldw	r16,44(sp)
    4020:	dec01504 	addi	sp,sp,84
    4024:	f800283a 	ret
    4028:	28e6703a 	and	r19,r5,r3
    402c:	009ffc34 	movhi	r2,32752
    4030:	14c00f0e 	bge	r2,r19,4070 <__ieee754_pow+0xf8>
    4034:	00b00434 	movhi	r2,49168
    4038:	a885883a 	add	r2,r21,r2
    403c:	1104b03a 	or	r2,r2,r4
    4040:	103fe71e 	bne	r2,zero,3fe0 <__ieee754_pow+0x68>
    4044:	8880023c 	xorhi	r2,r17,8
    4048:	8006d7fa 	srli	r3,r16,31
    404c:	1004907a 	slli	r2,r2,1
    4050:	017ffc34 	movhi	r5,65520
    4054:	800c907a 	slli	r6,r16,1
    4058:	1884b03a 	or	r2,r3,r2
    405c:	28bfe036 	bltu	r5,r2,3fe0 <__ieee754_pow+0x68>
    4060:	11402726 	beq	r2,r5,4100 <__ieee754_pow+0x188>
    4064:	002d883a 	mov	r22,zero
    4068:	00cffc34 	movhi	r3,16368
    406c:	003fe106 	br	3ff4 <__ieee754_pow+0x7c>
    4070:	98802526 	beq	r19,r2,4108 <__ieee754_pow+0x190>
    4074:	009ffc34 	movhi	r2,32752
    4078:	11bfee16 	blt	r2,r6,4034 <__ieee754_pow+0xbc>
    407c:	30802426 	beq	r6,r2,4110 <__ieee754_pow+0x198>
    4080:	a8006e16 	blt	r21,zero,423c <__ieee754_pow+0x2c4>
    4084:	0025883a 	mov	r18,zero
    4088:	80002326 	beq	r16,zero,4118 <__ieee754_pow+0x1a0>
    408c:	00e00034 	movhi	r3,32768
    4090:	18ffffc4 	addi	r3,r3,-1
    4094:	202d883a 	mov	r22,r4
    4098:	a8c6703a 	and	r3,r21,r3
    409c:	20003a26 	beq	r4,zero,4188 <__ieee754_pow+0x210>
    40a0:	a828d7fa 	srli	r20,r21,31
    40a4:	a53fffc4 	addi	r20,r20,-1
    40a8:	9504b03a 	or	r2,r18,r20
    40ac:	10008026 	beq	r2,zero,42b0 <__ieee754_pow+0x338>
    40b0:	00907834 	movhi	r2,16864
    40b4:	1180810e 	bge	r2,r6,42bc <__ieee754_pow+0x344>
    40b8:	0090fc34 	movhi	r2,17392
    40bc:	11834f0e 	bge	r2,r6,4dfc <__ieee754_pow+0xe84>
    40c0:	008ffc34 	movhi	r2,16368
    40c4:	9880480e 	bge	r19,r2,41e8 <__ieee754_pow+0x270>
    40c8:	88004816 	blt	r17,zero,41ec <__ieee754_pow+0x274>
    40cc:	0009883a 	mov	r4,zero
    40d0:	dfc01417 	ldw	ra,80(sp)
    40d4:	df001317 	ldw	fp,76(sp)
    40d8:	ddc01217 	ldw	r23,72(sp)
    40dc:	dd801117 	ldw	r22,68(sp)
    40e0:	dd401017 	ldw	r21,64(sp)
    40e4:	dd000f17 	ldw	r20,60(sp)
    40e8:	dcc00e17 	ldw	r19,56(sp)
    40ec:	dc800d17 	ldw	r18,52(sp)
    40f0:	dc400c17 	ldw	r17,48(sp)
    40f4:	dc000b17 	ldw	r16,44(sp)
    40f8:	dec01504 	addi	sp,sp,84
    40fc:	00083901 	jmpi	8390 <__math_uflow>
    4100:	303fd826 	beq	r6,zero,4064 <__ieee754_pow+0xec>
    4104:	003fb606 	br	3fe0 <__ieee754_pow+0x68>
    4108:	203fb51e 	bne	r4,zero,3fe0 <__ieee754_pow+0x68>
    410c:	003fd906 	br	4074 <__ieee754_pow+0xfc>
    4110:	803fdb26 	beq	r16,zero,4080 <__ieee754_pow+0x108>
    4114:	003fc706 	br	4034 <__ieee754_pow+0xbc>
    4118:	009ffc34 	movhi	r2,32752
    411c:	30805a26 	beq	r6,r2,4288 <__ieee754_pow+0x310>
    4120:	008ffc34 	movhi	r2,16368
    4124:	30831026 	beq	r6,r2,4d68 <__ieee754_pow+0xdf0>
    4128:	00900034 	movhi	r2,16384
    412c:	8883a626 	beq	r17,r2,4fc8 <__ieee754_pow+0x1050>
    4130:	008ff834 	movhi	r2,16352
    4134:	88bfd51e 	bne	r17,r2,408c <__ieee754_pow+0x114>
    4138:	a83fd416 	blt	r21,zero,408c <__ieee754_pow+0x114>
    413c:	a80b883a 	mov	r5,r21
    4140:	dfc01417 	ldw	ra,80(sp)
    4144:	df001317 	ldw	fp,76(sp)
    4148:	ddc01217 	ldw	r23,72(sp)
    414c:	dd801117 	ldw	r22,68(sp)
    4150:	dd401017 	ldw	r21,64(sp)
    4154:	dd000f17 	ldw	r20,60(sp)
    4158:	dcc00e17 	ldw	r19,56(sp)
    415c:	dc800d17 	ldw	r18,52(sp)
    4160:	dc400c17 	ldw	r17,48(sp)
    4164:	dc000b17 	ldw	r16,44(sp)
    4168:	dec01504 	addi	sp,sp,84
    416c:	00057cc1 	jmpi	57cc <__ieee754_sqrt>
    4170:	20004f1e 	bne	r4,zero,42b0 <__ieee754_pow+0x338>
    4174:	00e00034 	movhi	r3,32768
    4178:	18ffffc4 	addi	r3,r3,-1
    417c:	002d883a 	mov	r22,zero
    4180:	a8c6703a 	and	r3,r21,r3
    4184:	0025883a 	mov	r18,zero
    4188:	98000526 	beq	r19,zero,41a0 <__ieee754_pow+0x228>
    418c:	00900034 	movhi	r2,16384
    4190:	10bfffc4 	addi	r2,r2,-1
    4194:	a884703a 	and	r2,r21,r2
    4198:	014ffc34 	movhi	r5,16368
    419c:	117fc01e 	bne	r2,r5,40a0 <__ieee754_pow+0x128>
    41a0:	88001f16 	blt	r17,zero,4220 <__ieee754_pow+0x2a8>
    41a4:	a83f930e 	bge	r21,zero,3ff4 <__ieee754_pow+0x7c>
    41a8:	00b00434 	movhi	r2,49168
    41ac:	9885883a 	add	r2,r19,r2
    41b0:	1484b03a 	or	r2,r2,r18
    41b4:	10038a1e 	bne	r2,zero,4fe0 <__ieee754_pow+0x1068>
    41b8:	b00d883a 	mov	r6,r22
    41bc:	180f883a 	mov	r7,r3
    41c0:	3009883a 	mov	r4,r6
    41c4:	380b883a 	mov	r5,r7
    41c8:	000b82c0 	call	b82c <__subdf3>
    41cc:	100d883a 	mov	r6,r2
    41d0:	180f883a 	mov	r7,r3
    41d4:	1009883a 	mov	r4,r2
    41d8:	180b883a 	mov	r5,r3
    41dc:	000a51c0 	call	a51c <__divdf3>
    41e0:	102d883a 	mov	r22,r2
    41e4:	003f8306 	br	3ff4 <__ieee754_pow+0x7c>
    41e8:	047fb80e 	bge	zero,r17,40cc <__ieee754_pow+0x154>
    41ec:	0009883a 	mov	r4,zero
    41f0:	dfc01417 	ldw	ra,80(sp)
    41f4:	df001317 	ldw	fp,76(sp)
    41f8:	ddc01217 	ldw	r23,72(sp)
    41fc:	dd801117 	ldw	r22,68(sp)
    4200:	dd401017 	ldw	r21,64(sp)
    4204:	dd000f17 	ldw	r20,60(sp)
    4208:	dcc00e17 	ldw	r19,56(sp)
    420c:	dc800d17 	ldw	r18,52(sp)
    4210:	dc400c17 	ldw	r17,48(sp)
    4214:	dc000b17 	ldw	r16,44(sp)
    4218:	dec01504 	addi	sp,sp,84
    421c:	00083a81 	jmpi	83a8 <__math_oflow>
    4220:	180f883a 	mov	r7,r3
    4224:	000d883a 	mov	r6,zero
    4228:	0009883a 	mov	r4,zero
    422c:	014ffc34 	movhi	r5,16368
    4230:	000a51c0 	call	a51c <__divdf3>
    4234:	102d883a 	mov	r22,r2
    4238:	003fda06 	br	41a4 <__ieee754_pow+0x22c>
    423c:	0090d034 	movhi	r2,17216
    4240:	30800e0e 	bge	r6,r2,427c <__ieee754_pow+0x304>
    4244:	008ffc34 	movhi	r2,16368
    4248:	30800916 	blt	r6,r2,4270 <__ieee754_pow+0x2f8>
    424c:	3005d53a 	srai	r2,r6,20
    4250:	10bf0044 	addi	r2,r2,-1023
    4254:	10c00550 	cmplti	r3,r2,21
    4258:	18034c1e 	bne	r3,zero,4f8c <__ieee754_pow+0x1014>
    425c:	00c00d04 	movi	r3,52
    4260:	1885c83a 	sub	r2,r3,r2
    4264:	8086d83a 	srl	r3,r16,r2
    4268:	1884983a 	sll	r2,r3,r2
    426c:	14037926 	beq	r2,r16,5054 <__ieee754_pow+0x10dc>
    4270:	0025883a 	mov	r18,zero
    4274:	803faa26 	beq	r16,zero,4120 <__ieee754_pow+0x1a8>
    4278:	003f8406 	br	408c <__ieee754_pow+0x114>
    427c:	04800084 	movi	r18,2
    4280:	803f821e 	bne	r16,zero,408c <__ieee754_pow+0x114>
    4284:	003fa406 	br	4118 <__ieee754_pow+0x1a0>
    4288:	00b00434 	movhi	r2,49168
    428c:	9885883a 	add	r2,r19,r2
    4290:	1104b03a 	or	r2,r2,r4
    4294:	103f7326 	beq	r2,zero,4064 <__ieee754_pow+0xec>
    4298:	008ffc34 	movhi	r2,16368
    429c:	002d883a 	mov	r22,zero
    42a0:	98833716 	blt	r19,r2,4f80 <__ieee754_pow+0x1008>
    42a4:	88033416 	blt	r17,zero,4f78 <__ieee754_pow+0x1000>
    42a8:	8807883a 	mov	r3,r17
    42ac:	003f5106 	br	3ff4 <__ieee754_pow+0x7c>
    42b0:	200d883a 	mov	r6,r4
    42b4:	a80f883a 	mov	r7,r21
    42b8:	003fc106 	br	41c0 <__ieee754_pow+0x248>
    42bc:	ad5ffc2c 	andhi	r21,r21,32752
    42c0:	a802cc1e 	bne	r21,zero,4df4 <__ieee754_pow+0xe7c>
    42c4:	180b883a 	mov	r5,r3
    42c8:	000d883a 	mov	r6,zero
    42cc:	01d0d034 	movhi	r7,17216
    42d0:	000b0800 	call	b080 <__muldf3>
    42d4:	102d883a 	mov	r22,r2
    42d8:	1827883a 	mov	r19,r3
    42dc:	017ff2c4 	movi	r5,-53
    42e0:	9809d53a 	srai	r4,r19,20
    42e4:	00800434 	movhi	r2,16
    42e8:	10bfffc4 	addi	r2,r2,-1
    42ec:	00c00134 	movhi	r3,4
    42f0:	213f0044 	addi	r4,r4,-1023
    42f4:	9884703a 	and	r2,r19,r2
    42f8:	18e62384 	addi	r3,r3,-26482
    42fc:	2159883a 	add	r12,r4,r5
    4300:	170ffc34 	orhi	fp,r2,16368
    4304:	1880060e 	bge	r3,r2,4320 <__ieee754_pow+0x3a8>
    4308:	00c00334 	movhi	r3,12
    430c:	18ed9e44 	addi	r3,r3,-18823
    4310:	1883370e 	bge	r3,r2,4ff0 <__ieee754_pow+0x1078>
    4314:	00bffc34 	movhi	r2,65520
    4318:	63000044 	addi	r12,r12,1
    431c:	e0b9883a 	add	fp,fp,r2
    4320:	d8000015 	stw	zero,0(sp)
    4324:	d8000115 	stw	zero,4(sp)
    4328:	d8000a15 	stw	zero,40(sp)
    432c:	001f883a 	mov	r15,zero
    4330:	002f883a 	mov	r23,zero
    4334:	034ffc34 	movhi	r13,16368
    4338:	680f883a 	mov	r7,r13
    433c:	b009883a 	mov	r4,r22
    4340:	e00b883a 	mov	r5,fp
    4344:	000d883a 	mov	r6,zero
    4348:	dbc00915 	stw	r15,36(sp)
    434c:	db000815 	stw	r12,32(sp)
    4350:	db400215 	stw	r13,8(sp)
    4354:	000b82c0 	call	b82c <__subdf3>
    4358:	db400217 	ldw	r13,8(sp)
    435c:	b009883a 	mov	r4,r22
    4360:	e00b883a 	mov	r5,fp
    4364:	680f883a 	mov	r7,r13
    4368:	000d883a 	mov	r6,zero
    436c:	db400615 	stw	r13,24(sp)
    4370:	d8800315 	stw	r2,12(sp)
    4374:	d8c00215 	stw	r3,8(sp)
    4378:	0009c2c0 	call	9c2c <__adddf3>
    437c:	100d883a 	mov	r6,r2
    4380:	180f883a 	mov	r7,r3
    4384:	0009883a 	mov	r4,zero
    4388:	014ffc34 	movhi	r5,16368
    438c:	000a51c0 	call	a51c <__divdf3>
    4390:	dac00217 	ldw	r11,8(sp)
    4394:	da400317 	ldw	r9,12(sp)
    4398:	100d883a 	mov	r6,r2
    439c:	580b883a 	mov	r5,r11
    43a0:	4809883a 	mov	r4,r9
    43a4:	180f883a 	mov	r7,r3
    43a8:	d8800515 	stw	r2,20(sp)
    43ac:	d8c00415 	stw	r3,16(sp)
    43b0:	000b0800 	call	b080 <__muldf3>
    43b4:	e009d07a 	srai	r4,fp,1
    43b8:	01400234 	movhi	r5,8
    43bc:	000d883a 	mov	r6,zero
    43c0:	21080034 	orhi	r4,r4,8192
    43c4:	2149883a 	add	r4,r4,r5
    43c8:	25ef883a 	add	r23,r4,r23
    43cc:	b80f883a 	mov	r7,r23
    43d0:	0009883a 	mov	r4,zero
    43d4:	180b883a 	mov	r5,r3
    43d8:	1827883a 	mov	r19,r3
    43dc:	102b883a 	mov	r21,r2
    43e0:	000b0800 	call	b080 <__muldf3>
    43e4:	da400317 	ldw	r9,12(sp)
    43e8:	dac00217 	ldw	r11,8(sp)
    43ec:	100d883a 	mov	r6,r2
    43f0:	4809883a 	mov	r4,r9
    43f4:	580b883a 	mov	r5,r11
    43f8:	180f883a 	mov	r7,r3
    43fc:	000b82c0 	call	b82c <__subdf3>
    4400:	db400617 	ldw	r13,24(sp)
    4404:	b80b883a 	mov	r5,r23
    4408:	000d883a 	mov	r6,zero
    440c:	680f883a 	mov	r7,r13
    4410:	0009883a 	mov	r4,zero
    4414:	182f883a 	mov	r23,r3
    4418:	d8800215 	stw	r2,8(sp)
    441c:	000b82c0 	call	b82c <__subdf3>
    4420:	b009883a 	mov	r4,r22
    4424:	e00b883a 	mov	r5,fp
    4428:	100d883a 	mov	r6,r2
    442c:	180f883a 	mov	r7,r3
    4430:	000b82c0 	call	b82c <__subdf3>
    4434:	980f883a 	mov	r7,r19
    4438:	000d883a 	mov	r6,zero
    443c:	1009883a 	mov	r4,r2
    4440:	180b883a 	mov	r5,r3
    4444:	000b0800 	call	b080 <__muldf3>
    4448:	dac00217 	ldw	r11,8(sp)
    444c:	b80b883a 	mov	r5,r23
    4450:	100d883a 	mov	r6,r2
    4454:	5809883a 	mov	r4,r11
    4458:	180f883a 	mov	r7,r3
    445c:	000b82c0 	call	b82c <__subdf3>
    4460:	da000417 	ldw	r8,16(sp)
    4464:	da800517 	ldw	r10,20(sp)
    4468:	1009883a 	mov	r4,r2
    446c:	400f883a 	mov	r7,r8
    4470:	500d883a 	mov	r6,r10
    4474:	180b883a 	mov	r5,r3
    4478:	000b0800 	call	b080 <__muldf3>
    447c:	a80d883a 	mov	r6,r21
    4480:	980f883a 	mov	r7,r19
    4484:	a809883a 	mov	r4,r21
    4488:	980b883a 	mov	r5,r19
    448c:	d8800415 	stw	r2,16(sp)
    4490:	d8c00315 	stw	r3,12(sp)
    4494:	000b0800 	call	b080 <__muldf3>
    4498:	01929174 	movhi	r6,19013
    449c:	01cff2b4 	movhi	r7,16330
    44a0:	3193bbc4 	addi	r6,r6,20207
    44a4:	39df8a04 	addi	r7,r7,32296
    44a8:	1009883a 	mov	r4,r2
    44ac:	180b883a 	mov	r5,r3
    44b0:	102f883a 	mov	r23,r2
    44b4:	182d883a 	mov	r22,r3
    44b8:	000b0800 	call	b080 <__muldf3>
    44bc:	01a4f2b4 	movhi	r6,37834
    44c0:	01cff3b4 	movhi	r7,16334
    44c4:	31b6d944 	addi	r6,r6,-9371
    44c8:	39e19284 	addi	r7,r7,-31158
    44cc:	1009883a 	mov	r4,r2
    44d0:	180b883a 	mov	r5,r3
    44d4:	0009c2c0 	call	9c2c <__adddf3>
    44d8:	b80d883a 	mov	r6,r23
    44dc:	b00f883a 	mov	r7,r22
    44e0:	1009883a 	mov	r4,r2
    44e4:	180b883a 	mov	r5,r3
    44e8:	000b0800 	call	b080 <__muldf3>
    44ec:	01aa4774 	movhi	r6,43293
    44f0:	01cff474 	movhi	r7,16337
    44f4:	31904044 	addi	r6,r6,16641
    44f8:	39dd1804 	addi	r7,r7,29792
    44fc:	1009883a 	mov	r4,r2
    4500:	180b883a 	mov	r5,r3
    4504:	0009c2c0 	call	9c2c <__adddf3>
    4508:	b80d883a 	mov	r6,r23
    450c:	b00f883a 	mov	r7,r22
    4510:	1009883a 	mov	r4,r2
    4514:	180b883a 	mov	r5,r3
    4518:	000b0800 	call	b080 <__muldf3>
    451c:	019463f4 	movhi	r6,20879
    4520:	01cff574 	movhi	r7,16341
    4524:	31899344 	addi	r6,r6,9805
    4528:	39d55544 	addi	r7,r7,21845
    452c:	1009883a 	mov	r4,r2
    4530:	180b883a 	mov	r5,r3
    4534:	0009c2c0 	call	9c2c <__adddf3>
    4538:	b80d883a 	mov	r6,r23
    453c:	b00f883a 	mov	r7,r22
    4540:	1009883a 	mov	r4,r2
    4544:	180b883a 	mov	r5,r3
    4548:	000b0800 	call	b080 <__muldf3>
    454c:	01b6dc34 	movhi	r6,56176
    4550:	01cff6f4 	movhi	r7,16347
    4554:	31aaffc4 	addi	r6,r6,-21505
    4558:	39db6d84 	addi	r7,r7,28086
    455c:	1009883a 	mov	r4,r2
    4560:	180b883a 	mov	r5,r3
    4564:	0009c2c0 	call	9c2c <__adddf3>
    4568:	b80d883a 	mov	r6,r23
    456c:	b00f883a 	mov	r7,r22
    4570:	1009883a 	mov	r4,r2
    4574:	180b883a 	mov	r5,r3
    4578:	000b0800 	call	b080 <__muldf3>
    457c:	018cccf4 	movhi	r6,13107
    4580:	01cff8f4 	movhi	r7,16355
    4584:	318cc0c4 	addi	r6,r6,13059
    4588:	39ccccc4 	addi	r7,r7,13107
    458c:	1009883a 	mov	r4,r2
    4590:	180b883a 	mov	r5,r3
    4594:	0009c2c0 	call	9c2c <__adddf3>
    4598:	b80d883a 	mov	r6,r23
    459c:	b00f883a 	mov	r7,r22
    45a0:	b809883a 	mov	r4,r23
    45a4:	b00b883a 	mov	r5,r22
    45a8:	1839883a 	mov	fp,r3
    45ac:	d8800215 	stw	r2,8(sp)
    45b0:	000b0800 	call	b080 <__muldf3>
    45b4:	dac00217 	ldw	r11,8(sp)
    45b8:	e00b883a 	mov	r5,fp
    45bc:	100d883a 	mov	r6,r2
    45c0:	5809883a 	mov	r4,r11
    45c4:	180f883a 	mov	r7,r3
    45c8:	000b0800 	call	b080 <__muldf3>
    45cc:	980f883a 	mov	r7,r19
    45d0:	a809883a 	mov	r4,r21
    45d4:	980b883a 	mov	r5,r19
    45d8:	000d883a 	mov	r6,zero
    45dc:	102f883a 	mov	r23,r2
    45e0:	182d883a 	mov	r22,r3
    45e4:	0009c2c0 	call	9c2c <__adddf3>
    45e8:	da800417 	ldw	r10,16(sp)
    45ec:	da400317 	ldw	r9,12(sp)
    45f0:	1009883a 	mov	r4,r2
    45f4:	500d883a 	mov	r6,r10
    45f8:	480f883a 	mov	r7,r9
    45fc:	180b883a 	mov	r5,r3
    4600:	da800715 	stw	r10,28(sp)
    4604:	da400615 	stw	r9,24(sp)
    4608:	000b0800 	call	b080 <__muldf3>
    460c:	b80d883a 	mov	r6,r23
    4610:	b00f883a 	mov	r7,r22
    4614:	1009883a 	mov	r4,r2
    4618:	180b883a 	mov	r5,r3
    461c:	0009c2c0 	call	9c2c <__adddf3>
    4620:	980f883a 	mov	r7,r19
    4624:	980b883a 	mov	r5,r19
    4628:	000d883a 	mov	r6,zero
    462c:	0009883a 	mov	r4,zero
    4630:	d8800315 	stw	r2,12(sp)
    4634:	d8c00215 	stw	r3,8(sp)
    4638:	000b0800 	call	b080 <__muldf3>
    463c:	000d883a 	mov	r6,zero
    4640:	01d00234 	movhi	r7,16392
    4644:	1009883a 	mov	r4,r2
    4648:	180b883a 	mov	r5,r3
    464c:	d8800515 	stw	r2,20(sp)
    4650:	d8c00415 	stw	r3,16(sp)
    4654:	0009c2c0 	call	9c2c <__adddf3>
    4658:	da000317 	ldw	r8,12(sp)
    465c:	dac00217 	ldw	r11,8(sp)
    4660:	1009883a 	mov	r4,r2
    4664:	400d883a 	mov	r6,r8
    4668:	580f883a 	mov	r7,r11
    466c:	180b883a 	mov	r5,r3
    4670:	0009c2c0 	call	9c2c <__adddf3>
    4674:	980b883a 	mov	r5,r19
    4678:	000d883a 	mov	r6,zero
    467c:	180f883a 	mov	r7,r3
    4680:	0009883a 	mov	r4,zero
    4684:	182d883a 	mov	r22,r3
    4688:	000b0800 	call	b080 <__muldf3>
    468c:	b00b883a 	mov	r5,r22
    4690:	000d883a 	mov	r6,zero
    4694:	01d00234 	movhi	r7,16392
    4698:	0009883a 	mov	r4,zero
    469c:	1039883a 	mov	fp,r2
    46a0:	182f883a 	mov	r23,r3
    46a4:	000b82c0 	call	b82c <__subdf3>
    46a8:	db800517 	ldw	r14,20(sp)
    46ac:	db400417 	ldw	r13,16(sp)
    46b0:	1009883a 	mov	r4,r2
    46b4:	700d883a 	mov	r6,r14
    46b8:	680f883a 	mov	r7,r13
    46bc:	180b883a 	mov	r5,r3
    46c0:	000b82c0 	call	b82c <__subdf3>
    46c4:	da000317 	ldw	r8,12(sp)
    46c8:	dac00217 	ldw	r11,8(sp)
    46cc:	100d883a 	mov	r6,r2
    46d0:	4009883a 	mov	r4,r8
    46d4:	580b883a 	mov	r5,r11
    46d8:	180f883a 	mov	r7,r3
    46dc:	000b82c0 	call	b82c <__subdf3>
    46e0:	a80d883a 	mov	r6,r21
    46e4:	980f883a 	mov	r7,r19
    46e8:	1009883a 	mov	r4,r2
    46ec:	180b883a 	mov	r5,r3
    46f0:	000b0800 	call	b080 <__muldf3>
    46f4:	da800717 	ldw	r10,28(sp)
    46f8:	da400617 	ldw	r9,24(sp)
    46fc:	b00f883a 	mov	r7,r22
    4700:	5009883a 	mov	r4,r10
    4704:	480b883a 	mov	r5,r9
    4708:	000d883a 	mov	r6,zero
    470c:	102b883a 	mov	r21,r2
    4710:	1827883a 	mov	r19,r3
    4714:	000b0800 	call	b080 <__muldf3>
    4718:	a809883a 	mov	r4,r21
    471c:	980b883a 	mov	r5,r19
    4720:	100d883a 	mov	r6,r2
    4724:	180f883a 	mov	r7,r3
    4728:	0009c2c0 	call	9c2c <__adddf3>
    472c:	e009883a 	mov	r4,fp
    4730:	b80b883a 	mov	r5,r23
    4734:	100d883a 	mov	r6,r2
    4738:	180f883a 	mov	r7,r3
    473c:	102d883a 	mov	r22,r2
    4740:	182b883a 	mov	r21,r3
    4744:	0009c2c0 	call	9c2c <__adddf3>
    4748:	01cffbf4 	movhi	r7,16367
    474c:	01b80034 	movhi	r6,57344
    4750:	39f1c244 	addi	r7,r7,-14583
    4754:	0009883a 	mov	r4,zero
    4758:	180b883a 	mov	r5,r3
    475c:	1827883a 	mov	r19,r3
    4760:	000b0800 	call	b080 <__muldf3>
    4764:	e00d883a 	mov	r6,fp
    4768:	b80f883a 	mov	r7,r23
    476c:	980b883a 	mov	r5,r19
    4770:	0009883a 	mov	r4,zero
    4774:	1039883a 	mov	fp,r2
    4778:	182f883a 	mov	r23,r3
    477c:	000b82c0 	call	b82c <__subdf3>
    4780:	b009883a 	mov	r4,r22
    4784:	a80b883a 	mov	r5,r21
    4788:	100d883a 	mov	r6,r2
    478c:	180f883a 	mov	r7,r3
    4790:	000b82c0 	call	b82c <__subdf3>
    4794:	01b70eb4 	movhi	r6,56378
    4798:	01cffbf4 	movhi	r7,16367
    479c:	3180ff44 	addi	r6,r6,1021
    47a0:	39f1c244 	addi	r7,r7,-14583
    47a4:	1009883a 	mov	r4,r2
    47a8:	180b883a 	mov	r5,r3
    47ac:	000b0800 	call	b080 <__muldf3>
    47b0:	018516f4 	movhi	r6,5211
    47b4:	01ef8fb4 	movhi	r7,48702
    47b8:	980b883a 	mov	r5,r19
    47bc:	31807d44 	addi	r6,r6,501
    47c0:	39cbf804 	addi	r7,r7,12256
    47c4:	0009883a 	mov	r4,zero
    47c8:	102d883a 	mov	r22,r2
    47cc:	182b883a 	mov	r21,r3
    47d0:	000b0800 	call	b080 <__muldf3>
    47d4:	b009883a 	mov	r4,r22
    47d8:	a80b883a 	mov	r5,r21
    47dc:	100d883a 	mov	r6,r2
    47e0:	180f883a 	mov	r7,r3
    47e4:	0009c2c0 	call	9c2c <__adddf3>
    47e8:	dbc00917 	ldw	r15,36(sp)
    47ec:	d9800a17 	ldw	r6,40(sp)
    47f0:	180b883a 	mov	r5,r3
    47f4:	780f883a 	mov	r7,r15
    47f8:	1009883a 	mov	r4,r2
    47fc:	0009c2c0 	call	9c2c <__adddf3>
    4800:	db000817 	ldw	r12,32(sp)
    4804:	102d883a 	mov	r22,r2
    4808:	182b883a 	mov	r21,r3
    480c:	6009883a 	mov	r4,r12
    4810:	000c20c0 	call	c20c <__floatsidf>
    4814:	b00d883a 	mov	r6,r22
    4818:	a80f883a 	mov	r7,r21
    481c:	e009883a 	mov	r4,fp
    4820:	b80b883a 	mov	r5,r23
    4824:	d8800315 	stw	r2,12(sp)
    4828:	d8c00215 	stw	r3,8(sp)
    482c:	0009c2c0 	call	9c2c <__adddf3>
    4830:	d9800017 	ldw	r6,0(sp)
    4834:	d9c00117 	ldw	r7,4(sp)
    4838:	1009883a 	mov	r4,r2
    483c:	180b883a 	mov	r5,r3
    4840:	0009c2c0 	call	9c2c <__adddf3>
    4844:	da800317 	ldw	r10,12(sp)
    4848:	da400217 	ldw	r9,8(sp)
    484c:	1009883a 	mov	r4,r2
    4850:	500d883a 	mov	r6,r10
    4854:	480f883a 	mov	r7,r9
    4858:	180b883a 	mov	r5,r3
    485c:	0009c2c0 	call	9c2c <__adddf3>
    4860:	da800317 	ldw	r10,12(sp)
    4864:	da400217 	ldw	r9,8(sp)
    4868:	0009883a 	mov	r4,zero
    486c:	500d883a 	mov	r6,r10
    4870:	480f883a 	mov	r7,r9
    4874:	180b883a 	mov	r5,r3
    4878:	1827883a 	mov	r19,r3
    487c:	000b82c0 	call	b82c <__subdf3>
    4880:	d9800017 	ldw	r6,0(sp)
    4884:	d9c00117 	ldw	r7,4(sp)
    4888:	1009883a 	mov	r4,r2
    488c:	180b883a 	mov	r5,r3
    4890:	000b82c0 	call	b82c <__subdf3>
    4894:	e00d883a 	mov	r6,fp
    4898:	b80f883a 	mov	r7,r23
    489c:	1009883a 	mov	r4,r2
    48a0:	180b883a 	mov	r5,r3
    48a4:	000b82c0 	call	b82c <__subdf3>
    48a8:	b009883a 	mov	r4,r22
    48ac:	100d883a 	mov	r6,r2
    48b0:	180f883a 	mov	r7,r3
    48b4:	a80b883a 	mov	r5,r21
    48b8:	94bfffc4 	addi	r18,r18,-1
    48bc:	000b82c0 	call	b82c <__subdf3>
    48c0:	9528b03a 	or	r20,r18,r20
    48c4:	102f883a 	mov	r23,r2
    48c8:	182d883a 	mov	r22,r3
    48cc:	a001471e 	bne	r20,zero,4dec <__ieee754_pow+0xe74>
    48d0:	052ffc34 	movhi	r20,49136
    48d4:	880f883a 	mov	r7,r17
    48d8:	8009883a 	mov	r4,r16
    48dc:	880b883a 	mov	r5,r17
    48e0:	000d883a 	mov	r6,zero
    48e4:	000b82c0 	call	b82c <__subdf3>
    48e8:	980f883a 	mov	r7,r19
    48ec:	000d883a 	mov	r6,zero
    48f0:	1009883a 	mov	r4,r2
    48f4:	180b883a 	mov	r5,r3
    48f8:	000b0800 	call	b080 <__muldf3>
    48fc:	800d883a 	mov	r6,r16
    4900:	880f883a 	mov	r7,r17
    4904:	b809883a 	mov	r4,r23
    4908:	b00b883a 	mov	r5,r22
    490c:	102b883a 	mov	r21,r2
    4910:	1825883a 	mov	r18,r3
    4914:	000b0800 	call	b080 <__muldf3>
    4918:	a809883a 	mov	r4,r21
    491c:	900b883a 	mov	r5,r18
    4920:	100d883a 	mov	r6,r2
    4924:	180f883a 	mov	r7,r3
    4928:	0009c2c0 	call	9c2c <__adddf3>
    492c:	880f883a 	mov	r7,r17
    4930:	980b883a 	mov	r5,r19
    4934:	000d883a 	mov	r6,zero
    4938:	0009883a 	mov	r4,zero
    493c:	1027883a 	mov	r19,r2
    4940:	182b883a 	mov	r21,r3
    4944:	000b0800 	call	b080 <__muldf3>
    4948:	a80b883a 	mov	r5,r21
    494c:	100d883a 	mov	r6,r2
    4950:	180f883a 	mov	r7,r3
    4954:	9809883a 	mov	r4,r19
    4958:	1023883a 	mov	r17,r2
    495c:	1825883a 	mov	r18,r3
    4960:	0009c2c0 	call	9c2c <__adddf3>
    4964:	01502434 	movhi	r5,16528
    4968:	1821883a 	mov	r16,r3
    496c:	8817883a 	mov	r11,r17
    4970:	902f883a 	mov	r23,r18
    4974:	102d883a 	mov	r22,r2
    4978:	1839883a 	mov	fp,r3
    497c:	1940fe16 	blt	r3,r5,4d78 <__ieee754_pow+0xe00>
    4980:	1947c83a 	sub	r3,r3,r5
    4984:	1d86b03a 	or	r3,r3,r22
    4988:	1801ab1e 	bne	r3,zero,5038 <__ieee754_pow+0x10c0>
    498c:	01994b34 	movhi	r6,25900
    4990:	01cf25f4 	movhi	r7,15511
    4994:	31a0bf84 	addi	r6,r6,-32002
    4998:	39c551c4 	addi	r7,r7,5447
    499c:	9809883a 	mov	r4,r19
    49a0:	a80b883a 	mov	r5,r21
    49a4:	0009c2c0 	call	9c2c <__adddf3>
    49a8:	880d883a 	mov	r6,r17
    49ac:	900f883a 	mov	r7,r18
    49b0:	b009883a 	mov	r4,r22
    49b4:	800b883a 	mov	r5,r16
    49b8:	1039883a 	mov	fp,r2
    49bc:	182f883a 	mov	r23,r3
    49c0:	000b82c0 	call	b82c <__subdf3>
    49c4:	100d883a 	mov	r6,r2
    49c8:	180f883a 	mov	r7,r3
    49cc:	e009883a 	mov	r4,fp
    49d0:	b80b883a 	mov	r5,r23
    49d4:	000aeb00 	call	aeb0 <__gedf2>
    49d8:	00819716 	blt	zero,r2,5038 <__ieee754_pow+0x10c0>
    49dc:	8009d53a 	srai	r4,r16,20
    49e0:	2101ffcc 	andi	r4,r4,2047
    49e4:	00c00434 	movhi	r3,16
    49e8:	213f0084 	addi	r4,r4,-1022
    49ec:	1909d83a 	sra	r4,r3,r4
    49f0:	00800434 	movhi	r2,16
    49f4:	10bfffc4 	addi	r2,r2,-1
    49f8:	2407883a 	add	r3,r4,r16
    49fc:	1809d53a 	srai	r4,r3,20
    4a00:	18ac703a 	and	r22,r3,r2
    4a04:	b5800434 	orhi	r22,r22,16
    4a08:	2101ffcc 	andi	r4,r4,2047
    4a0c:	213f0044 	addi	r4,r4,-1023
    4a10:	110fd83a 	sra	r7,r2,r4
    4a14:	00800504 	movi	r2,20
    4a18:	1109c83a 	sub	r4,r2,r4
    4a1c:	b105d83a 	sra	r2,r22,r4
    4a20:	01ce303a 	nor	r7,zero,r7
    4a24:	38ce703a 	and	r7,r7,r3
    4a28:	d8800215 	stw	r2,8(sp)
    4a2c:	8000020e 	bge	r16,zero,4a38 <__ieee754_pow+0xac0>
    4a30:	0085c83a 	sub	r2,zero,r2
    4a34:	d8800215 	stw	r2,8(sp)
    4a38:	000d883a 	mov	r6,zero
    4a3c:	8809883a 	mov	r4,r17
    4a40:	900b883a 	mov	r5,r18
    4a44:	000b82c0 	call	b82c <__subdf3>
    4a48:	100d883a 	mov	r6,r2
    4a4c:	180f883a 	mov	r7,r3
    4a50:	9809883a 	mov	r4,r19
    4a54:	a80b883a 	mov	r5,r21
    4a58:	182f883a 	mov	r23,r3
    4a5c:	d8800015 	stw	r2,0(sp)
    4a60:	0009c2c0 	call	9c2c <__adddf3>
    4a64:	d8800217 	ldw	r2,8(sp)
    4a68:	dac00017 	ldw	r11,0(sp)
    4a6c:	1839883a 	mov	fp,r3
    4a70:	1004953a 	slli	r2,r2,20
    4a74:	d8800115 	stw	r2,4(sp)
    4a78:	01cff9b4 	movhi	r7,16358
    4a7c:	e00b883a 	mov	r5,fp
    4a80:	000d883a 	mov	r6,zero
    4a84:	39cb90c4 	addi	r7,r7,11843
    4a88:	0009883a 	mov	r4,zero
    4a8c:	dac00015 	stw	r11,0(sp)
    4a90:	000b0800 	call	b080 <__muldf3>
    4a94:	dac00017 	ldw	r11,0(sp)
    4a98:	b80f883a 	mov	r7,r23
    4a9c:	e00b883a 	mov	r5,fp
    4aa0:	580d883a 	mov	r6,r11
    4aa4:	0009883a 	mov	r4,zero
    4aa8:	182f883a 	mov	r23,r3
    4aac:	102d883a 	mov	r22,r2
    4ab0:	000b82c0 	call	b82c <__subdf3>
    4ab4:	9809883a 	mov	r4,r19
    4ab8:	a80b883a 	mov	r5,r21
    4abc:	100d883a 	mov	r6,r2
    4ac0:	180f883a 	mov	r7,r3
    4ac4:	000b82c0 	call	b82c <__subdf3>
    4ac8:	01bfbeb4 	movhi	r6,65274
    4acc:	01cff9b4 	movhi	r7,16358
    4ad0:	318e7bc4 	addi	r6,r6,14831
    4ad4:	39cb9084 	addi	r7,r7,11842
    4ad8:	1009883a 	mov	r4,r2
    4adc:	180b883a 	mov	r5,r3
    4ae0:	000b0800 	call	b080 <__muldf3>
    4ae4:	01832a34 	movhi	r6,3240
    4ae8:	01ef8834 	movhi	r7,48672
    4aec:	e00b883a 	mov	r5,fp
    4af0:	319b0e44 	addi	r6,r6,27705
    4af4:	39d71844 	addi	r7,r7,23649
    4af8:	0009883a 	mov	r4,zero
    4afc:	1023883a 	mov	r17,r2
    4b00:	1821883a 	mov	r16,r3
    4b04:	000b0800 	call	b080 <__muldf3>
    4b08:	8809883a 	mov	r4,r17
    4b0c:	800b883a 	mov	r5,r16
    4b10:	100d883a 	mov	r6,r2
    4b14:	180f883a 	mov	r7,r3
    4b18:	0009c2c0 	call	9c2c <__adddf3>
    4b1c:	b80b883a 	mov	r5,r23
    4b20:	100d883a 	mov	r6,r2
    4b24:	180f883a 	mov	r7,r3
    4b28:	b009883a 	mov	r4,r22
    4b2c:	1027883a 	mov	r19,r2
    4b30:	1825883a 	mov	r18,r3
    4b34:	0009c2c0 	call	9c2c <__adddf3>
    4b38:	b80f883a 	mov	r7,r23
    4b3c:	b00d883a 	mov	r6,r22
    4b40:	1009883a 	mov	r4,r2
    4b44:	180b883a 	mov	r5,r3
    4b48:	1023883a 	mov	r17,r2
    4b4c:	1821883a 	mov	r16,r3
    4b50:	000b82c0 	call	b82c <__subdf3>
    4b54:	9809883a 	mov	r4,r19
    4b58:	900b883a 	mov	r5,r18
    4b5c:	100d883a 	mov	r6,r2
    4b60:	180f883a 	mov	r7,r3
    4b64:	000b82c0 	call	b82c <__subdf3>
    4b68:	880d883a 	mov	r6,r17
    4b6c:	800f883a 	mov	r7,r16
    4b70:	8809883a 	mov	r4,r17
    4b74:	800b883a 	mov	r5,r16
    4b78:	1039883a 	mov	fp,r2
    4b7c:	182b883a 	mov	r21,r3
    4b80:	000b0800 	call	b080 <__muldf3>
    4b84:	019caff4 	movhi	r6,29375
    4b88:	01cf99b4 	movhi	r7,15974
    4b8c:	31a93404 	addi	r6,r6,-23344
    4b90:	39cdda44 	addi	r7,r7,14185
    4b94:	1009883a 	mov	r4,r2
    4b98:	180b883a 	mov	r5,r3
    4b9c:	1027883a 	mov	r19,r2
    4ba0:	1825883a 	mov	r18,r3
    4ba4:	000b0800 	call	b080 <__muldf3>
    4ba8:	01b174b4 	movhi	r6,50642
    4bac:	01cfaf34 	movhi	r7,16060
    4bb0:	319afc44 	addi	r6,r6,27633
    4bb4:	39ef5044 	addi	r7,r7,-17087
    4bb8:	1009883a 	mov	r4,r2
    4bbc:	180b883a 	mov	r5,r3
    4bc0:	000b82c0 	call	b82c <__subdf3>
    4bc4:	980d883a 	mov	r6,r19
    4bc8:	900f883a 	mov	r7,r18
    4bcc:	1009883a 	mov	r4,r2
    4bd0:	180b883a 	mov	r5,r3
    4bd4:	000b0800 	call	b080 <__muldf3>
    4bd8:	01abc9b4 	movhi	r6,44838
    4bdc:	01cfc474 	movhi	r7,16145
    4be0:	31b78b04 	addi	r6,r6,-8660
    4be4:	39d59a84 	addi	r7,r7,22122
    4be8:	1009883a 	mov	r4,r2
    4bec:	180b883a 	mov	r5,r3
    4bf0:	0009c2c0 	call	9c2c <__adddf3>
    4bf4:	980d883a 	mov	r6,r19
    4bf8:	900f883a 	mov	r7,r18
    4bfc:	1009883a 	mov	r4,r2
    4c00:	180b883a 	mov	r5,r3
    4c04:	000b0800 	call	b080 <__muldf3>
    4c08:	0185aff4 	movhi	r6,5823
    4c0c:	01cfd9f4 	movhi	r7,16231
    4c10:	31af64c4 	addi	r6,r6,-17005
    4c14:	39f05b04 	addi	r7,r7,-16020
    4c18:	1009883a 	mov	r4,r2
    4c1c:	180b883a 	mov	r5,r3
    4c20:	000b82c0 	call	b82c <__subdf3>
    4c24:	980d883a 	mov	r6,r19
    4c28:	900f883a 	mov	r7,r18
    4c2c:	1009883a 	mov	r4,r2
    4c30:	180b883a 	mov	r5,r3
    4c34:	000b0800 	call	b080 <__muldf3>
    4c38:	01955574 	movhi	r6,21845
    4c3c:	01cff174 	movhi	r7,16325
    4c40:	31954f84 	addi	r6,r6,21822
    4c44:	39d55544 	addi	r7,r7,21845
    4c48:	1009883a 	mov	r4,r2
    4c4c:	180b883a 	mov	r5,r3
    4c50:	0009c2c0 	call	9c2c <__adddf3>
    4c54:	980d883a 	mov	r6,r19
    4c58:	900f883a 	mov	r7,r18
    4c5c:	1009883a 	mov	r4,r2
    4c60:	180b883a 	mov	r5,r3
    4c64:	000b0800 	call	b080 <__muldf3>
    4c68:	100d883a 	mov	r6,r2
    4c6c:	180f883a 	mov	r7,r3
    4c70:	8809883a 	mov	r4,r17
    4c74:	800b883a 	mov	r5,r16
    4c78:	000b82c0 	call	b82c <__subdf3>
    4c7c:	100d883a 	mov	r6,r2
    4c80:	180f883a 	mov	r7,r3
    4c84:	8809883a 	mov	r4,r17
    4c88:	800b883a 	mov	r5,r16
    4c8c:	1027883a 	mov	r19,r2
    4c90:	1825883a 	mov	r18,r3
    4c94:	000b0800 	call	b080 <__muldf3>
    4c98:	9809883a 	mov	r4,r19
    4c9c:	900b883a 	mov	r5,r18
    4ca0:	000d883a 	mov	r6,zero
    4ca4:	01d00034 	movhi	r7,16384
    4ca8:	182f883a 	mov	r23,r3
    4cac:	d8800015 	stw	r2,0(sp)
    4cb0:	000b82c0 	call	b82c <__subdf3>
    4cb4:	da400017 	ldw	r9,0(sp)
    4cb8:	100d883a 	mov	r6,r2
    4cbc:	180f883a 	mov	r7,r3
    4cc0:	4809883a 	mov	r4,r9
    4cc4:	b80b883a 	mov	r5,r23
    4cc8:	000a51c0 	call	a51c <__divdf3>
    4ccc:	e00d883a 	mov	r6,fp
    4cd0:	a80f883a 	mov	r7,r21
    4cd4:	8809883a 	mov	r4,r17
    4cd8:	800b883a 	mov	r5,r16
    4cdc:	1027883a 	mov	r19,r2
    4ce0:	1825883a 	mov	r18,r3
    4ce4:	000b0800 	call	b080 <__muldf3>
    4ce8:	e00d883a 	mov	r6,fp
    4cec:	a80f883a 	mov	r7,r21
    4cf0:	1009883a 	mov	r4,r2
    4cf4:	180b883a 	mov	r5,r3
    4cf8:	0009c2c0 	call	9c2c <__adddf3>
    4cfc:	100d883a 	mov	r6,r2
    4d00:	180f883a 	mov	r7,r3
    4d04:	9809883a 	mov	r4,r19
    4d08:	900b883a 	mov	r5,r18
    4d0c:	000b82c0 	call	b82c <__subdf3>
    4d10:	880d883a 	mov	r6,r17
    4d14:	800f883a 	mov	r7,r16
    4d18:	1009883a 	mov	r4,r2
    4d1c:	180b883a 	mov	r5,r3
    4d20:	000b82c0 	call	b82c <__subdf3>
    4d24:	100d883a 	mov	r6,r2
    4d28:	0009883a 	mov	r4,zero
    4d2c:	014ffc34 	movhi	r5,16368
    4d30:	180f883a 	mov	r7,r3
    4d34:	000b82c0 	call	b82c <__subdf3>
    4d38:	180b883a 	mov	r5,r3
    4d3c:	d8c00117 	ldw	r3,4(sp)
    4d40:	1009883a 	mov	r4,r2
    4d44:	194d883a 	add	r6,r3,r5
    4d48:	3007d53a 	srai	r3,r6,20
    4d4c:	00c0b50e 	bge	zero,r3,5024 <__ieee754_pow+0x10ac>
    4d50:	300b883a 	mov	r5,r6
    4d54:	000d883a 	mov	r6,zero
    4d58:	a00f883a 	mov	r7,r20
    4d5c:	000b0800 	call	b080 <__muldf3>
    4d60:	102d883a 	mov	r22,r2
    4d64:	003ca306 	br	3ff4 <__ieee754_pow+0x7c>
    4d68:	88009016 	blt	r17,zero,4fac <__ieee754_pow+0x1034>
    4d6c:	202d883a 	mov	r22,r4
    4d70:	a807883a 	mov	r3,r21
    4d74:	003c9f06 	br	3ff4 <__ieee754_pow+0x7c>
    4d78:	01200034 	movhi	r4,32768
    4d7c:	213fffc4 	addi	r4,r4,-1
    4d80:	00902474 	movhi	r2,16529
    4d84:	1908703a 	and	r4,r3,r4
    4d88:	10b2ffc4 	addi	r2,r2,-13313
    4d8c:	1100750e 	bge	r2,r4,4f64 <__ieee754_pow+0xfec>
    4d90:	008fdbf4 	movhi	r2,16239
    4d94:	108d0004 	addi	r2,r2,13312
    4d98:	1885883a 	add	r2,r3,r2
    4d9c:	1584b03a 	or	r2,r2,r22
    4da0:	10000b1e 	bne	r2,zero,4dd0 <__ieee754_pow+0xe58>
    4da4:	880d883a 	mov	r6,r17
    4da8:	900f883a 	mov	r7,r18
    4dac:	b009883a 	mov	r4,r22
    4db0:	180b883a 	mov	r5,r3
    4db4:	000b82c0 	call	b82c <__subdf3>
    4db8:	980d883a 	mov	r6,r19
    4dbc:	a80f883a 	mov	r7,r21
    4dc0:	1009883a 	mov	r4,r2
    4dc4:	180b883a 	mov	r5,r3
    4dc8:	000aeb00 	call	aeb0 <__gedf2>
    4dcc:	103f0316 	blt	r2,zero,49dc <__ieee754_pow+0xa64>
    4dd0:	0009883a 	mov	r4,zero
    4dd4:	000d883a 	mov	r6,zero
    4dd8:	000f883a 	mov	r7,zero
    4ddc:	a00b883a 	mov	r5,r20
    4de0:	000af980 	call	af98 <__ledf2>
    4de4:	1008803a 	cmplt	r4,r2,zero
    4de8:	003cb906 	br	40d0 <__ieee754_pow+0x158>
    4dec:	050ffc34 	movhi	r20,16368
    4df0:	003eb806 	br	48d4 <__ieee754_pow+0x95c>
    4df4:	000b883a 	mov	r5,zero
    4df8:	003d3906 	br	42e0 <__ieee754_pow+0x368>
    4dfc:	008ffc34 	movhi	r2,16368
    4e00:	10bfff84 	addi	r2,r2,-2
    4e04:	14fcb00e 	bge	r2,r19,40c8 <__ieee754_pow+0x150>
    4e08:	008ffc34 	movhi	r2,16368
    4e0c:	14fcf616 	blt	r2,r19,41e8 <__ieee754_pow+0x270>
    4e10:	000d883a 	mov	r6,zero
    4e14:	01cffc34 	movhi	r7,16368
    4e18:	180b883a 	mov	r5,r3
    4e1c:	000b82c0 	call	b82c <__subdf3>
    4e20:	01cffdf4 	movhi	r7,16375
    4e24:	01980034 	movhi	r6,24576
    4e28:	39c551c4 	addi	r7,r7,5447
    4e2c:	1009883a 	mov	r4,r2
    4e30:	180b883a 	mov	r5,r3
    4e34:	102b883a 	mov	r21,r2
    4e38:	1827883a 	mov	r19,r3
    4e3c:	000b0800 	call	b080 <__muldf3>
    4e40:	01be17b4 	movhi	r6,63582
    4e44:	01cf9574 	movhi	r7,15957
    4e48:	a809883a 	mov	r4,r21
    4e4c:	980b883a 	mov	r5,r19
    4e50:	31b7d104 	addi	r6,r6,-8380
    4e54:	39eb82c4 	addi	r7,r7,-20981
    4e58:	1039883a 	mov	fp,r2
    4e5c:	182f883a 	mov	r23,r3
    4e60:	000b0800 	call	b080 <__muldf3>
    4e64:	a809883a 	mov	r4,r21
    4e68:	980b883a 	mov	r5,r19
    4e6c:	000d883a 	mov	r6,zero
    4e70:	01cff434 	movhi	r7,16336
    4e74:	182d883a 	mov	r22,r3
    4e78:	d8800215 	stw	r2,8(sp)
    4e7c:	000b0800 	call	b080 <__muldf3>
    4e80:	01155574 	movhi	r4,21845
    4e84:	014ff574 	movhi	r5,16341
    4e88:	100d883a 	mov	r6,r2
    4e8c:	180f883a 	mov	r7,r3
    4e90:	21155544 	addi	r4,r4,21845
    4e94:	29555544 	addi	r5,r5,21845
    4e98:	000b82c0 	call	b82c <__subdf3>
    4e9c:	a80d883a 	mov	r6,r21
    4ea0:	980f883a 	mov	r7,r19
    4ea4:	1009883a 	mov	r4,r2
    4ea8:	180b883a 	mov	r5,r3
    4eac:	000b0800 	call	b080 <__muldf3>
    4eb0:	100d883a 	mov	r6,r2
    4eb4:	180f883a 	mov	r7,r3
    4eb8:	0009883a 	mov	r4,zero
    4ebc:	014ff834 	movhi	r5,16352
    4ec0:	000b82c0 	call	b82c <__subdf3>
    4ec4:	a80d883a 	mov	r6,r21
    4ec8:	980f883a 	mov	r7,r19
    4ecc:	a809883a 	mov	r4,r21
    4ed0:	980b883a 	mov	r5,r19
    4ed4:	d8800115 	stw	r2,4(sp)
    4ed8:	d8c00015 	stw	r3,0(sp)
    4edc:	000b0800 	call	b080 <__muldf3>
    4ee0:	da800117 	ldw	r10,4(sp)
    4ee4:	da400017 	ldw	r9,0(sp)
    4ee8:	100d883a 	mov	r6,r2
    4eec:	5009883a 	mov	r4,r10
    4ef0:	480b883a 	mov	r5,r9
    4ef4:	180f883a 	mov	r7,r3
    4ef8:	000b0800 	call	b080 <__muldf3>
    4efc:	01994b34 	movhi	r6,25900
    4f00:	01cffdf4 	movhi	r7,16375
    4f04:	31a0bf84 	addi	r6,r6,-32002
    4f08:	39c551c4 	addi	r7,r7,5447
    4f0c:	1009883a 	mov	r4,r2
    4f10:	180b883a 	mov	r5,r3
    4f14:	000b0800 	call	b080 <__muldf3>
    4f18:	da000217 	ldw	r8,8(sp)
    4f1c:	b00b883a 	mov	r5,r22
    4f20:	100d883a 	mov	r6,r2
    4f24:	4009883a 	mov	r4,r8
    4f28:	180f883a 	mov	r7,r3
    4f2c:	000b82c0 	call	b82c <__subdf3>
    4f30:	100d883a 	mov	r6,r2
    4f34:	180f883a 	mov	r7,r3
    4f38:	e009883a 	mov	r4,fp
    4f3c:	b80b883a 	mov	r5,r23
    4f40:	102d883a 	mov	r22,r2
    4f44:	182b883a 	mov	r21,r3
    4f48:	0009c2c0 	call	9c2c <__adddf3>
    4f4c:	1827883a 	mov	r19,r3
    4f50:	e00d883a 	mov	r6,fp
    4f54:	b80f883a 	mov	r7,r23
    4f58:	0009883a 	mov	r4,zero
    4f5c:	180b883a 	mov	r5,r3
    4f60:	003e5006 	br	48a4 <__ieee754_pow+0x92c>
    4f64:	008ff834 	movhi	r2,16352
    4f68:	11004316 	blt	r2,r4,5078 <__ieee754_pow+0x1100>
    4f6c:	d8000115 	stw	zero,4(sp)
    4f70:	d8000215 	stw	zero,8(sp)
    4f74:	003ec006 	br	4a78 <__ieee754_pow+0xb00>
    4f78:	0007883a 	mov	r3,zero
    4f7c:	003c1d06 	br	3ff4 <__ieee754_pow+0x7c>
    4f80:	883ffd0e 	bge	r17,zero,4f78 <__ieee754_pow+0x1000>
    4f84:	88e0003c 	xorhi	r3,r17,32768
    4f88:	003c1a06 	br	3ff4 <__ieee754_pow+0x7c>
    4f8c:	803c781e 	bne	r16,zero,4170 <__ieee754_pow+0x1f8>
    4f90:	00c00504 	movi	r3,20
    4f94:	1885c83a 	sub	r2,r3,r2
    4f98:	3087d83a 	sra	r3,r6,r2
    4f9c:	1884983a 	sll	r2,r3,r2
    4fa0:	11803126 	beq	r2,r6,5068 <__ieee754_pow+0x10f0>
    4fa4:	0025883a 	mov	r18,zero
    4fa8:	003c5d06 	br	4120 <__ieee754_pow+0x1a8>
    4fac:	200d883a 	mov	r6,r4
    4fb0:	a80f883a 	mov	r7,r21
    4fb4:	0009883a 	mov	r4,zero
    4fb8:	014ffc34 	movhi	r5,16368
    4fbc:	000a51c0 	call	a51c <__divdf3>
    4fc0:	102d883a 	mov	r22,r2
    4fc4:	003c0b06 	br	3ff4 <__ieee754_pow+0x7c>
    4fc8:	200d883a 	mov	r6,r4
    4fcc:	a80f883a 	mov	r7,r21
    4fd0:	a80b883a 	mov	r5,r21
    4fd4:	000b0800 	call	b080 <__muldf3>
    4fd8:	102d883a 	mov	r22,r2
    4fdc:	003c0506 	br	3ff4 <__ieee754_pow+0x7c>
    4fe0:	94800058 	cmpnei	r18,r18,1
    4fe4:	903c031e 	bne	r18,zero,3ff4 <__ieee754_pow+0x7c>
    4fe8:	18e0003c 	xorhi	r3,r3,32768
    4fec:	003c0106 	br	3ff4 <__ieee754_pow+0x7c>
    4ff0:	008ff8f4 	movhi	r2,16355
    4ff4:	10ae00c4 	addi	r2,r2,-18429
    4ff8:	00d0f434 	movhi	r3,17360
    4ffc:	03cf9374 	movhi	r15,15949
    5000:	01100034 	movhi	r4,16384
    5004:	d8800115 	stw	r2,4(sp)
    5008:	18b40184 	addi	r2,r3,-12282
    500c:	d9000015 	stw	r4,0(sp)
    5010:	d8800a15 	stw	r2,40(sp)
    5014:	7bff7ac4 	addi	r15,r15,-533
    5018:	05c00134 	movhi	r23,4
    501c:	034ffe34 	movhi	r13,16376
    5020:	003cc506 	br	4338 <__ieee754_pow+0x3c0>
    5024:	d9800217 	ldw	r6,8(sp)
    5028:	00085980 	call	8598 <scalbn>
    502c:	1009883a 	mov	r4,r2
    5030:	180b883a 	mov	r5,r3
    5034:	003f4706 	br	4d54 <__ieee754_pow+0xddc>
    5038:	0009883a 	mov	r4,zero
    503c:	000d883a 	mov	r6,zero
    5040:	000f883a 	mov	r7,zero
    5044:	a00b883a 	mov	r5,r20
    5048:	000af980 	call	af98 <__ledf2>
    504c:	1008803a 	cmplt	r4,r2,zero
    5050:	003c6706 	br	41f0 <__ieee754_pow+0x278>
    5054:	18c0004c 	andi	r3,r3,1
    5058:	04800084 	movi	r18,2
    505c:	90e5c83a 	sub	r18,r18,r3
    5060:	803c2f26 	beq	r16,zero,4120 <__ieee754_pow+0x1a8>
    5064:	003c0906 	br	408c <__ieee754_pow+0x114>
    5068:	18c0004c 	andi	r3,r3,1
    506c:	04800084 	movi	r18,2
    5070:	90e5c83a 	sub	r18,r18,r3
    5074:	003c2a06 	br	4120 <__ieee754_pow+0x1a8>
    5078:	2009d53a 	srai	r4,r4,20
    507c:	003e5906 	br	49e4 <__ieee754_pow+0xa6c>

00005080 <__ieee754_rem_pio2>:
    5080:	deffea04 	addi	sp,sp,-88
    5084:	dc000c15 	stw	r16,48(sp)
    5088:	04200034 	movhi	r16,32768
    508c:	843fffc4 	addi	r16,r16,-1
    5090:	008ffa74 	movhi	r2,16361
    5094:	dcc00f15 	stw	r19,60(sp)
    5098:	dc800e15 	stw	r18,56(sp)
    509c:	dc400d15 	stw	r17,52(sp)
    50a0:	dfc01515 	stw	ra,84(sp)
    50a4:	df001415 	stw	fp,80(sp)
    50a8:	ddc01315 	stw	r23,76(sp)
    50ac:	dd801215 	stw	r22,72(sp)
    50b0:	dd401115 	stw	r21,68(sp)
    50b4:	dd001015 	stw	r20,64(sp)
    50b8:	2c20703a 	and	r16,r5,r16
    50bc:	10887ec4 	addi	r2,r2,8699
    50c0:	2825883a 	mov	r18,r5
    50c4:	2027883a 	mov	r19,r4
    50c8:	3023883a 	mov	r17,r6
    50cc:	14008b0e 	bge	r2,r16,52fc <__ieee754_rem_pio2+0x27c>
    50d0:	009000f4 	movhi	r2,16387
    50d4:	10b65ec4 	addi	r2,r2,-9861
    50d8:	14002f16 	blt	r2,r16,5198 <__ieee754_rem_pio2+0x118>
    50dc:	01cffe74 	movhi	r7,16377
    50e0:	01951034 	movhi	r6,21568
    50e4:	39c87ec4 	addi	r7,r7,8699
    50e8:	01417e0e 	bge	zero,r5,56e4 <__ieee754_rem_pio2+0x664>
    50ec:	000b82c0 	call	b82c <__subdf3>
    50f0:	018ffe74 	movhi	r6,16377
    50f4:	31887ec4 	addi	r6,r6,8699
    50f8:	1009883a 	mov	r4,r2
    50fc:	180b883a 	mov	r5,r3
    5100:	8180cb26 	beq	r16,r6,5430 <__ieee754_rem_pio2+0x3b0>
    5104:	018698b4 	movhi	r6,6754
    5108:	01cf7474 	movhi	r7,15825
    510c:	3198cc44 	addi	r6,r6,25393
    5110:	39ed1844 	addi	r7,r7,-19359
    5114:	d8800315 	stw	r2,12(sp)
    5118:	d8c00215 	stw	r3,8(sp)
    511c:	000b82c0 	call	b82c <__subdf3>
    5120:	d9000317 	ldw	r4,12(sp)
    5124:	d9400217 	ldw	r5,8(sp)
    5128:	100d883a 	mov	r6,r2
    512c:	180f883a 	mov	r7,r3
    5130:	88800015 	stw	r2,0(r17)
    5134:	88c00115 	stw	r3,4(r17)
    5138:	000b82c0 	call	b82c <__subdf3>
    513c:	018698b4 	movhi	r6,6754
    5140:	01cf7474 	movhi	r7,15825
    5144:	3198cc44 	addi	r6,r6,25393
    5148:	39ed1844 	addi	r7,r7,-19359
    514c:	1009883a 	mov	r4,r2
    5150:	180b883a 	mov	r5,r3
    5154:	000b82c0 	call	b82c <__subdf3>
    5158:	88800215 	stw	r2,8(r17)
    515c:	88c00315 	stw	r3,12(r17)
    5160:	05000044 	movi	r20,1
    5164:	a005883a 	mov	r2,r20
    5168:	dfc01517 	ldw	ra,84(sp)
    516c:	df001417 	ldw	fp,80(sp)
    5170:	ddc01317 	ldw	r23,76(sp)
    5174:	dd801217 	ldw	r22,72(sp)
    5178:	dd401117 	ldw	r21,68(sp)
    517c:	dd001017 	ldw	r20,64(sp)
    5180:	dcc00f17 	ldw	r19,60(sp)
    5184:	dc800e17 	ldw	r18,56(sp)
    5188:	dc400d17 	ldw	r17,52(sp)
    518c:	dc000c17 	ldw	r16,48(sp)
    5190:	dec01604 	addi	sp,sp,88
    5194:	f800283a 	ret
    5198:	00904e74 	movhi	r2,16697
    519c:	10887ec4 	addi	r2,r2,8699
    51a0:	14005c16 	blt	r2,r16,5314 <__ieee754_rem_pio2+0x294>
    51a4:	019b72b4 	movhi	r6,28106
    51a8:	01cff934 	movhi	r7,16356
    51ac:	31b220c4 	addi	r6,r6,-14205
    51b0:	39d7cc04 	addi	r7,r7,24368
    51b4:	800b883a 	mov	r5,r16
    51b8:	000b0800 	call	b080 <__muldf3>
    51bc:	000d883a 	mov	r6,zero
    51c0:	01cff834 	movhi	r7,16352
    51c4:	1009883a 	mov	r4,r2
    51c8:	180b883a 	mov	r5,r3
    51cc:	0009c2c0 	call	9c2c <__adddf3>
    51d0:	180b883a 	mov	r5,r3
    51d4:	1009883a 	mov	r4,r2
    51d8:	000c18c0 	call	c18c <__fixdfsi>
    51dc:	1009883a 	mov	r4,r2
    51e0:	1029883a 	mov	r20,r2
    51e4:	000c20c0 	call	c20c <__floatsidf>
    51e8:	01cffe74 	movhi	r7,16377
    51ec:	01951034 	movhi	r6,21568
    51f0:	39c87ec4 	addi	r7,r7,8699
    51f4:	1009883a 	mov	r4,r2
    51f8:	180b883a 	mov	r5,r3
    51fc:	102d883a 	mov	r22,r2
    5200:	182b883a 	mov	r21,r3
    5204:	000b0800 	call	b080 <__muldf3>
    5208:	9809883a 	mov	r4,r19
    520c:	100d883a 	mov	r6,r2
    5210:	180f883a 	mov	r7,r3
    5214:	800b883a 	mov	r5,r16
    5218:	000b82c0 	call	b82c <__subdf3>
    521c:	018698b4 	movhi	r6,6754
    5220:	01cf7474 	movhi	r7,15825
    5224:	3198cc44 	addi	r6,r6,25393
    5228:	39ed1844 	addi	r7,r7,-19359
    522c:	b009883a 	mov	r4,r22
    5230:	a80b883a 	mov	r5,r21
    5234:	1039883a 	mov	fp,r2
    5238:	d8c00215 	stw	r3,8(sp)
    523c:	000b0800 	call	b080 <__muldf3>
    5240:	db000217 	ldw	r12,8(sp)
    5244:	e009883a 	mov	r4,fp
    5248:	100d883a 	mov	r6,r2
    524c:	600b883a 	mov	r5,r12
    5250:	180f883a 	mov	r7,r3
    5254:	db000315 	stw	r12,12(sp)
    5258:	102f883a 	mov	r23,r2
    525c:	1827883a 	mov	r19,r3
    5260:	df000415 	stw	fp,16(sp)
    5264:	000b82c0 	call	b82c <__subdf3>
    5268:	a1000808 	cmpgei	r4,r20,32
    526c:	db000317 	ldw	r12,12(sp)
    5270:	1017883a 	mov	r11,r2
    5274:	1815883a 	mov	r10,r3
    5278:	e01b883a 	mov	r13,fp
    527c:	2000851e 	bne	r4,zero,5494 <__ieee754_rem_pio2+0x414>
    5280:	a00a90ba 	slli	r5,r20,2
    5284:	010000b4 	movhi	r4,2
    5288:	2909883a 	add	r4,r5,r4
    528c:	2128aa17 	ldw	r4,-23896(r4)
    5290:	24008026 	beq	r4,r16,5494 <__ieee754_rem_pio2+0x414>
    5294:	88800015 	stw	r2,0(r17)
    5298:	88c00115 	stw	r3,4(r17)
    529c:	580d883a 	mov	r6,r11
    52a0:	500f883a 	mov	r7,r10
    52a4:	6809883a 	mov	r4,r13
    52a8:	600b883a 	mov	r5,r12
    52ac:	dac00315 	stw	r11,12(sp)
    52b0:	da800215 	stw	r10,8(sp)
    52b4:	000b82c0 	call	b82c <__subdf3>
    52b8:	b80d883a 	mov	r6,r23
    52bc:	980f883a 	mov	r7,r19
    52c0:	1009883a 	mov	r4,r2
    52c4:	180b883a 	mov	r5,r3
    52c8:	000b82c0 	call	b82c <__subdf3>
    52cc:	88800215 	stw	r2,8(r17)
    52d0:	88c00315 	stw	r3,12(r17)
    52d4:	903fa30e 	bge	r18,zero,5164 <__ieee754_rem_pio2+0xe4>
    52d8:	da800217 	ldw	r10,8(sp)
    52dc:	dac00317 	ldw	r11,12(sp)
    52e0:	18e0003c 	xorhi	r3,r3,32768
    52e4:	52a0003c 	xorhi	r10,r10,32768
    52e8:	8ac00015 	stw	r11,0(r17)
    52ec:	8a800115 	stw	r10,4(r17)
    52f0:	88c00315 	stw	r3,12(r17)
    52f4:	0529c83a 	sub	r20,zero,r20
    52f8:	003f9a06 	br	5164 <__ieee754_rem_pio2+0xe4>
    52fc:	89000015 	stw	r4,0(r17)
    5300:	89400115 	stw	r5,4(r17)
    5304:	30000215 	stw	zero,8(r6)
    5308:	30000315 	stw	zero,12(r6)
    530c:	0029883a 	mov	r20,zero
    5310:	003f9406 	br	5164 <__ieee754_rem_pio2+0xe4>
    5314:	009ffc34 	movhi	r2,32752
    5318:	8080670e 	bge	r16,r2,54b8 <__ieee754_rem_pio2+0x438>
    531c:	8029d53a 	srai	r20,r16,20
    5320:	a53efa84 	addi	r20,r20,-1046
    5324:	a00a953a 	slli	r5,r20,20
    5328:	8161c83a 	sub	r16,r16,r5
    532c:	800b883a 	mov	r5,r16
    5330:	000c18c0 	call	c18c <__fixdfsi>
    5334:	1009883a 	mov	r4,r2
    5338:	000c20c0 	call	c20c <__floatsidf>
    533c:	9809883a 	mov	r4,r19
    5340:	800b883a 	mov	r5,r16
    5344:	100d883a 	mov	r6,r2
    5348:	180f883a 	mov	r7,r3
    534c:	d8800615 	stw	r2,24(sp)
    5350:	d8c00715 	stw	r3,28(sp)
    5354:	000b82c0 	call	b82c <__subdf3>
    5358:	000d883a 	mov	r6,zero
    535c:	01d05c34 	movhi	r7,16752
    5360:	1009883a 	mov	r4,r2
    5364:	180b883a 	mov	r5,r3
    5368:	000b0800 	call	b080 <__muldf3>
    536c:	180b883a 	mov	r5,r3
    5370:	1009883a 	mov	r4,r2
    5374:	1821883a 	mov	r16,r3
    5378:	1027883a 	mov	r19,r2
    537c:	000c18c0 	call	c18c <__fixdfsi>
    5380:	1009883a 	mov	r4,r2
    5384:	102b883a 	mov	r21,r2
    5388:	000c20c0 	call	c20c <__floatsidf>
    538c:	100d883a 	mov	r6,r2
    5390:	180f883a 	mov	r7,r3
    5394:	9809883a 	mov	r4,r19
    5398:	800b883a 	mov	r5,r16
    539c:	d8800815 	stw	r2,32(sp)
    53a0:	d8c00915 	stw	r3,36(sp)
    53a4:	000b82c0 	call	b82c <__subdf3>
    53a8:	000d883a 	mov	r6,zero
    53ac:	01d05c34 	movhi	r7,16752
    53b0:	1009883a 	mov	r4,r2
    53b4:	180b883a 	mov	r5,r3
    53b8:	000b0800 	call	b080 <__muldf3>
    53bc:	1009883a 	mov	r4,r2
    53c0:	180b883a 	mov	r5,r3
    53c4:	000d883a 	mov	r6,zero
    53c8:	000f883a 	mov	r7,zero
    53cc:	d8800a15 	stw	r2,40(sp)
    53d0:	d8c00b15 	stw	r3,44(sp)
    53d4:	000ae300 	call	ae30 <__eqdf2>
    53d8:	1000c01e 	bne	r2,zero,56dc <__ieee754_rem_pio2+0x65c>
    53dc:	a800bd1e 	bne	r21,zero,56d4 <__ieee754_rem_pio2+0x654>
    53e0:	01c00044 	movi	r7,1
    53e4:	008000b4 	movhi	r2,2
    53e8:	10a8cb04 	addi	r2,r2,-23764
    53ec:	d8800115 	stw	r2,4(sp)
    53f0:	00800084 	movi	r2,2
    53f4:	a00d883a 	mov	r6,r20
    53f8:	d8800015 	stw	r2,0(sp)
    53fc:	880b883a 	mov	r5,r17
    5400:	d9000604 	addi	r4,sp,24
    5404:	00063e00 	call	63e0 <__kernel_rem_pio2>
    5408:	1029883a 	mov	r20,r2
    540c:	903f550e 	bge	r18,zero,5164 <__ieee754_rem_pio2+0xe4>
    5410:	88c00117 	ldw	r3,4(r17)
    5414:	88800317 	ldw	r2,12(r17)
    5418:	0529c83a 	sub	r20,zero,r20
    541c:	18e0003c 	xorhi	r3,r3,32768
    5420:	10a0003c 	xorhi	r2,r2,32768
    5424:	88c00115 	stw	r3,4(r17)
    5428:	88800315 	stw	r2,12(r17)
    542c:	003f4d06 	br	5164 <__ieee754_rem_pio2+0xe4>
    5430:	01cf7474 	movhi	r7,15825
    5434:	01869834 	movhi	r6,6752
    5438:	39ed1844 	addi	r7,r7,-19359
    543c:	000b82c0 	call	b82c <__subdf3>
    5440:	018b80f4 	movhi	r6,11779
    5444:	01cee8f4 	movhi	r7,15267
    5448:	319c1cc4 	addi	r6,r6,28787
    544c:	39c66284 	addi	r7,r7,6538
    5450:	1009883a 	mov	r4,r2
    5454:	180b883a 	mov	r5,r3
    5458:	1025883a 	mov	r18,r2
    545c:	1821883a 	mov	r16,r3
    5460:	000b82c0 	call	b82c <__subdf3>
    5464:	100d883a 	mov	r6,r2
    5468:	180f883a 	mov	r7,r3
    546c:	9009883a 	mov	r4,r18
    5470:	800b883a 	mov	r5,r16
    5474:	88800015 	stw	r2,0(r17)
    5478:	88c00115 	stw	r3,4(r17)
    547c:	000b82c0 	call	b82c <__subdf3>
    5480:	018b80f4 	movhi	r6,11779
    5484:	01cee8f4 	movhi	r7,15267
    5488:	319c1cc4 	addi	r6,r6,28787
    548c:	39c66284 	addi	r7,r7,6538
    5490:	003f2e06 	br	514c <__ieee754_rem_pio2+0xcc>
    5494:	1812d53a 	srli	r9,r3,20
    5498:	8021d53a 	srai	r16,r16,20
    549c:	4a41ffcc 	andi	r9,r9,2047
    54a0:	8253c83a 	sub	r9,r16,r9
    54a4:	4a400448 	cmpgei	r9,r9,17
    54a8:	48000c1e 	bne	r9,zero,54dc <__ieee754_rem_pio2+0x45c>
    54ac:	88800015 	stw	r2,0(r17)
    54b0:	88c00115 	stw	r3,4(r17)
    54b4:	003f7906 	br	529c <__ieee754_rem_pio2+0x21c>
    54b8:	200d883a 	mov	r6,r4
    54bc:	280f883a 	mov	r7,r5
    54c0:	000b82c0 	call	b82c <__subdf3>
    54c4:	88800215 	stw	r2,8(r17)
    54c8:	88c00315 	stw	r3,12(r17)
    54cc:	88800015 	stw	r2,0(r17)
    54d0:	88c00115 	stw	r3,4(r17)
    54d4:	0029883a 	mov	r20,zero
    54d8:	003f2206 	br	5164 <__ieee754_rem_pio2+0xe4>
    54dc:	01cf7474 	movhi	r7,15825
    54e0:	01869834 	movhi	r6,6752
    54e4:	39ed1844 	addi	r7,r7,-19359
    54e8:	b009883a 	mov	r4,r22
    54ec:	a80b883a 	mov	r5,r21
    54f0:	000b0800 	call	b080 <__muldf3>
    54f4:	d9400217 	ldw	r5,8(sp)
    54f8:	100d883a 	mov	r6,r2
    54fc:	180f883a 	mov	r7,r3
    5500:	e009883a 	mov	r4,fp
    5504:	102f883a 	mov	r23,r2
    5508:	1827883a 	mov	r19,r3
    550c:	000b82c0 	call	b82c <__subdf3>
    5510:	d9400217 	ldw	r5,8(sp)
    5514:	100d883a 	mov	r6,r2
    5518:	180f883a 	mov	r7,r3
    551c:	e009883a 	mov	r4,fp
    5520:	d8800315 	stw	r2,12(sp)
    5524:	d8c00415 	stw	r3,16(sp)
    5528:	000b82c0 	call	b82c <__subdf3>
    552c:	b80d883a 	mov	r6,r23
    5530:	980f883a 	mov	r7,r19
    5534:	1009883a 	mov	r4,r2
    5538:	180b883a 	mov	r5,r3
    553c:	000b82c0 	call	b82c <__subdf3>
    5540:	018b80f4 	movhi	r6,11779
    5544:	01cee8f4 	movhi	r7,15267
    5548:	319c1cc4 	addi	r6,r6,28787
    554c:	39c66284 	addi	r7,r7,6538
    5550:	b009883a 	mov	r4,r22
    5554:	a80b883a 	mov	r5,r21
    5558:	102f883a 	mov	r23,r2
    555c:	1827883a 	mov	r19,r3
    5560:	000b0800 	call	b080 <__muldf3>
    5564:	b80d883a 	mov	r6,r23
    5568:	980f883a 	mov	r7,r19
    556c:	1009883a 	mov	r4,r2
    5570:	180b883a 	mov	r5,r3
    5574:	000b82c0 	call	b82c <__subdf3>
    5578:	da400417 	ldw	r9,16(sp)
    557c:	db800317 	ldw	r14,12(sp)
    5580:	100d883a 	mov	r6,r2
    5584:	480b883a 	mov	r5,r9
    5588:	7009883a 	mov	r4,r14
    558c:	180f883a 	mov	r7,r3
    5590:	da400215 	stw	r9,8(sp)
    5594:	102f883a 	mov	r23,r2
    5598:	1827883a 	mov	r19,r3
    559c:	000b82c0 	call	b82c <__subdf3>
    55a0:	1815883a 	mov	r10,r3
    55a4:	1806d53a 	srli	r3,r3,20
    55a8:	da400217 	ldw	r9,8(sp)
    55ac:	db800317 	ldw	r14,12(sp)
    55b0:	18c1ffcc 	andi	r3,r3,2047
    55b4:	80e1c83a 	sub	r16,r16,r3
    55b8:	84000c88 	cmpgei	r16,r16,50
    55bc:	1017883a 	mov	r11,r2
    55c0:	80003f26 	beq	r16,zero,56c0 <__ieee754_rem_pio2+0x640>
    55c4:	01cee8f4 	movhi	r7,15267
    55c8:	018b8034 	movhi	r6,11776
    55cc:	39c66284 	addi	r7,r7,6538
    55d0:	b009883a 	mov	r4,r22
    55d4:	a80b883a 	mov	r5,r21
    55d8:	da400315 	stw	r9,12(sp)
    55dc:	db800215 	stw	r14,8(sp)
    55e0:	000b0800 	call	b080 <__muldf3>
    55e4:	db800217 	ldw	r14,8(sp)
    55e8:	da400317 	ldw	r9,12(sp)
    55ec:	100d883a 	mov	r6,r2
    55f0:	7009883a 	mov	r4,r14
    55f4:	480b883a 	mov	r5,r9
    55f8:	180f883a 	mov	r7,r3
    55fc:	1027883a 	mov	r19,r2
    5600:	1821883a 	mov	r16,r3
    5604:	db800515 	stw	r14,20(sp)
    5608:	da400415 	stw	r9,16(sp)
    560c:	000b82c0 	call	b82c <__subdf3>
    5610:	db800517 	ldw	r14,20(sp)
    5614:	da400417 	ldw	r9,16(sp)
    5618:	100d883a 	mov	r6,r2
    561c:	7009883a 	mov	r4,r14
    5620:	480b883a 	mov	r5,r9
    5624:	180f883a 	mov	r7,r3
    5628:	d8800315 	stw	r2,12(sp)
    562c:	d8c00215 	stw	r3,8(sp)
    5630:	000b82c0 	call	b82c <__subdf3>
    5634:	980d883a 	mov	r6,r19
    5638:	800f883a 	mov	r7,r16
    563c:	1009883a 	mov	r4,r2
    5640:	180b883a 	mov	r5,r3
    5644:	000b82c0 	call	b82c <__subdf3>
    5648:	01894834 	movhi	r6,9504
    564c:	01ce5f34 	movhi	r7,14716
    5650:	31927044 	addi	r6,r6,18881
    5654:	39e0e684 	addi	r7,r7,-31846
    5658:	b009883a 	mov	r4,r22
    565c:	a80b883a 	mov	r5,r21
    5660:	1027883a 	mov	r19,r2
    5664:	1821883a 	mov	r16,r3
    5668:	000b0800 	call	b080 <__muldf3>
    566c:	980d883a 	mov	r6,r19
    5670:	800f883a 	mov	r7,r16
    5674:	1009883a 	mov	r4,r2
    5678:	180b883a 	mov	r5,r3
    567c:	000b82c0 	call	b82c <__subdf3>
    5680:	db400317 	ldw	r13,12(sp)
    5684:	db000217 	ldw	r12,8(sp)
    5688:	100d883a 	mov	r6,r2
    568c:	6809883a 	mov	r4,r13
    5690:	600b883a 	mov	r5,r12
    5694:	180f883a 	mov	r7,r3
    5698:	102f883a 	mov	r23,r2
    569c:	1827883a 	mov	r19,r3
    56a0:	000b82c0 	call	b82c <__subdf3>
    56a4:	db400317 	ldw	r13,12(sp)
    56a8:	db000217 	ldw	r12,8(sp)
    56ac:	1017883a 	mov	r11,r2
    56b0:	1815883a 	mov	r10,r3
    56b4:	88800015 	stw	r2,0(r17)
    56b8:	88c00115 	stw	r3,4(r17)
    56bc:	003ef706 	br	529c <__ieee754_rem_pio2+0x21c>
    56c0:	88800015 	stw	r2,0(r17)
    56c4:	8a800115 	stw	r10,4(r17)
    56c8:	701b883a 	mov	r13,r14
    56cc:	4819883a 	mov	r12,r9
    56d0:	003ef206 	br	529c <__ieee754_rem_pio2+0x21c>
    56d4:	01c00084 	movi	r7,2
    56d8:	003f4206 	br	53e4 <__ieee754_rem_pio2+0x364>
    56dc:	01c000c4 	movi	r7,3
    56e0:	003f4006 	br	53e4 <__ieee754_rem_pio2+0x364>
    56e4:	0009c2c0 	call	9c2c <__adddf3>
    56e8:	010ffe74 	movhi	r4,16377
    56ec:	21087ec4 	addi	r4,r4,8699
    56f0:	1027883a 	mov	r19,r2
    56f4:	1825883a 	mov	r18,r3
    56f8:	81001926 	beq	r16,r4,5760 <__ieee754_rem_pio2+0x6e0>
    56fc:	018698b4 	movhi	r6,6754
    5700:	01cf7474 	movhi	r7,15825
    5704:	3198cc44 	addi	r6,r6,25393
    5708:	39ed1844 	addi	r7,r7,-19359
    570c:	1009883a 	mov	r4,r2
    5710:	180b883a 	mov	r5,r3
    5714:	0009c2c0 	call	9c2c <__adddf3>
    5718:	100d883a 	mov	r6,r2
    571c:	180f883a 	mov	r7,r3
    5720:	9809883a 	mov	r4,r19
    5724:	900b883a 	mov	r5,r18
    5728:	88800015 	stw	r2,0(r17)
    572c:	88c00115 	stw	r3,4(r17)
    5730:	000b82c0 	call	b82c <__subdf3>
    5734:	018698b4 	movhi	r6,6754
    5738:	01cf7474 	movhi	r7,15825
    573c:	3198cc44 	addi	r6,r6,25393
    5740:	39ed1844 	addi	r7,r7,-19359
    5744:	1009883a 	mov	r4,r2
    5748:	180b883a 	mov	r5,r3
    574c:	0009c2c0 	call	9c2c <__adddf3>
    5750:	88800215 	stw	r2,8(r17)
    5754:	88c00315 	stw	r3,12(r17)
    5758:	053fffc4 	movi	r20,-1
    575c:	003e8106 	br	5164 <__ieee754_rem_pio2+0xe4>
    5760:	01cf7474 	movhi	r7,15825
    5764:	01869834 	movhi	r6,6752
    5768:	39ed1844 	addi	r7,r7,-19359
    576c:	1009883a 	mov	r4,r2
    5770:	180b883a 	mov	r5,r3
    5774:	0009c2c0 	call	9c2c <__adddf3>
    5778:	018b80f4 	movhi	r6,11779
    577c:	01cee8f4 	movhi	r7,15267
    5780:	319c1cc4 	addi	r6,r6,28787
    5784:	39c66284 	addi	r7,r7,6538
    5788:	1009883a 	mov	r4,r2
    578c:	180b883a 	mov	r5,r3
    5790:	1025883a 	mov	r18,r2
    5794:	1821883a 	mov	r16,r3
    5798:	0009c2c0 	call	9c2c <__adddf3>
    579c:	100d883a 	mov	r6,r2
    57a0:	180f883a 	mov	r7,r3
    57a4:	9009883a 	mov	r4,r18
    57a8:	800b883a 	mov	r5,r16
    57ac:	88800015 	stw	r2,0(r17)
    57b0:	88c00115 	stw	r3,4(r17)
    57b4:	000b82c0 	call	b82c <__subdf3>
    57b8:	018b80f4 	movhi	r6,11779
    57bc:	01cee8f4 	movhi	r7,15267
    57c0:	319c1cc4 	addi	r6,r6,28787
    57c4:	39c66284 	addi	r7,r7,6538
    57c8:	003fde06 	br	5744 <__ieee754_rem_pio2+0x6c4>

000057cc <__ieee754_sqrt>:
    57cc:	defffd04 	addi	sp,sp,-12
    57d0:	dc400115 	stw	r17,4(sp)
    57d4:	dc000015 	stw	r16,0(sp)
    57d8:	dfc00215 	stw	ra,8(sp)
    57dc:	28dffc2c 	andhi	r3,r5,32752
    57e0:	009ffc34 	movhi	r2,32752
    57e4:	2821883a 	mov	r16,r5
    57e8:	2023883a 	mov	r17,r4
    57ec:	18807726 	beq	r3,r2,59cc <__ieee754_sqrt+0x200>
    57f0:	2011883a 	mov	r8,r4
    57f4:	01403a0e 	bge	zero,r5,58e0 <__ieee754_sqrt+0x114>
    57f8:	2807d53a 	srai	r3,r5,20
    57fc:	18004626 	beq	r3,zero,5918 <__ieee754_sqrt+0x14c>
    5800:	00800434 	movhi	r2,16
    5804:	1aff0044 	addi	r11,r3,-1023
    5808:	10bfffc4 	addi	r2,r2,-1
    580c:	8084703a 	and	r2,r16,r2
    5810:	5900004c 	andi	r4,r11,1
    5814:	10c00434 	orhi	r3,r2,16
    5818:	20000426 	beq	r4,zero,582c <__ieee754_sqrt+0x60>
    581c:	4004d7fa 	srli	r2,r8,31
    5820:	18c7883a 	add	r3,r3,r3
    5824:	4211883a 	add	r8,r8,r8
    5828:	10c7883a 	add	r3,r2,r3
    582c:	4004d7fa 	srli	r2,r8,31
    5830:	5817d07a 	srai	r11,r11,1
    5834:	18c7883a 	add	r3,r3,r3
    5838:	1887883a 	add	r3,r3,r2
    583c:	4209883a 	add	r4,r8,r8
    5840:	01c00584 	movi	r7,22
    5844:	0019883a 	mov	r12,zero
    5848:	000b883a 	mov	r5,zero
    584c:	00800834 	movhi	r2,32
    5850:	288d883a 	add	r6,r5,r2
    5854:	2010d7fa 	srli	r8,r4,31
    5858:	39ffffc4 	addi	r7,r7,-1
    585c:	19800316 	blt	r3,r6,586c <__ieee754_sqrt+0xa0>
    5860:	1987c83a 	sub	r3,r3,r6
    5864:	308b883a 	add	r5,r6,r2
    5868:	6099883a 	add	r12,r12,r2
    586c:	18c7883a 	add	r3,r3,r3
    5870:	1004d07a 	srli	r2,r2,1
    5874:	40c7883a 	add	r3,r8,r3
    5878:	2109883a 	add	r4,r4,r4
    587c:	383ff41e 	bne	r7,zero,5850 <__ieee754_sqrt+0x84>
    5880:	0013883a 	mov	r9,zero
    5884:	00800804 	movi	r2,32
    5888:	01a00034 	movhi	r6,32768
    588c:	00000806 	br	58b0 <__ieee754_sqrt+0xe4>
    5890:	19403326 	beq	r3,r5,5960 <__ieee754_sqrt+0x194>
    5894:	2010d7fa 	srli	r8,r4,31
    5898:	18c7883a 	add	r3,r3,r3
    589c:	10bfffc4 	addi	r2,r2,-1
    58a0:	300cd07a 	srli	r6,r6,1
    58a4:	1a07883a 	add	r3,r3,r8
    58a8:	2109883a 	add	r4,r4,r4
    58ac:	10003226 	beq	r2,zero,5978 <__ieee754_sqrt+0x1ac>
    58b0:	31d1883a 	add	r8,r6,r7
    58b4:	28fff60e 	bge	r5,r3,5890 <__ieee754_sqrt+0xc4>
    58b8:	418f883a 	add	r7,r8,r6
    58bc:	40002516 	blt	r8,zero,5954 <__ieee754_sqrt+0x188>
    58c0:	2815883a 	mov	r10,r5
    58c4:	1947c83a 	sub	r3,r3,r5
    58c8:	2200012e 	bgeu	r4,r8,58d0 <__ieee754_sqrt+0x104>
    58cc:	18ffffc4 	addi	r3,r3,-1
    58d0:	2209c83a 	sub	r4,r4,r8
    58d4:	4993883a 	add	r9,r9,r6
    58d8:	500b883a 	mov	r5,r10
    58dc:	003fed06 	br	5894 <__ieee754_sqrt+0xc8>
    58e0:	00a00034 	movhi	r2,32768
    58e4:	10bfffc4 	addi	r2,r2,-1
    58e8:	2884703a 	and	r2,r5,r2
    58ec:	1104b03a 	or	r2,r2,r4
    58f0:	10004826 	beq	r2,zero,5a14 <__ieee754_sqrt+0x248>
    58f4:	28003e1e 	bne	r5,zero,59f0 <__ieee754_sqrt+0x224>
    58f8:	0007883a 	mov	r3,zero
    58fc:	4004d2fa 	srli	r2,r8,11
    5900:	18fffac4 	addi	r3,r3,-21
    5904:	4010957a 	slli	r8,r8,21
    5908:	1021883a 	mov	r16,r2
    590c:	103ffb26 	beq	r2,zero,58fc <__ieee754_sqrt+0x130>
    5910:	1100042c 	andhi	r4,r2,16
    5914:	2000441e 	bne	r4,zero,5a28 <__ieee754_sqrt+0x25c>
    5918:	0005883a 	mov	r2,zero
    591c:	8421883a 	add	r16,r16,r16
    5920:	8140042c 	andhi	r5,r16,16
    5924:	1009883a 	mov	r4,r2
    5928:	10800044 	addi	r2,r2,1
    592c:	283ffb26 	beq	r5,zero,591c <__ieee754_sqrt+0x150>
    5930:	01800804 	movi	r6,32
    5934:	400b883a 	mov	r5,r8
    5938:	308dc83a 	sub	r6,r6,r2
    593c:	4090983a 	sll	r8,r8,r2
    5940:	8005883a 	mov	r2,r16
    5944:	298ed83a 	srl	r7,r5,r6
    5948:	1907c83a 	sub	r3,r3,r4
    594c:	38a0b03a 	or	r16,r7,r2
    5950:	003fab06 	br	5800 <__ieee754_sqrt+0x34>
    5954:	383fda16 	blt	r7,zero,58c0 <__ieee754_sqrt+0xf4>
    5958:	2a800044 	addi	r10,r5,1
    595c:	003fd906 	br	58c4 <__ieee754_sqrt+0xf8>
    5960:	223fcc36 	bltu	r4,r8,5894 <__ieee754_sqrt+0xc8>
    5964:	418f883a 	add	r7,r8,r6
    5968:	403ffa16 	blt	r8,zero,5954 <__ieee754_sqrt+0x188>
    596c:	1815883a 	mov	r10,r3
    5970:	0007883a 	mov	r3,zero
    5974:	003fd606 	br	58d0 <__ieee754_sqrt+0x104>
    5978:	1906b03a 	or	r3,r3,r4
    597c:	18000e1e 	bne	r3,zero,59b8 <__ieee754_sqrt+0x1ec>
    5980:	4804d07a 	srli	r2,r9,1
    5984:	6007d07a 	srai	r3,r12,1
    5988:	01cff834 	movhi	r7,16352
    598c:	6300004c 	andi	r12,r12,1
    5990:	19cf883a 	add	r7,r3,r7
    5994:	60000126 	beq	r12,zero,599c <__ieee754_sqrt+0x1d0>
    5998:	10a00034 	orhi	r2,r2,32768
    599c:	5806953a 	slli	r3,r11,20
    59a0:	19c7883a 	add	r3,r3,r7
    59a4:	dfc00217 	ldw	ra,8(sp)
    59a8:	dc400117 	ldw	r17,4(sp)
    59ac:	dc000017 	ldw	r16,0(sp)
    59b0:	dec00304 	addi	sp,sp,12
    59b4:	f800283a 	ret
    59b8:	48ffffd8 	cmpnei	r3,r9,-1
    59bc:	18001826 	beq	r3,zero,5a20 <__ieee754_sqrt+0x254>
    59c0:	48800044 	addi	r2,r9,1
    59c4:	1004d07a 	srli	r2,r2,1
    59c8:	003fee06 	br	5984 <__ieee754_sqrt+0x1b8>
    59cc:	200d883a 	mov	r6,r4
    59d0:	280f883a 	mov	r7,r5
    59d4:	000b0800 	call	b080 <__muldf3>
    59d8:	880d883a 	mov	r6,r17
    59dc:	800f883a 	mov	r7,r16
    59e0:	1009883a 	mov	r4,r2
    59e4:	180b883a 	mov	r5,r3
    59e8:	0009c2c0 	call	9c2c <__adddf3>
    59ec:	003fed06 	br	59a4 <__ieee754_sqrt+0x1d8>
    59f0:	200d883a 	mov	r6,r4
    59f4:	280f883a 	mov	r7,r5
    59f8:	000b82c0 	call	b82c <__subdf3>
    59fc:	100d883a 	mov	r6,r2
    5a00:	180f883a 	mov	r7,r3
    5a04:	1009883a 	mov	r4,r2
    5a08:	180b883a 	mov	r5,r3
    5a0c:	000a51c0 	call	a51c <__divdf3>
    5a10:	003fe406 	br	59a4 <__ieee754_sqrt+0x1d8>
    5a14:	2005883a 	mov	r2,r4
    5a18:	2807883a 	mov	r3,r5
    5a1c:	003fe106 	br	59a4 <__ieee754_sqrt+0x1d8>
    5a20:	63000044 	addi	r12,r12,1
    5a24:	003fd706 	br	5984 <__ieee754_sqrt+0x1b8>
    5a28:	400b883a 	mov	r5,r8
    5a2c:	01800804 	movi	r6,32
    5a30:	013fffc4 	movi	r4,-1
    5a34:	003fc306 	br	5944 <__ieee754_sqrt+0x178>

00005a38 <__ieee754_rem_pio2f>:
    5a38:	defff104 	addi	sp,sp,-60
    5a3c:	dc000515 	stw	r16,20(sp)
    5a40:	04200034 	movhi	r16,32768
    5a44:	843fffc4 	addi	r16,r16,-1
    5a48:	008fd274 	movhi	r2,16201
    5a4c:	dc400615 	stw	r17,24(sp)
    5a50:	dfc00e15 	stw	ra,56(sp)
    5a54:	df000d15 	stw	fp,52(sp)
    5a58:	ddc00c15 	stw	r23,48(sp)
    5a5c:	dd800b15 	stw	r22,44(sp)
    5a60:	dd400a15 	stw	r21,40(sp)
    5a64:	dd000915 	stw	r20,36(sp)
    5a68:	dcc00815 	stw	r19,32(sp)
    5a6c:	dc800715 	stw	r18,28(sp)
    5a70:	8120703a 	and	r16,r16,r4
    5a74:	1083f604 	addi	r2,r2,4056
    5a78:	2823883a 	mov	r17,r5
    5a7c:	1400620e 	bge	r2,r16,5c08 <__ieee754_rem_pio2f+0x1d0>
    5a80:	009005f4 	movhi	r2,16407
    5a84:	10b2f8c4 	addi	r2,r2,-13341
    5a88:	2025883a 	mov	r18,r4
    5a8c:	14002516 	blt	r2,r16,5b24 <__ieee754_rem_pio2f+0xec>
    5a90:	00bffc04 	movi	r2,-16
    5a94:	014ff274 	movhi	r5,16329
    5a98:	80a0703a 	and	r16,r16,r2
    5a9c:	2943e004 	addi	r5,r5,3968
    5aa0:	0100fd0e 	bge	zero,r4,5e98 <__ieee754_rem_pio2f+0x460>
    5aa4:	00095080 	call	9508 <__subsf3>
    5aa8:	1025883a 	mov	r18,r2
    5aac:	008ff274 	movhi	r2,16329
    5ab0:	1083f404 	addi	r2,r2,4048
    5ab4:	014dcd74 	movhi	r5,14133
    5ab8:	80809226 	beq	r16,r2,5d04 <__ieee754_rem_pio2f+0x2cc>
    5abc:	295110c4 	addi	r5,r5,17475
    5ac0:	9009883a 	mov	r4,r18
    5ac4:	00095080 	call	9508 <__subsf3>
    5ac8:	100b883a 	mov	r5,r2
    5acc:	9009883a 	mov	r4,r18
    5ad0:	88800015 	stw	r2,0(r17)
    5ad4:	00095080 	call	9508 <__subsf3>
    5ad8:	014dcd74 	movhi	r5,14133
    5adc:	295110c4 	addi	r5,r5,17475
    5ae0:	1009883a 	mov	r4,r2
    5ae4:	00095080 	call	9508 <__subsf3>
    5ae8:	88800115 	stw	r2,4(r17)
    5aec:	05c00044 	movi	r23,1
    5af0:	b805883a 	mov	r2,r23
    5af4:	dfc00e17 	ldw	ra,56(sp)
    5af8:	df000d17 	ldw	fp,52(sp)
    5afc:	ddc00c17 	ldw	r23,48(sp)
    5b00:	dd800b17 	ldw	r22,44(sp)
    5b04:	dd400a17 	ldw	r21,40(sp)
    5b08:	dd000917 	ldw	r20,36(sp)
    5b0c:	dcc00817 	ldw	r19,32(sp)
    5b10:	dc800717 	ldw	r18,28(sp)
    5b14:	dc400617 	ldw	r17,24(sp)
    5b18:	dc000517 	ldw	r16,20(sp)
    5b1c:	dec00f04 	addi	sp,sp,60
    5b20:	f800283a 	ret
    5b24:	0090d274 	movhi	r2,17225
    5b28:	1083e004 	addi	r2,r2,3968
    5b2c:	14003a16 	blt	r2,r16,5c18 <__ieee754_rem_pio2f+0x1e0>
    5b30:	014fc8f4 	movhi	r5,16163
    5b34:	297e6104 	addi	r5,r5,-1660
    5b38:	8009883a 	mov	r4,r16
    5b3c:	00091080 	call	9108 <__mulsf3>
    5b40:	014fc034 	movhi	r5,16128
    5b44:	1009883a 	mov	r4,r2
    5b48:	0008b740 	call	8b74 <__addsf3>
    5b4c:	1009883a 	mov	r4,r2
    5b50:	000999c0 	call	999c <__fixsfsi>
    5b54:	1009883a 	mov	r4,r2
    5b58:	102f883a 	mov	r23,r2
    5b5c:	0009a0c0 	call	9a0c <__floatsisf>
    5b60:	014ff274 	movhi	r5,16329
    5b64:	2943e004 	addi	r5,r5,3968
    5b68:	1009883a 	mov	r4,r2
    5b6c:	102b883a 	mov	r21,r2
    5b70:	00091080 	call	9108 <__mulsf3>
    5b74:	100b883a 	mov	r5,r2
    5b78:	8009883a 	mov	r4,r16
    5b7c:	00095080 	call	9508 <__subsf3>
    5b80:	014dcd74 	movhi	r5,14133
    5b84:	295110c4 	addi	r5,r5,17475
    5b88:	a809883a 	mov	r4,r21
    5b8c:	1029883a 	mov	r20,r2
    5b90:	00091080 	call	9108 <__mulsf3>
    5b94:	a009883a 	mov	r4,r20
    5b98:	100b883a 	mov	r5,r2
    5b9c:	1027883a 	mov	r19,r2
    5ba0:	00095080 	call	9508 <__subsf3>
    5ba4:	b8c00808 	cmpgei	r3,r23,32
    5ba8:	a009883a 	mov	r4,r20
    5bac:	102d883a 	mov	r22,r2
    5bb0:	1800671e 	bne	r3,zero,5d50 <__ieee754_rem_pio2f+0x318>
    5bb4:	b80a90ba 	slli	r5,r23,2
    5bb8:	00c000b4 	movhi	r3,2
    5bbc:	28c7883a 	add	r3,r5,r3
    5bc0:	19690c17 	ldw	r5,-23504(r3)
    5bc4:	00ffc004 	movi	r3,-256
    5bc8:	80c6703a 	and	r3,r16,r3
    5bcc:	19406026 	beq	r3,r5,5d50 <__ieee754_rem_pio2f+0x318>
    5bd0:	88800015 	stw	r2,0(r17)
    5bd4:	b00b883a 	mov	r5,r22
    5bd8:	00095080 	call	9508 <__subsf3>
    5bdc:	980b883a 	mov	r5,r19
    5be0:	1009883a 	mov	r4,r2
    5be4:	00095080 	call	9508 <__subsf3>
    5be8:	88800115 	stw	r2,4(r17)
    5bec:	903fc00e 	bge	r18,zero,5af0 <__ieee754_rem_pio2f+0xb8>
    5bf0:	b5a0003c 	xorhi	r22,r22,32768
    5bf4:	10e0003c 	xorhi	r3,r2,32768
    5bf8:	8d800015 	stw	r22,0(r17)
    5bfc:	88c00115 	stw	r3,4(r17)
    5c00:	05efc83a 	sub	r23,zero,r23
    5c04:	003fba06 	br	5af0 <__ieee754_rem_pio2f+0xb8>
    5c08:	89000015 	stw	r4,0(r17)
    5c0c:	28000115 	stw	zero,4(r5)
    5c10:	002f883a 	mov	r23,zero
    5c14:	003fb606 	br	5af0 <__ieee754_rem_pio2f+0xb8>
    5c18:	009fe034 	movhi	r2,32640
    5c1c:	8080910e 	bge	r16,r2,5e64 <__ieee754_rem_pio2f+0x42c>
    5c20:	8027d5fa 	srai	r19,r16,23
    5c24:	9cffde84 	addi	r19,r19,-134
    5c28:	980495fa 	slli	r2,r19,23
    5c2c:	80a1c83a 	sub	r16,r16,r2
    5c30:	8009883a 	mov	r4,r16
    5c34:	000999c0 	call	999c <__fixsfsi>
    5c38:	1009883a 	mov	r4,r2
    5c3c:	0009a0c0 	call	9a0c <__floatsisf>
    5c40:	8009883a 	mov	r4,r16
    5c44:	100b883a 	mov	r5,r2
    5c48:	d8800215 	stw	r2,8(sp)
    5c4c:	00095080 	call	9508 <__subsf3>
    5c50:	0150e034 	movhi	r5,17280
    5c54:	1009883a 	mov	r4,r2
    5c58:	00091080 	call	9108 <__mulsf3>
    5c5c:	1009883a 	mov	r4,r2
    5c60:	1029883a 	mov	r20,r2
    5c64:	000999c0 	call	999c <__fixsfsi>
    5c68:	1009883a 	mov	r4,r2
    5c6c:	0009a0c0 	call	9a0c <__floatsisf>
    5c70:	100b883a 	mov	r5,r2
    5c74:	a009883a 	mov	r4,r20
    5c78:	1021883a 	mov	r16,r2
    5c7c:	d8800315 	stw	r2,12(sp)
    5c80:	00095080 	call	9508 <__subsf3>
    5c84:	0150e034 	movhi	r5,17280
    5c88:	1009883a 	mov	r4,r2
    5c8c:	00091080 	call	9108 <__mulsf3>
    5c90:	000b883a 	mov	r5,zero
    5c94:	1009883a 	mov	r4,r2
    5c98:	d8800415 	stw	r2,16(sp)
    5c9c:	0008fe00 	call	8fe0 <__eqsf2>
    5ca0:	10007b1e 	bne	r2,zero,5e90 <__ieee754_rem_pio2f+0x458>
    5ca4:	000b883a 	mov	r5,zero
    5ca8:	8009883a 	mov	r4,r16
    5cac:	0008fe00 	call	8fe0 <__eqsf2>
    5cb0:	1000751e 	bne	r2,zero,5e88 <__ieee754_rem_pio2f+0x450>
    5cb4:	01c00044 	movi	r7,1
    5cb8:	008000b4 	movhi	r2,2
    5cbc:	10a92d04 	addi	r2,r2,-23372
    5cc0:	d8800115 	stw	r2,4(sp)
    5cc4:	00800084 	movi	r2,2
    5cc8:	d8800015 	stw	r2,0(sp)
    5ccc:	980d883a 	mov	r6,r19
    5cd0:	880b883a 	mov	r5,r17
    5cd4:	d9000204 	addi	r4,sp,8
    5cd8:	00076800 	call	7680 <__kernel_rem_pio2f>
    5cdc:	102f883a 	mov	r23,r2
    5ce0:	903f830e 	bge	r18,zero,5af0 <__ieee754_rem_pio2f+0xb8>
    5ce4:	88c00017 	ldw	r3,0(r17)
    5ce8:	88800117 	ldw	r2,4(r17)
    5cec:	05efc83a 	sub	r23,zero,r23
    5cf0:	18e0003c 	xorhi	r3,r3,32768
    5cf4:	10a0003c 	xorhi	r2,r2,32768
    5cf8:	88c00015 	stw	r3,0(r17)
    5cfc:	88800115 	stw	r2,4(r17)
    5d00:	003f7b06 	br	5af0 <__ieee754_rem_pio2f+0xb8>
    5d04:	29510004 	addi	r5,r5,17408
    5d08:	9009883a 	mov	r4,r18
    5d0c:	00095080 	call	9508 <__subsf3>
    5d10:	014ba1b4 	movhi	r5,11910
    5d14:	2968c204 	addi	r5,r5,-23800
    5d18:	1009883a 	mov	r4,r2
    5d1c:	1021883a 	mov	r16,r2
    5d20:	00095080 	call	9508 <__subsf3>
    5d24:	100b883a 	mov	r5,r2
    5d28:	8009883a 	mov	r4,r16
    5d2c:	88800015 	stw	r2,0(r17)
    5d30:	00095080 	call	9508 <__subsf3>
    5d34:	014ba1b4 	movhi	r5,11910
    5d38:	2968c204 	addi	r5,r5,-23800
    5d3c:	1009883a 	mov	r4,r2
    5d40:	00095080 	call	9508 <__subsf3>
    5d44:	88800115 	stw	r2,4(r17)
    5d48:	05c00044 	movi	r23,1
    5d4c:	003f6806 	br	5af0 <__ieee754_rem_pio2f+0xb8>
    5d50:	1006d5fa 	srli	r3,r2,23
    5d54:	8021d5fa 	srai	r16,r16,23
    5d58:	18c03fcc 	andi	r3,r3,255
    5d5c:	80c7c83a 	sub	r3,r16,r3
    5d60:	18c00248 	cmpgei	r3,r3,9
    5d64:	183f9a26 	beq	r3,zero,5bd0 <__ieee754_rem_pio2f+0x198>
    5d68:	014dcd74 	movhi	r5,14133
    5d6c:	29510004 	addi	r5,r5,17408
    5d70:	a809883a 	mov	r4,r21
    5d74:	00091080 	call	9108 <__mulsf3>
    5d78:	100b883a 	mov	r5,r2
    5d7c:	a009883a 	mov	r4,r20
    5d80:	1027883a 	mov	r19,r2
    5d84:	00095080 	call	9508 <__subsf3>
    5d88:	100b883a 	mov	r5,r2
    5d8c:	a009883a 	mov	r4,r20
    5d90:	1039883a 	mov	fp,r2
    5d94:	00095080 	call	9508 <__subsf3>
    5d98:	980b883a 	mov	r5,r19
    5d9c:	1009883a 	mov	r4,r2
    5da0:	00095080 	call	9508 <__subsf3>
    5da4:	014ba1b4 	movhi	r5,11910
    5da8:	2968c204 	addi	r5,r5,-23800
    5dac:	a809883a 	mov	r4,r21
    5db0:	1027883a 	mov	r19,r2
    5db4:	00091080 	call	9108 <__mulsf3>
    5db8:	980b883a 	mov	r5,r19
    5dbc:	1009883a 	mov	r4,r2
    5dc0:	00095080 	call	9508 <__subsf3>
    5dc4:	100b883a 	mov	r5,r2
    5dc8:	e009883a 	mov	r4,fp
    5dcc:	1027883a 	mov	r19,r2
    5dd0:	00095080 	call	9508 <__subsf3>
    5dd4:	1006d5fa 	srli	r3,r2,23
    5dd8:	102d883a 	mov	r22,r2
    5ddc:	18c03fcc 	andi	r3,r3,255
    5de0:	80e1c83a 	sub	r16,r16,r3
    5de4:	84000688 	cmpgei	r16,r16,26
    5de8:	80002426 	beq	r16,zero,5e7c <__ieee754_rem_pio2f+0x444>
    5dec:	014ba1b4 	movhi	r5,11910
    5df0:	2968c004 	addi	r5,r5,-23808
    5df4:	a809883a 	mov	r4,r21
    5df8:	00091080 	call	9108 <__mulsf3>
    5dfc:	100b883a 	mov	r5,r2
    5e00:	e009883a 	mov	r4,fp
    5e04:	1027883a 	mov	r19,r2
    5e08:	00095080 	call	9508 <__subsf3>
    5e0c:	100b883a 	mov	r5,r2
    5e10:	e009883a 	mov	r4,fp
    5e14:	1021883a 	mov	r16,r2
    5e18:	00095080 	call	9508 <__subsf3>
    5e1c:	980b883a 	mov	r5,r19
    5e20:	1009883a 	mov	r4,r2
    5e24:	00095080 	call	9508 <__subsf3>
    5e28:	01492374 	movhi	r5,9357
    5e2c:	294c4c84 	addi	r5,r5,12594
    5e30:	a809883a 	mov	r4,r21
    5e34:	1027883a 	mov	r19,r2
    5e38:	00091080 	call	9108 <__mulsf3>
    5e3c:	980b883a 	mov	r5,r19
    5e40:	1009883a 	mov	r4,r2
    5e44:	00095080 	call	9508 <__subsf3>
    5e48:	8009883a 	mov	r4,r16
    5e4c:	100b883a 	mov	r5,r2
    5e50:	1027883a 	mov	r19,r2
    5e54:	00095080 	call	9508 <__subsf3>
    5e58:	8009883a 	mov	r4,r16
    5e5c:	102d883a 	mov	r22,r2
    5e60:	003f5b06 	br	5bd0 <__ieee754_rem_pio2f+0x198>
    5e64:	200b883a 	mov	r5,r4
    5e68:	00095080 	call	9508 <__subsf3>
    5e6c:	88800115 	stw	r2,4(r17)
    5e70:	88800015 	stw	r2,0(r17)
    5e74:	002f883a 	mov	r23,zero
    5e78:	003f1d06 	br	5af0 <__ieee754_rem_pio2f+0xb8>
    5e7c:	88800015 	stw	r2,0(r17)
    5e80:	e009883a 	mov	r4,fp
    5e84:	003f5306 	br	5bd4 <__ieee754_rem_pio2f+0x19c>
    5e88:	01c00084 	movi	r7,2
    5e8c:	003f8a06 	br	5cb8 <__ieee754_rem_pio2f+0x280>
    5e90:	01c000c4 	movi	r7,3
    5e94:	003f8806 	br	5cb8 <__ieee754_rem_pio2f+0x280>
    5e98:	0008b740 	call	8b74 <__addsf3>
    5e9c:	1025883a 	mov	r18,r2
    5ea0:	008ff274 	movhi	r2,16329
    5ea4:	1083f404 	addi	r2,r2,4048
    5ea8:	014dcd74 	movhi	r5,14133
    5eac:	80800e26 	beq	r16,r2,5ee8 <__ieee754_rem_pio2f+0x4b0>
    5eb0:	295110c4 	addi	r5,r5,17475
    5eb4:	9009883a 	mov	r4,r18
    5eb8:	0008b740 	call	8b74 <__addsf3>
    5ebc:	100b883a 	mov	r5,r2
    5ec0:	9009883a 	mov	r4,r18
    5ec4:	88800015 	stw	r2,0(r17)
    5ec8:	00095080 	call	9508 <__subsf3>
    5ecc:	014dcd74 	movhi	r5,14133
    5ed0:	295110c4 	addi	r5,r5,17475
    5ed4:	1009883a 	mov	r4,r2
    5ed8:	0008b740 	call	8b74 <__addsf3>
    5edc:	88800115 	stw	r2,4(r17)
    5ee0:	05ffffc4 	movi	r23,-1
    5ee4:	003f0206 	br	5af0 <__ieee754_rem_pio2f+0xb8>
    5ee8:	29510004 	addi	r5,r5,17408
    5eec:	9009883a 	mov	r4,r18
    5ef0:	0008b740 	call	8b74 <__addsf3>
    5ef4:	014ba1b4 	movhi	r5,11910
    5ef8:	2968c204 	addi	r5,r5,-23800
    5efc:	1009883a 	mov	r4,r2
    5f00:	1021883a 	mov	r16,r2
    5f04:	0008b740 	call	8b74 <__addsf3>
    5f08:	100b883a 	mov	r5,r2
    5f0c:	8009883a 	mov	r4,r16
    5f10:	88800015 	stw	r2,0(r17)
    5f14:	00095080 	call	9508 <__subsf3>
    5f18:	014ba1b4 	movhi	r5,11910
    5f1c:	2968c204 	addi	r5,r5,-23800
    5f20:	1009883a 	mov	r4,r2
    5f24:	0008b740 	call	8b74 <__addsf3>
    5f28:	88800115 	stw	r2,4(r17)
    5f2c:	05ffffc4 	movi	r23,-1
    5f30:	003eef06 	br	5af0 <__ieee754_rem_pio2f+0xb8>

00005f34 <__kernel_cos>:
    5f34:	defff204 	addi	sp,sp,-56
    5f38:	dc000415 	stw	r16,16(sp)
    5f3c:	04200034 	movhi	r16,32768
    5f40:	843fffc4 	addi	r16,r16,-1
    5f44:	df000c15 	stw	fp,48(sp)
    5f48:	ddc00b15 	stw	r23,44(sp)
    5f4c:	dd800a15 	stw	r22,40(sp)
    5f50:	dd400915 	stw	r21,36(sp)
    5f54:	dc800615 	stw	r18,24(sp)
    5f58:	dfc00d15 	stw	ra,52(sp)
    5f5c:	dd000815 	stw	r20,32(sp)
    5f60:	dcc00715 	stw	r19,28(sp)
    5f64:	dc400515 	stw	r17,20(sp)
    5f68:	2c24703a 	and	r18,r5,r16
    5f6c:	008f9034 	movhi	r2,15936
    5f70:	2839883a 	mov	fp,r5
    5f74:	202b883a 	mov	r21,r4
    5f78:	302d883a 	mov	r22,r6
    5f7c:	382f883a 	mov	r23,r7
    5f80:	9080750e 	bge	r18,r2,6158 <__kernel_cos+0x224>
    5f84:	000c18c0 	call	c18c <__fixdfsi>
    5f88:	10011226 	beq	r2,zero,63d4 <__kernel_cos+0x4a0>
    5f8c:	a80d883a 	mov	r6,r21
    5f90:	e00f883a 	mov	r7,fp
    5f94:	a809883a 	mov	r4,r21
    5f98:	e00b883a 	mov	r5,fp
    5f9c:	000b0800 	call	b080 <__muldf3>
    5fa0:	01afa234 	movhi	r6,48776
    5fa4:	01ef6a74 	movhi	r7,48553
    5fa8:	318e3504 	addi	r6,r6,14548
    5fac:	39feba44 	addi	r7,r7,-1303
    5fb0:	1009883a 	mov	r4,r2
    5fb4:	180b883a 	mov	r5,r3
    5fb8:	1023883a 	mov	r17,r2
    5fbc:	1821883a 	mov	r16,r3
    5fc0:	000b0800 	call	b080 <__muldf3>
    5fc4:	01af6d74 	movhi	r6,48565
    5fc8:	01cf88b4 	movhi	r7,15906
    5fcc:	31ac7104 	addi	r6,r6,-20028
    5fd0:	39fba784 	addi	r7,r7,-4450
    5fd4:	1009883a 	mov	r4,r2
    5fd8:	180b883a 	mov	r5,r3
    5fdc:	0009c2c0 	call	9c2c <__adddf3>
    5fe0:	880d883a 	mov	r6,r17
    5fe4:	800f883a 	mov	r7,r16
    5fe8:	1009883a 	mov	r4,r2
    5fec:	180b883a 	mov	r5,r3
    5ff0:	000b0800 	call	b080 <__muldf3>
    5ff4:	01a02734 	movhi	r6,32924
    5ff8:	01cfa4b4 	movhi	r7,16018
    5ffc:	3194ab44 	addi	r6,r6,21165
    6000:	39df93c4 	addi	r7,r7,32335
    6004:	1009883a 	mov	r4,r2
    6008:	180b883a 	mov	r5,r3
    600c:	000b82c0 	call	b82c <__subdf3>
    6010:	880d883a 	mov	r6,r17
    6014:	800f883a 	mov	r7,r16
    6018:	1009883a 	mov	r4,r2
    601c:	180b883a 	mov	r5,r3
    6020:	000b0800 	call	b080 <__muldf3>
    6024:	018672f4 	movhi	r6,6603
    6028:	01cfbeb4 	movhi	r7,16122
    602c:	31856404 	addi	r6,r6,5520
    6030:	39c06804 	addi	r7,r7,416
    6034:	1009883a 	mov	r4,r2
    6038:	180b883a 	mov	r5,r3
    603c:	0009c2c0 	call	9c2c <__adddf3>
    6040:	880d883a 	mov	r6,r17
    6044:	800f883a 	mov	r7,r16
    6048:	1009883a 	mov	r4,r2
    604c:	180b883a 	mov	r5,r3
    6050:	000b0800 	call	b080 <__muldf3>
    6054:	0185b074 	movhi	r6,5825
    6058:	01cfd5f4 	movhi	r7,16215
    605c:	31945dc4 	addi	r6,r6,20855
    6060:	39f05b04 	addi	r7,r7,-16020
    6064:	1009883a 	mov	r4,r2
    6068:	180b883a 	mov	r5,r3
    606c:	000b82c0 	call	b82c <__subdf3>
    6070:	880d883a 	mov	r6,r17
    6074:	800f883a 	mov	r7,r16
    6078:	1009883a 	mov	r4,r2
    607c:	180b883a 	mov	r5,r3
    6080:	000b0800 	call	b080 <__muldf3>
    6084:	01955574 	movhi	r6,21845
    6088:	01cfe974 	movhi	r7,16293
    608c:	31955304 	addi	r6,r6,21836
    6090:	39d55544 	addi	r7,r7,21845
    6094:	1009883a 	mov	r4,r2
    6098:	180b883a 	mov	r5,r3
    609c:	0009c2c0 	call	9c2c <__adddf3>
    60a0:	880d883a 	mov	r6,r17
    60a4:	800f883a 	mov	r7,r16
    60a8:	1009883a 	mov	r4,r2
    60ac:	180b883a 	mov	r5,r3
    60b0:	000b0800 	call	b080 <__muldf3>
    60b4:	1017883a 	mov	r11,r2
    60b8:	1815883a 	mov	r10,r3
    60bc:	8809883a 	mov	r4,r17
    60c0:	800b883a 	mov	r5,r16
    60c4:	000d883a 	mov	r6,zero
    60c8:	01cff834 	movhi	r7,16352
    60cc:	da800115 	stw	r10,4(sp)
    60d0:	dac00015 	stw	r11,0(sp)
    60d4:	000b0800 	call	b080 <__muldf3>
    60d8:	dac00017 	ldw	r11,0(sp)
    60dc:	da800117 	ldw	r10,4(sp)
    60e0:	8809883a 	mov	r4,r17
    60e4:	580d883a 	mov	r6,r11
    60e8:	500f883a 	mov	r7,r10
    60ec:	800b883a 	mov	r5,r16
    60f0:	1023883a 	mov	r17,r2
    60f4:	1821883a 	mov	r16,r3
    60f8:	000b0800 	call	b080 <__muldf3>
    60fc:	b00d883a 	mov	r6,r22
    6100:	b80f883a 	mov	r7,r23
    6104:	a809883a 	mov	r4,r21
    6108:	e00b883a 	mov	r5,fp
    610c:	1027883a 	mov	r19,r2
    6110:	1825883a 	mov	r18,r3
    6114:	000b0800 	call	b080 <__muldf3>
    6118:	9809883a 	mov	r4,r19
    611c:	900b883a 	mov	r5,r18
    6120:	100d883a 	mov	r6,r2
    6124:	180f883a 	mov	r7,r3
    6128:	000b82c0 	call	b82c <__subdf3>
    612c:	8809883a 	mov	r4,r17
    6130:	800b883a 	mov	r5,r16
    6134:	100d883a 	mov	r6,r2
    6138:	180f883a 	mov	r7,r3
    613c:	000b82c0 	call	b82c <__subdf3>
    6140:	100d883a 	mov	r6,r2
    6144:	180f883a 	mov	r7,r3
    6148:	0009883a 	mov	r4,zero
    614c:	014ffc34 	movhi	r5,16368
    6150:	000b82c0 	call	b82c <__subdf3>
    6154:	00008f06 	br	6394 <__kernel_cos+0x460>
    6158:	200d883a 	mov	r6,r4
    615c:	280f883a 	mov	r7,r5
    6160:	000b0800 	call	b080 <__muldf3>
    6164:	01afa234 	movhi	r6,48776
    6168:	01ef6a74 	movhi	r7,48553
    616c:	318e3504 	addi	r6,r6,14548
    6170:	39feba44 	addi	r7,r7,-1303
    6174:	1009883a 	mov	r4,r2
    6178:	180b883a 	mov	r5,r3
    617c:	1029883a 	mov	r20,r2
    6180:	1827883a 	mov	r19,r3
    6184:	000b0800 	call	b080 <__muldf3>
    6188:	01af6d74 	movhi	r6,48565
    618c:	01cf88b4 	movhi	r7,15906
    6190:	31ac7104 	addi	r6,r6,-20028
    6194:	39fba784 	addi	r7,r7,-4450
    6198:	1009883a 	mov	r4,r2
    619c:	180b883a 	mov	r5,r3
    61a0:	0009c2c0 	call	9c2c <__adddf3>
    61a4:	a00d883a 	mov	r6,r20
    61a8:	980f883a 	mov	r7,r19
    61ac:	1009883a 	mov	r4,r2
    61b0:	180b883a 	mov	r5,r3
    61b4:	000b0800 	call	b080 <__muldf3>
    61b8:	01a02734 	movhi	r6,32924
    61bc:	01cfa4b4 	movhi	r7,16018
    61c0:	3194ab44 	addi	r6,r6,21165
    61c4:	39df93c4 	addi	r7,r7,32335
    61c8:	1009883a 	mov	r4,r2
    61cc:	180b883a 	mov	r5,r3
    61d0:	000b82c0 	call	b82c <__subdf3>
    61d4:	a00d883a 	mov	r6,r20
    61d8:	980f883a 	mov	r7,r19
    61dc:	1009883a 	mov	r4,r2
    61e0:	180b883a 	mov	r5,r3
    61e4:	000b0800 	call	b080 <__muldf3>
    61e8:	018672f4 	movhi	r6,6603
    61ec:	01cfbeb4 	movhi	r7,16122
    61f0:	31856404 	addi	r6,r6,5520
    61f4:	39c06804 	addi	r7,r7,416
    61f8:	1009883a 	mov	r4,r2
    61fc:	180b883a 	mov	r5,r3
    6200:	0009c2c0 	call	9c2c <__adddf3>
    6204:	a00d883a 	mov	r6,r20
    6208:	980f883a 	mov	r7,r19
    620c:	1009883a 	mov	r4,r2
    6210:	180b883a 	mov	r5,r3
    6214:	000b0800 	call	b080 <__muldf3>
    6218:	0185b074 	movhi	r6,5825
    621c:	01cfd5f4 	movhi	r7,16215
    6220:	31945dc4 	addi	r6,r6,20855
    6224:	39f05b04 	addi	r7,r7,-16020
    6228:	1009883a 	mov	r4,r2
    622c:	180b883a 	mov	r5,r3
    6230:	000b82c0 	call	b82c <__subdf3>
    6234:	a00d883a 	mov	r6,r20
    6238:	980f883a 	mov	r7,r19
    623c:	1009883a 	mov	r4,r2
    6240:	180b883a 	mov	r5,r3
    6244:	000b0800 	call	b080 <__muldf3>
    6248:	01955574 	movhi	r6,21845
    624c:	01cfe974 	movhi	r7,16293
    6250:	31955304 	addi	r6,r6,21836
    6254:	39d55544 	addi	r7,r7,21845
    6258:	1009883a 	mov	r4,r2
    625c:	180b883a 	mov	r5,r3
    6260:	0009c2c0 	call	9c2c <__adddf3>
    6264:	1009883a 	mov	r4,r2
    6268:	a00d883a 	mov	r6,r20
    626c:	980f883a 	mov	r7,r19
    6270:	180b883a 	mov	r5,r3
    6274:	000b0800 	call	b080 <__muldf3>
    6278:	010ff4f4 	movhi	r4,16339
    627c:	210ccc84 	addi	r4,r4,13106
    6280:	1013883a 	mov	r9,r2
    6284:	1811883a 	mov	r8,r3
    6288:	a023883a 	mov	r17,r20
    628c:	9821883a 	mov	r16,r19
    6290:	1017883a 	mov	r11,r2
    6294:	1815883a 	mov	r10,r3
    6298:	24bf880e 	bge	r4,r18,60bc <__kernel_cos+0x188>
    629c:	008ffa74 	movhi	r2,16361
    62a0:	14804816 	blt	r2,r18,63c4 <__kernel_cos+0x490>
    62a4:	043ff834 	movhi	r16,65504
    62a8:	9421883a 	add	r16,r18,r16
    62ac:	000d883a 	mov	r6,zero
    62b0:	800f883a 	mov	r7,r16
    62b4:	0009883a 	mov	r4,zero
    62b8:	014ffc34 	movhi	r5,16368
    62bc:	da400015 	stw	r9,0(sp)
    62c0:	d8c00115 	stw	r3,4(sp)
    62c4:	000b82c0 	call	b82c <__subdf3>
    62c8:	da400017 	ldw	r9,0(sp)
    62cc:	da000117 	ldw	r8,4(sp)
    62d0:	1017883a 	mov	r11,r2
    62d4:	1815883a 	mov	r10,r3
    62d8:	980b883a 	mov	r5,r19
    62dc:	000d883a 	mov	r6,zero
    62e0:	01cff834 	movhi	r7,16352
    62e4:	a009883a 	mov	r4,r20
    62e8:	da800115 	stw	r10,4(sp)
    62ec:	dac00015 	stw	r11,0(sp)
    62f0:	da000315 	stw	r8,12(sp)
    62f4:	da400215 	stw	r9,8(sp)
    62f8:	000b0800 	call	b080 <__muldf3>
    62fc:	800f883a 	mov	r7,r16
    6300:	000d883a 	mov	r6,zero
    6304:	1009883a 	mov	r4,r2
    6308:	180b883a 	mov	r5,r3
    630c:	000b82c0 	call	b82c <__subdf3>
    6310:	da400217 	ldw	r9,8(sp)
    6314:	da000317 	ldw	r8,12(sp)
    6318:	980b883a 	mov	r5,r19
    631c:	480d883a 	mov	r6,r9
    6320:	400f883a 	mov	r7,r8
    6324:	a009883a 	mov	r4,r20
    6328:	1023883a 	mov	r17,r2
    632c:	1821883a 	mov	r16,r3
    6330:	000b0800 	call	b080 <__muldf3>
    6334:	b00d883a 	mov	r6,r22
    6338:	b80f883a 	mov	r7,r23
    633c:	a809883a 	mov	r4,r21
    6340:	e00b883a 	mov	r5,fp
    6344:	1027883a 	mov	r19,r2
    6348:	1825883a 	mov	r18,r3
    634c:	000b0800 	call	b080 <__muldf3>
    6350:	100d883a 	mov	r6,r2
    6354:	180f883a 	mov	r7,r3
    6358:	9809883a 	mov	r4,r19
    635c:	900b883a 	mov	r5,r18
    6360:	000b82c0 	call	b82c <__subdf3>
    6364:	100d883a 	mov	r6,r2
    6368:	180f883a 	mov	r7,r3
    636c:	8809883a 	mov	r4,r17
    6370:	800b883a 	mov	r5,r16
    6374:	000b82c0 	call	b82c <__subdf3>
    6378:	dac00017 	ldw	r11,0(sp)
    637c:	da800117 	ldw	r10,4(sp)
    6380:	100d883a 	mov	r6,r2
    6384:	180f883a 	mov	r7,r3
    6388:	5809883a 	mov	r4,r11
    638c:	500b883a 	mov	r5,r10
    6390:	000b82c0 	call	b82c <__subdf3>
    6394:	dfc00d17 	ldw	ra,52(sp)
    6398:	df000c17 	ldw	fp,48(sp)
    639c:	ddc00b17 	ldw	r23,44(sp)
    63a0:	dd800a17 	ldw	r22,40(sp)
    63a4:	dd400917 	ldw	r21,36(sp)
    63a8:	dd000817 	ldw	r20,32(sp)
    63ac:	dcc00717 	ldw	r19,28(sp)
    63b0:	dc800617 	ldw	r18,24(sp)
    63b4:	dc400517 	ldw	r17,20(sp)
    63b8:	dc000417 	ldw	r16,16(sp)
    63bc:	dec00e04 	addi	sp,sp,56
    63c0:	f800283a 	ret
    63c4:	0017883a 	mov	r11,zero
    63c8:	028ff9f4 	movhi	r10,16359
    63cc:	040ff4b4 	movhi	r16,16338
    63d0:	003fc106 	br	62d8 <__kernel_cos+0x3a4>
    63d4:	0005883a 	mov	r2,zero
    63d8:	00cffc34 	movhi	r3,16368
    63dc:	003fed06 	br	6394 <__kernel_cos+0x460>

000063e0 <__kernel_rem_pio2>:
    63e0:	deff5f04 	addi	sp,sp,-644
    63e4:	d880a117 	ldw	r2,644(sp)
    63e8:	dc009715 	stw	r16,604(sp)
    63ec:	dfc0a015 	stw	ra,640(sp)
    63f0:	100690ba 	slli	r3,r2,2
    63f4:	008000b4 	movhi	r2,2
    63f8:	df009f15 	stw	fp,636(sp)
    63fc:	1885883a 	add	r2,r3,r2
    6400:	10aa0317 	ldw	r2,-22516(r2)
    6404:	ddc09e15 	stw	r23,632(sp)
    6408:	dd809d15 	stw	r22,628(sp)
    640c:	d8800515 	stw	r2,20(sp)
    6410:	38bfffc4 	addi	r2,r7,-1
    6414:	dd409c15 	stw	r21,624(sp)
    6418:	dd009b15 	stw	r20,620(sp)
    641c:	dcc09a15 	stw	r19,616(sp)
    6420:	dc809915 	stw	r18,612(sp)
    6424:	dc409815 	stw	r17,608(sp)
    6428:	d9c00715 	stw	r7,28(sp)
    642c:	30fffb10 	cmplti	r3,r6,-20
    6430:	d9000215 	stw	r4,8(sp)
    6434:	d9400915 	stw	r5,36(sp)
    6438:	d8800115 	stw	r2,4(sp)
    643c:	3021883a 	mov	r16,r6
    6440:	18028c1e 	bne	r3,zero,6e74 <__kernel_rem_pio2+0xa94>
    6444:	01400604 	movi	r5,24
    6448:	313fff44 	addi	r4,r6,-3
    644c:	00089980 	call	8998 <__divsi3>
    6450:	d8800615 	stw	r2,24(sp)
    6454:	10800044 	addi	r2,r2,1
    6458:	100690ba 	slli	r3,r2,2
    645c:	10c5c83a 	sub	r2,r2,r3
    6460:	100690fa 	slli	r3,r2,3
    6464:	d9000117 	ldw	r4,4(sp)
    6468:	80c7883a 	add	r3,r16,r3
    646c:	d8800517 	ldw	r2,20(sp)
    6470:	d8c00315 	stw	r3,12(sp)
    6474:	d8c00617 	ldw	r3,24(sp)
    6478:	1105883a 	add	r2,r2,r4
    647c:	1925c83a 	sub	r18,r3,r4
    6480:	10000f16 	blt	r2,zero,64c0 <__kernel_rem_pio2+0xe0>
    6484:	902290ba 	slli	r17,r18,2
    6488:	d8c0a217 	ldw	r3,648(sp)
    648c:	10800044 	addi	r2,r2,1
    6490:	dc001f04 	addi	r16,sp,124
    6494:	1c63883a 	add	r17,r3,r17
    6498:	14a7883a 	add	r19,r2,r18
    649c:	90016016 	blt	r18,zero,6a20 <__kernel_rem_pio2+0x640>
    64a0:	89000017 	ldw	r4,0(r17)
    64a4:	000c20c0 	call	c20c <__floatsidf>
    64a8:	80800015 	stw	r2,0(r16)
    64ac:	80c00115 	stw	r3,4(r16)
    64b0:	94800044 	addi	r18,r18,1
    64b4:	84000204 	addi	r16,r16,8
    64b8:	8c400104 	addi	r17,r17,4
    64bc:	94fff71e 	bne	r18,r19,649c <__kernel_rem_pio2+0xbc>
    64c0:	d8800517 	ldw	r2,20(sp)
    64c4:	10002516 	blt	r2,zero,655c <__kernel_rem_pio2+0x17c>
    64c8:	dcc00117 	ldw	r19,4(sp)
    64cc:	d8c01f04 	addi	r3,sp,124
    64d0:	dc406f04 	addi	r17,sp,444
    64d4:	982490fa 	slli	r18,r19,3
    64d8:	94000204 	addi	r16,r18,8
    64dc:	1ca5883a 	add	r18,r3,r18
    64e0:	d8c00717 	ldw	r3,28(sp)
    64e4:	10ef883a 	add	r23,r2,r3
    64e8:	d8800217 	ldw	r2,8(sp)
    64ec:	80a1883a 	add	r16,r16,r2
    64f0:	d8800117 	ldw	r2,4(sp)
    64f4:	10015f16 	blt	r2,zero,6a74 <__kernel_rem_pio2+0x694>
    64f8:	dd000217 	ldw	r20,8(sp)
    64fc:	902d883a 	mov	r22,r18
    6500:	0039883a 	mov	fp,zero
    6504:	002b883a 	mov	r21,zero
    6508:	b1800017 	ldw	r6,0(r22)
    650c:	b1c00117 	ldw	r7,4(r22)
    6510:	a1000017 	ldw	r4,0(r20)
    6514:	a1400117 	ldw	r5,4(r20)
    6518:	a5000204 	addi	r20,r20,8
    651c:	b5bffe04 	addi	r22,r22,-8
    6520:	000b0800 	call	b080 <__muldf3>
    6524:	e009883a 	mov	r4,fp
    6528:	a80b883a 	mov	r5,r21
    652c:	100d883a 	mov	r6,r2
    6530:	180f883a 	mov	r7,r3
    6534:	0009c2c0 	call	9c2c <__adddf3>
    6538:	1039883a 	mov	fp,r2
    653c:	182b883a 	mov	r21,r3
    6540:	a43ff11e 	bne	r20,r16,6508 <__kernel_rem_pio2+0x128>
    6544:	8f000015 	stw	fp,0(r17)
    6548:	8d400115 	stw	r21,4(r17)
    654c:	9cc00044 	addi	r19,r19,1
    6550:	8c400204 	addi	r17,r17,8
    6554:	94800204 	addi	r18,r18,8
    6558:	9dffe51e 	bne	r19,r23,64f0 <__kernel_rem_pio2+0x110>
    655c:	dc400517 	ldw	r17,20(sp)
    6560:	d8c00717 	ldw	r3,28(sp)
    6564:	d9000217 	ldw	r4,8(sp)
    6568:	88bfffc4 	addi	r2,r17,-1
    656c:	180690fa 	slli	r3,r3,3
    6570:	883890ba 	slli	fp,r17,2
    6574:	100490ba 	slli	r2,r2,2
    6578:	243ffe04 	addi	r16,r4,-8
    657c:	80e1883a 	add	r16,r16,r3
    6580:	e1000b04 	addi	r4,fp,44
    6584:	10808c04 	addi	r2,r2,560
    6588:	d8c00b04 	addi	r3,sp,44
    658c:	26c9883a 	add	r4,r4,sp
    6590:	10c5883a 	add	r2,r2,r3
    6594:	d9000415 	stw	r4,16(sp)
    6598:	d8800815 	stw	r2,32(sp)
    659c:	883890fa 	slli	fp,r17,3
    65a0:	d8c00b04 	addi	r3,sp,44
    65a4:	e0808c04 	addi	r2,fp,560
    65a8:	10c5883a 	add	r2,r2,r3
    65ac:	157fd817 	ldw	r21,-160(r2)
    65b0:	153fd917 	ldw	r20,-156(r2)
    65b4:	0440280e 	bge	zero,r17,6658 <__kernel_rem_pio2+0x278>
    65b8:	d8806f04 	addi	r2,sp,444
    65bc:	1725883a 	add	r18,r2,fp
    65c0:	1827883a 	mov	r19,r3
    65c4:	000d883a 	mov	r6,zero
    65c8:	01cf9c34 	movhi	r7,15984
    65cc:	a809883a 	mov	r4,r21
    65d0:	a00b883a 	mov	r5,r20
    65d4:	000b0800 	call	b080 <__muldf3>
    65d8:	180b883a 	mov	r5,r3
    65dc:	1009883a 	mov	r4,r2
    65e0:	000c18c0 	call	c18c <__fixdfsi>
    65e4:	1009883a 	mov	r4,r2
    65e8:	000c20c0 	call	c20c <__floatsidf>
    65ec:	000d883a 	mov	r6,zero
    65f0:	01d05c34 	movhi	r7,16752
    65f4:	1009883a 	mov	r4,r2
    65f8:	180b883a 	mov	r5,r3
    65fc:	102f883a 	mov	r23,r2
    6600:	182d883a 	mov	r22,r3
    6604:	000b0800 	call	b080 <__muldf3>
    6608:	100d883a 	mov	r6,r2
    660c:	180f883a 	mov	r7,r3
    6610:	a809883a 	mov	r4,r21
    6614:	a00b883a 	mov	r5,r20
    6618:	000b82c0 	call	b82c <__subdf3>
    661c:	180b883a 	mov	r5,r3
    6620:	1009883a 	mov	r4,r2
    6624:	000c18c0 	call	c18c <__fixdfsi>
    6628:	91bffe17 	ldw	r6,-8(r18)
    662c:	91ffff17 	ldw	r7,-4(r18)
    6630:	98800015 	stw	r2,0(r19)
    6634:	b809883a 	mov	r4,r23
    6638:	b00b883a 	mov	r5,r22
    663c:	0009c2c0 	call	9c2c <__adddf3>
    6640:	102b883a 	mov	r21,r2
    6644:	94bffe04 	addi	r18,r18,-8
    6648:	d8806f04 	addi	r2,sp,444
    664c:	1829883a 	mov	r20,r3
    6650:	9cc00104 	addi	r19,r19,4
    6654:	14bfdb1e 	bne	r2,r18,65c4 <__kernel_rem_pio2+0x1e4>
    6658:	dd800317 	ldw	r22,12(sp)
    665c:	a809883a 	mov	r4,r21
    6660:	a00b883a 	mov	r5,r20
    6664:	b00d883a 	mov	r6,r22
    6668:	00085980 	call	8598 <scalbn>
    666c:	000d883a 	mov	r6,zero
    6670:	01cff034 	movhi	r7,16320
    6674:	1009883a 	mov	r4,r2
    6678:	180b883a 	mov	r5,r3
    667c:	1029883a 	mov	r20,r2
    6680:	1827883a 	mov	r19,r3
    6684:	000b0800 	call	b080 <__muldf3>
    6688:	1009883a 	mov	r4,r2
    668c:	180b883a 	mov	r5,r3
    6690:	000317c0 	call	317c <floor>
    6694:	000d883a 	mov	r6,zero
    6698:	01d00834 	movhi	r7,16416
    669c:	1009883a 	mov	r4,r2
    66a0:	180b883a 	mov	r5,r3
    66a4:	000b0800 	call	b080 <__muldf3>
    66a8:	100d883a 	mov	r6,r2
    66ac:	180f883a 	mov	r7,r3
    66b0:	a009883a 	mov	r4,r20
    66b4:	980b883a 	mov	r5,r19
    66b8:	000b82c0 	call	b82c <__subdf3>
    66bc:	180b883a 	mov	r5,r3
    66c0:	1009883a 	mov	r4,r2
    66c4:	1827883a 	mov	r19,r3
    66c8:	102b883a 	mov	r21,r2
    66cc:	000c18c0 	call	c18c <__fixdfsi>
    66d0:	1009883a 	mov	r4,r2
    66d4:	1029883a 	mov	r20,r2
    66d8:	000c20c0 	call	c20c <__floatsidf>
    66dc:	980b883a 	mov	r5,r19
    66e0:	100d883a 	mov	r6,r2
    66e4:	180f883a 	mov	r7,r3
    66e8:	a809883a 	mov	r4,r21
    66ec:	000b82c0 	call	b82c <__subdf3>
    66f0:	1025883a 	mov	r18,r2
    66f4:	1027883a 	mov	r19,r2
    66f8:	1813883a 	mov	r9,r3
    66fc:	0580670e 	bge	zero,r22,689c <__kernel_rem_pio2+0x4bc>
    6700:	88bfffc4 	addi	r2,r17,-1
    6704:	100490ba 	slli	r2,r2,2
    6708:	d9400b04 	addi	r5,sp,44
    670c:	01000604 	movi	r4,24
    6710:	10808c04 	addi	r2,r2,560
    6714:	1145883a 	add	r2,r2,r5
    6718:	117f7417 	ldw	r5,-560(r2)
    671c:	2589c83a 	sub	r4,r4,r22
    6720:	054005c4 	movi	r21,23
    6724:	290dd83a 	sra	r6,r5,r4
    6728:	adabc83a 	sub	r21,r21,r22
    672c:	3108983a 	sll	r4,r6,r4
    6730:	a1a9883a 	add	r20,r20,r6
    6734:	2909c83a 	sub	r4,r5,r4
    6738:	256bd83a 	sra	r21,r4,r21
    673c:	113f7415 	stw	r4,-560(r2)
    6740:	05406016 	blt	zero,r21,68c4 <__kernel_rem_pio2+0x4e4>
    6744:	480b883a 	mov	r5,r9
    6748:	000d883a 	mov	r6,zero
    674c:	000f883a 	mov	r7,zero
    6750:	9809883a 	mov	r4,r19
    6754:	da400015 	stw	r9,0(sp)
    6758:	000ae300 	call	ae30 <__eqdf2>
    675c:	da400017 	ldw	r9,0(sp)
    6760:	1001d21e 	bne	r2,zero,6eac <__kernel_rem_pio2+0xacc>
    6764:	d8800517 	ldw	r2,20(sp)
    6768:	8cffffc4 	addi	r19,r17,-1
    676c:	98800a16 	blt	r19,r2,6798 <__kernel_rem_pio2+0x3b8>
    6770:	880490ba 	slli	r2,r17,2
    6774:	d9400417 	ldw	r5,16(sp)
    6778:	0007883a 	mov	r3,zero
    677c:	10800b04 	addi	r2,r2,44
    6780:	16c5883a 	add	r2,r2,sp
    6784:	113fff17 	ldw	r4,-4(r2)
    6788:	10bfff04 	addi	r2,r2,-4
    678c:	1906b03a 	or	r3,r3,r4
    6790:	117ffc1e 	bne	r2,r5,6784 <__kernel_rem_pio2+0x3a4>
    6794:	1800ba1e 	bne	r3,zero,6a80 <__kernel_rem_pio2+0x6a0>
    6798:	d8800817 	ldw	r2,32(sp)
    679c:	10bf7417 	ldw	r2,-560(r2)
    67a0:	1000b11e 	bne	r2,zero,6a68 <__kernel_rem_pio2+0x688>
    67a4:	d8800417 	ldw	r2,16(sp)
    67a8:	05000044 	movi	r20,1
    67ac:	10fffe17 	ldw	r3,-8(r2)
    67b0:	a5000044 	addi	r20,r20,1
    67b4:	10bfff04 	addi	r2,r2,-4
    67b8:	183ffc26 	beq	r3,zero,67ac <__kernel_rem_pio2+0x3cc>
    67bc:	8d05883a 	add	r2,r17,r20
    67c0:	8d400044 	addi	r21,r17,1
    67c4:	d8800015 	stw	r2,0(sp)
    67c8:	d8800617 	ldw	r2,24(sp)
    67cc:	88a7883a 	add	r19,r17,r2
    67d0:	d8800717 	ldw	r2,28(sp)
    67d4:	982690ba 	slli	r19,r19,2
    67d8:	1463883a 	add	r17,r2,r17
    67dc:	d880a217 	ldw	r2,648(sp)
    67e0:	882290fa 	slli	r17,r17,3
    67e4:	14e7883a 	add	r19,r2,r19
    67e8:	d8801f04 	addi	r2,sp,124
    67ec:	1463883a 	add	r17,r2,r17
    67f0:	d8806f04 	addi	r2,sp,444
    67f4:	1725883a 	add	r18,r2,fp
    67f8:	99000117 	ldw	r4,4(r19)
    67fc:	000c20c0 	call	c20c <__floatsidf>
    6800:	1009883a 	mov	r4,r2
    6804:	88800015 	stw	r2,0(r17)
    6808:	d8800117 	ldw	r2,4(sp)
    680c:	88c00115 	stw	r3,4(r17)
    6810:	180b883a 	mov	r5,r3
    6814:	10001e16 	blt	r2,zero,6890 <__kernel_rem_pio2+0x4b0>
    6818:	dd000217 	ldw	r20,8(sp)
    681c:	882f883a 	mov	r23,r17
    6820:	002d883a 	mov	r22,zero
    6824:	0039883a 	mov	fp,zero
    6828:	00000306 	br	6838 <__kernel_rem_pio2+0x458>
    682c:	b9000017 	ldw	r4,0(r23)
    6830:	b9400117 	ldw	r5,4(r23)
    6834:	a5000204 	addi	r20,r20,8
    6838:	a1800017 	ldw	r6,0(r20)
    683c:	a1c00117 	ldw	r7,4(r20)
    6840:	bdfffe04 	addi	r23,r23,-8
    6844:	000b0800 	call	b080 <__muldf3>
    6848:	b009883a 	mov	r4,r22
    684c:	e00b883a 	mov	r5,fp
    6850:	100d883a 	mov	r6,r2
    6854:	180f883a 	mov	r7,r3
    6858:	0009c2c0 	call	9c2c <__adddf3>
    685c:	102d883a 	mov	r22,r2
    6860:	1839883a 	mov	fp,r3
    6864:	a43ff11e 	bne	r20,r16,682c <__kernel_rem_pio2+0x44c>
    6868:	d8800017 	ldw	r2,0(sp)
    686c:	95800215 	stw	r22,8(r18)
    6870:	97000315 	stw	fp,12(r18)
    6874:	ad400044 	addi	r21,r21,1
    6878:	9cc00104 	addi	r19,r19,4
    687c:	8c400204 	addi	r17,r17,8
    6880:	94800204 	addi	r18,r18,8
    6884:	157fdc0e 	bge	r2,r21,67f8 <__kernel_rem_pio2+0x418>
    6888:	1023883a 	mov	r17,r2
    688c:	003f4306 	br	659c <__kernel_rem_pio2+0x1bc>
    6890:	002d883a 	mov	r22,zero
    6894:	0039883a 	mov	fp,zero
    6898:	003ff306 	br	6868 <__kernel_rem_pio2+0x488>
    689c:	d8800317 	ldw	r2,12(sp)
    68a0:	1000651e 	bne	r2,zero,6a38 <__kernel_rem_pio2+0x658>
    68a4:	88bfffc4 	addi	r2,r17,-1
    68a8:	100490ba 	slli	r2,r2,2
    68ac:	d9000b04 	addi	r4,sp,44
    68b0:	10808c04 	addi	r2,r2,560
    68b4:	1105883a 	add	r2,r2,r4
    68b8:	157f7417 	ldw	r21,-560(r2)
    68bc:	a82bd5fa 	srai	r21,r21,23
    68c0:	057fa00e 	bge	zero,r21,6744 <__kernel_rem_pio2+0x364>
    68c4:	a5000044 	addi	r20,r20,1
    68c8:	0441ac0e 	bge	zero,r17,6f7c <__kernel_rem_pio2+0xb9c>
    68cc:	da800b17 	ldw	r10,44(sp)
    68d0:	5000561e 	bne	r10,zero,6a2c <__kernel_rem_pio2+0x64c>
    68d4:	88800060 	cmpeqi	r2,r17,1
    68d8:	1000271e 	bne	r2,zero,6978 <__kernel_rem_pio2+0x598>
    68dc:	da800c17 	ldw	r10,48(sp)
    68e0:	d9400c04 	addi	r5,sp,48
    68e4:	00800044 	movi	r2,1
    68e8:	11000044 	addi	r4,r2,1
    68ec:	29400104 	addi	r5,r5,4
    68f0:	5000061e 	bne	r10,zero,690c <__kernel_rem_pio2+0x52c>
    68f4:	89002026 	beq	r17,r4,6978 <__kernel_rem_pio2+0x598>
    68f8:	2a800017 	ldw	r10,0(r5)
    68fc:	2005883a 	mov	r2,r4
    6900:	11000044 	addi	r4,r2,1
    6904:	29400104 	addi	r5,r5,4
    6908:	503ffa26 	beq	r10,zero,68f4 <__kernel_rem_pio2+0x514>
    690c:	100490ba 	slli	r2,r2,2
    6910:	01404034 	movhi	r5,256
    6914:	2a95c83a 	sub	r10,r5,r10
    6918:	10808c04 	addi	r2,r2,560
    691c:	d9400b04 	addi	r5,sp,44
    6920:	1145883a 	add	r2,r2,r5
    6924:	12bf7415 	stw	r10,-560(r2)
    6928:	2440120e 	bge	r4,r17,6974 <__kernel_rem_pio2+0x594>
    692c:	200890ba 	slli	r4,r4,2
    6930:	880490ba 	slli	r2,r17,2
    6934:	d9c00b04 	addi	r7,sp,44
    6938:	21408c04 	addi	r5,r4,560
    693c:	01804034 	movhi	r6,256
    6940:	29cb883a 	add	r5,r5,r7
    6944:	21000b04 	addi	r4,r4,44
    6948:	10800b04 	addi	r2,r2,44
    694c:	297f7417 	ldw	r5,-560(r5)
    6950:	26c9883a 	add	r4,r4,sp
    6954:	16c5883a 	add	r2,r2,sp
    6958:	31bfffc4 	addi	r6,r6,-1
    695c:	00000106 	br	6964 <__kernel_rem_pio2+0x584>
    6960:	21400017 	ldw	r5,0(r4)
    6964:	314bc83a 	sub	r5,r6,r5
    6968:	21400015 	stw	r5,0(r4)
    696c:	21000104 	addi	r4,r4,4
    6970:	20bffb1e 	bne	r4,r2,6960 <__kernel_rem_pio2+0x580>
    6974:	02800044 	movi	r10,1
    6978:	d9000317 	ldw	r4,12(sp)
    697c:	01000e0e 	bge	zero,r4,69b8 <__kernel_rem_pio2+0x5d8>
    6980:	20800060 	cmpeqi	r2,r4,1
    6984:	1001371e 	bne	r2,zero,6e64 <__kernel_rem_pio2+0xa84>
    6988:	208000a0 	cmpeqi	r2,r4,2
    698c:	10000a26 	beq	r2,zero,69b8 <__kernel_rem_pio2+0x5d8>
    6990:	88bfffc4 	addi	r2,r17,-1
    6994:	100490ba 	slli	r2,r2,2
    6998:	01401034 	movhi	r5,64
    699c:	d9000b04 	addi	r4,sp,44
    69a0:	10808c04 	addi	r2,r2,560
    69a4:	1105883a 	add	r2,r2,r4
    69a8:	113f7417 	ldw	r4,-560(r2)
    69ac:	297fffc4 	addi	r5,r5,-1
    69b0:	2148703a 	and	r4,r4,r5
    69b4:	113f7415 	stw	r4,-560(r2)
    69b8:	a8800098 	cmpnei	r2,r21,2
    69bc:	103f611e 	bne	r2,zero,6744 <__kernel_rem_pio2+0x364>
    69c0:	900d883a 	mov	r6,r18
    69c4:	180f883a 	mov	r7,r3
    69c8:	0009883a 	mov	r4,zero
    69cc:	014ffc34 	movhi	r5,16368
    69d0:	da800015 	stw	r10,0(sp)
    69d4:	000b82c0 	call	b82c <__subdf3>
    69d8:	da800017 	ldw	r10,0(sp)
    69dc:	1027883a 	mov	r19,r2
    69e0:	1813883a 	mov	r9,r3
    69e4:	503f5726 	beq	r10,zero,6744 <__kernel_rem_pio2+0x364>
    69e8:	d9800317 	ldw	r6,12(sp)
    69ec:	0009883a 	mov	r4,zero
    69f0:	014ffc34 	movhi	r5,16368
    69f4:	d8c00015 	stw	r3,0(sp)
    69f8:	00085980 	call	8598 <scalbn>
    69fc:	da400017 	ldw	r9,0(sp)
    6a00:	9809883a 	mov	r4,r19
    6a04:	100d883a 	mov	r6,r2
    6a08:	480b883a 	mov	r5,r9
    6a0c:	180f883a 	mov	r7,r3
    6a10:	000b82c0 	call	b82c <__subdf3>
    6a14:	1027883a 	mov	r19,r2
    6a18:	1813883a 	mov	r9,r3
    6a1c:	003f4906 	br	6744 <__kernel_rem_pio2+0x364>
    6a20:	0005883a 	mov	r2,zero
    6a24:	0007883a 	mov	r3,zero
    6a28:	003e9f06 	br	64a8 <__kernel_rem_pio2+0xc8>
    6a2c:	01000044 	movi	r4,1
    6a30:	0005883a 	mov	r2,zero
    6a34:	003fb506 	br	690c <__kernel_rem_pio2+0x52c>
    6a38:	180b883a 	mov	r5,r3
    6a3c:	000d883a 	mov	r6,zero
    6a40:	01cff834 	movhi	r7,16352
    6a44:	9009883a 	mov	r4,r18
    6a48:	d8c00a15 	stw	r3,40(sp)
    6a4c:	d8c00015 	stw	r3,0(sp)
    6a50:	000aeb00 	call	aeb0 <__gedf2>
    6a54:	da400017 	ldw	r9,0(sp)
    6a58:	d8c00a17 	ldw	r3,40(sp)
    6a5c:	1001080e 	bge	r2,zero,6e80 <__kernel_rem_pio2+0xaa0>
    6a60:	002b883a 	mov	r21,zero
    6a64:	003f3706 	br	6744 <__kernel_rem_pio2+0x364>
    6a68:	8d400044 	addi	r21,r17,1
    6a6c:	dd400015 	stw	r21,0(sp)
    6a70:	003f5506 	br	67c8 <__kernel_rem_pio2+0x3e8>
    6a74:	0039883a 	mov	fp,zero
    6a78:	002b883a 	mov	r21,zero
    6a7c:	003eb106 	br	6544 <__kernel_rem_pio2+0x164>
    6a80:	d8c00317 	ldw	r3,12(sp)
    6a84:	980490ba 	slli	r2,r19,2
    6a88:	d9400b04 	addi	r5,sp,44
    6a8c:	193ffa04 	addi	r4,r3,-24
    6a90:	10c08c04 	addi	r3,r2,560
    6a94:	1947883a 	add	r3,r3,r5
    6a98:	18ff7417 	ldw	r3,-560(r3)
    6a9c:	dd400215 	stw	r21,8(sp)
    6aa0:	d9000315 	stw	r4,12(sp)
    6aa4:	1800091e 	bne	r3,zero,6acc <__kernel_rem_pio2+0x6ec>
    6aa8:	10800b04 	addi	r2,r2,44
    6aac:	16c5883a 	add	r2,r2,sp
    6ab0:	2007883a 	mov	r3,r4
    6ab4:	113fff17 	ldw	r4,-4(r2)
    6ab8:	9cffffc4 	addi	r19,r19,-1
    6abc:	10bfff04 	addi	r2,r2,-4
    6ac0:	18fffa04 	addi	r3,r3,-24
    6ac4:	203ffb26 	beq	r4,zero,6ab4 <__kernel_rem_pio2+0x6d4>
    6ac8:	d8c00315 	stw	r3,12(sp)
    6acc:	d9800317 	ldw	r6,12(sp)
    6ad0:	0009883a 	mov	r4,zero
    6ad4:	014ffc34 	movhi	r5,16368
    6ad8:	00085980 	call	8598 <scalbn>
    6adc:	1021883a 	mov	r16,r2
    6ae0:	1823883a 	mov	r17,r3
    6ae4:	98017116 	blt	r19,zero,70ac <__kernel_rem_pio2+0xccc>
    6ae8:	980490fa 	slli	r2,r19,3
    6aec:	982c90ba 	slli	r22,r19,2
    6af0:	d8c06f04 	addi	r3,sp,444
    6af4:	18b9883a 	add	fp,r3,r2
    6af8:	d8800315 	stw	r2,12(sp)
    6afc:	b0800b04 	addi	r2,r22,44
    6b00:	df000115 	stw	fp,4(sp)
    6b04:	16ed883a 	add	r22,r2,sp
    6b08:	b1000017 	ldw	r4,0(r22)
    6b0c:	e73ffe04 	addi	fp,fp,-8
    6b10:	000c20c0 	call	c20c <__floatsidf>
    6b14:	800d883a 	mov	r6,r16
    6b18:	880f883a 	mov	r7,r17
    6b1c:	1009883a 	mov	r4,r2
    6b20:	180b883a 	mov	r5,r3
    6b24:	000b0800 	call	b080 <__muldf3>
    6b28:	8009883a 	mov	r4,r16
    6b2c:	880b883a 	mov	r5,r17
    6b30:	000d883a 	mov	r6,zero
    6b34:	01cf9c34 	movhi	r7,15984
    6b38:	e0800215 	stw	r2,8(fp)
    6b3c:	e0c00315 	stw	r3,12(fp)
    6b40:	000b0800 	call	b080 <__muldf3>
    6b44:	b009883a 	mov	r4,r22
    6b48:	1021883a 	mov	r16,r2
    6b4c:	d8800b04 	addi	r2,sp,44
    6b50:	1823883a 	mov	r17,r3
    6b54:	b5bfff04 	addi	r22,r22,-4
    6b58:	113feb1e 	bne	r2,r4,6b08 <__kernel_rem_pio2+0x728>
    6b5c:	05cffe74 	movhi	r23,16377
    6b60:	dc800517 	ldw	r18,20(sp)
    6b64:	bdc87ec4 	addi	r23,r23,8699
    6b68:	dd800117 	ldw	r22,4(sp)
    6b6c:	d8804704 	addi	r2,sp,284
    6b70:	dd000415 	stw	r20,16(sp)
    6b74:	dcc00015 	stw	r19,0(sp)
    6b78:	ddc00115 	stw	r23,4(sp)
    6b7c:	0021883a 	mov	r16,zero
    6b80:	102b883a 	mov	r21,r2
    6b84:	90002316 	blt	r18,zero,6c14 <__kernel_rem_pio2+0x834>
    6b88:	04c000b4 	movhi	r19,2
    6b8c:	d9400117 	ldw	r5,4(sp)
    6b90:	9ce9f304 	addi	r19,r19,-22580
    6b94:	b02f883a 	mov	r23,r22
    6b98:	01100034 	movhi	r4,16384
    6b9c:	0039883a 	mov	fp,zero
    6ba0:	0023883a 	mov	r17,zero
    6ba4:	0029883a 	mov	r20,zero
    6ba8:	00000506 	br	6bc0 <__kernel_rem_pio2+0x7e0>
    6bac:	9cc00204 	addi	r19,r19,8
    6bb0:	bdc00204 	addi	r23,r23,8
    6bb4:	85000e16 	blt	r16,r20,6bf0 <__kernel_rem_pio2+0x810>
    6bb8:	99000017 	ldw	r4,0(r19)
    6bbc:	99400117 	ldw	r5,4(r19)
    6bc0:	b9800017 	ldw	r6,0(r23)
    6bc4:	b9c00117 	ldw	r7,4(r23)
    6bc8:	a5000044 	addi	r20,r20,1
    6bcc:	000b0800 	call	b080 <__muldf3>
    6bd0:	e009883a 	mov	r4,fp
    6bd4:	880b883a 	mov	r5,r17
    6bd8:	100d883a 	mov	r6,r2
    6bdc:	180f883a 	mov	r7,r3
    6be0:	0009c2c0 	call	9c2c <__adddf3>
    6be4:	1039883a 	mov	fp,r2
    6be8:	1823883a 	mov	r17,r3
    6bec:	953fef0e 	bge	r18,r20,6bac <__kernel_rem_pio2+0x7cc>
    6bf0:	d8c00017 	ldw	r3,0(sp)
    6bf4:	af000015 	stw	fp,0(r21)
    6bf8:	ac400115 	stw	r17,4(r21)
    6bfc:	80800044 	addi	r2,r16,1
    6c00:	ad400204 	addi	r21,r21,8
    6c04:	b5bffe04 	addi	r22,r22,-8
    6c08:	1c000526 	beq	r3,r16,6c20 <__kernel_rem_pio2+0x840>
    6c0c:	1021883a 	mov	r16,r2
    6c10:	903fdd0e 	bge	r18,zero,6b88 <__kernel_rem_pio2+0x7a8>
    6c14:	0039883a 	mov	fp,zero
    6c18:	0023883a 	mov	r17,zero
    6c1c:	003ff406 	br	6bf0 <__kernel_rem_pio2+0x810>
    6c20:	d880a117 	ldw	r2,644(sp)
    6c24:	dd000417 	ldw	r20,16(sp)
    6c28:	dcc00017 	ldw	r19,0(sp)
    6c2c:	108000c8 	cmpgei	r2,r2,3
    6c30:	1000241e 	bne	r2,zero,6cc4 <__kernel_rem_pio2+0x8e4>
    6c34:	d880a117 	ldw	r2,644(sp)
    6c38:	0080d216 	blt	zero,r2,6f84 <__kernel_rem_pio2+0xba4>
    6c3c:	1000141e 	bne	r2,zero,6c90 <__kernel_rem_pio2+0x8b0>
    6c40:	d8c00317 	ldw	r3,12(sp)
    6c44:	d8804704 	addi	r2,sp,284
    6c48:	0009883a 	mov	r4,zero
    6c4c:	10eb883a 	add	r21,r2,r3
    6c50:	000b883a 	mov	r5,zero
    6c54:	a9800017 	ldw	r6,0(r21)
    6c58:	a9c00117 	ldw	r7,4(r21)
    6c5c:	0009c2c0 	call	9c2c <__adddf3>
    6c60:	a80d883a 	mov	r6,r21
    6c64:	1009883a 	mov	r4,r2
    6c68:	d8804704 	addi	r2,sp,284
    6c6c:	180b883a 	mov	r5,r3
    6c70:	ad7ffe04 	addi	r21,r21,-8
    6c74:	11bff71e 	bne	r2,r6,6c54 <__kernel_rem_pio2+0x874>
    6c78:	d8800217 	ldw	r2,8(sp)
    6c7c:	10000126 	beq	r2,zero,6c84 <__kernel_rem_pio2+0x8a4>
    6c80:	2960003c 	xorhi	r5,r5,32768
    6c84:	d8800917 	ldw	r2,36(sp)
    6c88:	11000015 	stw	r4,0(r2)
    6c8c:	11400115 	stw	r5,4(r2)
    6c90:	a08001cc 	andi	r2,r20,7
    6c94:	dfc0a017 	ldw	ra,640(sp)
    6c98:	df009f17 	ldw	fp,636(sp)
    6c9c:	ddc09e17 	ldw	r23,632(sp)
    6ca0:	dd809d17 	ldw	r22,628(sp)
    6ca4:	dd409c17 	ldw	r21,624(sp)
    6ca8:	dd009b17 	ldw	r20,620(sp)
    6cac:	dcc09a17 	ldw	r19,616(sp)
    6cb0:	dc809917 	ldw	r18,612(sp)
    6cb4:	dc409817 	ldw	r17,608(sp)
    6cb8:	dc009717 	ldw	r16,604(sp)
    6cbc:	dec0a104 	addi	sp,sp,644
    6cc0:	f800283a 	ret
    6cc4:	d880a117 	ldw	r2,644(sp)
    6cc8:	108000e0 	cmpeqi	r2,r2,3
    6ccc:	103ff026 	beq	r2,zero,6c90 <__kernel_rem_pio2+0x8b0>
    6cd0:	98010226 	beq	r19,zero,70dc <__kernel_rem_pio2+0xcfc>
    6cd4:	d8c00317 	ldw	r3,12(sp)
    6cd8:	d9000b04 	addi	r4,sp,44
    6cdc:	18808c04 	addi	r2,r3,560
    6ce0:	1105883a 	add	r2,r2,r4
    6ce4:	14bfb017 	ldw	r18,-320(r2)
    6ce8:	147fb117 	ldw	r17,-316(r2)
    6cec:	d8804704 	addi	r2,sp,284
    6cf0:	10e1883a 	add	r16,r2,r3
    6cf4:	85bffe17 	ldw	r22,-8(r16)
    6cf8:	857fff17 	ldw	r21,-4(r16)
    6cfc:	9009883a 	mov	r4,r18
    6d00:	880b883a 	mov	r5,r17
    6d04:	b00d883a 	mov	r6,r22
    6d08:	a80f883a 	mov	r7,r21
    6d0c:	0009c2c0 	call	9c2c <__adddf3>
    6d10:	100d883a 	mov	r6,r2
    6d14:	180f883a 	mov	r7,r3
    6d18:	b009883a 	mov	r4,r22
    6d1c:	a80b883a 	mov	r5,r21
    6d20:	9039883a 	mov	fp,r18
    6d24:	882f883a 	mov	r23,r17
    6d28:	1025883a 	mov	r18,r2
    6d2c:	1823883a 	mov	r17,r3
    6d30:	000b82c0 	call	b82c <__subdf3>
    6d34:	e00d883a 	mov	r6,fp
    6d38:	b80f883a 	mov	r7,r23
    6d3c:	1009883a 	mov	r4,r2
    6d40:	180b883a 	mov	r5,r3
    6d44:	0009c2c0 	call	9c2c <__adddf3>
    6d48:	80800015 	stw	r2,0(r16)
    6d4c:	80c00115 	stw	r3,4(r16)
    6d50:	84bffe15 	stw	r18,-8(r16)
    6d54:	847fff15 	stw	r17,-4(r16)
    6d58:	d8804704 	addi	r2,sp,284
    6d5c:	843ffe04 	addi	r16,r16,-8
    6d60:	143fe41e 	bne	r2,r16,6cf4 <__kernel_rem_pio2+0x914>
    6d64:	9cc00088 	cmpgei	r19,r19,2
    6d68:	9800dc26 	beq	r19,zero,70dc <__kernel_rem_pio2+0xcfc>
    6d6c:	d8c00317 	ldw	r3,12(sp)
    6d70:	d9000b04 	addi	r4,sp,44
    6d74:	dc404904 	addi	r17,sp,292
    6d78:	18808c04 	addi	r2,r3,560
    6d7c:	1105883a 	add	r2,r2,r4
    6d80:	14ffb017 	ldw	r19,-320(r2)
    6d84:	14bfb117 	ldw	r18,-316(r2)
    6d88:	d8804704 	addi	r2,sp,284
    6d8c:	10eb883a 	add	r21,r2,r3
    6d90:	a821883a 	mov	r16,r21
    6d94:	dd000015 	stw	r20,0(sp)
    6d98:	85fffe17 	ldw	r23,-8(r16)
    6d9c:	85bfff17 	ldw	r22,-4(r16)
    6da0:	9809883a 	mov	r4,r19
    6da4:	900b883a 	mov	r5,r18
    6da8:	b80d883a 	mov	r6,r23
    6dac:	b00f883a 	mov	r7,r22
    6db0:	0009c2c0 	call	9c2c <__adddf3>
    6db4:	100d883a 	mov	r6,r2
    6db8:	180f883a 	mov	r7,r3
    6dbc:	b809883a 	mov	r4,r23
    6dc0:	b00b883a 	mov	r5,r22
    6dc4:	9829883a 	mov	r20,r19
    6dc8:	9039883a 	mov	fp,r18
    6dcc:	1027883a 	mov	r19,r2
    6dd0:	1825883a 	mov	r18,r3
    6dd4:	000b82c0 	call	b82c <__subdf3>
    6dd8:	a00d883a 	mov	r6,r20
    6ddc:	e00f883a 	mov	r7,fp
    6de0:	1009883a 	mov	r4,r2
    6de4:	180b883a 	mov	r5,r3
    6de8:	0009c2c0 	call	9c2c <__adddf3>
    6dec:	80800015 	stw	r2,0(r16)
    6df0:	80c00115 	stw	r3,4(r16)
    6df4:	84fffe15 	stw	r19,-8(r16)
    6df8:	84bfff15 	stw	r18,-4(r16)
    6dfc:	843ffe04 	addi	r16,r16,-8
    6e00:	8c3fe51e 	bne	r17,r16,6d98 <__kernel_rem_pio2+0x9b8>
    6e04:	dd000017 	ldw	r20,0(sp)
    6e08:	0009883a 	mov	r4,zero
    6e0c:	000b883a 	mov	r5,zero
    6e10:	a9800017 	ldw	r6,0(r21)
    6e14:	a9c00117 	ldw	r7,4(r21)
    6e18:	ad7ffe04 	addi	r21,r21,-8
    6e1c:	0009c2c0 	call	9c2c <__adddf3>
    6e20:	1009883a 	mov	r4,r2
    6e24:	180b883a 	mov	r5,r3
    6e28:	8d7ff91e 	bne	r17,r21,6e10 <__kernel_rem_pio2+0xa30>
    6e2c:	da000217 	ldw	r8,8(sp)
    6e30:	d9c04717 	ldw	r7,284(sp)
    6e34:	d8c04817 	ldw	r3,288(sp)
    6e38:	d9804917 	ldw	r6,292(sp)
    6e3c:	d8804a17 	ldw	r2,296(sp)
    6e40:	4000891e 	bne	r8,zero,7068 <__kernel_rem_pio2+0xc88>
    6e44:	da000917 	ldw	r8,36(sp)
    6e48:	41c00015 	stw	r7,0(r8)
    6e4c:	40c00115 	stw	r3,4(r8)
    6e50:	41800215 	stw	r6,8(r8)
    6e54:	40800315 	stw	r2,12(r8)
    6e58:	41000415 	stw	r4,16(r8)
    6e5c:	41400515 	stw	r5,20(r8)
    6e60:	003f8b06 	br	6c90 <__kernel_rem_pio2+0x8b0>
    6e64:	88bfffc4 	addi	r2,r17,-1
    6e68:	100490ba 	slli	r2,r2,2
    6e6c:	01402034 	movhi	r5,128
    6e70:	003eca06 	br	699c <__kernel_rem_pio2+0x5bc>
    6e74:	00fffa04 	movi	r3,-24
    6e78:	d8000615 	stw	zero,24(sp)
    6e7c:	003d7906 	br	6464 <__kernel_rem_pio2+0x84>
    6e80:	a5000044 	addi	r20,r20,1
    6e84:	05400084 	movi	r21,2
    6e88:	047e9016 	blt	zero,r17,68cc <__kernel_rem_pio2+0x4ec>
    6e8c:	480f883a 	mov	r7,r9
    6e90:	900d883a 	mov	r6,r18
    6e94:	0009883a 	mov	r4,zero
    6e98:	014ffc34 	movhi	r5,16368
    6e9c:	000b82c0 	call	b82c <__subdf3>
    6ea0:	1027883a 	mov	r19,r2
    6ea4:	1813883a 	mov	r9,r3
    6ea8:	003e2606 	br	6744 <__kernel_rem_pio2+0x364>
    6eac:	ddc00317 	ldw	r23,12(sp)
    6eb0:	9809883a 	mov	r4,r19
    6eb4:	480b883a 	mov	r5,r9
    6eb8:	05cdc83a 	sub	r6,zero,r23
    6ebc:	dd400215 	stw	r21,8(sp)
    6ec0:	00085980 	call	8598 <scalbn>
    6ec4:	000d883a 	mov	r6,zero
    6ec8:	01d05c34 	movhi	r7,16752
    6ecc:	1009883a 	mov	r4,r2
    6ed0:	180b883a 	mov	r5,r3
    6ed4:	1025883a 	mov	r18,r2
    6ed8:	1821883a 	mov	r16,r3
    6edc:	000aeb00 	call	aeb0 <__gedf2>
    6ee0:	10005716 	blt	r2,zero,7040 <__kernel_rem_pio2+0xc60>
    6ee4:	000d883a 	mov	r6,zero
    6ee8:	01cf9c34 	movhi	r7,15984
    6eec:	9009883a 	mov	r4,r18
    6ef0:	800b883a 	mov	r5,r16
    6ef4:	000b0800 	call	b080 <__muldf3>
    6ef8:	882c90ba 	slli	r22,r17,2
    6efc:	180b883a 	mov	r5,r3
    6f00:	1009883a 	mov	r4,r2
    6f04:	000c18c0 	call	c18c <__fixdfsi>
    6f08:	1009883a 	mov	r4,r2
    6f0c:	102b883a 	mov	r21,r2
    6f10:	d8c00b04 	addi	r3,sp,44
    6f14:	b0808c04 	addi	r2,r22,560
    6f18:	10ed883a 	add	r22,r2,r3
    6f1c:	000c20c0 	call	c20c <__floatsidf>
    6f20:	000d883a 	mov	r6,zero
    6f24:	01d05c34 	movhi	r7,16752
    6f28:	1009883a 	mov	r4,r2
    6f2c:	180b883a 	mov	r5,r3
    6f30:	000b0800 	call	b080 <__muldf3>
    6f34:	100d883a 	mov	r6,r2
    6f38:	180f883a 	mov	r7,r3
    6f3c:	9009883a 	mov	r4,r18
    6f40:	800b883a 	mov	r5,r16
    6f44:	000b82c0 	call	b82c <__subdf3>
    6f48:	180b883a 	mov	r5,r3
    6f4c:	1009883a 	mov	r4,r2
    6f50:	000c18c0 	call	c18c <__fixdfsi>
    6f54:	8cc00044 	addi	r19,r17,1
    6f58:	980690ba 	slli	r3,r19,2
    6f5c:	b0bf7415 	stw	r2,-560(r22)
    6f60:	b8800604 	addi	r2,r23,24
    6f64:	d8800315 	stw	r2,12(sp)
    6f68:	18808c04 	addi	r2,r3,560
    6f6c:	d8c00b04 	addi	r3,sp,44
    6f70:	10c7883a 	add	r3,r2,r3
    6f74:	1d7f7415 	stw	r21,-560(r3)
    6f78:	003ed406 	br	6acc <__kernel_rem_pio2+0x6ec>
    6f7c:	0015883a 	mov	r10,zero
    6f80:	003e7d06 	br	6978 <__kernel_rem_pio2+0x598>
    6f84:	d8c00317 	ldw	r3,12(sp)
    6f88:	d8804704 	addi	r2,sp,284
    6f8c:	10eb883a 	add	r21,r2,r3
    6f90:	0005883a 	mov	r2,zero
    6f94:	0007883a 	mov	r3,zero
    6f98:	1009883a 	mov	r4,r2
    6f9c:	180b883a 	mov	r5,r3
    6fa0:	a9800017 	ldw	r6,0(r21)
    6fa4:	a9c00117 	ldw	r7,4(r21)
    6fa8:	0009c2c0 	call	9c2c <__adddf3>
    6fac:	a80d883a 	mov	r6,r21
    6fb0:	1009883a 	mov	r4,r2
    6fb4:	d8804704 	addi	r2,sp,284
    6fb8:	180b883a 	mov	r5,r3
    6fbc:	ad7ffe04 	addi	r21,r21,-8
    6fc0:	11bff71e 	bne	r2,r6,6fa0 <__kernel_rem_pio2+0xbc0>
    6fc4:	2005883a 	mov	r2,r4
    6fc8:	d9000217 	ldw	r4,8(sp)
    6fcc:	20002a1e 	bne	r4,zero,7078 <__kernel_rem_pio2+0xc98>
    6fd0:	d9800917 	ldw	r6,36(sp)
    6fd4:	d9004717 	ldw	r4,284(sp)
    6fd8:	d9404817 	ldw	r5,288(sp)
    6fdc:	30800015 	stw	r2,0(r6)
    6fe0:	30c00115 	stw	r3,4(r6)
    6fe4:	180f883a 	mov	r7,r3
    6fe8:	100d883a 	mov	r6,r2
    6fec:	000b82c0 	call	b82c <__subdf3>
    6ff0:	1009883a 	mov	r4,r2
    6ff4:	180b883a 	mov	r5,r3
    6ff8:	04c00d0e 	bge	zero,r19,7030 <__kernel_rem_pio2+0xc50>
    6ffc:	dc004904 	addi	r16,sp,292
    7000:	04400044 	movi	r17,1
    7004:	81800017 	ldw	r6,0(r16)
    7008:	81c00117 	ldw	r7,4(r16)
    700c:	8c400044 	addi	r17,r17,1
    7010:	84000204 	addi	r16,r16,8
    7014:	0009c2c0 	call	9c2c <__adddf3>
    7018:	1009883a 	mov	r4,r2
    701c:	180b883a 	mov	r5,r3
    7020:	9c7ff80e 	bge	r19,r17,7004 <__kernel_rem_pio2+0xc24>
    7024:	d8800217 	ldw	r2,8(sp)
    7028:	10000126 	beq	r2,zero,7030 <__kernel_rem_pio2+0xc50>
    702c:	2960003c 	xorhi	r5,r5,32768
    7030:	d8800917 	ldw	r2,36(sp)
    7034:	11000215 	stw	r4,8(r2)
    7038:	11400315 	stw	r5,12(r2)
    703c:	003f1406 	br	6c90 <__kernel_rem_pio2+0x8b0>
    7040:	880490ba 	slli	r2,r17,2
    7044:	800b883a 	mov	r5,r16
    7048:	d8c00b04 	addi	r3,sp,44
    704c:	10808c04 	addi	r2,r2,560
    7050:	9009883a 	mov	r4,r18
    7054:	10e1883a 	add	r16,r2,r3
    7058:	000c18c0 	call	c18c <__fixdfsi>
    705c:	80bf7415 	stw	r2,-560(r16)
    7060:	8827883a 	mov	r19,r17
    7064:	003e9906 	br	6acc <__kernel_rem_pio2+0x6ec>
    7068:	18e0003c 	xorhi	r3,r3,32768
    706c:	10a0003c 	xorhi	r2,r2,32768
    7070:	2960003c 	xorhi	r5,r5,32768
    7074:	003f7306 	br	6e44 <__kernel_rem_pio2+0xa64>
    7078:	d9c00917 	ldw	r7,36(sp)
    707c:	d9004717 	ldw	r4,284(sp)
    7080:	d9404817 	ldw	r5,288(sp)
    7084:	19a0003c 	xorhi	r6,r3,32768
    7088:	39800115 	stw	r6,4(r7)
    708c:	38800015 	stw	r2,0(r7)
    7090:	100d883a 	mov	r6,r2
    7094:	180f883a 	mov	r7,r3
    7098:	000b82c0 	call	b82c <__subdf3>
    709c:	1009883a 	mov	r4,r2
    70a0:	180b883a 	mov	r5,r3
    70a4:	04ffd516 	blt	zero,r19,6ffc <__kernel_rem_pio2+0xc1c>
    70a8:	003fe006 	br	702c <__kernel_rem_pio2+0xc4c>
    70ac:	d880a117 	ldw	r2,644(sp)
    70b0:	108000c8 	cmpgei	r2,r2,3
    70b4:	1000061e 	bne	r2,zero,70d0 <__kernel_rem_pio2+0xcf0>
    70b8:	d880a117 	ldw	r2,644(sp)
    70bc:	00800a16 	blt	zero,r2,70e8 <__kernel_rem_pio2+0xd08>
    70c0:	103ef31e 	bne	r2,zero,6c90 <__kernel_rem_pio2+0x8b0>
    70c4:	0009883a 	mov	r4,zero
    70c8:	000b883a 	mov	r5,zero
    70cc:	003eea06 	br	6c78 <__kernel_rem_pio2+0x898>
    70d0:	d880a117 	ldw	r2,644(sp)
    70d4:	108000e0 	cmpeqi	r2,r2,3
    70d8:	103eed26 	beq	r2,zero,6c90 <__kernel_rem_pio2+0x8b0>
    70dc:	0009883a 	mov	r4,zero
    70e0:	000b883a 	mov	r5,zero
    70e4:	003f5106 	br	6e2c <__kernel_rem_pio2+0xa4c>
    70e8:	0005883a 	mov	r2,zero
    70ec:	0007883a 	mov	r3,zero
    70f0:	003fb506 	br	6fc8 <__kernel_rem_pio2+0xbe8>

000070f4 <__kernel_sin>:
    70f4:	02200034 	movhi	r8,32768
    70f8:	defff304 	addi	sp,sp,-52
    70fc:	423fffc4 	addi	r8,r8,-1
    7100:	dd400815 	stw	r21,32(sp)
    7104:	dd000715 	stw	r20,28(sp)
    7108:	dc400415 	stw	r17,16(sp)
    710c:	dc000315 	stw	r16,12(sp)
    7110:	dfc00c15 	stw	ra,48(sp)
    7114:	df000b15 	stw	fp,44(sp)
    7118:	ddc00a15 	stw	r23,40(sp)
    711c:	dd800915 	stw	r22,36(sp)
    7120:	dcc00615 	stw	r19,24(sp)
    7124:	dc800515 	stw	r18,20(sp)
    7128:	2a10703a 	and	r8,r5,r8
    712c:	00cf9034 	movhi	r3,15936
    7130:	2821883a 	mov	r16,r5
    7134:	2023883a 	mov	r17,r4
    7138:	302b883a 	mov	r21,r6
    713c:	3829883a 	mov	r20,r7
    7140:	40c0020e 	bge	r8,r3,714c <__kernel_sin+0x58>
    7144:	000c18c0 	call	c18c <__fixdfsi>
    7148:	10009926 	beq	r2,zero,73b0 <__kernel_sin+0x2bc>
    714c:	880d883a 	mov	r6,r17
    7150:	800f883a 	mov	r7,r16
    7154:	8809883a 	mov	r4,r17
    7158:	800b883a 	mov	r5,r16
    715c:	000b0800 	call	b080 <__muldf3>
    7160:	100d883a 	mov	r6,r2
    7164:	180f883a 	mov	r7,r3
    7168:	8809883a 	mov	r4,r17
    716c:	800b883a 	mov	r5,r16
    7170:	1027883a 	mov	r19,r2
    7174:	1825883a 	mov	r18,r3
    7178:	000b0800 	call	b080 <__muldf3>
    717c:	0196b434 	movhi	r6,23248
    7180:	01cf79b4 	movhi	r7,15846
    7184:	31b55f04 	addi	r6,r6,-10884
    7188:	39f64e84 	addi	r7,r7,-9926
    718c:	9809883a 	mov	r4,r19
    7190:	900b883a 	mov	r5,r18
    7194:	102f883a 	mov	r23,r2
    7198:	182d883a 	mov	r22,r3
    719c:	000b0800 	call	b080 <__muldf3>
    71a0:	01a28b34 	movhi	r6,35372
    71a4:	01cf96f4 	movhi	r7,15963
    71a8:	31a73ac4 	addi	r6,r6,-25365
    71ac:	39f97984 	addi	r7,r7,-6682
    71b0:	1009883a 	mov	r4,r2
    71b4:	180b883a 	mov	r5,r3
    71b8:	000b82c0 	call	b82c <__subdf3>
    71bc:	980d883a 	mov	r6,r19
    71c0:	900f883a 	mov	r7,r18
    71c4:	1009883a 	mov	r4,r2
    71c8:	180b883a 	mov	r5,r3
    71cc:	000b0800 	call	b080 <__muldf3>
    71d0:	0195ecb4 	movhi	r6,22450
    71d4:	01cfb1f4 	movhi	r7,16071
    71d8:	31bf9f44 	addi	r6,r6,-387
    71dc:	39c778c4 	addi	r7,r7,7651
    71e0:	1009883a 	mov	r4,r2
    71e4:	180b883a 	mov	r5,r3
    71e8:	0009c2c0 	call	9c2c <__adddf3>
    71ec:	980d883a 	mov	r6,r19
    71f0:	900f883a 	mov	r7,r18
    71f4:	1009883a 	mov	r4,r2
    71f8:	180b883a 	mov	r5,r3
    71fc:	000b0800 	call	b080 <__muldf3>
    7200:	01867074 	movhi	r6,6593
    7204:	01cfcab4 	movhi	r7,16170
    7208:	31987544 	addi	r6,r6,25045
    720c:	39c06804 	addi	r7,r7,416
    7210:	1009883a 	mov	r4,r2
    7214:	180b883a 	mov	r5,r3
    7218:	000b82c0 	call	b82c <__subdf3>
    721c:	980d883a 	mov	r6,r19
    7220:	900f883a 	mov	r7,r18
    7224:	1009883a 	mov	r4,r2
    7228:	180b883a 	mov	r5,r3
    722c:	000b0800 	call	b080 <__muldf3>
    7230:	01844474 	movhi	r6,4369
    7234:	01cfe074 	movhi	r7,16257
    7238:	31be2984 	addi	r6,r6,-1882
    723c:	39c44444 	addi	r7,r7,4369
    7240:	1009883a 	mov	r4,r2
    7244:	180b883a 	mov	r5,r3
    7248:	0009c2c0 	call	9c2c <__adddf3>
    724c:	1011883a 	mov	r8,r2
    7250:	d8800d17 	ldw	r2,52(sp)
    7254:	1839883a 	mov	fp,r3
    7258:	10003e26 	beq	r2,zero,7354 <__kernel_sin+0x260>
    725c:	000d883a 	mov	r6,zero
    7260:	01cff834 	movhi	r7,16352
    7264:	a809883a 	mov	r4,r21
    7268:	a00b883a 	mov	r5,r20
    726c:	da000215 	stw	r8,8(sp)
    7270:	000b0800 	call	b080 <__muldf3>
    7274:	da000217 	ldw	r8,8(sp)
    7278:	e00f883a 	mov	r7,fp
    727c:	b809883a 	mov	r4,r23
    7280:	400d883a 	mov	r6,r8
    7284:	b00b883a 	mov	r5,r22
    7288:	d8800115 	stw	r2,4(sp)
    728c:	d8c00015 	stw	r3,0(sp)
    7290:	000b0800 	call	b080 <__muldf3>
    7294:	da800117 	ldw	r10,4(sp)
    7298:	da400017 	ldw	r9,0(sp)
    729c:	100d883a 	mov	r6,r2
    72a0:	5009883a 	mov	r4,r10
    72a4:	480b883a 	mov	r5,r9
    72a8:	180f883a 	mov	r7,r3
    72ac:	000b82c0 	call	b82c <__subdf3>
    72b0:	980d883a 	mov	r6,r19
    72b4:	900f883a 	mov	r7,r18
    72b8:	1009883a 	mov	r4,r2
    72bc:	180b883a 	mov	r5,r3
    72c0:	000b0800 	call	b080 <__muldf3>
    72c4:	a80d883a 	mov	r6,r21
    72c8:	a00f883a 	mov	r7,r20
    72cc:	1009883a 	mov	r4,r2
    72d0:	180b883a 	mov	r5,r3
    72d4:	000b82c0 	call	b82c <__subdf3>
    72d8:	01955574 	movhi	r6,21845
    72dc:	01cff174 	movhi	r7,16325
    72e0:	31955244 	addi	r6,r6,21833
    72e4:	39d55544 	addi	r7,r7,21845
    72e8:	b809883a 	mov	r4,r23
    72ec:	b00b883a 	mov	r5,r22
    72f0:	1027883a 	mov	r19,r2
    72f4:	1825883a 	mov	r18,r3
    72f8:	000b0800 	call	b080 <__muldf3>
    72fc:	100d883a 	mov	r6,r2
    7300:	180f883a 	mov	r7,r3
    7304:	9809883a 	mov	r4,r19
    7308:	900b883a 	mov	r5,r18
    730c:	0009c2c0 	call	9c2c <__adddf3>
    7310:	100d883a 	mov	r6,r2
    7314:	180f883a 	mov	r7,r3
    7318:	8809883a 	mov	r4,r17
    731c:	800b883a 	mov	r5,r16
    7320:	000b82c0 	call	b82c <__subdf3>
    7324:	dfc00c17 	ldw	ra,48(sp)
    7328:	df000b17 	ldw	fp,44(sp)
    732c:	ddc00a17 	ldw	r23,40(sp)
    7330:	dd800917 	ldw	r22,36(sp)
    7334:	dd400817 	ldw	r21,32(sp)
    7338:	dd000717 	ldw	r20,28(sp)
    733c:	dcc00617 	ldw	r19,24(sp)
    7340:	dc800517 	ldw	r18,20(sp)
    7344:	dc400417 	ldw	r17,16(sp)
    7348:	dc000317 	ldw	r16,12(sp)
    734c:	dec00d04 	addi	sp,sp,52
    7350:	f800283a 	ret
    7354:	400d883a 	mov	r6,r8
    7358:	9809883a 	mov	r4,r19
    735c:	900b883a 	mov	r5,r18
    7360:	180f883a 	mov	r7,r3
    7364:	000b0800 	call	b080 <__muldf3>
    7368:	01955574 	movhi	r6,21845
    736c:	01cff174 	movhi	r7,16325
    7370:	31955244 	addi	r6,r6,21833
    7374:	39d55544 	addi	r7,r7,21845
    7378:	1009883a 	mov	r4,r2
    737c:	180b883a 	mov	r5,r3
    7380:	000b82c0 	call	b82c <__subdf3>
    7384:	b80d883a 	mov	r6,r23
    7388:	b00f883a 	mov	r7,r22
    738c:	1009883a 	mov	r4,r2
    7390:	180b883a 	mov	r5,r3
    7394:	000b0800 	call	b080 <__muldf3>
    7398:	880d883a 	mov	r6,r17
    739c:	800f883a 	mov	r7,r16
    73a0:	1009883a 	mov	r4,r2
    73a4:	180b883a 	mov	r5,r3
    73a8:	0009c2c0 	call	9c2c <__adddf3>
    73ac:	003fdd06 	br	7324 <__kernel_sin+0x230>
    73b0:	8805883a 	mov	r2,r17
    73b4:	8007883a 	mov	r3,r16
    73b8:	003fda06 	br	7324 <__kernel_sin+0x230>

000073bc <__kernel_cosf>:
    73bc:	defff804 	addi	sp,sp,-32
    73c0:	dc000015 	stw	r16,0(sp)
    73c4:	04200034 	movhi	r16,32768
    73c8:	843fffc4 	addi	r16,r16,-1
    73cc:	dd000415 	stw	r20,16(sp)
    73d0:	dcc00315 	stw	r19,12(sp)
    73d4:	dfc00715 	stw	ra,28(sp)
    73d8:	dd800615 	stw	r22,24(sp)
    73dc:	dd400515 	stw	r21,20(sp)
    73e0:	dc800215 	stw	r18,8(sp)
    73e4:	dc400115 	stw	r17,4(sp)
    73e8:	8120703a 	and	r16,r16,r4
    73ec:	008c8034 	movhi	r2,12800
    73f0:	2027883a 	mov	r19,r4
    73f4:	2829883a 	mov	r20,r5
    73f8:	8080430e 	bge	r16,r2,7508 <__kernel_cosf+0x14c>
    73fc:	000999c0 	call	999c <__fixsfsi>
    7400:	10009d26 	beq	r2,zero,7678 <__kernel_cosf+0x2bc>
    7404:	980b883a 	mov	r5,r19
    7408:	9809883a 	mov	r4,r19
    740c:	00091080 	call	9108 <__mulsf3>
    7410:	016b5234 	movhi	r5,44360
    7414:	2975d384 	addi	r5,r5,-10418
    7418:	1009883a 	mov	r4,r2
    741c:	1023883a 	mov	r17,r2
    7420:	00091080 	call	9108 <__mulsf3>
    7424:	014c43f4 	movhi	r5,12559
    7428:	295d3d84 	addi	r5,r5,29942
    742c:	1009883a 	mov	r4,r2
    7430:	0008b740 	call	8b74 <__addsf3>
    7434:	880b883a 	mov	r5,r17
    7438:	1009883a 	mov	r4,r2
    743c:	00091080 	call	9108 <__mulsf3>
    7440:	014d2534 	movhi	r5,13460
    7444:	297c9f04 	addi	r5,r5,-3460
    7448:	1009883a 	mov	r4,r2
    744c:	00095080 	call	9508 <__subsf3>
    7450:	880b883a 	mov	r5,r17
    7454:	1009883a 	mov	r4,r2
    7458:	00091080 	call	9108 <__mulsf3>
    745c:	014df434 	movhi	r5,14288
    7460:	29434044 	addi	r5,r5,3329
    7464:	1009883a 	mov	r4,r2
    7468:	0008b740 	call	8b74 <__addsf3>
    746c:	880b883a 	mov	r5,r17
    7470:	1009883a 	mov	r4,r2
    7474:	00091080 	call	9108 <__mulsf3>
    7478:	014eadb4 	movhi	r5,15030
    747c:	2942d844 	addi	r5,r5,2913
    7480:	1009883a 	mov	r4,r2
    7484:	00095080 	call	9508 <__subsf3>
    7488:	880b883a 	mov	r5,r17
    748c:	1009883a 	mov	r4,r2
    7490:	00091080 	call	9108 <__mulsf3>
    7494:	014f4af4 	movhi	r5,15659
    7498:	296aaac4 	addi	r5,r5,-21845
    749c:	1009883a 	mov	r4,r2
    74a0:	0008b740 	call	8b74 <__addsf3>
    74a4:	880b883a 	mov	r5,r17
    74a8:	1009883a 	mov	r4,r2
    74ac:	00091080 	call	9108 <__mulsf3>
    74b0:	102b883a 	mov	r21,r2
    74b4:	8809883a 	mov	r4,r17
    74b8:	014fc034 	movhi	r5,16128
    74bc:	00091080 	call	9108 <__mulsf3>
    74c0:	a80b883a 	mov	r5,r21
    74c4:	8809883a 	mov	r4,r17
    74c8:	1021883a 	mov	r16,r2
    74cc:	00091080 	call	9108 <__mulsf3>
    74d0:	a00b883a 	mov	r5,r20
    74d4:	9809883a 	mov	r4,r19
    74d8:	1023883a 	mov	r17,r2
    74dc:	00091080 	call	9108 <__mulsf3>
    74e0:	8809883a 	mov	r4,r17
    74e4:	100b883a 	mov	r5,r2
    74e8:	00095080 	call	9508 <__subsf3>
    74ec:	8009883a 	mov	r4,r16
    74f0:	100b883a 	mov	r5,r2
    74f4:	00095080 	call	9508 <__subsf3>
    74f8:	100b883a 	mov	r5,r2
    74fc:	010fe034 	movhi	r4,16256
    7500:	00095080 	call	9508 <__subsf3>
    7504:	00004f06 	br	7644 <__kernel_cosf+0x288>
    7508:	200b883a 	mov	r5,r4
    750c:	00091080 	call	9108 <__mulsf3>
    7510:	016b5234 	movhi	r5,44360
    7514:	2975d384 	addi	r5,r5,-10418
    7518:	1009883a 	mov	r4,r2
    751c:	1025883a 	mov	r18,r2
    7520:	00091080 	call	9108 <__mulsf3>
    7524:	014c43f4 	movhi	r5,12559
    7528:	295d3d84 	addi	r5,r5,29942
    752c:	1009883a 	mov	r4,r2
    7530:	0008b740 	call	8b74 <__addsf3>
    7534:	900b883a 	mov	r5,r18
    7538:	1009883a 	mov	r4,r2
    753c:	00091080 	call	9108 <__mulsf3>
    7540:	014d2534 	movhi	r5,13460
    7544:	297c9f04 	addi	r5,r5,-3460
    7548:	1009883a 	mov	r4,r2
    754c:	00095080 	call	9508 <__subsf3>
    7550:	900b883a 	mov	r5,r18
    7554:	1009883a 	mov	r4,r2
    7558:	00091080 	call	9108 <__mulsf3>
    755c:	014df434 	movhi	r5,14288
    7560:	29434044 	addi	r5,r5,3329
    7564:	1009883a 	mov	r4,r2
    7568:	0008b740 	call	8b74 <__addsf3>
    756c:	900b883a 	mov	r5,r18
    7570:	1009883a 	mov	r4,r2
    7574:	00091080 	call	9108 <__mulsf3>
    7578:	014eadb4 	movhi	r5,15030
    757c:	2942d844 	addi	r5,r5,2913
    7580:	1009883a 	mov	r4,r2
    7584:	00095080 	call	9508 <__subsf3>
    7588:	900b883a 	mov	r5,r18
    758c:	1009883a 	mov	r4,r2
    7590:	00091080 	call	9108 <__mulsf3>
    7594:	014f4af4 	movhi	r5,15659
    7598:	296aaac4 	addi	r5,r5,-21845
    759c:	1009883a 	mov	r4,r2
    75a0:	0008b740 	call	8b74 <__addsf3>
    75a4:	900b883a 	mov	r5,r18
    75a8:	1009883a 	mov	r4,r2
    75ac:	00091080 	call	9108 <__mulsf3>
    75b0:	00cfa6b4 	movhi	r3,16026
    75b4:	18e66644 	addi	r3,r3,-26215
    75b8:	102d883a 	mov	r22,r2
    75bc:	9023883a 	mov	r17,r18
    75c0:	102b883a 	mov	r21,r2
    75c4:	1c3fbb0e 	bge	r3,r16,74b4 <__kernel_cosf+0xf8>
    75c8:	008fd234 	movhi	r2,16200
    75cc:	14002716 	blt	r2,r16,766c <__kernel_cosf+0x2b0>
    75d0:	017fc034 	movhi	r5,65280
    75d4:	814b883a 	add	r5,r16,r5
    75d8:	010fe034 	movhi	r4,16256
    75dc:	2821883a 	mov	r16,r5
    75e0:	00095080 	call	9508 <__subsf3>
    75e4:	1023883a 	mov	r17,r2
    75e8:	9009883a 	mov	r4,r18
    75ec:	014fc034 	movhi	r5,16128
    75f0:	00091080 	call	9108 <__mulsf3>
    75f4:	800b883a 	mov	r5,r16
    75f8:	1009883a 	mov	r4,r2
    75fc:	00095080 	call	9508 <__subsf3>
    7600:	9009883a 	mov	r4,r18
    7604:	b00b883a 	mov	r5,r22
    7608:	1021883a 	mov	r16,r2
    760c:	00091080 	call	9108 <__mulsf3>
    7610:	a00b883a 	mov	r5,r20
    7614:	9809883a 	mov	r4,r19
    7618:	1025883a 	mov	r18,r2
    761c:	00091080 	call	9108 <__mulsf3>
    7620:	100b883a 	mov	r5,r2
    7624:	9009883a 	mov	r4,r18
    7628:	00095080 	call	9508 <__subsf3>
    762c:	100b883a 	mov	r5,r2
    7630:	8009883a 	mov	r4,r16
    7634:	00095080 	call	9508 <__subsf3>
    7638:	100b883a 	mov	r5,r2
    763c:	8809883a 	mov	r4,r17
    7640:	00095080 	call	9508 <__subsf3>
    7644:	dfc00717 	ldw	ra,28(sp)
    7648:	dd800617 	ldw	r22,24(sp)
    764c:	dd400517 	ldw	r21,20(sp)
    7650:	dd000417 	ldw	r20,16(sp)
    7654:	dcc00317 	ldw	r19,12(sp)
    7658:	dc800217 	ldw	r18,8(sp)
    765c:	dc400117 	ldw	r17,4(sp)
    7660:	dc000017 	ldw	r16,0(sp)
    7664:	dec00804 	addi	sp,sp,32
    7668:	f800283a 	ret
    766c:	044fce34 	movhi	r17,16184
    7670:	040fa434 	movhi	r16,16016
    7674:	003fdc06 	br	75e8 <__kernel_cosf+0x22c>
    7678:	008fe034 	movhi	r2,16256
    767c:	003ff106 	br	7644 <__kernel_cosf+0x288>

00007680 <__kernel_rem_pio2f>:
    7680:	deff9a04 	addi	sp,sp,-408
    7684:	d8806617 	ldw	r2,408(sp)
    7688:	dfc06515 	stw	ra,404(sp)
    768c:	df006415 	stw	fp,400(sp)
    7690:	100690ba 	slli	r3,r2,2
    7694:	008000b4 	movhi	r2,2
    7698:	ddc06315 	stw	r23,396(sp)
    769c:	1885883a 	add	r2,r3,r2
    76a0:	10aa1217 	ldw	r2,-22456(r2)
    76a4:	dd806215 	stw	r22,392(sp)
    76a8:	dd406115 	stw	r21,388(sp)
    76ac:	d8800515 	stw	r2,20(sp)
    76b0:	38bfffc4 	addi	r2,r7,-1
    76b4:	dd006015 	stw	r20,384(sp)
    76b8:	dcc05f15 	stw	r19,380(sp)
    76bc:	dc805e15 	stw	r18,376(sp)
    76c0:	dc405d15 	stw	r17,372(sp)
    76c4:	dc005c15 	stw	r16,368(sp)
    76c8:	d9800b15 	stw	r6,44(sp)
    76cc:	d9c00715 	stw	r7,28(sp)
    76d0:	30ffff10 	cmplti	r3,r6,-4
    76d4:	d9000215 	stw	r4,8(sp)
    76d8:	d9400915 	stw	r5,36(sp)
    76dc:	d8800115 	stw	r2,4(sp)
    76e0:	1802451e 	bne	r3,zero,7ff8 <__kernel_rem_pio2f+0x978>
    76e4:	30bfff44 	addi	r2,r6,-3
    76e8:	10024716 	blt	r2,zero,8008 <__kernel_rem_pio2f+0x988>
    76ec:	1005d0fa 	srai	r2,r2,3
    76f0:	d8800615 	stw	r2,24(sp)
    76f4:	10800044 	addi	r2,r2,1
    76f8:	100490fa 	slli	r2,r2,3
    76fc:	d8800a15 	stw	r2,40(sp)
    7700:	d9000b17 	ldw	r4,44(sp)
    7704:	d9400a17 	ldw	r5,40(sp)
    7708:	d8c00117 	ldw	r3,4(sp)
    770c:	d8800517 	ldw	r2,20(sp)
    7710:	2149c83a 	sub	r4,r4,r5
    7714:	d9000315 	stw	r4,12(sp)
    7718:	d9000617 	ldw	r4,24(sp)
    771c:	10c5883a 	add	r2,r2,r3
    7720:	20e1c83a 	sub	r16,r4,r3
    7724:	10000e16 	blt	r2,zero,7760 <__kernel_rem_pio2f+0xe0>
    7728:	802490ba 	slli	r18,r16,2
    772c:	d8c06717 	ldw	r3,412(sp)
    7730:	10800044 	addi	r2,r2,1
    7734:	dc402004 	addi	r17,sp,128
    7738:	1ca5883a 	add	r18,r3,r18
    773c:	1427883a 	add	r19,r2,r16
    7740:	80015116 	blt	r16,zero,7c88 <__kernel_rem_pio2f+0x608>
    7744:	91000017 	ldw	r4,0(r18)
    7748:	0009a0c0 	call	9a0c <__floatsisf>
    774c:	88800015 	stw	r2,0(r17)
    7750:	84000044 	addi	r16,r16,1
    7754:	8c400104 	addi	r17,r17,4
    7758:	94800104 	addi	r18,r18,4
    775c:	84fff81e 	bne	r16,r19,7740 <__kernel_rem_pio2f+0xc0>
    7760:	d8800517 	ldw	r2,20(sp)
    7764:	10001f16 	blt	r2,zero,77e4 <__kernel_rem_pio2f+0x164>
    7768:	dd800117 	ldw	r22,4(sp)
    776c:	d8c02004 	addi	r3,sp,128
    7770:	dcc04804 	addi	r19,sp,288
    7774:	b02290ba 	slli	r17,r22,2
    7778:	b025883a 	mov	r18,r22
    777c:	8c000104 	addi	r16,r17,4
    7780:	1c63883a 	add	r17,r3,r17
    7784:	d8c00717 	ldw	r3,28(sp)
    7788:	10e9883a 	add	r20,r2,r3
    778c:	d8800217 	ldw	r2,8(sp)
    7790:	80a1883a 	add	r16,r16,r2
    7794:	002b883a 	mov	r21,zero
    7798:	b0000d16 	blt	r22,zero,77d0 <__kernel_rem_pio2f+0x150>
    779c:	df000217 	ldw	fp,8(sp)
    77a0:	882f883a 	mov	r23,r17
    77a4:	002b883a 	mov	r21,zero
    77a8:	b9400017 	ldw	r5,0(r23)
    77ac:	e1000017 	ldw	r4,0(fp)
    77b0:	e7000104 	addi	fp,fp,4
    77b4:	bdffff04 	addi	r23,r23,-4
    77b8:	00091080 	call	9108 <__mulsf3>
    77bc:	a809883a 	mov	r4,r21
    77c0:	100b883a 	mov	r5,r2
    77c4:	0008b740 	call	8b74 <__addsf3>
    77c8:	102b883a 	mov	r21,r2
    77cc:	e43ff61e 	bne	fp,r16,77a8 <__kernel_rem_pio2f+0x128>
    77d0:	9d400015 	stw	r21,0(r19)
    77d4:	94800044 	addi	r18,r18,1
    77d8:	9cc00104 	addi	r19,r19,4
    77dc:	8c400104 	addi	r17,r17,4
    77e0:	953fec1e 	bne	r18,r20,7794 <__kernel_rem_pio2f+0x114>
    77e4:	dc400517 	ldw	r17,20(sp)
    77e8:	d8c00717 	ldw	r3,28(sp)
    77ec:	d9000217 	ldw	r4,8(sp)
    77f0:	88bfffc4 	addi	r2,r17,-1
    77f4:	180690ba 	slli	r3,r3,2
    77f8:	883890ba 	slli	fp,r17,2
    77fc:	100490ba 	slli	r2,r2,2
    7800:	243fff04 	addi	r16,r4,-4
    7804:	80e1883a 	add	r16,r16,r3
    7808:	e1000c04 	addi	r4,fp,48
    780c:	10805004 	addi	r2,r2,320
    7810:	d8c00c04 	addi	r3,sp,48
    7814:	26c9883a 	add	r4,r4,sp
    7818:	10c5883a 	add	r2,r2,r3
    781c:	d9000415 	stw	r4,16(sp)
    7820:	dd804804 	addi	r22,sp,288
    7824:	d8800815 	stw	r2,32(sp)
    7828:	882a90ba 	slli	r21,r17,2
    782c:	d8c00c04 	addi	r3,sp,48
    7830:	a8805004 	addi	r2,r21,320
    7834:	10c5883a 	add	r2,r2,r3
    7838:	14ffec17 	ldw	r19,-80(r2)
    783c:	04401a0e 	bge	zero,r17,78a8 <__kernel_rem_pio2f+0x228>
    7840:	b569883a 	add	r20,r22,r21
    7844:	1825883a 	mov	r18,r3
    7848:	014ee034 	movhi	r5,15232
    784c:	9809883a 	mov	r4,r19
    7850:	00091080 	call	9108 <__mulsf3>
    7854:	1009883a 	mov	r4,r2
    7858:	000999c0 	call	999c <__fixsfsi>
    785c:	1009883a 	mov	r4,r2
    7860:	0009a0c0 	call	9a0c <__floatsisf>
    7864:	0150e034 	movhi	r5,17280
    7868:	1009883a 	mov	r4,r2
    786c:	102f883a 	mov	r23,r2
    7870:	00091080 	call	9108 <__mulsf3>
    7874:	100b883a 	mov	r5,r2
    7878:	9809883a 	mov	r4,r19
    787c:	00095080 	call	9508 <__subsf3>
    7880:	1009883a 	mov	r4,r2
    7884:	000999c0 	call	999c <__fixsfsi>
    7888:	a17fff17 	ldw	r5,-4(r20)
    788c:	90800015 	stw	r2,0(r18)
    7890:	b809883a 	mov	r4,r23
    7894:	0008b740 	call	8b74 <__addsf3>
    7898:	a53fff04 	addi	r20,r20,-4
    789c:	1027883a 	mov	r19,r2
    78a0:	94800104 	addi	r18,r18,4
    78a4:	b53fe81e 	bne	r22,r20,7848 <__kernel_rem_pio2f+0x1c8>
    78a8:	dd000317 	ldw	r20,12(sp)
    78ac:	9809883a 	mov	r4,r19
    78b0:	a00b883a 	mov	r5,r20
    78b4:	000884c0 	call	884c <scalbnf>
    78b8:	014f8034 	movhi	r5,15872
    78bc:	1009883a 	mov	r4,r2
    78c0:	1025883a 	mov	r18,r2
    78c4:	00091080 	call	9108 <__mulsf3>
    78c8:	1009883a 	mov	r4,r2
    78cc:	00087580 	call	8758 <floorf>
    78d0:	01504034 	movhi	r5,16640
    78d4:	1009883a 	mov	r4,r2
    78d8:	00091080 	call	9108 <__mulsf3>
    78dc:	100b883a 	mov	r5,r2
    78e0:	9009883a 	mov	r4,r18
    78e4:	00095080 	call	9508 <__subsf3>
    78e8:	1009883a 	mov	r4,r2
    78ec:	1025883a 	mov	r18,r2
    78f0:	000999c0 	call	999c <__fixsfsi>
    78f4:	1009883a 	mov	r4,r2
    78f8:	1027883a 	mov	r19,r2
    78fc:	0009a0c0 	call	9a0c <__floatsisf>
    7900:	100b883a 	mov	r5,r2
    7904:	9009883a 	mov	r4,r18
    7908:	00095080 	call	9508 <__subsf3>
    790c:	100d883a 	mov	r6,r2
    7910:	1025883a 	mov	r18,r2
    7914:	a00b883a 	mov	r5,r20
    7918:	0500570e 	bge	zero,r20,7a78 <__kernel_rem_pio2f+0x3f8>
    791c:	88bfffc4 	addi	r2,r17,-1
    7920:	100490ba 	slli	r2,r2,2
    7924:	d9000c04 	addi	r4,sp,48
    7928:	00c00204 	movi	r3,8
    792c:	10805004 	addi	r2,r2,320
    7930:	1105883a 	add	r2,r2,r4
    7934:	113fb017 	ldw	r4,-320(r2)
    7938:	1d07c83a 	sub	r3,r3,r20
    793c:	050001c4 	movi	r20,7
    7940:	a169c83a 	sub	r20,r20,r5
    7944:	20cbd83a 	sra	r5,r4,r3
    7948:	28c6983a 	sll	r3,r5,r3
    794c:	9967883a 	add	r19,r19,r5
    7950:	20c7c83a 	sub	r3,r4,r3
    7954:	1d29d83a 	sra	r20,r3,r20
    7958:	10ffb015 	stw	r3,-320(r2)
    795c:	05005016 	blt	zero,r20,7aa0 <__kernel_rem_pio2f+0x420>
    7960:	000b883a 	mov	r5,zero
    7964:	9009883a 	mov	r4,r18
    7968:	0008fe00 	call	8fe0 <__eqsf2>
    796c:	10009b1e 	bne	r2,zero,7bdc <__kernel_rem_pio2f+0x55c>
    7970:	d8800517 	ldw	r2,20(sp)
    7974:	8cbfffc4 	addi	r18,r17,-1
    7978:	90800916 	blt	r18,r2,79a0 <__kernel_rem_pio2f+0x320>
    797c:	d9400417 	ldw	r5,16(sp)
    7980:	a8800c04 	addi	r2,r21,48
    7984:	16c5883a 	add	r2,r2,sp
    7988:	0007883a 	mov	r3,zero
    798c:	113fff17 	ldw	r4,-4(r2)
    7990:	10bfff04 	addi	r2,r2,-4
    7994:	1906b03a 	or	r3,r3,r4
    7998:	117ffc1e 	bne	r2,r5,798c <__kernel_rem_pio2f+0x30c>
    799c:	1800ca1e 	bne	r3,zero,7cc8 <__kernel_rem_pio2f+0x648>
    79a0:	d8800817 	ldw	r2,32(sp)
    79a4:	10bfb017 	ldw	r2,-320(r2)
    79a8:	1000c41e 	bne	r2,zero,7cbc <__kernel_rem_pio2f+0x63c>
    79ac:	d8800417 	ldw	r2,16(sp)
    79b0:	04c00044 	movi	r19,1
    79b4:	10fffe17 	ldw	r3,-8(r2)
    79b8:	9cc00044 	addi	r19,r19,1
    79bc:	10bfff04 	addi	r2,r2,-4
    79c0:	183ffc26 	beq	r3,zero,79b4 <__kernel_rem_pio2f+0x334>
    79c4:	8cc5883a 	add	r2,r17,r19
    79c8:	8d000044 	addi	r20,r17,1
    79cc:	d8800015 	stw	r2,0(sp)
    79d0:	d8800617 	ldw	r2,24(sp)
    79d4:	b56b883a 	add	r21,r22,r21
    79d8:	88a5883a 	add	r18,r17,r2
    79dc:	d8800717 	ldw	r2,28(sp)
    79e0:	902490ba 	slli	r18,r18,2
    79e4:	1463883a 	add	r17,r2,r17
    79e8:	d8806717 	ldw	r2,412(sp)
    79ec:	882290ba 	slli	r17,r17,2
    79f0:	14a5883a 	add	r18,r2,r18
    79f4:	d8802004 	addi	r2,sp,128
    79f8:	1463883a 	add	r17,r2,r17
    79fc:	91000117 	ldw	r4,4(r18)
    7a00:	0009a0c0 	call	9a0c <__floatsisf>
    7a04:	1009883a 	mov	r4,r2
    7a08:	88800015 	stw	r2,0(r17)
    7a0c:	d8800117 	ldw	r2,4(sp)
    7a10:	10001716 	blt	r2,zero,7a70 <__kernel_rem_pio2f+0x3f0>
    7a14:	dcc00217 	ldw	r19,8(sp)
    7a18:	882f883a 	mov	r23,r17
    7a1c:	0039883a 	mov	fp,zero
    7a20:	00000206 	br	7a2c <__kernel_rem_pio2f+0x3ac>
    7a24:	b9000017 	ldw	r4,0(r23)
    7a28:	9cc00104 	addi	r19,r19,4
    7a2c:	99400017 	ldw	r5,0(r19)
    7a30:	bdffff04 	addi	r23,r23,-4
    7a34:	00091080 	call	9108 <__mulsf3>
    7a38:	e009883a 	mov	r4,fp
    7a3c:	100b883a 	mov	r5,r2
    7a40:	0008b740 	call	8b74 <__addsf3>
    7a44:	1039883a 	mov	fp,r2
    7a48:	9c3ff61e 	bne	r19,r16,7a24 <__kernel_rem_pio2f+0x3a4>
    7a4c:	d8800017 	ldw	r2,0(sp)
    7a50:	af000115 	stw	fp,4(r21)
    7a54:	a5000044 	addi	r20,r20,1
    7a58:	94800104 	addi	r18,r18,4
    7a5c:	8c400104 	addi	r17,r17,4
    7a60:	ad400104 	addi	r21,r21,4
    7a64:	153fe50e 	bge	r2,r20,79fc <__kernel_rem_pio2f+0x37c>
    7a68:	1023883a 	mov	r17,r2
    7a6c:	003f6e06 	br	7828 <__kernel_rem_pio2f+0x1a8>
    7a70:	0039883a 	mov	fp,zero
    7a74:	003ff506 	br	7a4c <__kernel_rem_pio2f+0x3cc>
    7a78:	d8800317 	ldw	r2,12(sp)
    7a7c:	1000871e 	bne	r2,zero,7c9c <__kernel_rem_pio2f+0x61c>
    7a80:	88bfffc4 	addi	r2,r17,-1
    7a84:	100490ba 	slli	r2,r2,2
    7a88:	d8c00c04 	addi	r3,sp,48
    7a8c:	10805004 	addi	r2,r2,320
    7a90:	10c5883a 	add	r2,r2,r3
    7a94:	153fb017 	ldw	r20,-320(r2)
    7a98:	a029d1fa 	srai	r20,r20,7
    7a9c:	053fb00e 	bge	zero,r20,7960 <__kernel_rem_pio2f+0x2e0>
    7aa0:	9cc00044 	addi	r19,r19,1
    7aa4:	04415a0e 	bge	zero,r17,8010 <__kernel_rem_pio2f+0x990>
    7aa8:	d9c00c17 	ldw	r7,48(sp)
    7aac:	3800781e 	bne	r7,zero,7c90 <__kernel_rem_pio2f+0x610>
    7ab0:	88800060 	cmpeqi	r2,r17,1
    7ab4:	1000251e 	bne	r2,zero,7b4c <__kernel_rem_pio2f+0x4cc>
    7ab8:	d9c00d17 	ldw	r7,52(sp)
    7abc:	d9000d04 	addi	r4,sp,52
    7ac0:	00c00044 	movi	r3,1
    7ac4:	18800044 	addi	r2,r3,1
    7ac8:	21000104 	addi	r4,r4,4
    7acc:	3800061e 	bne	r7,zero,7ae8 <__kernel_rem_pio2f+0x468>
    7ad0:	88801e26 	beq	r17,r2,7b4c <__kernel_rem_pio2f+0x4cc>
    7ad4:	21c00017 	ldw	r7,0(r4)
    7ad8:	1007883a 	mov	r3,r2
    7adc:	18800044 	addi	r2,r3,1
    7ae0:	21000104 	addi	r4,r4,4
    7ae4:	383ffa26 	beq	r7,zero,7ad0 <__kernel_rem_pio2f+0x450>
    7ae8:	180690ba 	slli	r3,r3,2
    7aec:	01004004 	movi	r4,256
    7af0:	21cfc83a 	sub	r7,r4,r7
    7af4:	18c05004 	addi	r3,r3,320
    7af8:	d9000c04 	addi	r4,sp,48
    7afc:	1907883a 	add	r3,r3,r4
    7b00:	19ffb015 	stw	r7,-320(r3)
    7b04:	1440100e 	bge	r2,r17,7b48 <__kernel_rem_pio2f+0x4c8>
    7b08:	100490ba 	slli	r2,r2,2
    7b0c:	a8c00c04 	addi	r3,r21,48
    7b10:	1ecb883a 	add	r5,r3,sp
    7b14:	d9c00c04 	addi	r7,sp,48
    7b18:	10c05004 	addi	r3,r2,320
    7b1c:	19c7883a 	add	r3,r3,r7
    7b20:	10800c04 	addi	r2,r2,48
    7b24:	18ffb017 	ldw	r3,-320(r3)
    7b28:	01003fc4 	movi	r4,255
    7b2c:	16c5883a 	add	r2,r2,sp
    7b30:	00000106 	br	7b38 <__kernel_rem_pio2f+0x4b8>
    7b34:	10c00017 	ldw	r3,0(r2)
    7b38:	20c7c83a 	sub	r3,r4,r3
    7b3c:	10c00015 	stw	r3,0(r2)
    7b40:	10800104 	addi	r2,r2,4
    7b44:	117ffb1e 	bne	r2,r5,7b34 <__kernel_rem_pio2f+0x4b4>
    7b48:	01c00044 	movi	r7,1
    7b4c:	d8c00317 	ldw	r3,12(sp)
    7b50:	00c00c0e 	bge	zero,r3,7b84 <__kernel_rem_pio2f+0x504>
    7b54:	18800060 	cmpeqi	r2,r3,1
    7b58:	1001161e 	bne	r2,zero,7fb4 <__kernel_rem_pio2f+0x934>
    7b5c:	188000a0 	cmpeqi	r2,r3,2
    7b60:	10000826 	beq	r2,zero,7b84 <__kernel_rem_pio2f+0x504>
    7b64:	88bfffc4 	addi	r2,r17,-1
    7b68:	100490ba 	slli	r2,r2,2
    7b6c:	d8c00c04 	addi	r3,sp,48
    7b70:	10805004 	addi	r2,r2,320
    7b74:	10c5883a 	add	r2,r2,r3
    7b78:	10ffb017 	ldw	r3,-320(r2)
    7b7c:	18c00fcc 	andi	r3,r3,63
    7b80:	10ffb015 	stw	r3,-320(r2)
    7b84:	a0800098 	cmpnei	r2,r20,2
    7b88:	103f751e 	bne	r2,zero,7960 <__kernel_rem_pio2f+0x2e0>
    7b8c:	300b883a 	mov	r5,r6
    7b90:	010fe034 	movhi	r4,16256
    7b94:	d9c00015 	stw	r7,0(sp)
    7b98:	00095080 	call	9508 <__subsf3>
    7b9c:	d9c00017 	ldw	r7,0(sp)
    7ba0:	1025883a 	mov	r18,r2
    7ba4:	383f6e26 	beq	r7,zero,7960 <__kernel_rem_pio2f+0x2e0>
    7ba8:	d9400317 	ldw	r5,12(sp)
    7bac:	010fe034 	movhi	r4,16256
    7bb0:	d8800015 	stw	r2,0(sp)
    7bb4:	000884c0 	call	884c <scalbnf>
    7bb8:	d8c00017 	ldw	r3,0(sp)
    7bbc:	100b883a 	mov	r5,r2
    7bc0:	1809883a 	mov	r4,r3
    7bc4:	00095080 	call	9508 <__subsf3>
    7bc8:	1025883a 	mov	r18,r2
    7bcc:	000b883a 	mov	r5,zero
    7bd0:	9009883a 	mov	r4,r18
    7bd4:	0008fe00 	call	8fe0 <__eqsf2>
    7bd8:	103f6526 	beq	r2,zero,7970 <__kernel_rem_pio2f+0x2f0>
    7bdc:	d8800a17 	ldw	r2,40(sp)
    7be0:	d8c00b17 	ldw	r3,44(sp)
    7be4:	9009883a 	mov	r4,r18
    7be8:	dd000015 	stw	r20,0(sp)
    7bec:	10cbc83a 	sub	r5,r2,r3
    7bf0:	000884c0 	call	884c <scalbnf>
    7bf4:	0150e034 	movhi	r5,17280
    7bf8:	1009883a 	mov	r4,r2
    7bfc:	1021883a 	mov	r16,r2
    7c00:	00090500 	call	9050 <__gesf2>
    7c04:	10012816 	blt	r2,zero,80a8 <__kernel_rem_pio2f+0xa28>
    7c08:	014ee034 	movhi	r5,15232
    7c0c:	8009883a 	mov	r4,r16
    7c10:	00091080 	call	9108 <__mulsf3>
    7c14:	1009883a 	mov	r4,r2
    7c18:	000999c0 	call	999c <__fixsfsi>
    7c1c:	1009883a 	mov	r4,r2
    7c20:	0009a0c0 	call	9a0c <__floatsisf>
    7c24:	0150e034 	movhi	r5,17280
    7c28:	1009883a 	mov	r4,r2
    7c2c:	102d883a 	mov	r22,r2
    7c30:	00091080 	call	9108 <__mulsf3>
    7c34:	100b883a 	mov	r5,r2
    7c38:	8009883a 	mov	r4,r16
    7c3c:	00095080 	call	9508 <__subsf3>
    7c40:	1009883a 	mov	r4,r2
    7c44:	8c800044 	addi	r18,r17,1
    7c48:	000999c0 	call	999c <__fixsfsi>
    7c4c:	902090ba 	slli	r16,r18,2
    7c50:	a8c05004 	addi	r3,r21,320
    7c54:	d9000c04 	addi	r4,sp,48
    7c58:	192b883a 	add	r21,r3,r4
    7c5c:	d9400c04 	addi	r5,sp,48
    7c60:	80c05004 	addi	r3,r16,320
    7c64:	b009883a 	mov	r4,r22
    7c68:	a8bfb015 	stw	r2,-320(r21)
    7c6c:	1961883a 	add	r16,r3,r5
    7c70:	000999c0 	call	999c <__fixsfsi>
    7c74:	d8c00317 	ldw	r3,12(sp)
    7c78:	80bfb015 	stw	r2,-320(r16)
    7c7c:	18c00204 	addi	r3,r3,8
    7c80:	d8c00315 	stw	r3,12(sp)
    7c84:	00002306 	br	7d14 <__kernel_rem_pio2f+0x694>
    7c88:	0005883a 	mov	r2,zero
    7c8c:	003eaf06 	br	774c <__kernel_rem_pio2f+0xcc>
    7c90:	00800044 	movi	r2,1
    7c94:	0007883a 	mov	r3,zero
    7c98:	003f9306 	br	7ae8 <__kernel_rem_pio2f+0x468>
    7c9c:	3009883a 	mov	r4,r6
    7ca0:	014fc034 	movhi	r5,16128
    7ca4:	d9800015 	stw	r6,0(sp)
    7ca8:	00090500 	call	9050 <__gesf2>
    7cac:	d9800017 	ldw	r6,0(sp)
    7cb0:	1000c90e 	bge	r2,zero,7fd8 <__kernel_rem_pio2f+0x958>
    7cb4:	0029883a 	mov	r20,zero
    7cb8:	003f2906 	br	7960 <__kernel_rem_pio2f+0x2e0>
    7cbc:	8d000044 	addi	r20,r17,1
    7cc0:	dd000015 	stw	r20,0(sp)
    7cc4:	003f4206 	br	79d0 <__kernel_rem_pio2f+0x350>
    7cc8:	d8c00317 	ldw	r3,12(sp)
    7ccc:	900490ba 	slli	r2,r18,2
    7cd0:	d9400c04 	addi	r5,sp,48
    7cd4:	193ffe04 	addi	r4,r3,-8
    7cd8:	10c05004 	addi	r3,r2,320
    7cdc:	1947883a 	add	r3,r3,r5
    7ce0:	18ffb017 	ldw	r3,-320(r3)
    7ce4:	dd000015 	stw	r20,0(sp)
    7ce8:	d9000315 	stw	r4,12(sp)
    7cec:	1800091e 	bne	r3,zero,7d14 <__kernel_rem_pio2f+0x694>
    7cf0:	10800c04 	addi	r2,r2,48
    7cf4:	16c5883a 	add	r2,r2,sp
    7cf8:	2007883a 	mov	r3,r4
    7cfc:	113fff17 	ldw	r4,-4(r2)
    7d00:	94bfffc4 	addi	r18,r18,-1
    7d04:	10bfff04 	addi	r2,r2,-4
    7d08:	18fffe04 	addi	r3,r3,-8
    7d0c:	203ffb26 	beq	r4,zero,7cfc <__kernel_rem_pio2f+0x67c>
    7d10:	d8c00315 	stw	r3,12(sp)
    7d14:	d9400317 	ldw	r5,12(sp)
    7d18:	010fe034 	movhi	r4,16256
    7d1c:	000884c0 	call	884c <scalbnf>
    7d20:	102b883a 	mov	r21,r2
    7d24:	9000f816 	blt	r18,zero,8108 <__kernel_rem_pio2f+0xa88>
    7d28:	900490ba 	slli	r2,r18,2
    7d2c:	d8c04804 	addi	r3,sp,288
    7d30:	18af883a 	add	r23,r3,r2
    7d34:	d8800115 	stw	r2,4(sp)
    7d38:	10800c04 	addi	r2,r2,48
    7d3c:	16f9883a 	add	fp,r2,sp
    7d40:	b821883a 	mov	r16,r23
    7d44:	e1000017 	ldw	r4,0(fp)
    7d48:	843fff04 	addi	r16,r16,-4
    7d4c:	0009a0c0 	call	9a0c <__floatsisf>
    7d50:	a80b883a 	mov	r5,r21
    7d54:	1009883a 	mov	r4,r2
    7d58:	00091080 	call	9108 <__mulsf3>
    7d5c:	a809883a 	mov	r4,r21
    7d60:	014ee034 	movhi	r5,15232
    7d64:	80800115 	stw	r2,4(r16)
    7d68:	00091080 	call	9108 <__mulsf3>
    7d6c:	e007883a 	mov	r3,fp
    7d70:	102b883a 	mov	r21,r2
    7d74:	d8800c04 	addi	r2,sp,48
    7d78:	e73fff04 	addi	fp,fp,-4
    7d7c:	10fff11e 	bne	r2,r3,7d44 <__kernel_rem_pio2f+0x6c4>
    7d80:	dd800517 	ldw	r22,20(sp)
    7d84:	dcc00215 	stw	r19,8(sp)
    7d88:	dd403404 	addi	r21,sp,208
    7d8c:	0021883a 	mov	r16,zero
    7d90:	b0001a16 	blt	r22,zero,7dfc <__kernel_rem_pio2f+0x77c>
    7d94:	04c000b4 	movhi	r19,2
    7d98:	9cea0804 	addi	r19,r19,-22496
    7d9c:	b839883a 	mov	fp,r23
    7da0:	010ff274 	movhi	r4,16329
    7da4:	0023883a 	mov	r17,zero
    7da8:	0029883a 	mov	r20,zero
    7dac:	00000406 	br	7dc0 <__kernel_rem_pio2f+0x740>
    7db0:	e7000104 	addi	fp,fp,4
    7db4:	85000a16 	blt	r16,r20,7de0 <__kernel_rem_pio2f+0x760>
    7db8:	99000017 	ldw	r4,0(r19)
    7dbc:	9cc00104 	addi	r19,r19,4
    7dc0:	e1400017 	ldw	r5,0(fp)
    7dc4:	a5000044 	addi	r20,r20,1
    7dc8:	00091080 	call	9108 <__mulsf3>
    7dcc:	8809883a 	mov	r4,r17
    7dd0:	100b883a 	mov	r5,r2
    7dd4:	0008b740 	call	8b74 <__addsf3>
    7dd8:	1023883a 	mov	r17,r2
    7ddc:	b53ff40e 	bge	r22,r20,7db0 <__kernel_rem_pio2f+0x730>
    7de0:	ac400015 	stw	r17,0(r21)
    7de4:	80800044 	addi	r2,r16,1
    7de8:	ad400104 	addi	r21,r21,4
    7dec:	bdffff04 	addi	r23,r23,-4
    7df0:	94000426 	beq	r18,r16,7e04 <__kernel_rem_pio2f+0x784>
    7df4:	1021883a 	mov	r16,r2
    7df8:	b03fe60e 	bge	r22,zero,7d94 <__kernel_rem_pio2f+0x714>
    7dfc:	0023883a 	mov	r17,zero
    7e00:	003ff706 	br	7de0 <__kernel_rem_pio2f+0x760>
    7e04:	d8806617 	ldw	r2,408(sp)
    7e08:	dcc00217 	ldw	r19,8(sp)
    7e0c:	108000c8 	cmpgei	r2,r2,3
    7e10:	1000201e 	bne	r2,zero,7e94 <__kernel_rem_pio2f+0x814>
    7e14:	d8806617 	ldw	r2,408(sp)
    7e18:	00807f16 	blt	zero,r2,8018 <__kernel_rem_pio2f+0x998>
    7e1c:	1000101e 	bne	r2,zero,7e60 <__kernel_rem_pio2f+0x7e0>
    7e20:	d8c00117 	ldw	r3,4(sp)
    7e24:	d8803404 	addi	r2,sp,208
    7e28:	0009883a 	mov	r4,zero
    7e2c:	10ed883a 	add	r22,r2,r3
    7e30:	b1400017 	ldw	r5,0(r22)
    7e34:	0008b740 	call	8b74 <__addsf3>
    7e38:	b007883a 	mov	r3,r22
    7e3c:	1009883a 	mov	r4,r2
    7e40:	d8803404 	addi	r2,sp,208
    7e44:	b5bfff04 	addi	r22,r22,-4
    7e48:	10fff91e 	bne	r2,r3,7e30 <__kernel_rem_pio2f+0x7b0>
    7e4c:	d8800017 	ldw	r2,0(sp)
    7e50:	10000126 	beq	r2,zero,7e58 <__kernel_rem_pio2f+0x7d8>
    7e54:	2120003c 	xorhi	r4,r4,32768
    7e58:	d8800917 	ldw	r2,36(sp)
    7e5c:	11000015 	stw	r4,0(r2)
    7e60:	988001cc 	andi	r2,r19,7
    7e64:	dfc06517 	ldw	ra,404(sp)
    7e68:	df006417 	ldw	fp,400(sp)
    7e6c:	ddc06317 	ldw	r23,396(sp)
    7e70:	dd806217 	ldw	r22,392(sp)
    7e74:	dd406117 	ldw	r21,388(sp)
    7e78:	dd006017 	ldw	r20,384(sp)
    7e7c:	dcc05f17 	ldw	r19,380(sp)
    7e80:	dc805e17 	ldw	r18,376(sp)
    7e84:	dc405d17 	ldw	r17,372(sp)
    7e88:	dc005c17 	ldw	r16,368(sp)
    7e8c:	dec06604 	addi	sp,sp,408
    7e90:	f800283a 	ret
    7e94:	d8806617 	ldw	r2,408(sp)
    7e98:	108000e0 	cmpeqi	r2,r2,3
    7e9c:	103ff026 	beq	r2,zero,7e60 <__kernel_rem_pio2f+0x7e0>
    7ea0:	9000a426 	beq	r18,zero,8134 <__kernel_rem_pio2f+0xab4>
    7ea4:	d8c00117 	ldw	r3,4(sp)
    7ea8:	d9000c04 	addi	r4,sp,48
    7eac:	18805004 	addi	r2,r3,320
    7eb0:	1105883a 	add	r2,r2,r4
    7eb4:	10bfd817 	ldw	r2,-160(r2)
    7eb8:	d9003404 	addi	r4,sp,208
    7ebc:	20e1883a 	add	r16,r4,r3
    7ec0:	857fff17 	ldw	r21,-4(r16)
    7ec4:	1009883a 	mov	r4,r2
    7ec8:	1023883a 	mov	r17,r2
    7ecc:	a80b883a 	mov	r5,r21
    7ed0:	0008b740 	call	8b74 <__addsf3>
    7ed4:	100b883a 	mov	r5,r2
    7ed8:	a809883a 	mov	r4,r21
    7edc:	1029883a 	mov	r20,r2
    7ee0:	00095080 	call	9508 <__subsf3>
    7ee4:	880b883a 	mov	r5,r17
    7ee8:	1009883a 	mov	r4,r2
    7eec:	0008b740 	call	8b74 <__addsf3>
    7ef0:	80800015 	stw	r2,0(r16)
    7ef4:	853fff15 	stw	r20,-4(r16)
    7ef8:	d8c03404 	addi	r3,sp,208
    7efc:	843fff04 	addi	r16,r16,-4
    7f00:	a005883a 	mov	r2,r20
    7f04:	1c3fee1e 	bne	r3,r16,7ec0 <__kernel_rem_pio2f+0x840>
    7f08:	94800088 	cmpgei	r18,r18,2
    7f0c:	90008926 	beq	r18,zero,8134 <__kernel_rem_pio2f+0xab4>
    7f10:	d8c00117 	ldw	r3,4(sp)
    7f14:	d9000c04 	addi	r4,sp,48
    7f18:	dc803504 	addi	r18,sp,212
    7f1c:	18805004 	addi	r2,r3,320
    7f20:	1105883a 	add	r2,r2,r4
    7f24:	10bfd817 	ldw	r2,-160(r2)
    7f28:	d9003404 	addi	r4,sp,208
    7f2c:	20ed883a 	add	r22,r4,r3
    7f30:	b021883a 	mov	r16,r22
    7f34:	857fff17 	ldw	r21,-4(r16)
    7f38:	1009883a 	mov	r4,r2
    7f3c:	1023883a 	mov	r17,r2
    7f40:	a80b883a 	mov	r5,r21
    7f44:	0008b740 	call	8b74 <__addsf3>
    7f48:	100b883a 	mov	r5,r2
    7f4c:	a809883a 	mov	r4,r21
    7f50:	1029883a 	mov	r20,r2
    7f54:	00095080 	call	9508 <__subsf3>
    7f58:	880b883a 	mov	r5,r17
    7f5c:	1009883a 	mov	r4,r2
    7f60:	0008b740 	call	8b74 <__addsf3>
    7f64:	80800015 	stw	r2,0(r16)
    7f68:	853fff15 	stw	r20,-4(r16)
    7f6c:	843fff04 	addi	r16,r16,-4
    7f70:	a005883a 	mov	r2,r20
    7f74:	943fef1e 	bne	r18,r16,7f34 <__kernel_rem_pio2f+0x8b4>
    7f78:	0009883a 	mov	r4,zero
    7f7c:	b1400017 	ldw	r5,0(r22)
    7f80:	b5bfff04 	addi	r22,r22,-4
    7f84:	0008b740 	call	8b74 <__addsf3>
    7f88:	1009883a 	mov	r4,r2
    7f8c:	95bffb1e 	bne	r18,r22,7f7c <__kernel_rem_pio2f+0x8fc>
    7f90:	d9400017 	ldw	r5,0(sp)
    7f94:	d8c03417 	ldw	r3,208(sp)
    7f98:	d8803517 	ldw	r2,212(sp)
    7f9c:	28004a1e 	bne	r5,zero,80c8 <__kernel_rem_pio2f+0xa48>
    7fa0:	d9400917 	ldw	r5,36(sp)
    7fa4:	28c00015 	stw	r3,0(r5)
    7fa8:	28800115 	stw	r2,4(r5)
    7fac:	29000215 	stw	r4,8(r5)
    7fb0:	003fab06 	br	7e60 <__kernel_rem_pio2f+0x7e0>
    7fb4:	88bfffc4 	addi	r2,r17,-1
    7fb8:	100490ba 	slli	r2,r2,2
    7fbc:	d8c00c04 	addi	r3,sp,48
    7fc0:	10805004 	addi	r2,r2,320
    7fc4:	10c5883a 	add	r2,r2,r3
    7fc8:	10ffb017 	ldw	r3,-320(r2)
    7fcc:	18c01fcc 	andi	r3,r3,127
    7fd0:	10ffb015 	stw	r3,-320(r2)
    7fd4:	003eeb06 	br	7b84 <__kernel_rem_pio2f+0x504>
    7fd8:	9cc00044 	addi	r19,r19,1
    7fdc:	05000084 	movi	r20,2
    7fe0:	047eb116 	blt	zero,r17,7aa8 <__kernel_rem_pio2f+0x428>
    7fe4:	300b883a 	mov	r5,r6
    7fe8:	010fe034 	movhi	r4,16256
    7fec:	00095080 	call	9508 <__subsf3>
    7ff0:	1025883a 	mov	r18,r2
    7ff4:	003e5a06 	br	7960 <__kernel_rem_pio2f+0x2e0>
    7ff8:	00800204 	movi	r2,8
    7ffc:	d8800a15 	stw	r2,40(sp)
    8000:	d8000615 	stw	zero,24(sp)
    8004:	003dbe06 	br	7700 <__kernel_rem_pio2f+0x80>
    8008:	30800104 	addi	r2,r6,4
    800c:	003db706 	br	76ec <__kernel_rem_pio2f+0x6c>
    8010:	000f883a 	mov	r7,zero
    8014:	003ecd06 	br	7b4c <__kernel_rem_pio2f+0x4cc>
    8018:	d8c00117 	ldw	r3,4(sp)
    801c:	d8803404 	addi	r2,sp,208
    8020:	10ed883a 	add	r22,r2,r3
    8024:	0005883a 	mov	r2,zero
    8028:	1009883a 	mov	r4,r2
    802c:	b1400017 	ldw	r5,0(r22)
    8030:	0008b740 	call	8b74 <__addsf3>
    8034:	b007883a 	mov	r3,r22
    8038:	1009883a 	mov	r4,r2
    803c:	d8803404 	addi	r2,sp,208
    8040:	b5bfff04 	addi	r22,r22,-4
    8044:	10fff91e 	bne	r2,r3,802c <__kernel_rem_pio2f+0x9ac>
    8048:	2005883a 	mov	r2,r4
    804c:	d8c00017 	ldw	r3,0(sp)
    8050:	d9003417 	ldw	r4,208(sp)
    8054:	1800241e 	bne	r3,zero,80e8 <__kernel_rem_pio2f+0xa68>
    8058:	d8c00917 	ldw	r3,36(sp)
    805c:	100b883a 	mov	r5,r2
    8060:	18800015 	stw	r2,0(r3)
    8064:	00095080 	call	9508 <__subsf3>
    8068:	1009883a 	mov	r4,r2
    806c:	04800b0e 	bge	zero,r18,809c <__kernel_rem_pio2f+0xa1c>
    8070:	dc403504 	addi	r17,sp,212
    8074:	04000044 	movi	r16,1
    8078:	89400017 	ldw	r5,0(r17)
    807c:	84000044 	addi	r16,r16,1
    8080:	8c400104 	addi	r17,r17,4
    8084:	0008b740 	call	8b74 <__addsf3>
    8088:	1009883a 	mov	r4,r2
    808c:	943ffa0e 	bge	r18,r16,8078 <__kernel_rem_pio2f+0x9f8>
    8090:	d8800017 	ldw	r2,0(sp)
    8094:	10000126 	beq	r2,zero,809c <__kernel_rem_pio2f+0xa1c>
    8098:	2120003c 	xorhi	r4,r4,32768
    809c:	d8800917 	ldw	r2,36(sp)
    80a0:	11000115 	stw	r4,4(r2)
    80a4:	003f6e06 	br	7e60 <__kernel_rem_pio2f+0x7e0>
    80a8:	8009883a 	mov	r4,r16
    80ac:	000999c0 	call	999c <__fixsfsi>
    80b0:	a8c05004 	addi	r3,r21,320
    80b4:	d9000c04 	addi	r4,sp,48
    80b8:	192b883a 	add	r21,r3,r4
    80bc:	a8bfb015 	stw	r2,-320(r21)
    80c0:	8825883a 	mov	r18,r17
    80c4:	003f1306 	br	7d14 <__kernel_rem_pio2f+0x694>
    80c8:	d9400917 	ldw	r5,36(sp)
    80cc:	18e0003c 	xorhi	r3,r3,32768
    80d0:	10a0003c 	xorhi	r2,r2,32768
    80d4:	2120003c 	xorhi	r4,r4,32768
    80d8:	28c00015 	stw	r3,0(r5)
    80dc:	28800115 	stw	r2,4(r5)
    80e0:	29000215 	stw	r4,8(r5)
    80e4:	003f5e06 	br	7e60 <__kernel_rem_pio2f+0x7e0>
    80e8:	d9400917 	ldw	r5,36(sp)
    80ec:	10e0003c 	xorhi	r3,r2,32768
    80f0:	28c00015 	stw	r3,0(r5)
    80f4:	100b883a 	mov	r5,r2
    80f8:	00095080 	call	9508 <__subsf3>
    80fc:	1009883a 	mov	r4,r2
    8100:	04bfdb16 	blt	zero,r18,8070 <__kernel_rem_pio2f+0x9f0>
    8104:	003fe406 	br	8098 <__kernel_rem_pio2f+0xa18>
    8108:	d8806617 	ldw	r2,408(sp)
    810c:	108000c8 	cmpgei	r2,r2,3
    8110:	1000051e 	bne	r2,zero,8128 <__kernel_rem_pio2f+0xaa8>
    8114:	d8806617 	ldw	r2,408(sp)
    8118:	00800816 	blt	zero,r2,813c <__kernel_rem_pio2f+0xabc>
    811c:	103f501e 	bne	r2,zero,7e60 <__kernel_rem_pio2f+0x7e0>
    8120:	0009883a 	mov	r4,zero
    8124:	003f4906 	br	7e4c <__kernel_rem_pio2f+0x7cc>
    8128:	d8806617 	ldw	r2,408(sp)
    812c:	108000e0 	cmpeqi	r2,r2,3
    8130:	103f4b26 	beq	r2,zero,7e60 <__kernel_rem_pio2f+0x7e0>
    8134:	0009883a 	mov	r4,zero
    8138:	003f9506 	br	7f90 <__kernel_rem_pio2f+0x910>
    813c:	0005883a 	mov	r2,zero
    8140:	003fc206 	br	804c <__kernel_rem_pio2f+0x9cc>

00008144 <__kernel_sinf>:
    8144:	00a00034 	movhi	r2,32768
    8148:	defff904 	addi	sp,sp,-28
    814c:	10bfffc4 	addi	r2,r2,-1
    8150:	dd000415 	stw	r20,16(sp)
    8154:	dcc00315 	stw	r19,12(sp)
    8158:	dc000015 	stw	r16,0(sp)
    815c:	dfc00615 	stw	ra,24(sp)
    8160:	dd400515 	stw	r21,20(sp)
    8164:	dc800215 	stw	r18,8(sp)
    8168:	dc400115 	stw	r17,4(sp)
    816c:	1104703a 	and	r2,r2,r4
    8170:	00cc8034 	movhi	r3,12800
    8174:	2021883a 	mov	r16,r4
    8178:	2829883a 	mov	r20,r5
    817c:	3027883a 	mov	r19,r6
    8180:	10c0020e 	bge	r2,r3,818c <__kernel_sinf+0x48>
    8184:	000999c0 	call	999c <__fixsfsi>
    8188:	10005926 	beq	r2,zero,82f0 <__kernel_sinf+0x1ac>
    818c:	800b883a 	mov	r5,r16
    8190:	8009883a 	mov	r4,r16
    8194:	00091080 	call	9108 <__mulsf3>
    8198:	100b883a 	mov	r5,r2
    819c:	8009883a 	mov	r4,r16
    81a0:	1023883a 	mov	r17,r2
    81a4:	00091080 	call	9108 <__mulsf3>
    81a8:	014bcbf4 	movhi	r5,12079
    81ac:	297274c4 	addi	r5,r5,-13869
    81b0:	8809883a 	mov	r4,r17
    81b4:	1025883a 	mov	r18,r2
    81b8:	00091080 	call	9108 <__mulsf3>
    81bc:	014cb5f4 	movhi	r5,13015
    81c0:	294bcd04 	addi	r5,r5,12084
    81c4:	1009883a 	mov	r4,r2
    81c8:	00095080 	call	9508 <__subsf3>
    81cc:	880b883a 	mov	r5,r17
    81d0:	1009883a 	mov	r4,r2
    81d4:	00091080 	call	9108 <__mulsf3>
    81d8:	014d8e74 	movhi	r5,13881
    81dc:	297bc6c4 	addi	r5,r5,-4325
    81e0:	1009883a 	mov	r4,r2
    81e4:	0008b740 	call	8b74 <__addsf3>
    81e8:	880b883a 	mov	r5,r17
    81ec:	1009883a 	mov	r4,r2
    81f0:	00091080 	call	9108 <__mulsf3>
    81f4:	014e5434 	movhi	r5,14672
    81f8:	29434044 	addi	r5,r5,3329
    81fc:	1009883a 	mov	r4,r2
    8200:	00095080 	call	9508 <__subsf3>
    8204:	880b883a 	mov	r5,r17
    8208:	1009883a 	mov	r4,r2
    820c:	00091080 	call	9108 <__mulsf3>
    8210:	014f0274 	movhi	r5,15369
    8214:	29622244 	addi	r5,r5,-30583
    8218:	1009883a 	mov	r4,r2
    821c:	0008b740 	call	8b74 <__addsf3>
    8220:	102b883a 	mov	r21,r2
    8224:	98002426 	beq	r19,zero,82b8 <__kernel_sinf+0x174>
    8228:	014fc034 	movhi	r5,16128
    822c:	a009883a 	mov	r4,r20
    8230:	00091080 	call	9108 <__mulsf3>
    8234:	a80b883a 	mov	r5,r21
    8238:	9009883a 	mov	r4,r18
    823c:	1027883a 	mov	r19,r2
    8240:	00091080 	call	9108 <__mulsf3>
    8244:	100b883a 	mov	r5,r2
    8248:	9809883a 	mov	r4,r19
    824c:	00095080 	call	9508 <__subsf3>
    8250:	880b883a 	mov	r5,r17
    8254:	1009883a 	mov	r4,r2
    8258:	00091080 	call	9108 <__mulsf3>
    825c:	a00b883a 	mov	r5,r20
    8260:	1009883a 	mov	r4,r2
    8264:	00095080 	call	9508 <__subsf3>
    8268:	014f8af4 	movhi	r5,15915
    826c:	296aaac4 	addi	r5,r5,-21845
    8270:	9009883a 	mov	r4,r18
    8274:	1023883a 	mov	r17,r2
    8278:	00091080 	call	9108 <__mulsf3>
    827c:	100b883a 	mov	r5,r2
    8280:	8809883a 	mov	r4,r17
    8284:	0008b740 	call	8b74 <__addsf3>
    8288:	100b883a 	mov	r5,r2
    828c:	8009883a 	mov	r4,r16
    8290:	00095080 	call	9508 <__subsf3>
    8294:	dfc00617 	ldw	ra,24(sp)
    8298:	dd400517 	ldw	r21,20(sp)
    829c:	dd000417 	ldw	r20,16(sp)
    82a0:	dcc00317 	ldw	r19,12(sp)
    82a4:	dc800217 	ldw	r18,8(sp)
    82a8:	dc400117 	ldw	r17,4(sp)
    82ac:	dc000017 	ldw	r16,0(sp)
    82b0:	dec00704 	addi	sp,sp,28
    82b4:	f800283a 	ret
    82b8:	8809883a 	mov	r4,r17
    82bc:	100b883a 	mov	r5,r2
    82c0:	00091080 	call	9108 <__mulsf3>
    82c4:	014f8af4 	movhi	r5,15915
    82c8:	296aaac4 	addi	r5,r5,-21845
    82cc:	1009883a 	mov	r4,r2
    82d0:	00095080 	call	9508 <__subsf3>
    82d4:	900b883a 	mov	r5,r18
    82d8:	1009883a 	mov	r4,r2
    82dc:	00091080 	call	9108 <__mulsf3>
    82e0:	800b883a 	mov	r5,r16
    82e4:	1009883a 	mov	r4,r2
    82e8:	0008b740 	call	8b74 <__addsf3>
    82ec:	003fe906 	br	8294 <__kernel_sinf+0x150>
    82f0:	8005883a 	mov	r2,r16
    82f4:	003fe706 	br	8294 <__kernel_sinf+0x150>

000082f8 <with_errno>:
    82f8:	defffc04 	addi	sp,sp,-16
    82fc:	dc800215 	stw	r18,8(sp)
    8300:	dc400115 	stw	r17,4(sp)
    8304:	dc000015 	stw	r16,0(sp)
    8308:	dfc00315 	stw	ra,12(sp)
    830c:	2023883a 	mov	r17,r4
    8310:	2821883a 	mov	r16,r5
    8314:	3025883a 	mov	r18,r6
    8318:	000c6140 	call	c614 <__errno>
    831c:	14800015 	stw	r18,0(r2)
    8320:	8007883a 	mov	r3,r16
    8324:	8805883a 	mov	r2,r17
    8328:	dfc00317 	ldw	ra,12(sp)
    832c:	dc800217 	ldw	r18,8(sp)
    8330:	dc400117 	ldw	r17,4(sp)
    8334:	dc000017 	ldw	r16,0(sp)
    8338:	dec00404 	addi	sp,sp,16
    833c:	f800283a 	ret

00008340 <xflow>:
    8340:	defffd04 	addi	sp,sp,-12
    8344:	2005883a 	mov	r2,r4
    8348:	dfc00215 	stw	ra,8(sp)
    834c:	2809883a 	mov	r4,r5
    8350:	300b883a 	mov	r5,r6
    8354:	10000c26 	beq	r2,zero,8388 <xflow+0x48>
    8358:	30a0003c 	xorhi	r2,r6,32768
    835c:	d9000015 	stw	r4,0(sp)
    8360:	d8800115 	stw	r2,4(sp)
    8364:	d9800017 	ldw	r6,0(sp)
    8368:	d9c00117 	ldw	r7,4(sp)
    836c:	000b0800 	call	b080 <__muldf3>
    8370:	01800884 	movi	r6,34
    8374:	1009883a 	mov	r4,r2
    8378:	180b883a 	mov	r5,r3
    837c:	dfc00217 	ldw	ra,8(sp)
    8380:	dec00304 	addi	sp,sp,12
    8384:	00082f81 	jmpi	82f8 <with_errno>
    8388:	3005883a 	mov	r2,r6
    838c:	003ff306 	br	835c <xflow+0x1c>

00008390 <__math_uflow>:
    8390:	000b883a 	mov	r5,zero
    8394:	01840034 	movhi	r6,4096
    8398:	00083401 	jmpi	8340 <xflow>

0000839c <__math_may_uflow>:
    839c:	000b883a 	mov	r5,zero
    83a0:	01879634 	movhi	r6,7768
    83a4:	00083401 	jmpi	8340 <xflow>

000083a8 <__math_oflow>:
    83a8:	000b883a 	mov	r5,zero
    83ac:	019c0034 	movhi	r6,28672
    83b0:	00083401 	jmpi	8340 <xflow>

000083b4 <__math_divzero>:
    83b4:	defffd04 	addi	sp,sp,-12
    83b8:	dfc00215 	stw	ra,8(sp)
    83bc:	20000e1e 	bne	r4,zero,83f8 <__math_divzero+0x44>
    83c0:	008ffc34 	movhi	r2,16368
    83c4:	d8000015 	stw	zero,0(sp)
    83c8:	d8800115 	stw	r2,4(sp)
    83cc:	d9000017 	ldw	r4,0(sp)
    83d0:	d9400117 	ldw	r5,4(sp)
    83d4:	000d883a 	mov	r6,zero
    83d8:	000f883a 	mov	r7,zero
    83dc:	000a51c0 	call	a51c <__divdf3>
    83e0:	01800884 	movi	r6,34
    83e4:	1009883a 	mov	r4,r2
    83e8:	180b883a 	mov	r5,r3
    83ec:	dfc00217 	ldw	ra,8(sp)
    83f0:	dec00304 	addi	sp,sp,12
    83f4:	00082f81 	jmpi	82f8 <with_errno>
    83f8:	00affc34 	movhi	r2,49136
    83fc:	003ff106 	br	83c4 <__math_divzero+0x10>

00008400 <__math_invalid>:
    8400:	defffd04 	addi	sp,sp,-12
    8404:	200d883a 	mov	r6,r4
    8408:	280f883a 	mov	r7,r5
    840c:	dfc00215 	stw	ra,8(sp)
    8410:	dc400115 	stw	r17,4(sp)
    8414:	dc000015 	stw	r16,0(sp)
    8418:	2023883a 	mov	r17,r4
    841c:	2821883a 	mov	r16,r5
    8420:	000b82c0 	call	b82c <__subdf3>
    8424:	100d883a 	mov	r6,r2
    8428:	180f883a 	mov	r7,r3
    842c:	1009883a 	mov	r4,r2
    8430:	180b883a 	mov	r5,r3
    8434:	000a51c0 	call	a51c <__divdf3>
    8438:	880d883a 	mov	r6,r17
    843c:	800f883a 	mov	r7,r16
    8440:	8809883a 	mov	r4,r17
    8444:	800b883a 	mov	r5,r16
    8448:	1023883a 	mov	r17,r2
    844c:	1821883a 	mov	r16,r3
    8450:	000c1380 	call	c138 <__unorddf2>
    8454:	1000081e 	bne	r2,zero,8478 <__math_invalid+0x78>
    8458:	01800844 	movi	r6,33
    845c:	8809883a 	mov	r4,r17
    8460:	800b883a 	mov	r5,r16
    8464:	dfc00217 	ldw	ra,8(sp)
    8468:	dc400117 	ldw	r17,4(sp)
    846c:	dc000017 	ldw	r16,0(sp)
    8470:	dec00304 	addi	sp,sp,12
    8474:	00082f81 	jmpi	82f8 <with_errno>
    8478:	8805883a 	mov	r2,r17
    847c:	8007883a 	mov	r3,r16
    8480:	dfc00217 	ldw	ra,8(sp)
    8484:	dc400117 	ldw	r17,4(sp)
    8488:	dc000017 	ldw	r16,0(sp)
    848c:	dec00304 	addi	sp,sp,12
    8490:	f800283a 	ret

00008494 <__math_check_uflow>:
    8494:	defffd04 	addi	sp,sp,-12
    8498:	000d883a 	mov	r6,zero
    849c:	000f883a 	mov	r7,zero
    84a0:	dc400115 	stw	r17,4(sp)
    84a4:	dc000015 	stw	r16,0(sp)
    84a8:	dfc00215 	stw	ra,8(sp)
    84ac:	2023883a 	mov	r17,r4
    84b0:	2821883a 	mov	r16,r5
    84b4:	000ae300 	call	ae30 <__eqdf2>
    84b8:	10000726 	beq	r2,zero,84d8 <__math_check_uflow+0x44>
    84bc:	8805883a 	mov	r2,r17
    84c0:	8007883a 	mov	r3,r16
    84c4:	dfc00217 	ldw	ra,8(sp)
    84c8:	dc400117 	ldw	r17,4(sp)
    84cc:	dc000017 	ldw	r16,0(sp)
    84d0:	dec00304 	addi	sp,sp,12
    84d4:	f800283a 	ret
    84d8:	01800884 	movi	r6,34
    84dc:	8809883a 	mov	r4,r17
    84e0:	800b883a 	mov	r5,r16
    84e4:	dfc00217 	ldw	ra,8(sp)
    84e8:	dc400117 	ldw	r17,4(sp)
    84ec:	dc000017 	ldw	r16,0(sp)
    84f0:	dec00304 	addi	sp,sp,12
    84f4:	00082f81 	jmpi	82f8 <with_errno>

000084f8 <__math_check_oflow>:
    84f8:	00a00034 	movhi	r2,32768
    84fc:	defffc04 	addi	sp,sp,-16
    8500:	10bfffc4 	addi	r2,r2,-1
    8504:	dc000015 	stw	r16,0(sp)
    8508:	01dffc34 	movhi	r7,32752
    850c:	28a0703a 	and	r16,r5,r2
    8510:	dc400115 	stw	r17,4(sp)
    8514:	01bfffc4 	movi	r6,-1
    8518:	2823883a 	mov	r17,r5
    851c:	39ffffc4 	addi	r7,r7,-1
    8520:	800b883a 	mov	r5,r16
    8524:	dc800215 	stw	r18,8(sp)
    8528:	dfc00315 	stw	ra,12(sp)
    852c:	2025883a 	mov	r18,r4
    8530:	000c1380 	call	c138 <__unorddf2>
    8534:	1000071e 	bne	r2,zero,8554 <__math_check_oflow+0x5c>
    8538:	01dffc34 	movhi	r7,32752
    853c:	01bfffc4 	movi	r6,-1
    8540:	39ffffc4 	addi	r7,r7,-1
    8544:	9009883a 	mov	r4,r18
    8548:	800b883a 	mov	r5,r16
    854c:	000af980 	call	af98 <__ledf2>
    8550:	00800816 	blt	zero,r2,8574 <__math_check_oflow+0x7c>
    8554:	9005883a 	mov	r2,r18
    8558:	8807883a 	mov	r3,r17
    855c:	dfc00317 	ldw	ra,12(sp)
    8560:	dc800217 	ldw	r18,8(sp)
    8564:	dc400117 	ldw	r17,4(sp)
    8568:	dc000017 	ldw	r16,0(sp)
    856c:	dec00404 	addi	sp,sp,16
    8570:	f800283a 	ret
    8574:	01800884 	movi	r6,34
    8578:	9009883a 	mov	r4,r18
    857c:	880b883a 	mov	r5,r17
    8580:	dfc00317 	ldw	ra,12(sp)
    8584:	dc800217 	ldw	r18,8(sp)
    8588:	dc400117 	ldw	r17,4(sp)
    858c:	dc000017 	ldw	r16,0(sp)
    8590:	dec00404 	addi	sp,sp,16
    8594:	00082f81 	jmpi	82f8 <with_errno>

00008598 <scalbn>:
    8598:	2807d53a 	srai	r3,r5,20
    859c:	defffe04 	addi	sp,sp,-8
    85a0:	dc000015 	stw	r16,0(sp)
    85a4:	dfc00115 	stw	ra,4(sp)
    85a8:	18c1ffcc 	andi	r3,r3,2047
    85ac:	280f883a 	mov	r7,r5
    85b0:	2005883a 	mov	r2,r4
    85b4:	3021883a 	mov	r16,r6
    85b8:	1800241e 	bne	r3,zero,864c <scalbn+0xb4>
    85bc:	00e00034 	movhi	r3,32768
    85c0:	18ffffc4 	addi	r3,r3,-1
    85c4:	28c6703a 	and	r3,r5,r3
    85c8:	1906b03a 	or	r3,r3,r4
    85cc:	18003626 	beq	r3,zero,86a8 <scalbn+0x110>
    85d0:	000d883a 	mov	r6,zero
    85d4:	01d0d434 	movhi	r7,17232
    85d8:	000b0800 	call	b080 <__muldf3>
    85dc:	01bffff4 	movhi	r6,65535
    85e0:	318f2c04 	addi	r6,r6,15536
    85e4:	1009883a 	mov	r4,r2
    85e8:	180f883a 	mov	r7,r3
    85ec:	81804d16 	blt	r16,r6,8724 <scalbn+0x18c>
    85f0:	1807d53a 	srai	r3,r3,20
    85f4:	3811883a 	mov	r8,r7
    85f8:	18c1ffcc 	andi	r3,r3,2047
    85fc:	18fff284 	addi	r3,r3,-54
    8600:	80c7883a 	add	r3,r16,r3
    8604:	1901ffd0 	cmplti	r4,r3,2047
    8608:	20001926 	beq	r4,zero,8670 <scalbn+0xd8>
    860c:	00c03c16 	blt	zero,r3,8700 <scalbn+0x168>
    8610:	193ff2c8 	cmpgei	r4,r3,-53
    8614:	20002c1e 	bne	r4,zero,86c8 <scalbn+0x130>
    8618:	00b0d414 	movui	r2,50000
    861c:	14001416 	blt	r2,r16,8670 <scalbn+0xd8>
    8620:	0130be74 	movhi	r4,49913
    8624:	01406974 	movhi	r5,421
    8628:	213cd644 	addi	r4,r4,-3239
    862c:	295b87c4 	addi	r5,r5,28191
    8630:	38004616 	blt	r7,zero,874c <scalbn+0x1b4>
    8634:	01b0be74 	movhi	r6,49913
    8638:	01c06974 	movhi	r7,421
    863c:	31bcd644 	addi	r6,r6,-3239
    8640:	39db87c4 	addi	r7,r7,28191
    8644:	000b0800 	call	b080 <__muldf3>
    8648:	00001306 	br	8698 <scalbn+0x100>
    864c:	1981ffd8 	cmpnei	r6,r3,2047
    8650:	2811883a 	mov	r8,r5
    8654:	303fea1e 	bne	r6,zero,8600 <scalbn+0x68>
    8658:	200d883a 	mov	r6,r4
    865c:	0009c2c0 	call	9c2c <__adddf3>
    8660:	dfc00117 	ldw	ra,4(sp)
    8664:	dc000017 	ldw	r16,0(sp)
    8668:	dec00204 	addi	sp,sp,8
    866c:	f800283a 	ret
    8670:	01220034 	movhi	r4,34816
    8674:	015f8e34 	movhi	r5,32312
    8678:	211d6704 	addi	r4,r4,30108
    867c:	29790f04 	addi	r5,r5,-7108
    8680:	38000e16 	blt	r7,zero,86bc <scalbn+0x124>
    8684:	01a20034 	movhi	r6,34816
    8688:	01df8e34 	movhi	r7,32312
    868c:	319d6704 	addi	r6,r6,30108
    8690:	39f90f04 	addi	r7,r7,-7108
    8694:	000b0800 	call	b080 <__muldf3>
    8698:	dfc00117 	ldw	ra,4(sp)
    869c:	dc000017 	ldw	r16,0(sp)
    86a0:	dec00204 	addi	sp,sp,8
    86a4:	f800283a 	ret
    86a8:	2807883a 	mov	r3,r5
    86ac:	dfc00117 	ldw	ra,4(sp)
    86b0:	dc000017 	ldw	r16,0(sp)
    86b4:	dec00204 	addi	sp,sp,8
    86b8:	f800283a 	ret
    86bc:	017f8e34 	movhi	r5,65080
    86c0:	29790f04 	addi	r5,r5,-7108
    86c4:	003fef06 	br	8684 <scalbn+0xec>
    86c8:	18c00d84 	addi	r3,r3,54
    86cc:	1806953a 	slli	r3,r3,20
    86d0:	01600434 	movhi	r5,32784
    86d4:	297fffc4 	addi	r5,r5,-1
    86d8:	414a703a 	and	r5,r8,r5
    86dc:	000d883a 	mov	r6,zero
    86e0:	01cf2434 	movhi	r7,15504
    86e4:	1009883a 	mov	r4,r2
    86e8:	194ab03a 	or	r5,r3,r5
    86ec:	000b0800 	call	b080 <__muldf3>
    86f0:	dfc00117 	ldw	ra,4(sp)
    86f4:	dc000017 	ldw	r16,0(sp)
    86f8:	dec00204 	addi	sp,sp,8
    86fc:	f800283a 	ret
    8700:	1806953a 	slli	r3,r3,20
    8704:	01e00434 	movhi	r7,32784
    8708:	39ffffc4 	addi	r7,r7,-1
    870c:	41ce703a 	and	r7,r8,r7
    8710:	38c6b03a 	or	r3,r7,r3
    8714:	dfc00117 	ldw	ra,4(sp)
    8718:	dc000017 	ldw	r16,0(sp)
    871c:	dec00204 	addi	sp,sp,8
    8720:	f800283a 	ret
    8724:	01b0be74 	movhi	r6,49913
    8728:	01c06974 	movhi	r7,421
    872c:	31bcd644 	addi	r6,r6,-3239
    8730:	39db87c4 	addi	r7,r7,28191
    8734:	180b883a 	mov	r5,r3
    8738:	000b0800 	call	b080 <__muldf3>
    873c:	dfc00117 	ldw	ra,4(sp)
    8740:	dc000017 	ldw	r16,0(sp)
    8744:	dec00204 	addi	sp,sp,8
    8748:	f800283a 	ret
    874c:	01606974 	movhi	r5,33189
    8750:	295b87c4 	addi	r5,r5,28191
    8754:	003fb706 	br	8634 <scalbn+0x9c>

00008758 <floorf>:
    8758:	00a00034 	movhi	r2,32768
    875c:	defffb04 	addi	sp,sp,-20
    8760:	10bfffc4 	addi	r2,r2,-1
    8764:	dc400115 	stw	r17,4(sp)
    8768:	1122703a 	and	r17,r2,r4
    876c:	dc800215 	stw	r18,8(sp)
    8770:	8824d5fa 	srli	r18,r17,23
    8774:	dc000015 	stw	r16,0(sp)
    8778:	dfc00415 	stw	ra,16(sp)
    877c:	94bfe044 	addi	r18,r18,-127
    8780:	dcc00315 	stw	r19,12(sp)
    8784:	908005c8 	cmpgei	r2,r18,23
    8788:	2021883a 	mov	r16,r4
    878c:	1000271e 	bne	r2,zero,882c <floorf+0xd4>
    8790:	2027883a 	mov	r19,r4
    8794:	90001316 	blt	r18,zero,87e4 <floorf+0x8c>
    8798:	00802034 	movhi	r2,128
    879c:	10bfffc4 	addi	r2,r2,-1
    87a0:	14a3d83a 	sra	r17,r2,r18
    87a4:	8904703a 	and	r2,r17,r4
    87a8:	10001826 	beq	r2,zero,880c <floorf+0xb4>
    87ac:	015c52b4 	movhi	r5,29002
    87b0:	297cb284 	addi	r5,r5,-3382
    87b4:	0008b740 	call	8b74 <__addsf3>
    87b8:	000b883a 	mov	r5,zero
    87bc:	1009883a 	mov	r4,r2
    87c0:	00090500 	call	9050 <__gesf2>
    87c4:	0080110e 	bge	zero,r2,880c <floorf+0xb4>
    87c8:	8000030e 	bge	r16,zero,87d8 <floorf+0x80>
    87cc:	00802034 	movhi	r2,128
    87d0:	1485d83a 	sra	r2,r2,r18
    87d4:	1427883a 	add	r19,r2,r16
    87d8:	0460303a 	nor	r16,zero,r17
    87dc:	84c4703a 	and	r2,r16,r19
    87e0:	00000b06 	br	8810 <floorf+0xb8>
    87e4:	015c52b4 	movhi	r5,29002
    87e8:	297cb284 	addi	r5,r5,-3382
    87ec:	0008b740 	call	8b74 <__addsf3>
    87f0:	000b883a 	mov	r5,zero
    87f4:	1009883a 	mov	r4,r2
    87f8:	00090500 	call	9050 <__gesf2>
    87fc:	0080030e 	bge	zero,r2,880c <floorf+0xb4>
    8800:	80000f16 	blt	r16,zero,8840 <floorf+0xe8>
    8804:	0005883a 	mov	r2,zero
    8808:	00000106 	br	8810 <floorf+0xb8>
    880c:	8005883a 	mov	r2,r16
    8810:	dfc00417 	ldw	ra,16(sp)
    8814:	dcc00317 	ldw	r19,12(sp)
    8818:	dc800217 	ldw	r18,8(sp)
    881c:	dc400117 	ldw	r17,4(sp)
    8820:	dc000017 	ldw	r16,0(sp)
    8824:	dec00504 	addi	sp,sp,20
    8828:	f800283a 	ret
    882c:	009fe034 	movhi	r2,32640
    8830:	88bff636 	bltu	r17,r2,880c <floorf+0xb4>
    8834:	200b883a 	mov	r5,r4
    8838:	0008b740 	call	8b74 <__addsf3>
    883c:	003ff406 	br	8810 <floorf+0xb8>
    8840:	883ff226 	beq	r17,zero,880c <floorf+0xb4>
    8844:	00afe034 	movhi	r2,49024
    8848:	003ff106 	br	8810 <floorf+0xb8>

0000884c <scalbnf>:
    884c:	00e00034 	movhi	r3,32768
    8850:	18ffffc4 	addi	r3,r3,-1
    8854:	1906703a 	and	r3,r3,r4
    8858:	2005883a 	mov	r2,r4
    885c:	18002626 	beq	r3,zero,88f8 <scalbnf+0xac>
    8860:	defffe04 	addi	sp,sp,-8
    8864:	dc000015 	stw	r16,0(sp)
    8868:	dfc00115 	stw	ra,4(sp)
    886c:	019fe034 	movhi	r6,32640
    8870:	2821883a 	mov	r16,r5
    8874:	200b883a 	mov	r5,r4
    8878:	19801a2e 	bgeu	r3,r6,88e4 <scalbnf+0x98>
    887c:	215fe02c 	andhi	r5,r4,32640
    8880:	28001e1e 	bne	r5,zero,88fc <scalbnf+0xb0>
    8884:	01530034 	movhi	r5,19456
    8888:	00091080 	call	9108 <__mulsf3>
    888c:	00fffff4 	movhi	r3,65535
    8890:	18cf2c04 	addi	r3,r3,15536
    8894:	1009883a 	mov	r4,r2
    8898:	80c02616 	blt	r16,r3,8934 <scalbnf+0xe8>
    889c:	1007d5fa 	srai	r3,r2,23
    88a0:	18c03fcc 	andi	r3,r3,255
    88a4:	18fff9c4 	addi	r3,r3,-25
    88a8:	1c07883a 	add	r3,r3,r16
    88ac:	19403fd0 	cmplti	r5,r3,255
    88b0:	2800161e 	bne	r5,zero,890c <scalbnf+0xc0>
    88b4:	011c52b4 	movhi	r4,29002
    88b8:	213cb284 	addi	r4,r4,-3382
    88bc:	1000020e 	bge	r2,zero,88c8 <scalbnf+0x7c>
    88c0:	013c52b4 	movhi	r4,61770
    88c4:	213cb284 	addi	r4,r4,-3382
    88c8:	015c52b4 	movhi	r5,29002
    88cc:	297cb284 	addi	r5,r5,-3382
    88d0:	00091080 	call	9108 <__mulsf3>
    88d4:	dfc00117 	ldw	ra,4(sp)
    88d8:	dc000017 	ldw	r16,0(sp)
    88dc:	dec00204 	addi	sp,sp,8
    88e0:	f800283a 	ret
    88e4:	0008b740 	call	8b74 <__addsf3>
    88e8:	dfc00117 	ldw	ra,4(sp)
    88ec:	dc000017 	ldw	r16,0(sp)
    88f0:	dec00204 	addi	sp,sp,8
    88f4:	f800283a 	ret
    88f8:	f800283a 	ret
    88fc:	1806d5fa 	srli	r3,r3,23
    8900:	1c07883a 	add	r3,r3,r16
    8904:	19403fd0 	cmplti	r5,r3,255
    8908:	283fea26 	beq	r5,zero,88b4 <scalbnf+0x68>
    890c:	00c01016 	blt	zero,r3,8950 <scalbnf+0x104>
    8910:	197ffa88 	cmpgei	r5,r3,-22
    8914:	2800171e 	bne	r5,zero,8974 <scalbnf+0x128>
    8918:	00f0d414 	movui	r3,50000
    891c:	1c3fe516 	blt	r3,r16,88b4 <scalbnf+0x68>
    8920:	010368b4 	movhi	r4,3490
    8924:	21109804 	addi	r4,r4,16992
    8928:	1000020e 	bge	r2,zero,8934 <scalbnf+0xe8>
    892c:	012368b4 	movhi	r4,36258
    8930:	21109804 	addi	r4,r4,16992
    8934:	014368b4 	movhi	r5,3490
    8938:	29509804 	addi	r5,r5,16992
    893c:	00091080 	call	9108 <__mulsf3>
    8940:	dfc00117 	ldw	ra,4(sp)
    8944:	dc000017 	ldw	r16,0(sp)
    8948:	dec00204 	addi	sp,sp,8
    894c:	f800283a 	ret
    8950:	180695fa 	slli	r3,r3,23
    8954:	00a02034 	movhi	r2,32896
    8958:	10bfffc4 	addi	r2,r2,-1
    895c:	2084703a 	and	r2,r4,r2
    8960:	10c4b03a 	or	r2,r2,r3
    8964:	dfc00117 	ldw	ra,4(sp)
    8968:	dc000017 	ldw	r16,0(sp)
    896c:	dec00204 	addi	sp,sp,8
    8970:	f800283a 	ret
    8974:	18c00644 	addi	r3,r3,25
    8978:	180695fa 	slli	r3,r3,23
    897c:	00a02034 	movhi	r2,32896
    8980:	10bfffc4 	addi	r2,r2,-1
    8984:	2088703a 	and	r4,r4,r2
    8988:	014cc034 	movhi	r5,13056
    898c:	1908b03a 	or	r4,r3,r4
    8990:	00091080 	call	9108 <__mulsf3>
    8994:	003fd406 	br	88e8 <scalbnf+0x9c>

00008998 <__divsi3>:
    8998:	20001a16 	blt	r4,zero,8a04 <__divsi3+0x6c>
    899c:	000f883a 	mov	r7,zero
    89a0:	2800020e 	bge	r5,zero,89ac <__divsi3+0x14>
    89a4:	014bc83a 	sub	r5,zero,r5
    89a8:	39c0005c 	xori	r7,r7,1
    89ac:	200d883a 	mov	r6,r4
    89b0:	00c00044 	movi	r3,1
    89b4:	2900092e 	bgeu	r5,r4,89dc <__divsi3+0x44>
    89b8:	00800804 	movi	r2,32
    89bc:	00c00044 	movi	r3,1
    89c0:	00000106 	br	89c8 <__divsi3+0x30>
    89c4:	10001226 	beq	r2,zero,8a10 <__divsi3+0x78>
    89c8:	294b883a 	add	r5,r5,r5
    89cc:	10bfffc4 	addi	r2,r2,-1
    89d0:	18c7883a 	add	r3,r3,r3
    89d4:	293ffb36 	bltu	r5,r4,89c4 <__divsi3+0x2c>
    89d8:	18000d26 	beq	r3,zero,8a10 <__divsi3+0x78>
    89dc:	0005883a 	mov	r2,zero
    89e0:	31400236 	bltu	r6,r5,89ec <__divsi3+0x54>
    89e4:	314dc83a 	sub	r6,r6,r5
    89e8:	10c4b03a 	or	r2,r2,r3
    89ec:	1806d07a 	srli	r3,r3,1
    89f0:	280ad07a 	srli	r5,r5,1
    89f4:	183ffa1e 	bne	r3,zero,89e0 <__divsi3+0x48>
    89f8:	38000126 	beq	r7,zero,8a00 <__divsi3+0x68>
    89fc:	0085c83a 	sub	r2,zero,r2
    8a00:	f800283a 	ret
    8a04:	0109c83a 	sub	r4,zero,r4
    8a08:	01c00044 	movi	r7,1
    8a0c:	003fe406 	br	89a0 <__divsi3+0x8>
    8a10:	0005883a 	mov	r2,zero
    8a14:	003ff806 	br	89f8 <__divsi3+0x60>

00008a18 <__modsi3>:
    8a18:	20001916 	blt	r4,zero,8a80 <__modsi3+0x68>
    8a1c:	000f883a 	mov	r7,zero
    8a20:	2005883a 	mov	r2,r4
    8a24:	2800010e 	bge	r5,zero,8a2c <__modsi3+0x14>
    8a28:	014bc83a 	sub	r5,zero,r5
    8a2c:	00c00044 	movi	r3,1
    8a30:	2900092e 	bgeu	r5,r4,8a58 <__modsi3+0x40>
    8a34:	01800804 	movi	r6,32
    8a38:	00c00044 	movi	r3,1
    8a3c:	00000106 	br	8a44 <__modsi3+0x2c>
    8a40:	30000d26 	beq	r6,zero,8a78 <__modsi3+0x60>
    8a44:	294b883a 	add	r5,r5,r5
    8a48:	31bfffc4 	addi	r6,r6,-1
    8a4c:	18c7883a 	add	r3,r3,r3
    8a50:	293ffb36 	bltu	r5,r4,8a40 <__modsi3+0x28>
    8a54:	18000826 	beq	r3,zero,8a78 <__modsi3+0x60>
    8a58:	1806d07a 	srli	r3,r3,1
    8a5c:	11400136 	bltu	r2,r5,8a64 <__modsi3+0x4c>
    8a60:	1145c83a 	sub	r2,r2,r5
    8a64:	280ad07a 	srli	r5,r5,1
    8a68:	183ffb1e 	bne	r3,zero,8a58 <__modsi3+0x40>
    8a6c:	38000126 	beq	r7,zero,8a74 <__modsi3+0x5c>
    8a70:	0085c83a 	sub	r2,zero,r2
    8a74:	f800283a 	ret
    8a78:	2005883a 	mov	r2,r4
    8a7c:	003ffb06 	br	8a6c <__modsi3+0x54>
    8a80:	0109c83a 	sub	r4,zero,r4
    8a84:	01c00044 	movi	r7,1
    8a88:	003fe506 	br	8a20 <__modsi3+0x8>

00008a8c <__udivsi3>:
    8a8c:	200d883a 	mov	r6,r4
    8a90:	2900152e 	bgeu	r5,r4,8ae8 <__udivsi3+0x5c>
    8a94:	28001416 	blt	r5,zero,8ae8 <__udivsi3+0x5c>
    8a98:	00800804 	movi	r2,32
    8a9c:	00c00044 	movi	r3,1
    8aa0:	00000206 	br	8aac <__udivsi3+0x20>
    8aa4:	10000e26 	beq	r2,zero,8ae0 <__udivsi3+0x54>
    8aa8:	28000516 	blt	r5,zero,8ac0 <__udivsi3+0x34>
    8aac:	294b883a 	add	r5,r5,r5
    8ab0:	10bfffc4 	addi	r2,r2,-1
    8ab4:	18c7883a 	add	r3,r3,r3
    8ab8:	293ffa36 	bltu	r5,r4,8aa4 <__udivsi3+0x18>
    8abc:	18000826 	beq	r3,zero,8ae0 <__udivsi3+0x54>
    8ac0:	0005883a 	mov	r2,zero
    8ac4:	31400236 	bltu	r6,r5,8ad0 <__udivsi3+0x44>
    8ac8:	314dc83a 	sub	r6,r6,r5
    8acc:	10c4b03a 	or	r2,r2,r3
    8ad0:	1806d07a 	srli	r3,r3,1
    8ad4:	280ad07a 	srli	r5,r5,1
    8ad8:	183ffa1e 	bne	r3,zero,8ac4 <__udivsi3+0x38>
    8adc:	f800283a 	ret
    8ae0:	0005883a 	mov	r2,zero
    8ae4:	f800283a 	ret
    8ae8:	00c00044 	movi	r3,1
    8aec:	003ff406 	br	8ac0 <__udivsi3+0x34>

00008af0 <__umodsi3>:
    8af0:	2005883a 	mov	r2,r4
    8af4:	2900132e 	bgeu	r5,r4,8b44 <__umodsi3+0x54>
    8af8:	28001216 	blt	r5,zero,8b44 <__umodsi3+0x54>
    8afc:	01800804 	movi	r6,32
    8b00:	00c00044 	movi	r3,1
    8b04:	00000206 	br	8b10 <__umodsi3+0x20>
    8b08:	30000c26 	beq	r6,zero,8b3c <__umodsi3+0x4c>
    8b0c:	28000516 	blt	r5,zero,8b24 <__umodsi3+0x34>
    8b10:	294b883a 	add	r5,r5,r5
    8b14:	31bfffc4 	addi	r6,r6,-1
    8b18:	18c7883a 	add	r3,r3,r3
    8b1c:	293ffa36 	bltu	r5,r4,8b08 <__umodsi3+0x18>
    8b20:	18000626 	beq	r3,zero,8b3c <__umodsi3+0x4c>
    8b24:	1806d07a 	srli	r3,r3,1
    8b28:	11400136 	bltu	r2,r5,8b30 <__umodsi3+0x40>
    8b2c:	1145c83a 	sub	r2,r2,r5
    8b30:	280ad07a 	srli	r5,r5,1
    8b34:	183ffb1e 	bne	r3,zero,8b24 <__umodsi3+0x34>
    8b38:	f800283a 	ret
    8b3c:	2005883a 	mov	r2,r4
    8b40:	f800283a 	ret
    8b44:	00c00044 	movi	r3,1
    8b48:	003ff606 	br	8b24 <__umodsi3+0x34>

00008b4c <__mulsi3>:
    8b4c:	0005883a 	mov	r2,zero
    8b50:	20000726 	beq	r4,zero,8b70 <__mulsi3+0x24>
    8b54:	20c0004c 	andi	r3,r4,1
    8b58:	2008d07a 	srli	r4,r4,1
    8b5c:	18000126 	beq	r3,zero,8b64 <__mulsi3+0x18>
    8b60:	1145883a 	add	r2,r2,r5
    8b64:	294b883a 	add	r5,r5,r5
    8b68:	203ffa1e 	bne	r4,zero,8b54 <__mulsi3+0x8>
    8b6c:	f800283a 	ret
    8b70:	f800283a 	ret

00008b74 <__addsf3>:
    8b74:	defffc04 	addi	sp,sp,-16
    8b78:	2806d5fa 	srli	r3,r5,23
    8b7c:	dc000015 	stw	r16,0(sp)
    8b80:	2020d5fa 	srli	r16,r4,23
    8b84:	200cd7fa 	srli	r6,r4,31
    8b88:	00802034 	movhi	r2,128
    8b8c:	2812d7fa 	srli	r9,r5,31
    8b90:	10bfffc4 	addi	r2,r2,-1
    8b94:	1114703a 	and	r10,r2,r4
    8b98:	1b003fcc 	andi	r12,r3,255
    8b9c:	dc400115 	stw	r17,4(sp)
    8ba0:	84003fcc 	andi	r16,r16,255
    8ba4:	115a703a 	and	r13,r2,r5
    8ba8:	dfc00315 	stw	ra,12(sp)
    8bac:	dc800215 	stw	r18,8(sp)
    8bb0:	500e90fa 	slli	r7,r10,3
    8bb4:	681090fa 	slli	r8,r13,3
    8bb8:	5007883a 	mov	r3,r10
    8bbc:	3023883a 	mov	r17,r6
    8bc0:	8317c83a 	sub	r11,r16,r12
    8bc4:	32403926 	beq	r6,r9,8cac <__addsf3+0x138>
    8bc8:	02c02e0e 	bge	zero,r11,8c84 <__addsf3+0x110>
    8bcc:	60004c26 	beq	r12,zero,8d00 <__addsf3+0x18c>
    8bd0:	80803fe0 	cmpeqi	r2,r16,255
    8bd4:	1000801e 	bne	r2,zero,8dd8 <__addsf3+0x264>
    8bd8:	42010034 	orhi	r8,r8,1024
    8bdc:	58800710 	cmplti	r2,r11,28
    8be0:	10009e1e 	bne	r2,zero,8e5c <__addsf3+0x2e8>
    8be4:	01000044 	movi	r4,1
    8be8:	3909c83a 	sub	r4,r7,r4
    8bec:	2081002c 	andhi	r2,r4,1024
    8bf0:	10006826 	beq	r2,zero,8d94 <__addsf3+0x220>
    8bf4:	04810034 	movhi	r18,1024
    8bf8:	94bfffc4 	addi	r18,r18,-1
    8bfc:	24a4703a 	and	r18,r4,r18
    8c00:	9009883a 	mov	r4,r18
    8c04:	000c5c00 	call	c5c0 <__clzsi2>
    8c08:	10bffec4 	addi	r2,r2,-5
    8c0c:	9088983a 	sll	r4,r18,r2
    8c10:	1400880e 	bge	r2,r16,8e34 <__addsf3+0x2c0>
    8c14:	00ff0034 	movhi	r3,64512
    8c18:	18ffffc4 	addi	r3,r3,-1
    8c1c:	80a1c83a 	sub	r16,r16,r2
    8c20:	20c8703a 	and	r4,r4,r3
    8c24:	208001cc 	andi	r2,r4,7
    8c28:	10000426 	beq	r2,zero,8c3c <__addsf3+0xc8>
    8c2c:	208003cc 	andi	r2,r4,15
    8c30:	10800120 	cmpeqi	r2,r2,4
    8c34:	1000011e 	bne	r2,zero,8c3c <__addsf3+0xc8>
    8c38:	21000104 	addi	r4,r4,4
    8c3c:	2081002c 	andhi	r2,r4,1024
    8c40:	10005626 	beq	r2,zero,8d9c <__addsf3+0x228>
    8c44:	84000044 	addi	r16,r16,1
    8c48:	80803fe0 	cmpeqi	r2,r16,255
    8c4c:	1000461e 	bne	r2,zero,8d68 <__addsf3+0x1f4>
    8c50:	200491ba 	slli	r2,r4,6
    8c54:	1006d27a 	srli	r3,r2,9
    8c58:	84003fcc 	andi	r16,r16,255
    8c5c:	800495fa 	slli	r2,r16,23
    8c60:	882297fa 	slli	r17,r17,31
    8c64:	10c4b03a 	or	r2,r2,r3
    8c68:	1444b03a 	or	r2,r2,r17
    8c6c:	dfc00317 	ldw	ra,12(sp)
    8c70:	dc800217 	ldw	r18,8(sp)
    8c74:	dc400117 	ldw	r17,4(sp)
    8c78:	dc000017 	ldw	r16,0(sp)
    8c7c:	dec00404 	addi	sp,sp,16
    8c80:	f800283a 	ret
    8c84:	58002526 	beq	r11,zero,8d1c <__addsf3+0x1a8>
    8c88:	6417c83a 	sub	r11,r12,r16
    8c8c:	8000821e 	bne	r16,zero,8e98 <__addsf3+0x324>
    8c90:	38006426 	beq	r7,zero,8e24 <__addsf3+0x2b0>
    8c94:	58bfffc4 	addi	r2,r11,-1
    8c98:	1000c226 	beq	r2,zero,8fa4 <__addsf3+0x430>
    8c9c:	5ac03fe0 	cmpeqi	r11,r11,255
    8ca0:	58004b1e 	bne	r11,zero,8dd0 <__addsf3+0x25c>
    8ca4:	1017883a 	mov	r11,r2
    8ca8:	00007e06 	br	8ea4 <__addsf3+0x330>
    8cac:	02c0510e 	bge	zero,r11,8df4 <__addsf3+0x280>
    8cb0:	60002626 	beq	r12,zero,8d4c <__addsf3+0x1d8>
    8cb4:	80803fe0 	cmpeqi	r2,r16,255
    8cb8:	1000471e 	bne	r2,zero,8dd8 <__addsf3+0x264>
    8cbc:	42010034 	orhi	r8,r8,1024
    8cc0:	58800710 	cmplti	r2,r11,28
    8cc4:	10007e1e 	bne	r2,zero,8ec0 <__addsf3+0x34c>
    8cc8:	01000044 	movi	r4,1
    8ccc:	21c9883a 	add	r4,r4,r7
    8cd0:	2081002c 	andhi	r2,r4,1024
    8cd4:	10002f26 	beq	r2,zero,8d94 <__addsf3+0x220>
    8cd8:	84000044 	addi	r16,r16,1
    8cdc:	80803fe0 	cmpeqi	r2,r16,255
    8ce0:	1000211e 	bne	r2,zero,8d68 <__addsf3+0x1f4>
    8ce4:	2004d07a 	srli	r2,r4,1
    8ce8:	00df8034 	movhi	r3,32256
    8cec:	18ffffc4 	addi	r3,r3,-1
    8cf0:	2100004c 	andi	r4,r4,1
    8cf4:	10c4703a 	and	r2,r2,r3
    8cf8:	1108b03a 	or	r4,r2,r4
    8cfc:	003fc906 	br	8c24 <__addsf3+0xb0>
    8d00:	40004a26 	beq	r8,zero,8e2c <__addsf3+0x2b8>
    8d04:	58bfffc4 	addi	r2,r11,-1
    8d08:	10009326 	beq	r2,zero,8f58 <__addsf3+0x3e4>
    8d0c:	59003fe0 	cmpeqi	r4,r11,255
    8d10:	2000311e 	bne	r4,zero,8dd8 <__addsf3+0x264>
    8d14:	1017883a 	mov	r11,r2
    8d18:	003fb006 	br	8bdc <__addsf3+0x68>
    8d1c:	81800044 	addi	r6,r16,1
    8d20:	31803f8c 	andi	r6,r6,254
    8d24:	3000541e 	bne	r6,zero,8e78 <__addsf3+0x304>
    8d28:	80007e1e 	bne	r16,zero,8f24 <__addsf3+0x3b0>
    8d2c:	3800a326 	beq	r7,zero,8fbc <__addsf3+0x448>
    8d30:	40009326 	beq	r8,zero,8f80 <__addsf3+0x40c>
    8d34:	3a09c83a 	sub	r4,r7,r8
    8d38:	2081002c 	andhi	r2,r4,1024
    8d3c:	1000a626 	beq	r2,zero,8fd8 <__addsf3+0x464>
    8d40:	41c9c83a 	sub	r4,r8,r7
    8d44:	4823883a 	mov	r17,r9
    8d48:	003fb606 	br	8c24 <__addsf3+0xb0>
    8d4c:	40003726 	beq	r8,zero,8e2c <__addsf3+0x2b8>
    8d50:	58bfffc4 	addi	r2,r11,-1
    8d54:	10007b26 	beq	r2,zero,8f44 <__addsf3+0x3d0>
    8d58:	5ac03fe0 	cmpeqi	r11,r11,255
    8d5c:	58001e1e 	bne	r11,zero,8dd8 <__addsf3+0x264>
    8d60:	1017883a 	mov	r11,r2
    8d64:	003fd606 	br	8cc0 <__addsf3+0x14c>
    8d68:	043fffc4 	movi	r16,-1
    8d6c:	0007883a 	mov	r3,zero
    8d70:	003fb906 	br	8c58 <__addsf3+0xe4>
    8d74:	80800044 	addi	r2,r16,1
    8d78:	11803f8c 	andi	r6,r2,254
    8d7c:	30005726 	beq	r6,zero,8edc <__addsf3+0x368>
    8d80:	10c03fe0 	cmpeqi	r3,r2,255
    8d84:	183ff81e 	bne	r3,zero,8d68 <__addsf3+0x1f4>
    8d88:	3a09883a 	add	r4,r7,r8
    8d8c:	2008d07a 	srli	r4,r4,1
    8d90:	1021883a 	mov	r16,r2
    8d94:	208001cc 	andi	r2,r4,7
    8d98:	103fa41e 	bne	r2,zero,8c2c <__addsf3+0xb8>
    8d9c:	2014d0fa 	srli	r10,r4,3
    8da0:	80803fe0 	cmpeqi	r2,r16,255
    8da4:	10000c1e 	bne	r2,zero,8dd8 <__addsf3+0x264>
    8da8:	00802034 	movhi	r2,128
    8dac:	10bfffc4 	addi	r2,r2,-1
    8db0:	5086703a 	and	r3,r10,r2
    8db4:	003fa806 	br	8c58 <__addsf3+0xe4>
    8db8:	38000626 	beq	r7,zero,8dd4 <__addsf3+0x260>
    8dbc:	40000626 	beq	r8,zero,8dd8 <__addsf3+0x264>
    8dc0:	2080102c 	andhi	r2,r4,64
    8dc4:	10000426 	beq	r2,zero,8dd8 <__addsf3+0x264>
    8dc8:	2940102c 	andhi	r5,r5,64
    8dcc:	2800021e 	bne	r5,zero,8dd8 <__addsf3+0x264>
    8dd0:	4823883a 	mov	r17,r9
    8dd4:	6815883a 	mov	r10,r13
    8dd8:	503fe326 	beq	r10,zero,8d68 <__addsf3+0x1f4>
    8ddc:	00802034 	movhi	r2,128
    8de0:	50c01034 	orhi	r3,r10,64
    8de4:	10bfffc4 	addi	r2,r2,-1
    8de8:	1886703a 	and	r3,r3,r2
    8dec:	043fffc4 	movi	r16,-1
    8df0:	003f9906 	br	8c58 <__addsf3+0xe4>
    8df4:	583fdf26 	beq	r11,zero,8d74 <__addsf3+0x200>
    8df8:	6417c83a 	sub	r11,r12,r16
    8dfc:	80004226 	beq	r16,zero,8f08 <__addsf3+0x394>
    8e00:	60803fe0 	cmpeqi	r2,r12,255
    8e04:	103ff31e 	bne	r2,zero,8dd4 <__addsf3+0x260>
    8e08:	39c10034 	orhi	r7,r7,1024
    8e0c:	58800710 	cmplti	r2,r11,28
    8e10:	10005d1e 	bne	r2,zero,8f88 <__addsf3+0x414>
    8e14:	01000044 	movi	r4,1
    8e18:	2209883a 	add	r4,r4,r8
    8e1c:	6021883a 	mov	r16,r12
    8e20:	003fab06 	br	8cd0 <__addsf3+0x15c>
    8e24:	4823883a 	mov	r17,r9
    8e28:	6815883a 	mov	r10,r13
    8e2c:	5821883a 	mov	r16,r11
    8e30:	003fdb06 	br	8da0 <__addsf3+0x22c>
    8e34:	1405c83a 	sub	r2,r2,r16
    8e38:	14800044 	addi	r18,r2,1
    8e3c:	00800804 	movi	r2,32
    8e40:	1485c83a 	sub	r2,r2,r18
    8e44:	2084983a 	sll	r2,r4,r2
    8e48:	2488d83a 	srl	r4,r4,r18
    8e4c:	0021883a 	mov	r16,zero
    8e50:	1004c03a 	cmpne	r2,r2,zero
    8e54:	1108b03a 	or	r4,r2,r4
    8e58:	003f7206 	br	8c24 <__addsf3+0xb0>
    8e5c:	01000804 	movi	r4,32
    8e60:	22c9c83a 	sub	r4,r4,r11
    8e64:	4108983a 	sll	r4,r8,r4
    8e68:	42d0d83a 	srl	r8,r8,r11
    8e6c:	2008c03a 	cmpne	r4,r4,zero
    8e70:	2208b03a 	or	r4,r4,r8
    8e74:	003f5c06 	br	8be8 <__addsf3+0x74>
    8e78:	3a25c83a 	sub	r18,r7,r8
    8e7c:	9081002c 	andhi	r2,r18,1024
    8e80:	10002d1e 	bne	r2,zero,8f38 <__addsf3+0x3c4>
    8e84:	903f5e1e 	bne	r18,zero,8c00 <__addsf3+0x8c>
    8e88:	0023883a 	mov	r17,zero
    8e8c:	0021883a 	mov	r16,zero
    8e90:	0007883a 	mov	r3,zero
    8e94:	003f7006 	br	8c58 <__addsf3+0xe4>
    8e98:	60803fe0 	cmpeqi	r2,r12,255
    8e9c:	103fcc1e 	bne	r2,zero,8dd0 <__addsf3+0x25c>
    8ea0:	39c10034 	orhi	r7,r7,1024
    8ea4:	58800710 	cmplti	r2,r11,28
    8ea8:	10002e1e 	bne	r2,zero,8f64 <__addsf3+0x3f0>
    8eac:	01000044 	movi	r4,1
    8eb0:	4109c83a 	sub	r4,r8,r4
    8eb4:	4823883a 	mov	r17,r9
    8eb8:	6021883a 	mov	r16,r12
    8ebc:	003f4b06 	br	8bec <__addsf3+0x78>
    8ec0:	01000804 	movi	r4,32
    8ec4:	22c9c83a 	sub	r4,r4,r11
    8ec8:	4108983a 	sll	r4,r8,r4
    8ecc:	42d0d83a 	srl	r8,r8,r11
    8ed0:	2008c03a 	cmpne	r4,r4,zero
    8ed4:	2208b03a 	or	r4,r4,r8
    8ed8:	003f7c06 	br	8ccc <__addsf3+0x158>
    8edc:	803fb61e 	bne	r16,zero,8db8 <__addsf3+0x244>
    8ee0:	38003a26 	beq	r7,zero,8fcc <__addsf3+0x458>
    8ee4:	40002626 	beq	r8,zero,8f80 <__addsf3+0x40c>
    8ee8:	3a09883a 	add	r4,r7,r8
    8eec:	2081002c 	andhi	r2,r4,1024
    8ef0:	103fa826 	beq	r2,zero,8d94 <__addsf3+0x220>
    8ef4:	00bf0034 	movhi	r2,64512
    8ef8:	10bfffc4 	addi	r2,r2,-1
    8efc:	2088703a 	and	r4,r4,r2
    8f00:	04000044 	movi	r16,1
    8f04:	003fa306 	br	8d94 <__addsf3+0x220>
    8f08:	383fc726 	beq	r7,zero,8e28 <__addsf3+0x2b4>
    8f0c:	58bfffc4 	addi	r2,r11,-1
    8f10:	10000c26 	beq	r2,zero,8f44 <__addsf3+0x3d0>
    8f14:	5ac03fe0 	cmpeqi	r11,r11,255
    8f18:	583fae1e 	bne	r11,zero,8dd4 <__addsf3+0x260>
    8f1c:	1017883a 	mov	r11,r2
    8f20:	003fba06 	br	8e0c <__addsf3+0x298>
    8f24:	383fa51e 	bne	r7,zero,8dbc <__addsf3+0x248>
    8f28:	403fa91e 	bne	r8,zero,8dd0 <__addsf3+0x25c>
    8f2c:	0023883a 	mov	r17,zero
    8f30:	1007883a 	mov	r3,r2
    8f34:	003fad06 	br	8dec <__addsf3+0x278>
    8f38:	41e5c83a 	sub	r18,r8,r7
    8f3c:	4823883a 	mov	r17,r9
    8f40:	003f2f06 	br	8c00 <__addsf3+0x8c>
    8f44:	3a09883a 	add	r4,r7,r8
    8f48:	2081002c 	andhi	r2,r4,1024
    8f4c:	10001926 	beq	r2,zero,8fb4 <__addsf3+0x440>
    8f50:	04000084 	movi	r16,2
    8f54:	003f6306 	br	8ce4 <__addsf3+0x170>
    8f58:	3a09c83a 	sub	r4,r7,r8
    8f5c:	04000044 	movi	r16,1
    8f60:	003f2206 	br	8bec <__addsf3+0x78>
    8f64:	00800804 	movi	r2,32
    8f68:	12c5c83a 	sub	r2,r2,r11
    8f6c:	3884983a 	sll	r2,r7,r2
    8f70:	3aced83a 	srl	r7,r7,r11
    8f74:	1008c03a 	cmpne	r4,r2,zero
    8f78:	21c8b03a 	or	r4,r4,r7
    8f7c:	003fcc06 	br	8eb0 <__addsf3+0x33c>
    8f80:	0021883a 	mov	r16,zero
    8f84:	003f3406 	br	8c58 <__addsf3+0xe4>
    8f88:	01000804 	movi	r4,32
    8f8c:	22c9c83a 	sub	r4,r4,r11
    8f90:	3908983a 	sll	r4,r7,r4
    8f94:	3aced83a 	srl	r7,r7,r11
    8f98:	2008c03a 	cmpne	r4,r4,zero
    8f9c:	21c8b03a 	or	r4,r4,r7
    8fa0:	003f9d06 	br	8e18 <__addsf3+0x2a4>
    8fa4:	41c9c83a 	sub	r4,r8,r7
    8fa8:	4823883a 	mov	r17,r9
    8fac:	04000044 	movi	r16,1
    8fb0:	003f0e06 	br	8bec <__addsf3+0x78>
    8fb4:	04000044 	movi	r16,1
    8fb8:	003f7606 	br	8d94 <__addsf3+0x220>
    8fbc:	403fb226 	beq	r8,zero,8e88 <__addsf3+0x314>
    8fc0:	4823883a 	mov	r17,r9
    8fc4:	6807883a 	mov	r3,r13
    8fc8:	003f2306 	br	8c58 <__addsf3+0xe4>
    8fcc:	6807883a 	mov	r3,r13
    8fd0:	0021883a 	mov	r16,zero
    8fd4:	003f2006 	br	8c58 <__addsf3+0xe4>
    8fd8:	203fab26 	beq	r4,zero,8e88 <__addsf3+0x314>
    8fdc:	003f6d06 	br	8d94 <__addsf3+0x220>

00008fe0 <__eqsf2>:
    8fe0:	200cd5fa 	srli	r6,r4,23
    8fe4:	2806d5fa 	srli	r3,r5,23
    8fe8:	00802034 	movhi	r2,128
    8fec:	31803fcc 	andi	r6,r6,255
    8ff0:	10bfffc4 	addi	r2,r2,-1
    8ff4:	31c03fd8 	cmpnei	r7,r6,255
    8ff8:	2010d7fa 	srli	r8,r4,31
    8ffc:	2812d7fa 	srli	r9,r5,31
    9000:	1108703a 	and	r4,r2,r4
    9004:	18c03fcc 	andi	r3,r3,255
    9008:	1144703a 	and	r2,r2,r5
    900c:	38000626 	beq	r7,zero,9028 <__eqsf2+0x48>
    9010:	19403fe0 	cmpeqi	r5,r3,255
    9014:	2800021e 	bne	r5,zero,9020 <__eqsf2+0x40>
    9018:	30c0011e 	bne	r6,r3,9020 <__eqsf2+0x40>
    901c:	20800626 	beq	r4,r2,9038 <__eqsf2+0x58>
    9020:	00800044 	movi	r2,1
    9024:	f800283a 	ret
    9028:	203ffd1e 	bne	r4,zero,9020 <__eqsf2+0x40>
    902c:	18c03fd8 	cmpnei	r3,r3,255
    9030:	183ffb1e 	bne	r3,zero,9020 <__eqsf2+0x40>
    9034:	103ffa1e 	bne	r2,zero,9020 <__eqsf2+0x40>
    9038:	42400326 	beq	r8,r9,9048 <__eqsf2+0x68>
    903c:	303ff81e 	bne	r6,zero,9020 <__eqsf2+0x40>
    9040:	2004c03a 	cmpne	r2,r4,zero
    9044:	f800283a 	ret
    9048:	0005883a 	mov	r2,zero
    904c:	f800283a 	ret

00009050 <__gesf2>:
    9050:	200cd5fa 	srli	r6,r4,23
    9054:	280ed5fa 	srli	r7,r5,23
    9058:	00c02034 	movhi	r3,128
    905c:	31803fcc 	andi	r6,r6,255
    9060:	18ffffc4 	addi	r3,r3,-1
    9064:	32003fd8 	cmpnei	r8,r6,255
    9068:	2012d7fa 	srli	r9,r4,31
    906c:	2804d7fa 	srli	r2,r5,31
    9070:	1908703a 	and	r4,r3,r4
    9074:	1946703a 	and	r3,r3,r5
    9078:	39403fcc 	andi	r5,r7,255
    907c:	40000826 	beq	r8,zero,90a0 <__gesf2+0x50>
    9080:	29c03fd8 	cmpnei	r7,r5,255
    9084:	38000926 	beq	r7,zero,90ac <__gesf2+0x5c>
    9088:	3000121e 	bne	r6,zero,90d4 <__gesf2+0x84>
    908c:	28000e1e 	bne	r5,zero,90c8 <__gesf2+0x78>
    9090:	18000d1e 	bne	r3,zero,90c8 <__gesf2+0x78>
    9094:	2000081e 	bne	r4,zero,90b8 <__gesf2+0x68>
    9098:	0005883a 	mov	r2,zero
    909c:	f800283a 	ret
    90a0:	2000171e 	bne	r4,zero,9100 <__gesf2+0xb0>
    90a4:	29c03fe0 	cmpeqi	r7,r5,255
    90a8:	38000a26 	beq	r7,zero,90d4 <__gesf2+0x84>
    90ac:	1800141e 	bne	r3,zero,9100 <__gesf2+0xb0>
    90b0:	30000526 	beq	r6,zero,90c8 <__gesf2+0x78>
    90b4:	48800a26 	beq	r9,r2,90e0 <__gesf2+0x90>
    90b8:	00800044 	movi	r2,1
    90bc:	48000426 	beq	r9,zero,90d0 <__gesf2+0x80>
    90c0:	00bfffc4 	movi	r2,-1
    90c4:	f800283a 	ret
    90c8:	203ffa1e 	bne	r4,zero,90b4 <__gesf2+0x64>
    90cc:	103ffc26 	beq	r2,zero,90c0 <__gesf2+0x70>
    90d0:	f800283a 	ret
    90d4:	283ff71e 	bne	r5,zero,90b4 <__gesf2+0x64>
    90d8:	183ff61e 	bne	r3,zero,90b4 <__gesf2+0x64>
    90dc:	003ff606 	br	90b8 <__gesf2+0x68>
    90e0:	29800416 	blt	r5,r6,90f4 <__gesf2+0xa4>
    90e4:	317ff916 	blt	r6,r5,90cc <__gesf2+0x7c>
    90e8:	19000236 	bltu	r3,r4,90f4 <__gesf2+0xa4>
    90ec:	20ffea2e 	bgeu	r4,r3,9098 <__gesf2+0x48>
    90f0:	003ff606 	br	90cc <__gesf2+0x7c>
    90f4:	103ff21e 	bne	r2,zero,90c0 <__gesf2+0x70>
    90f8:	00800044 	movi	r2,1
    90fc:	f800283a 	ret
    9100:	00bfff84 	movi	r2,-2
    9104:	f800283a 	ret

00009108 <__mulsf3>:
    9108:	defff504 	addi	sp,sp,-44
    910c:	dc400215 	stw	r17,8(sp)
    9110:	2022d5fa 	srli	r17,r4,23
    9114:	dc000115 	stw	r16,4(sp)
    9118:	04002034 	movhi	r16,128
    911c:	dd800715 	stw	r22,28(sp)
    9120:	843fffc4 	addi	r16,r16,-1
    9124:	dfc00a15 	stw	ra,40(sp)
    9128:	df000915 	stw	fp,36(sp)
    912c:	ddc00815 	stw	r23,32(sp)
    9130:	dd400615 	stw	r21,24(sp)
    9134:	dd000515 	stw	r20,20(sp)
    9138:	dcc00415 	stw	r19,16(sp)
    913c:	dc800315 	stw	r18,12(sp)
    9140:	8c403fcc 	andi	r17,r17,255
    9144:	202cd7fa 	srli	r22,r4,31
    9148:	8120703a 	and	r16,r16,r4
    914c:	88008d26 	beq	r17,zero,9384 <__mulsf3+0x27c>
    9150:	88803fe0 	cmpeqi	r2,r17,255
    9154:	1000901e 	bne	r2,zero,9398 <__mulsf3+0x290>
    9158:	802090fa 	slli	r16,r16,3
    915c:	8c7fe044 	addi	r17,r17,-127
    9160:	0025883a 	mov	r18,zero
    9164:	84010034 	orhi	r16,r16,1024
    9168:	0029883a 	mov	r20,zero
    916c:	2804d5fa 	srli	r2,r5,23
    9170:	01002034 	movhi	r4,128
    9174:	213fffc4 	addi	r4,r4,-1
    9178:	10803fcc 	andi	r2,r2,255
    917c:	282ed7fa 	srli	r23,r5,31
    9180:	2166703a 	and	r19,r4,r5
    9184:	10007b26 	beq	r2,zero,9374 <__mulsf3+0x26c>
    9188:	10c03fe0 	cmpeqi	r3,r2,255
    918c:	1800871e 	bne	r3,zero,93ac <__mulsf3+0x2a4>
    9190:	980890fa 	slli	r4,r19,3
    9194:	10bfe044 	addi	r2,r2,-127
    9198:	88a3883a 	add	r17,r17,r2
    919c:	24c10034 	orhi	r19,r4,1024
    91a0:	0007883a 	mov	r3,zero
    91a4:	90800428 	cmpgeui	r2,r18,16
    91a8:	b5eaf03a 	xor	r21,r22,r23
    91ac:	8f000044 	addi	fp,r17,1
    91b0:	1000341e 	bne	r2,zero,9284 <__mulsf3+0x17c>
    91b4:	902490ba 	slli	r18,r18,2
    91b8:	00800074 	movhi	r2,1
    91bc:	9085883a 	add	r2,r18,r2
    91c0:	10a47217 	ldw	r2,-28216(r2)
    91c4:	1000683a 	jmp	r2
    91c8:	00009284 	movi	zero,586
    91cc:	0000920c 	andi	zero,zero,584
    91d0:	0000920c 	andi	zero,zero,584
    91d4:	00009208 	cmpgei	zero,zero,584
    91d8:	00009214 	movui	zero,584
    91dc:	00009214 	movui	zero,584
    91e0:	00009438 	rdprs	zero,zero,592
    91e4:	00009208 	cmpgei	zero,zero,584
    91e8:	00009214 	movui	zero,584
    91ec:	00009438 	rdprs	zero,zero,592
    91f0:	00009214 	movui	zero,584
    91f4:	00009208 	cmpgei	zero,zero,584
    91f8:	000093c0 	call	93c <kf_bfly3+0xd0>
    91fc:	000093c0 	call	93c <kf_bfly3+0xd0>
    9200:	000093c0 	call	93c <kf_bfly3+0xd0>
    9204:	0000949c 	xori	zero,zero,594
    9208:	b82b883a 	mov	r21,r23
    920c:	9821883a 	mov	r16,r19
    9210:	1829883a 	mov	r20,r3
    9214:	a08000a0 	cmpeqi	r2,r20,2
    9218:	1000171e 	bne	r2,zero,9278 <__mulsf3+0x170>
    921c:	a08000e0 	cmpeqi	r2,r20,3
    9220:	1000b41e 	bne	r2,zero,94f4 <__mulsf3+0x3ec>
    9224:	a0800060 	cmpeqi	r2,r20,1
    9228:	10003f26 	beq	r2,zero,9328 <__mulsf3+0x220>
    922c:	0007883a 	mov	r3,zero
    9230:	0009883a 	mov	r4,zero
    9234:	1c003fcc 	andi	r16,r3,255
    9238:	802095fa 	slli	r16,r16,23
    923c:	a80497fa 	slli	r2,r21,31
    9240:	8120b03a 	or	r16,r16,r4
    9244:	8084b03a 	or	r2,r16,r2
    9248:	dfc00a17 	ldw	ra,40(sp)
    924c:	df000917 	ldw	fp,36(sp)
    9250:	ddc00817 	ldw	r23,32(sp)
    9254:	dd800717 	ldw	r22,28(sp)
    9258:	dd400617 	ldw	r21,24(sp)
    925c:	dd000517 	ldw	r20,20(sp)
    9260:	dcc00417 	ldw	r19,16(sp)
    9264:	dc800317 	ldw	r18,12(sp)
    9268:	dc400217 	ldw	r17,8(sp)
    926c:	dc000117 	ldw	r16,4(sp)
    9270:	dec00b04 	addi	sp,sp,44
    9274:	f800283a 	ret
    9278:	00ffffc4 	movi	r3,-1
    927c:	0009883a 	mov	r4,zero
    9280:	003fec06 	br	9234 <__mulsf3+0x12c>
    9284:	8028d43a 	srli	r20,r16,16
    9288:	9cbfffcc 	andi	r18,r19,65535
    928c:	843fffcc 	andi	r16,r16,65535
    9290:	900b883a 	mov	r5,r18
    9294:	8009883a 	mov	r4,r16
    9298:	0008b4c0 	call	8b4c <__mulsi3>
    929c:	9826d43a 	srli	r19,r19,16
    92a0:	900b883a 	mov	r5,r18
    92a4:	a009883a 	mov	r4,r20
    92a8:	1025883a 	mov	r18,r2
    92ac:	0008b4c0 	call	8b4c <__mulsi3>
    92b0:	980b883a 	mov	r5,r19
    92b4:	a009883a 	mov	r4,r20
    92b8:	1029883a 	mov	r20,r2
    92bc:	0008b4c0 	call	8b4c <__mulsi3>
    92c0:	9809883a 	mov	r4,r19
    92c4:	800b883a 	mov	r5,r16
    92c8:	1027883a 	mov	r19,r2
    92cc:	0008b4c0 	call	8b4c <__mulsi3>
    92d0:	9006d43a 	srli	r3,r18,16
    92d4:	1505883a 	add	r2,r2,r20
    92d8:	1887883a 	add	r3,r3,r2
    92dc:	1d00022e 	bgeu	r3,r20,92e8 <__mulsf3+0x1e0>
    92e0:	00800074 	movhi	r2,1
    92e4:	98a7883a 	add	r19,r19,r2
    92e8:	1808943a 	slli	r4,r3,16
    92ec:	1820d43a 	srli	r16,r3,16
    92f0:	94bfffcc 	andi	r18,r18,65535
    92f4:	2489883a 	add	r4,r4,r18
    92f8:	200a91ba 	slli	r5,r4,6
    92fc:	84e1883a 	add	r16,r16,r19
    9300:	802091ba 	slli	r16,r16,6
    9304:	2008d6ba 	srli	r4,r4,26
    9308:	2804c03a 	cmpne	r2,r5,zero
    930c:	80c2002c 	andhi	r3,r16,2048
    9310:	1108b03a 	or	r4,r2,r4
    9314:	8120b03a 	or	r16,r16,r4
    9318:	18007026 	beq	r3,zero,94dc <__mulsf3+0x3d4>
    931c:	8004d07a 	srli	r2,r16,1
    9320:	8400004c 	andi	r16,r16,1
    9324:	1420b03a 	or	r16,r2,r16
    9328:	e0c01fc4 	addi	r3,fp,127
    932c:	00c0470e 	bge	zero,r3,944c <__mulsf3+0x344>
    9330:	808001cc 	andi	r2,r16,7
    9334:	10000426 	beq	r2,zero,9348 <__mulsf3+0x240>
    9338:	808003cc 	andi	r2,r16,15
    933c:	10800120 	cmpeqi	r2,r2,4
    9340:	1000011e 	bne	r2,zero,9348 <__mulsf3+0x240>
    9344:	84000104 	addi	r16,r16,4
    9348:	8082002c 	andhi	r2,r16,2048
    934c:	10000426 	beq	r2,zero,9360 <__mulsf3+0x258>
    9350:	00be0034 	movhi	r2,63488
    9354:	10bfffc4 	addi	r2,r2,-1
    9358:	80a0703a 	and	r16,r16,r2
    935c:	e0c02004 	addi	r3,fp,128
    9360:	18803fc8 	cmpgei	r2,r3,255
    9364:	103fc41e 	bne	r2,zero,9278 <__mulsf3+0x170>
    9368:	802091ba 	slli	r16,r16,6
    936c:	8008d27a 	srli	r4,r16,9
    9370:	003fb006 	br	9234 <__mulsf3+0x12c>
    9374:	9800281e 	bne	r19,zero,9418 <__mulsf3+0x310>
    9378:	94800054 	ori	r18,r18,1
    937c:	00c00044 	movi	r3,1
    9380:	003f8806 	br	91a4 <__mulsf3+0x9c>
    9384:	8000191e 	bne	r16,zero,93ec <__mulsf3+0x2e4>
    9388:	04800104 	movi	r18,4
    938c:	0023883a 	mov	r17,zero
    9390:	05000044 	movi	r20,1
    9394:	003f7506 	br	916c <__mulsf3+0x64>
    9398:	8000101e 	bne	r16,zero,93dc <__mulsf3+0x2d4>
    939c:	04800204 	movi	r18,8
    93a0:	04403fc4 	movi	r17,255
    93a4:	05000084 	movi	r20,2
    93a8:	003f7006 	br	916c <__mulsf3+0x64>
    93ac:	8c403fc4 	addi	r17,r17,255
    93b0:	9800071e 	bne	r19,zero,93d0 <__mulsf3+0x2c8>
    93b4:	94800094 	ori	r18,r18,2
    93b8:	00c00084 	movi	r3,2
    93bc:	003f7906 	br	91a4 <__mulsf3+0x9c>
    93c0:	a08000a0 	cmpeqi	r2,r20,2
    93c4:	b02b883a 	mov	r21,r22
    93c8:	103f9426 	beq	r2,zero,921c <__mulsf3+0x114>
    93cc:	003faa06 	br	9278 <__mulsf3+0x170>
    93d0:	948000d4 	ori	r18,r18,3
    93d4:	00c000c4 	movi	r3,3
    93d8:	003f7206 	br	91a4 <__mulsf3+0x9c>
    93dc:	04800304 	movi	r18,12
    93e0:	04403fc4 	movi	r17,255
    93e4:	050000c4 	movi	r20,3
    93e8:	003f6006 	br	916c <__mulsf3+0x64>
    93ec:	8009883a 	mov	r4,r16
    93f0:	d9400015 	stw	r5,0(sp)
    93f4:	000c5c00 	call	c5c0 <__clzsi2>
    93f8:	10fffec4 	addi	r3,r2,-5
    93fc:	047fe284 	movi	r17,-118
    9400:	80e0983a 	sll	r16,r16,r3
    9404:	d9400017 	ldw	r5,0(sp)
    9408:	88a3c83a 	sub	r17,r17,r2
    940c:	0025883a 	mov	r18,zero
    9410:	0029883a 	mov	r20,zero
    9414:	003f5506 	br	916c <__mulsf3+0x64>
    9418:	9809883a 	mov	r4,r19
    941c:	000c5c00 	call	c5c0 <__clzsi2>
    9420:	10fffec4 	addi	r3,r2,-5
    9424:	88a3c83a 	sub	r17,r17,r2
    9428:	98e6983a 	sll	r19,r19,r3
    942c:	8c7fe284 	addi	r17,r17,-118
    9430:	0007883a 	mov	r3,zero
    9434:	003f5b06 	br	91a4 <__mulsf3+0x9c>
    9438:	01002034 	movhi	r4,128
    943c:	002b883a 	mov	r21,zero
    9440:	213fffc4 	addi	r4,r4,-1
    9444:	00ffffc4 	movi	r3,-1
    9448:	003f7a06 	br	9234 <__mulsf3+0x12c>
    944c:	00800044 	movi	r2,1
    9450:	10c7c83a 	sub	r3,r2,r3
    9454:	18800708 	cmpgei	r2,r3,28
    9458:	103f741e 	bne	r2,zero,922c <__mulsf3+0x124>
    945c:	e1002784 	addi	r4,fp,158
    9460:	8108983a 	sll	r4,r16,r4
    9464:	80e0d83a 	srl	r16,r16,r3
    9468:	2008c03a 	cmpne	r4,r4,zero
    946c:	8120b03a 	or	r16,r16,r4
    9470:	808001cc 	andi	r2,r16,7
    9474:	10000426 	beq	r2,zero,9488 <__mulsf3+0x380>
    9478:	808003cc 	andi	r2,r16,15
    947c:	10800120 	cmpeqi	r2,r2,4
    9480:	1000011e 	bne	r2,zero,9488 <__mulsf3+0x380>
    9484:	84000104 	addi	r16,r16,4
    9488:	8081002c 	andhi	r2,r16,1024
    948c:	10001526 	beq	r2,zero,94e4 <__mulsf3+0x3dc>
    9490:	00c00044 	movi	r3,1
    9494:	0009883a 	mov	r4,zero
    9498:	003f6606 	br	9234 <__mulsf3+0x12c>
    949c:	8080102c 	andhi	r2,r16,64
    94a0:	10000826 	beq	r2,zero,94c4 <__mulsf3+0x3bc>
    94a4:	9880102c 	andhi	r2,r19,64
    94a8:	1000061e 	bne	r2,zero,94c4 <__mulsf3+0x3bc>
    94ac:	00802034 	movhi	r2,128
    94b0:	99001034 	orhi	r4,r19,64
    94b4:	10bfffc4 	addi	r2,r2,-1
    94b8:	2088703a 	and	r4,r4,r2
    94bc:	b82b883a 	mov	r21,r23
    94c0:	003fe006 	br	9444 <__mulsf3+0x33c>
    94c4:	00802034 	movhi	r2,128
    94c8:	81001034 	orhi	r4,r16,64
    94cc:	10bfffc4 	addi	r2,r2,-1
    94d0:	2088703a 	and	r4,r4,r2
    94d4:	b02b883a 	mov	r21,r22
    94d8:	003fda06 	br	9444 <__mulsf3+0x33c>
    94dc:	8839883a 	mov	fp,r17
    94e0:	003f9106 	br	9328 <__mulsf3+0x220>
    94e4:	802091ba 	slli	r16,r16,6
    94e8:	0007883a 	mov	r3,zero
    94ec:	8008d27a 	srli	r4,r16,9
    94f0:	003f5006 	br	9234 <__mulsf3+0x12c>
    94f4:	00802034 	movhi	r2,128
    94f8:	81001034 	orhi	r4,r16,64
    94fc:	10bfffc4 	addi	r2,r2,-1
    9500:	2088703a 	and	r4,r4,r2
    9504:	003fcf06 	br	9444 <__mulsf3+0x33c>

00009508 <__subsf3>:
    9508:	2804d5fa 	srli	r2,r5,23
    950c:	2006d5fa 	srli	r3,r4,23
    9510:	200cd7fa 	srli	r6,r4,31
    9514:	01c02034 	movhi	r7,128
    9518:	defffc04 	addi	sp,sp,-16
    951c:	39ffffc4 	addi	r7,r7,-1
    9520:	12803fcc 	andi	r10,r2,255
    9524:	3908703a 	and	r4,r7,r4
    9528:	dc800215 	stw	r18,8(sp)
    952c:	394e703a 	and	r7,r7,r5
    9530:	dc400115 	stw	r17,4(sp)
    9534:	1c803fcc 	andi	r18,r3,255
    9538:	dfc00315 	stw	ra,12(sp)
    953c:	dc000015 	stw	r16,0(sp)
    9540:	50803fd8 	cmpnei	r2,r10,255
    9544:	3023883a 	mov	r17,r6
    9548:	201090fa 	slli	r8,r4,3
    954c:	280ad7fa 	srli	r5,r5,31
    9550:	381290fa 	slli	r9,r7,3
    9554:	2019883a 	mov	r12,r4
    9558:	31803fcc 	andi	r6,r6,255
    955c:	9297c83a 	sub	r11,r18,r10
    9560:	10003f26 	beq	r2,zero,9660 <__subsf3+0x158>
    9564:	2880005c 	xori	r2,r5,1
    9568:	30804526 	beq	r6,r2,9680 <__subsf3+0x178>
    956c:	02c0310e 	bge	zero,r11,9634 <__subsf3+0x12c>
    9570:	50003f1e 	bne	r10,zero,9670 <__subsf3+0x168>
    9574:	48009526 	beq	r9,zero,97cc <__subsf3+0x2c4>
    9578:	58bfffc4 	addi	r2,r11,-1
    957c:	1000de26 	beq	r2,zero,98f8 <__subsf3+0x3f0>
    9580:	59003fe0 	cmpeqi	r4,r11,255
    9584:	20007d1e 	bne	r4,zero,977c <__subsf3+0x274>
    9588:	1017883a 	mov	r11,r2
    958c:	58800710 	cmplti	r2,r11,28
    9590:	10009a1e 	bne	r2,zero,97fc <__subsf3+0x2f4>
    9594:	01000044 	movi	r4,1
    9598:	4109c83a 	sub	r4,r8,r4
    959c:	2081002c 	andhi	r2,r4,1024
    95a0:	10006a26 	beq	r2,zero,974c <__subsf3+0x244>
    95a4:	04010034 	movhi	r16,1024
    95a8:	843fffc4 	addi	r16,r16,-1
    95ac:	2420703a 	and	r16,r4,r16
    95b0:	8009883a 	mov	r4,r16
    95b4:	000c5c00 	call	c5c0 <__clzsi2>
    95b8:	10bffec4 	addi	r2,r2,-5
    95bc:	8088983a 	sll	r4,r16,r2
    95c0:	1480840e 	bge	r2,r18,97d4 <__subsf3+0x2cc>
    95c4:	00ff0034 	movhi	r3,64512
    95c8:	18ffffc4 	addi	r3,r3,-1
    95cc:	90a5c83a 	sub	r18,r18,r2
    95d0:	20c8703a 	and	r4,r4,r3
    95d4:	208001cc 	andi	r2,r4,7
    95d8:	10000426 	beq	r2,zero,95ec <__subsf3+0xe4>
    95dc:	208003cc 	andi	r2,r4,15
    95e0:	10800120 	cmpeqi	r2,r2,4
    95e4:	1000011e 	bne	r2,zero,95ec <__subsf3+0xe4>
    95e8:	21000104 	addi	r4,r4,4
    95ec:	2081002c 	andhi	r2,r4,1024
    95f0:	10005826 	beq	r2,zero,9754 <__subsf3+0x24c>
    95f4:	90c00044 	addi	r3,r18,1
    95f8:	18803fe0 	cmpeqi	r2,r3,255
    95fc:	1000481e 	bne	r2,zero,9720 <__subsf3+0x218>
    9600:	200891ba 	slli	r4,r4,6
    9604:	2008d27a 	srli	r4,r4,9
    9608:	18803fcc 	andi	r2,r3,255
    960c:	100495fa 	slli	r2,r2,23
    9610:	880697fa 	slli	r3,r17,31
    9614:	1108b03a 	or	r4,r2,r4
    9618:	20c4b03a 	or	r2,r4,r3
    961c:	dfc00317 	ldw	ra,12(sp)
    9620:	dc800217 	ldw	r18,8(sp)
    9624:	dc400117 	ldw	r17,4(sp)
    9628:	dc000017 	ldw	r16,0(sp)
    962c:	dec00404 	addi	sp,sp,16
    9630:	f800283a 	ret
    9634:	58002726 	beq	r11,zero,96d4 <__subsf3+0x1cc>
    9638:	5497c83a 	sub	r11,r10,r18
    963c:	1023883a 	mov	r17,r2
    9640:	9000751e 	bne	r18,zero,9818 <__subsf3+0x310>
    9644:	40006026 	beq	r8,zero,97c8 <__subsf3+0x2c0>
    9648:	58bfffc4 	addi	r2,r11,-1
    964c:	1000cb26 	beq	r2,zero,997c <__subsf3+0x474>
    9650:	5ac03fe0 	cmpeqi	r11,r11,255
    9654:	5800481e 	bne	r11,zero,9778 <__subsf3+0x270>
    9658:	1017883a 	mov	r11,r2
    965c:	00007106 	br	9824 <__subsf3+0x31c>
    9660:	483fc026 	beq	r9,zero,9564 <__subsf3+0x5c>
    9664:	28803fcc 	andi	r2,r5,255
    9668:	31404b26 	beq	r6,r5,9798 <__subsf3+0x290>
    966c:	02fff10e 	bge	zero,r11,9634 <__subsf3+0x12c>
    9670:	90803fe0 	cmpeqi	r2,r18,255
    9674:	1000411e 	bne	r2,zero,977c <__subsf3+0x274>
    9678:	4a410034 	orhi	r9,r9,1024
    967c:	003fc306 	br	958c <__subsf3+0x84>
    9680:	02c0450e 	bge	zero,r11,9798 <__subsf3+0x290>
    9684:	50001f26 	beq	r10,zero,9704 <__subsf3+0x1fc>
    9688:	90803fe0 	cmpeqi	r2,r18,255
    968c:	10003b1e 	bne	r2,zero,977c <__subsf3+0x274>
    9690:	4a410034 	orhi	r9,r9,1024
    9694:	58800710 	cmplti	r2,r11,28
    9698:	1000701e 	bne	r2,zero,985c <__subsf3+0x354>
    969c:	01000044 	movi	r4,1
    96a0:	2209883a 	add	r4,r4,r8
    96a4:	2081002c 	andhi	r2,r4,1024
    96a8:	10002826 	beq	r2,zero,974c <__subsf3+0x244>
    96ac:	94800044 	addi	r18,r18,1
    96b0:	90803fe0 	cmpeqi	r2,r18,255
    96b4:	10001a1e 	bne	r2,zero,9720 <__subsf3+0x218>
    96b8:	2004d07a 	srli	r2,r4,1
    96bc:	00df8034 	movhi	r3,32256
    96c0:	18ffffc4 	addi	r3,r3,-1
    96c4:	2100004c 	andi	r4,r4,1
    96c8:	10c4703a 	and	r2,r2,r3
    96cc:	1108b03a 	or	r4,r2,r4
    96d0:	003fc006 	br	95d4 <__subsf3+0xcc>
    96d4:	90c00044 	addi	r3,r18,1
    96d8:	18c03f8c 	andi	r3,r3,254
    96dc:	1800571e 	bne	r3,zero,983c <__subsf3+0x334>
    96e0:	90007a1e 	bne	r18,zero,98cc <__subsf3+0x3c4>
    96e4:	4000a126 	beq	r8,zero,996c <__subsf3+0x464>
    96e8:	48008d26 	beq	r9,zero,9920 <__subsf3+0x418>
    96ec:	4249c83a 	sub	r4,r8,r9
    96f0:	20c1002c 	andhi	r3,r4,1024
    96f4:	1800a726 	beq	r3,zero,9994 <__subsf3+0x48c>
    96f8:	4a09c83a 	sub	r4,r9,r8
    96fc:	1023883a 	mov	r17,r2
    9700:	003fb406 	br	95d4 <__subsf3+0xcc>
    9704:	48003126 	beq	r9,zero,97cc <__subsf3+0x2c4>
    9708:	58bfffc4 	addi	r2,r11,-1
    970c:	10007526 	beq	r2,zero,98e4 <__subsf3+0x3dc>
    9710:	5ac03fe0 	cmpeqi	r11,r11,255
    9714:	5800191e 	bne	r11,zero,977c <__subsf3+0x274>
    9718:	1017883a 	mov	r11,r2
    971c:	003fdd06 	br	9694 <__subsf3+0x18c>
    9720:	00ffffc4 	movi	r3,-1
    9724:	0009883a 	mov	r4,zero
    9728:	003fb706 	br	9608 <__subsf3+0x100>
    972c:	90c00044 	addi	r3,r18,1
    9730:	19403f8c 	andi	r5,r3,254
    9734:	28005026 	beq	r5,zero,9878 <__subsf3+0x370>
    9738:	18803fe0 	cmpeqi	r2,r3,255
    973c:	103ff81e 	bne	r2,zero,9720 <__subsf3+0x218>
    9740:	4249883a 	add	r4,r8,r9
    9744:	2008d07a 	srli	r4,r4,1
    9748:	1825883a 	mov	r18,r3
    974c:	208001cc 	andi	r2,r4,7
    9750:	103fa21e 	bne	r2,zero,95dc <__subsf3+0xd4>
    9754:	2018d0fa 	srli	r12,r4,3
    9758:	90803fe0 	cmpeqi	r2,r18,255
    975c:	1000071e 	bne	r2,zero,977c <__subsf3+0x274>
    9760:	01002034 	movhi	r4,128
    9764:	213fffc4 	addi	r4,r4,-1
    9768:	6108703a 	and	r4,r12,r4
    976c:	9007883a 	mov	r3,r18
    9770:	003fa506 	br	9608 <__subsf3+0x100>
    9774:	40006c1e 	bne	r8,zero,9928 <__subsf3+0x420>
    9778:	3819883a 	mov	r12,r7
    977c:	603fe826 	beq	r12,zero,9720 <__subsf3+0x218>
    9780:	00802034 	movhi	r2,128
    9784:	61001034 	orhi	r4,r12,64
    9788:	10bfffc4 	addi	r2,r2,-1
    978c:	2088703a 	and	r4,r4,r2
    9790:	00ffffc4 	movi	r3,-1
    9794:	003f9c06 	br	9608 <__subsf3+0x100>
    9798:	583fe426 	beq	r11,zero,972c <__subsf3+0x224>
    979c:	5497c83a 	sub	r11,r10,r18
    97a0:	90004026 	beq	r18,zero,98a4 <__subsf3+0x39c>
    97a4:	50803fe0 	cmpeqi	r2,r10,255
    97a8:	103ff31e 	bne	r2,zero,9778 <__subsf3+0x270>
    97ac:	42010034 	orhi	r8,r8,1024
    97b0:	58800710 	cmplti	r2,r11,28
    97b4:	1000641e 	bne	r2,zero,9948 <__subsf3+0x440>
    97b8:	01000044 	movi	r4,1
    97bc:	2249883a 	add	r4,r4,r9
    97c0:	5025883a 	mov	r18,r10
    97c4:	003fb706 	br	96a4 <__subsf3+0x19c>
    97c8:	3819883a 	mov	r12,r7
    97cc:	5825883a 	mov	r18,r11
    97d0:	003fe106 	br	9758 <__subsf3+0x250>
    97d4:	1485c83a 	sub	r2,r2,r18
    97d8:	14000044 	addi	r16,r2,1
    97dc:	00800804 	movi	r2,32
    97e0:	1405c83a 	sub	r2,r2,r16
    97e4:	2084983a 	sll	r2,r4,r2
    97e8:	2408d83a 	srl	r4,r4,r16
    97ec:	0025883a 	mov	r18,zero
    97f0:	1004c03a 	cmpne	r2,r2,zero
    97f4:	1108b03a 	or	r4,r2,r4
    97f8:	003f7606 	br	95d4 <__subsf3+0xcc>
    97fc:	01000804 	movi	r4,32
    9800:	22c9c83a 	sub	r4,r4,r11
    9804:	4908983a 	sll	r4,r9,r4
    9808:	4ad2d83a 	srl	r9,r9,r11
    980c:	2008c03a 	cmpne	r4,r4,zero
    9810:	2248b03a 	or	r4,r4,r9
    9814:	003f6006 	br	9598 <__subsf3+0x90>
    9818:	50803fe0 	cmpeqi	r2,r10,255
    981c:	103fd61e 	bne	r2,zero,9778 <__subsf3+0x270>
    9820:	42010034 	orhi	r8,r8,1024
    9824:	58800710 	cmplti	r2,r11,28
    9828:	1000361e 	bne	r2,zero,9904 <__subsf3+0x3fc>
    982c:	01000044 	movi	r4,1
    9830:	4909c83a 	sub	r4,r9,r4
    9834:	5025883a 	mov	r18,r10
    9838:	003f5806 	br	959c <__subsf3+0x94>
    983c:	4261c83a 	sub	r16,r8,r9
    9840:	80c1002c 	andhi	r3,r16,1024
    9844:	18001e1e 	bne	r3,zero,98c0 <__subsf3+0x3b8>
    9848:	803f591e 	bne	r16,zero,95b0 <__subsf3+0xa8>
    984c:	0023883a 	mov	r17,zero
    9850:	0007883a 	mov	r3,zero
    9854:	0009883a 	mov	r4,zero
    9858:	003f6b06 	br	9608 <__subsf3+0x100>
    985c:	01000804 	movi	r4,32
    9860:	22c9c83a 	sub	r4,r4,r11
    9864:	4908983a 	sll	r4,r9,r4
    9868:	4ad2d83a 	srl	r9,r9,r11
    986c:	2008c03a 	cmpne	r4,r4,zero
    9870:	2248b03a 	or	r4,r4,r9
    9874:	003f8a06 	br	96a0 <__subsf3+0x198>
    9878:	903fbe1e 	bne	r18,zero,9774 <__subsf3+0x26c>
    987c:	40004226 	beq	r8,zero,9988 <__subsf3+0x480>
    9880:	48002726 	beq	r9,zero,9920 <__subsf3+0x418>
    9884:	4249883a 	add	r4,r8,r9
    9888:	2081002c 	andhi	r2,r4,1024
    988c:	103faf26 	beq	r2,zero,974c <__subsf3+0x244>
    9890:	00bf0034 	movhi	r2,64512
    9894:	10bfffc4 	addi	r2,r2,-1
    9898:	2088703a 	and	r4,r4,r2
    989c:	04800044 	movi	r18,1
    98a0:	003faa06 	br	974c <__subsf3+0x244>
    98a4:	403fc826 	beq	r8,zero,97c8 <__subsf3+0x2c0>
    98a8:	58bfffc4 	addi	r2,r11,-1
    98ac:	10000d26 	beq	r2,zero,98e4 <__subsf3+0x3dc>
    98b0:	5ac03fe0 	cmpeqi	r11,r11,255
    98b4:	583fb01e 	bne	r11,zero,9778 <__subsf3+0x270>
    98b8:	1017883a 	mov	r11,r2
    98bc:	003fbc06 	br	97b0 <__subsf3+0x2a8>
    98c0:	4a21c83a 	sub	r16,r9,r8
    98c4:	1023883a 	mov	r17,r2
    98c8:	003f3906 	br	95b0 <__subsf3+0xa8>
    98cc:	4000161e 	bne	r8,zero,9928 <__subsf3+0x420>
    98d0:	48001a1e 	bne	r9,zero,993c <__subsf3+0x434>
    98d4:	01002034 	movhi	r4,128
    98d8:	0023883a 	mov	r17,zero
    98dc:	213fffc4 	addi	r4,r4,-1
    98e0:	003fab06 	br	9790 <__subsf3+0x288>
    98e4:	4249883a 	add	r4,r8,r9
    98e8:	2081002c 	andhi	r2,r4,1024
    98ec:	10001d26 	beq	r2,zero,9964 <__subsf3+0x45c>
    98f0:	04800084 	movi	r18,2
    98f4:	003f7006 	br	96b8 <__subsf3+0x1b0>
    98f8:	4249c83a 	sub	r4,r8,r9
    98fc:	04800044 	movi	r18,1
    9900:	003f2606 	br	959c <__subsf3+0x94>
    9904:	00c00804 	movi	r3,32
    9908:	1ac7c83a 	sub	r3,r3,r11
    990c:	40c6983a 	sll	r3,r8,r3
    9910:	42d0d83a 	srl	r8,r8,r11
    9914:	1808c03a 	cmpne	r4,r3,zero
    9918:	2208b03a 	or	r4,r4,r8
    991c:	003fc406 	br	9830 <__subsf3+0x328>
    9920:	0007883a 	mov	r3,zero
    9924:	003f3806 	br	9608 <__subsf3+0x100>
    9928:	483f9426 	beq	r9,zero,977c <__subsf3+0x274>
    992c:	2100102c 	andhi	r4,r4,64
    9930:	203f9226 	beq	r4,zero,977c <__subsf3+0x274>
    9934:	38c0102c 	andhi	r3,r7,64
    9938:	183f901e 	bne	r3,zero,977c <__subsf3+0x274>
    993c:	1023883a 	mov	r17,r2
    9940:	3819883a 	mov	r12,r7
    9944:	003f8d06 	br	977c <__subsf3+0x274>
    9948:	01000804 	movi	r4,32
    994c:	22c9c83a 	sub	r4,r4,r11
    9950:	4106983a 	sll	r3,r8,r4
    9954:	42d0d83a 	srl	r8,r8,r11
    9958:	1808c03a 	cmpne	r4,r3,zero
    995c:	2208b03a 	or	r4,r4,r8
    9960:	003f9606 	br	97bc <__subsf3+0x2b4>
    9964:	04800044 	movi	r18,1
    9968:	003f7806 	br	974c <__subsf3+0x244>
    996c:	483fb726 	beq	r9,zero,984c <__subsf3+0x344>
    9970:	1023883a 	mov	r17,r2
    9974:	3809883a 	mov	r4,r7
    9978:	003f2306 	br	9608 <__subsf3+0x100>
    997c:	4a09c83a 	sub	r4,r9,r8
    9980:	04800044 	movi	r18,1
    9984:	003f0506 	br	959c <__subsf3+0x94>
    9988:	3809883a 	mov	r4,r7
    998c:	0007883a 	mov	r3,zero
    9990:	003f1d06 	br	9608 <__subsf3+0x100>
    9994:	203fad26 	beq	r4,zero,984c <__subsf3+0x344>
    9998:	003f6c06 	br	974c <__subsf3+0x244>

0000999c <__fixsfsi>:
    999c:	200ad5fa 	srli	r5,r4,23
    99a0:	00c02034 	movhi	r3,128
    99a4:	18ffffc4 	addi	r3,r3,-1
    99a8:	29403fcc 	andi	r5,r5,255
    99ac:	29801fd0 	cmplti	r6,r5,127
    99b0:	200ed7fa 	srli	r7,r4,31
    99b4:	1906703a 	and	r3,r3,r4
    99b8:	3000061e 	bne	r6,zero,99d4 <__fixsfsi+0x38>
    99bc:	28802790 	cmplti	r2,r5,158
    99c0:	1000061e 	bne	r2,zero,99dc <__fixsfsi+0x40>
    99c4:	00a00034 	movhi	r2,32768
    99c8:	10bfffc4 	addi	r2,r2,-1
    99cc:	3885883a 	add	r2,r7,r2
    99d0:	f800283a 	ret
    99d4:	0005883a 	mov	r2,zero
    99d8:	f800283a 	ret
    99dc:	28802590 	cmplti	r2,r5,150
    99e0:	18c02034 	orhi	r3,r3,128
    99e4:	1000051e 	bne	r2,zero,99fc <__fixsfsi+0x60>
    99e8:	28bfda84 	addi	r2,r5,-150
    99ec:	1884983a 	sll	r2,r3,r2
    99f0:	383ff926 	beq	r7,zero,99d8 <__fixsfsi+0x3c>
    99f4:	0085c83a 	sub	r2,zero,r2
    99f8:	f800283a 	ret
    99fc:	00802584 	movi	r2,150
    9a00:	1145c83a 	sub	r2,r2,r5
    9a04:	1884d83a 	srl	r2,r3,r2
    9a08:	003ff906 	br	99f0 <__fixsfsi+0x54>

00009a0c <__floatsisf>:
    9a0c:	defffd04 	addi	sp,sp,-12
    9a10:	dfc00215 	stw	ra,8(sp)
    9a14:	dc400115 	stw	r17,4(sp)
    9a18:	dc000015 	stw	r16,0(sp)
    9a1c:	20001226 	beq	r4,zero,9a68 <__floatsisf+0x5c>
    9a20:	2022d7fa 	srli	r17,r4,31
    9a24:	2021883a 	mov	r16,r4
    9a28:	20003816 	blt	r4,zero,9b0c <__floatsisf+0x100>
    9a2c:	8009883a 	mov	r4,r16
    9a30:	000c5c00 	call	c5c0 <__clzsi2>
    9a34:	1009883a 	mov	r4,r2
    9a38:	00802784 	movi	r2,158
    9a3c:	1105c83a 	sub	r2,r2,r4
    9a40:	10c025c8 	cmpgei	r3,r2,151
    9a44:	1800151e 	bne	r3,zero,9a9c <__floatsisf+0x90>
    9a48:	20c00248 	cmpgei	r3,r4,9
    9a4c:	18003126 	beq	r3,zero,9b14 <__floatsisf+0x108>
    9a50:	213ffe04 	addi	r4,r4,-8
    9a54:	8120983a 	sll	r16,r16,r4
    9a58:	00c02034 	movhi	r3,128
    9a5c:	18ffffc4 	addi	r3,r3,-1
    9a60:	80e0703a 	and	r16,r16,r3
    9a64:	00000306 	br	9a74 <__floatsisf+0x68>
    9a68:	0023883a 	mov	r17,zero
    9a6c:	0005883a 	mov	r2,zero
    9a70:	0021883a 	mov	r16,zero
    9a74:	10803fcc 	andi	r2,r2,255
    9a78:	100495fa 	slli	r2,r2,23
    9a7c:	882297fa 	slli	r17,r17,31
    9a80:	1404b03a 	or	r2,r2,r16
    9a84:	1444b03a 	or	r2,r2,r17
    9a88:	dfc00217 	ldw	ra,8(sp)
    9a8c:	dc400117 	ldw	r17,4(sp)
    9a90:	dc000017 	ldw	r16,0(sp)
    9a94:	dec00304 	addi	sp,sp,12
    9a98:	f800283a 	ret
    9a9c:	10c02690 	cmplti	r3,r2,154
    9aa0:	1800071e 	bne	r3,zero,9ac0 <__floatsisf+0xb4>
    9aa4:	20c006c4 	addi	r3,r4,27
    9aa8:	01400144 	movi	r5,5
    9aac:	80c6983a 	sll	r3,r16,r3
    9ab0:	290bc83a 	sub	r5,r5,r4
    9ab4:	814ad83a 	srl	r5,r16,r5
    9ab8:	1806c03a 	cmpne	r3,r3,zero
    9abc:	28e0b03a 	or	r16,r5,r3
    9ac0:	20c00188 	cmpgei	r3,r4,6
    9ac4:	1800171e 	bne	r3,zero,9b24 <__floatsisf+0x118>
    9ac8:	00ff0034 	movhi	r3,64512
    9acc:	18ffffc4 	addi	r3,r3,-1
    9ad0:	818001cc 	andi	r6,r16,7
    9ad4:	80ca703a 	and	r5,r16,r3
    9ad8:	30000926 	beq	r6,zero,9b00 <__floatsisf+0xf4>
    9adc:	818003cc 	andi	r6,r16,15
    9ae0:	31800120 	cmpeqi	r6,r6,4
    9ae4:	3000061e 	bne	r6,zero,9b00 <__floatsisf+0xf4>
    9ae8:	29400104 	addi	r5,r5,4
    9aec:	2981002c 	andhi	r6,r5,1024
    9af0:	30000326 	beq	r6,zero,9b00 <__floatsisf+0xf4>
    9af4:	28ca703a 	and	r5,r5,r3
    9af8:	00c027c4 	movi	r3,159
    9afc:	1905c83a 	sub	r2,r3,r4
    9b00:	282091ba 	slli	r16,r5,6
    9b04:	8020d27a 	srli	r16,r16,9
    9b08:	003fda06 	br	9a74 <__floatsisf+0x68>
    9b0c:	0121c83a 	sub	r16,zero,r4
    9b10:	003fc606 	br	9a2c <__floatsisf+0x20>
    9b14:	01002034 	movhi	r4,128
    9b18:	213fffc4 	addi	r4,r4,-1
    9b1c:	8120703a 	and	r16,r16,r4
    9b20:	003fd406 	br	9a74 <__floatsisf+0x68>
    9b24:	20fffec4 	addi	r3,r4,-5
    9b28:	80e0983a 	sll	r16,r16,r3
    9b2c:	003fe606 	br	9ac8 <__floatsisf+0xbc>

00009b30 <__floatunsisf>:
    9b30:	defffe04 	addi	sp,sp,-8
    9b34:	dfc00115 	stw	ra,4(sp)
    9b38:	dc000015 	stw	r16,0(sp)
    9b3c:	20000f26 	beq	r4,zero,9b7c <__floatunsisf+0x4c>
    9b40:	2021883a 	mov	r16,r4
    9b44:	000c5c00 	call	c5c0 <__clzsi2>
    9b48:	1009883a 	mov	r4,r2
    9b4c:	00802784 	movi	r2,158
    9b50:	1105c83a 	sub	r2,r2,r4
    9b54:	10c025c8 	cmpgei	r3,r2,151
    9b58:	1800111e 	bne	r3,zero,9ba0 <__floatunsisf+0x70>
    9b5c:	20c00248 	cmpgei	r3,r4,9
    9b60:	18002b26 	beq	r3,zero,9c10 <__floatunsisf+0xe0>
    9b64:	213ffe04 	addi	r4,r4,-8
    9b68:	8120983a 	sll	r16,r16,r4
    9b6c:	00c02034 	movhi	r3,128
    9b70:	18ffffc4 	addi	r3,r3,-1
    9b74:	80e0703a 	and	r16,r16,r3
    9b78:	00000206 	br	9b84 <__floatunsisf+0x54>
    9b7c:	0005883a 	mov	r2,zero
    9b80:	0021883a 	mov	r16,zero
    9b84:	10803fcc 	andi	r2,r2,255
    9b88:	100495fa 	slli	r2,r2,23
    9b8c:	1404b03a 	or	r2,r2,r16
    9b90:	dfc00117 	ldw	ra,4(sp)
    9b94:	dc000017 	ldw	r16,0(sp)
    9b98:	dec00204 	addi	sp,sp,8
    9b9c:	f800283a 	ret
    9ba0:	10c02690 	cmplti	r3,r2,154
    9ba4:	1800071e 	bne	r3,zero,9bc4 <__floatunsisf+0x94>
    9ba8:	20c006c4 	addi	r3,r4,27
    9bac:	80ca983a 	sll	r5,r16,r3
    9bb0:	00c00144 	movi	r3,5
    9bb4:	1907c83a 	sub	r3,r3,r4
    9bb8:	80e0d83a 	srl	r16,r16,r3
    9bbc:	2806c03a 	cmpne	r3,r5,zero
    9bc0:	1c20b03a 	or	r16,r3,r16
    9bc4:	20c00188 	cmpgei	r3,r4,6
    9bc8:	1800151e 	bne	r3,zero,9c20 <__floatunsisf+0xf0>
    9bcc:	00ff0034 	movhi	r3,64512
    9bd0:	18ffffc4 	addi	r3,r3,-1
    9bd4:	818001cc 	andi	r6,r16,7
    9bd8:	80ca703a 	and	r5,r16,r3
    9bdc:	30000926 	beq	r6,zero,9c04 <__floatunsisf+0xd4>
    9be0:	840003cc 	andi	r16,r16,15
    9be4:	84000120 	cmpeqi	r16,r16,4
    9be8:	8000061e 	bne	r16,zero,9c04 <__floatunsisf+0xd4>
    9bec:	29400104 	addi	r5,r5,4
    9bf0:	2981002c 	andhi	r6,r5,1024
    9bf4:	30000326 	beq	r6,zero,9c04 <__floatunsisf+0xd4>
    9bf8:	28ca703a 	and	r5,r5,r3
    9bfc:	00c027c4 	movi	r3,159
    9c00:	1905c83a 	sub	r2,r3,r4
    9c04:	282091ba 	slli	r16,r5,6
    9c08:	8020d27a 	srli	r16,r16,9
    9c0c:	003fdd06 	br	9b84 <__floatunsisf+0x54>
    9c10:	01002034 	movhi	r4,128
    9c14:	213fffc4 	addi	r4,r4,-1
    9c18:	8120703a 	and	r16,r16,r4
    9c1c:	003fd906 	br	9b84 <__floatunsisf+0x54>
    9c20:	20fffec4 	addi	r3,r4,-5
    9c24:	80e0983a 	sll	r16,r16,r3
    9c28:	003fe806 	br	9bcc <__floatunsisf+0x9c>

00009c2c <__adddf3>:
    9c2c:	02000434 	movhi	r8,16
    9c30:	423fffc4 	addi	r8,r8,-1
    9c34:	2806d53a 	srli	r3,r5,20
    9c38:	3804d53a 	srli	r2,r7,20
    9c3c:	2a14703a 	and	r10,r5,r8
    9c40:	3a12703a 	and	r9,r7,r8
    9c44:	280ad7fa 	srli	r5,r5,31
    9c48:	501490fa 	slli	r10,r10,3
    9c4c:	2018d77a 	srli	r12,r4,29
    9c50:	481290fa 	slli	r9,r9,3
    9c54:	3016d77a 	srli	r11,r6,29
    9c58:	380ed7fa 	srli	r7,r7,31
    9c5c:	defffb04 	addi	sp,sp,-20
    9c60:	dc800215 	stw	r18,8(sp)
    9c64:	dc000015 	stw	r16,0(sp)
    9c68:	1c81ffcc 	andi	r18,r3,2047
    9c6c:	1081ffcc 	andi	r2,r2,2047
    9c70:	dfc00415 	stw	ra,16(sp)
    9c74:	dcc00315 	stw	r19,12(sp)
    9c78:	dc400115 	stw	r17,4(sp)
    9c7c:	201c90fa 	slli	r14,r4,3
    9c80:	301a90fa 	slli	r13,r6,3
    9c84:	2821883a 	mov	r16,r5
    9c88:	6294b03a 	or	r10,r12,r10
    9c8c:	5a52b03a 	or	r9,r11,r9
    9c90:	9087c83a 	sub	r3,r18,r2
    9c94:	29c06126 	beq	r5,r7,9e1c <__adddf3+0x1f0>
    9c98:	00c0550e 	bge	zero,r3,9df0 <__adddf3+0x1c4>
    9c9c:	10007326 	beq	r2,zero,9e6c <__adddf3+0x240>
    9ca0:	9081ffd8 	cmpnei	r2,r18,2047
    9ca4:	1000b826 	beq	r2,zero,9f88 <__adddf3+0x35c>
    9ca8:	4a402034 	orhi	r9,r9,128
    9cac:	18800e48 	cmpgei	r2,r3,57
    9cb0:	1000ee1e 	bne	r2,zero,a06c <__adddf3+0x440>
    9cb4:	18800808 	cmpgei	r2,r3,32
    9cb8:	10012d1e 	bne	r2,zero,a170 <__adddf3+0x544>
    9cbc:	00800804 	movi	r2,32
    9cc0:	10c5c83a 	sub	r2,r2,r3
    9cc4:	68c8d83a 	srl	r4,r13,r3
    9cc8:	48a2983a 	sll	r17,r9,r2
    9ccc:	689a983a 	sll	r13,r13,r2
    9cd0:	48c6d83a 	srl	r3,r9,r3
    9cd4:	8922b03a 	or	r17,r17,r4
    9cd8:	681ac03a 	cmpne	r13,r13,zero
    9cdc:	8b62b03a 	or	r17,r17,r13
    9ce0:	50d5c83a 	sub	r10,r10,r3
    9ce4:	7463c83a 	sub	r17,r14,r17
    9ce8:	7451803a 	cmpltu	r8,r14,r17
    9cec:	5211c83a 	sub	r8,r10,r8
    9cf0:	4080202c 	andhi	r2,r8,128
    9cf4:	10008826 	beq	r2,zero,9f18 <__adddf3+0x2ec>
    9cf8:	02402034 	movhi	r9,128
    9cfc:	4a7fffc4 	addi	r9,r9,-1
    9d00:	4266703a 	and	r19,r8,r9
    9d04:	9800ae26 	beq	r19,zero,9fc0 <__adddf3+0x394>
    9d08:	9809883a 	mov	r4,r19
    9d0c:	000c5c00 	call	c5c0 <__clzsi2>
    9d10:	10fffe04 	addi	r3,r2,-8
    9d14:	02000804 	movi	r8,32
    9d18:	40d1c83a 	sub	r8,r8,r3
    9d1c:	8a10d83a 	srl	r8,r17,r8
    9d20:	98d2983a 	sll	r9,r19,r3
    9d24:	88e2983a 	sll	r17,r17,r3
    9d28:	4250b03a 	or	r8,r8,r9
    9d2c:	1c80ad16 	blt	r3,r18,9fe4 <__adddf3+0x3b8>
    9d30:	1c87c83a 	sub	r3,r3,r18
    9d34:	19000044 	addi	r4,r3,1
    9d38:	20800808 	cmpgei	r2,r4,32
    9d3c:	10006a1e 	bne	r2,zero,9ee8 <__adddf3+0x2bc>
    9d40:	00800804 	movi	r2,32
    9d44:	1105c83a 	sub	r2,r2,r4
    9d48:	8906d83a 	srl	r3,r17,r4
    9d4c:	88a2983a 	sll	r17,r17,r2
    9d50:	4084983a 	sll	r2,r8,r2
    9d54:	4110d83a 	srl	r8,r8,r4
    9d58:	8822c03a 	cmpne	r17,r17,zero
    9d5c:	10c4b03a 	or	r2,r2,r3
    9d60:	1462b03a 	or	r17,r2,r17
    9d64:	0025883a 	mov	r18,zero
    9d68:	888001cc 	andi	r2,r17,7
    9d6c:	10000726 	beq	r2,zero,9d8c <__adddf3+0x160>
    9d70:	888003cc 	andi	r2,r17,15
    9d74:	10800120 	cmpeqi	r2,r2,4
    9d78:	1000041e 	bne	r2,zero,9d8c <__adddf3+0x160>
    9d7c:	88c00104 	addi	r3,r17,4
    9d80:	1c63803a 	cmpltu	r17,r3,r17
    9d84:	4451883a 	add	r8,r8,r17
    9d88:	1823883a 	mov	r17,r3
    9d8c:	4080202c 	andhi	r2,r8,128
    9d90:	10006326 	beq	r2,zero,9f20 <__adddf3+0x2f4>
    9d94:	90c00044 	addi	r3,r18,1
    9d98:	1881ffe0 	cmpeqi	r2,r3,2047
    9d9c:	18c1ffcc 	andi	r3,r3,2047
    9da0:	1000751e 	bne	r2,zero,9f78 <__adddf3+0x34c>
    9da4:	00bfe034 	movhi	r2,65408
    9da8:	10bfffc4 	addi	r2,r2,-1
    9dac:	4090703a 	and	r8,r8,r2
    9db0:	4004977a 	slli	r2,r8,29
    9db4:	4010927a 	slli	r8,r8,9
    9db8:	8822d0fa 	srli	r17,r17,3
    9dbc:	4010d33a 	srli	r8,r8,12
    9dc0:	1444b03a 	or	r2,r2,r17
    9dc4:	1806953a 	slli	r3,r3,20
    9dc8:	802097fa 	slli	r16,r16,31
    9dcc:	1a06b03a 	or	r3,r3,r8
    9dd0:	1c06b03a 	or	r3,r3,r16
    9dd4:	dfc00417 	ldw	ra,16(sp)
    9dd8:	dcc00317 	ldw	r19,12(sp)
    9ddc:	dc800217 	ldw	r18,8(sp)
    9de0:	dc400117 	ldw	r17,4(sp)
    9de4:	dc000017 	ldw	r16,0(sp)
    9de8:	dec00504 	addi	sp,sp,20
    9dec:	f800283a 	ret
    9df0:	18002626 	beq	r3,zero,9e8c <__adddf3+0x260>
    9df4:	1487c83a 	sub	r3,r2,r18
    9df8:	9000b51e 	bne	r18,zero,a0d0 <__adddf3+0x4a4>
    9dfc:	5388b03a 	or	r4,r10,r14
    9e00:	20010f26 	beq	r4,zero,a240 <__adddf3+0x614>
    9e04:	193fffc4 	addi	r4,r3,-1
    9e08:	20016126 	beq	r4,zero,a390 <__adddf3+0x764>
    9e0c:	18c1ffd8 	cmpnei	r3,r3,2047
    9e10:	18012e26 	beq	r3,zero,a2cc <__adddf3+0x6a0>
    9e14:	2007883a 	mov	r3,r4
    9e18:	0000b006 	br	a0dc <__adddf3+0x4b0>
    9e1c:	00c0760e 	bge	zero,r3,9ff8 <__adddf3+0x3cc>
    9e20:	10002926 	beq	r2,zero,9ec8 <__adddf3+0x29c>
    9e24:	9081ffd8 	cmpnei	r2,r18,2047
    9e28:	10012126 	beq	r2,zero,a2b0 <__adddf3+0x684>
    9e2c:	4a402034 	orhi	r9,r9,128
    9e30:	18800e48 	cmpgei	r2,r3,57
    9e34:	1000461e 	bne	r2,zero,9f50 <__adddf3+0x324>
    9e38:	18800808 	cmpgei	r2,r3,32
    9e3c:	1000e326 	beq	r2,zero,a1cc <__adddf3+0x5a0>
    9e40:	1c7ff804 	addi	r17,r3,-32
    9e44:	19000820 	cmpeqi	r4,r3,32
    9e48:	4c44d83a 	srl	r2,r9,r17
    9e4c:	2000041e 	bne	r4,zero,9e60 <__adddf3+0x234>
    9e50:	01001004 	movi	r4,64
    9e54:	20c7c83a 	sub	r3,r4,r3
    9e58:	48d2983a 	sll	r9,r9,r3
    9e5c:	6a5ab03a 	or	r13,r13,r9
    9e60:	6822c03a 	cmpne	r17,r13,zero
    9e64:	88a2b03a 	or	r17,r17,r2
    9e68:	00003b06 	br	9f58 <__adddf3+0x32c>
    9e6c:	4b44b03a 	or	r2,r9,r13
    9e70:	10008126 	beq	r2,zero,a078 <__adddf3+0x44c>
    9e74:	18bfffc4 	addi	r2,r3,-1
    9e78:	10010726 	beq	r2,zero,a298 <__adddf3+0x66c>
    9e7c:	18c1ffd8 	cmpnei	r3,r3,2047
    9e80:	18004126 	beq	r3,zero,9f88 <__adddf3+0x35c>
    9e84:	1007883a 	mov	r3,r2
    9e88:	003f8806 	br	9cac <__adddf3+0x80>
    9e8c:	90800044 	addi	r2,r18,1
    9e90:	1081ff8c 	andi	r2,r2,2046
    9e94:	1000a01e 	bne	r2,zero,a118 <__adddf3+0x4ec>
    9e98:	538ab03a 	or	r5,r10,r14
    9e9c:	4b44b03a 	or	r2,r9,r13
    9ea0:	9000ef1e 	bne	r18,zero,a260 <__adddf3+0x634>
    9ea4:	28014126 	beq	r5,zero,a3ac <__adddf3+0x780>
    9ea8:	1001491e 	bne	r2,zero,a3d0 <__adddf3+0x7a4>
    9eac:	500a977a 	slli	r5,r10,29
    9eb0:	00880034 	movhi	r2,8192
    9eb4:	10bfffc4 	addi	r2,r2,-1
    9eb8:	2084703a 	and	r2,r4,r2
    9ebc:	5014d0fa 	srli	r10,r10,3
    9ec0:	1144b03a 	or	r2,r2,r5
    9ec4:	00001d06 	br	9f3c <__adddf3+0x310>
    9ec8:	4b44b03a 	or	r2,r9,r13
    9ecc:	10006a26 	beq	r2,zero,a078 <__adddf3+0x44c>
    9ed0:	18bfffc4 	addi	r2,r3,-1
    9ed4:	1000e826 	beq	r2,zero,a278 <__adddf3+0x64c>
    9ed8:	18c1ffd8 	cmpnei	r3,r3,2047
    9edc:	1800f426 	beq	r3,zero,a2b0 <__adddf3+0x684>
    9ee0:	1007883a 	mov	r3,r2
    9ee4:	003fd206 	br	9e30 <__adddf3+0x204>
    9ee8:	18fff844 	addi	r3,r3,-31
    9eec:	20800820 	cmpeqi	r2,r4,32
    9ef0:	40c6d83a 	srl	r3,r8,r3
    9ef4:	1000041e 	bne	r2,zero,9f08 <__adddf3+0x2dc>
    9ef8:	00801004 	movi	r2,64
    9efc:	1109c83a 	sub	r4,r2,r4
    9f00:	4110983a 	sll	r8,r8,r4
    9f04:	8a22b03a 	or	r17,r17,r8
    9f08:	8822c03a 	cmpne	r17,r17,zero
    9f0c:	88e2b03a 	or	r17,r17,r3
    9f10:	0011883a 	mov	r8,zero
    9f14:	0025883a 	mov	r18,zero
    9f18:	888001cc 	andi	r2,r17,7
    9f1c:	103f941e 	bne	r2,zero,9d70 <__adddf3+0x144>
    9f20:	8822d0fa 	srli	r17,r17,3
    9f24:	4004977a 	slli	r2,r8,29
    9f28:	4014d0fa 	srli	r10,r8,3
    9f2c:	9007883a 	mov	r3,r18
    9f30:	8884b03a 	or	r2,r17,r2
    9f34:	1901ffe0 	cmpeqi	r4,r3,2047
    9f38:	2000191e 	bne	r4,zero,9fa0 <__adddf3+0x374>
    9f3c:	02000434 	movhi	r8,16
    9f40:	423fffc4 	addi	r8,r8,-1
    9f44:	5210703a 	and	r8,r10,r8
    9f48:	18c1ffcc 	andi	r3,r3,2047
    9f4c:	003f9d06 	br	9dc4 <__adddf3+0x198>
    9f50:	4b62b03a 	or	r17,r9,r13
    9f54:	8822c03a 	cmpne	r17,r17,zero
    9f58:	8ba3883a 	add	r17,r17,r14
    9f5c:	8b91803a 	cmpltu	r8,r17,r14
    9f60:	4291883a 	add	r8,r8,r10
    9f64:	4080202c 	andhi	r2,r8,128
    9f68:	103feb26 	beq	r2,zero,9f18 <__adddf3+0x2ec>
    9f6c:	94800044 	addi	r18,r18,1
    9f70:	9081ffe0 	cmpeqi	r2,r18,2047
    9f74:	10007426 	beq	r2,zero,a148 <__adddf3+0x51c>
    9f78:	00c1ffc4 	movi	r3,2047
    9f7c:	0011883a 	mov	r8,zero
    9f80:	0005883a 	mov	r2,zero
    9f84:	003f8f06 	br	9dc4 <__adddf3+0x198>
    9f88:	500a977a 	slli	r5,r10,29
    9f8c:	00c80034 	movhi	r3,8192
    9f90:	18ffffc4 	addi	r3,r3,-1
    9f94:	5014d0fa 	srli	r10,r10,3
    9f98:	20c4703a 	and	r2,r4,r3
    9f9c:	1144b03a 	or	r2,r2,r5
    9fa0:	1286b03a 	or	r3,r2,r10
    9fa4:	18015926 	beq	r3,zero,a50c <__adddf3+0x8e0>
    9fa8:	00c00434 	movhi	r3,16
    9fac:	18ffffc4 	addi	r3,r3,-1
    9fb0:	52000234 	orhi	r8,r10,8
    9fb4:	40d0703a 	and	r8,r8,r3
    9fb8:	00c1ffc4 	movi	r3,2047
    9fbc:	003f8106 	br	9dc4 <__adddf3+0x198>
    9fc0:	8809883a 	mov	r4,r17
    9fc4:	000c5c00 	call	c5c0 <__clzsi2>
    9fc8:	10c00604 	addi	r3,r2,24
    9fcc:	19000808 	cmpgei	r4,r3,32
    9fd0:	203f5026 	beq	r4,zero,9d14 <__adddf3+0xe8>
    9fd4:	123ffe04 	addi	r8,r2,-8
    9fd8:	8a10983a 	sll	r8,r17,r8
    9fdc:	0023883a 	mov	r17,zero
    9fe0:	1cbf530e 	bge	r3,r18,9d30 <__adddf3+0x104>
    9fe4:	00bfe034 	movhi	r2,65408
    9fe8:	10bfffc4 	addi	r2,r2,-1
    9fec:	90e5c83a 	sub	r18,r18,r3
    9ff0:	4090703a 	and	r8,r8,r2
    9ff4:	003f5c06 	br	9d68 <__adddf3+0x13c>
    9ff8:	18002626 	beq	r3,zero,a094 <__adddf3+0x468>
    9ffc:	1487c83a 	sub	r3,r2,r18
    a000:	90006e1e 	bne	r18,zero,a1bc <__adddf3+0x590>
    a004:	5388b03a 	or	r4,r10,r14
    a008:	2000fd26 	beq	r4,zero,a400 <__adddf3+0x7d4>
    a00c:	193fffc4 	addi	r4,r3,-1
    a010:	20013626 	beq	r4,zero,a4ec <__adddf3+0x8c0>
    a014:	18c1ffd8 	cmpnei	r3,r3,2047
    a018:	1800b426 	beq	r3,zero,a2ec <__adddf3+0x6c0>
    a01c:	2007883a 	mov	r3,r4
    a020:	19000e48 	cmpgei	r4,r3,57
    a024:	2000b81e 	bne	r4,zero,a308 <__adddf3+0x6dc>
    a028:	19000808 	cmpgei	r4,r3,32
    a02c:	2001241e 	bne	r4,zero,a4c0 <__adddf3+0x894>
    a030:	01000804 	movi	r4,32
    a034:	20c9c83a 	sub	r4,r4,r3
    a038:	5122983a 	sll	r17,r10,r4
    a03c:	70cad83a 	srl	r5,r14,r3
    a040:	7108983a 	sll	r4,r14,r4
    a044:	50d4d83a 	srl	r10,r10,r3
    a048:	8962b03a 	or	r17,r17,r5
    a04c:	2008c03a 	cmpne	r4,r4,zero
    a050:	8922b03a 	or	r17,r17,r4
    a054:	4a93883a 	add	r9,r9,r10
    a058:	8b63883a 	add	r17,r17,r13
    a05c:	8b51803a 	cmpltu	r8,r17,r13
    a060:	4251883a 	add	r8,r8,r9
    a064:	1025883a 	mov	r18,r2
    a068:	003fbe06 	br	9f64 <__adddf3+0x338>
    a06c:	4b62b03a 	or	r17,r9,r13
    a070:	8822c03a 	cmpne	r17,r17,zero
    a074:	003f1b06 	br	9ce4 <__adddf3+0xb8>
    a078:	500c977a 	slli	r6,r10,29
    a07c:	01480034 	movhi	r5,8192
    a080:	297fffc4 	addi	r5,r5,-1
    a084:	2144703a 	and	r2,r4,r5
    a088:	5014d0fa 	srli	r10,r10,3
    a08c:	3084b03a 	or	r2,r6,r2
    a090:	003fa806 	br	9f34 <__adddf3+0x308>
    a094:	90800044 	addi	r2,r18,1
    a098:	1141ff8c 	andi	r5,r2,2046
    a09c:	2800561e 	bne	r5,zero,a1f8 <__adddf3+0x5cc>
    a0a0:	5384b03a 	or	r2,r10,r14
    a0a4:	9000a61e 	bne	r18,zero,a340 <__adddf3+0x714>
    a0a8:	1000ee26 	beq	r2,zero,a464 <__adddf3+0x838>
    a0ac:	4b44b03a 	or	r2,r9,r13
    a0b0:	1000f31e 	bne	r2,zero,a480 <__adddf3+0x854>
    a0b4:	5004977a 	slli	r2,r10,29
    a0b8:	01480034 	movhi	r5,8192
    a0bc:	297fffc4 	addi	r5,r5,-1
    a0c0:	2148703a 	and	r4,r4,r5
    a0c4:	5014d0fa 	srli	r10,r10,3
    a0c8:	1104b03a 	or	r2,r2,r4
    a0cc:	003f9b06 	br	9f3c <__adddf3+0x310>
    a0d0:	1101ffd8 	cmpnei	r4,r2,2047
    a0d4:	20007d26 	beq	r4,zero,a2cc <__adddf3+0x6a0>
    a0d8:	52802034 	orhi	r10,r10,128
    a0dc:	19000e48 	cmpgei	r4,r3,57
    a0e0:	20002e1e 	bne	r4,zero,a19c <__adddf3+0x570>
    a0e4:	19000808 	cmpgei	r4,r3,32
    a0e8:	20008a1e 	bne	r4,zero,a314 <__adddf3+0x6e8>
    a0ec:	01000804 	movi	r4,32
    a0f0:	20c9c83a 	sub	r4,r4,r3
    a0f4:	5122983a 	sll	r17,r10,r4
    a0f8:	70cad83a 	srl	r5,r14,r3
    a0fc:	711c983a 	sll	r14,r14,r4
    a100:	50d4d83a 	srl	r10,r10,r3
    a104:	8962b03a 	or	r17,r17,r5
    a108:	701cc03a 	cmpne	r14,r14,zero
    a10c:	8ba2b03a 	or	r17,r17,r14
    a110:	4a93c83a 	sub	r9,r9,r10
    a114:	00002306 	br	a1a4 <__adddf3+0x578>
    a118:	7363c83a 	sub	r17,r14,r13
    a11c:	5267c83a 	sub	r19,r10,r9
    a120:	7451803a 	cmpltu	r8,r14,r17
    a124:	9a27c83a 	sub	r19,r19,r8
    a128:	9880202c 	andhi	r2,r19,128
    a12c:	10003e1e 	bne	r2,zero,a228 <__adddf3+0x5fc>
    a130:	8cc4b03a 	or	r2,r17,r19
    a134:	103ef31e 	bne	r2,zero,9d04 <__adddf3+0xd8>
    a138:	0015883a 	mov	r10,zero
    a13c:	0021883a 	mov	r16,zero
    a140:	003f7e06 	br	9f3c <__adddf3+0x310>
    a144:	04800084 	movi	r18,2
    a148:	00bfe034 	movhi	r2,65408
    a14c:	10bfffc4 	addi	r2,r2,-1
    a150:	8806d07a 	srli	r3,r17,1
    a154:	4090703a 	and	r8,r8,r2
    a158:	400497fa 	slli	r2,r8,31
    a15c:	8c40004c 	andi	r17,r17,1
    a160:	1c62b03a 	or	r17,r3,r17
    a164:	4010d07a 	srli	r8,r8,1
    a168:	1462b03a 	or	r17,r2,r17
    a16c:	003efe06 	br	9d68 <__adddf3+0x13c>
    a170:	1c7ff804 	addi	r17,r3,-32
    a174:	19000820 	cmpeqi	r4,r3,32
    a178:	4c44d83a 	srl	r2,r9,r17
    a17c:	2000041e 	bne	r4,zero,a190 <__adddf3+0x564>
    a180:	01001004 	movi	r4,64
    a184:	20c7c83a 	sub	r3,r4,r3
    a188:	48d2983a 	sll	r9,r9,r3
    a18c:	6a5ab03a 	or	r13,r13,r9
    a190:	6822c03a 	cmpne	r17,r13,zero
    a194:	88a2b03a 	or	r17,r17,r2
    a198:	003ed206 	br	9ce4 <__adddf3+0xb8>
    a19c:	5394b03a 	or	r10,r10,r14
    a1a0:	5022c03a 	cmpne	r17,r10,zero
    a1a4:	6c63c83a 	sub	r17,r13,r17
    a1a8:	6c51803a 	cmpltu	r8,r13,r17
    a1ac:	4a11c83a 	sub	r8,r9,r8
    a1b0:	3821883a 	mov	r16,r7
    a1b4:	1025883a 	mov	r18,r2
    a1b8:	003ecd06 	br	9cf0 <__adddf3+0xc4>
    a1bc:	1101ffd8 	cmpnei	r4,r2,2047
    a1c0:	20004a26 	beq	r4,zero,a2ec <__adddf3+0x6c0>
    a1c4:	52802034 	orhi	r10,r10,128
    a1c8:	003f9506 	br	a020 <__adddf3+0x3f4>
    a1cc:	00800804 	movi	r2,32
    a1d0:	10c5c83a 	sub	r2,r2,r3
    a1d4:	68c8d83a 	srl	r4,r13,r3
    a1d8:	48a2983a 	sll	r17,r9,r2
    a1dc:	689a983a 	sll	r13,r13,r2
    a1e0:	48c6d83a 	srl	r3,r9,r3
    a1e4:	8922b03a 	or	r17,r17,r4
    a1e8:	681ac03a 	cmpne	r13,r13,zero
    a1ec:	8b62b03a 	or	r17,r17,r13
    a1f0:	50d5883a 	add	r10,r10,r3
    a1f4:	003f5806 	br	9f58 <__adddf3+0x32c>
    a1f8:	10c1ffe0 	cmpeqi	r3,r2,2047
    a1fc:	183f5e1e 	bne	r3,zero,9f78 <__adddf3+0x34c>
    a200:	7351883a 	add	r8,r14,r13
    a204:	4387803a 	cmpltu	r3,r8,r14
    a208:	5255883a 	add	r10,r10,r9
    a20c:	50c7883a 	add	r3,r10,r3
    a210:	401ad07a 	srli	r13,r8,1
    a214:	182297fa 	slli	r17,r3,31
    a218:	1810d07a 	srli	r8,r3,1
    a21c:	1025883a 	mov	r18,r2
    a220:	8b62b03a 	or	r17,r17,r13
    a224:	003f3c06 	br	9f18 <__adddf3+0x2ec>
    a228:	6ba3c83a 	sub	r17,r13,r14
    a22c:	4a93c83a 	sub	r9,r9,r10
    a230:	6c51803a 	cmpltu	r8,r13,r17
    a234:	4a27c83a 	sub	r19,r9,r8
    a238:	3821883a 	mov	r16,r7
    a23c:	003eb106 	br	9d04 <__adddf3+0xd8>
    a240:	480a977a 	slli	r5,r9,29
    a244:	01080034 	movhi	r4,8192
    a248:	213fffc4 	addi	r4,r4,-1
    a24c:	3104703a 	and	r2,r6,r4
    a250:	4814d0fa 	srli	r10,r9,3
    a254:	1144b03a 	or	r2,r2,r5
    a258:	3821883a 	mov	r16,r7
    a25c:	003f3506 	br	9f34 <__adddf3+0x308>
    a260:	28006e1e 	bne	r5,zero,a41c <__adddf3+0x7f0>
    a264:	1000191e 	bne	r2,zero,a2cc <__adddf3+0x6a0>
    a268:	0021883a 	mov	r16,zero
    a26c:	4015883a 	mov	r10,r8
    a270:	00bfffc4 	movi	r2,-1
    a274:	003f4c06 	br	9fa8 <__adddf3+0x37c>
    a278:	7363883a 	add	r17,r14,r13
    a27c:	5255883a 	add	r10,r10,r9
    a280:	8b91803a 	cmpltu	r8,r17,r14
    a284:	5211883a 	add	r8,r10,r8
    a288:	4080202c 	andhi	r2,r8,128
    a28c:	103fad1e 	bne	r2,zero,a144 <__adddf3+0x518>
    a290:	04800044 	movi	r18,1
    a294:	003f2006 	br	9f18 <__adddf3+0x2ec>
    a298:	7363c83a 	sub	r17,r14,r13
    a29c:	5255c83a 	sub	r10,r10,r9
    a2a0:	7451803a 	cmpltu	r8,r14,r17
    a2a4:	5211c83a 	sub	r8,r10,r8
    a2a8:	04800044 	movi	r18,1
    a2ac:	003e9006 	br	9cf0 <__adddf3+0xc4>
    a2b0:	5004977a 	slli	r2,r10,29
    a2b4:	00c80034 	movhi	r3,8192
    a2b8:	18ffffc4 	addi	r3,r3,-1
    a2bc:	20c8703a 	and	r4,r4,r3
    a2c0:	5014d0fa 	srli	r10,r10,3
    a2c4:	1104b03a 	or	r2,r2,r4
    a2c8:	003f3506 	br	9fa0 <__adddf3+0x374>
    a2cc:	4806977a 	slli	r3,r9,29
    a2d0:	00880034 	movhi	r2,8192
    a2d4:	10bfffc4 	addi	r2,r2,-1
    a2d8:	3084703a 	and	r2,r6,r2
    a2dc:	4814d0fa 	srli	r10,r9,3
    a2e0:	10c4b03a 	or	r2,r2,r3
    a2e4:	3821883a 	mov	r16,r7
    a2e8:	003f2d06 	br	9fa0 <__adddf3+0x374>
    a2ec:	4804977a 	slli	r2,r9,29
    a2f0:	00c80034 	movhi	r3,8192
    a2f4:	18ffffc4 	addi	r3,r3,-1
    a2f8:	30cc703a 	and	r6,r6,r3
    a2fc:	4814d0fa 	srli	r10,r9,3
    a300:	1184b03a 	or	r2,r2,r6
    a304:	003f2606 	br	9fa0 <__adddf3+0x374>
    a308:	5394b03a 	or	r10,r10,r14
    a30c:	5022c03a 	cmpne	r17,r10,zero
    a310:	003f5106 	br	a058 <__adddf3+0x42c>
    a314:	1c7ff804 	addi	r17,r3,-32
    a318:	19400820 	cmpeqi	r5,r3,32
    a31c:	5448d83a 	srl	r4,r10,r17
    a320:	2800041e 	bne	r5,zero,a334 <__adddf3+0x708>
    a324:	01401004 	movi	r5,64
    a328:	28c7c83a 	sub	r3,r5,r3
    a32c:	50d4983a 	sll	r10,r10,r3
    a330:	729cb03a 	or	r14,r14,r10
    a334:	7022c03a 	cmpne	r17,r14,zero
    a338:	8922b03a 	or	r17,r17,r4
    a33c:	003f9906 	br	a1a4 <__adddf3+0x578>
    a340:	103fea26 	beq	r2,zero,a2ec <__adddf3+0x6c0>
    a344:	4b50b03a 	or	r8,r9,r13
    a348:	500a977a 	slli	r5,r10,29
    a34c:	5014d0fa 	srli	r10,r10,3
    a350:	40005626 	beq	r8,zero,a4ac <__adddf3+0x880>
    a354:	00c80034 	movhi	r3,8192
    a358:	18ffffc4 	addi	r3,r3,-1
    a35c:	20c4703a 	and	r2,r4,r3
    a360:	5100022c 	andhi	r4,r10,8
    a364:	1144b03a 	or	r2,r2,r5
    a368:	203f0d26 	beq	r4,zero,9fa0 <__adddf3+0x374>
    a36c:	4808d0fa 	srli	r4,r9,3
    a370:	2140022c 	andhi	r5,r4,8
    a374:	283f0a1e 	bne	r5,zero,9fa0 <__adddf3+0x374>
    a378:	4804977a 	slli	r2,r9,29
    a37c:	30cc703a 	and	r6,r6,r3
    a380:	3821883a 	mov	r16,r7
    a384:	3084b03a 	or	r2,r6,r2
    a388:	2015883a 	mov	r10,r4
    a38c:	003f0406 	br	9fa0 <__adddf3+0x374>
    a390:	6ba3c83a 	sub	r17,r13,r14
    a394:	4a95c83a 	sub	r10,r9,r10
    a398:	6c51803a 	cmpltu	r8,r13,r17
    a39c:	5211c83a 	sub	r8,r10,r8
    a3a0:	3821883a 	mov	r16,r7
    a3a4:	04800044 	movi	r18,1
    a3a8:	003e5106 	br	9cf0 <__adddf3+0xc4>
    a3ac:	103f6226 	beq	r2,zero,a138 <__adddf3+0x50c>
    a3b0:	4808977a 	slli	r4,r9,29
    a3b4:	00880034 	movhi	r2,8192
    a3b8:	10bfffc4 	addi	r2,r2,-1
    a3bc:	3084703a 	and	r2,r6,r2
    a3c0:	4814d0fa 	srli	r10,r9,3
    a3c4:	1104b03a 	or	r2,r2,r4
    a3c8:	3821883a 	mov	r16,r7
    a3cc:	003edb06 	br	9f3c <__adddf3+0x310>
    a3d0:	7363c83a 	sub	r17,r14,r13
    a3d4:	7445803a 	cmpltu	r2,r14,r17
    a3d8:	5251c83a 	sub	r8,r10,r9
    a3dc:	4091c83a 	sub	r8,r8,r2
    a3e0:	4080202c 	andhi	r2,r8,128
    a3e4:	10004626 	beq	r2,zero,a500 <__adddf3+0x8d4>
    a3e8:	6ba3c83a 	sub	r17,r13,r14
    a3ec:	4a95c83a 	sub	r10,r9,r10
    a3f0:	6c51803a 	cmpltu	r8,r13,r17
    a3f4:	5211c83a 	sub	r8,r10,r8
    a3f8:	3821883a 	mov	r16,r7
    a3fc:	003e5a06 	br	9d68 <__adddf3+0x13c>
    a400:	4804977a 	slli	r2,r9,29
    a404:	01080034 	movhi	r4,8192
    a408:	213fffc4 	addi	r4,r4,-1
    a40c:	310c703a 	and	r6,r6,r4
    a410:	4814d0fa 	srli	r10,r9,3
    a414:	1184b03a 	or	r2,r2,r6
    a418:	003ec606 	br	9f34 <__adddf3+0x308>
    a41c:	500a977a 	slli	r5,r10,29
    a420:	5014d0fa 	srli	r10,r10,3
    a424:	10002126 	beq	r2,zero,a4ac <__adddf3+0x880>
    a428:	00c80034 	movhi	r3,8192
    a42c:	18ffffc4 	addi	r3,r3,-1
    a430:	20c4703a 	and	r2,r4,r3
    a434:	5100022c 	andhi	r4,r10,8
    a438:	1144b03a 	or	r2,r2,r5
    a43c:	203ed826 	beq	r4,zero,9fa0 <__adddf3+0x374>
    a440:	4808d0fa 	srli	r4,r9,3
    a444:	2140022c 	andhi	r5,r4,8
    a448:	283ed51e 	bne	r5,zero,9fa0 <__adddf3+0x374>
    a44c:	4812977a 	slli	r9,r9,29
    a450:	30c4703a 	and	r2,r6,r3
    a454:	3821883a 	mov	r16,r7
    a458:	1244b03a 	or	r2,r2,r9
    a45c:	2015883a 	mov	r10,r4
    a460:	003ecf06 	br	9fa0 <__adddf3+0x374>
    a464:	4804977a 	slli	r2,r9,29
    a468:	01080034 	movhi	r4,8192
    a46c:	213fffc4 	addi	r4,r4,-1
    a470:	310c703a 	and	r6,r6,r4
    a474:	4814d0fa 	srli	r10,r9,3
    a478:	1184b03a 	or	r2,r2,r6
    a47c:	003eaf06 	br	9f3c <__adddf3+0x310>
    a480:	7363883a 	add	r17,r14,r13
    a484:	5255883a 	add	r10,r10,r9
    a488:	8b91803a 	cmpltu	r8,r17,r14
    a48c:	5211883a 	add	r8,r10,r8
    a490:	4080202c 	andhi	r2,r8,128
    a494:	103ea026 	beq	r2,zero,9f18 <__adddf3+0x2ec>
    a498:	00bfe034 	movhi	r2,65408
    a49c:	10bfffc4 	addi	r2,r2,-1
    a4a0:	4090703a 	and	r8,r8,r2
    a4a4:	04800044 	movi	r18,1
    a4a8:	003e9b06 	br	9f18 <__adddf3+0x2ec>
    a4ac:	00880034 	movhi	r2,8192
    a4b0:	10bfffc4 	addi	r2,r2,-1
    a4b4:	2084703a 	and	r2,r4,r2
    a4b8:	1144b03a 	or	r2,r2,r5
    a4bc:	003eb806 	br	9fa0 <__adddf3+0x374>
    a4c0:	193ff804 	addi	r4,r3,-32
    a4c4:	19400820 	cmpeqi	r5,r3,32
    a4c8:	5108d83a 	srl	r4,r10,r4
    a4cc:	2800041e 	bne	r5,zero,a4e0 <__adddf3+0x8b4>
    a4d0:	01401004 	movi	r5,64
    a4d4:	28c7c83a 	sub	r3,r5,r3
    a4d8:	50d4983a 	sll	r10,r10,r3
    a4dc:	729cb03a 	or	r14,r14,r10
    a4e0:	7022c03a 	cmpne	r17,r14,zero
    a4e4:	8922b03a 	or	r17,r17,r4
    a4e8:	003edb06 	br	a058 <__adddf3+0x42c>
    a4ec:	7363883a 	add	r17,r14,r13
    a4f0:	5255883a 	add	r10,r10,r9
    a4f4:	8b51803a 	cmpltu	r8,r17,r13
    a4f8:	5211883a 	add	r8,r10,r8
    a4fc:	003f6206 	br	a288 <__adddf3+0x65c>
    a500:	8a04b03a 	or	r2,r17,r8
    a504:	103f0c26 	beq	r2,zero,a138 <__adddf3+0x50c>
    a508:	003e8306 	br	9f18 <__adddf3+0x2ec>
    a50c:	0005883a 	mov	r2,zero
    a510:	00c1ffc4 	movi	r3,2047
    a514:	0011883a 	mov	r8,zero
    a518:	003e2a06 	br	9dc4 <__adddf3+0x198>

0000a51c <__divdf3>:
    a51c:	2810d53a 	srli	r8,r5,20
    a520:	defff004 	addi	sp,sp,-64
    a524:	dc000615 	stw	r16,24(sp)
    a528:	04000434 	movhi	r16,16
    a52c:	ddc00d15 	stw	r23,52(sp)
    a530:	dd800c15 	stw	r22,48(sp)
    a534:	dd400b15 	stw	r21,44(sp)
    a538:	dd000a15 	stw	r20,40(sp)
    a53c:	843fffc4 	addi	r16,r16,-1
    a540:	dfc00f15 	stw	ra,60(sp)
    a544:	df000e15 	stw	fp,56(sp)
    a548:	dcc00915 	stw	r19,36(sp)
    a54c:	dc800815 	stw	r18,32(sp)
    a550:	dc400715 	stw	r17,28(sp)
    a554:	4201ffcc 	andi	r8,r8,2047
    a558:	282cd7fa 	srli	r22,r5,31
    a55c:	302f883a 	mov	r23,r6
    a560:	382b883a 	mov	r21,r7
    a564:	2029883a 	mov	r20,r4
    a568:	2c20703a 	and	r16,r5,r16
    a56c:	40014426 	beq	r8,zero,aa80 <__divdf3+0x564>
    a570:	4081ffe0 	cmpeqi	r2,r8,2047
    a574:	1001551e 	bne	r2,zero,aacc <__divdf3+0x5b0>
    a578:	2024d77a 	srli	r18,r4,29
    a57c:	800a90fa 	slli	r5,r16,3
    a580:	202890fa 	slli	r20,r4,3
    a584:	447f0044 	addi	r17,r8,-1023
    a588:	914ab03a 	or	r5,r18,r5
    a58c:	2c802034 	orhi	r18,r5,128
    a590:	0021883a 	mov	r16,zero
    a594:	0039883a 	mov	fp,zero
    a598:	a810d53a 	srli	r8,r21,20
    a59c:	00c00434 	movhi	r3,16
    a5a0:	18ffffc4 	addi	r3,r3,-1
    a5a4:	4201ffcc 	andi	r8,r8,2047
    a5a8:	a826d7fa 	srli	r19,r21,31
    a5ac:	a8ea703a 	and	r21,r21,r3
    a5b0:	40012226 	beq	r8,zero,aa3c <__divdf3+0x520>
    a5b4:	4081ffe0 	cmpeqi	r2,r8,2047
    a5b8:	10014b1e 	bne	r2,zero,aae8 <__divdf3+0x5cc>
    a5bc:	a80690fa 	slli	r3,r21,3
    a5c0:	b804d77a 	srli	r2,r23,29
    a5c4:	b81290fa 	slli	r9,r23,3
    a5c8:	423f0044 	addi	r8,r8,-1023
    a5cc:	10c6b03a 	or	r3,r2,r3
    a5d0:	1d402034 	orhi	r21,r3,128
    a5d4:	8a23c83a 	sub	r17,r17,r8
    a5d8:	0007883a 	mov	r3,zero
    a5dc:	80800428 	cmpgeui	r2,r16,16
    a5e0:	b4cef03a 	xor	r7,r22,r19
    a5e4:	1000391e 	bne	r2,zero,a6cc <__divdf3+0x1b0>
    a5e8:	800c90ba 	slli	r6,r16,2
    a5ec:	00800074 	movhi	r2,1
    a5f0:	3085883a 	add	r2,r6,r2
    a5f4:	10a97f17 	ldw	r2,-23044(r2)
    a5f8:	1000683a 	jmp	r2
    a5fc:	0000a6cc 	andi	zero,zero,667
    a600:	0000a6a8 	cmpgeui	zero,zero,666
    a604:	0000a658 	cmpnei	zero,zero,665
    a608:	0000a6b8 	rdprs	zero,zero,666
    a60c:	0000a658 	cmpnei	zero,zero,665
    a610:	0000ab4c 	andi	zero,zero,685
    a614:	0000a658 	cmpnei	zero,zero,665
    a618:	0000a6b8 	rdprs	zero,zero,666
    a61c:	0000a6a8 	cmpgeui	zero,zero,666
    a620:	0000a6a8 	cmpgeui	zero,zero,666
    a624:	0000ab4c 	andi	zero,zero,685
    a628:	0000a6b8 	rdprs	zero,zero,666
    a62c:	0000a63c 	xorhi	zero,zero,664
    a630:	0000a63c 	xorhi	zero,zero,664
    a634:	0000a63c 	xorhi	zero,zero,664
    a638:	0000abdc 	xori	zero,zero,687
    a63c:	b00f883a 	mov	r7,r22
    a640:	e08000a0 	cmpeqi	r2,fp,2
    a644:	1000181e 	bne	r2,zero,a6a8 <__divdf3+0x18c>
    a648:	e08000e0 	cmpeqi	r2,fp,3
    a64c:	1001ef1e 	bne	r2,zero,ae0c <__divdf3+0x8f0>
    a650:	e0800060 	cmpeqi	r2,fp,1
    a654:	1000e626 	beq	r2,zero,a9f0 <__divdf3+0x4d4>
    a658:	0007883a 	mov	r3,zero
    a65c:	000b883a 	mov	r5,zero
    a660:	0029883a 	mov	r20,zero
    a664:	1806953a 	slli	r3,r3,20
    a668:	380e97fa 	slli	r7,r7,31
    a66c:	a005883a 	mov	r2,r20
    a670:	1946b03a 	or	r3,r3,r5
    a674:	19c6b03a 	or	r3,r3,r7
    a678:	dfc00f17 	ldw	ra,60(sp)
    a67c:	df000e17 	ldw	fp,56(sp)
    a680:	ddc00d17 	ldw	r23,52(sp)
    a684:	dd800c17 	ldw	r22,48(sp)
    a688:	dd400b17 	ldw	r21,44(sp)
    a68c:	dd000a17 	ldw	r20,40(sp)
    a690:	dcc00917 	ldw	r19,36(sp)
    a694:	dc800817 	ldw	r18,32(sp)
    a698:	dc400717 	ldw	r17,28(sp)
    a69c:	dc000617 	ldw	r16,24(sp)
    a6a0:	dec01004 	addi	sp,sp,64
    a6a4:	f800283a 	ret
    a6a8:	00c1ffc4 	movi	r3,2047
    a6ac:	000b883a 	mov	r5,zero
    a6b0:	0029883a 	mov	r20,zero
    a6b4:	003feb06 	br	a664 <__divdf3+0x148>
    a6b8:	980f883a 	mov	r7,r19
    a6bc:	a825883a 	mov	r18,r21
    a6c0:	4829883a 	mov	r20,r9
    a6c4:	1839883a 	mov	fp,r3
    a6c8:	003fdd06 	br	a640 <__divdf3+0x124>
    a6cc:	ac815d36 	bltu	r21,r18,ac44 <__divdf3+0x728>
    a6d0:	ac815b26 	beq	r21,r18,ac40 <__divdf3+0x724>
    a6d4:	8c7fffc4 	addi	r17,r17,-1
    a6d8:	a039883a 	mov	fp,r20
    a6dc:	9021883a 	mov	r16,r18
    a6e0:	002d883a 	mov	r22,zero
    a6e4:	a806923a 	slli	r3,r21,8
    a6e8:	482ad63a 	srli	r21,r9,24
    a6ec:	8009883a 	mov	r4,r16
    a6f0:	182ed43a 	srli	r23,r3,16
    a6f4:	a8eab03a 	or	r21,r21,r3
    a6f8:	d9c00015 	stw	r7,0(sp)
    a6fc:	b80b883a 	mov	r5,r23
    a700:	4826923a 	slli	r19,r9,8
    a704:	ad3fffcc 	andi	r20,r21,65535
    a708:	0008a8c0 	call	8a8c <__udivsi3>
    a70c:	100b883a 	mov	r5,r2
    a710:	a009883a 	mov	r4,r20
    a714:	1025883a 	mov	r18,r2
    a718:	0008b4c0 	call	8b4c <__mulsi3>
    a71c:	8009883a 	mov	r4,r16
    a720:	b80b883a 	mov	r5,r23
    a724:	1021883a 	mov	r16,r2
    a728:	0008af00 	call	8af0 <__umodsi3>
    a72c:	1004943a 	slli	r2,r2,16
    a730:	e008d43a 	srli	r4,fp,16
    a734:	d9c00017 	ldw	r7,0(sp)
    a738:	2088b03a 	or	r4,r4,r2
    a73c:	2400042e 	bgeu	r4,r16,a750 <__divdf3+0x234>
    a740:	2549883a 	add	r4,r4,r21
    a744:	90bfffc4 	addi	r2,r18,-1
    a748:	25416e2e 	bgeu	r4,r21,ad04 <__divdf3+0x7e8>
    a74c:	1025883a 	mov	r18,r2
    a750:	2421c83a 	sub	r16,r4,r16
    a754:	b80b883a 	mov	r5,r23
    a758:	8009883a 	mov	r4,r16
    a75c:	d9c00215 	stw	r7,8(sp)
    a760:	0008a8c0 	call	8a8c <__udivsi3>
    a764:	100b883a 	mov	r5,r2
    a768:	a009883a 	mov	r4,r20
    a76c:	d8800115 	stw	r2,4(sp)
    a770:	0008b4c0 	call	8b4c <__mulsi3>
    a774:	b80b883a 	mov	r5,r23
    a778:	8009883a 	mov	r4,r16
    a77c:	d8800015 	stw	r2,0(sp)
    a780:	0008af00 	call	8af0 <__umodsi3>
    a784:	100c943a 	slli	r6,r2,16
    a788:	da000017 	ldw	r8,0(sp)
    a78c:	e73fffcc 	andi	fp,fp,65535
    a790:	e18cb03a 	or	r6,fp,r6
    a794:	d8c00117 	ldw	r3,4(sp)
    a798:	d9c00217 	ldw	r7,8(sp)
    a79c:	3200042e 	bgeu	r6,r8,a7b0 <__divdf3+0x294>
    a7a0:	354d883a 	add	r6,r6,r21
    a7a4:	18bfffc4 	addi	r2,r3,-1
    a7a8:	3541522e 	bgeu	r6,r21,acf4 <__divdf3+0x7d8>
    a7ac:	1007883a 	mov	r3,r2
    a7b0:	9024943a 	slli	r18,r18,16
    a7b4:	9f3fffcc 	andi	fp,r19,65535
    a7b8:	320dc83a 	sub	r6,r6,r8
    a7bc:	90e4b03a 	or	r18,r18,r3
    a7c0:	9012d43a 	srli	r9,r18,16
    a7c4:	92ffffcc 	andi	r11,r18,65535
    a7c8:	5809883a 	mov	r4,r11
    a7cc:	e00b883a 	mov	r5,fp
    a7d0:	d9c00515 	stw	r7,20(sp)
    a7d4:	d9800315 	stw	r6,12(sp)
    a7d8:	dac00415 	stw	r11,16(sp)
    a7dc:	da400015 	stw	r9,0(sp)
    a7e0:	0008b4c0 	call	8b4c <__mulsi3>
    a7e4:	da400017 	ldw	r9,0(sp)
    a7e8:	e00b883a 	mov	r5,fp
    a7ec:	d8800215 	stw	r2,8(sp)
    a7f0:	4809883a 	mov	r4,r9
    a7f4:	0008b4c0 	call	8b4c <__mulsi3>
    a7f8:	da400017 	ldw	r9,0(sp)
    a7fc:	9820d43a 	srli	r16,r19,16
    a800:	d8800115 	stw	r2,4(sp)
    a804:	4809883a 	mov	r4,r9
    a808:	800b883a 	mov	r5,r16
    a80c:	0008b4c0 	call	8b4c <__mulsi3>
    a810:	dac00417 	ldw	r11,16(sp)
    a814:	8009883a 	mov	r4,r16
    a818:	d8800015 	stw	r2,0(sp)
    a81c:	580b883a 	mov	r5,r11
    a820:	0008b4c0 	call	8b4c <__mulsi3>
    a824:	da000217 	ldw	r8,8(sp)
    a828:	da400117 	ldw	r9,4(sp)
    a82c:	da800017 	ldw	r10,0(sp)
    a830:	4008d43a 	srli	r4,r8,16
    a834:	1247883a 	add	r3,r2,r9
    a838:	d9800317 	ldw	r6,12(sp)
    a83c:	20c7883a 	add	r3,r4,r3
    a840:	d9c00517 	ldw	r7,20(sp)
    a844:	1a40022e 	bgeu	r3,r9,a850 <__divdf3+0x334>
    a848:	00800074 	movhi	r2,1
    a84c:	5095883a 	add	r10,r10,r2
    a850:	1808d43a 	srli	r4,r3,16
    a854:	1806943a 	slli	r3,r3,16
    a858:	423fffcc 	andi	r8,r8,65535
    a85c:	2285883a 	add	r2,r4,r10
    a860:	1a07883a 	add	r3,r3,r8
    a864:	30800236 	bltu	r6,r2,a870 <__divdf3+0x354>
    a868:	30800a1e 	bne	r6,r2,a894 <__divdf3+0x378>
    a86c:	b0c0092e 	bgeu	r22,r3,a894 <__divdf3+0x378>
    a870:	b4ed883a 	add	r22,r22,r19
    a874:	b4c9803a 	cmpltu	r4,r22,r19
    a878:	2549883a 	add	r4,r4,r21
    a87c:	310d883a 	add	r6,r6,r4
    a880:	913fffc4 	addi	r4,r18,-1
    a884:	a981182e 	bgeu	r21,r6,ace8 <__divdf3+0x7cc>
    a888:	30814a36 	bltu	r6,r2,adb4 <__divdf3+0x898>
    a88c:	11814826 	beq	r2,r6,adb0 <__divdf3+0x894>
    a890:	2025883a 	mov	r18,r4
    a894:	b0c7c83a 	sub	r3,r22,r3
    a898:	3085c83a 	sub	r2,r6,r2
    a89c:	b0ed803a 	cmpltu	r22,r22,r3
    a8a0:	15adc83a 	sub	r22,r2,r22
    a8a4:	ad813026 	beq	r21,r22,ad68 <__divdf3+0x84c>
    a8a8:	b009883a 	mov	r4,r22
    a8ac:	b80b883a 	mov	r5,r23
    a8b0:	d8c00215 	stw	r3,8(sp)
    a8b4:	d9c00115 	stw	r7,4(sp)
    a8b8:	0008a8c0 	call	8a8c <__udivsi3>
    a8bc:	100b883a 	mov	r5,r2
    a8c0:	a009883a 	mov	r4,r20
    a8c4:	d8800015 	stw	r2,0(sp)
    a8c8:	0008b4c0 	call	8b4c <__mulsi3>
    a8cc:	b009883a 	mov	r4,r22
    a8d0:	b80b883a 	mov	r5,r23
    a8d4:	102d883a 	mov	r22,r2
    a8d8:	0008af00 	call	8af0 <__umodsi3>
    a8dc:	d8c00217 	ldw	r3,8(sp)
    a8e0:	1004943a 	slli	r2,r2,16
    a8e4:	d9800017 	ldw	r6,0(sp)
    a8e8:	1808d43a 	srli	r4,r3,16
    a8ec:	d9c00117 	ldw	r7,4(sp)
    a8f0:	2088b03a 	or	r4,r4,r2
    a8f4:	2580f536 	bltu	r4,r22,accc <__divdf3+0x7b0>
    a8f8:	25adc83a 	sub	r22,r4,r22
    a8fc:	b009883a 	mov	r4,r22
    a900:	b80b883a 	mov	r5,r23
    a904:	d8c00315 	stw	r3,12(sp)
    a908:	d9c00215 	stw	r7,8(sp)
    a90c:	d9800115 	stw	r6,4(sp)
    a910:	0008a8c0 	call	8a8c <__udivsi3>
    a914:	100b883a 	mov	r5,r2
    a918:	a009883a 	mov	r4,r20
    a91c:	d8800015 	stw	r2,0(sp)
    a920:	0008b4c0 	call	8b4c <__mulsi3>
    a924:	b009883a 	mov	r4,r22
    a928:	b80b883a 	mov	r5,r23
    a92c:	102d883a 	mov	r22,r2
    a930:	0008af00 	call	8af0 <__umodsi3>
    a934:	d8c00317 	ldw	r3,12(sp)
    a938:	1004943a 	slli	r2,r2,16
    a93c:	da000017 	ldw	r8,0(sp)
    a940:	18ffffcc 	andi	r3,r3,65535
    a944:	1886b03a 	or	r3,r3,r2
    a948:	d9800117 	ldw	r6,4(sp)
    a94c:	d9c00217 	ldw	r7,8(sp)
    a950:	1d80d736 	bltu	r3,r22,acb0 <__divdf3+0x794>
    a954:	3028943a 	slli	r20,r6,16
    a958:	e009883a 	mov	r4,fp
    a95c:	d9c00215 	stw	r7,8(sp)
    a960:	a228b03a 	or	r20,r20,r8
    a964:	a1bfffcc 	andi	r6,r20,65535
    a968:	a02ed43a 	srli	r23,r20,16
    a96c:	300b883a 	mov	r5,r6
    a970:	1dadc83a 	sub	r22,r3,r22
    a974:	d9800115 	stw	r6,4(sp)
    a978:	0008b4c0 	call	8b4c <__mulsi3>
    a97c:	e00b883a 	mov	r5,fp
    a980:	b809883a 	mov	r4,r23
    a984:	d8800015 	stw	r2,0(sp)
    a988:	0008b4c0 	call	8b4c <__mulsi3>
    a98c:	8009883a 	mov	r4,r16
    a990:	b80b883a 	mov	r5,r23
    a994:	1039883a 	mov	fp,r2
    a998:	0008b4c0 	call	8b4c <__mulsi3>
    a99c:	d9800117 	ldw	r6,4(sp)
    a9a0:	8009883a 	mov	r4,r16
    a9a4:	1021883a 	mov	r16,r2
    a9a8:	300b883a 	mov	r5,r6
    a9ac:	0008b4c0 	call	8b4c <__mulsi3>
    a9b0:	da000017 	ldw	r8,0(sp)
    a9b4:	1705883a 	add	r2,r2,fp
    a9b8:	d9c00217 	ldw	r7,8(sp)
    a9bc:	4006d43a 	srli	r3,r8,16
    a9c0:	1887883a 	add	r3,r3,r2
    a9c4:	1f00022e 	bgeu	r3,fp,a9d0 <__divdf3+0x4b4>
    a9c8:	00800074 	movhi	r2,1
    a9cc:	80a1883a 	add	r16,r16,r2
    a9d0:	1808d43a 	srli	r4,r3,16
    a9d4:	1806943a 	slli	r3,r3,16
    a9d8:	45ffffcc 	andi	r23,r8,65535
    a9dc:	2409883a 	add	r4,r4,r16
    a9e0:	1dc7883a 	add	r3,r3,r23
    a9e4:	b1008f36 	bltu	r22,r4,ac24 <__divdf3+0x708>
    a9e8:	b1008d26 	beq	r22,r4,ac20 <__divdf3+0x704>
    a9ec:	a5000054 	ori	r20,r20,1
    a9f0:	8980ffc4 	addi	r6,r17,1023
    a9f4:	01805c0e 	bge	zero,r6,ab68 <__divdf3+0x64c>
    a9f8:	a08001cc 	andi	r2,r20,7
    a9fc:	1000e01e 	bne	r2,zero,ad80 <__divdf3+0x864>
    aa00:	a008d0fa 	srli	r4,r20,3
    aa04:	9080402c 	andhi	r2,r18,256
    aa08:	10000426 	beq	r2,zero,aa1c <__divdf3+0x500>
    aa0c:	00bfc034 	movhi	r2,65280
    aa10:	10bfffc4 	addi	r2,r2,-1
    aa14:	90a4703a 	and	r18,r18,r2
    aa18:	89810004 	addi	r6,r17,1024
    aa1c:	3081ffc8 	cmpgei	r2,r6,2047
    aa20:	103f211e 	bne	r2,zero,a6a8 <__divdf3+0x18c>
    aa24:	9028977a 	slli	r20,r18,29
    aa28:	900a927a 	slli	r5,r18,9
    aa2c:	30c1ffcc 	andi	r3,r6,2047
    aa30:	a128b03a 	or	r20,r20,r4
    aa34:	280ad33a 	srli	r5,r5,12
    aa38:	003f0a06 	br	a664 <__divdf3+0x148>
    aa3c:	add2b03a 	or	r9,r21,r23
    aa40:	48003e26 	beq	r9,zero,ab3c <__divdf3+0x620>
    aa44:	a8008f26 	beq	r21,zero,ac84 <__divdf3+0x768>
    aa48:	a809883a 	mov	r4,r21
    aa4c:	000c5c00 	call	c5c0 <__clzsi2>
    aa50:	117ffd44 	addi	r5,r2,-11
    aa54:	01000744 	movi	r4,29
    aa58:	127ffe04 	addi	r9,r2,-8
    aa5c:	2149c83a 	sub	r4,r4,r5
    aa60:	aa46983a 	sll	r3,r21,r9
    aa64:	b908d83a 	srl	r4,r23,r4
    aa68:	ba52983a 	sll	r9,r23,r9
    aa6c:	20eab03a 	or	r21,r4,r3
    aa70:	1451883a 	add	r8,r2,r17
    aa74:	4440fcc4 	addi	r17,r8,1011
    aa78:	0007883a 	mov	r3,zero
    aa7c:	003ed706 	br	a5dc <__divdf3+0xc0>
    aa80:	8124b03a 	or	r18,r16,r4
    aa84:	2027883a 	mov	r19,r4
    aa88:	90002726 	beq	r18,zero,ab28 <__divdf3+0x60c>
    aa8c:	80007326 	beq	r16,zero,ac5c <__divdf3+0x740>
    aa90:	8009883a 	mov	r4,r16
    aa94:	000c5c00 	call	c5c0 <__clzsi2>
    aa98:	113ffd44 	addi	r4,r2,-11
    aa9c:	00c00744 	movi	r3,29
    aaa0:	14bffe04 	addi	r18,r2,-8
    aaa4:	1907c83a 	sub	r3,r3,r4
    aaa8:	848a983a 	sll	r5,r16,r18
    aaac:	98c6d83a 	srl	r3,r19,r3
    aab0:	9ca8983a 	sll	r20,r19,r18
    aab4:	1964b03a 	or	r18,r3,r5
    aab8:	023f0344 	movi	r8,-1011
    aabc:	40a3c83a 	sub	r17,r8,r2
    aac0:	0021883a 	mov	r16,zero
    aac4:	0039883a 	mov	fp,zero
    aac8:	003eb306 	br	a598 <__divdf3+0x7c>
    aacc:	8124b03a 	or	r18,r16,r4
    aad0:	9000101e 	bne	r18,zero,ab14 <__divdf3+0x5f8>
    aad4:	0029883a 	mov	r20,zero
    aad8:	04000204 	movi	r16,8
    aadc:	0441ffc4 	movi	r17,2047
    aae0:	07000084 	movi	fp,2
    aae4:	003eac06 	br	a598 <__divdf3+0x7c>
    aae8:	add2b03a 	or	r9,r21,r23
    aaec:	8c7e0044 	addi	r17,r17,-2047
    aaf0:	4800041e 	bne	r9,zero,ab04 <__divdf3+0x5e8>
    aaf4:	84000094 	ori	r16,r16,2
    aaf8:	002b883a 	mov	r21,zero
    aafc:	00c00084 	movi	r3,2
    ab00:	003eb606 	br	a5dc <__divdf3+0xc0>
    ab04:	840000d4 	ori	r16,r16,3
    ab08:	b813883a 	mov	r9,r23
    ab0c:	00c000c4 	movi	r3,3
    ab10:	003eb206 	br	a5dc <__divdf3+0xc0>
    ab14:	8025883a 	mov	r18,r16
    ab18:	0441ffc4 	movi	r17,2047
    ab1c:	04000304 	movi	r16,12
    ab20:	070000c4 	movi	fp,3
    ab24:	003e9c06 	br	a598 <__divdf3+0x7c>
    ab28:	0029883a 	mov	r20,zero
    ab2c:	04000104 	movi	r16,4
    ab30:	0023883a 	mov	r17,zero
    ab34:	07000044 	movi	fp,1
    ab38:	003e9706 	br	a598 <__divdf3+0x7c>
    ab3c:	84000054 	ori	r16,r16,1
    ab40:	002b883a 	mov	r21,zero
    ab44:	00c00044 	movi	r3,1
    ab48:	003ea406 	br	a5dc <__divdf3+0xc0>
    ab4c:	01400434 	movhi	r5,16
    ab50:	000f883a 	mov	r7,zero
    ab54:	297fffc4 	addi	r5,r5,-1
    ab58:	053fffc4 	movi	r20,-1
    ab5c:	00c1ffc4 	movi	r3,2047
    ab60:	003ec006 	br	a664 <__divdf3+0x148>
    ab64:	053fffc4 	movi	r20,-1
    ab68:	01400044 	movi	r5,1
    ab6c:	298bc83a 	sub	r5,r5,r6
    ab70:	28800e48 	cmpgei	r2,r5,57
    ab74:	103eb81e 	bne	r2,zero,a658 <__divdf3+0x13c>
    ab78:	28800808 	cmpgei	r2,r5,32
    ab7c:	1000651e 	bne	r2,zero,ad14 <__divdf3+0x7f8>
    ab80:	8a010784 	addi	r8,r17,1054
    ab84:	9204983a 	sll	r2,r18,r8
    ab88:	a146d83a 	srl	r3,r20,r5
    ab8c:	a210983a 	sll	r8,r20,r8
    ab90:	914ad83a 	srl	r5,r18,r5
    ab94:	10e8b03a 	or	r20,r2,r3
    ab98:	4010c03a 	cmpne	r8,r8,zero
    ab9c:	a228b03a 	or	r20,r20,r8
    aba0:	a08001cc 	andi	r2,r20,7
    aba4:	10000726 	beq	r2,zero,abc4 <__divdf3+0x6a8>
    aba8:	a08003cc 	andi	r2,r20,15
    abac:	10800120 	cmpeqi	r2,r2,4
    abb0:	1000041e 	bne	r2,zero,abc4 <__divdf3+0x6a8>
    abb4:	a0800104 	addi	r2,r20,4
    abb8:	1529803a 	cmpltu	r20,r2,r20
    abbc:	2d0b883a 	add	r5,r5,r20
    abc0:	1029883a 	mov	r20,r2
    abc4:	2880202c 	andhi	r2,r5,128
    abc8:	10008c26 	beq	r2,zero,adfc <__divdf3+0x8e0>
    abcc:	00c00044 	movi	r3,1
    abd0:	000b883a 	mov	r5,zero
    abd4:	0029883a 	mov	r20,zero
    abd8:	003ea206 	br	a664 <__divdf3+0x148>
    abdc:	9080022c 	andhi	r2,r18,8
    abe0:	10000926 	beq	r2,zero,ac08 <__divdf3+0x6ec>
    abe4:	a880022c 	andhi	r2,r21,8
    abe8:	1000071e 	bne	r2,zero,ac08 <__divdf3+0x6ec>
    abec:	00800434 	movhi	r2,16
    abf0:	a9400234 	orhi	r5,r21,8
    abf4:	10bfffc4 	addi	r2,r2,-1
    abf8:	288a703a 	and	r5,r5,r2
    abfc:	980f883a 	mov	r7,r19
    ac00:	4829883a 	mov	r20,r9
    ac04:	003fd506 	br	ab5c <__divdf3+0x640>
    ac08:	00800434 	movhi	r2,16
    ac0c:	91400234 	orhi	r5,r18,8
    ac10:	10bfffc4 	addi	r2,r2,-1
    ac14:	288a703a 	and	r5,r5,r2
    ac18:	b00f883a 	mov	r7,r22
    ac1c:	003fcf06 	br	ab5c <__divdf3+0x640>
    ac20:	183f7326 	beq	r3,zero,a9f0 <__divdf3+0x4d4>
    ac24:	adad883a 	add	r22,r21,r22
    ac28:	a0bfffc4 	addi	r2,r20,-1
    ac2c:	b5404a36 	bltu	r22,r21,ad58 <__divdf3+0x83c>
    ac30:	b1006636 	bltu	r22,r4,adcc <__divdf3+0x8b0>
    ac34:	b1007a26 	beq	r22,r4,ae20 <__divdf3+0x904>
    ac38:	1029883a 	mov	r20,r2
    ac3c:	003f6b06 	br	a9ec <__divdf3+0x4d0>
    ac40:	a27ea436 	bltu	r20,r9,a6d4 <__divdf3+0x1b8>
    ac44:	903897fa 	slli	fp,r18,31
    ac48:	a004d07a 	srli	r2,r20,1
    ac4c:	9020d07a 	srli	r16,r18,1
    ac50:	a02c97fa 	slli	r22,r20,31
    ac54:	e0b8b03a 	or	fp,fp,r2
    ac58:	003ea206 	br	a6e4 <__divdf3+0x1c8>
    ac5c:	000c5c00 	call	c5c0 <__clzsi2>
    ac60:	11000544 	addi	r4,r2,21
    ac64:	20c00748 	cmpgei	r3,r4,29
    ac68:	100b883a 	mov	r5,r2
    ac6c:	10800804 	addi	r2,r2,32
    ac70:	183f8a26 	beq	r3,zero,aa9c <__divdf3+0x580>
    ac74:	297ffe04 	addi	r5,r5,-8
    ac78:	a164983a 	sll	r18,r20,r5
    ac7c:	0029883a 	mov	r20,zero
    ac80:	003f8d06 	br	aab8 <__divdf3+0x59c>
    ac84:	b809883a 	mov	r4,r23
    ac88:	000c5c00 	call	c5c0 <__clzsi2>
    ac8c:	11400544 	addi	r5,r2,21
    ac90:	29000748 	cmpgei	r4,r5,29
    ac94:	1007883a 	mov	r3,r2
    ac98:	10800804 	addi	r2,r2,32
    ac9c:	203f6d26 	beq	r4,zero,aa54 <__divdf3+0x538>
    aca0:	18fffe04 	addi	r3,r3,-8
    aca4:	b8ea983a 	sll	r21,r23,r3
    aca8:	0013883a 	mov	r9,zero
    acac:	003f7006 	br	aa70 <__divdf3+0x554>
    acb0:	1d47883a 	add	r3,r3,r21
    acb4:	40bfffc4 	addi	r2,r8,-1
    acb8:	1d403936 	bltu	r3,r21,ada0 <__divdf3+0x884>
    acbc:	1d80382e 	bgeu	r3,r22,ada0 <__divdf3+0x884>
    acc0:	423fff84 	addi	r8,r8,-2
    acc4:	1d47883a 	add	r3,r3,r21
    acc8:	003f2206 	br	a954 <__divdf3+0x438>
    accc:	2549883a 	add	r4,r4,r21
    acd0:	30bfffc4 	addi	r2,r6,-1
    acd4:	25403436 	bltu	r4,r21,ada8 <__divdf3+0x88c>
    acd8:	2580332e 	bgeu	r4,r22,ada8 <__divdf3+0x88c>
    acdc:	31bfff84 	addi	r6,r6,-2
    ace0:	2549883a 	add	r4,r4,r21
    ace4:	003f0406 	br	a8f8 <__divdf3+0x3dc>
    ace8:	a9bee91e 	bne	r21,r6,a890 <__divdf3+0x374>
    acec:	b4fee836 	bltu	r22,r19,a890 <__divdf3+0x374>
    acf0:	003ee506 	br	a888 <__divdf3+0x36c>
    acf4:	323ead2e 	bgeu	r6,r8,a7ac <__divdf3+0x290>
    acf8:	18ffff84 	addi	r3,r3,-2
    acfc:	354d883a 	add	r6,r6,r21
    ad00:	003eab06 	br	a7b0 <__divdf3+0x294>
    ad04:	243e912e 	bgeu	r4,r16,a74c <__divdf3+0x230>
    ad08:	94bfff84 	addi	r18,r18,-2
    ad0c:	2549883a 	add	r4,r4,r21
    ad10:	003e8f06 	br	a750 <__divdf3+0x234>
    ad14:	00fff844 	movi	r3,-31
    ad18:	1987c83a 	sub	r3,r3,r6
    ad1c:	29400820 	cmpeqi	r5,r5,32
    ad20:	90c6d83a 	srl	r3,r18,r3
    ad24:	2800031e 	bne	r5,zero,ad34 <__divdf3+0x818>
    ad28:	89410f84 	addi	r5,r17,1086
    ad2c:	914a983a 	sll	r5,r18,r5
    ad30:	a168b03a 	or	r20,r20,r5
    ad34:	a028c03a 	cmpne	r20,r20,zero
    ad38:	a0e8b03a 	or	r20,r20,r3
    ad3c:	a48001cc 	andi	r18,r20,7
    ad40:	90002a1e 	bne	r18,zero,adec <__divdf3+0x8d0>
    ad44:	000b883a 	mov	r5,zero
    ad48:	a028d0fa 	srli	r20,r20,3
    ad4c:	0007883a 	mov	r3,zero
    ad50:	a4a8b03a 	or	r20,r20,r18
    ad54:	003e4306 	br	a664 <__divdf3+0x148>
    ad58:	1029883a 	mov	r20,r2
    ad5c:	b13f231e 	bne	r22,r4,a9ec <__divdf3+0x4d0>
    ad60:	1cff221e 	bne	r3,r19,a9ec <__divdf3+0x4d0>
    ad64:	003f2206 	br	a9f0 <__divdf3+0x4d4>
    ad68:	8980ffc4 	addi	r6,r17,1023
    ad6c:	01bf7d0e 	bge	zero,r6,ab64 <__divdf3+0x648>
    ad70:	0009883a 	mov	r4,zero
    ad74:	05000044 	movi	r20,1
    ad78:	9525883a 	add	r18,r18,r20
    ad7c:	003f2106 	br	aa04 <__divdf3+0x4e8>
    ad80:	a08003cc 	andi	r2,r20,15
    ad84:	10800118 	cmpnei	r2,r2,4
    ad88:	103f1d26 	beq	r2,zero,aa00 <__divdf3+0x4e4>
    ad8c:	a1000104 	addi	r4,r20,4
    ad90:	00bffec4 	movi	r2,-5
    ad94:	2008d0fa 	srli	r4,r4,3
    ad98:	1529803a 	cmpltu	r20,r2,r20
    ad9c:	003ff606 	br	ad78 <__divdf3+0x85c>
    ada0:	1011883a 	mov	r8,r2
    ada4:	003eeb06 	br	a954 <__divdf3+0x438>
    ada8:	100d883a 	mov	r6,r2
    adac:	003ed206 	br	a8f8 <__divdf3+0x3dc>
    adb0:	b0feb72e 	bgeu	r22,r3,a890 <__divdf3+0x374>
    adb4:	b4ed883a 	add	r22,r22,r19
    adb8:	b4c9803a 	cmpltu	r4,r22,r19
    adbc:	2549883a 	add	r4,r4,r21
    adc0:	94bfff84 	addi	r18,r18,-2
    adc4:	310d883a 	add	r6,r6,r4
    adc8:	003eb206 	br	a894 <__divdf3+0x378>
    adcc:	9cc5883a 	add	r2,r19,r19
    add0:	14e7803a 	cmpltu	r19,r2,r19
    add4:	9d6b883a 	add	r21,r19,r21
    add8:	b56d883a 	add	r22,r22,r21
    addc:	a53fff84 	addi	r20,r20,-2
    ade0:	1027883a 	mov	r19,r2
    ade4:	b13fde26 	beq	r22,r4,ad60 <__divdf3+0x844>
    ade8:	003f0006 	br	a9ec <__divdf3+0x4d0>
    adec:	a08003cc 	andi	r2,r20,15
    adf0:	10800118 	cmpnei	r2,r2,4
    adf4:	000b883a 	mov	r5,zero
    adf8:	103f6e1e 	bne	r2,zero,abb4 <__divdf3+0x698>
    adfc:	2804927a 	slli	r2,r5,9
    ae00:	2824977a 	slli	r18,r5,29
    ae04:	100ad33a 	srli	r5,r2,12
    ae08:	003fcf06 	br	ad48 <__divdf3+0x82c>
    ae0c:	00800434 	movhi	r2,16
    ae10:	91400234 	orhi	r5,r18,8
    ae14:	10bfffc4 	addi	r2,r2,-1
    ae18:	288a703a 	and	r5,r5,r2
    ae1c:	003f4f06 	br	ab5c <__divdf3+0x640>
    ae20:	98ffea36 	bltu	r19,r3,adcc <__divdf3+0x8b0>
    ae24:	1029883a 	mov	r20,r2
    ae28:	1cfef01e 	bne	r3,r19,a9ec <__divdf3+0x4d0>
    ae2c:	003ef006 	br	a9f0 <__divdf3+0x4d4>

0000ae30 <__eqdf2>:
    ae30:	2810d53a 	srli	r8,r5,20
    ae34:	3806d53a 	srli	r3,r7,20
    ae38:	00800434 	movhi	r2,16
    ae3c:	4201ffcc 	andi	r8,r8,2047
    ae40:	10bfffc4 	addi	r2,r2,-1
    ae44:	4241ffd8 	cmpnei	r9,r8,2047
    ae48:	2814d7fa 	srli	r10,r5,31
    ae4c:	3816d7fa 	srli	r11,r7,31
    ae50:	288a703a 	and	r5,r5,r2
    ae54:	388e703a 	and	r7,r7,r2
    ae58:	1881ffcc 	andi	r2,r3,2047
    ae5c:	48000626 	beq	r9,zero,ae78 <__eqdf2+0x48>
    ae60:	10c1ffe0 	cmpeqi	r3,r2,2047
    ae64:	1800021e 	bne	r3,zero,ae70 <__eqdf2+0x40>
    ae68:	4080011e 	bne	r8,r2,ae70 <__eqdf2+0x40>
    ae6c:	29c00826 	beq	r5,r7,ae90 <__eqdf2+0x60>
    ae70:	00800044 	movi	r2,1
    ae74:	f800283a 	ret
    ae78:	2906b03a 	or	r3,r5,r4
    ae7c:	183ffc1e 	bne	r3,zero,ae70 <__eqdf2+0x40>
    ae80:	1081ffd8 	cmpnei	r2,r2,2047
    ae84:	103ffa1e 	bne	r2,zero,ae70 <__eqdf2+0x40>
    ae88:	398eb03a 	or	r7,r7,r6
    ae8c:	383ff81e 	bne	r7,zero,ae70 <__eqdf2+0x40>
    ae90:	21bff71e 	bne	r4,r6,ae70 <__eqdf2+0x40>
    ae94:	52c00426 	beq	r10,r11,aea8 <__eqdf2+0x78>
    ae98:	403ff51e 	bne	r8,zero,ae70 <__eqdf2+0x40>
    ae9c:	290ab03a 	or	r5,r5,r4
    aea0:	2804c03a 	cmpne	r2,r5,zero
    aea4:	f800283a 	ret
    aea8:	0005883a 	mov	r2,zero
    aeac:	f800283a 	ret

0000aeb0 <__gedf2>:
    aeb0:	2810d53a 	srli	r8,r5,20
    aeb4:	3812d53a 	srli	r9,r7,20
    aeb8:	00c00434 	movhi	r3,16
    aebc:	4201ffcc 	andi	r8,r8,2047
    aec0:	18ffffc4 	addi	r3,r3,-1
    aec4:	4281ffd8 	cmpnei	r10,r8,2047
    aec8:	2816d7fa 	srli	r11,r5,31
    aecc:	3804d7fa 	srli	r2,r7,31
    aed0:	28ca703a 	and	r5,r5,r3
    aed4:	38ce703a 	and	r7,r7,r3
    aed8:	48c1ffcc 	andi	r3,r9,2047
    aedc:	50000a26 	beq	r10,zero,af08 <__gedf2+0x58>
    aee0:	1a41ffd8 	cmpnei	r9,r3,2047
    aee4:	48000c26 	beq	r9,zero,af18 <__gedf2+0x68>
    aee8:	4000171e 	bne	r8,zero,af48 <__gedf2+0x98>
    aeec:	2912b03a 	or	r9,r5,r4
    aef0:	1800121e 	bne	r3,zero,af3c <__gedf2+0x8c>
    aef4:	3994b03a 	or	r10,r7,r6
    aef8:	5000101e 	bne	r10,zero,af3c <__gedf2+0x8c>
    aefc:	48000a1e 	bne	r9,zero,af28 <__gedf2+0x78>
    af00:	0005883a 	mov	r2,zero
    af04:	f800283a 	ret
    af08:	2912b03a 	or	r9,r5,r4
    af0c:	48001d1e 	bne	r9,zero,af84 <__gedf2+0xd4>
    af10:	1a41ffe0 	cmpeqi	r9,r3,2047
    af14:	48000c26 	beq	r9,zero,af48 <__gedf2+0x98>
    af18:	3992b03a 	or	r9,r7,r6
    af1c:	4800191e 	bne	r9,zero,af84 <__gedf2+0xd4>
    af20:	40000526 	beq	r8,zero,af38 <__gedf2+0x88>
    af24:	58800c26 	beq	r11,r2,af58 <__gedf2+0xa8>
    af28:	00800044 	movi	r2,1
    af2c:	58000526 	beq	r11,zero,af44 <__gedf2+0x94>
    af30:	00bfffc4 	movi	r2,-1
    af34:	f800283a 	ret
    af38:	2912b03a 	or	r9,r5,r4
    af3c:	483ff91e 	bne	r9,zero,af24 <__gedf2+0x74>
    af40:	103ffb26 	beq	r2,zero,af30 <__gedf2+0x80>
    af44:	f800283a 	ret
    af48:	183ff61e 	bne	r3,zero,af24 <__gedf2+0x74>
    af4c:	3992b03a 	or	r9,r7,r6
    af50:	483ff41e 	bne	r9,zero,af24 <__gedf2+0x74>
    af54:	003ff406 	br	af28 <__gedf2+0x78>
    af58:	1a000716 	blt	r3,r8,af78 <__gedf2+0xc8>
    af5c:	40fff816 	blt	r8,r3,af40 <__gedf2+0x90>
    af60:	397ff136 	bltu	r7,r5,af28 <__gedf2+0x78>
    af64:	29c00926 	beq	r5,r7,af8c <__gedf2+0xdc>
    af68:	29ffe52e 	bgeu	r5,r7,af00 <__gedf2+0x50>
    af6c:	583ff026 	beq	r11,zero,af30 <__gedf2+0x80>
    af70:	5805883a 	mov	r2,r11
    af74:	f800283a 	ret
    af78:	103fed1e 	bne	r2,zero,af30 <__gedf2+0x80>
    af7c:	00800044 	movi	r2,1
    af80:	f800283a 	ret
    af84:	00bfff84 	movi	r2,-2
    af88:	f800283a 	ret
    af8c:	313fe636 	bltu	r6,r4,af28 <__gedf2+0x78>
    af90:	21bfdb2e 	bgeu	r4,r6,af00 <__gedf2+0x50>
    af94:	003ff506 	br	af6c <__gedf2+0xbc>

0000af98 <__ledf2>:
    af98:	2810d53a 	srli	r8,r5,20
    af9c:	3812d53a 	srli	r9,r7,20
    afa0:	00c00434 	movhi	r3,16
    afa4:	4201ffcc 	andi	r8,r8,2047
    afa8:	18ffffc4 	addi	r3,r3,-1
    afac:	4281ffd8 	cmpnei	r10,r8,2047
    afb0:	2816d7fa 	srli	r11,r5,31
    afb4:	3804d7fa 	srli	r2,r7,31
    afb8:	28ca703a 	and	r5,r5,r3
    afbc:	38ce703a 	and	r7,r7,r3
    afc0:	48c1ffcc 	andi	r3,r9,2047
    afc4:	50000a26 	beq	r10,zero,aff0 <__ledf2+0x58>
    afc8:	1a41ffd8 	cmpnei	r9,r3,2047
    afcc:	48000c26 	beq	r9,zero,b000 <__ledf2+0x68>
    afd0:	4000191e 	bne	r8,zero,b038 <__ledf2+0xa0>
    afd4:	2912b03a 	or	r9,r5,r4
    afd8:	18000d1e 	bne	r3,zero,b010 <__ledf2+0x78>
    afdc:	3994b03a 	or	r10,r7,r6
    afe0:	50000b1e 	bne	r10,zero,b010 <__ledf2+0x78>
    afe4:	48000c1e 	bne	r9,zero,b018 <__ledf2+0x80>
    afe8:	0005883a 	mov	r2,zero
    afec:	f800283a 	ret
    aff0:	2912b03a 	or	r9,r5,r4
    aff4:	48000c1e 	bne	r9,zero,b028 <__ledf2+0x90>
    aff8:	1a41ffe0 	cmpeqi	r9,r3,2047
    affc:	48000e26 	beq	r9,zero,b038 <__ledf2+0xa0>
    b000:	3992b03a 	or	r9,r7,r6
    b004:	4800081e 	bne	r9,zero,b028 <__ledf2+0x90>
    b008:	4000021e 	bne	r8,zero,b014 <__ledf2+0x7c>
    b00c:	2912b03a 	or	r9,r5,r4
    b010:	48000726 	beq	r9,zero,b030 <__ledf2+0x98>
    b014:	58800c26 	beq	r11,r2,b048 <__ledf2+0xb0>
    b018:	00800044 	movi	r2,1
    b01c:	58000526 	beq	r11,zero,b034 <__ledf2+0x9c>
    b020:	00bfffc4 	movi	r2,-1
    b024:	f800283a 	ret
    b028:	00800084 	movi	r2,2
    b02c:	f800283a 	ret
    b030:	103ffb26 	beq	r2,zero,b020 <__ledf2+0x88>
    b034:	f800283a 	ret
    b038:	183ff61e 	bne	r3,zero,b014 <__ledf2+0x7c>
    b03c:	3992b03a 	or	r9,r7,r6
    b040:	483ff41e 	bne	r9,zero,b014 <__ledf2+0x7c>
    b044:	003ff406 	br	b018 <__ledf2+0x80>
    b048:	1a00030e 	bge	r3,r8,b058 <__ledf2+0xc0>
    b04c:	103ff41e 	bne	r2,zero,b020 <__ledf2+0x88>
    b050:	00800044 	movi	r2,1
    b054:	f800283a 	ret
    b058:	40fff516 	blt	r8,r3,b030 <__ledf2+0x98>
    b05c:	397fee36 	bltu	r7,r5,b018 <__ledf2+0x80>
    b060:	29c00426 	beq	r5,r7,b074 <__ledf2+0xdc>
    b064:	29ffe02e 	bgeu	r5,r7,afe8 <__ledf2+0x50>
    b068:	583fed26 	beq	r11,zero,b020 <__ledf2+0x88>
    b06c:	5805883a 	mov	r2,r11
    b070:	f800283a 	ret
    b074:	313fe836 	bltu	r6,r4,b018 <__ledf2+0x80>
    b078:	21bfdb2e 	bgeu	r4,r6,afe8 <__ledf2+0x50>
    b07c:	003ffa06 	br	b068 <__ledf2+0xd0>

0000b080 <__muldf3>:
    b080:	2810d53a 	srli	r8,r5,20
    b084:	defff004 	addi	sp,sp,-64
    b088:	00800434 	movhi	r2,16
    b08c:	df000e15 	stw	fp,56(sp)
    b090:	dd000a15 	stw	r20,40(sp)
    b094:	dcc00915 	stw	r19,36(sp)
    b098:	dc400715 	stw	r17,28(sp)
    b09c:	10bfffc4 	addi	r2,r2,-1
    b0a0:	dfc00f15 	stw	ra,60(sp)
    b0a4:	ddc00d15 	stw	r23,52(sp)
    b0a8:	dd800c15 	stw	r22,48(sp)
    b0ac:	dd400b15 	stw	r21,44(sp)
    b0b0:	dc800815 	stw	r18,32(sp)
    b0b4:	dc000615 	stw	r16,24(sp)
    b0b8:	4201ffcc 	andi	r8,r8,2047
    b0bc:	2828d7fa 	srli	r20,r5,31
    b0c0:	2023883a 	mov	r17,r4
    b0c4:	3039883a 	mov	fp,r6
    b0c8:	28a6703a 	and	r19,r5,r2
    b0cc:	40013426 	beq	r8,zero,b5a0 <__muldf3+0x520>
    b0d0:	4081ffe0 	cmpeqi	r2,r8,2047
    b0d4:	1001461e 	bne	r2,zero,b5f0 <__muldf3+0x570>
    b0d8:	980a90fa 	slli	r5,r19,3
    b0dc:	2026d77a 	srli	r19,r4,29
    b0e0:	202490fa 	slli	r18,r4,3
    b0e4:	423f0044 	addi	r8,r8,-1023
    b0e8:	9966b03a 	or	r19,r19,r5
    b0ec:	9cc02034 	orhi	r19,r19,128
    b0f0:	002b883a 	mov	r21,zero
    b0f4:	002d883a 	mov	r22,zero
    b0f8:	3804d53a 	srli	r2,r7,20
    b0fc:	00c00434 	movhi	r3,16
    b100:	18ffffc4 	addi	r3,r3,-1
    b104:	1081ffcc 	andi	r2,r2,2047
    b108:	382ed7fa 	srli	r23,r7,31
    b10c:	38e0703a 	and	r16,r7,r3
    b110:	10011026 	beq	r2,zero,b554 <__muldf3+0x4d4>
    b114:	10c1ffe0 	cmpeqi	r3,r2,2047
    b118:	18013c1e 	bne	r3,zero,b60c <__muldf3+0x58c>
    b11c:	e008d77a 	srli	r4,fp,29
    b120:	802090fa 	slli	r16,r16,3
    b124:	e02290fa 	slli	r17,fp,3
    b128:	10bf0044 	addi	r2,r2,-1023
    b12c:	2420b03a 	or	r16,r4,r16
    b130:	84002034 	orhi	r16,r16,128
    b134:	4091883a 	add	r8,r8,r2
    b138:	0009883a 	mov	r4,zero
    b13c:	a8800428 	cmpgeui	r2,r21,16
    b140:	a5ccf03a 	xor	r6,r20,r23
    b144:	41c00044 	addi	r7,r8,1
    b148:	1000371e 	bne	r2,zero,b228 <__muldf3+0x1a8>
    b14c:	a80490ba 	slli	r2,r21,2
    b150:	00c00074 	movhi	r3,1
    b154:	10c7883a 	add	r3,r2,r3
    b158:	18ac5817 	ldw	r2,-20128(r3)
    b15c:	1000683a 	jmp	r2
    b160:	0000b228 	cmpgeui	zero,zero,712
    b164:	0000b1a4 	muli	zero,zero,710
    b168:	0000b1a4 	muli	zero,zero,710
    b16c:	0000b1a0 	cmpeqi	zero,zero,710
    b170:	0000b1b0 	cmpltui	zero,zero,710
    b174:	0000b1b0 	cmpltui	zero,zero,710
    b178:	0000b680 	call	b68 <kf_bfly3+0x2fc>
    b17c:	0000b1a0 	cmpeqi	zero,zero,710
    b180:	0000b1b0 	cmpltui	zero,zero,710
    b184:	0000b680 	call	b68 <kf_bfly3+0x2fc>
    b188:	0000b1b0 	cmpltui	zero,zero,710
    b18c:	0000b1a0 	cmpeqi	zero,zero,710
    b190:	0000b628 	cmpgeui	zero,zero,728
    b194:	0000b628 	cmpgeui	zero,zero,728
    b198:	0000b628 	cmpgeui	zero,zero,728
    b19c:	0000b70c 	andi	zero,zero,732
    b1a0:	b80d883a 	mov	r6,r23
    b1a4:	8027883a 	mov	r19,r16
    b1a8:	8825883a 	mov	r18,r17
    b1ac:	202d883a 	mov	r22,r4
    b1b0:	b08000a0 	cmpeqi	r2,r22,2
    b1b4:	1000181e 	bne	r2,zero,b218 <__muldf3+0x198>
    b1b8:	b08000e0 	cmpeqi	r2,r22,3
    b1bc:	1001961e 	bne	r2,zero,b818 <__muldf3+0x798>
    b1c0:	b0800060 	cmpeqi	r2,r22,1
    b1c4:	1000c926 	beq	r2,zero,b4ec <__muldf3+0x46c>
    b1c8:	0007883a 	mov	r3,zero
    b1cc:	0027883a 	mov	r19,zero
    b1d0:	0025883a 	mov	r18,zero
    b1d4:	1806953a 	slli	r3,r3,20
    b1d8:	300c97fa 	slli	r6,r6,31
    b1dc:	9005883a 	mov	r2,r18
    b1e0:	1cc6b03a 	or	r3,r3,r19
    b1e4:	1986b03a 	or	r3,r3,r6
    b1e8:	dfc00f17 	ldw	ra,60(sp)
    b1ec:	df000e17 	ldw	fp,56(sp)
    b1f0:	ddc00d17 	ldw	r23,52(sp)
    b1f4:	dd800c17 	ldw	r22,48(sp)
    b1f8:	dd400b17 	ldw	r21,44(sp)
    b1fc:	dd000a17 	ldw	r20,40(sp)
    b200:	dcc00917 	ldw	r19,36(sp)
    b204:	dc800817 	ldw	r18,32(sp)
    b208:	dc400717 	ldw	r17,28(sp)
    b20c:	dc000617 	ldw	r16,24(sp)
    b210:	dec01004 	addi	sp,sp,64
    b214:	f800283a 	ret
    b218:	00c1ffc4 	movi	r3,2047
    b21c:	0027883a 	mov	r19,zero
    b220:	0025883a 	mov	r18,zero
    b224:	003feb06 	br	b1d4 <__muldf3+0x154>
    b228:	9028d43a 	srli	r20,r18,16
    b22c:	8f3fffcc 	andi	fp,r17,65535
    b230:	957fffcc 	andi	r21,r18,65535
    b234:	a80b883a 	mov	r5,r21
    b238:	e009883a 	mov	r4,fp
    b23c:	d9800315 	stw	r6,12(sp)
    b240:	da000215 	stw	r8,8(sp)
    b244:	d9c00115 	stw	r7,4(sp)
    b248:	8822d43a 	srli	r17,r17,16
    b24c:	0008b4c0 	call	8b4c <__mulsi3>
    b250:	e00b883a 	mov	r5,fp
    b254:	a009883a 	mov	r4,r20
    b258:	102d883a 	mov	r22,r2
    b25c:	0008b4c0 	call	8b4c <__mulsi3>
    b260:	880b883a 	mov	r5,r17
    b264:	a009883a 	mov	r4,r20
    b268:	102f883a 	mov	r23,r2
    b26c:	0008b4c0 	call	8b4c <__mulsi3>
    b270:	a80b883a 	mov	r5,r21
    b274:	8809883a 	mov	r4,r17
    b278:	d8800015 	stw	r2,0(sp)
    b27c:	0008b4c0 	call	8b4c <__mulsi3>
    b280:	b006d43a 	srli	r3,r22,16
    b284:	15e5883a 	add	r18,r2,r23
    b288:	d9c00117 	ldw	r7,4(sp)
    b28c:	1c87883a 	add	r3,r3,r18
    b290:	da000217 	ldw	r8,8(sp)
    b294:	d9800317 	ldw	r6,12(sp)
    b298:	1dc0042e 	bgeu	r3,r23,b2ac <__muldf3+0x22c>
    b29c:	d9000017 	ldw	r4,0(sp)
    b2a0:	00800074 	movhi	r2,1
    b2a4:	2085883a 	add	r2,r4,r2
    b2a8:	d8800015 	stw	r2,0(sp)
    b2ac:	1804943a 	slli	r2,r3,16
    b2b0:	85ffffcc 	andi	r23,r16,65535
    b2b4:	b5bfffcc 	andi	r22,r22,65535
    b2b8:	1585883a 	add	r2,r2,r22
    b2bc:	a80b883a 	mov	r5,r21
    b2c0:	b809883a 	mov	r4,r23
    b2c4:	1824d43a 	srli	r18,r3,16
    b2c8:	d9800515 	stw	r6,20(sp)
    b2cc:	da000415 	stw	r8,16(sp)
    b2d0:	d9c00315 	stw	r7,12(sp)
    b2d4:	8020d43a 	srli	r16,r16,16
    b2d8:	d8800115 	stw	r2,4(sp)
    b2dc:	0008b4c0 	call	8b4c <__mulsi3>
    b2e0:	a009883a 	mov	r4,r20
    b2e4:	b80b883a 	mov	r5,r23
    b2e8:	d8800215 	stw	r2,8(sp)
    b2ec:	0008b4c0 	call	8b4c <__mulsi3>
    b2f0:	a009883a 	mov	r4,r20
    b2f4:	800b883a 	mov	r5,r16
    b2f8:	102d883a 	mov	r22,r2
    b2fc:	0008b4c0 	call	8b4c <__mulsi3>
    b300:	a80b883a 	mov	r5,r21
    b304:	8009883a 	mov	r4,r16
    b308:	1029883a 	mov	r20,r2
    b30c:	0008b4c0 	call	8b4c <__mulsi3>
    b310:	da800217 	ldw	r10,8(sp)
    b314:	1585883a 	add	r2,r2,r22
    b318:	d9c00317 	ldw	r7,12(sp)
    b31c:	5006d43a 	srli	r3,r10,16
    b320:	da000417 	ldw	r8,16(sp)
    b324:	d9800517 	ldw	r6,20(sp)
    b328:	1887883a 	add	r3,r3,r2
    b32c:	1d80022e 	bgeu	r3,r22,b338 <__muldf3+0x2b8>
    b330:	00800074 	movhi	r2,1
    b334:	a0a9883a 	add	r20,r20,r2
    b338:	1804d43a 	srli	r2,r3,16
    b33c:	1806943a 	slli	r3,r3,16
    b340:	982cd43a 	srli	r22,r19,16
    b344:	9d7fffcc 	andi	r21,r19,65535
    b348:	e009883a 	mov	r4,fp
    b34c:	54ffffcc 	andi	r19,r10,65535
    b350:	a80b883a 	mov	r5,r21
    b354:	1ce7883a 	add	r19,r3,r19
    b358:	d9800515 	stw	r6,20(sp)
    b35c:	da000415 	stw	r8,16(sp)
    b360:	d9c00315 	stw	r7,12(sp)
    b364:	1529883a 	add	r20,r2,r20
    b368:	0008b4c0 	call	8b4c <__mulsi3>
    b36c:	e00b883a 	mov	r5,fp
    b370:	b009883a 	mov	r4,r22
    b374:	d8800215 	stw	r2,8(sp)
    b378:	0008b4c0 	call	8b4c <__mulsi3>
    b37c:	8809883a 	mov	r4,r17
    b380:	b00b883a 	mov	r5,r22
    b384:	1039883a 	mov	fp,r2
    b388:	0008b4c0 	call	8b4c <__mulsi3>
    b38c:	8809883a 	mov	r4,r17
    b390:	a80b883a 	mov	r5,r21
    b394:	1023883a 	mov	r17,r2
    b398:	0008b4c0 	call	8b4c <__mulsi3>
    b39c:	d8c00217 	ldw	r3,8(sp)
    b3a0:	1705883a 	add	r2,r2,fp
    b3a4:	d9c00317 	ldw	r7,12(sp)
    b3a8:	1808d43a 	srli	r4,r3,16
    b3ac:	da000417 	ldw	r8,16(sp)
    b3b0:	d9800517 	ldw	r6,20(sp)
    b3b4:	2089883a 	add	r4,r4,r2
    b3b8:	94e5883a 	add	r18,r18,r19
    b3bc:	2700022e 	bgeu	r4,fp,b3c8 <__muldf3+0x348>
    b3c0:	00800074 	movhi	r2,1
    b3c4:	88a3883a 	add	r17,r17,r2
    b3c8:	2004d43a 	srli	r2,r4,16
    b3cc:	2038943a 	slli	fp,r4,16
    b3d0:	18ffffcc 	andi	r3,r3,65535
    b3d4:	b809883a 	mov	r4,r23
    b3d8:	a80b883a 	mov	r5,r21
    b3dc:	d9800415 	stw	r6,16(sp)
    b3e0:	da000315 	stw	r8,12(sp)
    b3e4:	d9c00215 	stw	r7,8(sp)
    b3e8:	e0f9883a 	add	fp,fp,r3
    b3ec:	1463883a 	add	r17,r2,r17
    b3f0:	0008b4c0 	call	8b4c <__mulsi3>
    b3f4:	b80b883a 	mov	r5,r23
    b3f8:	b009883a 	mov	r4,r22
    b3fc:	102f883a 	mov	r23,r2
    b400:	0008b4c0 	call	8b4c <__mulsi3>
    b404:	b00b883a 	mov	r5,r22
    b408:	8009883a 	mov	r4,r16
    b40c:	102d883a 	mov	r22,r2
    b410:	0008b4c0 	call	8b4c <__mulsi3>
    b414:	a80b883a 	mov	r5,r21
    b418:	8009883a 	mov	r4,r16
    b41c:	1021883a 	mov	r16,r2
    b420:	0008b4c0 	call	8b4c <__mulsi3>
    b424:	b80ad43a 	srli	r5,r23,16
    b428:	1585883a 	add	r2,r2,r22
    b42c:	d9c00217 	ldw	r7,8(sp)
    b430:	288b883a 	add	r5,r5,r2
    b434:	da000317 	ldw	r8,12(sp)
    b438:	d9800417 	ldw	r6,16(sp)
    b43c:	2d80022e 	bgeu	r5,r22,b448 <__muldf3+0x3c8>
    b440:	00800074 	movhi	r2,1
    b444:	80a1883a 	add	r16,r16,r2
    b448:	2806943a 	slli	r3,r5,16
    b44c:	d8800017 	ldw	r2,0(sp)
    b450:	bdffffcc 	andi	r23,r23,65535
    b454:	1dc7883a 	add	r3,r3,r23
    b458:	90ab883a 	add	r21,r18,r2
    b45c:	acd5803a 	cmpltu	r10,r21,r19
    b460:	1d07883a 	add	r3,r3,r20
    b464:	af2b883a 	add	r21,r21,fp
    b468:	1a97883a 	add	r11,r3,r10
    b46c:	af09803a 	cmpltu	r4,r21,fp
    b470:	2826d43a 	srli	r19,r5,16
    b474:	5c53883a 	add	r9,r11,r17
    b478:	4905883a 	add	r2,r9,r4
    b47c:	1d07803a 	cmpltu	r3,r3,r20
    b480:	5a95803a 	cmpltu	r10,r11,r10
    b484:	1a86b03a 	or	r3,r3,r10
    b488:	1109803a 	cmpltu	r4,r2,r4
    b48c:	4c53803a 	cmpltu	r9,r9,r17
    b490:	1ce7883a 	add	r19,r3,r19
    b494:	4908b03a 	or	r4,r9,r4
    b498:	a824927a 	slli	r18,r21,9
    b49c:	d8c00117 	ldw	r3,4(sp)
    b4a0:	9927883a 	add	r19,r19,r4
    b4a4:	9c27883a 	add	r19,r19,r16
    b4a8:	9826927a 	slli	r19,r19,9
    b4ac:	a82ad5fa 	srli	r21,r21,23
    b4b0:	100ad5fa 	srli	r5,r2,23
    b4b4:	90e4b03a 	or	r18,r18,r3
    b4b8:	1004927a 	slli	r2,r2,9
    b4bc:	9024c03a 	cmpne	r18,r18,zero
    b4c0:	9564b03a 	or	r18,r18,r21
    b4c4:	98c0402c 	andhi	r3,r19,256
    b4c8:	90a4b03a 	or	r18,r18,r2
    b4cc:	9966b03a 	or	r19,r19,r5
    b4d0:	1800b626 	beq	r3,zero,b7ac <__muldf3+0x72c>
    b4d4:	9006d07a 	srli	r3,r18,1
    b4d8:	980497fa 	slli	r2,r19,31
    b4dc:	9480004c 	andi	r18,r18,1
    b4e0:	9826d07a 	srli	r19,r19,1
    b4e4:	1c86b03a 	or	r3,r3,r18
    b4e8:	18a4b03a 	or	r18,r3,r2
    b4ec:	3900ffc4 	addi	r4,r7,1023
    b4f0:	0100690e 	bge	zero,r4,b698 <__muldf3+0x618>
    b4f4:	908001cc 	andi	r2,r18,7
    b4f8:	10000726 	beq	r2,zero,b518 <__muldf3+0x498>
    b4fc:	908003cc 	andi	r2,r18,15
    b500:	10800120 	cmpeqi	r2,r2,4
    b504:	1000041e 	bne	r2,zero,b518 <__muldf3+0x498>
    b508:	90800104 	addi	r2,r18,4
    b50c:	14a5803a 	cmpltu	r18,r2,r18
    b510:	9ca7883a 	add	r19,r19,r18
    b514:	1025883a 	mov	r18,r2
    b518:	9880402c 	andhi	r2,r19,256
    b51c:	10000426 	beq	r2,zero,b530 <__muldf3+0x4b0>
    b520:	00bfc034 	movhi	r2,65280
    b524:	10bfffc4 	addi	r2,r2,-1
    b528:	98a6703a 	and	r19,r19,r2
    b52c:	39010004 	addi	r4,r7,1024
    b530:	2081ffc8 	cmpgei	r2,r4,2047
    b534:	103f381e 	bne	r2,zero,b218 <__muldf3+0x198>
    b538:	9804977a 	slli	r2,r19,29
    b53c:	9024d0fa 	srli	r18,r18,3
    b540:	9826927a 	slli	r19,r19,9
    b544:	20c1ffcc 	andi	r3,r4,2047
    b548:	14a4b03a 	or	r18,r2,r18
    b54c:	9826d33a 	srli	r19,r19,12
    b550:	003f2006 	br	b1d4 <__muldf3+0x154>
    b554:	8722b03a 	or	r17,r16,fp
    b558:	88004526 	beq	r17,zero,b670 <__muldf3+0x5f0>
    b55c:	da000015 	stw	r8,0(sp)
    b560:	80008626 	beq	r16,zero,b77c <__muldf3+0x6fc>
    b564:	8009883a 	mov	r4,r16
    b568:	000c5c00 	call	c5c0 <__clzsi2>
    b56c:	da000017 	ldw	r8,0(sp)
    b570:	117ffd44 	addi	r5,r2,-11
    b574:	01000744 	movi	r4,29
    b578:	147ffe04 	addi	r17,r2,-8
    b57c:	2149c83a 	sub	r4,r4,r5
    b580:	8460983a 	sll	r16,r16,r17
    b584:	e108d83a 	srl	r4,fp,r4
    b588:	e462983a 	sll	r17,fp,r17
    b58c:	2420b03a 	or	r16,r4,r16
    b590:	4091c83a 	sub	r8,r8,r2
    b594:	423f0344 	addi	r8,r8,-1011
    b598:	0009883a 	mov	r4,zero
    b59c:	003ee706 	br	b13c <__muldf3+0xbc>
    b5a0:	9924b03a 	or	r18,r19,r4
    b5a4:	90002d26 	beq	r18,zero,b65c <__muldf3+0x5dc>
    b5a8:	d9c00015 	stw	r7,0(sp)
    b5ac:	98006826 	beq	r19,zero,b750 <__muldf3+0x6d0>
    b5b0:	9809883a 	mov	r4,r19
    b5b4:	000c5c00 	call	c5c0 <__clzsi2>
    b5b8:	d9c00017 	ldw	r7,0(sp)
    b5bc:	113ffd44 	addi	r4,r2,-11
    b5c0:	00c00744 	movi	r3,29
    b5c4:	14bffe04 	addi	r18,r2,-8
    b5c8:	1907c83a 	sub	r3,r3,r4
    b5cc:	9ca6983a 	sll	r19,r19,r18
    b5d0:	88c6d83a 	srl	r3,r17,r3
    b5d4:	8ca4983a 	sll	r18,r17,r18
    b5d8:	1ce6b03a 	or	r19,r3,r19
    b5dc:	023f0344 	movi	r8,-1011
    b5e0:	4091c83a 	sub	r8,r8,r2
    b5e4:	002b883a 	mov	r21,zero
    b5e8:	002d883a 	mov	r22,zero
    b5ec:	003ec206 	br	b0f8 <__muldf3+0x78>
    b5f0:	9924b03a 	or	r18,r19,r4
    b5f4:	9000141e 	bne	r18,zero,b648 <__muldf3+0x5c8>
    b5f8:	0027883a 	mov	r19,zero
    b5fc:	05400204 	movi	r21,8
    b600:	0201ffc4 	movi	r8,2047
    b604:	05800084 	movi	r22,2
    b608:	003ebb06 	br	b0f8 <__muldf3+0x78>
    b60c:	8722b03a 	or	r17,r16,fp
    b610:	4201ffc4 	addi	r8,r8,2047
    b614:	8800081e 	bne	r17,zero,b638 <__muldf3+0x5b8>
    b618:	ad400094 	ori	r21,r21,2
    b61c:	0021883a 	mov	r16,zero
    b620:	01000084 	movi	r4,2
    b624:	003ec506 	br	b13c <__muldf3+0xbc>
    b628:	b08000a0 	cmpeqi	r2,r22,2
    b62c:	a00d883a 	mov	r6,r20
    b630:	103ee126 	beq	r2,zero,b1b8 <__muldf3+0x138>
    b634:	003ef806 	br	b218 <__muldf3+0x198>
    b638:	ad4000d4 	ori	r21,r21,3
    b63c:	e023883a 	mov	r17,fp
    b640:	010000c4 	movi	r4,3
    b644:	003ebd06 	br	b13c <__muldf3+0xbc>
    b648:	2025883a 	mov	r18,r4
    b64c:	05400304 	movi	r21,12
    b650:	0201ffc4 	movi	r8,2047
    b654:	058000c4 	movi	r22,3
    b658:	003ea706 	br	b0f8 <__muldf3+0x78>
    b65c:	0027883a 	mov	r19,zero
    b660:	05400104 	movi	r21,4
    b664:	0011883a 	mov	r8,zero
    b668:	05800044 	movi	r22,1
    b66c:	003ea206 	br	b0f8 <__muldf3+0x78>
    b670:	ad400054 	ori	r21,r21,1
    b674:	0021883a 	mov	r16,zero
    b678:	01000044 	movi	r4,1
    b67c:	003eaf06 	br	b13c <__muldf3+0xbc>
    b680:	04c00434 	movhi	r19,16
    b684:	000d883a 	mov	r6,zero
    b688:	9cffffc4 	addi	r19,r19,-1
    b68c:	04bfffc4 	movi	r18,-1
    b690:	00c1ffc4 	movi	r3,2047
    b694:	003ecf06 	br	b1d4 <__muldf3+0x154>
    b698:	00800044 	movi	r2,1
    b69c:	1105c83a 	sub	r2,r2,r4
    b6a0:	10c00e48 	cmpgei	r3,r2,57
    b6a4:	183ec81e 	bne	r3,zero,b1c8 <__muldf3+0x148>
    b6a8:	10c00808 	cmpgei	r3,r2,32
    b6ac:	1800411e 	bne	r3,zero,b7b4 <__muldf3+0x734>
    b6b0:	39c10784 	addi	r7,r7,1054
    b6b4:	99c6983a 	sll	r3,r19,r7
    b6b8:	9088d83a 	srl	r4,r18,r2
    b6bc:	91ce983a 	sll	r7,r18,r7
    b6c0:	98a6d83a 	srl	r19,r19,r2
    b6c4:	1904b03a 	or	r2,r3,r4
    b6c8:	3824c03a 	cmpne	r18,r7,zero
    b6cc:	1484b03a 	or	r2,r2,r18
    b6d0:	10c001cc 	andi	r3,r2,7
    b6d4:	18000726 	beq	r3,zero,b6f4 <__muldf3+0x674>
    b6d8:	10c003cc 	andi	r3,r2,15
    b6dc:	18c00120 	cmpeqi	r3,r3,4
    b6e0:	1800041e 	bne	r3,zero,b6f4 <__muldf3+0x674>
    b6e4:	10c00104 	addi	r3,r2,4
    b6e8:	1885803a 	cmpltu	r2,r3,r2
    b6ec:	98a7883a 	add	r19,r19,r2
    b6f0:	1805883a 	mov	r2,r3
    b6f4:	98c0202c 	andhi	r3,r19,128
    b6f8:	18004326 	beq	r3,zero,b808 <__muldf3+0x788>
    b6fc:	00c00044 	movi	r3,1
    b700:	0027883a 	mov	r19,zero
    b704:	0025883a 	mov	r18,zero
    b708:	003eb206 	br	b1d4 <__muldf3+0x154>
    b70c:	9880022c 	andhi	r2,r19,8
    b710:	10000926 	beq	r2,zero,b738 <__muldf3+0x6b8>
    b714:	8080022c 	andhi	r2,r16,8
    b718:	1000071e 	bne	r2,zero,b738 <__muldf3+0x6b8>
    b71c:	00800434 	movhi	r2,16
    b720:	84c00234 	orhi	r19,r16,8
    b724:	10bfffc4 	addi	r2,r2,-1
    b728:	98a6703a 	and	r19,r19,r2
    b72c:	b80d883a 	mov	r6,r23
    b730:	8825883a 	mov	r18,r17
    b734:	003fd606 	br	b690 <__muldf3+0x610>
    b738:	00800434 	movhi	r2,16
    b73c:	9cc00234 	orhi	r19,r19,8
    b740:	10bfffc4 	addi	r2,r2,-1
    b744:	98a6703a 	and	r19,r19,r2
    b748:	a00d883a 	mov	r6,r20
    b74c:	003fd006 	br	b690 <__muldf3+0x610>
    b750:	000c5c00 	call	c5c0 <__clzsi2>
    b754:	11000544 	addi	r4,r2,21
    b758:	21400748 	cmpgei	r5,r4,29
    b75c:	1007883a 	mov	r3,r2
    b760:	d9c00017 	ldw	r7,0(sp)
    b764:	10800804 	addi	r2,r2,32
    b768:	283f9526 	beq	r5,zero,b5c0 <__muldf3+0x540>
    b76c:	18fffe04 	addi	r3,r3,-8
    b770:	88e6983a 	sll	r19,r17,r3
    b774:	0025883a 	mov	r18,zero
    b778:	003f9806 	br	b5dc <__muldf3+0x55c>
    b77c:	e009883a 	mov	r4,fp
    b780:	000c5c00 	call	c5c0 <__clzsi2>
    b784:	11400544 	addi	r5,r2,21
    b788:	29000748 	cmpgei	r4,r5,29
    b78c:	1007883a 	mov	r3,r2
    b790:	da000017 	ldw	r8,0(sp)
    b794:	10800804 	addi	r2,r2,32
    b798:	203f7626 	beq	r4,zero,b574 <__muldf3+0x4f4>
    b79c:	1c3ffe04 	addi	r16,r3,-8
    b7a0:	e420983a 	sll	r16,fp,r16
    b7a4:	0023883a 	mov	r17,zero
    b7a8:	003f7906 	br	b590 <__muldf3+0x510>
    b7ac:	400f883a 	mov	r7,r8
    b7b0:	003f4e06 	br	b4ec <__muldf3+0x46c>
    b7b4:	00fff844 	movi	r3,-31
    b7b8:	1907c83a 	sub	r3,r3,r4
    b7bc:	10800820 	cmpeqi	r2,r2,32
    b7c0:	98c6d83a 	srl	r3,r19,r3
    b7c4:	1000031e 	bne	r2,zero,b7d4 <__muldf3+0x754>
    b7c8:	39c10f84 	addi	r7,r7,1086
    b7cc:	99e6983a 	sll	r19,r19,r7
    b7d0:	94e4b03a 	or	r18,r18,r19
    b7d4:	9024c03a 	cmpne	r18,r18,zero
    b7d8:	90c4b03a 	or	r2,r18,r3
    b7dc:	148001cc 	andi	r18,r2,7
    b7e0:	9000051e 	bne	r18,zero,b7f8 <__muldf3+0x778>
    b7e4:	0027883a 	mov	r19,zero
    b7e8:	1004d0fa 	srli	r2,r2,3
    b7ec:	0007883a 	mov	r3,zero
    b7f0:	14a4b03a 	or	r18,r2,r18
    b7f4:	003e7706 	br	b1d4 <__muldf3+0x154>
    b7f8:	10c003cc 	andi	r3,r2,15
    b7fc:	18c00118 	cmpnei	r3,r3,4
    b800:	0027883a 	mov	r19,zero
    b804:	183fb71e 	bne	r3,zero,b6e4 <__muldf3+0x664>
    b808:	9806927a 	slli	r3,r19,9
    b80c:	9824977a 	slli	r18,r19,29
    b810:	1826d33a 	srli	r19,r3,12
    b814:	003ff406 	br	b7e8 <__muldf3+0x768>
    b818:	00800434 	movhi	r2,16
    b81c:	9cc00234 	orhi	r19,r19,8
    b820:	10bfffc4 	addi	r2,r2,-1
    b824:	98a6703a 	and	r19,r19,r2
    b828:	003f9906 	br	b690 <__muldf3+0x610>

0000b82c <__subdf3>:
    b82c:	00800434 	movhi	r2,16
    b830:	defffb04 	addi	sp,sp,-20
    b834:	3812d53a 	srli	r9,r7,20
    b838:	10bfffc4 	addi	r2,r2,-1
    b83c:	2886703a 	and	r3,r5,r2
    b840:	dc000015 	stw	r16,0(sp)
    b844:	3884703a 	and	r2,r7,r2
    b848:	2820d53a 	srli	r16,r5,20
    b84c:	3014d77a 	srli	r10,r6,29
    b850:	280ad7fa 	srli	r5,r5,31
    b854:	180690fa 	slli	r3,r3,3
    b858:	2016d77a 	srli	r11,r4,29
    b85c:	100490fa 	slli	r2,r2,3
    b860:	4a41ffcc 	andi	r9,r9,2047
    b864:	dc800215 	stw	r18,8(sp)
    b868:	8401ffcc 	andi	r16,r16,2047
    b86c:	dfc00415 	stw	ra,16(sp)
    b870:	dcc00315 	stw	r19,12(sp)
    b874:	dc400115 	stw	r17,4(sp)
    b878:	4b01ffd8 	cmpnei	r12,r9,2047
    b87c:	3810d7fa 	srli	r8,r7,31
    b880:	2825883a 	mov	r18,r5
    b884:	5084b03a 	or	r2,r10,r2
    b888:	201c90fa 	slli	r14,r4,3
    b88c:	301a90fa 	slli	r13,r6,3
    b890:	29403fcc 	andi	r5,r5,255
    b894:	58ceb03a 	or	r7,r11,r3
    b898:	8255c83a 	sub	r10,r16,r9
    b89c:	60006826 	beq	r12,zero,ba40 <__subdf3+0x214>
    b8a0:	42c0005c 	xori	r11,r8,1
    b8a4:	2ac07326 	beq	r5,r11,ba74 <__subdf3+0x248>
    b8a8:	0280590e 	bge	zero,r10,ba10 <__subdf3+0x1e4>
    b8ac:	4800691e 	bne	r9,zero,ba54 <__subdf3+0x228>
    b8b0:	1346b03a 	or	r3,r2,r13
    b8b4:	1800e826 	beq	r3,zero,bc58 <__subdf3+0x42c>
    b8b8:	50ffffc4 	addi	r3,r10,-1
    b8bc:	18018126 	beq	r3,zero,bec4 <__subdf3+0x698>
    b8c0:	5281ffd8 	cmpnei	r10,r10,2047
    b8c4:	5000eb26 	beq	r10,zero,bc74 <__subdf3+0x448>
    b8c8:	1815883a 	mov	r10,r3
    b8cc:	50c00e48 	cmpgei	r3,r10,57
    b8d0:	1800651e 	bne	r3,zero,ba68 <__subdf3+0x23c>
    b8d4:	50c00808 	cmpgei	r3,r10,32
    b8d8:	18012a1e 	bne	r3,zero,bd84 <__subdf3+0x558>
    b8dc:	00c00804 	movi	r3,32
    b8e0:	1a87c83a 	sub	r3,r3,r10
    b8e4:	10e2983a 	sll	r17,r2,r3
    b8e8:	6a88d83a 	srl	r4,r13,r10
    b8ec:	68da983a 	sll	r13,r13,r3
    b8f0:	1284d83a 	srl	r2,r2,r10
    b8f4:	8922b03a 	or	r17,r17,r4
    b8f8:	681ac03a 	cmpne	r13,r13,zero
    b8fc:	8b62b03a 	or	r17,r17,r13
    b900:	388fc83a 	sub	r7,r7,r2
    b904:	7463c83a 	sub	r17,r14,r17
    b908:	7445803a 	cmpltu	r2,r14,r17
    b90c:	3889c83a 	sub	r4,r7,r2
    b910:	2080202c 	andhi	r2,r4,128
    b914:	10008e26 	beq	r2,zero,bb50 <__subdf3+0x324>
    b918:	04c02034 	movhi	r19,128
    b91c:	9cffffc4 	addi	r19,r19,-1
    b920:	24e6703a 	and	r19,r4,r19
    b924:	9800a626 	beq	r19,zero,bbc0 <__subdf3+0x394>
    b928:	9809883a 	mov	r4,r19
    b92c:	000c5c00 	call	c5c0 <__clzsi2>
    b930:	117ffe04 	addi	r5,r2,-8
    b934:	01000804 	movi	r4,32
    b938:	2149c83a 	sub	r4,r4,r5
    b93c:	8908d83a 	srl	r4,r17,r4
    b940:	9944983a 	sll	r2,r19,r5
    b944:	8962983a 	sll	r17,r17,r5
    b948:	2084b03a 	or	r2,r4,r2
    b94c:	2c00a516 	blt	r5,r16,bbe4 <__subdf3+0x3b8>
    b950:	2c0bc83a 	sub	r5,r5,r16
    b954:	29000044 	addi	r4,r5,1
    b958:	20c00808 	cmpgei	r3,r4,32
    b95c:	1800701e 	bne	r3,zero,bb20 <__subdf3+0x2f4>
    b960:	00c00804 	movi	r3,32
    b964:	1907c83a 	sub	r3,r3,r4
    b968:	890ad83a 	srl	r5,r17,r4
    b96c:	88e2983a 	sll	r17,r17,r3
    b970:	10c6983a 	sll	r3,r2,r3
    b974:	1108d83a 	srl	r4,r2,r4
    b978:	8822c03a 	cmpne	r17,r17,zero
    b97c:	1946b03a 	or	r3,r3,r5
    b980:	1c62b03a 	or	r17,r3,r17
    b984:	0021883a 	mov	r16,zero
    b988:	888001cc 	andi	r2,r17,7
    b98c:	10000726 	beq	r2,zero,b9ac <__subdf3+0x180>
    b990:	888003cc 	andi	r2,r17,15
    b994:	10800120 	cmpeqi	r2,r2,4
    b998:	1000041e 	bne	r2,zero,b9ac <__subdf3+0x180>
    b99c:	88800104 	addi	r2,r17,4
    b9a0:	1463803a 	cmpltu	r17,r2,r17
    b9a4:	2449883a 	add	r4,r4,r17
    b9a8:	1023883a 	mov	r17,r2
    b9ac:	2080202c 	andhi	r2,r4,128
    b9b0:	10006926 	beq	r2,zero,bb58 <__subdf3+0x32c>
    b9b4:	84000044 	addi	r16,r16,1
    b9b8:	8081ffe0 	cmpeqi	r2,r16,2047
    b9bc:	8401ffcc 	andi	r16,r16,2047
    b9c0:	10007b1e 	bne	r2,zero,bbb0 <__subdf3+0x384>
    b9c4:	00bfe034 	movhi	r2,65408
    b9c8:	10bfffc4 	addi	r2,r2,-1
    b9cc:	2084703a 	and	r2,r4,r2
    b9d0:	1006927a 	slli	r3,r2,9
    b9d4:	8822d0fa 	srli	r17,r17,3
    b9d8:	1008977a 	slli	r4,r2,29
    b9dc:	1806d33a 	srli	r3,r3,12
    b9e0:	2444b03a 	or	r2,r4,r17
    b9e4:	8020953a 	slli	r16,r16,20
    b9e8:	902497fa 	slli	r18,r18,31
    b9ec:	80c6b03a 	or	r3,r16,r3
    b9f0:	1c86b03a 	or	r3,r3,r18
    b9f4:	dfc00417 	ldw	ra,16(sp)
    b9f8:	dcc00317 	ldw	r19,12(sp)
    b9fc:	dc800217 	ldw	r18,8(sp)
    ba00:	dc400117 	ldw	r17,4(sp)
    ba04:	dc000017 	ldw	r16,0(sp)
    ba08:	dec00504 	addi	sp,sp,20
    ba0c:	f800283a 	ret
    ba10:	50002c26 	beq	r10,zero,bac4 <__subdf3+0x298>
    ba14:	4c15c83a 	sub	r10,r9,r16
    ba18:	5825883a 	mov	r18,r11
    ba1c:	8000b21e 	bne	r16,zero,bce8 <__subdf3+0x4bc>
    ba20:	3b86b03a 	or	r3,r7,r14
    ba24:	18010826 	beq	r3,zero,be48 <__subdf3+0x61c>
    ba28:	50ffffc4 	addi	r3,r10,-1
    ba2c:	18015a26 	beq	r3,zero,bf98 <__subdf3+0x76c>
    ba30:	5401ffd8 	cmpnei	r16,r10,2047
    ba34:	80012926 	beq	r16,zero,bedc <__subdf3+0x6b0>
    ba38:	1815883a 	mov	r10,r3
    ba3c:	0000ac06 	br	bcf0 <__subdf3+0x4c4>
    ba40:	1346b03a 	or	r3,r2,r13
    ba44:	183f9626 	beq	r3,zero,b8a0 <__subdf3+0x74>
    ba48:	42c03fcc 	andi	r11,r8,255
    ba4c:	2a006a26 	beq	r5,r8,bbf8 <__subdf3+0x3cc>
    ba50:	02bfef0e 	bge	zero,r10,ba10 <__subdf3+0x1e4>
    ba54:	80c1ffd8 	cmpnei	r3,r16,2047
    ba58:	18008626 	beq	r3,zero,bc74 <__subdf3+0x448>
    ba5c:	50c00e48 	cmpgei	r3,r10,57
    ba60:	10802034 	orhi	r2,r2,128
    ba64:	183f9b26 	beq	r3,zero,b8d4 <__subdf3+0xa8>
    ba68:	1344b03a 	or	r2,r2,r13
    ba6c:	1022c03a 	cmpne	r17,r2,zero
    ba70:	003fa406 	br	b904 <__subdf3+0xd8>
    ba74:	0280600e 	bge	zero,r10,bbf8 <__subdf3+0x3cc>
    ba78:	48002126 	beq	r9,zero,bb00 <__subdf3+0x2d4>
    ba7c:	80c1ffd8 	cmpnei	r3,r16,2047
    ba80:	18011d26 	beq	r3,zero,bef8 <__subdf3+0x6cc>
    ba84:	10802034 	orhi	r2,r2,128
    ba88:	50c00e48 	cmpgei	r3,r10,57
    ba8c:	18003e1e 	bne	r3,zero,bb88 <__subdf3+0x35c>
    ba90:	50c00808 	cmpgei	r3,r10,32
    ba94:	1800d526 	beq	r3,zero,bdec <__subdf3+0x5c0>
    ba98:	547ff804 	addi	r17,r10,-32
    ba9c:	51000820 	cmpeqi	r4,r10,32
    baa0:	1446d83a 	srl	r3,r2,r17
    baa4:	2000041e 	bne	r4,zero,bab8 <__subdf3+0x28c>
    baa8:	01001004 	movi	r4,64
    baac:	2295c83a 	sub	r10,r4,r10
    bab0:	1284983a 	sll	r2,r2,r10
    bab4:	689ab03a 	or	r13,r13,r2
    bab8:	6822c03a 	cmpne	r17,r13,zero
    babc:	88e2b03a 	or	r17,r17,r3
    bac0:	00003306 	br	bb90 <__subdf3+0x364>
    bac4:	80c00044 	addi	r3,r16,1
    bac8:	18c1ff8c 	andi	r3,r3,2046
    bacc:	1800971e 	bne	r3,zero,bd2c <__subdf3+0x500>
    bad0:	1350b03a 	or	r8,r2,r13
    bad4:	3b86b03a 	or	r3,r7,r14
    bad8:	8000e21e 	bne	r16,zero,be64 <__subdf3+0x638>
    badc:	18012526 	beq	r3,zero,bf74 <__subdf3+0x748>
    bae0:	4001411e 	bne	r8,zero,bfe8 <__subdf3+0x7bc>
    bae4:	3806977a 	slli	r3,r7,29
    bae8:	00880034 	movhi	r2,8192
    baec:	10bfffc4 	addi	r2,r2,-1
    baf0:	208a703a 	and	r5,r4,r2
    baf4:	3810d0fa 	srli	r8,r7,3
    baf8:	28c4b03a 	or	r2,r5,r3
    bafc:	00001d06 	br	bb74 <__subdf3+0x348>
    bb00:	1346b03a 	or	r3,r2,r13
    bb04:	18005426 	beq	r3,zero,bc58 <__subdf3+0x42c>
    bb08:	50ffffc4 	addi	r3,r10,-1
    bb0c:	1800e526 	beq	r3,zero,bea4 <__subdf3+0x678>
    bb10:	5281ffd8 	cmpnei	r10,r10,2047
    bb14:	50012d26 	beq	r10,zero,bfcc <__subdf3+0x7a0>
    bb18:	1815883a 	mov	r10,r3
    bb1c:	003fda06 	br	ba88 <__subdf3+0x25c>
    bb20:	297ff844 	addi	r5,r5,-31
    bb24:	20c00820 	cmpeqi	r3,r4,32
    bb28:	114ad83a 	srl	r5,r2,r5
    bb2c:	1800041e 	bne	r3,zero,bb40 <__subdf3+0x314>
    bb30:	00c01004 	movi	r3,64
    bb34:	1909c83a 	sub	r4,r3,r4
    bb38:	1104983a 	sll	r2,r2,r4
    bb3c:	88a2b03a 	or	r17,r17,r2
    bb40:	8822c03a 	cmpne	r17,r17,zero
    bb44:	8962b03a 	or	r17,r17,r5
    bb48:	0009883a 	mov	r4,zero
    bb4c:	0021883a 	mov	r16,zero
    bb50:	888001cc 	andi	r2,r17,7
    bb54:	103f8e1e 	bne	r2,zero,b990 <__subdf3+0x164>
    bb58:	8822d0fa 	srli	r17,r17,3
    bb5c:	2004977a 	slli	r2,r4,29
    bb60:	2010d0fa 	srli	r8,r4,3
    bb64:	8015883a 	mov	r10,r16
    bb68:	8884b03a 	or	r2,r17,r2
    bb6c:	50c1ffe0 	cmpeqi	r3,r10,2047
    bb70:	18016f1e 	bne	r3,zero,c130 <__subdf3+0x904>
    bb74:	00c00434 	movhi	r3,16
    bb78:	18ffffc4 	addi	r3,r3,-1
    bb7c:	40c6703a 	and	r3,r8,r3
    bb80:	5401ffcc 	andi	r16,r10,2047
    bb84:	003f9706 	br	b9e4 <__subdf3+0x1b8>
    bb88:	1344b03a 	or	r2,r2,r13
    bb8c:	1022c03a 	cmpne	r17,r2,zero
    bb90:	8ba3883a 	add	r17,r17,r14
    bb94:	8b85803a 	cmpltu	r2,r17,r14
    bb98:	11c9883a 	add	r4,r2,r7
    bb9c:	2080202c 	andhi	r2,r4,128
    bba0:	103feb26 	beq	r2,zero,bb50 <__subdf3+0x324>
    bba4:	84000044 	addi	r16,r16,1
    bba8:	8081ffe0 	cmpeqi	r2,r16,2047
    bbac:	10006b26 	beq	r2,zero,bd5c <__subdf3+0x530>
    bbb0:	0401ffc4 	movi	r16,2047
    bbb4:	0007883a 	mov	r3,zero
    bbb8:	0005883a 	mov	r2,zero
    bbbc:	003f8906 	br	b9e4 <__subdf3+0x1b8>
    bbc0:	8809883a 	mov	r4,r17
    bbc4:	000c5c00 	call	c5c0 <__clzsi2>
    bbc8:	11400604 	addi	r5,r2,24
    bbcc:	28c00808 	cmpgei	r3,r5,32
    bbd0:	183f5826 	beq	r3,zero,b934 <__subdf3+0x108>
    bbd4:	10bffe04 	addi	r2,r2,-8
    bbd8:	8884983a 	sll	r2,r17,r2
    bbdc:	0023883a 	mov	r17,zero
    bbe0:	2c3f5b0e 	bge	r5,r16,b950 <__subdf3+0x124>
    bbe4:	013fe034 	movhi	r4,65408
    bbe8:	213fffc4 	addi	r4,r4,-1
    bbec:	8161c83a 	sub	r16,r16,r5
    bbf0:	1108703a 	and	r4,r2,r4
    bbf4:	003f6406 	br	b988 <__subdf3+0x15c>
    bbf8:	50002c26 	beq	r10,zero,bcac <__subdf3+0x480>
    bbfc:	4c15c83a 	sub	r10,r9,r16
    bc00:	80007226 	beq	r16,zero,bdcc <__subdf3+0x5a0>
    bc04:	6000ea26 	beq	r12,zero,bfb0 <__subdf3+0x784>
    bc08:	39c02034 	orhi	r7,r7,128
    bc0c:	50c00e48 	cmpgei	r3,r10,57
    bc10:	1800c01e 	bne	r3,zero,bf14 <__subdf3+0x6e8>
    bc14:	50c00808 	cmpgei	r3,r10,32
    bc18:	1801261e 	bne	r3,zero,c0b4 <__subdf3+0x888>
    bc1c:	00c00804 	movi	r3,32
    bc20:	1a87c83a 	sub	r3,r3,r10
    bc24:	38e2983a 	sll	r17,r7,r3
    bc28:	7288d83a 	srl	r4,r14,r10
    bc2c:	70c6983a 	sll	r3,r14,r3
    bc30:	3a8ed83a 	srl	r7,r7,r10
    bc34:	8922b03a 	or	r17,r17,r4
    bc38:	1806c03a 	cmpne	r3,r3,zero
    bc3c:	88e2b03a 	or	r17,r17,r3
    bc40:	11c5883a 	add	r2,r2,r7
    bc44:	8b63883a 	add	r17,r17,r13
    bc48:	8b49803a 	cmpltu	r4,r17,r13
    bc4c:	2089883a 	add	r4,r4,r2
    bc50:	4821883a 	mov	r16,r9
    bc54:	003fd106 	br	bb9c <__subdf3+0x370>
    bc58:	380c977a 	slli	r6,r7,29
    bc5c:	00880034 	movhi	r2,8192
    bc60:	10bfffc4 	addi	r2,r2,-1
    bc64:	2088703a 	and	r4,r4,r2
    bc68:	3810d0fa 	srli	r8,r7,3
    bc6c:	2184b03a 	or	r2,r4,r6
    bc70:	003fbe06 	br	bb6c <__subdf3+0x340>
    bc74:	380c977a 	slli	r6,r7,29
    bc78:	00880034 	movhi	r2,8192
    bc7c:	10bfffc4 	addi	r2,r2,-1
    bc80:	380ed0fa 	srli	r7,r7,3
    bc84:	2084703a 	and	r2,r4,r2
    bc88:	1184b03a 	or	r2,r2,r6
    bc8c:	3886b03a 	or	r3,r7,r2
    bc90:	18012326 	beq	r3,zero,c120 <__subdf3+0x8f4>
    bc94:	01000434 	movhi	r4,16
    bc98:	38c00234 	orhi	r3,r7,8
    bc9c:	213fffc4 	addi	r4,r4,-1
    bca0:	1906703a 	and	r3,r3,r4
    bca4:	0401ffc4 	movi	r16,2047
    bca8:	003f4e06 	br	b9e4 <__subdf3+0x1b8>
    bcac:	80c00044 	addi	r3,r16,1
    bcb0:	1941ff8c 	andi	r5,r3,2046
    bcb4:	2800581e 	bne	r5,zero,be18 <__subdf3+0x5ec>
    bcb8:	3b86b03a 	or	r3,r7,r14
    bcbc:	8000a31e 	bne	r16,zero,bf4c <__subdf3+0x720>
    bcc0:	1800ea26 	beq	r3,zero,c06c <__subdf3+0x840>
    bcc4:	1346b03a 	or	r3,r2,r13
    bcc8:	1800ef1e 	bne	r3,zero,c088 <__subdf3+0x85c>
    bccc:	380a977a 	slli	r5,r7,29
    bcd0:	00880034 	movhi	r2,8192
    bcd4:	10bfffc4 	addi	r2,r2,-1
    bcd8:	2084703a 	and	r2,r4,r2
    bcdc:	3810d0fa 	srli	r8,r7,3
    bce0:	2884b03a 	or	r2,r5,r2
    bce4:	003fa306 	br	bb74 <__subdf3+0x348>
    bce8:	60007c26 	beq	r12,zero,bedc <__subdf3+0x6b0>
    bcec:	39c02034 	orhi	r7,r7,128
    bcf0:	50c00e48 	cmpgei	r3,r10,57
    bcf4:	18002e1e 	bne	r3,zero,bdb0 <__subdf3+0x584>
    bcf8:	50c00808 	cmpgei	r3,r10,32
    bcfc:	1800881e 	bne	r3,zero,bf20 <__subdf3+0x6f4>
    bd00:	00c00804 	movi	r3,32
    bd04:	1a87c83a 	sub	r3,r3,r10
    bd08:	7288d83a 	srl	r4,r14,r10
    bd0c:	38e2983a 	sll	r17,r7,r3
    bd10:	70dc983a 	sll	r14,r14,r3
    bd14:	3aa0d83a 	srl	r16,r7,r10
    bd18:	8922b03a 	or	r17,r17,r4
    bd1c:	701cc03a 	cmpne	r14,r14,zero
    bd20:	8ba2b03a 	or	r17,r17,r14
    bd24:	1405c83a 	sub	r2,r2,r16
    bd28:	00002306 	br	bdb8 <__subdf3+0x58c>
    bd2c:	7363c83a 	sub	r17,r14,r13
    bd30:	3889c83a 	sub	r4,r7,r2
    bd34:	7467803a 	cmpltu	r19,r14,r17
    bd38:	24e7c83a 	sub	r19,r4,r19
    bd3c:	98c0202c 	andhi	r3,r19,128
    bd40:	1800521e 	bne	r3,zero,be8c <__subdf3+0x660>
    bd44:	8cc4b03a 	or	r2,r17,r19
    bd48:	103ef61e 	bne	r2,zero,b924 <__subdf3+0xf8>
    bd4c:	0011883a 	mov	r8,zero
    bd50:	0025883a 	mov	r18,zero
    bd54:	003f8706 	br	bb74 <__subdf3+0x348>
    bd58:	04000084 	movi	r16,2
    bd5c:	00bfe034 	movhi	r2,65408
    bd60:	10bfffc4 	addi	r2,r2,-1
    bd64:	8806d07a 	srli	r3,r17,1
    bd68:	2084703a 	and	r2,r4,r2
    bd6c:	100a97fa 	slli	r5,r2,31
    bd70:	8c40004c 	andi	r17,r17,1
    bd74:	1c62b03a 	or	r17,r3,r17
    bd78:	1008d07a 	srli	r4,r2,1
    bd7c:	2c62b03a 	or	r17,r5,r17
    bd80:	003f0106 	br	b988 <__subdf3+0x15c>
    bd84:	547ff804 	addi	r17,r10,-32
    bd88:	51000820 	cmpeqi	r4,r10,32
    bd8c:	1446d83a 	srl	r3,r2,r17
    bd90:	2000041e 	bne	r4,zero,bda4 <__subdf3+0x578>
    bd94:	01001004 	movi	r4,64
    bd98:	2295c83a 	sub	r10,r4,r10
    bd9c:	1284983a 	sll	r2,r2,r10
    bda0:	689ab03a 	or	r13,r13,r2
    bda4:	6822c03a 	cmpne	r17,r13,zero
    bda8:	88e2b03a 	or	r17,r17,r3
    bdac:	003ed506 	br	b904 <__subdf3+0xd8>
    bdb0:	3ba2b03a 	or	r17,r7,r14
    bdb4:	8822c03a 	cmpne	r17,r17,zero
    bdb8:	6c63c83a 	sub	r17,r13,r17
    bdbc:	6c49803a 	cmpltu	r4,r13,r17
    bdc0:	1109c83a 	sub	r4,r2,r4
    bdc4:	4821883a 	mov	r16,r9
    bdc8:	003ed106 	br	b910 <__subdf3+0xe4>
    bdcc:	3b86b03a 	or	r3,r7,r14
    bdd0:	18001d26 	beq	r3,zero,be48 <__subdf3+0x61c>
    bdd4:	50ffffc4 	addi	r3,r10,-1
    bdd8:	1800c126 	beq	r3,zero,c0e0 <__subdf3+0x8b4>
    bddc:	5281ffd8 	cmpnei	r10,r10,2047
    bde0:	50003e26 	beq	r10,zero,bedc <__subdf3+0x6b0>
    bde4:	1815883a 	mov	r10,r3
    bde8:	003f8806 	br	bc0c <__subdf3+0x3e0>
    bdec:	00c00804 	movi	r3,32
    bdf0:	1a87c83a 	sub	r3,r3,r10
    bdf4:	10e2983a 	sll	r17,r2,r3
    bdf8:	6a88d83a 	srl	r4,r13,r10
    bdfc:	68da983a 	sll	r13,r13,r3
    be00:	1284d83a 	srl	r2,r2,r10
    be04:	8922b03a 	or	r17,r17,r4
    be08:	681ac03a 	cmpne	r13,r13,zero
    be0c:	8b62b03a 	or	r17,r17,r13
    be10:	388f883a 	add	r7,r7,r2
    be14:	003f5e06 	br	bb90 <__subdf3+0x364>
    be18:	1901ffe0 	cmpeqi	r4,r3,2047
    be1c:	203f641e 	bne	r4,zero,bbb0 <__subdf3+0x384>
    be20:	735b883a 	add	r13,r14,r13
    be24:	6b89803a 	cmpltu	r4,r13,r14
    be28:	3885883a 	add	r2,r7,r2
    be2c:	1105883a 	add	r2,r2,r4
    be30:	102297fa 	slli	r17,r2,31
    be34:	681ad07a 	srli	r13,r13,1
    be38:	1008d07a 	srli	r4,r2,1
    be3c:	1821883a 	mov	r16,r3
    be40:	8b62b03a 	or	r17,r17,r13
    be44:	003f4206 	br	bb50 <__subdf3+0x324>
    be48:	1008977a 	slli	r4,r2,29
    be4c:	00c80034 	movhi	r3,8192
    be50:	18ffffc4 	addi	r3,r3,-1
    be54:	30cc703a 	and	r6,r6,r3
    be58:	1010d0fa 	srli	r8,r2,3
    be5c:	3104b03a 	or	r2,r6,r4
    be60:	003f4206 	br	bb6c <__subdf3+0x340>
    be64:	18006c1e 	bne	r3,zero,c018 <__subdf3+0x7ec>
    be68:	4000a826 	beq	r8,zero,c10c <__subdf3+0x8e0>
    be6c:	1008977a 	slli	r4,r2,29
    be70:	00c80034 	movhi	r3,8192
    be74:	18ffffc4 	addi	r3,r3,-1
    be78:	30c6703a 	and	r3,r6,r3
    be7c:	100ed0fa 	srli	r7,r2,3
    be80:	5825883a 	mov	r18,r11
    be84:	1904b03a 	or	r2,r3,r4
    be88:	003f8006 	br	bc8c <__subdf3+0x460>
    be8c:	6ba3c83a 	sub	r17,r13,r14
    be90:	11c5c83a 	sub	r2,r2,r7
    be94:	6c49803a 	cmpltu	r4,r13,r17
    be98:	1127c83a 	sub	r19,r2,r4
    be9c:	5825883a 	mov	r18,r11
    bea0:	003ea006 	br	b924 <__subdf3+0xf8>
    bea4:	7363883a 	add	r17,r14,r13
    bea8:	3885883a 	add	r2,r7,r2
    beac:	8b9d803a 	cmpltu	r14,r17,r14
    beb0:	1389883a 	add	r4,r2,r14
    beb4:	2080202c 	andhi	r2,r4,128
    beb8:	103fa71e 	bne	r2,zero,bd58 <__subdf3+0x52c>
    bebc:	04000044 	movi	r16,1
    bec0:	003f2306 	br	bb50 <__subdf3+0x324>
    bec4:	7363c83a 	sub	r17,r14,r13
    bec8:	3885c83a 	sub	r2,r7,r2
    becc:	745d803a 	cmpltu	r14,r14,r17
    bed0:	1389c83a 	sub	r4,r2,r14
    bed4:	04000044 	movi	r16,1
    bed8:	003e8d06 	br	b910 <__subdf3+0xe4>
    bedc:	1008977a 	slli	r4,r2,29
    bee0:	00c80034 	movhi	r3,8192
    bee4:	18ffffc4 	addi	r3,r3,-1
    bee8:	30c6703a 	and	r3,r6,r3
    beec:	100ed0fa 	srli	r7,r2,3
    bef0:	1904b03a 	or	r2,r3,r4
    bef4:	003f6506 	br	bc8c <__subdf3+0x460>
    bef8:	380c977a 	slli	r6,r7,29
    befc:	00880034 	movhi	r2,8192
    bf00:	10bfffc4 	addi	r2,r2,-1
    bf04:	2088703a 	and	r4,r4,r2
    bf08:	380ed0fa 	srli	r7,r7,3
    bf0c:	2184b03a 	or	r2,r4,r6
    bf10:	003f5e06 	br	bc8c <__subdf3+0x460>
    bf14:	3ba2b03a 	or	r17,r7,r14
    bf18:	8822c03a 	cmpne	r17,r17,zero
    bf1c:	003f4906 	br	bc44 <__subdf3+0x418>
    bf20:	547ff804 	addi	r17,r10,-32
    bf24:	51000820 	cmpeqi	r4,r10,32
    bf28:	3c46d83a 	srl	r3,r7,r17
    bf2c:	2000041e 	bne	r4,zero,bf40 <__subdf3+0x714>
    bf30:	01001004 	movi	r4,64
    bf34:	2295c83a 	sub	r10,r4,r10
    bf38:	3a8e983a 	sll	r7,r7,r10
    bf3c:	71dcb03a 	or	r14,r14,r7
    bf40:	7022c03a 	cmpne	r17,r14,zero
    bf44:	88e2b03a 	or	r17,r17,r3
    bf48:	003f9b06 	br	bdb8 <__subdf3+0x58c>
    bf4c:	18001826 	beq	r3,zero,bfb0 <__subdf3+0x784>
    bf50:	135ab03a 	or	r13,r2,r13
    bf54:	380a977a 	slli	r5,r7,29
    bf58:	380ed0fa 	srli	r7,r7,3
    bf5c:	6800311e 	bne	r13,zero,c024 <__subdf3+0x7f8>
    bf60:	00880034 	movhi	r2,8192
    bf64:	10bfffc4 	addi	r2,r2,-1
    bf68:	2084703a 	and	r2,r4,r2
    bf6c:	1144b03a 	or	r2,r2,r5
    bf70:	003f4606 	br	bc8c <__subdf3+0x460>
    bf74:	40005f26 	beq	r8,zero,c0f4 <__subdf3+0x8c8>
    bf78:	1008977a 	slli	r4,r2,29
    bf7c:	00c80034 	movhi	r3,8192
    bf80:	18ffffc4 	addi	r3,r3,-1
    bf84:	30cc703a 	and	r6,r6,r3
    bf88:	1010d0fa 	srli	r8,r2,3
    bf8c:	5825883a 	mov	r18,r11
    bf90:	3104b03a 	or	r2,r6,r4
    bf94:	003ef706 	br	bb74 <__subdf3+0x348>
    bf98:	6ba3c83a 	sub	r17,r13,r14
    bf9c:	11c5c83a 	sub	r2,r2,r7
    bfa0:	6c5b803a 	cmpltu	r13,r13,r17
    bfa4:	1349c83a 	sub	r4,r2,r13
    bfa8:	04000044 	movi	r16,1
    bfac:	003e5806 	br	b910 <__subdf3+0xe4>
    bfb0:	1006977a 	slli	r3,r2,29
    bfb4:	01080034 	movhi	r4,8192
    bfb8:	213fffc4 	addi	r4,r4,-1
    bfbc:	3108703a 	and	r4,r6,r4
    bfc0:	100ed0fa 	srli	r7,r2,3
    bfc4:	1904b03a 	or	r2,r3,r4
    bfc8:	003f3006 	br	bc8c <__subdf3+0x460>
    bfcc:	3806977a 	slli	r3,r7,29
    bfd0:	00880034 	movhi	r2,8192
    bfd4:	10bfffc4 	addi	r2,r2,-1
    bfd8:	2084703a 	and	r2,r4,r2
    bfdc:	380ed0fa 	srli	r7,r7,3
    bfe0:	10c4b03a 	or	r2,r2,r3
    bfe4:	003f2906 	br	bc8c <__subdf3+0x460>
    bfe8:	7363c83a 	sub	r17,r14,r13
    bfec:	7447803a 	cmpltu	r3,r14,r17
    bff0:	3889c83a 	sub	r4,r7,r2
    bff4:	20c9c83a 	sub	r4,r4,r3
    bff8:	20c0202c 	andhi	r3,r4,128
    bffc:	18004026 	beq	r3,zero,c100 <__subdf3+0x8d4>
    c000:	6ba3c83a 	sub	r17,r13,r14
    c004:	11c5c83a 	sub	r2,r2,r7
    c008:	6c5b803a 	cmpltu	r13,r13,r17
    c00c:	1349c83a 	sub	r4,r2,r13
    c010:	5825883a 	mov	r18,r11
    c014:	003e5c06 	br	b988 <__subdf3+0x15c>
    c018:	380a977a 	slli	r5,r7,29
    c01c:	380ed0fa 	srli	r7,r7,3
    c020:	403fcf26 	beq	r8,zero,bf60 <__subdf3+0x734>
    c024:	00c80034 	movhi	r3,8192
    c028:	18ffffc4 	addi	r3,r3,-1
    c02c:	20c8703a 	and	r4,r4,r3
    c030:	3a00022c 	andhi	r8,r7,8
    c034:	2148b03a 	or	r4,r4,r5
    c038:	40000826 	beq	r8,zero,c05c <__subdf3+0x830>
    c03c:	100ad0fa 	srli	r5,r2,3
    c040:	2a00022c 	andhi	r8,r5,8
    c044:	4000051e 	bne	r8,zero,c05c <__subdf3+0x830>
    c048:	1004977a 	slli	r2,r2,29
    c04c:	30c6703a 	and	r3,r6,r3
    c050:	5825883a 	mov	r18,r11
    c054:	1888b03a 	or	r4,r3,r2
    c058:	280f883a 	mov	r7,r5
    c05c:	380e90fa 	slli	r7,r7,3
    c060:	2005883a 	mov	r2,r4
    c064:	380ed0fa 	srli	r7,r7,3
    c068:	003f0806 	br	bc8c <__subdf3+0x460>
    c06c:	100a977a 	slli	r5,r2,29
    c070:	00c80034 	movhi	r3,8192
    c074:	18ffffc4 	addi	r3,r3,-1
    c078:	30c6703a 	and	r3,r6,r3
    c07c:	1010d0fa 	srli	r8,r2,3
    c080:	28c4b03a 	or	r2,r5,r3
    c084:	003ebb06 	br	bb74 <__subdf3+0x348>
    c088:	7363883a 	add	r17,r14,r13
    c08c:	3885883a 	add	r2,r7,r2
    c090:	8b9d803a 	cmpltu	r14,r17,r14
    c094:	1389883a 	add	r4,r2,r14
    c098:	2080202c 	andhi	r2,r4,128
    c09c:	103eac26 	beq	r2,zero,bb50 <__subdf3+0x324>
    c0a0:	00bfe034 	movhi	r2,65408
    c0a4:	10bfffc4 	addi	r2,r2,-1
    c0a8:	2088703a 	and	r4,r4,r2
    c0ac:	04000044 	movi	r16,1
    c0b0:	003ea706 	br	bb50 <__subdf3+0x324>
    c0b4:	50fff804 	addi	r3,r10,-32
    c0b8:	51000820 	cmpeqi	r4,r10,32
    c0bc:	38c6d83a 	srl	r3,r7,r3
    c0c0:	2000041e 	bne	r4,zero,c0d4 <__subdf3+0x8a8>
    c0c4:	01001004 	movi	r4,64
    c0c8:	2295c83a 	sub	r10,r4,r10
    c0cc:	3a8e983a 	sll	r7,r7,r10
    c0d0:	71dcb03a 	or	r14,r14,r7
    c0d4:	7022c03a 	cmpne	r17,r14,zero
    c0d8:	88e2b03a 	or	r17,r17,r3
    c0dc:	003ed906 	br	bc44 <__subdf3+0x418>
    c0e0:	7363883a 	add	r17,r14,r13
    c0e4:	3885883a 	add	r2,r7,r2
    c0e8:	8b5b803a 	cmpltu	r13,r17,r13
    c0ec:	1349883a 	add	r4,r2,r13
    c0f0:	003f7006 	br	beb4 <__subdf3+0x688>
    c0f4:	0005883a 	mov	r2,zero
    c0f8:	0025883a 	mov	r18,zero
    c0fc:	003e9d06 	br	bb74 <__subdf3+0x348>
    c100:	8904b03a 	or	r2,r17,r4
    c104:	103f1126 	beq	r2,zero,bd4c <__subdf3+0x520>
    c108:	003e9106 	br	bb50 <__subdf3+0x324>
    c10c:	01c00434 	movhi	r7,16
    c110:	00bfffc4 	movi	r2,-1
    c114:	39ffffc4 	addi	r7,r7,-1
    c118:	0025883a 	mov	r18,zero
    c11c:	003edd06 	br	bc94 <__subdf3+0x468>
    c120:	0005883a 	mov	r2,zero
    c124:	0401ffc4 	movi	r16,2047
    c128:	0007883a 	mov	r3,zero
    c12c:	003e2d06 	br	b9e4 <__subdf3+0x1b8>
    c130:	400f883a 	mov	r7,r8
    c134:	003ed506 	br	bc8c <__subdf3+0x460>

0000c138 <__unorddf2>:
    c138:	2806d53a 	srli	r3,r5,20
    c13c:	3810d53a 	srli	r8,r7,20
    c140:	02400434 	movhi	r9,16
    c144:	18c1ffcc 	andi	r3,r3,2047
    c148:	4a7fffc4 	addi	r9,r9,-1
    c14c:	18c1ffd8 	cmpnei	r3,r3,2047
    c150:	2a4a703a 	and	r5,r5,r9
    c154:	3a4e703a 	and	r7,r7,r9
    c158:	4201ffcc 	andi	r8,r8,2047
    c15c:	18000426 	beq	r3,zero,c170 <__unorddf2+0x38>
    c160:	4201ffd8 	cmpnei	r8,r8,2047
    c164:	40000626 	beq	r8,zero,c180 <__unorddf2+0x48>
    c168:	0005883a 	mov	r2,zero
    c16c:	f800283a 	ret
    c170:	290ab03a 	or	r5,r5,r4
    c174:	283ffa26 	beq	r5,zero,c160 <__unorddf2+0x28>
    c178:	00800044 	movi	r2,1
    c17c:	f800283a 	ret
    c180:	398eb03a 	or	r7,r7,r6
    c184:	3804c03a 	cmpne	r2,r7,zero
    c188:	f800283a 	ret

0000c18c <__fixdfsi>:
    c18c:	2806d53a 	srli	r3,r5,20
    c190:	01800434 	movhi	r6,16
    c194:	31bfffc4 	addi	r6,r6,-1
    c198:	18c1ffcc 	andi	r3,r3,2047
    c19c:	19c0ffd0 	cmplti	r7,r3,1023
    c1a0:	2810d7fa 	srli	r8,r5,31
    c1a4:	298a703a 	and	r5,r5,r6
    c1a8:	3800061e 	bne	r7,zero,c1c4 <__fixdfsi+0x38>
    c1ac:	18810790 	cmplti	r2,r3,1054
    c1b0:	1000061e 	bne	r2,zero,c1cc <__fixdfsi+0x40>
    c1b4:	00a00034 	movhi	r2,32768
    c1b8:	10bfffc4 	addi	r2,r2,-1
    c1bc:	4085883a 	add	r2,r8,r2
    c1c0:	f800283a 	ret
    c1c4:	0005883a 	mov	r2,zero
    c1c8:	f800283a 	ret
    c1cc:	01810cc4 	movi	r6,1075
    c1d0:	30cdc83a 	sub	r6,r6,r3
    c1d4:	30800808 	cmpgei	r2,r6,32
    c1d8:	29400434 	orhi	r5,r5,16
    c1dc:	1000071e 	bne	r2,zero,c1fc <__fixdfsi+0x70>
    c1e0:	18befb44 	addi	r2,r3,-1043
    c1e4:	2884983a 	sll	r2,r5,r2
    c1e8:	2188d83a 	srl	r4,r4,r6
    c1ec:	1104b03a 	or	r2,r2,r4
    c1f0:	403ff526 	beq	r8,zero,c1c8 <__fixdfsi+0x3c>
    c1f4:	0085c83a 	sub	r2,zero,r2
    c1f8:	f800283a 	ret
    c1fc:	008104c4 	movi	r2,1043
    c200:	10c5c83a 	sub	r2,r2,r3
    c204:	2884d83a 	srl	r2,r5,r2
    c208:	003ff906 	br	c1f0 <__fixdfsi+0x64>

0000c20c <__floatsidf>:
    c20c:	defffd04 	addi	sp,sp,-12
    c210:	dfc00215 	stw	ra,8(sp)
    c214:	dc400115 	stw	r17,4(sp)
    c218:	dc000015 	stw	r16,0(sp)
    c21c:	20001326 	beq	r4,zero,c26c <__floatsidf+0x60>
    c220:	2022d7fa 	srli	r17,r4,31
    c224:	2021883a 	mov	r16,r4
    c228:	20002416 	blt	r4,zero,c2bc <__floatsidf+0xb0>
    c22c:	8009883a 	mov	r4,r16
    c230:	000c5c00 	call	c5c0 <__clzsi2>
    c234:	01010784 	movi	r4,1054
    c238:	2089c83a 	sub	r4,r4,r2
    c23c:	114002c8 	cmpgei	r5,r2,11
    c240:	20c1ffcc 	andi	r3,r4,2047
    c244:	2800161e 	bne	r5,zero,c2a0 <__floatsidf+0x94>
    c248:	010002c4 	movi	r4,11
    c24c:	2089c83a 	sub	r4,r4,r2
    c250:	810ad83a 	srl	r5,r16,r4
    c254:	01000434 	movhi	r4,16
    c258:	10800544 	addi	r2,r2,21
    c25c:	213fffc4 	addi	r4,r4,-1
    c260:	8084983a 	sll	r2,r16,r2
    c264:	290a703a 	and	r5,r5,r4
    c268:	00000406 	br	c27c <__floatsidf+0x70>
    c26c:	0023883a 	mov	r17,zero
    c270:	0007883a 	mov	r3,zero
    c274:	000b883a 	mov	r5,zero
    c278:	0005883a 	mov	r2,zero
    c27c:	1808953a 	slli	r4,r3,20
    c280:	880697fa 	slli	r3,r17,31
    c284:	2148b03a 	or	r4,r4,r5
    c288:	20c6b03a 	or	r3,r4,r3
    c28c:	dfc00217 	ldw	ra,8(sp)
    c290:	dc400117 	ldw	r17,4(sp)
    c294:	dc000017 	ldw	r16,0(sp)
    c298:	dec00304 	addi	sp,sp,12
    c29c:	f800283a 	ret
    c2a0:	10bffd44 	addi	r2,r2,-11
    c2a4:	808a983a 	sll	r5,r16,r2
    c2a8:	00800434 	movhi	r2,16
    c2ac:	10bfffc4 	addi	r2,r2,-1
    c2b0:	288a703a 	and	r5,r5,r2
    c2b4:	0005883a 	mov	r2,zero
    c2b8:	003ff006 	br	c27c <__floatsidf+0x70>
    c2bc:	0121c83a 	sub	r16,zero,r4
    c2c0:	003fda06 	br	c22c <__floatsidf+0x20>

0000c2c4 <__floatunsidf>:
    c2c4:	defffe04 	addi	sp,sp,-8
    c2c8:	dc000015 	stw	r16,0(sp)
    c2cc:	dfc00115 	stw	ra,4(sp)
    c2d0:	2021883a 	mov	r16,r4
    c2d4:	20000f26 	beq	r4,zero,c314 <__floatunsidf+0x50>
    c2d8:	000c5c00 	call	c5c0 <__clzsi2>
    c2dc:	00c10784 	movi	r3,1054
    c2e0:	1887c83a 	sub	r3,r3,r2
    c2e4:	110002c8 	cmpgei	r4,r2,11
    c2e8:	18c1ffcc 	andi	r3,r3,2047
    c2ec:	2000121e 	bne	r4,zero,c338 <__floatunsidf+0x74>
    c2f0:	014002c4 	movi	r5,11
    c2f4:	288bc83a 	sub	r5,r5,r2
    c2f8:	814ad83a 	srl	r5,r16,r5
    c2fc:	01000434 	movhi	r4,16
    c300:	10800544 	addi	r2,r2,21
    c304:	213fffc4 	addi	r4,r4,-1
    c308:	80a0983a 	sll	r16,r16,r2
    c30c:	290a703a 	and	r5,r5,r4
    c310:	00000206 	br	c31c <__floatunsidf+0x58>
    c314:	0007883a 	mov	r3,zero
    c318:	000b883a 	mov	r5,zero
    c31c:	1806953a 	slli	r3,r3,20
    c320:	8005883a 	mov	r2,r16
    c324:	1946b03a 	or	r3,r3,r5
    c328:	dfc00117 	ldw	ra,4(sp)
    c32c:	dc000017 	ldw	r16,0(sp)
    c330:	dec00204 	addi	sp,sp,8
    c334:	f800283a 	ret
    c338:	117ffd44 	addi	r5,r2,-11
    c33c:	814a983a 	sll	r5,r16,r5
    c340:	00800434 	movhi	r2,16
    c344:	10bfffc4 	addi	r2,r2,-1
    c348:	288a703a 	and	r5,r5,r2
    c34c:	0021883a 	mov	r16,zero
    c350:	003ff206 	br	c31c <__floatunsidf+0x58>

0000c354 <__extendsfdf2>:
    c354:	200ad5fa 	srli	r5,r4,23
    c358:	defffd04 	addi	sp,sp,-12
    c35c:	dc000015 	stw	r16,0(sp)
    c360:	29403fcc 	andi	r5,r5,255
    c364:	04002034 	movhi	r16,128
    c368:	28800044 	addi	r2,r5,1
    c36c:	dc400115 	stw	r17,4(sp)
    c370:	843fffc4 	addi	r16,r16,-1
    c374:	dfc00215 	stw	ra,8(sp)
    c378:	10803f8c 	andi	r2,r2,254
    c37c:	2022d7fa 	srli	r17,r4,31
    c380:	8120703a 	and	r16,r16,r4
    c384:	10000d26 	beq	r2,zero,c3bc <__extendsfdf2+0x68>
    c388:	8008d0fa 	srli	r4,r16,3
    c38c:	8020977a 	slli	r16,r16,29
    c390:	28c0e004 	addi	r3,r5,896
    c394:	180a953a 	slli	r5,r3,20
    c398:	880697fa 	slli	r3,r17,31
    c39c:	8005883a 	mov	r2,r16
    c3a0:	290ab03a 	or	r5,r5,r4
    c3a4:	28c6b03a 	or	r3,r5,r3
    c3a8:	dfc00217 	ldw	ra,8(sp)
    c3ac:	dc400117 	ldw	r17,4(sp)
    c3b0:	dc000017 	ldw	r16,0(sp)
    c3b4:	dec00304 	addi	sp,sp,12
    c3b8:	f800283a 	ret
    c3bc:	2800111e 	bne	r5,zero,c404 <__extendsfdf2+0xb0>
    c3c0:	80001926 	beq	r16,zero,c428 <__extendsfdf2+0xd4>
    c3c4:	8009883a 	mov	r4,r16
    c3c8:	000c5c00 	call	c5c0 <__clzsi2>
    c3cc:	10c002c8 	cmpgei	r3,r2,11
    c3d0:	18001b1e 	bne	r3,zero,c440 <__extendsfdf2+0xec>
    c3d4:	010002c4 	movi	r4,11
    c3d8:	2089c83a 	sub	r4,r4,r2
    c3dc:	10c00544 	addi	r3,r2,21
    c3e0:	810ad83a 	srl	r5,r16,r4
    c3e4:	80e0983a 	sll	r16,r16,r3
    c3e8:	01000434 	movhi	r4,16
    c3ec:	00c0e244 	movi	r3,905
    c3f0:	213fffc4 	addi	r4,r4,-1
    c3f4:	1887c83a 	sub	r3,r3,r2
    c3f8:	2908703a 	and	r4,r5,r4
    c3fc:	18c1ffcc 	andi	r3,r3,2047
    c400:	003fe406 	br	c394 <__extendsfdf2+0x40>
    c404:	80000b26 	beq	r16,zero,c434 <__extendsfdf2+0xe0>
    c408:	800ad0fa 	srli	r5,r16,3
    c40c:	00800434 	movhi	r2,16
    c410:	10bfffc4 	addi	r2,r2,-1
    c414:	29000234 	orhi	r4,r5,8
    c418:	8020977a 	slli	r16,r16,29
    c41c:	2088703a 	and	r4,r4,r2
    c420:	00c1ffc4 	movi	r3,2047
    c424:	003fdb06 	br	c394 <__extendsfdf2+0x40>
    c428:	0007883a 	mov	r3,zero
    c42c:	0009883a 	mov	r4,zero
    c430:	003fd806 	br	c394 <__extendsfdf2+0x40>
    c434:	00c1ffc4 	movi	r3,2047
    c438:	0009883a 	mov	r4,zero
    c43c:	003fd506 	br	c394 <__extendsfdf2+0x40>
    c440:	113ffd44 	addi	r4,r2,-11
    c444:	810a983a 	sll	r5,r16,r4
    c448:	0021883a 	mov	r16,zero
    c44c:	003fe606 	br	c3e8 <__extendsfdf2+0x94>

0000c450 <__truncdfsf2>:
    c450:	2804d53a 	srli	r2,r5,20
    c454:	00c00434 	movhi	r3,16
    c458:	18ffffc4 	addi	r3,r3,-1
    c45c:	28c6703a 	and	r3,r5,r3
    c460:	180c90fa 	slli	r6,r3,3
    c464:	1081ffcc 	andi	r2,r2,2047
    c468:	2006d77a 	srli	r3,r4,29
    c46c:	11c00044 	addi	r7,r2,1
    c470:	39c1ff8c 	andi	r7,r7,2046
    c474:	280ad7fa 	srli	r5,r5,31
    c478:	201090fa 	slli	r8,r4,3
    c47c:	1986b03a 	or	r3,r3,r6
    c480:	38000b26 	beq	r7,zero,c4b0 <__truncdfsf2+0x60>
    c484:	11bf2004 	addi	r6,r2,-896
    c488:	31c03fc8 	cmpgei	r7,r6,255
    c48c:	38001226 	beq	r7,zero,c4d8 <__truncdfsf2+0x88>
    c490:	00bfffc4 	movi	r2,-1
    c494:	0007883a 	mov	r3,zero
    c498:	10803fcc 	andi	r2,r2,255
    c49c:	100495fa 	slli	r2,r2,23
    c4a0:	280a97fa 	slli	r5,r5,31
    c4a4:	10c4b03a 	or	r2,r2,r3
    c4a8:	1144b03a 	or	r2,r2,r5
    c4ac:	f800283a 	ret
    c4b0:	1a10b03a 	or	r8,r3,r8
    c4b4:	1000041e 	bne	r2,zero,c4c8 <__truncdfsf2+0x78>
    c4b8:	40001d1e 	bne	r8,zero,c530 <__truncdfsf2+0xe0>
    c4bc:	0005883a 	mov	r2,zero
    c4c0:	0007883a 	mov	r3,zero
    c4c4:	003ff406 	br	c498 <__truncdfsf2+0x48>
    c4c8:	403ff126 	beq	r8,zero,c490 <__truncdfsf2+0x40>
    c4cc:	18c01034 	orhi	r3,r3,64
    c4d0:	00bfffc4 	movi	r2,-1
    c4d4:	003ff006 	br	c498 <__truncdfsf2+0x48>
    c4d8:	0180170e 	bge	zero,r6,c538 <__truncdfsf2+0xe8>
    c4dc:	200891ba 	slli	r4,r4,6
    c4e0:	180690fa 	slli	r3,r3,3
    c4e4:	4010d77a 	srli	r8,r8,29
    c4e8:	2008c03a 	cmpne	r4,r4,zero
    c4ec:	20c6b03a 	or	r3,r4,r3
    c4f0:	1a06b03a 	or	r3,r3,r8
    c4f4:	188001cc 	andi	r2,r3,7
    c4f8:	10002f26 	beq	r2,zero,c5b8 <__truncdfsf2+0x168>
    c4fc:	188003cc 	andi	r2,r3,15
    c500:	10800118 	cmpnei	r2,r2,4
    c504:	10000126 	beq	r2,zero,c50c <__truncdfsf2+0xbc>
    c508:	18c00104 	addi	r3,r3,4
    c50c:	1881002c 	andhi	r2,r3,1024
    c510:	10002926 	beq	r2,zero,c5b8 <__truncdfsf2+0x168>
    c514:	30800044 	addi	r2,r6,1
    c518:	11003fe0 	cmpeqi	r4,r2,255
    c51c:	203fdc1e 	bne	r4,zero,c490 <__truncdfsf2+0x40>
    c520:	180691ba 	slli	r3,r3,6
    c524:	1806d27a 	srli	r3,r3,9
    c528:	003fdb06 	br	c498 <__truncdfsf2+0x48>
    c52c:	0005883a 	mov	r2,zero
    c530:	00c00144 	movi	r3,5
    c534:	003ffa06 	br	c520 <__truncdfsf2+0xd0>
    c538:	313ffa50 	cmplti	r4,r6,-23
    c53c:	203ffb1e 	bne	r4,zero,c52c <__truncdfsf2+0xdc>
    c540:	01c00784 	movi	r7,30
    c544:	398fc83a 	sub	r7,r7,r6
    c548:	3a400808 	cmpgei	r9,r7,32
    c54c:	19002034 	orhi	r4,r3,128
    c550:	48001126 	beq	r9,zero,c598 <__truncdfsf2+0x148>
    c554:	00ffff84 	movi	r3,-2
    c558:	198dc83a 	sub	r6,r3,r6
    c55c:	39c00820 	cmpeqi	r7,r7,32
    c560:	218cd83a 	srl	r6,r4,r6
    c564:	3800031e 	bne	r7,zero,c574 <__truncdfsf2+0x124>
    c568:	10ff2884 	addi	r3,r2,-862
    c56c:	20c8983a 	sll	r4,r4,r3
    c570:	4110b03a 	or	r8,r8,r4
    c574:	4006c03a 	cmpne	r3,r8,zero
    c578:	1986b03a 	or	r3,r3,r6
    c57c:	188001cc 	andi	r2,r3,7
    c580:	000d883a 	mov	r6,zero
    c584:	103fdd1e 	bne	r2,zero,c4fc <__truncdfsf2+0xac>
    c588:	1881002c 	andhi	r2,r3,1024
    c58c:	103fe426 	beq	r2,zero,c520 <__truncdfsf2+0xd0>
    c590:	00800044 	movi	r2,1
    c594:	003fe206 	br	c520 <__truncdfsf2+0xd0>
    c598:	10ff2084 	addi	r3,r2,-894
    c59c:	40c4983a 	sll	r2,r8,r3
    c5a0:	20c8983a 	sll	r4,r4,r3
    c5a4:	41c6d83a 	srl	r3,r8,r7
    c5a8:	1004c03a 	cmpne	r2,r2,zero
    c5ac:	1108b03a 	or	r4,r2,r4
    c5b0:	1906b03a 	or	r3,r3,r4
    c5b4:	003ff106 	br	c57c <__truncdfsf2+0x12c>
    c5b8:	3005883a 	mov	r2,r6
    c5bc:	003fd806 	br	c520 <__truncdfsf2+0xd0>

0000c5c0 <__clzsi2>:
    c5c0:	00bfffd4 	movui	r2,65535
    c5c4:	11000436 	bltu	r2,r4,c5d8 <__clzsi2+0x18>
    c5c8:	20804030 	cmpltui	r2,r4,256
    c5cc:	10000e26 	beq	r2,zero,c608 <__clzsi2+0x48>
    c5d0:	01400804 	movi	r5,32
    c5d4:	00000406 	br	c5e8 <__clzsi2+0x28>
    c5d8:	00804034 	movhi	r2,256
    c5dc:	20800736 	bltu	r4,r2,c5fc <__clzsi2+0x3c>
    c5e0:	2008d63a 	srli	r4,r4,24
    c5e4:	01400204 	movi	r5,8
    c5e8:	00c000b4 	movhi	r3,2
    c5ec:	20c7883a 	add	r3,r4,r3
    c5f0:	18aa1503 	ldbu	r2,-22444(r3)
    c5f4:	2885c83a 	sub	r2,r5,r2
    c5f8:	f800283a 	ret
    c5fc:	2008d43a 	srli	r4,r4,16
    c600:	01400404 	movi	r5,16
    c604:	003ff806 	br	c5e8 <__clzsi2+0x28>
    c608:	2008d23a 	srli	r4,r4,8
    c60c:	01400604 	movi	r5,24
    c610:	003ff506 	br	c5e8 <__clzsi2+0x28>

0000c614 <__errno>:
    c614:	008000b4 	movhi	r2,2
    c618:	10b2d417 	ldw	r2,-13488(r2)
    c61c:	f800283a 	ret

0000c620 <malloc>:
    c620:	008000b4 	movhi	r2,2
    c624:	200b883a 	mov	r5,r4
    c628:	1132d417 	ldw	r4,-13488(r2)
    c62c:	000c6401 	jmpi	c640 <_malloc_r>

0000c630 <free>:
    c630:	008000b4 	movhi	r2,2
    c634:	200b883a 	mov	r5,r4
    c638:	1132d417 	ldw	r4,-13488(r2)
    c63c:	00113941 	jmpi	11394 <_free_r>

0000c640 <_malloc_r>:
    c640:	defff604 	addi	sp,sp,-40
    c644:	dc400115 	stw	r17,4(sp)
    c648:	2c4002c4 	addi	r17,r5,11
    c64c:	dc800215 	stw	r18,8(sp)
    c650:	dfc00915 	stw	ra,36(sp)
    c654:	df000815 	stw	fp,32(sp)
    c658:	ddc00715 	stw	r23,28(sp)
    c65c:	dd800615 	stw	r22,24(sp)
    c660:	dd400515 	stw	r21,20(sp)
    c664:	dd000415 	stw	r20,16(sp)
    c668:	dcc00315 	stw	r19,12(sp)
    c66c:	dc000015 	stw	r16,0(sp)
    c670:	888005e8 	cmpgeui	r2,r17,23
    c674:	2025883a 	mov	r18,r4
    c678:	10001b1e 	bne	r2,zero,c6e8 <_malloc_r+0xa8>
    c67c:	29400468 	cmpgeui	r5,r5,17
    c680:	2800821e 	bne	r5,zero,c88c <_malloc_r+0x24c>
    c684:	00175f80 	call	175f8 <__malloc_lock>
    c688:	04400404 	movi	r17,16
    c68c:	00800604 	movi	r2,24
    c690:	01c00084 	movi	r7,2
    c694:	04c000b4 	movhi	r19,2
    c698:	9cecc604 	addi	r19,r19,-19688
    c69c:	9885883a 	add	r2,r19,r2
    c6a0:	14000117 	ldw	r16,4(r2)
    c6a4:	10fffe04 	addi	r3,r2,-8
    c6a8:	80c08b26 	beq	r16,r3,c8d8 <_malloc_r+0x298>
    c6ac:	80800117 	ldw	r2,4(r16)
    c6b0:	81000317 	ldw	r4,12(r16)
    c6b4:	00ffff04 	movi	r3,-4
    c6b8:	10c4703a 	and	r2,r2,r3
    c6bc:	81400217 	ldw	r5,8(r16)
    c6c0:	8085883a 	add	r2,r16,r2
    c6c4:	10c00117 	ldw	r3,4(r2)
    c6c8:	29000315 	stw	r4,12(r5)
    c6cc:	21400215 	stw	r5,8(r4)
    c6d0:	18c00054 	ori	r3,r3,1
    c6d4:	10c00115 	stw	r3,4(r2)
    c6d8:	9009883a 	mov	r4,r18
    c6dc:	001761c0 	call	1761c <__malloc_unlock>
    c6e0:	80800204 	addi	r2,r16,8
    c6e4:	00006c06 	br	c898 <_malloc_r+0x258>
    c6e8:	00bffe04 	movi	r2,-8
    c6ec:	88a2703a 	and	r17,r17,r2
    c6f0:	88006616 	blt	r17,zero,c88c <_malloc_r+0x24c>
    c6f4:	89406536 	bltu	r17,r5,c88c <_malloc_r+0x24c>
    c6f8:	00175f80 	call	175f8 <__malloc_lock>
    c6fc:	88807e28 	cmpgeui	r2,r17,504
    c700:	10012226 	beq	r2,zero,cb8c <_malloc_r+0x54c>
    c704:	8804d27a 	srli	r2,r17,9
    c708:	10006f26 	beq	r2,zero,c8c8 <_malloc_r+0x288>
    c70c:	10c00168 	cmpgeui	r3,r2,5
    c710:	1800fe1e 	bne	r3,zero,cb0c <_malloc_r+0x4cc>
    c714:	8804d1ba 	srli	r2,r17,6
    c718:	11c00e44 	addi	r7,r2,57
    c71c:	380890fa 	slli	r4,r7,3
    c720:	12000e04 	addi	r8,r2,56
    c724:	04c000b4 	movhi	r19,2
    c728:	9cecc604 	addi	r19,r19,-19688
    c72c:	9909883a 	add	r4,r19,r4
    c730:	24000117 	ldw	r16,4(r4)
    c734:	213ffe04 	addi	r4,r4,-8
    c738:	24000b26 	beq	r4,r16,c768 <_malloc_r+0x128>
    c73c:	01bfff04 	movi	r6,-4
    c740:	00000306 	br	c750 <_malloc_r+0x110>
    c744:	1800d60e 	bge	r3,zero,caa0 <_malloc_r+0x460>
    c748:	84000317 	ldw	r16,12(r16)
    c74c:	24000626 	beq	r4,r16,c768 <_malloc_r+0x128>
    c750:	80800117 	ldw	r2,4(r16)
    c754:	1184703a 	and	r2,r2,r6
    c758:	1447c83a 	sub	r3,r2,r17
    c75c:	19400408 	cmpgei	r5,r3,16
    c760:	283ff826 	beq	r5,zero,c744 <_malloc_r+0x104>
    c764:	400f883a 	mov	r7,r8
    c768:	9c000417 	ldw	r16,16(r19)
    c76c:	024000b4 	movhi	r9,2
    c770:	4a6cc804 	addi	r9,r9,-19680
    c774:	82405f26 	beq	r16,r9,c8f4 <_malloc_r+0x2b4>
    c778:	80c00117 	ldw	r3,4(r16)
    c77c:	00bfff04 	movi	r2,-4
    c780:	1884703a 	and	r2,r3,r2
    c784:	1447c83a 	sub	r3,r2,r17
    c788:	19000410 	cmplti	r4,r3,16
    c78c:	20010a26 	beq	r4,zero,cbb8 <_malloc_r+0x578>
    c790:	9a400515 	stw	r9,20(r19)
    c794:	9a400415 	stw	r9,16(r19)
    c798:	1800ff0e 	bge	r3,zero,cb98 <_malloc_r+0x558>
    c79c:	10c08028 	cmpgeui	r3,r2,512
    c7a0:	1800c11e 	bne	r3,zero,caa8 <_malloc_r+0x468>
    c7a4:	1006d0fa 	srli	r3,r2,3
    c7a8:	1008d17a 	srli	r4,r2,5
    c7ac:	00800044 	movi	r2,1
    c7b0:	18c00044 	addi	r3,r3,1
    c7b4:	180690fa 	slli	r3,r3,3
    c7b8:	99400117 	ldw	r5,4(r19)
    c7bc:	1104983a 	sll	r2,r2,r4
    c7c0:	98c7883a 	add	r3,r19,r3
    c7c4:	19000017 	ldw	r4,0(r3)
    c7c8:	1144b03a 	or	r2,r2,r5
    c7cc:	197ffe04 	addi	r5,r3,-8
    c7d0:	81400315 	stw	r5,12(r16)
    c7d4:	81000215 	stw	r4,8(r16)
    c7d8:	98800115 	stw	r2,4(r19)
    c7dc:	1c000015 	stw	r16,0(r3)
    c7e0:	24000315 	stw	r16,12(r4)
    c7e4:	3807d0ba 	srai	r3,r7,2
    c7e8:	01000044 	movi	r4,1
    c7ec:	20c8983a 	sll	r4,r4,r3
    c7f0:	11004536 	bltu	r2,r4,c908 <_malloc_r+0x2c8>
    c7f4:	2086703a 	and	r3,r4,r2
    c7f8:	18000a1e 	bne	r3,zero,c824 <_malloc_r+0x1e4>
    c7fc:	00ffff04 	movi	r3,-4
    c800:	2109883a 	add	r4,r4,r4
    c804:	38ce703a 	and	r7,r7,r3
    c808:	2086703a 	and	r3,r4,r2
    c80c:	39c00104 	addi	r7,r7,4
    c810:	1800041e 	bne	r3,zero,c824 <_malloc_r+0x1e4>
    c814:	2109883a 	add	r4,r4,r4
    c818:	2086703a 	and	r3,r4,r2
    c81c:	39c00104 	addi	r7,r7,4
    c820:	183ffc26 	beq	r3,zero,c814 <_malloc_r+0x1d4>
    c824:	02bfff04 	movi	r10,-4
    c828:	381690fa 	slli	r11,r7,3
    c82c:	3819883a 	mov	r12,r7
    c830:	9ad7883a 	add	r11,r19,r11
    c834:	5811883a 	mov	r8,r11
    c838:	40800317 	ldw	r2,12(r8)
    c83c:	4080bc26 	beq	r8,r2,cb30 <_malloc_r+0x4f0>
    c840:	10c00117 	ldw	r3,4(r2)
    c844:	1021883a 	mov	r16,r2
    c848:	10800317 	ldw	r2,12(r2)
    c84c:	1a86703a 	and	r3,r3,r10
    c850:	1c4bc83a 	sub	r5,r3,r17
    c854:	29800410 	cmplti	r6,r5,16
    c858:	3000ba26 	beq	r6,zero,cb44 <_malloc_r+0x504>
    c85c:	283ff716 	blt	r5,zero,c83c <_malloc_r+0x1fc>
    c860:	80c7883a 	add	r3,r16,r3
    c864:	19400117 	ldw	r5,4(r3)
    c868:	81800217 	ldw	r6,8(r16)
    c86c:	9009883a 	mov	r4,r18
    c870:	29400054 	ori	r5,r5,1
    c874:	19400115 	stw	r5,4(r3)
    c878:	30800315 	stw	r2,12(r6)
    c87c:	11800215 	stw	r6,8(r2)
    c880:	001761c0 	call	1761c <__malloc_unlock>
    c884:	80800204 	addi	r2,r16,8
    c888:	00000306 	br	c898 <_malloc_r+0x258>
    c88c:	00800304 	movi	r2,12
    c890:	90800015 	stw	r2,0(r18)
    c894:	0005883a 	mov	r2,zero
    c898:	dfc00917 	ldw	ra,36(sp)
    c89c:	df000817 	ldw	fp,32(sp)
    c8a0:	ddc00717 	ldw	r23,28(sp)
    c8a4:	dd800617 	ldw	r22,24(sp)
    c8a8:	dd400517 	ldw	r21,20(sp)
    c8ac:	dd000417 	ldw	r20,16(sp)
    c8b0:	dcc00317 	ldw	r19,12(sp)
    c8b4:	dc800217 	ldw	r18,8(sp)
    c8b8:	dc400117 	ldw	r17,4(sp)
    c8bc:	dc000017 	ldw	r16,0(sp)
    c8c0:	dec00a04 	addi	sp,sp,40
    c8c4:	f800283a 	ret
    c8c8:	01008004 	movi	r4,512
    c8cc:	01c01004 	movi	r7,64
    c8d0:	02000fc4 	movi	r8,63
    c8d4:	003f9306 	br	c724 <_malloc_r+0xe4>
    c8d8:	14000317 	ldw	r16,12(r2)
    c8dc:	39c00084 	addi	r7,r7,2
    c8e0:	143f721e 	bne	r2,r16,c6ac <_malloc_r+0x6c>
    c8e4:	9c000417 	ldw	r16,16(r19)
    c8e8:	024000b4 	movhi	r9,2
    c8ec:	4a6cc804 	addi	r9,r9,-19680
    c8f0:	827fa11e 	bne	r16,r9,c778 <_malloc_r+0x138>
    c8f4:	3807d0ba 	srai	r3,r7,2
    c8f8:	01000044 	movi	r4,1
    c8fc:	98800117 	ldw	r2,4(r19)
    c900:	20c8983a 	sll	r4,r4,r3
    c904:	113fbb2e 	bgeu	r2,r4,c7f4 <_malloc_r+0x1b4>
    c908:	9c000217 	ldw	r16,8(r19)
    c90c:	00bfff04 	movi	r2,-4
    c910:	85400117 	ldw	r21,4(r16)
    c914:	a8ac703a 	and	r22,r21,r2
    c918:	b4400336 	bltu	r22,r17,c928 <_malloc_r+0x2e8>
    c91c:	b445c83a 	sub	r2,r22,r17
    c920:	10c00408 	cmpgei	r3,r2,16
    c924:	1800541e 	bne	r3,zero,ca78 <_malloc_r+0x438>
    c928:	008000b4 	movhi	r2,2
    c92c:	10b2d517 	ldw	r2,-13484(r2)
    c930:	00c000b4 	movhi	r3,2
    c934:	1d7a0817 	ldw	r21,-6112(r3)
    c938:	10bfffd8 	cmpnei	r2,r2,-1
    c93c:	85b9883a 	add	fp,r16,r22
    c940:	8d6b883a 	add	r21,r17,r21
    c944:	1000d626 	beq	r2,zero,cca0 <_malloc_r+0x660>
    c948:	ad4403c4 	addi	r21,r21,4111
    c94c:	00bc0004 	movi	r2,-4096
    c950:	a8aa703a 	and	r21,r21,r2
    c954:	a80b883a 	mov	r5,r21
    c958:	9009883a 	mov	r4,r18
    c95c:	000cfa80 	call	cfa8 <_sbrk_r>
    c960:	102f883a 	mov	r23,r2
    c964:	10bfffd8 	cmpnei	r2,r2,-1
    c968:	1000a826 	beq	r2,zero,cc0c <_malloc_r+0x5cc>
    c96c:	bf00a636 	bltu	r23,fp,cc08 <_malloc_r+0x5c8>
    c970:	008000b4 	movhi	r2,2
    c974:	153a1317 	ldw	r20,-6068(r2)
    c978:	ad29883a 	add	r20,r21,r20
    c97c:	153a1315 	stw	r20,-6068(r2)
    c980:	a007883a 	mov	r3,r20
    c984:	e5c0ec26 	beq	fp,r23,cd38 <_malloc_r+0x6f8>
    c988:	008000b4 	movhi	r2,2
    c98c:	10b2d517 	ldw	r2,-13484(r2)
    c990:	10bfffd8 	cmpnei	r2,r2,-1
    c994:	1000ef26 	beq	r2,zero,cd54 <_malloc_r+0x714>
    c998:	bf39c83a 	sub	fp,r23,fp
    c99c:	e0c7883a 	add	r3,fp,r3
    c9a0:	008000b4 	movhi	r2,2
    c9a4:	10fa1315 	stw	r3,-6068(r2)
    c9a8:	bf0001cc 	andi	fp,r23,7
    c9ac:	e000c526 	beq	fp,zero,ccc4 <_malloc_r+0x684>
    c9b0:	bf2fc83a 	sub	r23,r23,fp
    c9b4:	bdc00204 	addi	r23,r23,8
    c9b8:	05040204 	movi	r20,4104
    c9bc:	a729c83a 	sub	r20,r20,fp
    c9c0:	bd6b883a 	add	r21,r23,r21
    c9c4:	a569c83a 	sub	r20,r20,r21
    c9c8:	a503ffcc 	andi	r20,r20,4095
    c9cc:	a00b883a 	mov	r5,r20
    c9d0:	9009883a 	mov	r4,r18
    c9d4:	000cfa80 	call	cfa8 <_sbrk_r>
    c9d8:	10ffffe0 	cmpeqi	r3,r2,-1
    c9dc:	1800f31e 	bne	r3,zero,cdac <_malloc_r+0x76c>
    c9e0:	15c5c83a 	sub	r2,r2,r23
    c9e4:	152b883a 	add	r21,r2,r20
    c9e8:	008000b4 	movhi	r2,2
    c9ec:	117a1317 	ldw	r5,-6068(r2)
    c9f0:	9dc00215 	stw	r23,8(r19)
    c9f4:	ad400054 	ori	r21,r21,1
    c9f8:	a169883a 	add	r20,r20,r5
    c9fc:	153a1315 	stw	r20,-6068(r2)
    ca00:	bd400115 	stw	r21,4(r23)
    ca04:	84c0d626 	beq	r16,r19,cd60 <_malloc_r+0x720>
    ca08:	b0800428 	cmpgeui	r2,r22,16
    ca0c:	1000d626 	beq	r2,zero,cd68 <_malloc_r+0x728>
    ca10:	80c00117 	ldw	r3,4(r16)
    ca14:	013ffe04 	movi	r4,-8
    ca18:	b0bffd04 	addi	r2,r22,-12
    ca1c:	1104703a 	and	r2,r2,r4
    ca20:	18c0004c 	andi	r3,r3,1
    ca24:	1886b03a 	or	r3,r3,r2
    ca28:	80c00115 	stw	r3,4(r16)
    ca2c:	01000144 	movi	r4,5
    ca30:	8087883a 	add	r3,r16,r2
    ca34:	19000115 	stw	r4,4(r3)
    ca38:	19000215 	stw	r4,8(r3)
    ca3c:	10800428 	cmpgeui	r2,r2,16
    ca40:	1000df1e 	bne	r2,zero,cdc0 <_malloc_r+0x780>
    ca44:	bd400117 	ldw	r21,4(r23)
    ca48:	b821883a 	mov	r16,r23
    ca4c:	008000b4 	movhi	r2,2
    ca50:	10ba0717 	ldw	r2,-6116(r2)
    ca54:	1500022e 	bgeu	r2,r20,ca60 <_malloc_r+0x420>
    ca58:	008000b4 	movhi	r2,2
    ca5c:	153a0715 	stw	r20,-6116(r2)
    ca60:	008000b4 	movhi	r2,2
    ca64:	10ba0617 	ldw	r2,-6120(r2)
    ca68:	15006a2e 	bgeu	r2,r20,cc14 <_malloc_r+0x5d4>
    ca6c:	008000b4 	movhi	r2,2
    ca70:	153a0615 	stw	r20,-6120(r2)
    ca74:	00006706 	br	cc14 <_malloc_r+0x5d4>
    ca78:	88c00054 	ori	r3,r17,1
    ca7c:	80c00115 	stw	r3,4(r16)
    ca80:	8463883a 	add	r17,r16,r17
    ca84:	10800054 	ori	r2,r2,1
    ca88:	9c400215 	stw	r17,8(r19)
    ca8c:	88800115 	stw	r2,4(r17)
    ca90:	9009883a 	mov	r4,r18
    ca94:	001761c0 	call	1761c <__malloc_unlock>
    ca98:	80800204 	addi	r2,r16,8
    ca9c:	003f7e06 	br	c898 <_malloc_r+0x258>
    caa0:	81000317 	ldw	r4,12(r16)
    caa4:	003f0506 	br	c6bc <_malloc_r+0x7c>
    caa8:	1006d27a 	srli	r3,r2,9
    caac:	19000168 	cmpgeui	r4,r3,5
    cab0:	20005026 	beq	r4,zero,cbf4 <_malloc_r+0x5b4>
    cab4:	19000568 	cmpgeui	r4,r3,21
    cab8:	20008c1e 	bne	r4,zero,ccec <_malloc_r+0x6ac>
    cabc:	19401704 	addi	r5,r3,92
    cac0:	280a90fa 	slli	r5,r5,3
    cac4:	190016c4 	addi	r4,r3,91
    cac8:	994b883a 	add	r5,r19,r5
    cacc:	28c00017 	ldw	r3,0(r5)
    cad0:	297ffe04 	addi	r5,r5,-8
    cad4:	28c07426 	beq	r5,r3,cca8 <_malloc_r+0x668>
    cad8:	01bfff04 	movi	r6,-4
    cadc:	19000117 	ldw	r4,4(r3)
    cae0:	2188703a 	and	r4,r4,r6
    cae4:	1100022e 	bgeu	r2,r4,caf0 <_malloc_r+0x4b0>
    cae8:	18c00217 	ldw	r3,8(r3)
    caec:	28fffb1e 	bne	r5,r3,cadc <_malloc_r+0x49c>
    caf0:	19400317 	ldw	r5,12(r3)
    caf4:	98800117 	ldw	r2,4(r19)
    caf8:	81400315 	stw	r5,12(r16)
    cafc:	80c00215 	stw	r3,8(r16)
    cb00:	2c000215 	stw	r16,8(r5)
    cb04:	1c000315 	stw	r16,12(r3)
    cb08:	003f3606 	br	c7e4 <_malloc_r+0x1a4>
    cb0c:	10c00568 	cmpgeui	r3,r2,21
    cb10:	18004a26 	beq	r3,zero,cc3c <_malloc_r+0x5fc>
    cb14:	10c01568 	cmpgeui	r3,r2,85
    cb18:	18007b1e 	bne	r3,zero,cd08 <_malloc_r+0x6c8>
    cb1c:	8804d33a 	srli	r2,r17,12
    cb20:	11c01bc4 	addi	r7,r2,111
    cb24:	380890fa 	slli	r4,r7,3
    cb28:	12001b84 	addi	r8,r2,110
    cb2c:	003efd06 	br	c724 <_malloc_r+0xe4>
    cb30:	63000044 	addi	r12,r12,1
    cb34:	608000cc 	andi	r2,r12,3
    cb38:	42000204 	addi	r8,r8,8
    cb3c:	103f3e1e 	bne	r2,zero,c838 <_malloc_r+0x1f8>
    cb40:	00004506 	br	cc58 <_malloc_r+0x618>
    cb44:	81000217 	ldw	r4,8(r16)
    cb48:	89800054 	ori	r6,r17,1
    cb4c:	81800115 	stw	r6,4(r16)
    cb50:	20800315 	stw	r2,12(r4)
    cb54:	11000215 	stw	r4,8(r2)
    cb58:	8463883a 	add	r17,r16,r17
    cb5c:	9c400515 	stw	r17,20(r19)
    cb60:	9c400415 	stw	r17,16(r19)
    cb64:	28800054 	ori	r2,r5,1
    cb68:	88800115 	stw	r2,4(r17)
    cb6c:	8a400315 	stw	r9,12(r17)
    cb70:	8a400215 	stw	r9,8(r17)
    cb74:	80c7883a 	add	r3,r16,r3
    cb78:	19400015 	stw	r5,0(r3)
    cb7c:	9009883a 	mov	r4,r18
    cb80:	001761c0 	call	1761c <__malloc_unlock>
    cb84:	80800204 	addi	r2,r16,8
    cb88:	003f4306 	br	c898 <_malloc_r+0x258>
    cb8c:	880ed0fa 	srli	r7,r17,3
    cb90:	88800204 	addi	r2,r17,8
    cb94:	003ebf06 	br	c694 <_malloc_r+0x54>
    cb98:	8085883a 	add	r2,r16,r2
    cb9c:	10c00117 	ldw	r3,4(r2)
    cba0:	9009883a 	mov	r4,r18
    cba4:	18c00054 	ori	r3,r3,1
    cba8:	10c00115 	stw	r3,4(r2)
    cbac:	001761c0 	call	1761c <__malloc_unlock>
    cbb0:	80800204 	addi	r2,r16,8
    cbb4:	003f3806 	br	c898 <_malloc_r+0x258>
    cbb8:	89000054 	ori	r4,r17,1
    cbbc:	81000115 	stw	r4,4(r16)
    cbc0:	8463883a 	add	r17,r16,r17
    cbc4:	9c400515 	stw	r17,20(r19)
    cbc8:	9c400415 	stw	r17,16(r19)
    cbcc:	19000054 	ori	r4,r3,1
    cbd0:	89000115 	stw	r4,4(r17)
    cbd4:	8085883a 	add	r2,r16,r2
    cbd8:	8a400315 	stw	r9,12(r17)
    cbdc:	8a400215 	stw	r9,8(r17)
    cbe0:	10c00015 	stw	r3,0(r2)
    cbe4:	9009883a 	mov	r4,r18
    cbe8:	001761c0 	call	1761c <__malloc_unlock>
    cbec:	80800204 	addi	r2,r16,8
    cbf0:	003f2906 	br	c898 <_malloc_r+0x258>
    cbf4:	1006d1ba 	srli	r3,r2,6
    cbf8:	19400e44 	addi	r5,r3,57
    cbfc:	280a90fa 	slli	r5,r5,3
    cc00:	19000e04 	addi	r4,r3,56
    cc04:	003fb006 	br	cac8 <_malloc_r+0x488>
    cc08:	84c04626 	beq	r16,r19,cd24 <_malloc_r+0x6e4>
    cc0c:	9c000217 	ldw	r16,8(r19)
    cc10:	85400117 	ldw	r21,4(r16)
    cc14:	00bfff04 	movi	r2,-4
    cc18:	a8aa703a 	and	r21,r21,r2
    cc1c:	ac45c83a 	sub	r2,r21,r17
    cc20:	ac400236 	bltu	r21,r17,cc2c <_malloc_r+0x5ec>
    cc24:	10c00408 	cmpgei	r3,r2,16
    cc28:	183f931e 	bne	r3,zero,ca78 <_malloc_r+0x438>
    cc2c:	9009883a 	mov	r4,r18
    cc30:	001761c0 	call	1761c <__malloc_unlock>
    cc34:	0005883a 	mov	r2,zero
    cc38:	003f1706 	br	c898 <_malloc_r+0x258>
    cc3c:	11c01704 	addi	r7,r2,92
    cc40:	380890fa 	slli	r4,r7,3
    cc44:	120016c4 	addi	r8,r2,91
    cc48:	003eb606 	br	c724 <_malloc_r+0xe4>
    cc4c:	58800217 	ldw	r2,8(r11)
    cc50:	39ffffc4 	addi	r7,r7,-1
    cc54:	12c0701e 	bne	r2,r11,ce18 <_malloc_r+0x7d8>
    cc58:	388000cc 	andi	r2,r7,3
    cc5c:	5afffe04 	addi	r11,r11,-8
    cc60:	103ffa1e 	bne	r2,zero,cc4c <_malloc_r+0x60c>
    cc64:	98c00117 	ldw	r3,4(r19)
    cc68:	0104303a 	nor	r2,zero,r4
    cc6c:	10c4703a 	and	r2,r2,r3
    cc70:	98800115 	stw	r2,4(r19)
    cc74:	2109883a 	add	r4,r4,r4
    cc78:	113f2336 	bltu	r2,r4,c908 <_malloc_r+0x2c8>
    cc7c:	203f2226 	beq	r4,zero,c908 <_malloc_r+0x2c8>
    cc80:	2086703a 	and	r3,r4,r2
    cc84:	1800041e 	bne	r3,zero,cc98 <_malloc_r+0x658>
    cc88:	2109883a 	add	r4,r4,r4
    cc8c:	2086703a 	and	r3,r4,r2
    cc90:	63000104 	addi	r12,r12,4
    cc94:	183ffc26 	beq	r3,zero,cc88 <_malloc_r+0x648>
    cc98:	600f883a 	mov	r7,r12
    cc9c:	003ee206 	br	c828 <_malloc_r+0x1e8>
    cca0:	ad400404 	addi	r21,r21,16
    cca4:	003f2b06 	br	c954 <_malloc_r+0x314>
    cca8:	2009d0ba 	srai	r4,r4,2
    ccac:	00800044 	movi	r2,1
    ccb0:	99800117 	ldw	r6,4(r19)
    ccb4:	1104983a 	sll	r2,r2,r4
    ccb8:	1184b03a 	or	r2,r2,r6
    ccbc:	98800115 	stw	r2,4(r19)
    ccc0:	003f8d06 	br	caf8 <_malloc_r+0x4b8>
    ccc4:	bd69883a 	add	r20,r23,r21
    ccc8:	0529c83a 	sub	r20,zero,r20
    cccc:	a503ffcc 	andi	r20,r20,4095
    ccd0:	a00b883a 	mov	r5,r20
    ccd4:	9009883a 	mov	r4,r18
    ccd8:	000cfa80 	call	cfa8 <_sbrk_r>
    ccdc:	10ffffe0 	cmpeqi	r3,r2,-1
    cce0:	183f3f26 	beq	r3,zero,c9e0 <_malloc_r+0x3a0>
    cce4:	0029883a 	mov	r20,zero
    cce8:	003f3f06 	br	c9e8 <_malloc_r+0x3a8>
    ccec:	19001568 	cmpgeui	r4,r3,85
    ccf0:	2000201e 	bne	r4,zero,cd74 <_malloc_r+0x734>
    ccf4:	1006d33a 	srli	r3,r2,12
    ccf8:	19401bc4 	addi	r5,r3,111
    ccfc:	280a90fa 	slli	r5,r5,3
    cd00:	19001b84 	addi	r4,r3,110
    cd04:	003f7006 	br	cac8 <_malloc_r+0x488>
    cd08:	10c05568 	cmpgeui	r3,r2,341
    cd0c:	1800201e 	bne	r3,zero,cd90 <_malloc_r+0x750>
    cd10:	8804d3fa 	srli	r2,r17,15
    cd14:	11c01e04 	addi	r7,r2,120
    cd18:	380890fa 	slli	r4,r7,3
    cd1c:	12001dc4 	addi	r8,r2,119
    cd20:	003e8006 	br	c724 <_malloc_r+0xe4>
    cd24:	008000b4 	movhi	r2,2
    cd28:	10fa1317 	ldw	r3,-6068(r2)
    cd2c:	a8c7883a 	add	r3,r21,r3
    cd30:	10fa1315 	stw	r3,-6068(r2)
    cd34:	003f1406 	br	c988 <_malloc_r+0x348>
    cd38:	e083ffcc 	andi	r2,fp,4095
    cd3c:	103f121e 	bne	r2,zero,c988 <_malloc_r+0x348>
    cd40:	9c000217 	ldw	r16,8(r19)
    cd44:	b56b883a 	add	r21,r22,r21
    cd48:	ad400054 	ori	r21,r21,1
    cd4c:	85400115 	stw	r21,4(r16)
    cd50:	003f3e06 	br	ca4c <_malloc_r+0x40c>
    cd54:	008000b4 	movhi	r2,2
    cd58:	15f2d515 	stw	r23,-13484(r2)
    cd5c:	003f1206 	br	c9a8 <_malloc_r+0x368>
    cd60:	b821883a 	mov	r16,r23
    cd64:	003f3906 	br	ca4c <_malloc_r+0x40c>
    cd68:	00800044 	movi	r2,1
    cd6c:	b8800115 	stw	r2,4(r23)
    cd70:	003fae06 	br	cc2c <_malloc_r+0x5ec>
    cd74:	19005568 	cmpgeui	r4,r3,341
    cd78:	2000191e 	bne	r4,zero,cde0 <_malloc_r+0x7a0>
    cd7c:	1006d3fa 	srli	r3,r2,15
    cd80:	19401e04 	addi	r5,r3,120
    cd84:	280a90fa 	slli	r5,r5,3
    cd88:	19001dc4 	addi	r4,r3,119
    cd8c:	003f4e06 	br	cac8 <_malloc_r+0x488>
    cd90:	10815568 	cmpgeui	r2,r2,1365
    cd94:	1000191e 	bne	r2,zero,cdfc <_malloc_r+0x7bc>
    cd98:	8804d4ba 	srli	r2,r17,18
    cd9c:	11c01f44 	addi	r7,r2,125
    cda0:	380890fa 	slli	r4,r7,3
    cda4:	12001f04 	addi	r8,r2,124
    cda8:	003e5e06 	br	c724 <_malloc_r+0xe4>
    cdac:	e73ffe04 	addi	fp,fp,-8
    cdb0:	af2b883a 	add	r21,r21,fp
    cdb4:	adebc83a 	sub	r21,r21,r23
    cdb8:	0029883a 	mov	r20,zero
    cdbc:	003f0a06 	br	c9e8 <_malloc_r+0x3a8>
    cdc0:	81400204 	addi	r5,r16,8
    cdc4:	9009883a 	mov	r4,r18
    cdc8:	00113940 	call	11394 <_free_r>
    cdcc:	9c000217 	ldw	r16,8(r19)
    cdd0:	008000b4 	movhi	r2,2
    cdd4:	153a1317 	ldw	r20,-6068(r2)
    cdd8:	85400117 	ldw	r21,4(r16)
    cddc:	003f1b06 	br	ca4c <_malloc_r+0x40c>
    cde0:	18c15568 	cmpgeui	r3,r3,1365
    cde4:	1800091e 	bne	r3,zero,ce0c <_malloc_r+0x7cc>
    cde8:	1006d4ba 	srli	r3,r2,18
    cdec:	19401f44 	addi	r5,r3,125
    cdf0:	280a90fa 	slli	r5,r5,3
    cdf4:	19001f04 	addi	r4,r3,124
    cdf8:	003f3306 	br	cac8 <_malloc_r+0x488>
    cdfc:	0100fe04 	movi	r4,1016
    ce00:	01c01fc4 	movi	r7,127
    ce04:	02001f84 	movi	r8,126
    ce08:	003e4606 	br	c724 <_malloc_r+0xe4>
    ce0c:	0140fe04 	movi	r5,1016
    ce10:	01001f84 	movi	r4,126
    ce14:	003f2c06 	br	cac8 <_malloc_r+0x488>
    ce18:	98800117 	ldw	r2,4(r19)
    ce1c:	003f9506 	br	cc74 <_malloc_r+0x634>

0000ce20 <memcpy>:
    ce20:	30c00430 	cmpltui	r3,r6,16
    ce24:	2005883a 	mov	r2,r4
    ce28:	18002d1e 	bne	r3,zero,cee0 <memcpy+0xc0>
    ce2c:	2906b03a 	or	r3,r5,r4
    ce30:	18c000cc 	andi	r3,r3,3
    ce34:	1800351e 	bne	r3,zero,cf0c <memcpy+0xec>
    ce38:	32fffc04 	addi	r11,r6,-16
    ce3c:	5816d13a 	srli	r11,r11,4
    ce40:	280f883a 	mov	r7,r5
    ce44:	2007883a 	mov	r3,r4
    ce48:	5ac00044 	addi	r11,r11,1
    ce4c:	5816913a 	slli	r11,r11,4
    ce50:	22d5883a 	add	r10,r4,r11
    ce54:	39000117 	ldw	r4,4(r7)
    ce58:	3a400017 	ldw	r9,0(r7)
    ce5c:	3a000217 	ldw	r8,8(r7)
    ce60:	19000115 	stw	r4,4(r3)
    ce64:	39000317 	ldw	r4,12(r7)
    ce68:	1a400015 	stw	r9,0(r3)
    ce6c:	1a000215 	stw	r8,8(r3)
    ce70:	19000315 	stw	r4,12(r3)
    ce74:	18c00404 	addi	r3,r3,16
    ce78:	39c00404 	addi	r7,r7,16
    ce7c:	50fff51e 	bne	r10,r3,ce54 <memcpy+0x34>
    ce80:	3100030c 	andi	r4,r6,12
    ce84:	2acb883a 	add	r5,r5,r11
    ce88:	320003cc 	andi	r8,r6,15
    ce8c:	20002226 	beq	r4,zero,cf18 <memcpy+0xf8>
    ce90:	280f883a 	mov	r7,r5
    ce94:	1813883a 	mov	r9,r3
    ce98:	39c00104 	addi	r7,r7,4
    ce9c:	3abfff17 	ldw	r10,-4(r7)
    cea0:	41c9c83a 	sub	r4,r8,r7
    cea4:	2909883a 	add	r4,r5,r4
    cea8:	4a800015 	stw	r10,0(r9)
    ceac:	21000128 	cmpgeui	r4,r4,4
    ceb0:	4a400104 	addi	r9,r9,4
    ceb4:	203ff81e 	bne	r4,zero,ce98 <memcpy+0x78>
    ceb8:	413fff04 	addi	r4,r8,-4
    cebc:	2008d0ba 	srli	r4,r4,2
    cec0:	318000cc 	andi	r6,r6,3
    cec4:	31ffffc4 	addi	r7,r6,-1
    cec8:	21000044 	addi	r4,r4,1
    cecc:	200890ba 	slli	r4,r4,2
    ced0:	1907883a 	add	r3,r3,r4
    ced4:	290b883a 	add	r5,r5,r4
    ced8:	3000041e 	bne	r6,zero,ceec <memcpy+0xcc>
    cedc:	f800283a 	ret
    cee0:	2007883a 	mov	r3,r4
    cee4:	31ffffc4 	addi	r7,r6,-1
    cee8:	303ffc26 	beq	r6,zero,cedc <memcpy+0xbc>
    ceec:	39c00044 	addi	r7,r7,1
    cef0:	19cf883a 	add	r7,r3,r7
    cef4:	29800003 	ldbu	r6,0(r5)
    cef8:	18c00044 	addi	r3,r3,1
    cefc:	29400044 	addi	r5,r5,1
    cf00:	19bfffc5 	stb	r6,-1(r3)
    cf04:	38fffb1e 	bne	r7,r3,cef4 <memcpy+0xd4>
    cf08:	f800283a 	ret
    cf0c:	31ffffc4 	addi	r7,r6,-1
    cf10:	2007883a 	mov	r3,r4
    cf14:	003ff506 	br	ceec <memcpy+0xcc>
    cf18:	400d883a 	mov	r6,r8
    cf1c:	003ff106 	br	cee4 <memcpy+0xc4>

0000cf20 <_printf_r>:
    cf20:	defffd04 	addi	sp,sp,-12
    cf24:	2805883a 	mov	r2,r5
    cf28:	dfc00015 	stw	ra,0(sp)
    cf2c:	d9800115 	stw	r6,4(sp)
    cf30:	d9c00215 	stw	r7,8(sp)
    cf34:	21400217 	ldw	r5,8(r4)
    cf38:	d9c00104 	addi	r7,sp,4
    cf3c:	100d883a 	mov	r6,r2
    cf40:	000d0000 	call	d000 <___vfprintf_internal_r>
    cf44:	dfc00017 	ldw	ra,0(sp)
    cf48:	dec00304 	addi	sp,sp,12
    cf4c:	f800283a 	ret

0000cf50 <printf>:
    cf50:	defffc04 	addi	sp,sp,-16
    cf54:	dfc00015 	stw	ra,0(sp)
    cf58:	d9400115 	stw	r5,4(sp)
    cf5c:	d9800215 	stw	r6,8(sp)
    cf60:	d9c00315 	stw	r7,12(sp)
    cf64:	008000b4 	movhi	r2,2
    cf68:	10b2d417 	ldw	r2,-13488(r2)
    cf6c:	200b883a 	mov	r5,r4
    cf70:	d9800104 	addi	r6,sp,4
    cf74:	11000217 	ldw	r4,8(r2)
    cf78:	000f0180 	call	f018 <__vfprintf_internal>
    cf7c:	dfc00017 	ldw	ra,0(sp)
    cf80:	dec00404 	addi	sp,sp,16
    cf84:	f800283a 	ret

0000cf88 <_putchar_r>:
    cf88:	21800217 	ldw	r6,8(r4)
    cf8c:	0012de81 	jmpi	12de8 <_putc_r>

0000cf90 <putchar>:
    cf90:	008000b4 	movhi	r2,2
    cf94:	10b2d417 	ldw	r2,-13488(r2)
    cf98:	200b883a 	mov	r5,r4
    cf9c:	11800217 	ldw	r6,8(r2)
    cfa0:	1009883a 	mov	r4,r2
    cfa4:	0012de81 	jmpi	12de8 <_putc_r>

0000cfa8 <_sbrk_r>:
    cfa8:	defffe04 	addi	sp,sp,-8
    cfac:	dc000015 	stw	r16,0(sp)
    cfb0:	008000b4 	movhi	r2,2
    cfb4:	2021883a 	mov	r16,r4
    cfb8:	2809883a 	mov	r4,r5
    cfbc:	dfc00115 	stw	ra,4(sp)
    cfc0:	103a0915 	stw	zero,-6108(r2)
    cfc4:	0017a500 	call	17a50 <sbrk>
    cfc8:	10ffffd8 	cmpnei	r3,r2,-1
    cfcc:	18000426 	beq	r3,zero,cfe0 <_sbrk_r+0x38>
    cfd0:	dfc00117 	ldw	ra,4(sp)
    cfd4:	dc000017 	ldw	r16,0(sp)
    cfd8:	dec00204 	addi	sp,sp,8
    cfdc:	f800283a 	ret
    cfe0:	00c000b4 	movhi	r3,2
    cfe4:	18fa0917 	ldw	r3,-6108(r3)
    cfe8:	183ff926 	beq	r3,zero,cfd0 <_sbrk_r+0x28>
    cfec:	80c00015 	stw	r3,0(r16)
    cff0:	dfc00117 	ldw	ra,4(sp)
    cff4:	dc000017 	ldw	r16,0(sp)
    cff8:	dec00204 	addi	sp,sp,8
    cffc:	f800283a 	ret

0000d000 <___vfprintf_internal_r>:
    d000:	deffbf04 	addi	sp,sp,-260
    d004:	dfc04015 	stw	ra,256(sp)
    d008:	dd803d15 	stw	r22,244(sp)
    d00c:	dcc03a15 	stw	r19,232(sp)
    d010:	dc803915 	stw	r18,228(sp)
    d014:	2027883a 	mov	r19,r4
    d018:	2825883a 	mov	r18,r5
    d01c:	302d883a 	mov	r22,r6
    d020:	d9c00615 	stw	r7,24(sp)
    d024:	df003f15 	stw	fp,252(sp)
    d028:	ddc03e15 	stw	r23,248(sp)
    d02c:	dd403c15 	stw	r21,240(sp)
    d030:	dd003b15 	stw	r20,236(sp)
    d034:	dc403815 	stw	r17,224(sp)
    d038:	dc003715 	stw	r16,220(sp)
    d03c:	00117d80 	call	117d8 <_localeconv_r>
    d040:	10800017 	ldw	r2,0(r2)
    d044:	1009883a 	mov	r4,r2
    d048:	d8800d15 	stw	r2,52(sp)
    d04c:	00130d40 	call	130d4 <strlen>
    d050:	d8800b15 	stw	r2,44(sp)
    d054:	98000226 	beq	r19,zero,d060 <___vfprintf_internal_r+0x60>
    d058:	98800e17 	ldw	r2,56(r19)
    d05c:	1001e026 	beq	r2,zero,d7e0 <___vfprintf_internal_r+0x7e0>
    d060:	9080030b 	ldhu	r2,12(r18)
    d064:	10c8000c 	andi	r3,r2,8192
    d068:	1800061e 	bne	r3,zero,d084 <___vfprintf_internal_r+0x84>
    d06c:	90c01917 	ldw	r3,100(r18)
    d070:	0137ffc4 	movi	r4,-8193
    d074:	10880014 	ori	r2,r2,8192
    d078:	1906703a 	and	r3,r3,r4
    d07c:	9080030d 	sth	r2,12(r18)
    d080:	90c01915 	stw	r3,100(r18)
    d084:	10c0020c 	andi	r3,r2,8
    d088:	1800fc26 	beq	r3,zero,d47c <___vfprintf_internal_r+0x47c>
    d08c:	90c00417 	ldw	r3,16(r18)
    d090:	1800fa26 	beq	r3,zero,d47c <___vfprintf_internal_r+0x47c>
    d094:	1080068c 	andi	r2,r2,26
    d098:	10800298 	cmpnei	r2,r2,10
    d09c:	1000ff26 	beq	r2,zero,d49c <___vfprintf_internal_r+0x49c>
    d0a0:	d8802704 	addi	r2,sp,156
    d0a4:	b02f883a 	mov	r23,r22
    d0a8:	d8801a15 	stw	r2,104(sp)
    d0ac:	d8001c15 	stw	zero,112(sp)
    d0b0:	d8001b15 	stw	zero,108(sp)
    d0b4:	d8000815 	stw	zero,32(sp)
    d0b8:	d8000915 	stw	zero,36(sp)
    d0bc:	d8000a15 	stw	zero,40(sp)
    d0c0:	d8000c15 	stw	zero,48(sp)
    d0c4:	d8001015 	stw	zero,64(sp)
    d0c8:	d8000515 	stw	zero,20(sp)
    d0cc:	102d883a 	mov	r22,r2
    d0d0:	b8800007 	ldb	r2,0(r23)
    d0d4:	1000d726 	beq	r2,zero,d434 <___vfprintf_internal_r+0x434>
    d0d8:	b821883a 	mov	r16,r23
    d0dc:	00000306 	br	d0ec <___vfprintf_internal_r+0xec>
    d0e0:	80800047 	ldb	r2,1(r16)
    d0e4:	84000044 	addi	r16,r16,1
    d0e8:	10012226 	beq	r2,zero,d574 <___vfprintf_internal_r+0x574>
    d0ec:	10800958 	cmpnei	r2,r2,37
    d0f0:	103ffb1e 	bne	r2,zero,d0e0 <___vfprintf_internal_r+0xe0>
    d0f4:	85e3c83a 	sub	r17,r16,r23
    d0f8:	85c1201e 	bne	r16,r23,d57c <___vfprintf_internal_r+0x57c>
    d0fc:	80800003 	ldbu	r2,0(r16)
    d100:	10803fcc 	andi	r2,r2,255
    d104:	1080201c 	xori	r2,r2,128
    d108:	10bfe004 	addi	r2,r2,-128
    d10c:	1000c926 	beq	r2,zero,d434 <___vfprintf_internal_r+0x434>
    d110:	82c00047 	ldb	r11,1(r16)
    d114:	85c00044 	addi	r23,r16,1
    d118:	d8001345 	stb	zero,77(sp)
    d11c:	0009883a 	mov	r4,zero
    d120:	000b883a 	mov	r5,zero
    d124:	023fffc4 	movi	r8,-1
    d128:	0021883a 	mov	r16,zero
    d12c:	0019883a 	mov	r12,zero
    d130:	bdc00044 	addi	r23,r23,1
    d134:	5839883a 	mov	fp,r11
    d138:	e0bff804 	addi	r2,fp,-32
    d13c:	10c01668 	cmpgeui	r3,r2,89
    d140:	18006c1e 	bne	r3,zero,d2f4 <___vfprintf_internal_r+0x2f4>
    d144:	100490ba 	slli	r2,r2,2
    d148:	00c00074 	movhi	r3,1
    d14c:	10c7883a 	add	r3,r2,r3
    d150:	18b45617 	ldw	r2,-11944(r3)
    d154:	1000683a 	jmp	r2
    d158:	0000da0c 	andi	zero,zero,872
    d15c:	0000d2f4 	movhi	zero,843
    d160:	0000d2f4 	movhi	zero,843
    d164:	0000da00 	call	da0 <kf_bfly5+0x194>
    d168:	0000d2f4 	movhi	zero,843
    d16c:	0000d2f4 	movhi	zero,843
    d170:	0000d2f4 	movhi	zero,843
    d174:	0000d2f4 	movhi	zero,843
    d178:	0000d2f4 	movhi	zero,843
    d17c:	0000d2f4 	movhi	zero,843
    d180:	0000d884 	movi	zero,866
    d184:	0000d9f0 	cmpltui	zero,zero,871
    d188:	0000d2f4 	movhi	zero,843
    d18c:	0000d89c 	xori	zero,zero,866
    d190:	0000d8a8 	cmpgeui	zero,zero,866
    d194:	0000d2f4 	movhi	zero,843
    d198:	0000d9e4 	muli	zero,zero,871
    d19c:	0000d2bc 	xorhi	zero,zero,842
    d1a0:	0000d2bc 	xorhi	zero,zero,842
    d1a4:	0000d2bc 	xorhi	zero,zero,842
    d1a8:	0000d2bc 	xorhi	zero,zero,842
    d1ac:	0000d2bc 	xorhi	zero,zero,842
    d1b0:	0000d2bc 	xorhi	zero,zero,842
    d1b4:	0000d2bc 	xorhi	zero,zero,842
    d1b8:	0000d2bc 	xorhi	zero,zero,842
    d1bc:	0000d2bc 	xorhi	zero,zero,842
    d1c0:	0000d2f4 	movhi	zero,843
    d1c4:	0000d2f4 	movhi	zero,843
    d1c8:	0000d2f4 	movhi	zero,843
    d1cc:	0000d2f4 	movhi	zero,843
    d1d0:	0000d2f4 	movhi	zero,843
    d1d4:	0000d2f4 	movhi	zero,843
    d1d8:	0000d2f4 	movhi	zero,843
    d1dc:	0000d2f4 	movhi	zero,843
    d1e0:	0000d2f4 	movhi	zero,843
    d1e4:	0000d2f4 	movhi	zero,843
    d1e8:	0000d8f4 	movhi	zero,867
    d1ec:	0000d5d8 	cmpnei	zero,zero,855
    d1f0:	0000d2f4 	movhi	zero,843
    d1f4:	0000d5d8 	cmpnei	zero,zero,855
    d1f8:	0000d2f4 	movhi	zero,843
    d1fc:	0000d2f4 	movhi	zero,843
    d200:	0000d2f4 	movhi	zero,843
    d204:	0000d2f4 	movhi	zero,843
    d208:	0000db8c 	andi	zero,zero,878
    d20c:	0000d2f4 	movhi	zero,843
    d210:	0000d2f4 	movhi	zero,843
    d214:	0000d50c 	andi	zero,zero,852
    d218:	0000d2f4 	movhi	zero,843
    d21c:	0000d2f4 	movhi	zero,843
    d220:	0000d2f4 	movhi	zero,843
    d224:	0000d2f4 	movhi	zero,843
    d228:	0000d2f4 	movhi	zero,843
    d22c:	0000d4e4 	muli	zero,zero,851
    d230:	0000d2f4 	movhi	zero,843
    d234:	0000d2f4 	movhi	zero,843
    d238:	0000dbcc 	andi	zero,zero,879
    d23c:	0000d2f4 	movhi	zero,843
    d240:	0000d2f4 	movhi	zero,843
    d244:	0000d2f4 	movhi	zero,843
    d248:	0000d2f4 	movhi	zero,843
    d24c:	0000d2f4 	movhi	zero,843
    d250:	0000d2f4 	movhi	zero,843
    d254:	0000d2f4 	movhi	zero,843
    d258:	0000d2f4 	movhi	zero,843
    d25c:	0000d2f4 	movhi	zero,843
    d260:	0000d2f4 	movhi	zero,843
    d264:	0000dba4 	muli	zero,zero,878
    d268:	0000d7ec 	andhi	zero,zero,863
    d26c:	0000d5d8 	cmpnei	zero,zero,855
    d270:	0000d5d8 	cmpnei	zero,zero,855
    d274:	0000d5d8 	cmpnei	zero,zero,855
    d278:	0000db98 	cmpnei	zero,zero,878
    d27c:	0000d7ec 	andhi	zero,zero,863
    d280:	0000d2f4 	movhi	zero,843
    d284:	0000d2f4 	movhi	zero,843
    d288:	0000da38 	rdprs	zero,zero,872
    d28c:	0000d2f4 	movhi	zero,843
    d290:	0000db4c 	andi	zero,zero,877
    d294:	0000d510 	cmplti	zero,zero,852
    d298:	0000db0c 	andi	zero,zero,876
    d29c:	0000db00 	call	db0 <kf_bfly5+0x1a4>
    d2a0:	0000d2f4 	movhi	zero,843
    d2a4:	0000daa8 	cmpgeui	zero,zero,874
    d2a8:	0000d2f4 	movhi	zero,843
    d2ac:	0000d4e8 	cmpgeui	zero,zero,851
    d2b0:	0000d2f4 	movhi	zero,843
    d2b4:	0000d2f4 	movhi	zero,843
    d2b8:	0000da60 	cmpeqi	zero,zero,873
    d2bc:	0021883a 	mov	r16,zero
    d2c0:	e0fff404 	addi	r3,fp,-48
    d2c4:	800490ba 	slli	r2,r16,2
    d2c8:	bf000007 	ldb	fp,0(r23)
    d2cc:	bdc00044 	addi	r23,r23,1
    d2d0:	1421883a 	add	r16,r2,r16
    d2d4:	8421883a 	add	r16,r16,r16
    d2d8:	1c21883a 	add	r16,r3,r16
    d2dc:	e0fff404 	addi	r3,fp,-48
    d2e0:	188002b0 	cmpltui	r2,r3,10
    d2e4:	103ff71e 	bne	r2,zero,d2c4 <___vfprintf_internal_r+0x2c4>
    d2e8:	e0bff804 	addi	r2,fp,-32
    d2ec:	10c01668 	cmpgeui	r3,r2,89
    d2f0:	183f9426 	beq	r3,zero,d144 <___vfprintf_internal_r+0x144>
    d2f4:	21003fcc 	andi	r4,r4,255
    d2f8:	2006541e 	bne	r4,zero,ec4c <___vfprintf_internal_r+0x1c4c>
    d2fc:	e0004d26 	beq	fp,zero,d434 <___vfprintf_internal_r+0x434>
    d300:	df001d05 	stb	fp,116(sp)
    d304:	d8001345 	stb	zero,77(sp)
    d308:	05000044 	movi	r20,1
    d30c:	05400044 	movi	r21,1
    d310:	dc401d04 	addi	r17,sp,116
    d314:	db000415 	stw	r12,16(sp)
    d318:	0011883a 	mov	r8,zero
    d31c:	d8000715 	stw	zero,28(sp)
    d320:	d8800417 	ldw	r2,16(sp)
    d324:	1380008c 	andi	r14,r2,2
    d328:	70000126 	beq	r14,zero,d330 <___vfprintf_internal_r+0x330>
    d32c:	a5000084 	addi	r20,r20,2
    d330:	d8800417 	ldw	r2,16(sp)
    d334:	d8c01c17 	ldw	r3,112(sp)
    d338:	1340210c 	andi	r13,r2,132
    d33c:	6800021e 	bne	r13,zero,d348 <___vfprintf_internal_r+0x348>
    d340:	850fc83a 	sub	r7,r16,r20
    d344:	01c36b16 	blt	zero,r7,e0f4 <___vfprintf_internal_r+0x10f4>
    d348:	d8801347 	ldb	r2,77(sp)
    d34c:	10000c26 	beq	r2,zero,d380 <___vfprintf_internal_r+0x380>
    d350:	d8801b17 	ldw	r2,108(sp)
    d354:	d9001344 	addi	r4,sp,77
    d358:	18c00044 	addi	r3,r3,1
    d35c:	10800044 	addi	r2,r2,1
    d360:	b1000015 	stw	r4,0(r22)
    d364:	01000044 	movi	r4,1
    d368:	d8801b15 	stw	r2,108(sp)
    d36c:	b1000115 	stw	r4,4(r22)
    d370:	d8c01c15 	stw	r3,112(sp)
    d374:	10800208 	cmpgei	r2,r2,8
    d378:	10039f1e 	bne	r2,zero,e1f8 <___vfprintf_internal_r+0x11f8>
    d37c:	b5800204 	addi	r22,r22,8
    d380:	70000c26 	beq	r14,zero,d3b4 <___vfprintf_internal_r+0x3b4>
    d384:	d8801b17 	ldw	r2,108(sp)
    d388:	d9001384 	addi	r4,sp,78
    d38c:	18c00084 	addi	r3,r3,2
    d390:	10800044 	addi	r2,r2,1
    d394:	b1000015 	stw	r4,0(r22)
    d398:	01000084 	movi	r4,2
    d39c:	d8801b15 	stw	r2,108(sp)
    d3a0:	b1000115 	stw	r4,4(r22)
    d3a4:	d8c01c15 	stw	r3,112(sp)
    d3a8:	10800208 	cmpgei	r2,r2,8
    d3ac:	1003a01e 	bne	r2,zero,e230 <___vfprintf_internal_r+0x1230>
    d3b0:	b5800204 	addi	r22,r22,8
    d3b4:	6b402018 	cmpnei	r13,r13,128
    d3b8:	68025c26 	beq	r13,zero,dd2c <___vfprintf_internal_r+0xd2c>
    d3bc:	4551c83a 	sub	r8,r8,r21
    d3c0:	02029416 	blt	zero,r8,de14 <___vfprintf_internal_r+0xe14>
    d3c4:	d8800417 	ldw	r2,16(sp)
    d3c8:	1080400c 	andi	r2,r2,256
    d3cc:	1002111e 	bne	r2,zero,dc14 <___vfprintf_internal_r+0xc14>
    d3d0:	d8801b17 	ldw	r2,108(sp)
    d3d4:	1d47883a 	add	r3,r3,r21
    d3d8:	b4400015 	stw	r17,0(r22)
    d3dc:	10800044 	addi	r2,r2,1
    d3e0:	b5400115 	stw	r21,4(r22)
    d3e4:	d8801b15 	stw	r2,108(sp)
    d3e8:	d8c01c15 	stw	r3,112(sp)
    d3ec:	10800208 	cmpgei	r2,r2,8
    d3f0:	1002fd1e 	bne	r2,zero,dfe8 <___vfprintf_internal_r+0xfe8>
    d3f4:	b5800204 	addi	r22,r22,8
    d3f8:	d8800417 	ldw	r2,16(sp)
    d3fc:	1440010c 	andi	r17,r2,4
    d400:	88000226 	beq	r17,zero,d40c <___vfprintf_internal_r+0x40c>
    d404:	8523c83a 	sub	r17,r16,r20
    d408:	0440c616 	blt	zero,r17,d724 <___vfprintf_internal_r+0x724>
    d40c:	8500010e 	bge	r16,r20,d414 <___vfprintf_internal_r+0x414>
    d410:	a021883a 	mov	r16,r20
    d414:	d8800517 	ldw	r2,20(sp)
    d418:	1405883a 	add	r2,r2,r16
    d41c:	d8800515 	stw	r2,20(sp)
    d420:	1802c31e 	bne	r3,zero,df30 <___vfprintf_internal_r+0xf30>
    d424:	b8800007 	ldb	r2,0(r23)
    d428:	d8001b15 	stw	zero,108(sp)
    d42c:	dd802704 	addi	r22,sp,156
    d430:	103f291e 	bne	r2,zero,d0d8 <___vfprintf_internal_r+0xd8>
    d434:	d8801c17 	ldw	r2,112(sp)
    d438:	1005ff1e 	bne	r2,zero,ec38 <___vfprintf_internal_r+0x1c38>
    d43c:	9080030b 	ldhu	r2,12(r18)
    d440:	1080100c 	andi	r2,r2,64
    d444:	1006ab1e 	bne	r2,zero,eef4 <___vfprintf_internal_r+0x1ef4>
    d448:	d8800517 	ldw	r2,20(sp)
    d44c:	dfc04017 	ldw	ra,256(sp)
    d450:	df003f17 	ldw	fp,252(sp)
    d454:	ddc03e17 	ldw	r23,248(sp)
    d458:	dd803d17 	ldw	r22,244(sp)
    d45c:	dd403c17 	ldw	r21,240(sp)
    d460:	dd003b17 	ldw	r20,236(sp)
    d464:	dcc03a17 	ldw	r19,232(sp)
    d468:	dc803917 	ldw	r18,228(sp)
    d46c:	dc403817 	ldw	r17,224(sp)
    d470:	dc003717 	ldw	r16,220(sp)
    d474:	dec04104 	addi	sp,sp,260
    d478:	f800283a 	ret
    d47c:	900b883a 	mov	r5,r18
    d480:	9809883a 	mov	r4,r19
    d484:	000f0f40 	call	f0f4 <__swsetup_r>
    d488:	10069a1e 	bne	r2,zero,eef4 <___vfprintf_internal_r+0x1ef4>
    d48c:	9080030b 	ldhu	r2,12(r18)
    d490:	1080068c 	andi	r2,r2,26
    d494:	10800298 	cmpnei	r2,r2,10
    d498:	103f011e 	bne	r2,zero,d0a0 <___vfprintf_internal_r+0xa0>
    d49c:	9080038f 	ldh	r2,14(r18)
    d4a0:	103eff16 	blt	r2,zero,d0a0 <___vfprintf_internal_r+0xa0>
    d4a4:	d9c00617 	ldw	r7,24(sp)
    d4a8:	b00d883a 	mov	r6,r22
    d4ac:	900b883a 	mov	r5,r18
    d4b0:	9809883a 	mov	r4,r19
    d4b4:	dfc04017 	ldw	ra,256(sp)
    d4b8:	df003f17 	ldw	fp,252(sp)
    d4bc:	ddc03e17 	ldw	r23,248(sp)
    d4c0:	dd803d17 	ldw	r22,244(sp)
    d4c4:	dd403c17 	ldw	r21,240(sp)
    d4c8:	dd003b17 	ldw	r20,236(sp)
    d4cc:	dcc03a17 	ldw	r19,232(sp)
    d4d0:	dc803917 	ldw	r18,228(sp)
    d4d4:	dc403817 	ldw	r17,224(sp)
    d4d8:	dc003717 	ldw	r16,220(sp)
    d4dc:	dec04104 	addi	sp,sp,260
    d4e0:	000f0341 	jmpi	f034 <__sbprintf>
    d4e4:	63000414 	ori	r12,r12,16
    d4e8:	6080080c 	andi	r2,r12,32
    d4ec:	10008126 	beq	r2,zero,d6f4 <___vfprintf_internal_r+0x6f4>
    d4f0:	d8c00617 	ldw	r3,24(sp)
    d4f4:	00800044 	movi	r2,1
    d4f8:	1d000017 	ldw	r20,0(r3)
    d4fc:	1d400117 	ldw	r21,4(r3)
    d500:	18c00204 	addi	r3,r3,8
    d504:	d8c00615 	stw	r3,24(sp)
    d508:	00000906 	br	d530 <___vfprintf_internal_r+0x530>
    d50c:	63000414 	ori	r12,r12,16
    d510:	6080080c 	andi	r2,r12,32
    d514:	10006b26 	beq	r2,zero,d6c4 <___vfprintf_internal_r+0x6c4>
    d518:	d8c00617 	ldw	r3,24(sp)
    d51c:	0005883a 	mov	r2,zero
    d520:	1d000017 	ldw	r20,0(r3)
    d524:	1d400117 	ldw	r21,4(r3)
    d528:	18c00204 	addi	r3,r3,8
    d52c:	d8c00615 	stw	r3,24(sp)
    d530:	d8001345 	stb	zero,77(sp)
    d534:	40ffffe0 	cmpeqi	r3,r8,-1
    d538:	001b883a 	mov	r13,zero
    d53c:	18010a1e 	bne	r3,zero,d968 <___vfprintf_internal_r+0x968>
    d540:	047fdfc4 	movi	r17,-129
    d544:	6448703a 	and	r4,r12,r17
    d548:	a546b03a 	or	r3,r20,r21
    d54c:	d9000415 	stw	r4,16(sp)
    d550:	1802e61e 	bne	r3,zero,e0ec <___vfprintf_internal_r+0x10ec>
    d554:	4002601e 	bne	r8,zero,ded8 <___vfprintf_internal_r+0xed8>
    d558:	1003ae1e 	bne	r2,zero,e414 <___vfprintf_internal_r+0x1414>
    d55c:	6540004c 	andi	r21,r12,1
    d560:	a803e426 	beq	r21,zero,e4f4 <___vfprintf_internal_r+0x14f4>
    d564:	00800c04 	movi	r2,48
    d568:	d88026c5 	stb	r2,155(sp)
    d56c:	dc4026c4 	addi	r17,sp,155
    d570:	0000ba06 	br	d85c <___vfprintf_internal_r+0x85c>
    d574:	85e3c83a 	sub	r17,r16,r23
    d578:	85ffae26 	beq	r16,r23,d434 <___vfprintf_internal_r+0x434>
    d57c:	d8c01c17 	ldw	r3,112(sp)
    d580:	d8801b17 	ldw	r2,108(sp)
    d584:	b5c00015 	stw	r23,0(r22)
    d588:	1c47883a 	add	r3,r3,r17
    d58c:	10800044 	addi	r2,r2,1
    d590:	d8801b15 	stw	r2,108(sp)
    d594:	b4400115 	stw	r17,4(r22)
    d598:	d8c01c15 	stw	r3,112(sp)
    d59c:	10800208 	cmpgei	r2,r2,8
    d5a0:	1000061e 	bne	r2,zero,d5bc <___vfprintf_internal_r+0x5bc>
    d5a4:	b5800204 	addi	r22,r22,8
    d5a8:	d8c00517 	ldw	r3,20(sp)
    d5ac:	80800003 	ldbu	r2,0(r16)
    d5b0:	1c47883a 	add	r3,r3,r17
    d5b4:	d8c00515 	stw	r3,20(sp)
    d5b8:	003ed106 	br	d100 <___vfprintf_internal_r+0x100>
    d5bc:	d9801a04 	addi	r6,sp,104
    d5c0:	900b883a 	mov	r5,r18
    d5c4:	9809883a 	mov	r4,r19
    d5c8:	00132600 	call	13260 <__sprint_r>
    d5cc:	103f9b1e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    d5d0:	dd802704 	addi	r22,sp,156
    d5d4:	003ff406 	br	d5a8 <___vfprintf_internal_r+0x5a8>
    d5d8:	21003fcc 	andi	r4,r4,255
    d5dc:	2006291e 	bne	r4,zero,ee84 <___vfprintf_internal_r+0x1e84>
    d5e0:	d8c00617 	ldw	r3,24(sp)
    d5e4:	6080020c 	andi	r2,r12,8
    d5e8:	19000204 	addi	r4,r3,8
    d5ec:	d9000e15 	stw	r4,56(sp)
    d5f0:	1003c21e 	bne	r2,zero,e4fc <___vfprintf_internal_r+0x14fc>
    d5f4:	d8800617 	ldw	r2,24(sp)
    d5f8:	10c00017 	ldw	r3,0(r2)
    d5fc:	10800117 	ldw	r2,4(r2)
    d600:	d8c00915 	stw	r3,36(sp)
    d604:	d8800a15 	stw	r2,40(sp)
    d608:	dd400a17 	ldw	r21,40(sp)
    d60c:	dd000917 	ldw	r20,36(sp)
    d610:	00a00034 	movhi	r2,32768
    d614:	10bfffc4 	addi	r2,r2,-1
    d618:	a8a2703a 	and	r17,r21,r2
    d61c:	01dffc34 	movhi	r7,32752
    d620:	01bfffc4 	movi	r6,-1
    d624:	39ffffc4 	addi	r7,r7,-1
    d628:	a009883a 	mov	r4,r20
    d62c:	880b883a 	mov	r5,r17
    d630:	da000615 	stw	r8,24(sp)
    d634:	db000415 	stw	r12,16(sp)
    d638:	000c1380 	call	c138 <__unorddf2>
    d63c:	db000417 	ldw	r12,16(sp)
    d640:	da000617 	ldw	r8,24(sp)
    d644:	10044d1e 	bne	r2,zero,e77c <___vfprintf_internal_r+0x177c>
    d648:	01dffc34 	movhi	r7,32752
    d64c:	01bfffc4 	movi	r6,-1
    d650:	39ffffc4 	addi	r7,r7,-1
    d654:	a009883a 	mov	r4,r20
    d658:	880b883a 	mov	r5,r17
    d65c:	000af980 	call	af98 <__ledf2>
    d660:	db000417 	ldw	r12,16(sp)
    d664:	da000617 	ldw	r8,24(sp)
    d668:	0084440e 	bge	zero,r2,e77c <___vfprintf_internal_r+0x177c>
    d66c:	000d883a 	mov	r6,zero
    d670:	000f883a 	mov	r7,zero
    d674:	a009883a 	mov	r4,r20
    d678:	a80b883a 	mov	r5,r21
    d67c:	000af980 	call	af98 <__ledf2>
    d680:	db000417 	ldw	r12,16(sp)
    d684:	10055916 	blt	r2,zero,ebec <___vfprintf_internal_r+0x1bec>
    d688:	db401343 	ldbu	r13,77(sp)
    d68c:	e0801210 	cmplti	r2,fp,72
    d690:	1005471e 	bne	r2,zero,ebb0 <___vfprintf_internal_r+0x1bb0>
    d694:	044000b4 	movhi	r17,2
    d698:	8c6a5604 	addi	r17,r17,-22184
    d69c:	00bfdfc4 	movi	r2,-129
    d6a0:	6084703a 	and	r2,r12,r2
    d6a4:	d8800415 	stw	r2,16(sp)
    d6a8:	d8800e17 	ldw	r2,56(sp)
    d6ac:	050000c4 	movi	r20,3
    d6b0:	054000c4 	movi	r21,3
    d6b4:	d8800615 	stw	r2,24(sp)
    d6b8:	0011883a 	mov	r8,zero
    d6bc:	d8000715 	stw	zero,28(sp)
    d6c0:	00006a06 	br	d86c <___vfprintf_internal_r+0x86c>
    d6c4:	d8c00617 	ldw	r3,24(sp)
    d6c8:	6080040c 	andi	r2,r12,16
    d6cc:	1d000017 	ldw	r20,0(r3)
    d6d0:	18c00104 	addi	r3,r3,4
    d6d4:	d8c00615 	stw	r3,24(sp)
    d6d8:	1000031e 	bne	r2,zero,d6e8 <___vfprintf_internal_r+0x6e8>
    d6dc:	6080100c 	andi	r2,r12,64
    d6e0:	10000126 	beq	r2,zero,d6e8 <___vfprintf_internal_r+0x6e8>
    d6e4:	a53fffcc 	andi	r20,r20,65535
    d6e8:	002b883a 	mov	r21,zero
    d6ec:	0005883a 	mov	r2,zero
    d6f0:	003f8f06 	br	d530 <___vfprintf_internal_r+0x530>
    d6f4:	d8c00617 	ldw	r3,24(sp)
    d6f8:	6080040c 	andi	r2,r12,16
    d6fc:	1d000017 	ldw	r20,0(r3)
    d700:	18c00104 	addi	r3,r3,4
    d704:	d8c00615 	stw	r3,24(sp)
    d708:	1000031e 	bne	r2,zero,d718 <___vfprintf_internal_r+0x718>
    d70c:	6080100c 	andi	r2,r12,64
    d710:	10000126 	beq	r2,zero,d718 <___vfprintf_internal_r+0x718>
    d714:	a53fffcc 	andi	r20,r20,65535
    d718:	002b883a 	mov	r21,zero
    d71c:	00800044 	movi	r2,1
    d720:	003f8306 	br	d530 <___vfprintf_internal_r+0x530>
    d724:	030000b4 	movhi	r12,2
    d728:	89000450 	cmplti	r4,r17,17
    d72c:	d8801b17 	ldw	r2,108(sp)
    d730:	632a6a04 	addi	r12,r12,-22104
    d734:	20001b1e 	bne	r4,zero,d7a4 <___vfprintf_internal_r+0x7a4>
    d738:	05400404 	movi	r21,16
    d73c:	6039883a 	mov	fp,r12
    d740:	00000406 	br	d754 <___vfprintf_internal_r+0x754>
    d744:	8c7ffc04 	addi	r17,r17,-16
    d748:	89000448 	cmpgei	r4,r17,17
    d74c:	b5800204 	addi	r22,r22,8
    d750:	20001326 	beq	r4,zero,d7a0 <___vfprintf_internal_r+0x7a0>
    d754:	10800044 	addi	r2,r2,1
    d758:	18c00404 	addi	r3,r3,16
    d75c:	b7000015 	stw	fp,0(r22)
    d760:	b5400115 	stw	r21,4(r22)
    d764:	d8c01c15 	stw	r3,112(sp)
    d768:	d8801b15 	stw	r2,108(sp)
    d76c:	11000208 	cmpgei	r4,r2,8
    d770:	203ff426 	beq	r4,zero,d744 <___vfprintf_internal_r+0x744>
    d774:	d9801a04 	addi	r6,sp,104
    d778:	900b883a 	mov	r5,r18
    d77c:	9809883a 	mov	r4,r19
    d780:	00132600 	call	13260 <__sprint_r>
    d784:	103f2d1e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    d788:	8c7ffc04 	addi	r17,r17,-16
    d78c:	89000448 	cmpgei	r4,r17,17
    d790:	d8c01c17 	ldw	r3,112(sp)
    d794:	d8801b17 	ldw	r2,108(sp)
    d798:	dd802704 	addi	r22,sp,156
    d79c:	203fed1e 	bne	r4,zero,d754 <___vfprintf_internal_r+0x754>
    d7a0:	e019883a 	mov	r12,fp
    d7a4:	10800044 	addi	r2,r2,1
    d7a8:	1c47883a 	add	r3,r3,r17
    d7ac:	d8801b15 	stw	r2,108(sp)
    d7b0:	b3000015 	stw	r12,0(r22)
    d7b4:	b4400115 	stw	r17,4(r22)
    d7b8:	d8c01c15 	stw	r3,112(sp)
    d7bc:	10800210 	cmplti	r2,r2,8
    d7c0:	103f121e 	bne	r2,zero,d40c <___vfprintf_internal_r+0x40c>
    d7c4:	d9801a04 	addi	r6,sp,104
    d7c8:	900b883a 	mov	r5,r18
    d7cc:	9809883a 	mov	r4,r19
    d7d0:	00132600 	call	13260 <__sprint_r>
    d7d4:	103f191e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    d7d8:	d8c01c17 	ldw	r3,112(sp)
    d7dc:	003f0b06 	br	d40c <___vfprintf_internal_r+0x40c>
    d7e0:	9809883a 	mov	r4,r19
    d7e4:	00112300 	call	11230 <__sinit>
    d7e8:	003e1d06 	br	d060 <___vfprintf_internal_r+0x60>
    d7ec:	21003fcc 	andi	r4,r4,255
    d7f0:	2005a61e 	bne	r4,zero,ee8c <___vfprintf_internal_r+0x1e8c>
    d7f4:	6080080c 	andi	r2,r12,32
    d7f8:	10004326 	beq	r2,zero,d908 <___vfprintf_internal_r+0x908>
    d7fc:	d8c00617 	ldw	r3,24(sp)
    d800:	18800117 	ldw	r2,4(r3)
    d804:	1d000017 	ldw	r20,0(r3)
    d808:	18c00204 	addi	r3,r3,8
    d80c:	d8c00615 	stw	r3,24(sp)
    d810:	102b883a 	mov	r21,r2
    d814:	10004a16 	blt	r2,zero,d940 <___vfprintf_internal_r+0x940>
    d818:	40bfffd8 	cmpnei	r2,r8,-1
    d81c:	db401343 	ldbu	r13,77(sp)
    d820:	10000626 	beq	r2,zero,d83c <___vfprintf_internal_r+0x83c>
    d824:	047fdfc4 	movi	r17,-129
    d828:	6446703a 	and	r3,r12,r17
    d82c:	a544b03a 	or	r2,r20,r21
    d830:	d8c00415 	stw	r3,16(sp)
    d834:	1002f626 	beq	r2,zero,e410 <___vfprintf_internal_r+0x1410>
    d838:	db000417 	ldw	r12,16(sp)
    d83c:	a8037f1e 	bne	r21,zero,e63c <___vfprintf_internal_r+0x163c>
    d840:	a08002a8 	cmpgeui	r2,r20,10
    d844:	10037d1e 	bne	r2,zero,e63c <___vfprintf_internal_r+0x163c>
    d848:	a5000c04 	addi	r20,r20,48
    d84c:	dd0026c5 	stb	r20,155(sp)
    d850:	db000415 	stw	r12,16(sp)
    d854:	05400044 	movi	r21,1
    d858:	dc4026c4 	addi	r17,sp,155
    d85c:	4029883a 	mov	r20,r8
    d860:	4540010e 	bge	r8,r21,d868 <___vfprintf_internal_r+0x868>
    d864:	a829883a 	mov	r20,r21
    d868:	d8000715 	stw	zero,28(sp)
    d86c:	6b403fcc 	andi	r13,r13,255
    d870:	6b40201c 	xori	r13,r13,128
    d874:	6b7fe004 	addi	r13,r13,-128
    d878:	683ea926 	beq	r13,zero,d320 <___vfprintf_internal_r+0x320>
    d87c:	a5000044 	addi	r20,r20,1
    d880:	003ea706 	br	d320 <___vfprintf_internal_r+0x320>
    d884:	d8800617 	ldw	r2,24(sp)
    d888:	14000017 	ldw	r16,0(r2)
    d88c:	10800104 	addi	r2,r2,4
    d890:	8003150e 	bge	r16,zero,e4e8 <___vfprintf_internal_r+0x14e8>
    d894:	0421c83a 	sub	r16,zero,r16
    d898:	d8800615 	stw	r2,24(sp)
    d89c:	bac00007 	ldb	r11,0(r23)
    d8a0:	63000114 	ori	r12,r12,4
    d8a4:	003e2206 	br	d130 <___vfprintf_internal_r+0x130>
    d8a8:	bf000007 	ldb	fp,0(r23)
    d8ac:	b8800044 	addi	r2,r23,1
    d8b0:	e0c00aa0 	cmpeqi	r3,fp,42
    d8b4:	1805c91e 	bne	r3,zero,efdc <___vfprintf_internal_r+0x1fdc>
    d8b8:	e0fff404 	addi	r3,fp,-48
    d8bc:	198002b0 	cmpltui	r6,r3,10
    d8c0:	102f883a 	mov	r23,r2
    d8c4:	0011883a 	mov	r8,zero
    d8c8:	303e1b26 	beq	r6,zero,d138 <___vfprintf_internal_r+0x138>
    d8cc:	400490ba 	slli	r2,r8,2
    d8d0:	bf000007 	ldb	fp,0(r23)
    d8d4:	bdc00044 	addi	r23,r23,1
    d8d8:	1211883a 	add	r8,r2,r8
    d8dc:	4211883a 	add	r8,r8,r8
    d8e0:	40d1883a 	add	r8,r8,r3
    d8e4:	e0fff404 	addi	r3,fp,-48
    d8e8:	188002b0 	cmpltui	r2,r3,10
    d8ec:	103ff71e 	bne	r2,zero,d8cc <___vfprintf_internal_r+0x8cc>
    d8f0:	003e1106 	br	d138 <___vfprintf_internal_r+0x138>
    d8f4:	21003fcc 	andi	r4,r4,255
    d8f8:	20055e1e 	bne	r4,zero,ee74 <___vfprintf_internal_r+0x1e74>
    d8fc:	63000414 	ori	r12,r12,16
    d900:	6080080c 	andi	r2,r12,32
    d904:	103fbd1e 	bne	r2,zero,d7fc <___vfprintf_internal_r+0x7fc>
    d908:	d8c00617 	ldw	r3,24(sp)
    d90c:	6080040c 	andi	r2,r12,16
    d910:	1d000017 	ldw	r20,0(r3)
    d914:	18c00104 	addi	r3,r3,4
    d918:	d8c00615 	stw	r3,24(sp)
    d91c:	1002e91e 	bne	r2,zero,e4c4 <___vfprintf_internal_r+0x14c4>
    d920:	6080100c 	andi	r2,r12,64
    d924:	1002e726 	beq	r2,zero,e4c4 <___vfprintf_internal_r+0x14c4>
    d928:	a53fffcc 	andi	r20,r20,65535
    d92c:	a520001c 	xori	r20,r20,32768
    d930:	a5200004 	addi	r20,r20,-32768
    d934:	a02bd7fa 	srai	r21,r20,31
    d938:	a805883a 	mov	r2,r21
    d93c:	103fb60e 	bge	r2,zero,d818 <___vfprintf_internal_r+0x818>
    d940:	a004c03a 	cmpne	r2,r20,zero
    d944:	056bc83a 	sub	r21,zero,r21
    d948:	a8abc83a 	sub	r21,r21,r2
    d94c:	00800b44 	movi	r2,45
    d950:	d8801345 	stb	r2,77(sp)
    d954:	40ffffe0 	cmpeqi	r3,r8,-1
    d958:	0529c83a 	sub	r20,zero,r20
    d95c:	03400b44 	movi	r13,45
    d960:	00800044 	movi	r2,1
    d964:	183ef626 	beq	r3,zero,d540 <___vfprintf_internal_r+0x540>
    d968:	10c00060 	cmpeqi	r3,r2,1
    d96c:	183fb31e 	bne	r3,zero,d83c <___vfprintf_internal_r+0x83c>
    d970:	108000a0 	cmpeqi	r2,r2,2
    d974:	10015d1e 	bne	r2,zero,deec <___vfprintf_internal_r+0xeec>
    d978:	dc402704 	addi	r17,sp,156
    d97c:	a006d0fa 	srli	r3,r20,3
    d980:	a808977a 	slli	r4,r21,29
    d984:	a82ad0fa 	srli	r21,r21,3
    d988:	a50001cc 	andi	r20,r20,7
    d98c:	a0800c04 	addi	r2,r20,48
    d990:	20e8b03a 	or	r20,r4,r3
    d994:	88bfffc5 	stb	r2,-1(r17)
    d998:	a546b03a 	or	r3,r20,r21
    d99c:	880b883a 	mov	r5,r17
    d9a0:	8c7fffc4 	addi	r17,r17,-1
    d9a4:	183ff51e 	bne	r3,zero,d97c <___vfprintf_internal_r+0x97c>
    d9a8:	60c0004c 	andi	r3,r12,1
    d9ac:	18015c26 	beq	r3,zero,df20 <___vfprintf_internal_r+0xf20>
    d9b0:	10803fcc 	andi	r2,r2,255
    d9b4:	1080201c 	xori	r2,r2,128
    d9b8:	10bfe004 	addi	r2,r2,-128
    d9bc:	10800c18 	cmpnei	r2,r2,48
    d9c0:	10015726 	beq	r2,zero,df20 <___vfprintf_internal_r+0xf20>
    d9c4:	00800c04 	movi	r2,48
    d9c8:	297fff84 	addi	r5,r5,-2
    d9cc:	88bfffc5 	stb	r2,-1(r17)
    d9d0:	d8802704 	addi	r2,sp,156
    d9d4:	116bc83a 	sub	r21,r2,r5
    d9d8:	db000415 	stw	r12,16(sp)
    d9dc:	2823883a 	mov	r17,r5
    d9e0:	003f9e06 	br	d85c <___vfprintf_internal_r+0x85c>
    d9e4:	bac00007 	ldb	r11,0(r23)
    d9e8:	63002014 	ori	r12,r12,128
    d9ec:	003dd006 	br	d130 <___vfprintf_internal_r+0x130>
    d9f0:	bac00007 	ldb	r11,0(r23)
    d9f4:	01000044 	movi	r4,1
    d9f8:	01400ac4 	movi	r5,43
    d9fc:	003dcc06 	br	d130 <___vfprintf_internal_r+0x130>
    da00:	bac00007 	ldb	r11,0(r23)
    da04:	63000054 	ori	r12,r12,1
    da08:	003dc906 	br	d130 <___vfprintf_internal_r+0x130>
    da0c:	28803fcc 	andi	r2,r5,255
    da10:	1080201c 	xori	r2,r2,128
    da14:	10bfe004 	addi	r2,r2,-128
    da18:	bf000003 	ldbu	fp,0(r23)
    da1c:	10000c1e 	bne	r2,zero,da50 <___vfprintf_internal_r+0xa50>
    da20:	e2c03fcc 	andi	r11,fp,255
    da24:	5ac0201c 	xori	r11,r11,128
    da28:	01000044 	movi	r4,1
    da2c:	01400804 	movi	r5,32
    da30:	5affe004 	addi	r11,r11,-128
    da34:	003dbe06 	br	d130 <___vfprintf_internal_r+0x130>
    da38:	bac00007 	ldb	r11,0(r23)
    da3c:	58801b18 	cmpnei	r2,r11,108
    da40:	1002a71e 	bne	r2,zero,e4e0 <___vfprintf_internal_r+0x14e0>
    da44:	bf000043 	ldbu	fp,1(r23)
    da48:	63000814 	ori	r12,r12,32
    da4c:	bdc00044 	addi	r23,r23,1
    da50:	e2c03fcc 	andi	r11,fp,255
    da54:	5ac0201c 	xori	r11,r11,128
    da58:	5affe004 	addi	r11,r11,-128
    da5c:	003db406 	br	d130 <___vfprintf_internal_r+0x130>
    da60:	21003fcc 	andi	r4,r4,255
    da64:	20050b1e 	bne	r4,zero,ee94 <___vfprintf_internal_r+0x1e94>
    da68:	008000b4 	movhi	r2,2
    da6c:	10aa5904 	addi	r2,r2,-22172
    da70:	d8800c15 	stw	r2,48(sp)
    da74:	6080080c 	andi	r2,r12,32
    da78:	10005b26 	beq	r2,zero,dbe8 <___vfprintf_internal_r+0xbe8>
    da7c:	d8800617 	ldw	r2,24(sp)
    da80:	15000017 	ldw	r20,0(r2)
    da84:	15400117 	ldw	r21,4(r2)
    da88:	10800204 	addi	r2,r2,8
    da8c:	d8800615 	stw	r2,24(sp)
    da90:	6080004c 	andi	r2,r12,1
    da94:	10000226 	beq	r2,zero,daa0 <___vfprintf_internal_r+0xaa0>
    da98:	a544b03a 	or	r2,r20,r21
    da9c:	10029c1e 	bne	r2,zero,e510 <___vfprintf_internal_r+0x1510>
    daa0:	00800084 	movi	r2,2
    daa4:	003ea206 	br	d530 <___vfprintf_internal_r+0x530>
    daa8:	d8800617 	ldw	r2,24(sp)
    daac:	d8001345 	stb	zero,77(sp)
    dab0:	14400017 	ldw	r17,0(r2)
    dab4:	10c00104 	addi	r3,r2,4
    dab8:	8802ba26 	beq	r17,zero,e5a4 <___vfprintf_internal_r+0x15a4>
    dabc:	40bfffe0 	cmpeqi	r2,r8,-1
    dac0:	1003c61e 	bne	r2,zero,e9dc <___vfprintf_internal_r+0x19dc>
    dac4:	400d883a 	mov	r6,r8
    dac8:	000b883a 	mov	r5,zero
    dacc:	8809883a 	mov	r4,r17
    dad0:	d8c00715 	stw	r3,28(sp)
    dad4:	db000615 	stw	r12,24(sp)
    dad8:	da000415 	stw	r8,16(sp)
    dadc:	0011a380 	call	11a38 <memchr>
    dae0:	da000417 	ldw	r8,16(sp)
    dae4:	db000617 	ldw	r12,24(sp)
    dae8:	d8c00717 	ldw	r3,28(sp)
    daec:	1004d126 	beq	r2,zero,ee34 <___vfprintf_internal_r+0x1e34>
    daf0:	146bc83a 	sub	r21,r2,r17
    daf4:	a829883a 	mov	r20,r21
    daf8:	d8c00615 	stw	r3,24(sp)
    dafc:	003e0506 	br	d314 <___vfprintf_internal_r+0x314>
    db00:	bac00007 	ldb	r11,0(r23)
    db04:	63000814 	ori	r12,r12,32
    db08:	003d8906 	br	d130 <___vfprintf_internal_r+0x130>
    db0c:	d8c00617 	ldw	r3,24(sp)
    db10:	00800c04 	movi	r2,48
    db14:	d8801385 	stb	r2,78(sp)
    db18:	00801e04 	movi	r2,120
    db1c:	010000b4 	movhi	r4,2
    db20:	d88013c5 	stb	r2,79(sp)
    db24:	18800104 	addi	r2,r3,4
    db28:	d8800615 	stw	r2,24(sp)
    db2c:	20aa5904 	addi	r2,r4,-22172
    db30:	d8800c15 	stw	r2,48(sp)
    db34:	1d000017 	ldw	r20,0(r3)
    db38:	002b883a 	mov	r21,zero
    db3c:	63000094 	ori	r12,r12,2
    db40:	00800084 	movi	r2,2
    db44:	07001e04 	movi	fp,120
    db48:	003e7906 	br	d530 <___vfprintf_internal_r+0x530>
    db4c:	21003fcc 	andi	r4,r4,255
    db50:	2004ca1e 	bne	r4,zero,ee7c <___vfprintf_internal_r+0x1e7c>
    db54:	d9000617 	ldw	r4,24(sp)
    db58:	6080080c 	andi	r2,r12,32
    db5c:	20c00104 	addi	r3,r4,4
    db60:	1002711e 	bne	r2,zero,e528 <___vfprintf_internal_r+0x1528>
    db64:	6080040c 	andi	r2,r12,16
    db68:	1002dc1e 	bne	r2,zero,e6dc <___vfprintf_internal_r+0x16dc>
    db6c:	6300100c 	andi	r12,r12,64
    db70:	6002da26 	beq	r12,zero,e6dc <___vfprintf_internal_r+0x16dc>
    db74:	d8800617 	ldw	r2,24(sp)
    db78:	d8c00615 	stw	r3,24(sp)
    db7c:	d8c00517 	ldw	r3,20(sp)
    db80:	10800017 	ldw	r2,0(r2)
    db84:	10c0000d 	sth	r3,0(r2)
    db88:	003d5106 	br	d0d0 <___vfprintf_internal_r+0xd0>
    db8c:	bac00007 	ldb	r11,0(r23)
    db90:	63000214 	ori	r12,r12,8
    db94:	003d6606 	br	d130 <___vfprintf_internal_r+0x130>
    db98:	bac00007 	ldb	r11,0(r23)
    db9c:	63001014 	ori	r12,r12,64
    dba0:	003d6306 	br	d130 <___vfprintf_internal_r+0x130>
    dba4:	d8c00617 	ldw	r3,24(sp)
    dba8:	d8001345 	stb	zero,77(sp)
    dbac:	05000044 	movi	r20,1
    dbb0:	18800017 	ldw	r2,0(r3)
    dbb4:	18c00104 	addi	r3,r3,4
    dbb8:	d8c00615 	stw	r3,24(sp)
    dbbc:	d8801d05 	stb	r2,116(sp)
    dbc0:	05400044 	movi	r21,1
    dbc4:	dc401d04 	addi	r17,sp,116
    dbc8:	003dd206 	br	d314 <___vfprintf_internal_r+0x314>
    dbcc:	21003fcc 	andi	r4,r4,255
    dbd0:	2004b21e 	bne	r4,zero,ee9c <___vfprintf_internal_r+0x1e9c>
    dbd4:	008000b4 	movhi	r2,2
    dbd8:	10aa5e04 	addi	r2,r2,-22152
    dbdc:	d8800c15 	stw	r2,48(sp)
    dbe0:	6080080c 	andi	r2,r12,32
    dbe4:	103fa51e 	bne	r2,zero,da7c <___vfprintf_internal_r+0xa7c>
    dbe8:	d8c00617 	ldw	r3,24(sp)
    dbec:	6080040c 	andi	r2,r12,16
    dbf0:	1d000017 	ldw	r20,0(r3)
    dbf4:	18c00104 	addi	r3,r3,4
    dbf8:	d8c00615 	stw	r3,24(sp)
    dbfc:	10022f1e 	bne	r2,zero,e4bc <___vfprintf_internal_r+0x14bc>
    dc00:	6080100c 	andi	r2,r12,64
    dc04:	10022d26 	beq	r2,zero,e4bc <___vfprintf_internal_r+0x14bc>
    dc08:	a53fffcc 	andi	r20,r20,65535
    dc0c:	002b883a 	mov	r21,zero
    dc10:	003f9f06 	br	da90 <___vfprintf_internal_r+0xa90>
    dc14:	e2c01990 	cmplti	r11,fp,102
    dc18:	5800fb1e 	bne	r11,zero,e008 <___vfprintf_internal_r+0x1008>
    dc1c:	d9000917 	ldw	r4,36(sp)
    dc20:	d9400a17 	ldw	r5,40(sp)
    dc24:	000d883a 	mov	r6,zero
    dc28:	000f883a 	mov	r7,zero
    dc2c:	d8c00e15 	stw	r3,56(sp)
    dc30:	000ae300 	call	ae30 <__eqdf2>
    dc34:	d8c00e17 	ldw	r3,56(sp)
    dc38:	1001891e 	bne	r2,zero,e260 <___vfprintf_internal_r+0x1260>
    dc3c:	d8801b17 	ldw	r2,108(sp)
    dc40:	010000b4 	movhi	r4,2
    dc44:	212a6504 	addi	r4,r4,-22124
    dc48:	10800044 	addi	r2,r2,1
    dc4c:	18c00044 	addi	r3,r3,1
    dc50:	b1000015 	stw	r4,0(r22)
    dc54:	01000044 	movi	r4,1
    dc58:	d8801b15 	stw	r2,108(sp)
    dc5c:	b1000115 	stw	r4,4(r22)
    dc60:	d8c01c15 	stw	r3,112(sp)
    dc64:	10800208 	cmpgei	r2,r2,8
    dc68:	10034a1e 	bne	r2,zero,e994 <___vfprintf_internal_r+0x1994>
    dc6c:	b5800204 	addi	r22,r22,8
    dc70:	d8801417 	ldw	r2,80(sp)
    dc74:	d9000817 	ldw	r4,32(sp)
    dc78:	1102150e 	bge	r2,r4,e4d0 <___vfprintf_internal_r+0x14d0>
    dc7c:	d8800d17 	ldw	r2,52(sp)
    dc80:	d9000b17 	ldw	r4,44(sp)
    dc84:	b0800015 	stw	r2,0(r22)
    dc88:	d8801b17 	ldw	r2,108(sp)
    dc8c:	1907883a 	add	r3,r3,r4
    dc90:	b1000115 	stw	r4,4(r22)
    dc94:	10800044 	addi	r2,r2,1
    dc98:	d8801b15 	stw	r2,108(sp)
    dc9c:	d8c01c15 	stw	r3,112(sp)
    dca0:	10800208 	cmpgei	r2,r2,8
    dca4:	1002371e 	bne	r2,zero,e584 <___vfprintf_internal_r+0x1584>
    dca8:	b5800204 	addi	r22,r22,8
    dcac:	d8800817 	ldw	r2,32(sp)
    dcb0:	157fffc4 	addi	r21,r2,-1
    dcb4:	057dd00e 	bge	zero,r21,d3f8 <___vfprintf_internal_r+0x3f8>
    dcb8:	01c000b4 	movhi	r7,2
    dcbc:	a9000450 	cmplti	r4,r21,17
    dcc0:	d8801b17 	ldw	r2,108(sp)
    dcc4:	39ea6604 	addi	r7,r7,-22120
    dcc8:	20032e1e 	bne	r4,zero,e984 <___vfprintf_internal_r+0x1984>
    dccc:	07000404 	movi	fp,16
    dcd0:	3823883a 	mov	r17,r7
    dcd4:	00000406 	br	dce8 <___vfprintf_internal_r+0xce8>
    dcd8:	b5800204 	addi	r22,r22,8
    dcdc:	ad7ffc04 	addi	r21,r21,-16
    dce0:	a9000448 	cmpgei	r4,r21,17
    dce4:	20032626 	beq	r4,zero,e980 <___vfprintf_internal_r+0x1980>
    dce8:	10800044 	addi	r2,r2,1
    dcec:	18c00404 	addi	r3,r3,16
    dcf0:	b4400015 	stw	r17,0(r22)
    dcf4:	b7000115 	stw	fp,4(r22)
    dcf8:	d8c01c15 	stw	r3,112(sp)
    dcfc:	d8801b15 	stw	r2,108(sp)
    dd00:	11000208 	cmpgei	r4,r2,8
    dd04:	203ff426 	beq	r4,zero,dcd8 <___vfprintf_internal_r+0xcd8>
    dd08:	d9801a04 	addi	r6,sp,104
    dd0c:	900b883a 	mov	r5,r18
    dd10:	9809883a 	mov	r4,r19
    dd14:	00132600 	call	13260 <__sprint_r>
    dd18:	103dc81e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    dd1c:	d8c01c17 	ldw	r3,112(sp)
    dd20:	d8801b17 	ldw	r2,108(sp)
    dd24:	dd802704 	addi	r22,sp,156
    dd28:	003fec06 	br	dcdc <___vfprintf_internal_r+0xcdc>
    dd2c:	8519c83a 	sub	r12,r16,r20
    dd30:	033da20e 	bge	zero,r12,d3bc <___vfprintf_internal_r+0x3bc>
    dd34:	01c000b4 	movhi	r7,2
    dd38:	61000450 	cmplti	r4,r12,17
    dd3c:	d8801b17 	ldw	r2,108(sp)
    dd40:	39ea6604 	addi	r7,r7,-22120
    dd44:	2000281e 	bne	r4,zero,dde8 <___vfprintf_internal_r+0xde8>
    dd48:	dc400e15 	stw	r17,56(sp)
    dd4c:	dc000f15 	stw	r16,60(sp)
    dd50:	b009883a 	mov	r4,r22
    dd54:	03400404 	movi	r13,16
    dd58:	a02d883a 	mov	r22,r20
    dd5c:	6021883a 	mov	r16,r12
    dd60:	4029883a 	mov	r20,r8
    dd64:	3823883a 	mov	r17,r7
    dd68:	00000406 	br	dd7c <___vfprintf_internal_r+0xd7c>
    dd6c:	843ffc04 	addi	r16,r16,-16
    dd70:	81400448 	cmpgei	r5,r16,17
    dd74:	21000204 	addi	r4,r4,8
    dd78:	28001426 	beq	r5,zero,ddcc <___vfprintf_internal_r+0xdcc>
    dd7c:	10800044 	addi	r2,r2,1
    dd80:	18c00404 	addi	r3,r3,16
    dd84:	24400015 	stw	r17,0(r4)
    dd88:	23400115 	stw	r13,4(r4)
    dd8c:	d8c01c15 	stw	r3,112(sp)
    dd90:	d8801b15 	stw	r2,108(sp)
    dd94:	11400208 	cmpgei	r5,r2,8
    dd98:	283ff426 	beq	r5,zero,dd6c <___vfprintf_internal_r+0xd6c>
    dd9c:	d9801a04 	addi	r6,sp,104
    dda0:	900b883a 	mov	r5,r18
    dda4:	9809883a 	mov	r4,r19
    dda8:	00132600 	call	13260 <__sprint_r>
    ddac:	103da31e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    ddb0:	843ffc04 	addi	r16,r16,-16
    ddb4:	81400448 	cmpgei	r5,r16,17
    ddb8:	d8c01c17 	ldw	r3,112(sp)
    ddbc:	d8801b17 	ldw	r2,108(sp)
    ddc0:	d9002704 	addi	r4,sp,156
    ddc4:	03400404 	movi	r13,16
    ddc8:	283fec1e 	bne	r5,zero,dd7c <___vfprintf_internal_r+0xd7c>
    ddcc:	8019883a 	mov	r12,r16
    ddd0:	880f883a 	mov	r7,r17
    ddd4:	dc000f17 	ldw	r16,60(sp)
    ddd8:	dc400e17 	ldw	r17,56(sp)
    dddc:	a011883a 	mov	r8,r20
    dde0:	b029883a 	mov	r20,r22
    dde4:	202d883a 	mov	r22,r4
    dde8:	10800044 	addi	r2,r2,1
    ddec:	1b07883a 	add	r3,r3,r12
    ddf0:	d8801b15 	stw	r2,108(sp)
    ddf4:	b1c00015 	stw	r7,0(r22)
    ddf8:	b3000115 	stw	r12,4(r22)
    ddfc:	d8c01c15 	stw	r3,112(sp)
    de00:	10800208 	cmpgei	r2,r2,8
    de04:	1002eb1e 	bne	r2,zero,e9b4 <___vfprintf_internal_r+0x19b4>
    de08:	4551c83a 	sub	r8,r8,r21
    de0c:	b5800204 	addi	r22,r22,8
    de10:	023d6c0e 	bge	zero,r8,d3c4 <___vfprintf_internal_r+0x3c4>
    de14:	01c000b4 	movhi	r7,2
    de18:	41000450 	cmplti	r4,r8,17
    de1c:	d8801b17 	ldw	r2,108(sp)
    de20:	39ea6604 	addi	r7,r7,-22120
    de24:	2000221e 	bne	r4,zero,deb0 <___vfprintf_internal_r+0xeb0>
    de28:	dc400e15 	stw	r17,56(sp)
    de2c:	dc000f15 	stw	r16,60(sp)
    de30:	03000404 	movi	r12,16
    de34:	4021883a 	mov	r16,r8
    de38:	3823883a 	mov	r17,r7
    de3c:	00000406 	br	de50 <___vfprintf_internal_r+0xe50>
    de40:	843ffc04 	addi	r16,r16,-16
    de44:	81000448 	cmpgei	r4,r16,17
    de48:	b5800204 	addi	r22,r22,8
    de4c:	20001426 	beq	r4,zero,dea0 <___vfprintf_internal_r+0xea0>
    de50:	10800044 	addi	r2,r2,1
    de54:	18c00404 	addi	r3,r3,16
    de58:	b4400015 	stw	r17,0(r22)
    de5c:	b3000115 	stw	r12,4(r22)
    de60:	d8c01c15 	stw	r3,112(sp)
    de64:	d8801b15 	stw	r2,108(sp)
    de68:	11000208 	cmpgei	r4,r2,8
    de6c:	203ff426 	beq	r4,zero,de40 <___vfprintf_internal_r+0xe40>
    de70:	d9801a04 	addi	r6,sp,104
    de74:	900b883a 	mov	r5,r18
    de78:	9809883a 	mov	r4,r19
    de7c:	00132600 	call	13260 <__sprint_r>
    de80:	103d6e1e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    de84:	843ffc04 	addi	r16,r16,-16
    de88:	81000448 	cmpgei	r4,r16,17
    de8c:	d8c01c17 	ldw	r3,112(sp)
    de90:	d8801b17 	ldw	r2,108(sp)
    de94:	dd802704 	addi	r22,sp,156
    de98:	03000404 	movi	r12,16
    de9c:	203fec1e 	bne	r4,zero,de50 <___vfprintf_internal_r+0xe50>
    dea0:	8011883a 	mov	r8,r16
    dea4:	880f883a 	mov	r7,r17
    dea8:	dc000f17 	ldw	r16,60(sp)
    deac:	dc400e17 	ldw	r17,56(sp)
    deb0:	10800044 	addi	r2,r2,1
    deb4:	1a07883a 	add	r3,r3,r8
    deb8:	d8801b15 	stw	r2,108(sp)
    debc:	b1c00015 	stw	r7,0(r22)
    dec0:	b2000115 	stw	r8,4(r22)
    dec4:	d8c01c15 	stw	r3,112(sp)
    dec8:	10800208 	cmpgei	r2,r2,8
    decc:	1001731e 	bne	r2,zero,e49c <___vfprintf_internal_r+0x149c>
    ded0:	b5800204 	addi	r22,r22,8
    ded4:	003d3b06 	br	d3c4 <___vfprintf_internal_r+0x3c4>
    ded8:	10c00060 	cmpeqi	r3,r2,1
    dedc:	1803831e 	bne	r3,zero,ecec <___vfprintf_internal_r+0x1cec>
    dee0:	108000a0 	cmpeqi	r2,r2,2
    dee4:	db000417 	ldw	r12,16(sp)
    dee8:	103ea326 	beq	r2,zero,d978 <___vfprintf_internal_r+0x978>
    deec:	d9000c17 	ldw	r4,48(sp)
    def0:	dc402704 	addi	r17,sp,156
    def4:	a08003cc 	andi	r2,r20,15
    def8:	a806973a 	slli	r3,r21,28
    defc:	a028d13a 	srli	r20,r20,4
    df00:	2085883a 	add	r2,r4,r2
    df04:	10800003 	ldbu	r2,0(r2)
    df08:	a82ad13a 	srli	r21,r21,4
    df0c:	1d28b03a 	or	r20,r3,r20
    df10:	88bfffc5 	stb	r2,-1(r17)
    df14:	a544b03a 	or	r2,r20,r21
    df18:	8c7fffc4 	addi	r17,r17,-1
    df1c:	103ff51e 	bne	r2,zero,def4 <___vfprintf_internal_r+0xef4>
    df20:	d8802704 	addi	r2,sp,156
    df24:	146bc83a 	sub	r21,r2,r17
    df28:	db000415 	stw	r12,16(sp)
    df2c:	003e4b06 	br	d85c <___vfprintf_internal_r+0x85c>
    df30:	d9801a04 	addi	r6,sp,104
    df34:	900b883a 	mov	r5,r18
    df38:	9809883a 	mov	r4,r19
    df3c:	00132600 	call	13260 <__sprint_r>
    df40:	103d3826 	beq	r2,zero,d424 <___vfprintf_internal_r+0x424>
    df44:	003d3d06 	br	d43c <___vfprintf_internal_r+0x43c>
    df48:	d8801b17 	ldw	r2,108(sp)
    df4c:	010000b4 	movhi	r4,2
    df50:	212a6504 	addi	r4,r4,-22124
    df54:	10800044 	addi	r2,r2,1
    df58:	18c00044 	addi	r3,r3,1
    df5c:	b1000015 	stw	r4,0(r22)
    df60:	01000044 	movi	r4,1
    df64:	d8801b15 	stw	r2,108(sp)
    df68:	b1000115 	stw	r4,4(r22)
    df6c:	d8c01c15 	stw	r3,112(sp)
    df70:	10800208 	cmpgei	r2,r2,8
    df74:	1003211e 	bne	r2,zero,ebfc <___vfprintf_internal_r+0x1bfc>
    df78:	b5800204 	addi	r22,r22,8
    df7c:	2802a51e 	bne	r5,zero,ea14 <___vfprintf_internal_r+0x1a14>
    df80:	d8800417 	ldw	r2,16(sp)
    df84:	d9000817 	ldw	r4,32(sp)
    df88:	1080004c 	andi	r2,r2,1
    df8c:	1104b03a 	or	r2,r2,r4
    df90:	103d1926 	beq	r2,zero,d3f8 <___vfprintf_internal_r+0x3f8>
    df94:	d8800d17 	ldw	r2,52(sp)
    df98:	d9000b17 	ldw	r4,44(sp)
    df9c:	b0800015 	stw	r2,0(r22)
    dfa0:	d8801b17 	ldw	r2,108(sp)
    dfa4:	20c7883a 	add	r3,r4,r3
    dfa8:	b1000115 	stw	r4,4(r22)
    dfac:	10800044 	addi	r2,r2,1
    dfb0:	d8c01c15 	stw	r3,112(sp)
    dfb4:	d8801b15 	stw	r2,108(sp)
    dfb8:	11000208 	cmpgei	r4,r2,8
    dfbc:	2003381e 	bne	r4,zero,eca0 <___vfprintf_internal_r+0x1ca0>
    dfc0:	b5800204 	addi	r22,r22,8
    dfc4:	d9000817 	ldw	r4,32(sp)
    dfc8:	10800044 	addi	r2,r2,1
    dfcc:	d8801b15 	stw	r2,108(sp)
    dfd0:	20c7883a 	add	r3,r4,r3
    dfd4:	b4400015 	stw	r17,0(r22)
    dfd8:	b1000115 	stw	r4,4(r22)
    dfdc:	d8c01c15 	stw	r3,112(sp)
    dfe0:	10800208 	cmpgei	r2,r2,8
    dfe4:	103d0326 	beq	r2,zero,d3f4 <___vfprintf_internal_r+0x3f4>
    dfe8:	d9801a04 	addi	r6,sp,104
    dfec:	900b883a 	mov	r5,r18
    dff0:	9809883a 	mov	r4,r19
    dff4:	00132600 	call	13260 <__sprint_r>
    dff8:	103d101e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    dffc:	d8c01c17 	ldw	r3,112(sp)
    e000:	dd802704 	addi	r22,sp,156
    e004:	003cfc06 	br	d3f8 <___vfprintf_internal_r+0x3f8>
    e008:	d8800817 	ldw	r2,32(sp)
    e00c:	dd401b17 	ldw	r21,108(sp)
    e010:	18c00044 	addi	r3,r3,1
    e014:	10800088 	cmpgei	r2,r2,2
    e018:	ad400044 	addi	r21,r21,1
    e01c:	b7000204 	addi	fp,r22,8
    e020:	1000e826 	beq	r2,zero,e3c4 <___vfprintf_internal_r+0x13c4>
    e024:	00800044 	movi	r2,1
    e028:	b0800115 	stw	r2,4(r22)
    e02c:	b4400015 	stw	r17,0(r22)
    e030:	d8c01c15 	stw	r3,112(sp)
    e034:	dd401b15 	stw	r21,108(sp)
    e038:	a8800210 	cmplti	r2,r21,8
    e03c:	1001ad26 	beq	r2,zero,e6f4 <___vfprintf_internal_r+0x16f4>
    e040:	d8800b17 	ldw	r2,44(sp)
    e044:	d9000d17 	ldw	r4,52(sp)
    e048:	ad400044 	addi	r21,r21,1
    e04c:	1887883a 	add	r3,r3,r2
    e050:	e0800115 	stw	r2,4(fp)
    e054:	e1000015 	stw	r4,0(fp)
    e058:	d8c01c15 	stw	r3,112(sp)
    e05c:	dd401b15 	stw	r21,108(sp)
    e060:	a8800208 	cmpgei	r2,r21,8
    e064:	1001ac1e 	bne	r2,zero,e718 <___vfprintf_internal_r+0x1718>
    e068:	e7000204 	addi	fp,fp,8
    e06c:	d9000917 	ldw	r4,36(sp)
    e070:	d9400a17 	ldw	r5,40(sp)
    e074:	000d883a 	mov	r6,zero
    e078:	000f883a 	mov	r7,zero
    e07c:	d8c00715 	stw	r3,28(sp)
    e080:	000ae300 	call	ae30 <__eqdf2>
    e084:	d8c00817 	ldw	r3,32(sp)
    e088:	1dbfffc4 	addi	r22,r3,-1
    e08c:	d8c00717 	ldw	r3,28(sp)
    e090:	1000e426 	beq	r2,zero,e424 <___vfprintf_internal_r+0x1424>
    e094:	8a400044 	addi	r9,r17,1
    e098:	ad400044 	addi	r21,r21,1
    e09c:	1d87883a 	add	r3,r3,r22
    e0a0:	e2400015 	stw	r9,0(fp)
    e0a4:	e5800115 	stw	r22,4(fp)
    e0a8:	d8c01c15 	stw	r3,112(sp)
    e0ac:	dd401b15 	stw	r21,108(sp)
    e0b0:	a8800208 	cmpgei	r2,r21,8
    e0b4:	1000cd1e 	bne	r2,zero,e3ec <___vfprintf_internal_r+0x13ec>
    e0b8:	e7000204 	addi	fp,fp,8
    e0bc:	d9001017 	ldw	r4,64(sp)
    e0c0:	ad400044 	addi	r21,r21,1
    e0c4:	d8801644 	addi	r2,sp,89
    e0c8:	20c7883a 	add	r3,r4,r3
    e0cc:	dd401b15 	stw	r21,108(sp)
    e0d0:	e0800015 	stw	r2,0(fp)
    e0d4:	e1000115 	stw	r4,4(fp)
    e0d8:	d8c01c15 	stw	r3,112(sp)
    e0dc:	ad400208 	cmpgei	r21,r21,8
    e0e0:	a83fc11e 	bne	r21,zero,dfe8 <___vfprintf_internal_r+0xfe8>
    e0e4:	e5800204 	addi	r22,fp,8
    e0e8:	003cc306 	br	d3f8 <___vfprintf_internal_r+0x3f8>
    e0ec:	db000417 	ldw	r12,16(sp)
    e0f0:	003e1d06 	br	d968 <___vfprintf_internal_r+0x968>
    e0f4:	030000b4 	movhi	r12,2
    e0f8:	39000450 	cmplti	r4,r7,17
    e0fc:	d8801b17 	ldw	r2,108(sp)
    e100:	632a6a04 	addi	r12,r12,-22104
    e104:	2000321e 	bne	r4,zero,e1d0 <___vfprintf_internal_r+0x11d0>
    e108:	dc401115 	stw	r17,68(sp)
    e10c:	b009883a 	mov	r4,r22
    e110:	9023883a 	mov	r17,r18
    e114:	a82d883a 	mov	r22,r21
    e118:	ddc01215 	stw	r23,72(sp)
    e11c:	03c00404 	movi	r15,16
    e120:	a02f883a 	mov	r23,r20
    e124:	db800e15 	stw	r14,56(sp)
    e128:	8029883a 	mov	r20,r16
    e12c:	db400f15 	stw	r13,60(sp)
    e130:	402b883a 	mov	r21,r8
    e134:	3821883a 	mov	r16,r7
    e138:	6025883a 	mov	r18,r12
    e13c:	00000406 	br	e150 <___vfprintf_internal_r+0x1150>
    e140:	843ffc04 	addi	r16,r16,-16
    e144:	81800448 	cmpgei	r6,r16,17
    e148:	21000204 	addi	r4,r4,8
    e14c:	30001426 	beq	r6,zero,e1a0 <___vfprintf_internal_r+0x11a0>
    e150:	10800044 	addi	r2,r2,1
    e154:	18c00404 	addi	r3,r3,16
    e158:	24800015 	stw	r18,0(r4)
    e15c:	23c00115 	stw	r15,4(r4)
    e160:	d8c01c15 	stw	r3,112(sp)
    e164:	d8801b15 	stw	r2,108(sp)
    e168:	11800208 	cmpgei	r6,r2,8
    e16c:	303ff426 	beq	r6,zero,e140 <___vfprintf_internal_r+0x1140>
    e170:	d9801a04 	addi	r6,sp,104
    e174:	880b883a 	mov	r5,r17
    e178:	9809883a 	mov	r4,r19
    e17c:	00132600 	call	13260 <__sprint_r>
    e180:	10017c1e 	bne	r2,zero,e774 <___vfprintf_internal_r+0x1774>
    e184:	843ffc04 	addi	r16,r16,-16
    e188:	81800448 	cmpgei	r6,r16,17
    e18c:	d8c01c17 	ldw	r3,112(sp)
    e190:	d8801b17 	ldw	r2,108(sp)
    e194:	d9002704 	addi	r4,sp,156
    e198:	03c00404 	movi	r15,16
    e19c:	303fec1e 	bne	r6,zero,e150 <___vfprintf_internal_r+0x1150>
    e1a0:	800f883a 	mov	r7,r16
    e1a4:	9019883a 	mov	r12,r18
    e1a8:	a021883a 	mov	r16,r20
    e1ac:	8825883a 	mov	r18,r17
    e1b0:	b829883a 	mov	r20,r23
    e1b4:	db800e17 	ldw	r14,56(sp)
    e1b8:	db400f17 	ldw	r13,60(sp)
    e1bc:	ddc01217 	ldw	r23,72(sp)
    e1c0:	dc401117 	ldw	r17,68(sp)
    e1c4:	a811883a 	mov	r8,r21
    e1c8:	b02b883a 	mov	r21,r22
    e1cc:	202d883a 	mov	r22,r4
    e1d0:	10800044 	addi	r2,r2,1
    e1d4:	19c7883a 	add	r3,r3,r7
    e1d8:	d8801b15 	stw	r2,108(sp)
    e1dc:	b3000015 	stw	r12,0(r22)
    e1e0:	b1c00115 	stw	r7,4(r22)
    e1e4:	d8c01c15 	stw	r3,112(sp)
    e1e8:	10800208 	cmpgei	r2,r2,8
    e1ec:	1001531e 	bne	r2,zero,e73c <___vfprintf_internal_r+0x173c>
    e1f0:	b5800204 	addi	r22,r22,8
    e1f4:	003c5406 	br	d348 <___vfprintf_internal_r+0x348>
    e1f8:	d9801a04 	addi	r6,sp,104
    e1fc:	900b883a 	mov	r5,r18
    e200:	9809883a 	mov	r4,r19
    e204:	da001115 	stw	r8,68(sp)
    e208:	db400f15 	stw	r13,60(sp)
    e20c:	db800e15 	stw	r14,56(sp)
    e210:	00132600 	call	13260 <__sprint_r>
    e214:	103c891e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    e218:	d8c01c17 	ldw	r3,112(sp)
    e21c:	da001117 	ldw	r8,68(sp)
    e220:	db400f17 	ldw	r13,60(sp)
    e224:	db800e17 	ldw	r14,56(sp)
    e228:	dd802704 	addi	r22,sp,156
    e22c:	003c5406 	br	d380 <___vfprintf_internal_r+0x380>
    e230:	d9801a04 	addi	r6,sp,104
    e234:	900b883a 	mov	r5,r18
    e238:	9809883a 	mov	r4,r19
    e23c:	da000f15 	stw	r8,60(sp)
    e240:	db400e15 	stw	r13,56(sp)
    e244:	00132600 	call	13260 <__sprint_r>
    e248:	103c7c1e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    e24c:	d8c01c17 	ldw	r3,112(sp)
    e250:	da000f17 	ldw	r8,60(sp)
    e254:	db400e17 	ldw	r13,56(sp)
    e258:	dd802704 	addi	r22,sp,156
    e25c:	003c5506 	br	d3b4 <___vfprintf_internal_r+0x3b4>
    e260:	d9401417 	ldw	r5,80(sp)
    e264:	017f380e 	bge	zero,r5,df48 <___vfprintf_internal_r+0xf48>
    e268:	d8800717 	ldw	r2,28(sp)
    e26c:	d9000817 	ldw	r4,32(sp)
    e270:	102b883a 	mov	r21,r2
    e274:	2080b316 	blt	r4,r2,e544 <___vfprintf_internal_r+0x1544>
    e278:	05400a0e 	bge	zero,r21,e2a4 <___vfprintf_internal_r+0x12a4>
    e27c:	d8801b17 	ldw	r2,108(sp)
    e280:	1d47883a 	add	r3,r3,r21
    e284:	b4400015 	stw	r17,0(r22)
    e288:	10800044 	addi	r2,r2,1
    e28c:	d8801b15 	stw	r2,108(sp)
    e290:	b5400115 	stw	r21,4(r22)
    e294:	d8c01c15 	stw	r3,112(sp)
    e298:	10800208 	cmpgei	r2,r2,8
    e29c:	1002cf1e 	bne	r2,zero,eddc <___vfprintf_internal_r+0x1ddc>
    e2a0:	b5800204 	addi	r22,r22,8
    e2a4:	a800b516 	blt	r21,zero,e57c <___vfprintf_internal_r+0x157c>
    e2a8:	d8800717 	ldw	r2,28(sp)
    e2ac:	156bc83a 	sub	r21,r2,r21
    e2b0:	0540c416 	blt	zero,r21,e5c4 <___vfprintf_internal_r+0x15c4>
    e2b4:	dd401417 	ldw	r21,80(sp)
    e2b8:	d8800817 	ldw	r2,32(sp)
    e2bc:	a880a40e 	bge	r21,r2,e550 <___vfprintf_internal_r+0x1550>
    e2c0:	d8800d17 	ldw	r2,52(sp)
    e2c4:	d9000b17 	ldw	r4,44(sp)
    e2c8:	b0800015 	stw	r2,0(r22)
    e2cc:	d8801b17 	ldw	r2,108(sp)
    e2d0:	1907883a 	add	r3,r3,r4
    e2d4:	b1000115 	stw	r4,4(r22)
    e2d8:	10800044 	addi	r2,r2,1
    e2dc:	d8801b15 	stw	r2,108(sp)
    e2e0:	d8c01c15 	stw	r3,112(sp)
    e2e4:	10800208 	cmpgei	r2,r2,8
    e2e8:	1002b31e 	bne	r2,zero,edb8 <___vfprintf_internal_r+0x1db8>
    e2ec:	b5800204 	addi	r22,r22,8
    e2f0:	d9000817 	ldw	r4,32(sp)
    e2f4:	d9400717 	ldw	r5,28(sp)
    e2f8:	2545c83a 	sub	r2,r4,r21
    e2fc:	2149c83a 	sub	r4,r4,r5
    e300:	102b883a 	mov	r21,r2
    e304:	2080010e 	bge	r4,r2,e30c <___vfprintf_internal_r+0x130c>
    e308:	202b883a 	mov	r21,r4
    e30c:	05400c0e 	bge	zero,r21,e340 <___vfprintf_internal_r+0x1340>
    e310:	d9000717 	ldw	r4,28(sp)
    e314:	1d47883a 	add	r3,r3,r21
    e318:	b5400115 	stw	r21,4(r22)
    e31c:	8913883a 	add	r9,r17,r4
    e320:	d9001b17 	ldw	r4,108(sp)
    e324:	b2400015 	stw	r9,0(r22)
    e328:	d8c01c15 	stw	r3,112(sp)
    e32c:	21000044 	addi	r4,r4,1
    e330:	d9001b15 	stw	r4,108(sp)
    e334:	21000208 	cmpgei	r4,r4,8
    e338:	2002b31e 	bne	r4,zero,ee08 <___vfprintf_internal_r+0x1e08>
    e33c:	b5800204 	addi	r22,r22,8
    e340:	a800010e 	bge	r21,zero,e348 <___vfprintf_internal_r+0x1348>
    e344:	002b883a 	mov	r21,zero
    e348:	156bc83a 	sub	r21,r2,r21
    e34c:	057c2a0e 	bge	zero,r21,d3f8 <___vfprintf_internal_r+0x3f8>
    e350:	01c000b4 	movhi	r7,2
    e354:	a9000450 	cmplti	r4,r21,17
    e358:	d8801b17 	ldw	r2,108(sp)
    e35c:	39ea6604 	addi	r7,r7,-22120
    e360:	2001881e 	bne	r4,zero,e984 <___vfprintf_internal_r+0x1984>
    e364:	07000404 	movi	fp,16
    e368:	3823883a 	mov	r17,r7
    e36c:	00000406 	br	e380 <___vfprintf_internal_r+0x1380>
    e370:	b5800204 	addi	r22,r22,8
    e374:	ad7ffc04 	addi	r21,r21,-16
    e378:	a9000448 	cmpgei	r4,r21,17
    e37c:	20018026 	beq	r4,zero,e980 <___vfprintf_internal_r+0x1980>
    e380:	10800044 	addi	r2,r2,1
    e384:	18c00404 	addi	r3,r3,16
    e388:	b4400015 	stw	r17,0(r22)
    e38c:	b7000115 	stw	fp,4(r22)
    e390:	d8c01c15 	stw	r3,112(sp)
    e394:	d8801b15 	stw	r2,108(sp)
    e398:	11000208 	cmpgei	r4,r2,8
    e39c:	203ff426 	beq	r4,zero,e370 <___vfprintf_internal_r+0x1370>
    e3a0:	d9801a04 	addi	r6,sp,104
    e3a4:	900b883a 	mov	r5,r18
    e3a8:	9809883a 	mov	r4,r19
    e3ac:	00132600 	call	13260 <__sprint_r>
    e3b0:	103c221e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    e3b4:	d8c01c17 	ldw	r3,112(sp)
    e3b8:	d8801b17 	ldw	r2,108(sp)
    e3bc:	dd802704 	addi	r22,sp,156
    e3c0:	003fec06 	br	e374 <___vfprintf_internal_r+0x1374>
    e3c4:	d8800417 	ldw	r2,16(sp)
    e3c8:	1080004c 	andi	r2,r2,1
    e3cc:	103f151e 	bne	r2,zero,e024 <___vfprintf_internal_r+0x1024>
    e3d0:	00800044 	movi	r2,1
    e3d4:	b0800115 	stw	r2,4(r22)
    e3d8:	b4400015 	stw	r17,0(r22)
    e3dc:	d8c01c15 	stw	r3,112(sp)
    e3e0:	dd401b15 	stw	r21,108(sp)
    e3e4:	a8800210 	cmplti	r2,r21,8
    e3e8:	103f341e 	bne	r2,zero,e0bc <___vfprintf_internal_r+0x10bc>
    e3ec:	d9801a04 	addi	r6,sp,104
    e3f0:	900b883a 	mov	r5,r18
    e3f4:	9809883a 	mov	r4,r19
    e3f8:	00132600 	call	13260 <__sprint_r>
    e3fc:	103c0f1e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    e400:	d8c01c17 	ldw	r3,112(sp)
    e404:	dd401b17 	ldw	r21,108(sp)
    e408:	df002704 	addi	fp,sp,156
    e40c:	003f2b06 	br	e0bc <___vfprintf_internal_r+0x10bc>
    e410:	4002361e 	bne	r8,zero,ecec <___vfprintf_internal_r+0x1cec>
    e414:	0011883a 	mov	r8,zero
    e418:	002b883a 	mov	r21,zero
    e41c:	dc402704 	addi	r17,sp,156
    e420:	003d0e06 	br	d85c <___vfprintf_internal_r+0x85c>
    e424:	05bf250e 	bge	zero,r22,e0bc <___vfprintf_internal_r+0x10bc>
    e428:	01c000b4 	movhi	r7,2
    e42c:	b0800450 	cmplti	r2,r22,17
    e430:	39ea6604 	addi	r7,r7,-22120
    e434:	1001731e 	bne	r2,zero,ea04 <___vfprintf_internal_r+0x1a04>
    e438:	dc000715 	stw	r16,28(sp)
    e43c:	04400404 	movi	r17,16
    e440:	3821883a 	mov	r16,r7
    e444:	00000406 	br	e458 <___vfprintf_internal_r+0x1458>
    e448:	e7000204 	addi	fp,fp,8
    e44c:	b5bffc04 	addi	r22,r22,-16
    e450:	b0800448 	cmpgei	r2,r22,17
    e454:	10016926 	beq	r2,zero,e9fc <___vfprintf_internal_r+0x19fc>
    e458:	ad400044 	addi	r21,r21,1
    e45c:	18c00404 	addi	r3,r3,16
    e460:	e4000015 	stw	r16,0(fp)
    e464:	e4400115 	stw	r17,4(fp)
    e468:	d8c01c15 	stw	r3,112(sp)
    e46c:	dd401b15 	stw	r21,108(sp)
    e470:	a8800208 	cmpgei	r2,r21,8
    e474:	103ff426 	beq	r2,zero,e448 <___vfprintf_internal_r+0x1448>
    e478:	d9801a04 	addi	r6,sp,104
    e47c:	900b883a 	mov	r5,r18
    e480:	9809883a 	mov	r4,r19
    e484:	00132600 	call	13260 <__sprint_r>
    e488:	103bec1e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    e48c:	d8c01c17 	ldw	r3,112(sp)
    e490:	dd401b17 	ldw	r21,108(sp)
    e494:	df002704 	addi	fp,sp,156
    e498:	003fec06 	br	e44c <___vfprintf_internal_r+0x144c>
    e49c:	d9801a04 	addi	r6,sp,104
    e4a0:	900b883a 	mov	r5,r18
    e4a4:	9809883a 	mov	r4,r19
    e4a8:	00132600 	call	13260 <__sprint_r>
    e4ac:	103be31e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    e4b0:	d8c01c17 	ldw	r3,112(sp)
    e4b4:	dd802704 	addi	r22,sp,156
    e4b8:	003bc206 	br	d3c4 <___vfprintf_internal_r+0x3c4>
    e4bc:	002b883a 	mov	r21,zero
    e4c0:	003d7306 	br	da90 <___vfprintf_internal_r+0xa90>
    e4c4:	a02bd7fa 	srai	r21,r20,31
    e4c8:	a805883a 	mov	r2,r21
    e4cc:	003cd106 	br	d814 <___vfprintf_internal_r+0x814>
    e4d0:	d8800417 	ldw	r2,16(sp)
    e4d4:	1080004c 	andi	r2,r2,1
    e4d8:	103bc726 	beq	r2,zero,d3f8 <___vfprintf_internal_r+0x3f8>
    e4dc:	003de706 	br	dc7c <___vfprintf_internal_r+0xc7c>
    e4e0:	63000414 	ori	r12,r12,16
    e4e4:	003b1206 	br	d130 <___vfprintf_internal_r+0x130>
    e4e8:	bac00007 	ldb	r11,0(r23)
    e4ec:	d8800615 	stw	r2,24(sp)
    e4f0:	003b0f06 	br	d130 <___vfprintf_internal_r+0x130>
    e4f4:	dc402704 	addi	r17,sp,156
    e4f8:	003cd806 	br	d85c <___vfprintf_internal_r+0x85c>
    e4fc:	18800017 	ldw	r2,0(r3)
    e500:	d8800915 	stw	r2,36(sp)
    e504:	18800117 	ldw	r2,4(r3)
    e508:	d8800a15 	stw	r2,40(sp)
    e50c:	003c3e06 	br	d608 <___vfprintf_internal_r+0x608>
    e510:	00800c04 	movi	r2,48
    e514:	d8801385 	stb	r2,78(sp)
    e518:	df0013c5 	stb	fp,79(sp)
    e51c:	63000094 	ori	r12,r12,2
    e520:	00800084 	movi	r2,2
    e524:	003c0206 	br	d530 <___vfprintf_internal_r+0x530>
    e528:	d9400517 	ldw	r5,20(sp)
    e52c:	20800017 	ldw	r2,0(r4)
    e530:	d8c00615 	stw	r3,24(sp)
    e534:	2809d7fa 	srai	r4,r5,31
    e538:	11400015 	stw	r5,0(r2)
    e53c:	11000115 	stw	r4,4(r2)
    e540:	003ae306 	br	d0d0 <___vfprintf_internal_r+0xd0>
    e544:	202b883a 	mov	r21,r4
    e548:	057f4c16 	blt	zero,r21,e27c <___vfprintf_internal_r+0x127c>
    e54c:	003f5506 	br	e2a4 <___vfprintf_internal_r+0x12a4>
    e550:	d8800417 	ldw	r2,16(sp)
    e554:	1080004c 	andi	r2,r2,1
    e558:	103f591e 	bne	r2,zero,e2c0 <___vfprintf_internal_r+0x12c0>
    e55c:	d9000817 	ldw	r4,32(sp)
    e560:	d9400717 	ldw	r5,28(sp)
    e564:	2545c83a 	sub	r2,r4,r21
    e568:	2179c83a 	sub	fp,r4,r5
    e56c:	102b883a 	mov	r21,r2
    e570:	e0bf730e 	bge	fp,r2,e340 <___vfprintf_internal_r+0x1340>
    e574:	e02b883a 	mov	r21,fp
    e578:	003f7106 	br	e340 <___vfprintf_internal_r+0x1340>
    e57c:	002b883a 	mov	r21,zero
    e580:	003f4906 	br	e2a8 <___vfprintf_internal_r+0x12a8>
    e584:	d9801a04 	addi	r6,sp,104
    e588:	900b883a 	mov	r5,r18
    e58c:	9809883a 	mov	r4,r19
    e590:	00132600 	call	13260 <__sprint_r>
    e594:	103ba91e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    e598:	d8c01c17 	ldw	r3,112(sp)
    e59c:	dd802704 	addi	r22,sp,156
    e5a0:	003dc206 	br	dcac <___vfprintf_internal_r+0xcac>
    e5a4:	408001f0 	cmpltui	r2,r8,7
    e5a8:	402b883a 	mov	r21,r8
    e5ac:	1001a026 	beq	r2,zero,ec30 <___vfprintf_internal_r+0x1c30>
    e5b0:	044000b4 	movhi	r17,2
    e5b4:	a829883a 	mov	r20,r21
    e5b8:	d8c00615 	stw	r3,24(sp)
    e5bc:	8c6a6304 	addi	r17,r17,-22132
    e5c0:	003b5406 	br	d314 <___vfprintf_internal_r+0x314>
    e5c4:	01c000b4 	movhi	r7,2
    e5c8:	a9000450 	cmplti	r4,r21,17
    e5cc:	d8801b17 	ldw	r2,108(sp)
    e5d0:	39ea6604 	addi	r7,r7,-22120
    e5d4:	20017b1e 	bne	r4,zero,ebc4 <___vfprintf_internal_r+0x1bc4>
    e5d8:	dc000e15 	stw	r16,56(sp)
    e5dc:	07000404 	movi	fp,16
    e5e0:	3821883a 	mov	r16,r7
    e5e4:	00000406 	br	e5f8 <___vfprintf_internal_r+0x15f8>
    e5e8:	b5800204 	addi	r22,r22,8
    e5ec:	ad7ffc04 	addi	r21,r21,-16
    e5f0:	a9000448 	cmpgei	r4,r21,17
    e5f4:	20017126 	beq	r4,zero,ebbc <___vfprintf_internal_r+0x1bbc>
    e5f8:	10800044 	addi	r2,r2,1
    e5fc:	18c00404 	addi	r3,r3,16
    e600:	b4000015 	stw	r16,0(r22)
    e604:	b7000115 	stw	fp,4(r22)
    e608:	d8c01c15 	stw	r3,112(sp)
    e60c:	d8801b15 	stw	r2,108(sp)
    e610:	11000208 	cmpgei	r4,r2,8
    e614:	203ff426 	beq	r4,zero,e5e8 <___vfprintf_internal_r+0x15e8>
    e618:	d9801a04 	addi	r6,sp,104
    e61c:	900b883a 	mov	r5,r18
    e620:	9809883a 	mov	r4,r19
    e624:	00132600 	call	13260 <__sprint_r>
    e628:	103b841e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    e62c:	d8c01c17 	ldw	r3,112(sp)
    e630:	d8801b17 	ldw	r2,108(sp)
    e634:	dd802704 	addi	r22,sp,156
    e638:	003fec06 	br	e5ec <___vfprintf_internal_r+0x15ec>
    e63c:	dc402704 	addi	r17,sp,156
    e640:	a805883a 	mov	r2,r21
    e644:	dc000715 	stw	r16,28(sp)
    e648:	902b883a 	mov	r21,r18
    e64c:	8821883a 	mov	r16,r17
    e650:	db000415 	stw	r12,16(sp)
    e654:	a023883a 	mov	r17,r20
    e658:	da000e15 	stw	r8,56(sp)
    e65c:	9829883a 	mov	r20,r19
    e660:	1025883a 	mov	r18,r2
    e664:	6827883a 	mov	r19,r13
    e668:	8809883a 	mov	r4,r17
    e66c:	900b883a 	mov	r5,r18
    e670:	01800284 	movi	r6,10
    e674:	000f883a 	mov	r7,zero
    e678:	00168c80 	call	168c8 <__umoddi3>
    e67c:	10800c04 	addi	r2,r2,48
    e680:	8809883a 	mov	r4,r17
    e684:	900b883a 	mov	r5,r18
    e688:	01800284 	movi	r6,10
    e68c:	000f883a 	mov	r7,zero
    e690:	80bfffc5 	stb	r2,-1(r16)
    e694:	00162a80 	call	162a8 <__udivdi3>
    e698:	900d883a 	mov	r6,r18
    e69c:	880f883a 	mov	r7,r17
    e6a0:	843fffc4 	addi	r16,r16,-1
    e6a4:	1023883a 	mov	r17,r2
    e6a8:	1825883a 	mov	r18,r3
    e6ac:	303fee1e 	bne	r6,zero,e668 <___vfprintf_internal_r+0x1668>
    e6b0:	39c002a8 	cmpgeui	r7,r7,10
    e6b4:	383fec1e 	bne	r7,zero,e668 <___vfprintf_internal_r+0x1668>
    e6b8:	8023883a 	mov	r17,r16
    e6bc:	d8802704 	addi	r2,sp,156
    e6c0:	981b883a 	mov	r13,r19
    e6c4:	a825883a 	mov	r18,r21
    e6c8:	dc000717 	ldw	r16,28(sp)
    e6cc:	da000e17 	ldw	r8,56(sp)
    e6d0:	a027883a 	mov	r19,r20
    e6d4:	146bc83a 	sub	r21,r2,r17
    e6d8:	003c6006 	br	d85c <___vfprintf_internal_r+0x85c>
    e6dc:	d8800617 	ldw	r2,24(sp)
    e6e0:	10800017 	ldw	r2,0(r2)
    e6e4:	d8c00615 	stw	r3,24(sp)
    e6e8:	d8c00517 	ldw	r3,20(sp)
    e6ec:	10c00015 	stw	r3,0(r2)
    e6f0:	003a7706 	br	d0d0 <___vfprintf_internal_r+0xd0>
    e6f4:	d9801a04 	addi	r6,sp,104
    e6f8:	900b883a 	mov	r5,r18
    e6fc:	9809883a 	mov	r4,r19
    e700:	00132600 	call	13260 <__sprint_r>
    e704:	103b4d1e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    e708:	d8c01c17 	ldw	r3,112(sp)
    e70c:	dd401b17 	ldw	r21,108(sp)
    e710:	df002704 	addi	fp,sp,156
    e714:	003e4a06 	br	e040 <___vfprintf_internal_r+0x1040>
    e718:	d9801a04 	addi	r6,sp,104
    e71c:	900b883a 	mov	r5,r18
    e720:	9809883a 	mov	r4,r19
    e724:	00132600 	call	13260 <__sprint_r>
    e728:	103b441e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    e72c:	d8c01c17 	ldw	r3,112(sp)
    e730:	dd401b17 	ldw	r21,108(sp)
    e734:	df002704 	addi	fp,sp,156
    e738:	003e4c06 	br	e06c <___vfprintf_internal_r+0x106c>
    e73c:	d9801a04 	addi	r6,sp,104
    e740:	900b883a 	mov	r5,r18
    e744:	9809883a 	mov	r4,r19
    e748:	da001115 	stw	r8,68(sp)
    e74c:	db400f15 	stw	r13,60(sp)
    e750:	db800e15 	stw	r14,56(sp)
    e754:	00132600 	call	13260 <__sprint_r>
    e758:	103b381e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    e75c:	d8c01c17 	ldw	r3,112(sp)
    e760:	da001117 	ldw	r8,68(sp)
    e764:	db400f17 	ldw	r13,60(sp)
    e768:	db800e17 	ldw	r14,56(sp)
    e76c:	dd802704 	addi	r22,sp,156
    e770:	003af506 	br	d348 <___vfprintf_internal_r+0x348>
    e774:	8825883a 	mov	r18,r17
    e778:	003b3006 	br	d43c <___vfprintf_internal_r+0x43c>
    e77c:	d9000917 	ldw	r4,36(sp)
    e780:	d9400a17 	ldw	r5,40(sp)
    e784:	da000615 	stw	r8,24(sp)
    e788:	200d883a 	mov	r6,r4
    e78c:	280f883a 	mov	r7,r5
    e790:	db000415 	stw	r12,16(sp)
    e794:	000c1380 	call	c138 <__unorddf2>
    e798:	db000417 	ldw	r12,16(sp)
    e79c:	da000617 	ldw	r8,24(sp)
    e7a0:	1001f51e 	bne	r2,zero,ef78 <___vfprintf_internal_r+0x1f78>
    e7a4:	057ff7c4 	movi	r21,-33
    e7a8:	40bfffe0 	cmpeqi	r2,r8,-1
    e7ac:	e56a703a 	and	r21,fp,r21
    e7b0:	1001931e 	bne	r2,zero,ee00 <___vfprintf_internal_r+0x1e00>
    e7b4:	a88011d8 	cmpnei	r2,r21,71
    e7b8:	10013626 	beq	r2,zero,ec94 <___vfprintf_internal_r+0x1c94>
    e7bc:	60804014 	ori	r2,r12,256
    e7c0:	d8800415 	stw	r2,16(sp)
    e7c4:	d8800a17 	ldw	r2,40(sp)
    e7c8:	10011516 	blt	r2,zero,ec20 <___vfprintf_internal_r+0x1c20>
    e7cc:	dd000a17 	ldw	r20,40(sp)
    e7d0:	d8000605 	stb	zero,24(sp)
    e7d4:	e08019a0 	cmpeqi	r2,fp,102
    e7d8:	d8800f15 	stw	r2,60(sp)
    e7dc:	1000b91e 	bne	r2,zero,eac4 <___vfprintf_internal_r+0x1ac4>
    e7e0:	e08011a0 	cmpeqi	r2,fp,70
    e7e4:	1000b71e 	bne	r2,zero,eac4 <___vfprintf_internal_r+0x1ac4>
    e7e8:	a8801158 	cmpnei	r2,r21,69
    e7ec:	10014126 	beq	r2,zero,ecf4 <___vfprintf_internal_r+0x1cf4>
    e7f0:	d8801804 	addi	r2,sp,96
    e7f4:	d8800315 	stw	r2,12(sp)
    e7f8:	d9400917 	ldw	r5,36(sp)
    e7fc:	d8801504 	addi	r2,sp,84
    e800:	d8800215 	stw	r2,8(sp)
    e804:	d8801404 	addi	r2,sp,80
    e808:	da000015 	stw	r8,0(sp)
    e80c:	9809883a 	mov	r4,r19
    e810:	d8800115 	stw	r2,4(sp)
    e814:	01c00084 	movi	r7,2
    e818:	a00d883a 	mov	r6,r20
    e81c:	db000815 	stw	r12,32(sp)
    e820:	da000715 	stw	r8,28(sp)
    e824:	000f4780 	call	f478 <_dtoa_r>
    e828:	da000717 	ldw	r8,28(sp)
    e82c:	e10019d8 	cmpnei	r4,fp,103
    e830:	db000817 	ldw	r12,32(sp)
    e834:	1023883a 	mov	r17,r2
    e838:	4007883a 	mov	r3,r8
    e83c:	2001411e 	bne	r4,zero,ed44 <___vfprintf_internal_r+0x1d44>
    e840:	6080004c 	andi	r2,r12,1
    e844:	1001411e 	bne	r2,zero,ed4c <___vfprintf_internal_r+0x1d4c>
    e848:	d8801417 	ldw	r2,80(sp)
    e84c:	ad4011e0 	cmpeqi	r21,r21,71
    e850:	d8800715 	stw	r2,28(sp)
    e854:	d8801817 	ldw	r2,96(sp)
    e858:	1445c83a 	sub	r2,r2,r17
    e85c:	d8800815 	stw	r2,32(sp)
    e860:	a8000526 	beq	r21,zero,e878 <___vfprintf_internal_r+0x1878>
    e864:	d8c00717 	ldw	r3,28(sp)
    e868:	18bfff50 	cmplti	r2,r3,-3
    e86c:	1000011e 	bne	r2,zero,e874 <___vfprintf_internal_r+0x1874>
    e870:	40c1460e 	bge	r8,r3,ed8c <___vfprintf_internal_r+0x1d8c>
    e874:	e73fff84 	addi	fp,fp,-2
    e878:	d8800717 	ldw	r2,28(sp)
    e87c:	df001645 	stb	fp,89(sp)
    e880:	157fffc4 	addi	r21,r2,-1
    e884:	dd401415 	stw	r21,80(sp)
    e888:	a801ab16 	blt	r21,zero,ef38 <___vfprintf_internal_r+0x1f38>
    e88c:	00800ac4 	movi	r2,43
    e890:	d8801685 	stb	r2,90(sp)
    e894:	a8800290 	cmplti	r2,r21,10
    e898:	1001a01e 	bne	r2,zero,ef1c <___vfprintf_internal_r+0x1f1c>
    e89c:	d98019c4 	addi	r6,sp,103
    e8a0:	9029883a 	mov	r20,r18
    e8a4:	dc400715 	stw	r17,28(sp)
    e8a8:	8025883a 	mov	r18,r16
    e8ac:	db000f15 	stw	r12,60(sp)
    e8b0:	3021883a 	mov	r16,r6
    e8b4:	a809883a 	mov	r4,r21
    e8b8:	01400284 	movi	r5,10
    e8bc:	0008a180 	call	8a18 <__modsi3>
    e8c0:	10800c04 	addi	r2,r2,48
    e8c4:	a809883a 	mov	r4,r21
    e8c8:	80bfffc5 	stb	r2,-1(r16)
    e8cc:	01400284 	movi	r5,10
    e8d0:	00089980 	call	8998 <__divsi3>
    e8d4:	a9001908 	cmpgei	r4,r21,100
    e8d8:	8023883a 	mov	r17,r16
    e8dc:	102b883a 	mov	r21,r2
    e8e0:	843fffc4 	addi	r16,r16,-1
    e8e4:	203ff31e 	bne	r4,zero,e8b4 <___vfprintf_internal_r+0x18b4>
    e8e8:	800d883a 	mov	r6,r16
    e8ec:	11000c04 	addi	r4,r2,48
    e8f0:	9021883a 	mov	r16,r18
    e8f4:	a025883a 	mov	r18,r20
    e8f8:	8829883a 	mov	r20,r17
    e8fc:	a0bfff84 	addi	r2,r20,-2
    e900:	313fffc5 	stb	r4,-1(r6)
    e904:	d8c019c4 	addi	r3,sp,103
    e908:	db000f17 	ldw	r12,60(sp)
    e90c:	dc400717 	ldw	r17,28(sp)
    e910:	10c1be2e 	bgeu	r2,r3,f00c <___vfprintf_internal_r+0x200c>
    e914:	d8c016c4 	addi	r3,sp,91
    e918:	00000106 	br	e920 <___vfprintf_internal_r+0x1920>
    e91c:	11000003 	ldbu	r4,0(r2)
    e920:	19000005 	stb	r4,0(r3)
    e924:	10800044 	addi	r2,r2,1
    e928:	d90019c4 	addi	r4,sp,103
    e92c:	18c00044 	addi	r3,r3,1
    e930:	113ffa1e 	bne	r2,r4,e91c <___vfprintf_internal_r+0x191c>
    e934:	d8801a44 	addi	r2,sp,105
    e938:	d8c016c4 	addi	r3,sp,91
    e93c:	1505c83a 	sub	r2,r2,r20
    e940:	1885883a 	add	r2,r3,r2
    e944:	d8c01644 	addi	r3,sp,89
    e948:	10c5c83a 	sub	r2,r2,r3
    e94c:	d8801015 	stw	r2,64(sp)
    e950:	d8c00817 	ldw	r3,32(sp)
    e954:	d9001017 	ldw	r4,64(sp)
    e958:	18800088 	cmpgei	r2,r3,2
    e95c:	192b883a 	add	r21,r3,r4
    e960:	10018126 	beq	r2,zero,ef68 <___vfprintf_internal_r+0x1f68>
    e964:	d8800b17 	ldw	r2,44(sp)
    e968:	a8ab883a 	add	r21,r21,r2
    e96c:	a829883a 	mov	r20,r21
    e970:	a800010e 	bge	r21,zero,e978 <___vfprintf_internal_r+0x1978>
    e974:	0029883a 	mov	r20,zero
    e978:	d8000715 	stw	zero,28(sp)
    e97c:	00008406 	br	eb90 <___vfprintf_internal_r+0x1b90>
    e980:	880f883a 	mov	r7,r17
    e984:	10800044 	addi	r2,r2,1
    e988:	1d47883a 	add	r3,r3,r21
    e98c:	b1c00015 	stw	r7,0(r22)
    e990:	003a9306 	br	d3e0 <___vfprintf_internal_r+0x3e0>
    e994:	d9801a04 	addi	r6,sp,104
    e998:	900b883a 	mov	r5,r18
    e99c:	9809883a 	mov	r4,r19
    e9a0:	00132600 	call	13260 <__sprint_r>
    e9a4:	103aa51e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    e9a8:	d8c01c17 	ldw	r3,112(sp)
    e9ac:	dd802704 	addi	r22,sp,156
    e9b0:	003caf06 	br	dc70 <___vfprintf_internal_r+0xc70>
    e9b4:	d9801a04 	addi	r6,sp,104
    e9b8:	900b883a 	mov	r5,r18
    e9bc:	9809883a 	mov	r4,r19
    e9c0:	da000e15 	stw	r8,56(sp)
    e9c4:	00132600 	call	13260 <__sprint_r>
    e9c8:	103a9c1e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    e9cc:	d8c01c17 	ldw	r3,112(sp)
    e9d0:	da000e17 	ldw	r8,56(sp)
    e9d4:	dd802704 	addi	r22,sp,156
    e9d8:	003a7806 	br	d3bc <___vfprintf_internal_r+0x3bc>
    e9dc:	8809883a 	mov	r4,r17
    e9e0:	db000415 	stw	r12,16(sp)
    e9e4:	d8c00615 	stw	r3,24(sp)
    e9e8:	00130d40 	call	130d4 <strlen>
    e9ec:	db000417 	ldw	r12,16(sp)
    e9f0:	102b883a 	mov	r21,r2
    e9f4:	1029883a 	mov	r20,r2
    e9f8:	003a4606 	br	d314 <___vfprintf_internal_r+0x314>
    e9fc:	800f883a 	mov	r7,r16
    ea00:	dc000717 	ldw	r16,28(sp)
    ea04:	ad400044 	addi	r21,r21,1
    ea08:	1d87883a 	add	r3,r3,r22
    ea0c:	e1c00015 	stw	r7,0(fp)
    ea10:	003da406 	br	e0a4 <___vfprintf_internal_r+0x10a4>
    ea14:	d8800d17 	ldw	r2,52(sp)
    ea18:	d9000b17 	ldw	r4,44(sp)
    ea1c:	b0800015 	stw	r2,0(r22)
    ea20:	d8801b17 	ldw	r2,108(sp)
    ea24:	20c7883a 	add	r3,r4,r3
    ea28:	b1000115 	stw	r4,4(r22)
    ea2c:	10800044 	addi	r2,r2,1
    ea30:	d8c01c15 	stw	r3,112(sp)
    ea34:	d8801b15 	stw	r2,108(sp)
    ea38:	11000208 	cmpgei	r4,r2,8
    ea3c:	2000981e 	bne	r4,zero,eca0 <___vfprintf_internal_r+0x1ca0>
    ea40:	b5800204 	addi	r22,r22,8
    ea44:	283d5f0e 	bge	r5,zero,dfc4 <___vfprintf_internal_r+0xfc4>
    ea48:	01c000b4 	movhi	r7,2
    ea4c:	293ffc08 	cmpgei	r4,r5,-16
    ea50:	39ea6604 	addi	r7,r7,-22120
    ea54:	0179c83a 	sub	fp,zero,r5
    ea58:	2001151e 	bne	r4,zero,eeb0 <___vfprintf_internal_r+0x1eb0>
    ea5c:	dc000715 	stw	r16,28(sp)
    ea60:	05400404 	movi	r21,16
    ea64:	9021883a 	mov	r16,r18
    ea68:	3825883a 	mov	r18,r7
    ea6c:	00000406 	br	ea80 <___vfprintf_internal_r+0x1a80>
    ea70:	b5800204 	addi	r22,r22,8
    ea74:	e73ffc04 	addi	fp,fp,-16
    ea78:	e1800448 	cmpgei	r6,fp,17
    ea7c:	30010926 	beq	r6,zero,eea4 <___vfprintf_internal_r+0x1ea4>
    ea80:	10800044 	addi	r2,r2,1
    ea84:	18c00404 	addi	r3,r3,16
    ea88:	b4800015 	stw	r18,0(r22)
    ea8c:	b5400115 	stw	r21,4(r22)
    ea90:	d8c01c15 	stw	r3,112(sp)
    ea94:	d8801b15 	stw	r2,108(sp)
    ea98:	11800208 	cmpgei	r6,r2,8
    ea9c:	303ff426 	beq	r6,zero,ea70 <___vfprintf_internal_r+0x1a70>
    eaa0:	d9801a04 	addi	r6,sp,104
    eaa4:	800b883a 	mov	r5,r16
    eaa8:	9809883a 	mov	r4,r19
    eaac:	00132600 	call	13260 <__sprint_r>
    eab0:	1001411e 	bne	r2,zero,efb8 <___vfprintf_internal_r+0x1fb8>
    eab4:	d8c01c17 	ldw	r3,112(sp)
    eab8:	d8801b17 	ldw	r2,108(sp)
    eabc:	dd802704 	addi	r22,sp,156
    eac0:	003fec06 	br	ea74 <___vfprintf_internal_r+0x1a74>
    eac4:	d8801804 	addi	r2,sp,96
    eac8:	d8800315 	stw	r2,12(sp)
    eacc:	d9400917 	ldw	r5,36(sp)
    ead0:	d8801504 	addi	r2,sp,84
    ead4:	d8800215 	stw	r2,8(sp)
    ead8:	d8801404 	addi	r2,sp,80
    eadc:	da000015 	stw	r8,0(sp)
    eae0:	d8800115 	stw	r2,4(sp)
    eae4:	01c000c4 	movi	r7,3
    eae8:	a00d883a 	mov	r6,r20
    eaec:	9809883a 	mov	r4,r19
    eaf0:	db000815 	stw	r12,32(sp)
    eaf4:	da000715 	stw	r8,28(sp)
    eaf8:	000f4780 	call	f478 <_dtoa_r>
    eafc:	da000717 	ldw	r8,28(sp)
    eb00:	1023883a 	mov	r17,r2
    eb04:	db000817 	ldw	r12,32(sp)
    eb08:	1207883a 	add	r3,r2,r8
    eb0c:	88800007 	ldb	r2,0(r17)
    eb10:	10800c20 	cmpeqi	r2,r2,48
    eb14:	10004f1e 	bne	r2,zero,ec54 <___vfprintf_internal_r+0x1c54>
    eb18:	d8801417 	ldw	r2,80(sp)
    eb1c:	1893883a 	add	r9,r3,r2
    eb20:	d9000917 	ldw	r4,36(sp)
    eb24:	000d883a 	mov	r6,zero
    eb28:	000f883a 	mov	r7,zero
    eb2c:	a00b883a 	mov	r5,r20
    eb30:	da401115 	stw	r9,68(sp)
    eb34:	da000815 	stw	r8,32(sp)
    eb38:	db000715 	stw	r12,28(sp)
    eb3c:	000ae300 	call	ae30 <__eqdf2>
    eb40:	db000717 	ldw	r12,28(sp)
    eb44:	da000817 	ldw	r8,32(sp)
    eb48:	da401117 	ldw	r9,68(sp)
    eb4c:	1000811e 	bne	r2,zero,ed54 <___vfprintf_internal_r+0x1d54>
    eb50:	4805883a 	mov	r2,r9
    eb54:	d8c01417 	ldw	r3,80(sp)
    eb58:	1445c83a 	sub	r2,r2,r17
    eb5c:	ad4011d8 	cmpnei	r21,r21,71
    eb60:	d8c00715 	stw	r3,28(sp)
    eb64:	d8800815 	stw	r2,32(sp)
    eb68:	a83f3e26 	beq	r21,zero,e864 <___vfprintf_internal_r+0x1864>
    eb6c:	d8800f17 	ldw	r2,60(sp)
    eb70:	103f4126 	beq	r2,zero,e878 <___vfprintf_internal_r+0x1878>
    eb74:	d8c00717 	ldw	r3,28(sp)
    eb78:	6080004c 	andi	r2,r12,1
    eb7c:	1204b03a 	or	r2,r2,r8
    eb80:	00c1050e 	bge	zero,r3,ef98 <___vfprintf_internal_r+0x1f98>
    eb84:	1000f11e 	bne	r2,zero,ef4c <___vfprintf_internal_r+0x1f4c>
    eb88:	dd400717 	ldw	r21,28(sp)
    eb8c:	a829883a 	mov	r20,r21
    eb90:	d8800607 	ldb	r2,24(sp)
    eb94:	10007826 	beq	r2,zero,ed78 <___vfprintf_internal_r+0x1d78>
    eb98:	00800b44 	movi	r2,45
    eb9c:	d8801345 	stb	r2,77(sp)
    eba0:	d8800e17 	ldw	r2,56(sp)
    eba4:	0011883a 	mov	r8,zero
    eba8:	d8800615 	stw	r2,24(sp)
    ebac:	003b3306 	br	d87c <___vfprintf_internal_r+0x87c>
    ebb0:	044000b4 	movhi	r17,2
    ebb4:	8c6a5504 	addi	r17,r17,-22188
    ebb8:	003ab806 	br	d69c <___vfprintf_internal_r+0x69c>
    ebbc:	800f883a 	mov	r7,r16
    ebc0:	dc000e17 	ldw	r16,56(sp)
    ebc4:	10800044 	addi	r2,r2,1
    ebc8:	1d47883a 	add	r3,r3,r21
    ebcc:	d8801b15 	stw	r2,108(sp)
    ebd0:	b1c00015 	stw	r7,0(r22)
    ebd4:	b5400115 	stw	r21,4(r22)
    ebd8:	d8c01c15 	stw	r3,112(sp)
    ebdc:	10800208 	cmpgei	r2,r2,8
    ebe0:	10003a1e 	bne	r2,zero,eccc <___vfprintf_internal_r+0x1ccc>
    ebe4:	b5800204 	addi	r22,r22,8
    ebe8:	003db206 	br	e2b4 <___vfprintf_internal_r+0x12b4>
    ebec:	00800b44 	movi	r2,45
    ebf0:	d8801345 	stb	r2,77(sp)
    ebf4:	03400b44 	movi	r13,45
    ebf8:	003aa406 	br	d68c <___vfprintf_internal_r+0x68c>
    ebfc:	d9801a04 	addi	r6,sp,104
    ec00:	900b883a 	mov	r5,r18
    ec04:	9809883a 	mov	r4,r19
    ec08:	00132600 	call	13260 <__sprint_r>
    ec0c:	103a0b1e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    ec10:	d9401417 	ldw	r5,80(sp)
    ec14:	d8c01c17 	ldw	r3,112(sp)
    ec18:	dd802704 	addi	r22,sp,156
    ec1c:	003cd706 	br	df7c <___vfprintf_internal_r+0xf7c>
    ec20:	1520003c 	xorhi	r20,r2,32768
    ec24:	00800b44 	movi	r2,45
    ec28:	d8800605 	stb	r2,24(sp)
    ec2c:	003ee906 	br	e7d4 <___vfprintf_internal_r+0x17d4>
    ec30:	05400184 	movi	r21,6
    ec34:	003e5e06 	br	e5b0 <___vfprintf_internal_r+0x15b0>
    ec38:	d9801a04 	addi	r6,sp,104
    ec3c:	900b883a 	mov	r5,r18
    ec40:	9809883a 	mov	r4,r19
    ec44:	00132600 	call	13260 <__sprint_r>
    ec48:	0039fc06 	br	d43c <___vfprintf_internal_r+0x43c>
    ec4c:	d9401345 	stb	r5,77(sp)
    ec50:	0039aa06 	br	d2fc <___vfprintf_internal_r+0x2fc>
    ec54:	d9000917 	ldw	r4,36(sp)
    ec58:	000d883a 	mov	r6,zero
    ec5c:	000f883a 	mov	r7,zero
    ec60:	a00b883a 	mov	r5,r20
    ec64:	d8c01115 	stw	r3,68(sp)
    ec68:	da000815 	stw	r8,32(sp)
    ec6c:	db000715 	stw	r12,28(sp)
    ec70:	000ae300 	call	ae30 <__eqdf2>
    ec74:	db000717 	ldw	r12,28(sp)
    ec78:	da000817 	ldw	r8,32(sp)
    ec7c:	d8c01117 	ldw	r3,68(sp)
    ec80:	103fa526 	beq	r2,zero,eb18 <___vfprintf_internal_r+0x1b18>
    ec84:	00800044 	movi	r2,1
    ec88:	1205c83a 	sub	r2,r2,r8
    ec8c:	d8801415 	stw	r2,80(sp)
    ec90:	003fa206 	br	eb1c <___vfprintf_internal_r+0x1b1c>
    ec94:	403ec91e 	bne	r8,zero,e7bc <___vfprintf_internal_r+0x17bc>
    ec98:	02000044 	movi	r8,1
    ec9c:	003ec706 	br	e7bc <___vfprintf_internal_r+0x17bc>
    eca0:	d9801a04 	addi	r6,sp,104
    eca4:	900b883a 	mov	r5,r18
    eca8:	9809883a 	mov	r4,r19
    ecac:	00132600 	call	13260 <__sprint_r>
    ecb0:	1039e21e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    ecb4:	d9401417 	ldw	r5,80(sp)
    ecb8:	d8c01c17 	ldw	r3,112(sp)
    ecbc:	d8801b17 	ldw	r2,108(sp)
    ecc0:	dd802704 	addi	r22,sp,156
    ecc4:	283cbf0e 	bge	r5,zero,dfc4 <___vfprintf_internal_r+0xfc4>
    ecc8:	003f5f06 	br	ea48 <___vfprintf_internal_r+0x1a48>
    eccc:	d9801a04 	addi	r6,sp,104
    ecd0:	900b883a 	mov	r5,r18
    ecd4:	9809883a 	mov	r4,r19
    ecd8:	00132600 	call	13260 <__sprint_r>
    ecdc:	1039d71e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    ece0:	d8c01c17 	ldw	r3,112(sp)
    ece4:	dd802704 	addi	r22,sp,156
    ece8:	003d7206 	br	e2b4 <___vfprintf_internal_r+0x12b4>
    ecec:	db000417 	ldw	r12,16(sp)
    ecf0:	003ad506 	br	d848 <___vfprintf_internal_r+0x848>
    ecf4:	d8801804 	addi	r2,sp,96
    ecf8:	d8800315 	stw	r2,12(sp)
    ecfc:	d9400917 	ldw	r5,36(sp)
    ed00:	d8801504 	addi	r2,sp,84
    ed04:	40c00044 	addi	r3,r8,1
    ed08:	d8800215 	stw	r2,8(sp)
    ed0c:	d8801404 	addi	r2,sp,80
    ed10:	d8c00015 	stw	r3,0(sp)
    ed14:	d8800115 	stw	r2,4(sp)
    ed18:	01c00084 	movi	r7,2
    ed1c:	a00d883a 	mov	r6,r20
    ed20:	9809883a 	mov	r4,r19
    ed24:	db001115 	stw	r12,68(sp)
    ed28:	da000815 	stw	r8,32(sp)
    ed2c:	d8c00715 	stw	r3,28(sp)
    ed30:	000f4780 	call	f478 <_dtoa_r>
    ed34:	d8c00717 	ldw	r3,28(sp)
    ed38:	da000817 	ldw	r8,32(sp)
    ed3c:	db001117 	ldw	r12,68(sp)
    ed40:	1023883a 	mov	r17,r2
    ed44:	e08011d8 	cmpnei	r2,fp,71
    ed48:	103ebd26 	beq	r2,zero,e840 <___vfprintf_internal_r+0x1840>
    ed4c:	88d3883a 	add	r9,r17,r3
    ed50:	003f7306 	br	eb20 <___vfprintf_internal_r+0x1b20>
    ed54:	d8801817 	ldw	r2,96(sp)
    ed58:	127f7e2e 	bgeu	r2,r9,eb54 <___vfprintf_internal_r+0x1b54>
    ed5c:	01000c04 	movi	r4,48
    ed60:	10c00044 	addi	r3,r2,1
    ed64:	d8c01815 	stw	r3,96(sp)
    ed68:	11000005 	stb	r4,0(r2)
    ed6c:	d8801817 	ldw	r2,96(sp)
    ed70:	127ffb36 	bltu	r2,r9,ed60 <___vfprintf_internal_r+0x1d60>
    ed74:	003f7706 	br	eb54 <___vfprintf_internal_r+0x1b54>
    ed78:	d8800e17 	ldw	r2,56(sp)
    ed7c:	db401343 	ldbu	r13,77(sp)
    ed80:	0011883a 	mov	r8,zero
    ed84:	d8800615 	stw	r2,24(sp)
    ed88:	003ab806 	br	d86c <___vfprintf_internal_r+0x86c>
    ed8c:	d8800717 	ldw	r2,28(sp)
    ed90:	d8c00817 	ldw	r3,32(sp)
    ed94:	10c02b16 	blt	r2,r3,ee44 <___vfprintf_internal_r+0x1e44>
    ed98:	6300004c 	andi	r12,r12,1
    ed9c:	6000581e 	bne	r12,zero,ef00 <___vfprintf_internal_r+0x1f00>
    eda0:	1029883a 	mov	r20,r2
    eda4:	1000010e 	bge	r2,zero,edac <___vfprintf_internal_r+0x1dac>
    eda8:	0029883a 	mov	r20,zero
    edac:	dd400717 	ldw	r21,28(sp)
    edb0:	070019c4 	movi	fp,103
    edb4:	003f7606 	br	eb90 <___vfprintf_internal_r+0x1b90>
    edb8:	d9801a04 	addi	r6,sp,104
    edbc:	900b883a 	mov	r5,r18
    edc0:	9809883a 	mov	r4,r19
    edc4:	00132600 	call	13260 <__sprint_r>
    edc8:	10399c1e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    edcc:	dd401417 	ldw	r21,80(sp)
    edd0:	d8c01c17 	ldw	r3,112(sp)
    edd4:	dd802704 	addi	r22,sp,156
    edd8:	003d4506 	br	e2f0 <___vfprintf_internal_r+0x12f0>
    eddc:	d9801a04 	addi	r6,sp,104
    ede0:	900b883a 	mov	r5,r18
    ede4:	9809883a 	mov	r4,r19
    ede8:	00132600 	call	13260 <__sprint_r>
    edec:	1039931e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    edf0:	d8c01c17 	ldw	r3,112(sp)
    edf4:	dd802704 	addi	r22,sp,156
    edf8:	a83d2b0e 	bge	r21,zero,e2a8 <___vfprintf_internal_r+0x12a8>
    edfc:	003ddf06 	br	e57c <___vfprintf_internal_r+0x157c>
    ee00:	02000184 	movi	r8,6
    ee04:	003e6d06 	br	e7bc <___vfprintf_internal_r+0x17bc>
    ee08:	d9801a04 	addi	r6,sp,104
    ee0c:	900b883a 	mov	r5,r18
    ee10:	9809883a 	mov	r4,r19
    ee14:	00132600 	call	13260 <__sprint_r>
    ee18:	1039881e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    ee1c:	d8801417 	ldw	r2,80(sp)
    ee20:	d9000817 	ldw	r4,32(sp)
    ee24:	d8c01c17 	ldw	r3,112(sp)
    ee28:	dd802704 	addi	r22,sp,156
    ee2c:	2085c83a 	sub	r2,r4,r2
    ee30:	003d4306 	br	e340 <___vfprintf_internal_r+0x1340>
    ee34:	4029883a 	mov	r20,r8
    ee38:	d8c00615 	stw	r3,24(sp)
    ee3c:	402b883a 	mov	r21,r8
    ee40:	00393406 	br	d314 <___vfprintf_internal_r+0x314>
    ee44:	d8800817 	ldw	r2,32(sp)
    ee48:	d8c00b17 	ldw	r3,44(sp)
    ee4c:	10eb883a 	add	r21,r2,r3
    ee50:	d8800717 	ldw	r2,28(sp)
    ee54:	00800316 	blt	zero,r2,ee64 <___vfprintf_internal_r+0x1e64>
    ee58:	d8800717 	ldw	r2,28(sp)
    ee5c:	a8abc83a 	sub	r21,r21,r2
    ee60:	ad400044 	addi	r21,r21,1
    ee64:	a829883a 	mov	r20,r21
    ee68:	a8002a16 	blt	r21,zero,ef14 <___vfprintf_internal_r+0x1f14>
    ee6c:	070019c4 	movi	fp,103
    ee70:	003f4706 	br	eb90 <___vfprintf_internal_r+0x1b90>
    ee74:	d9401345 	stb	r5,77(sp)
    ee78:	003aa006 	br	d8fc <___vfprintf_internal_r+0x8fc>
    ee7c:	d9401345 	stb	r5,77(sp)
    ee80:	003b3406 	br	db54 <___vfprintf_internal_r+0xb54>
    ee84:	d9401345 	stb	r5,77(sp)
    ee88:	0039d506 	br	d5e0 <___vfprintf_internal_r+0x5e0>
    ee8c:	d9401345 	stb	r5,77(sp)
    ee90:	003a5806 	br	d7f4 <___vfprintf_internal_r+0x7f4>
    ee94:	d9401345 	stb	r5,77(sp)
    ee98:	003af306 	br	da68 <___vfprintf_internal_r+0xa68>
    ee9c:	d9401345 	stb	r5,77(sp)
    eea0:	003b4c06 	br	dbd4 <___vfprintf_internal_r+0xbd4>
    eea4:	900f883a 	mov	r7,r18
    eea8:	8025883a 	mov	r18,r16
    eeac:	dc000717 	ldw	r16,28(sp)
    eeb0:	10800044 	addi	r2,r2,1
    eeb4:	1f07883a 	add	r3,r3,fp
    eeb8:	b1c00015 	stw	r7,0(r22)
    eebc:	b7000115 	stw	fp,4(r22)
    eec0:	d8c01c15 	stw	r3,112(sp)
    eec4:	d8801b15 	stw	r2,108(sp)
    eec8:	11000208 	cmpgei	r4,r2,8
    eecc:	203c3c26 	beq	r4,zero,dfc0 <___vfprintf_internal_r+0xfc0>
    eed0:	d9801a04 	addi	r6,sp,104
    eed4:	900b883a 	mov	r5,r18
    eed8:	9809883a 	mov	r4,r19
    eedc:	00132600 	call	13260 <__sprint_r>
    eee0:	1039561e 	bne	r2,zero,d43c <___vfprintf_internal_r+0x43c>
    eee4:	d8c01c17 	ldw	r3,112(sp)
    eee8:	d8801b17 	ldw	r2,108(sp)
    eeec:	dd802704 	addi	r22,sp,156
    eef0:	003c3406 	br	dfc4 <___vfprintf_internal_r+0xfc4>
    eef4:	00bfffc4 	movi	r2,-1
    eef8:	d8800515 	stw	r2,20(sp)
    eefc:	00395206 	br	d448 <___vfprintf_internal_r+0x448>
    ef00:	d8800717 	ldw	r2,28(sp)
    ef04:	d8c00b17 	ldw	r3,44(sp)
    ef08:	10eb883a 	add	r21,r2,r3
    ef0c:	a829883a 	mov	r20,r21
    ef10:	a83fd60e 	bge	r21,zero,ee6c <___vfprintf_internal_r+0x1e6c>
    ef14:	0029883a 	mov	r20,zero
    ef18:	003fd406 	br	ee6c <___vfprintf_internal_r+0x1e6c>
    ef1c:	00800c04 	movi	r2,48
    ef20:	ad400c04 	addi	r21,r21,48
    ef24:	d88016c5 	stb	r2,91(sp)
    ef28:	00800104 	movi	r2,4
    ef2c:	dd401705 	stb	r21,92(sp)
    ef30:	d8801015 	stw	r2,64(sp)
    ef34:	003e8606 	br	e950 <___vfprintf_internal_r+0x1950>
    ef38:	05400044 	movi	r21,1
    ef3c:	a8abc83a 	sub	r21,r21,r2
    ef40:	00800b44 	movi	r2,45
    ef44:	d8801685 	stb	r2,90(sp)
    ef48:	003e5206 	br	e894 <___vfprintf_internal_r+0x1894>
    ef4c:	d8800b17 	ldw	r2,44(sp)
    ef50:	18ab883a 	add	r21,r3,r2
    ef54:	aa2b883a 	add	r21,r21,r8
    ef58:	a829883a 	mov	r20,r21
    ef5c:	a83f0c0e 	bge	r21,zero,eb90 <___vfprintf_internal_r+0x1b90>
    ef60:	0029883a 	mov	r20,zero
    ef64:	003f0a06 	br	eb90 <___vfprintf_internal_r+0x1b90>
    ef68:	6080004c 	andi	r2,r12,1
    ef6c:	d8800715 	stw	r2,28(sp)
    ef70:	103e7c1e 	bne	r2,zero,e964 <___vfprintf_internal_r+0x1964>
    ef74:	003ff806 	br	ef58 <___vfprintf_internal_r+0x1f58>
    ef78:	d8800a17 	ldw	r2,40(sp)
    ef7c:	10001316 	blt	r2,zero,efcc <___vfprintf_internal_r+0x1fcc>
    ef80:	db401343 	ldbu	r13,77(sp)
    ef84:	e0801210 	cmplti	r2,fp,72
    ef88:	10000d1e 	bne	r2,zero,efc0 <___vfprintf_internal_r+0x1fc0>
    ef8c:	044000b4 	movhi	r17,2
    ef90:	8c6a5804 	addi	r17,r17,-22176
    ef94:	0039c106 	br	d69c <___vfprintf_internal_r+0x69c>
    ef98:	1000031e 	bne	r2,zero,efa8 <___vfprintf_internal_r+0x1fa8>
    ef9c:	05000044 	movi	r20,1
    efa0:	05400044 	movi	r21,1
    efa4:	003efa06 	br	eb90 <___vfprintf_internal_r+0x1b90>
    efa8:	d8800b17 	ldw	r2,44(sp)
    efac:	15400044 	addi	r21,r2,1
    efb0:	aa2b883a 	add	r21,r21,r8
    efb4:	003fe806 	br	ef58 <___vfprintf_internal_r+0x1f58>
    efb8:	8025883a 	mov	r18,r16
    efbc:	00391f06 	br	d43c <___vfprintf_internal_r+0x43c>
    efc0:	044000b4 	movhi	r17,2
    efc4:	8c6a5704 	addi	r17,r17,-22180
    efc8:	0039b406 	br	d69c <___vfprintf_internal_r+0x69c>
    efcc:	00800b44 	movi	r2,45
    efd0:	d8801345 	stb	r2,77(sp)
    efd4:	03400b44 	movi	r13,45
    efd8:	003fea06 	br	ef84 <___vfprintf_internal_r+0x1f84>
    efdc:	d8c00617 	ldw	r3,24(sp)
    efe0:	1a000017 	ldw	r8,0(r3)
    efe4:	18c00104 	addi	r3,r3,4
    efe8:	4000010e 	bge	r8,zero,eff0 <___vfprintf_internal_r+0x1ff0>
    efec:	023fffc4 	movi	r8,-1
    eff0:	bf000043 	ldbu	fp,1(r23)
    eff4:	d8c00615 	stw	r3,24(sp)
    eff8:	102f883a 	mov	r23,r2
    effc:	e2c03fcc 	andi	r11,fp,255
    f000:	5ac0201c 	xori	r11,r11,128
    f004:	5affe004 	addi	r11,r11,-128
    f008:	00384906 	br	d130 <___vfprintf_internal_r+0x130>
    f00c:	00800084 	movi	r2,2
    f010:	d8801015 	stw	r2,64(sp)
    f014:	003e4e06 	br	e950 <___vfprintf_internal_r+0x1950>

0000f018 <__vfprintf_internal>:
    f018:	00c000b4 	movhi	r3,2
    f01c:	2005883a 	mov	r2,r4
    f020:	1932d417 	ldw	r4,-13488(r3)
    f024:	300f883a 	mov	r7,r6
    f028:	280d883a 	mov	r6,r5
    f02c:	100b883a 	mov	r5,r2
    f030:	000d0001 	jmpi	d000 <___vfprintf_internal_r>

0000f034 <__sbprintf>:
    f034:	2880030b 	ldhu	r2,12(r5)
    f038:	2b001917 	ldw	r12,100(r5)
    f03c:	2ac0038b 	ldhu	r11,14(r5)
    f040:	2a800717 	ldw	r10,28(r5)
    f044:	2a400917 	ldw	r9,36(r5)
    f048:	defee204 	addi	sp,sp,-1144
    f04c:	da001a04 	addi	r8,sp,104
    f050:	00c10004 	movi	r3,1024
    f054:	dc011a15 	stw	r16,1128(sp)
    f058:	10bfff4c 	andi	r2,r2,65533
    f05c:	2821883a 	mov	r16,r5
    f060:	d80b883a 	mov	r5,sp
    f064:	dc811c15 	stw	r18,1136(sp)
    f068:	dc411b15 	stw	r17,1132(sp)
    f06c:	dfc11d15 	stw	ra,1140(sp)
    f070:	2025883a 	mov	r18,r4
    f074:	d880030d 	sth	r2,12(sp)
    f078:	db001915 	stw	r12,100(sp)
    f07c:	dac0038d 	sth	r11,14(sp)
    f080:	da800715 	stw	r10,28(sp)
    f084:	da400915 	stw	r9,36(sp)
    f088:	da000015 	stw	r8,0(sp)
    f08c:	da000415 	stw	r8,16(sp)
    f090:	d8c00215 	stw	r3,8(sp)
    f094:	d8c00515 	stw	r3,20(sp)
    f098:	d8000615 	stw	zero,24(sp)
    f09c:	000d0000 	call	d000 <___vfprintf_internal_r>
    f0a0:	1023883a 	mov	r17,r2
    f0a4:	10000d0e 	bge	r2,zero,f0dc <__sbprintf+0xa8>
    f0a8:	d880030b 	ldhu	r2,12(sp)
    f0ac:	1080100c 	andi	r2,r2,64
    f0b0:	10000326 	beq	r2,zero,f0c0 <__sbprintf+0x8c>
    f0b4:	8080030b 	ldhu	r2,12(r16)
    f0b8:	10801014 	ori	r2,r2,64
    f0bc:	8080030d 	sth	r2,12(r16)
    f0c0:	8805883a 	mov	r2,r17
    f0c4:	dfc11d17 	ldw	ra,1140(sp)
    f0c8:	dc811c17 	ldw	r18,1136(sp)
    f0cc:	dc411b17 	ldw	r17,1132(sp)
    f0d0:	dc011a17 	ldw	r16,1128(sp)
    f0d4:	dec11e04 	addi	sp,sp,1144
    f0d8:	f800283a 	ret
    f0dc:	d80b883a 	mov	r5,sp
    f0e0:	9009883a 	mov	r4,r18
    f0e4:	0010de80 	call	10de8 <_fflush_r>
    f0e8:	103fef26 	beq	r2,zero,f0a8 <__sbprintf+0x74>
    f0ec:	047fffc4 	movi	r17,-1
    f0f0:	003fed06 	br	f0a8 <__sbprintf+0x74>

0000f0f4 <__swsetup_r>:
    f0f4:	008000b4 	movhi	r2,2
    f0f8:	10b2d417 	ldw	r2,-13488(r2)
    f0fc:	defffd04 	addi	sp,sp,-12
    f100:	dc400115 	stw	r17,4(sp)
    f104:	dc000015 	stw	r16,0(sp)
    f108:	dfc00215 	stw	ra,8(sp)
    f10c:	2023883a 	mov	r17,r4
    f110:	2821883a 	mov	r16,r5
    f114:	10000226 	beq	r2,zero,f120 <__swsetup_r+0x2c>
    f118:	10c00e17 	ldw	r3,56(r2)
    f11c:	18001f26 	beq	r3,zero,f19c <__swsetup_r+0xa8>
    f120:	8180030b 	ldhu	r6,12(r16)
    f124:	30c0020c 	andi	r3,r6,8
    f128:	3005883a 	mov	r2,r6
    f12c:	18002126 	beq	r3,zero,f1b4 <__swsetup_r+0xc0>
    f130:	80c00417 	ldw	r3,16(r16)
    f134:	18002826 	beq	r3,zero,f1d8 <__swsetup_r+0xe4>
    f138:	1100004c 	andi	r4,r2,1
    f13c:	20000b1e 	bne	r4,zero,f16c <__swsetup_r+0x78>
    f140:	1100008c 	andi	r4,r2,2
    f144:	20002e1e 	bne	r4,zero,f200 <__swsetup_r+0x10c>
    f148:	81000517 	ldw	r4,20(r16)
    f14c:	81000215 	stw	r4,8(r16)
    f150:	18000b26 	beq	r3,zero,f180 <__swsetup_r+0x8c>
    f154:	0005883a 	mov	r2,zero
    f158:	dfc00217 	ldw	ra,8(sp)
    f15c:	dc400117 	ldw	r17,4(sp)
    f160:	dc000017 	ldw	r16,0(sp)
    f164:	dec00304 	addi	sp,sp,12
    f168:	f800283a 	ret
    f16c:	81000517 	ldw	r4,20(r16)
    f170:	80000215 	stw	zero,8(r16)
    f174:	0109c83a 	sub	r4,zero,r4
    f178:	81000615 	stw	r4,24(r16)
    f17c:	183ff51e 	bne	r3,zero,f154 <__swsetup_r+0x60>
    f180:	10c0200c 	andi	r3,r2,128
    f184:	0005883a 	mov	r2,zero
    f188:	183ff326 	beq	r3,zero,f158 <__swsetup_r+0x64>
    f18c:	31801014 	ori	r6,r6,64
    f190:	8180030d 	sth	r6,12(r16)
    f194:	00bfffc4 	movi	r2,-1
    f198:	003fef06 	br	f158 <__swsetup_r+0x64>
    f19c:	1009883a 	mov	r4,r2
    f1a0:	00112300 	call	11230 <__sinit>
    f1a4:	8180030b 	ldhu	r6,12(r16)
    f1a8:	30c0020c 	andi	r3,r6,8
    f1ac:	3005883a 	mov	r2,r6
    f1b0:	183fdf1e 	bne	r3,zero,f130 <__swsetup_r+0x3c>
    f1b4:	3080040c 	andi	r2,r6,16
    f1b8:	10002126 	beq	r2,zero,f240 <__swsetup_r+0x14c>
    f1bc:	3080010c 	andi	r2,r6,4
    f1c0:	1000111e 	bne	r2,zero,f208 <__swsetup_r+0x114>
    f1c4:	80c00417 	ldw	r3,16(r16)
    f1c8:	30800214 	ori	r2,r6,8
    f1cc:	8080030d 	sth	r2,12(r16)
    f1d0:	100d883a 	mov	r6,r2
    f1d4:	183fd81e 	bne	r3,zero,f138 <__swsetup_r+0x44>
    f1d8:	1100a00c 	andi	r4,r2,640
    f1dc:	21008020 	cmpeqi	r4,r4,512
    f1e0:	203fd51e 	bne	r4,zero,f138 <__swsetup_r+0x44>
    f1e4:	800b883a 	mov	r5,r16
    f1e8:	8809883a 	mov	r4,r17
    f1ec:	00117f00 	call	117f0 <__smakebuf_r>
    f1f0:	8180030b 	ldhu	r6,12(r16)
    f1f4:	80c00417 	ldw	r3,16(r16)
    f1f8:	3005883a 	mov	r2,r6
    f1fc:	003fce06 	br	f138 <__swsetup_r+0x44>
    f200:	0009883a 	mov	r4,zero
    f204:	003fd106 	br	f14c <__swsetup_r+0x58>
    f208:	81400c17 	ldw	r5,48(r16)
    f20c:	28000626 	beq	r5,zero,f228 <__swsetup_r+0x134>
    f210:	80801004 	addi	r2,r16,64
    f214:	28800326 	beq	r5,r2,f224 <__swsetup_r+0x130>
    f218:	8809883a 	mov	r4,r17
    f21c:	00113940 	call	11394 <_free_r>
    f220:	8180030b 	ldhu	r6,12(r16)
    f224:	80000c15 	stw	zero,48(r16)
    f228:	80c00417 	ldw	r3,16(r16)
    f22c:	00bff6c4 	movi	r2,-37
    f230:	118c703a 	and	r6,r2,r6
    f234:	80000115 	stw	zero,4(r16)
    f238:	80c00015 	stw	r3,0(r16)
    f23c:	003fe206 	br	f1c8 <__swsetup_r+0xd4>
    f240:	00800244 	movi	r2,9
    f244:	88800015 	stw	r2,0(r17)
    f248:	31801014 	ori	r6,r6,64
    f24c:	8180030d 	sth	r6,12(r16)
    f250:	00bfffc4 	movi	r2,-1
    f254:	003fc006 	br	f158 <__swsetup_r+0x64>

0000f258 <quorem>:
    f258:	defff204 	addi	sp,sp,-56
    f25c:	dc400515 	stw	r17,20(sp)
    f260:	20800417 	ldw	r2,16(r4)
    f264:	2c400417 	ldw	r17,16(r5)
    f268:	dfc00d15 	stw	ra,52(sp)
    f26c:	df000c15 	stw	fp,48(sp)
    f270:	ddc00b15 	stw	r23,44(sp)
    f274:	dd800a15 	stw	r22,40(sp)
    f278:	dd400915 	stw	r21,36(sp)
    f27c:	dd000815 	stw	r20,32(sp)
    f280:	dcc00715 	stw	r19,28(sp)
    f284:	dc800615 	stw	r18,24(sp)
    f288:	dc000415 	stw	r16,16(sp)
    f28c:	d9000115 	stw	r4,4(sp)
    f290:	d9400215 	stw	r5,8(sp)
    f294:	14407616 	blt	r2,r17,f470 <quorem+0x218>
    f298:	8c7fffc4 	addi	r17,r17,-1
    f29c:	882a90ba 	slli	r21,r17,2
    f2a0:	2f000504 	addi	fp,r5,20
    f2a4:	25800504 	addi	r22,r4,20
    f2a8:	e565883a 	add	r18,fp,r21
    f2ac:	b545883a 	add	r2,r22,r21
    f2b0:	95c00017 	ldw	r23,0(r18)
    f2b4:	15000017 	ldw	r20,0(r2)
    f2b8:	dd800015 	stw	r22,0(sp)
    f2bc:	bdc00044 	addi	r23,r23,1
    f2c0:	b80b883a 	mov	r5,r23
    f2c4:	a009883a 	mov	r4,r20
    f2c8:	d8800315 	stw	r2,12(sp)
    f2cc:	0008a8c0 	call	8a8c <__udivsi3>
    f2d0:	1021883a 	mov	r16,r2
    f2d4:	a5c02f36 	bltu	r20,r23,f394 <quorem+0x13c>
    f2d8:	e029883a 	mov	r20,fp
    f2dc:	002b883a 	mov	r21,zero
    f2e0:	002f883a 	mov	r23,zero
    f2e4:	a4c00017 	ldw	r19,0(r20)
    f2e8:	800b883a 	mov	r5,r16
    f2ec:	b5800104 	addi	r22,r22,4
    f2f0:	993fffcc 	andi	r4,r19,65535
    f2f4:	0008b4c0 	call	8b4c <__mulsi3>
    f2f8:	9808d43a 	srli	r4,r19,16
    f2fc:	800b883a 	mov	r5,r16
    f300:	156b883a 	add	r21,r2,r21
    f304:	0008b4c0 	call	8b4c <__mulsi3>
    f308:	b0ffff17 	ldw	r3,-4(r22)
    f30c:	a80ad43a 	srli	r5,r21,16
    f310:	a93fffcc 	andi	r4,r21,65535
    f314:	19bfffcc 	andi	r6,r3,65535
    f318:	b909c83a 	sub	r4,r23,r4
    f31c:	2189883a 	add	r4,r4,r6
    f320:	1806d43a 	srli	r3,r3,16
    f324:	1145883a 	add	r2,r2,r5
    f328:	200bd43a 	srai	r5,r4,16
    f32c:	11bfffcc 	andi	r6,r2,65535
    f330:	1987c83a 	sub	r3,r3,r6
    f334:	1947883a 	add	r3,r3,r5
    f338:	180a943a 	slli	r5,r3,16
    f33c:	213fffcc 	andi	r4,r4,65535
    f340:	a5000104 	addi	r20,r20,4
    f344:	2908b03a 	or	r4,r5,r4
    f348:	b13fff15 	stw	r4,-4(r22)
    f34c:	102ad43a 	srli	r21,r2,16
    f350:	182fd43a 	srai	r23,r3,16
    f354:	953fe32e 	bgeu	r18,r20,f2e4 <quorem+0x8c>
    f358:	d8c00317 	ldw	r3,12(sp)
    f35c:	18800017 	ldw	r2,0(r3)
    f360:	10000c1e 	bne	r2,zero,f394 <quorem+0x13c>
    f364:	d8800017 	ldw	r2,0(sp)
    f368:	1d7fff04 	addi	r21,r3,-4
    f36c:	15400436 	bltu	r2,r21,f380 <quorem+0x128>
    f370:	00000606 	br	f38c <quorem+0x134>
    f374:	d8800017 	ldw	r2,0(sp)
    f378:	8c7fffc4 	addi	r17,r17,-1
    f37c:	1540032e 	bgeu	r2,r21,f38c <quorem+0x134>
    f380:	a8800017 	ldw	r2,0(r21)
    f384:	ad7fff04 	addi	r21,r21,-4
    f388:	103ffa26 	beq	r2,zero,f374 <quorem+0x11c>
    f38c:	d8800117 	ldw	r2,4(sp)
    f390:	14400415 	stw	r17,16(r2)
    f394:	d9400217 	ldw	r5,8(sp)
    f398:	d9000117 	ldw	r4,4(sp)
    f39c:	00126ac0 	call	126ac <__mcmp>
    f3a0:	10002616 	blt	r2,zero,f43c <quorem+0x1e4>
    f3a4:	d9400017 	ldw	r5,0(sp)
    f3a8:	84000044 	addi	r16,r16,1
    f3ac:	0007883a 	mov	r3,zero
    f3b0:	e1000017 	ldw	r4,0(fp)
    f3b4:	29800017 	ldw	r6,0(r5)
    f3b8:	29400104 	addi	r5,r5,4
    f3bc:	20bfffcc 	andi	r2,r4,65535
    f3c0:	1887c83a 	sub	r3,r3,r2
    f3c4:	30bfffcc 	andi	r2,r6,65535
    f3c8:	1885883a 	add	r2,r3,r2
    f3cc:	2008d43a 	srli	r4,r4,16
    f3d0:	3006d43a 	srli	r3,r6,16
    f3d4:	100fd43a 	srai	r7,r2,16
    f3d8:	11bfffcc 	andi	r6,r2,65535
    f3dc:	1907c83a 	sub	r3,r3,r4
    f3e0:	19c7883a 	add	r3,r3,r7
    f3e4:	1804943a 	slli	r2,r3,16
    f3e8:	e7000104 	addi	fp,fp,4
    f3ec:	1807d43a 	srai	r3,r3,16
    f3f0:	1184b03a 	or	r2,r2,r6
    f3f4:	28bfff15 	stw	r2,-4(r5)
    f3f8:	973fed2e 	bgeu	r18,fp,f3b0 <quorem+0x158>
    f3fc:	880490ba 	slli	r2,r17,2
    f400:	d9000017 	ldw	r4,0(sp)
    f404:	2085883a 	add	r2,r4,r2
    f408:	10c00017 	ldw	r3,0(r2)
    f40c:	18000b1e 	bne	r3,zero,f43c <quorem+0x1e4>
    f410:	10bfff04 	addi	r2,r2,-4
    f414:	20800436 	bltu	r4,r2,f428 <quorem+0x1d0>
    f418:	00000606 	br	f434 <quorem+0x1dc>
    f41c:	d8c00017 	ldw	r3,0(sp)
    f420:	8c7fffc4 	addi	r17,r17,-1
    f424:	1880032e 	bgeu	r3,r2,f434 <quorem+0x1dc>
    f428:	10c00017 	ldw	r3,0(r2)
    f42c:	10bfff04 	addi	r2,r2,-4
    f430:	183ffa26 	beq	r3,zero,f41c <quorem+0x1c4>
    f434:	d8800117 	ldw	r2,4(sp)
    f438:	14400415 	stw	r17,16(r2)
    f43c:	8005883a 	mov	r2,r16
    f440:	dfc00d17 	ldw	ra,52(sp)
    f444:	df000c17 	ldw	fp,48(sp)
    f448:	ddc00b17 	ldw	r23,44(sp)
    f44c:	dd800a17 	ldw	r22,40(sp)
    f450:	dd400917 	ldw	r21,36(sp)
    f454:	dd000817 	ldw	r20,32(sp)
    f458:	dcc00717 	ldw	r19,28(sp)
    f45c:	dc800617 	ldw	r18,24(sp)
    f460:	dc400517 	ldw	r17,20(sp)
    f464:	dc000417 	ldw	r16,16(sp)
    f468:	dec00e04 	addi	sp,sp,56
    f46c:	f800283a 	ret
    f470:	0005883a 	mov	r2,zero
    f474:	003ff206 	br	f440 <quorem+0x1e8>

0000f478 <_dtoa_r>:
    f478:	20801017 	ldw	r2,64(r4)
    f47c:	deffe304 	addi	sp,sp,-116
    f480:	df001b15 	stw	fp,108(sp)
    f484:	dcc01615 	stw	r19,88(sp)
    f488:	dc801515 	stw	r18,84(sp)
    f48c:	dc401415 	stw	r17,80(sp)
    f490:	dc001315 	stw	r16,76(sp)
    f494:	dfc01c15 	stw	ra,112(sp)
    f498:	ddc01a15 	stw	r23,104(sp)
    f49c:	dd801915 	stw	r22,100(sp)
    f4a0:	dd401815 	stw	r21,96(sp)
    f4a4:	dd001715 	stw	r20,92(sp)
    f4a8:	d9c00215 	stw	r7,8(sp)
    f4ac:	dc001f17 	ldw	r16,124(sp)
    f4b0:	2039883a 	mov	fp,r4
    f4b4:	3025883a 	mov	r18,r6
    f4b8:	2827883a 	mov	r19,r5
    f4bc:	3023883a 	mov	r17,r6
    f4c0:	10000826 	beq	r2,zero,f4e4 <_dtoa_r+0x6c>
    f4c4:	21801117 	ldw	r6,68(r4)
    f4c8:	00c00044 	movi	r3,1
    f4cc:	100b883a 	mov	r5,r2
    f4d0:	1986983a 	sll	r3,r3,r6
    f4d4:	11800115 	stw	r6,4(r2)
    f4d8:	10c00215 	stw	r3,8(r2)
    f4dc:	0011c9c0 	call	11c9c <_Bfree>
    f4e0:	e0001015 	stw	zero,64(fp)
    f4e4:	90018916 	blt	r18,zero,fb0c <_dtoa_r+0x694>
    f4e8:	80000015 	stw	zero,0(r16)
    f4ec:	909ffc2c 	andhi	r2,r18,32752
    f4f0:	00dffc34 	movhi	r3,32752
    f4f4:	10c18e26 	beq	r2,r3,fb30 <_dtoa_r+0x6b8>
    f4f8:	000d883a 	mov	r6,zero
    f4fc:	000f883a 	mov	r7,zero
    f500:	9809883a 	mov	r4,r19
    f504:	880b883a 	mov	r5,r17
    f508:	000ae300 	call	ae30 <__eqdf2>
    f50c:	1000191e 	bne	r2,zero,f574 <_dtoa_r+0xfc>
    f510:	d8c01e17 	ldw	r3,120(sp)
    f514:	00800044 	movi	r2,1
    f518:	18800015 	stw	r2,0(r3)
    f51c:	d8802017 	ldw	r2,128(sp)
    f520:	1002ff26 	beq	r2,zero,10120 <_dtoa_r+0xca8>
    f524:	d9002017 	ldw	r4,128(sp)
    f528:	008000b4 	movhi	r2,2
    f52c:	10aa6544 	addi	r2,r2,-22123
    f530:	00c000b4 	movhi	r3,2
    f534:	20800015 	stw	r2,0(r4)
    f538:	18aa6504 	addi	r2,r3,-22124
    f53c:	d8800115 	stw	r2,4(sp)
    f540:	d8800117 	ldw	r2,4(sp)
    f544:	dfc01c17 	ldw	ra,112(sp)
    f548:	df001b17 	ldw	fp,108(sp)
    f54c:	ddc01a17 	ldw	r23,104(sp)
    f550:	dd801917 	ldw	r22,100(sp)
    f554:	dd401817 	ldw	r21,96(sp)
    f558:	dd001717 	ldw	r20,92(sp)
    f55c:	dcc01617 	ldw	r19,88(sp)
    f560:	dc801517 	ldw	r18,84(sp)
    f564:	dc401417 	ldw	r17,80(sp)
    f568:	dc001317 	ldw	r16,76(sp)
    f56c:	dec01d04 	addi	sp,sp,116
    f570:	f800283a 	ret
    f574:	d8801104 	addi	r2,sp,68
    f578:	9020d53a 	srli	r16,r18,20
    f57c:	d8800015 	stw	r2,0(sp)
    f580:	d9c01204 	addi	r7,sp,72
    f584:	980b883a 	mov	r5,r19
    f588:	880d883a 	mov	r6,r17
    f58c:	e009883a 	mov	r4,fp
    f590:	0012a940 	call	12a94 <__d2b>
    f594:	102f883a 	mov	r23,r2
    f598:	8001781e 	bne	r16,zero,fb7c <_dtoa_r+0x704>
    f59c:	dd001117 	ldw	r20,68(sp)
    f5a0:	dc001217 	ldw	r16,72(sp)
    f5a4:	a421883a 	add	r16,r20,r16
    f5a8:	80810c84 	addi	r2,r16,1074
    f5ac:	10c00850 	cmplti	r3,r2,33
    f5b0:	1802eb1e 	bne	r3,zero,10160 <_dtoa_r+0xce8>
    f5b4:	01001004 	movi	r4,64
    f5b8:	2085c83a 	sub	r2,r4,r2
    f5bc:	81010484 	addi	r4,r16,1042
    f5c0:	90a4983a 	sll	r18,r18,r2
    f5c4:	9908d83a 	srl	r4,r19,r4
    f5c8:	9108b03a 	or	r4,r18,r4
    f5cc:	000c2c40 	call	c2c4 <__floatunsidf>
    f5d0:	1009883a 	mov	r4,r2
    f5d4:	017f8434 	movhi	r5,65040
    f5d8:	00800044 	movi	r2,1
    f5dc:	194b883a 	add	r5,r3,r5
    f5e0:	843fffc4 	addi	r16,r16,-1
    f5e4:	d8800915 	stw	r2,36(sp)
    f5e8:	000d883a 	mov	r6,zero
    f5ec:	01cffe34 	movhi	r7,16376
    f5f0:	000b82c0 	call	b82c <__subdf3>
    f5f4:	0198dbf4 	movhi	r6,25455
    f5f8:	01cff4f4 	movhi	r7,16339
    f5fc:	3190d844 	addi	r6,r6,17249
    f600:	39e1e9c4 	addi	r7,r7,-30809
    f604:	1009883a 	mov	r4,r2
    f608:	180b883a 	mov	r5,r3
    f60c:	000b0800 	call	b080 <__muldf3>
    f610:	01a2d874 	movhi	r6,35681
    f614:	01cff1f4 	movhi	r7,16327
    f618:	31b22cc4 	addi	r6,r6,-14157
    f61c:	39e28a04 	addi	r7,r7,-30168
    f620:	180b883a 	mov	r5,r3
    f624:	1009883a 	mov	r4,r2
    f628:	0009c2c0 	call	9c2c <__adddf3>
    f62c:	8009883a 	mov	r4,r16
    f630:	102b883a 	mov	r21,r2
    f634:	1825883a 	mov	r18,r3
    f638:	000c20c0 	call	c20c <__floatsidf>
    f63c:	019427f4 	movhi	r6,20639
    f640:	01cff4f4 	movhi	r7,16339
    f644:	319e7ec4 	addi	r6,r6,31227
    f648:	39d104c4 	addi	r7,r7,17427
    f64c:	1009883a 	mov	r4,r2
    f650:	180b883a 	mov	r5,r3
    f654:	000b0800 	call	b080 <__muldf3>
    f658:	100d883a 	mov	r6,r2
    f65c:	180f883a 	mov	r7,r3
    f660:	a809883a 	mov	r4,r21
    f664:	900b883a 	mov	r5,r18
    f668:	0009c2c0 	call	9c2c <__adddf3>
    f66c:	1009883a 	mov	r4,r2
    f670:	180b883a 	mov	r5,r3
    f674:	1025883a 	mov	r18,r2
    f678:	182d883a 	mov	r22,r3
    f67c:	000c18c0 	call	c18c <__fixdfsi>
    f680:	000d883a 	mov	r6,zero
    f684:	000f883a 	mov	r7,zero
    f688:	9009883a 	mov	r4,r18
    f68c:	b00b883a 	mov	r5,r22
    f690:	102b883a 	mov	r21,r2
    f694:	000af980 	call	af98 <__ledf2>
    f698:	10029716 	blt	r2,zero,100f8 <_dtoa_r+0xc80>
    f69c:	a421c83a 	sub	r16,r20,r16
    f6a0:	a88005e8 	cmpgeui	r2,r21,23
    f6a4:	85bfffc4 	addi	r22,r16,-1
    f6a8:	10028b1e 	bne	r2,zero,100d8 <_dtoa_r+0xc60>
    f6ac:	a80690fa 	slli	r3,r21,3
    f6b0:	008000b4 	movhi	r2,2
    f6b4:	10aaae04 	addi	r2,r2,-21832
    f6b8:	10c5883a 	add	r2,r2,r3
    f6bc:	11800017 	ldw	r6,0(r2)
    f6c0:	11c00117 	ldw	r7,4(r2)
    f6c4:	9809883a 	mov	r4,r19
    f6c8:	880b883a 	mov	r5,r17
    f6cc:	000af980 	call	af98 <__ledf2>
    f6d0:	10025f0e 	bge	r2,zero,10050 <_dtoa_r+0xbd8>
    f6d4:	d8000815 	stw	zero,32(sp)
    f6d8:	ad7fffc4 	addi	r21,r21,-1
    f6dc:	b0028116 	blt	r22,zero,100e4 <_dtoa_r+0xc6c>
    f6e0:	d8000415 	stw	zero,16(sp)
    f6e4:	a8025d0e 	bge	r21,zero,1005c <_dtoa_r+0xbe4>
    f6e8:	d8800417 	ldw	r2,16(sp)
    f6ec:	d8c00217 	ldw	r3,8(sp)
    f6f0:	dd400615 	stw	r21,24(sp)
    f6f4:	1545c83a 	sub	r2,r2,r21
    f6f8:	d8800415 	stw	r2,16(sp)
    f6fc:	0545c83a 	sub	r2,zero,r21
    f700:	d8800715 	stw	r2,28(sp)
    f704:	188002a8 	cmpgeui	r2,r3,10
    f708:	002b883a 	mov	r21,zero
    f70c:	1002591e 	bne	r2,zero,10074 <_dtoa_r+0xbfc>
    f710:	18800190 	cmplti	r2,r3,6
    f714:	1002961e 	bne	r2,zero,10170 <_dtoa_r+0xcf8>
    f718:	18bfff04 	addi	r2,r3,-4
    f71c:	d8800215 	stw	r2,8(sp)
    f720:	0021883a 	mov	r16,zero
    f724:	d8c00217 	ldw	r3,8(sp)
    f728:	18800120 	cmpeqi	r2,r3,4
    f72c:	10036d1e 	bne	r2,zero,104e4 <_dtoa_r+0x106c>
    f730:	18800160 	cmpeqi	r2,r3,5
    f734:	1003291e 	bne	r2,zero,103dc <_dtoa_r+0xf64>
    f738:	188000a0 	cmpeqi	r2,r3,2
    f73c:	10025926 	beq	r2,zero,100a4 <_dtoa_r+0xc2c>
    f740:	d8000515 	stw	zero,20(sp)
    f744:	d8801d17 	ldw	r2,116(sp)
    f748:	0083340e 	bge	zero,r2,1041c <_dtoa_r+0xfa4>
    f74c:	d8800b15 	stw	r2,44(sp)
    f750:	d8800315 	stw	r2,12(sp)
    f754:	100d883a 	mov	r6,r2
    f758:	e0001115 	stw	zero,68(fp)
    f75c:	30800610 	cmplti	r2,r6,24
    f760:	1004f61e 	bne	r2,zero,10b3c <_dtoa_r+0x16c4>
    f764:	00c00044 	movi	r3,1
    f768:	00800104 	movi	r2,4
    f76c:	1085883a 	add	r2,r2,r2
    f770:	11000504 	addi	r4,r2,20
    f774:	180b883a 	mov	r5,r3
    f778:	18c00044 	addi	r3,r3,1
    f77c:	313ffb2e 	bgeu	r6,r4,f76c <_dtoa_r+0x2f4>
    f780:	e1401115 	stw	r5,68(fp)
    f784:	e009883a 	mov	r4,fp
    f788:	0011bf80 	call	11bf8 <_Balloc>
    f78c:	d8800115 	stw	r2,4(sp)
    f790:	1004e326 	beq	r2,zero,10b20 <_dtoa_r+0x16a8>
    f794:	d8800117 	ldw	r2,4(sp)
    f798:	e0801015 	stw	r2,64(fp)
    f79c:	d8800317 	ldw	r2,12(sp)
    f7a0:	108003e8 	cmpgeui	r2,r2,15
    f7a4:	1001091e 	bne	r2,zero,fbcc <_dtoa_r+0x754>
    f7a8:	80010826 	beq	r16,zero,fbcc <_dtoa_r+0x754>
    f7ac:	d9000617 	ldw	r4,24(sp)
    f7b0:	0103970e 	bge	zero,r4,10610 <_dtoa_r+0x1198>
    f7b4:	208003cc 	andi	r2,r4,15
    f7b8:	100690fa 	slli	r3,r2,3
    f7bc:	2029d13a 	srai	r20,r4,4
    f7c0:	008000b4 	movhi	r2,2
    f7c4:	10aaae04 	addi	r2,r2,-21832
    f7c8:	10c5883a 	add	r2,r2,r3
    f7cc:	a0c0040c 	andi	r3,r20,16
    f7d0:	12800017 	ldw	r10,0(r2)
    f7d4:	12400117 	ldw	r9,4(r2)
    f7d8:	18033c26 	beq	r3,zero,104cc <_dtoa_r+0x1054>
    f7dc:	008000b4 	movhi	r2,2
    f7e0:	10aaa404 	addi	r2,r2,-21872
    f7e4:	11800817 	ldw	r6,32(r2)
    f7e8:	11c00917 	ldw	r7,36(r2)
    f7ec:	9809883a 	mov	r4,r19
    f7f0:	880b883a 	mov	r5,r17
    f7f4:	da400e15 	stw	r9,56(sp)
    f7f8:	da800d15 	stw	r10,52(sp)
    f7fc:	000a51c0 	call	a51c <__divdf3>
    f800:	da800d17 	ldw	r10,52(sp)
    f804:	da400e17 	ldw	r9,56(sp)
    f808:	a50003cc 	andi	r20,r20,15
    f80c:	d8800a15 	stw	r2,40(sp)
    f810:	d8c00c15 	stw	r3,48(sp)
    f814:	040000c4 	movi	r16,3
    f818:	a0001126 	beq	r20,zero,f860 <_dtoa_r+0x3e8>
    f81c:	048000b4 	movhi	r18,2
    f820:	94aaa404 	addi	r18,r18,-21872
    f824:	5009883a 	mov	r4,r10
    f828:	480b883a 	mov	r5,r9
    f82c:	a180004c 	andi	r6,r20,1
    f830:	30000626 	beq	r6,zero,f84c <_dtoa_r+0x3d4>
    f834:	91800017 	ldw	r6,0(r18)
    f838:	91c00117 	ldw	r7,4(r18)
    f83c:	84000044 	addi	r16,r16,1
    f840:	000b0800 	call	b080 <__muldf3>
    f844:	1009883a 	mov	r4,r2
    f848:	180b883a 	mov	r5,r3
    f84c:	a029d07a 	srai	r20,r20,1
    f850:	94800204 	addi	r18,r18,8
    f854:	a03ff51e 	bne	r20,zero,f82c <_dtoa_r+0x3b4>
    f858:	2015883a 	mov	r10,r4
    f85c:	2813883a 	mov	r9,r5
    f860:	d9000a17 	ldw	r4,40(sp)
    f864:	d9400c17 	ldw	r5,48(sp)
    f868:	500d883a 	mov	r6,r10
    f86c:	480f883a 	mov	r7,r9
    f870:	000a51c0 	call	a51c <__divdf3>
    f874:	d8800a15 	stw	r2,40(sp)
    f878:	1825883a 	mov	r18,r3
    f87c:	d8800817 	ldw	r2,32(sp)
    f880:	10000726 	beq	r2,zero,f8a0 <_dtoa_r+0x428>
    f884:	dd000a17 	ldw	r20,40(sp)
    f888:	000d883a 	mov	r6,zero
    f88c:	01cffc34 	movhi	r7,16368
    f890:	a009883a 	mov	r4,r20
    f894:	900b883a 	mov	r5,r18
    f898:	000af980 	call	af98 <__ledf2>
    f89c:	10044516 	blt	r2,zero,109b4 <_dtoa_r+0x153c>
    f8a0:	8009883a 	mov	r4,r16
    f8a4:	000c20c0 	call	c20c <__floatsidf>
    f8a8:	d9800a17 	ldw	r6,40(sp)
    f8ac:	900f883a 	mov	r7,r18
    f8b0:	1009883a 	mov	r4,r2
    f8b4:	180b883a 	mov	r5,r3
    f8b8:	000b0800 	call	b080 <__muldf3>
    f8bc:	000d883a 	mov	r6,zero
    f8c0:	01d00734 	movhi	r7,16412
    f8c4:	1009883a 	mov	r4,r2
    f8c8:	180b883a 	mov	r5,r3
    f8cc:	0009c2c0 	call	9c2c <__adddf3>
    f8d0:	1029883a 	mov	r20,r2
    f8d4:	00bf3034 	movhi	r2,64704
    f8d8:	1885883a 	add	r2,r3,r2
    f8dc:	d8800c15 	stw	r2,48(sp)
    f8e0:	d8800317 	ldw	r2,12(sp)
    f8e4:	10032d26 	beq	r2,zero,1059c <_dtoa_r+0x1124>
    f8e8:	d8800617 	ldw	r2,24(sp)
    f8ec:	d8801015 	stw	r2,64(sp)
    f8f0:	d8800317 	ldw	r2,12(sp)
    f8f4:	d8800d15 	stw	r2,52(sp)
    f8f8:	d8800d17 	ldw	r2,52(sp)
    f8fc:	dc000a17 	ldw	r16,40(sp)
    f900:	900b883a 	mov	r5,r18
    f904:	10bfffc4 	addi	r2,r2,-1
    f908:	100690fa 	slli	r3,r2,3
    f90c:	008000b4 	movhi	r2,2
    f910:	10aaae04 	addi	r2,r2,-21832
    f914:	10c5883a 	add	r2,r2,r3
    f918:	12c00017 	ldw	r11,0(r2)
    f91c:	13000117 	ldw	r12,4(r2)
    f920:	8009883a 	mov	r4,r16
    f924:	dac00e15 	stw	r11,56(sp)
    f928:	db000a15 	stw	r12,40(sp)
    f92c:	000c18c0 	call	c18c <__fixdfsi>
    f930:	1009883a 	mov	r4,r2
    f934:	10800c04 	addi	r2,r2,48
    f938:	d8800f15 	stw	r2,60(sp)
    f93c:	000c20c0 	call	c20c <__floatsidf>
    f940:	8009883a 	mov	r4,r16
    f944:	100d883a 	mov	r6,r2
    f948:	180f883a 	mov	r7,r3
    f94c:	900b883a 	mov	r5,r18
    f950:	000b82c0 	call	b82c <__subdf3>
    f954:	d9000117 	ldw	r4,4(sp)
    f958:	dac00e17 	ldw	r11,56(sp)
    f95c:	db000a17 	ldw	r12,40(sp)
    f960:	1825883a 	mov	r18,r3
    f964:	d8c00517 	ldw	r3,20(sp)
    f968:	22000044 	addi	r8,r4,1
    f96c:	da000e15 	stw	r8,56(sp)
    f970:	1021883a 	mov	r16,r2
    f974:	580d883a 	mov	r6,r11
    f978:	600f883a 	mov	r7,r12
    f97c:	1803b226 	beq	r3,zero,10848 <_dtoa_r+0x13d0>
    f980:	0009883a 	mov	r4,zero
    f984:	014ff834 	movhi	r5,16352
    f988:	000a51c0 	call	a51c <__divdf3>
    f98c:	d9c00c17 	ldw	r7,48(sp)
    f990:	a00d883a 	mov	r6,r20
    f994:	1009883a 	mov	r4,r2
    f998:	180b883a 	mov	r5,r3
    f99c:	000b82c0 	call	b82c <__subdf3>
    f9a0:	d9000117 	ldw	r4,4(sp)
    f9a4:	1029883a 	mov	r20,r2
    f9a8:	d8800f17 	ldw	r2,60(sp)
    f9ac:	800d883a 	mov	r6,r16
    f9b0:	900f883a 	mov	r7,r18
    f9b4:	20800005 	stb	r2,0(r4)
    f9b8:	180b883a 	mov	r5,r3
    f9bc:	a009883a 	mov	r4,r20
    f9c0:	d8c00a15 	stw	r3,40(sp)
    f9c4:	000aeb00 	call	aeb0 <__gedf2>
    f9c8:	da000e17 	ldw	r8,56(sp)
    f9cc:	0083e516 	blt	zero,r2,10964 <_dtoa_r+0x14ec>
    f9d0:	0005883a 	mov	r2,zero
    f9d4:	dd400e15 	stw	r21,56(sp)
    f9d8:	dd800f15 	stw	r22,60(sp)
    f9dc:	ddc00c15 	stw	r23,48(sp)
    f9e0:	dd800d17 	ldw	r22,52(sp)
    f9e4:	402b883a 	mov	r21,r8
    f9e8:	dc400d15 	stw	r17,52(sp)
    f9ec:	dc400a17 	ldw	r17,40(sp)
    f9f0:	dcc00a15 	stw	r19,40(sp)
    f9f4:	1027883a 	mov	r19,r2
    f9f8:	00002606 	br	fa94 <_dtoa_r+0x61c>
    f9fc:	9cc00044 	addi	r19,r19,1
    fa00:	9d806d0e 	bge	r19,r22,fbb8 <_dtoa_r+0x740>
    fa04:	a009883a 	mov	r4,r20
    fa08:	880b883a 	mov	r5,r17
    fa0c:	000d883a 	mov	r6,zero
    fa10:	01d00934 	movhi	r7,16420
    fa14:	000b0800 	call	b080 <__muldf3>
    fa18:	000d883a 	mov	r6,zero
    fa1c:	01d00934 	movhi	r7,16420
    fa20:	8009883a 	mov	r4,r16
    fa24:	900b883a 	mov	r5,r18
    fa28:	1029883a 	mov	r20,r2
    fa2c:	1823883a 	mov	r17,r3
    fa30:	000b0800 	call	b080 <__muldf3>
    fa34:	180b883a 	mov	r5,r3
    fa38:	1009883a 	mov	r4,r2
    fa3c:	1821883a 	mov	r16,r3
    fa40:	1025883a 	mov	r18,r2
    fa44:	000c18c0 	call	c18c <__fixdfsi>
    fa48:	1009883a 	mov	r4,r2
    fa4c:	102f883a 	mov	r23,r2
    fa50:	000c20c0 	call	c20c <__floatsidf>
    fa54:	9009883a 	mov	r4,r18
    fa58:	800b883a 	mov	r5,r16
    fa5c:	100d883a 	mov	r6,r2
    fa60:	180f883a 	mov	r7,r3
    fa64:	000b82c0 	call	b82c <__subdf3>
    fa68:	ad400044 	addi	r21,r21,1
    fa6c:	ba000c04 	addi	r8,r23,48
    fa70:	aa3fffc5 	stb	r8,-1(r21)
    fa74:	a00d883a 	mov	r6,r20
    fa78:	880f883a 	mov	r7,r17
    fa7c:	1009883a 	mov	r4,r2
    fa80:	180b883a 	mov	r5,r3
    fa84:	1021883a 	mov	r16,r2
    fa88:	1825883a 	mov	r18,r3
    fa8c:	000af980 	call	af98 <__ledf2>
    fa90:	10040516 	blt	r2,zero,10aa8 <_dtoa_r+0x1630>
    fa94:	800d883a 	mov	r6,r16
    fa98:	900f883a 	mov	r7,r18
    fa9c:	0009883a 	mov	r4,zero
    faa0:	014ffc34 	movhi	r5,16368
    faa4:	000b82c0 	call	b82c <__subdf3>
    faa8:	a00d883a 	mov	r6,r20
    faac:	880f883a 	mov	r7,r17
    fab0:	1009883a 	mov	r4,r2
    fab4:	180b883a 	mov	r5,r3
    fab8:	000af980 	call	af98 <__ledf2>
    fabc:	103fcf0e 	bge	r2,zero,f9fc <_dtoa_r+0x584>
    fac0:	d8801017 	ldw	r2,64(sp)
    fac4:	ddc00c17 	ldw	r23,48(sp)
    fac8:	d9000117 	ldw	r4,4(sp)
    facc:	a829883a 	mov	r20,r21
    fad0:	14c00044 	addi	r19,r2,1
    fad4:	00000106 	br	fadc <_dtoa_r+0x664>
    fad8:	a103d826 	beq	r20,r4,10a3c <_dtoa_r+0x15c4>
    fadc:	a0ffffc3 	ldbu	r3,-1(r20)
    fae0:	a011883a 	mov	r8,r20
    fae4:	a53fffc4 	addi	r20,r20,-1
    fae8:	18803fcc 	andi	r2,r3,255
    faec:	1080201c 	xori	r2,r2,128
    faf0:	10bfe004 	addi	r2,r2,-128
    faf4:	10800e60 	cmpeqi	r2,r2,57
    faf8:	103ff71e 	bne	r2,zero,fad8 <_dtoa_r+0x660>
    fafc:	18c00044 	addi	r3,r3,1
    fb00:	a0c00005 	stb	r3,0(r20)
    fb04:	dcc00215 	stw	r19,8(sp)
    fb08:	00014406 	br	1001c <_dtoa_r+0xba4>
    fb0c:	04600034 	movhi	r17,32768
    fb10:	8c7fffc4 	addi	r17,r17,-1
    fb14:	9462703a 	and	r17,r18,r17
    fb18:	00800044 	movi	r2,1
    fb1c:	8825883a 	mov	r18,r17
    fb20:	80800015 	stw	r2,0(r16)
    fb24:	00dffc34 	movhi	r3,32752
    fb28:	909ffc2c 	andhi	r2,r18,32752
    fb2c:	10fe721e 	bne	r2,r3,f4f8 <_dtoa_r+0x80>
    fb30:	d9001e17 	ldw	r4,120(sp)
    fb34:	00800434 	movhi	r2,16
    fb38:	10bfffc4 	addi	r2,r2,-1
    fb3c:	9084703a 	and	r2,r18,r2
    fb40:	00c9c3c4 	movi	r3,9999
    fb44:	20c00015 	stw	r3,0(r4)
    fb48:	14e6b03a 	or	r19,r2,r19
    fb4c:	9800141e 	bne	r19,zero,fba0 <_dtoa_r+0x728>
    fb50:	d8802017 	ldw	r2,128(sp)
    fb54:	10041126 	beq	r2,zero,10b9c <_dtoa_r+0x1724>
    fb58:	008000b4 	movhi	r2,2
    fb5c:	1007883a 	mov	r3,r2
    fb60:	18ea6f04 	addi	r3,r3,-22084
    fb64:	008000b4 	movhi	r2,2
    fb68:	d8c00115 	stw	r3,4(sp)
    fb6c:	10aa7104 	addi	r2,r2,-22076
    fb70:	d8c02017 	ldw	r3,128(sp)
    fb74:	18800015 	stw	r2,0(r3)
    fb78:	003e7106 	br	f540 <_dtoa_r+0xc8>
    fb7c:	01400434 	movhi	r5,16
    fb80:	297fffc4 	addi	r5,r5,-1
    fb84:	894a703a 	and	r5,r17,r5
    fb88:	dd001117 	ldw	r20,68(sp)
    fb8c:	9809883a 	mov	r4,r19
    fb90:	294ffc34 	orhi	r5,r5,16368
    fb94:	843f0044 	addi	r16,r16,-1023
    fb98:	d8000915 	stw	zero,36(sp)
    fb9c:	003e9206 	br	f5e8 <_dtoa_r+0x170>
    fba0:	d8802017 	ldw	r2,128(sp)
    fba4:	1002061e 	bne	r2,zero,103c0 <_dtoa_r+0xf48>
    fba8:	008000b4 	movhi	r2,2
    fbac:	10aa6e04 	addi	r2,r2,-22088
    fbb0:	d8800115 	stw	r2,4(sp)
    fbb4:	003e6206 	br	f540 <_dtoa_r+0xc8>
    fbb8:	dd400e17 	ldw	r21,56(sp)
    fbbc:	dd800f17 	ldw	r22,60(sp)
    fbc0:	ddc00c17 	ldw	r23,48(sp)
    fbc4:	dc400d17 	ldw	r17,52(sp)
    fbc8:	dcc00a17 	ldw	r19,40(sp)
    fbcc:	d8801217 	ldw	r2,72(sp)
    fbd0:	10006e16 	blt	r2,zero,fd8c <_dtoa_r+0x914>
    fbd4:	d9000617 	ldw	r4,24(sp)
    fbd8:	20c003c8 	cmpgei	r3,r4,15
    fbdc:	18006b1e 	bne	r3,zero,fd8c <_dtoa_r+0x914>
    fbe0:	200690fa 	slli	r3,r4,3
    fbe4:	008000b4 	movhi	r2,2
    fbe8:	10aaae04 	addi	r2,r2,-21832
    fbec:	10c5883a 	add	r2,r2,r3
    fbf0:	14000017 	ldw	r16,0(r2)
    fbf4:	14800117 	ldw	r18,4(r2)
    fbf8:	d8801d17 	ldw	r2,116(sp)
    fbfc:	1000150e 	bge	r2,zero,fc54 <_dtoa_r+0x7dc>
    fc00:	d8800317 	ldw	r2,12(sp)
    fc04:	00801316 	blt	zero,r2,fc54 <_dtoa_r+0x7dc>
    fc08:	d8800317 	ldw	r2,12(sp)
    fc0c:	1002771e 	bne	r2,zero,105ec <_dtoa_r+0x1174>
    fc10:	8009883a 	mov	r4,r16
    fc14:	000d883a 	mov	r6,zero
    fc18:	01d00534 	movhi	r7,16404
    fc1c:	900b883a 	mov	r5,r18
    fc20:	000b0800 	call	b080 <__muldf3>
    fc24:	100d883a 	mov	r6,r2
    fc28:	180f883a 	mov	r7,r3
    fc2c:	9809883a 	mov	r4,r19
    fc30:	880b883a 	mov	r5,r17
    fc34:	000af980 	call	af98 <__ledf2>
    fc38:	0029883a 	mov	r20,zero
    fc3c:	0021883a 	mov	r16,zero
    fc40:	00820916 	blt	zero,r2,10468 <_dtoa_r+0xff0>
    fc44:	d8801d17 	ldw	r2,116(sp)
    fc48:	da000117 	ldw	r8,4(sp)
    fc4c:	00a6303a 	nor	r19,zero,r2
    fc50:	00020b06 	br	10480 <_dtoa_r+0x1008>
    fc54:	800d883a 	mov	r6,r16
    fc58:	900f883a 	mov	r7,r18
    fc5c:	9809883a 	mov	r4,r19
    fc60:	880b883a 	mov	r5,r17
    fc64:	000a51c0 	call	a51c <__divdf3>
    fc68:	180b883a 	mov	r5,r3
    fc6c:	1009883a 	mov	r4,r2
    fc70:	000c18c0 	call	c18c <__fixdfsi>
    fc74:	1009883a 	mov	r4,r2
    fc78:	102b883a 	mov	r21,r2
    fc7c:	000c20c0 	call	c20c <__floatsidf>
    fc80:	800d883a 	mov	r6,r16
    fc84:	900f883a 	mov	r7,r18
    fc88:	1009883a 	mov	r4,r2
    fc8c:	180b883a 	mov	r5,r3
    fc90:	000b0800 	call	b080 <__muldf3>
    fc94:	100d883a 	mov	r6,r2
    fc98:	9809883a 	mov	r4,r19
    fc9c:	880b883a 	mov	r5,r17
    fca0:	180f883a 	mov	r7,r3
    fca4:	000b82c0 	call	b82c <__subdf3>
    fca8:	d9800117 	ldw	r6,4(sp)
    fcac:	dd800317 	ldw	r22,12(sp)
    fcb0:	1009883a 	mov	r4,r2
    fcb4:	a8800c04 	addi	r2,r21,48
    fcb8:	30800005 	stb	r2,0(r6)
    fcbc:	b0800060 	cmpeqi	r2,r22,1
    fcc0:	180b883a 	mov	r5,r3
    fcc4:	35000044 	addi	r20,r6,1
    fcc8:	10029c1e 	bne	r2,zero,1073c <_dtoa_r+0x12c4>
    fccc:	04400044 	movi	r17,1
    fcd0:	ddc00215 	stw	r23,8(sp)
    fcd4:	00001c06 	br	fd48 <_dtoa_r+0x8d0>
    fcd8:	800d883a 	mov	r6,r16
    fcdc:	900f883a 	mov	r7,r18
    fce0:	a809883a 	mov	r4,r21
    fce4:	980b883a 	mov	r5,r19
    fce8:	000a51c0 	call	a51c <__divdf3>
    fcec:	180b883a 	mov	r5,r3
    fcf0:	1009883a 	mov	r4,r2
    fcf4:	000c18c0 	call	c18c <__fixdfsi>
    fcf8:	1009883a 	mov	r4,r2
    fcfc:	102f883a 	mov	r23,r2
    fd00:	000c20c0 	call	c20c <__floatsidf>
    fd04:	800d883a 	mov	r6,r16
    fd08:	900f883a 	mov	r7,r18
    fd0c:	1009883a 	mov	r4,r2
    fd10:	180b883a 	mov	r5,r3
    fd14:	000b0800 	call	b080 <__muldf3>
    fd18:	a809883a 	mov	r4,r21
    fd1c:	980b883a 	mov	r5,r19
    fd20:	100d883a 	mov	r6,r2
    fd24:	180f883a 	mov	r7,r3
    fd28:	000b82c0 	call	b82c <__subdf3>
    fd2c:	b9000c04 	addi	r4,r23,48
    fd30:	a1000005 	stb	r4,0(r20)
    fd34:	8c400044 	addi	r17,r17,1
    fd38:	a5000044 	addi	r20,r20,1
    fd3c:	1009883a 	mov	r4,r2
    fd40:	180b883a 	mov	r5,r3
    fd44:	b4427b26 	beq	r22,r17,10734 <_dtoa_r+0x12bc>
    fd48:	000d883a 	mov	r6,zero
    fd4c:	01d00934 	movhi	r7,16420
    fd50:	000b0800 	call	b080 <__muldf3>
    fd54:	000d883a 	mov	r6,zero
    fd58:	000f883a 	mov	r7,zero
    fd5c:	1009883a 	mov	r4,r2
    fd60:	180b883a 	mov	r5,r3
    fd64:	102b883a 	mov	r21,r2
    fd68:	1827883a 	mov	r19,r3
    fd6c:	000ae300 	call	ae30 <__eqdf2>
    fd70:	103fd91e 	bne	r2,zero,fcd8 <_dtoa_r+0x860>
    fd74:	d8800617 	ldw	r2,24(sp)
    fd78:	ddc00217 	ldw	r23,8(sp)
    fd7c:	a011883a 	mov	r8,r20
    fd80:	10800044 	addi	r2,r2,1
    fd84:	d8800215 	stw	r2,8(sp)
    fd88:	0000a406 	br	1001c <_dtoa_r+0xba4>
    fd8c:	d8c00517 	ldw	r3,20(sp)
    fd90:	1800e726 	beq	r3,zero,10130 <_dtoa_r+0xcb8>
    fd94:	d8c00217 	ldw	r3,8(sp)
    fd98:	18c00088 	cmpgei	r3,r3,2
    fd9c:	1801e526 	beq	r3,zero,10534 <_dtoa_r+0x10bc>
    fda0:	d8800317 	ldw	r2,12(sp)
    fda4:	153fffc4 	addi	r20,r2,-1
    fda8:	d8800717 	ldw	r2,28(sp)
    fdac:	1501c50e 	bge	r2,r20,104c4 <_dtoa_r+0x104c>
    fdb0:	d8800717 	ldw	r2,28(sp)
    fdb4:	dd000715 	stw	r20,28(sp)
    fdb8:	a085c83a 	sub	r2,r20,r2
    fdbc:	a8ab883a 	add	r21,r21,r2
    fdc0:	0029883a 	mov	r20,zero
    fdc4:	d8800317 	ldw	r2,12(sp)
    fdc8:	10028b16 	blt	r2,zero,107f8 <_dtoa_r+0x1380>
    fdcc:	d8c00417 	ldw	r3,16(sp)
    fdd0:	b0ad883a 	add	r22,r22,r2
    fdd4:	1885883a 	add	r2,r3,r2
    fdd8:	1825883a 	mov	r18,r3
    fddc:	d8800415 	stw	r2,16(sp)
    fde0:	01400044 	movi	r5,1
    fde4:	e009883a 	mov	r4,fp
    fde8:	00120680 	call	12068 <__i2b>
    fdec:	1021883a 	mov	r16,r2
    fdf0:	0480080e 	bge	zero,r18,fe14 <_dtoa_r+0x99c>
    fdf4:	0580070e 	bge	zero,r22,fe14 <_dtoa_r+0x99c>
    fdf8:	9005883a 	mov	r2,r18
    fdfc:	b481a916 	blt	r22,r18,104a4 <_dtoa_r+0x102c>
    fe00:	d8c00417 	ldw	r3,16(sp)
    fe04:	90a5c83a 	sub	r18,r18,r2
    fe08:	b0adc83a 	sub	r22,r22,r2
    fe0c:	1887c83a 	sub	r3,r3,r2
    fe10:	d8c00415 	stw	r3,16(sp)
    fe14:	d8800717 	ldw	r2,28(sp)
    fe18:	10001526 	beq	r2,zero,fe70 <_dtoa_r+0x9f8>
    fe1c:	d8800517 	ldw	r2,20(sp)
    fe20:	1001f526 	beq	r2,zero,105f8 <_dtoa_r+0x1180>
    fe24:	05000f0e 	bge	zero,r20,fe64 <_dtoa_r+0x9ec>
    fe28:	800b883a 	mov	r5,r16
    fe2c:	a00d883a 	mov	r6,r20
    fe30:	e009883a 	mov	r4,fp
    fe34:	00123dc0 	call	123dc <__pow5mult>
    fe38:	b80d883a 	mov	r6,r23
    fe3c:	100b883a 	mov	r5,r2
    fe40:	e009883a 	mov	r4,fp
    fe44:	1021883a 	mov	r16,r2
    fe48:	00121180 	call	12118 <__multiply>
    fe4c:	b80b883a 	mov	r5,r23
    fe50:	e009883a 	mov	r4,fp
    fe54:	d8800915 	stw	r2,36(sp)
    fe58:	0011c9c0 	call	11c9c <_Bfree>
    fe5c:	d8800917 	ldw	r2,36(sp)
    fe60:	102f883a 	mov	r23,r2
    fe64:	d8800717 	ldw	r2,28(sp)
    fe68:	150dc83a 	sub	r6,r2,r20
    fe6c:	15025d1e 	bne	r2,r20,107e4 <_dtoa_r+0x136c>
    fe70:	01400044 	movi	r5,1
    fe74:	e009883a 	mov	r4,fp
    fe78:	00120680 	call	12068 <__i2b>
    fe7c:	1029883a 	mov	r20,r2
    fe80:	0540bd16 	blt	zero,r21,10178 <_dtoa_r+0xd00>
    fe84:	d8800217 	ldw	r2,8(sp)
    fe88:	10800088 	cmpgei	r2,r2,2
    fe8c:	10015626 	beq	r2,zero,103e8 <_dtoa_r+0xf70>
    fe90:	0023883a 	mov	r17,zero
    fe94:	00800044 	movi	r2,1
    fe98:	a800c01e 	bne	r21,zero,1019c <_dtoa_r+0xd24>
    fe9c:	1585883a 	add	r2,r2,r22
    fea0:	108007cc 	andi	r2,r2,31
    fea4:	1000ac26 	beq	r2,zero,10158 <_dtoa_r+0xce0>
    fea8:	00c00804 	movi	r3,32
    feac:	1887c83a 	sub	r3,r3,r2
    feb0:	19000150 	cmplti	r4,r3,5
    feb4:	20033d1e 	bne	r4,zero,10bac <_dtoa_r+0x1734>
    feb8:	00c00704 	movi	r3,28
    febc:	1885c83a 	sub	r2,r3,r2
    fec0:	d8c00417 	ldw	r3,16(sp)
    fec4:	90a5883a 	add	r18,r18,r2
    fec8:	b0ad883a 	add	r22,r22,r2
    fecc:	1887883a 	add	r3,r3,r2
    fed0:	d8c00415 	stw	r3,16(sp)
    fed4:	d8800417 	ldw	r2,16(sp)
    fed8:	00809916 	blt	zero,r2,10140 <_dtoa_r+0xcc8>
    fedc:	0580050e 	bge	zero,r22,fef4 <_dtoa_r+0xa7c>
    fee0:	a00b883a 	mov	r5,r20
    fee4:	b00d883a 	mov	r6,r22
    fee8:	e009883a 	mov	r4,fp
    feec:	00125240 	call	12524 <__lshift>
    fef0:	1029883a 	mov	r20,r2
    fef4:	d8800817 	ldw	r2,32(sp)
    fef8:	10011d1e 	bne	r2,zero,10370 <_dtoa_r+0xef8>
    fefc:	d8800317 	ldw	r2,12(sp)
    ff00:	00810a0e 	bge	zero,r2,1032c <_dtoa_r+0xeb4>
    ff04:	d8800517 	ldw	r2,20(sp)
    ff08:	1000b71e 	bne	r2,zero,101e8 <_dtoa_r+0xd70>
    ff0c:	d8800617 	ldw	r2,24(sp)
    ff10:	10800044 	addi	r2,r2,1
    ff14:	d8800215 	stw	r2,8(sp)
    ff18:	dc800317 	ldw	r18,12(sp)
    ff1c:	dd400117 	ldw	r21,4(sp)
    ff20:	04400044 	movi	r17,1
    ff24:	00000706 	br	ff44 <_dtoa_r+0xacc>
    ff28:	b80b883a 	mov	r5,r23
    ff2c:	000f883a 	mov	r7,zero
    ff30:	01800284 	movi	r6,10
    ff34:	e009883a 	mov	r4,fp
    ff38:	0011cc00 	call	11cc0 <__multadd>
    ff3c:	102f883a 	mov	r23,r2
    ff40:	8c400044 	addi	r17,r17,1
    ff44:	a00b883a 	mov	r5,r20
    ff48:	b809883a 	mov	r4,r23
    ff4c:	000f2580 	call	f258 <quorem>
    ff50:	14c00c04 	addi	r19,r2,48
    ff54:	ac45883a 	add	r2,r21,r17
    ff58:	14ffffc5 	stb	r19,-1(r2)
    ff5c:	8cbff216 	blt	r17,r18,ff28 <_dtoa_r+0xab0>
    ff60:	d8800317 	ldw	r2,12(sp)
    ff64:	00815d0e 	bge	zero,r2,104dc <_dtoa_r+0x1064>
    ff68:	d8c00117 	ldw	r3,4(sp)
    ff6c:	0023883a 	mov	r17,zero
    ff70:	1891883a 	add	r8,r3,r2
    ff74:	b80b883a 	mov	r5,r23
    ff78:	01800044 	movi	r6,1
    ff7c:	e009883a 	mov	r4,fp
    ff80:	da000315 	stw	r8,12(sp)
    ff84:	00125240 	call	12524 <__lshift>
    ff88:	a00b883a 	mov	r5,r20
    ff8c:	1009883a 	mov	r4,r2
    ff90:	102f883a 	mov	r23,r2
    ff94:	00126ac0 	call	126ac <__mcmp>
    ff98:	da000317 	ldw	r8,12(sp)
    ff9c:	0081540e 	bge	zero,r2,104f0 <_dtoa_r+0x1078>
    ffa0:	413fffc3 	ldbu	r4,-1(r8)
    ffa4:	d9400117 	ldw	r5,4(sp)
    ffa8:	00000306 	br	ffb8 <_dtoa_r+0xb40>
    ffac:	28c15a26 	beq	r5,r3,10518 <_dtoa_r+0x10a0>
    ffb0:	193fffc3 	ldbu	r4,-1(r3)
    ffb4:	1811883a 	mov	r8,r3
    ffb8:	20803fcc 	andi	r2,r4,255
    ffbc:	1080201c 	xori	r2,r2,128
    ffc0:	10bfe004 	addi	r2,r2,-128
    ffc4:	10800e60 	cmpeqi	r2,r2,57
    ffc8:	40ffffc4 	addi	r3,r8,-1
    ffcc:	103ff71e 	bne	r2,zero,ffac <_dtoa_r+0xb34>
    ffd0:	21000044 	addi	r4,r4,1
    ffd4:	19000005 	stb	r4,0(r3)
    ffd8:	a00b883a 	mov	r5,r20
    ffdc:	e009883a 	mov	r4,fp
    ffe0:	da000315 	stw	r8,12(sp)
    ffe4:	0011c9c0 	call	11c9c <_Bfree>
    ffe8:	da000317 	ldw	r8,12(sp)
    ffec:	80000b26 	beq	r16,zero,1001c <_dtoa_r+0xba4>
    fff0:	88000526 	beq	r17,zero,10008 <_dtoa_r+0xb90>
    fff4:	8c000426 	beq	r17,r16,10008 <_dtoa_r+0xb90>
    fff8:	880b883a 	mov	r5,r17
    fffc:	e009883a 	mov	r4,fp
   10000:	0011c9c0 	call	11c9c <_Bfree>
   10004:	da000317 	ldw	r8,12(sp)
   10008:	800b883a 	mov	r5,r16
   1000c:	e009883a 	mov	r4,fp
   10010:	da000315 	stw	r8,12(sp)
   10014:	0011c9c0 	call	11c9c <_Bfree>
   10018:	da000317 	ldw	r8,12(sp)
   1001c:	b80b883a 	mov	r5,r23
   10020:	e009883a 	mov	r4,fp
   10024:	da000315 	stw	r8,12(sp)
   10028:	0011c9c0 	call	11c9c <_Bfree>
   1002c:	da000317 	ldw	r8,12(sp)
   10030:	d8801e17 	ldw	r2,120(sp)
   10034:	d8c00217 	ldw	r3,8(sp)
   10038:	40000005 	stb	zero,0(r8)
   1003c:	10c00015 	stw	r3,0(r2)
   10040:	d8802017 	ldw	r2,128(sp)
   10044:	103d3e26 	beq	r2,zero,f540 <_dtoa_r+0xc8>
   10048:	12000015 	stw	r8,0(r2)
   1004c:	003d3c06 	br	f540 <_dtoa_r+0xc8>
   10050:	d8000815 	stw	zero,32(sp)
   10054:	b0002316 	blt	r22,zero,100e4 <_dtoa_r+0xc6c>
   10058:	d8000415 	stw	zero,16(sp)
   1005c:	d8c00217 	ldw	r3,8(sp)
   10060:	dd400615 	stw	r21,24(sp)
   10064:	d8000715 	stw	zero,28(sp)
   10068:	188002a8 	cmpgeui	r2,r3,10
   1006c:	b56d883a 	add	r22,r22,r21
   10070:	103da726 	beq	r2,zero,f710 <_dtoa_r+0x298>
   10074:	00800044 	movi	r2,1
   10078:	d8800515 	stw	r2,20(sp)
   1007c:	00bfffc4 	movi	r2,-1
   10080:	04000044 	movi	r16,1
   10084:	d8000215 	stw	zero,8(sp)
   10088:	d8800315 	stw	r2,12(sp)
   1008c:	d8001d15 	stw	zero,116(sp)
   10090:	d8800317 	ldw	r2,12(sp)
   10094:	e0001115 	stw	zero,68(fp)
   10098:	000b883a 	mov	r5,zero
   1009c:	d8800b15 	stw	r2,44(sp)
   100a0:	003db806 	br	f784 <_dtoa_r+0x30c>
   100a4:	188000e0 	cmpeqi	r2,r3,3
   100a8:	d8000515 	stw	zero,20(sp)
   100ac:	1002a526 	beq	r2,zero,10b44 <_dtoa_r+0x16cc>
   100b0:	d8801d17 	ldw	r2,116(sp)
   100b4:	d8c00617 	ldw	r3,24(sp)
   100b8:	10c5883a 	add	r2,r2,r3
   100bc:	d8800b15 	stw	r2,44(sp)
   100c0:	10800044 	addi	r2,r2,1
   100c4:	d8800315 	stw	r2,12(sp)
   100c8:	100d883a 	mov	r6,r2
   100cc:	00bda216 	blt	zero,r2,f758 <_dtoa_r+0x2e0>
   100d0:	01800044 	movi	r6,1
   100d4:	003da006 	br	f758 <_dtoa_r+0x2e0>
   100d8:	00800044 	movi	r2,1
   100dc:	d8800815 	stw	r2,32(sp)
   100e0:	b03d7f0e 	bge	r22,zero,f6e0 <_dtoa_r+0x268>
   100e4:	00800044 	movi	r2,1
   100e8:	1405c83a 	sub	r2,r2,r16
   100ec:	d8800415 	stw	r2,16(sp)
   100f0:	002d883a 	mov	r22,zero
   100f4:	003d7b06 	br	f6e4 <_dtoa_r+0x26c>
   100f8:	a809883a 	mov	r4,r21
   100fc:	000c20c0 	call	c20c <__floatsidf>
   10100:	900d883a 	mov	r6,r18
   10104:	b00f883a 	mov	r7,r22
   10108:	1009883a 	mov	r4,r2
   1010c:	180b883a 	mov	r5,r3
   10110:	000ae300 	call	ae30 <__eqdf2>
   10114:	103d6126 	beq	r2,zero,f69c <_dtoa_r+0x224>
   10118:	ad7fffc4 	addi	r21,r21,-1
   1011c:	003d5f06 	br	f69c <_dtoa_r+0x224>
   10120:	008000b4 	movhi	r2,2
   10124:	10aa6504 	addi	r2,r2,-22124
   10128:	d8800115 	stw	r2,4(sp)
   1012c:	003d0406 	br	f540 <_dtoa_r+0xc8>
   10130:	dd000717 	ldw	r20,28(sp)
   10134:	dc800417 	ldw	r18,16(sp)
   10138:	0021883a 	mov	r16,zero
   1013c:	003f2c06 	br	fdf0 <_dtoa_r+0x978>
   10140:	b80b883a 	mov	r5,r23
   10144:	100d883a 	mov	r6,r2
   10148:	e009883a 	mov	r4,fp
   1014c:	00125240 	call	12524 <__lshift>
   10150:	102f883a 	mov	r23,r2
   10154:	003f6106 	br	fedc <_dtoa_r+0xa64>
   10158:	00800704 	movi	r2,28
   1015c:	003f5806 	br	fec0 <_dtoa_r+0xa48>
   10160:	01000804 	movi	r4,32
   10164:	2089c83a 	sub	r4,r4,r2
   10168:	9908983a 	sll	r4,r19,r4
   1016c:	003d1706 	br	f5cc <_dtoa_r+0x154>
   10170:	04000044 	movi	r16,1
   10174:	003d6b06 	br	f724 <_dtoa_r+0x2ac>
   10178:	100b883a 	mov	r5,r2
   1017c:	a80d883a 	mov	r6,r21
   10180:	e009883a 	mov	r4,fp
   10184:	00123dc0 	call	123dc <__pow5mult>
   10188:	d8c00217 	ldw	r3,8(sp)
   1018c:	1029883a 	mov	r20,r2
   10190:	18c00090 	cmplti	r3,r3,2
   10194:	18014b1e 	bne	r3,zero,106c4 <_dtoa_r+0x124c>
   10198:	0023883a 	mov	r17,zero
   1019c:	a0800417 	ldw	r2,16(r20)
   101a0:	10800104 	addi	r2,r2,4
   101a4:	100490ba 	slli	r2,r2,2
   101a8:	a085883a 	add	r2,r20,r2
   101ac:	11000017 	ldw	r4,0(r2)
   101b0:	0011f540 	call	11f54 <__hi0bits>
   101b4:	00c00804 	movi	r3,32
   101b8:	1885c83a 	sub	r2,r3,r2
   101bc:	003f3706 	br	fe9c <_dtoa_r+0xa24>
   101c0:	800b883a 	mov	r5,r16
   101c4:	000f883a 	mov	r7,zero
   101c8:	01800284 	movi	r6,10
   101cc:	e009883a 	mov	r4,fp
   101d0:	0011cc00 	call	11cc0 <__multadd>
   101d4:	1021883a 	mov	r16,r2
   101d8:	d8800b17 	ldw	r2,44(sp)
   101dc:	0082460e 	bge	zero,r2,10af8 <_dtoa_r+0x1680>
   101e0:	dd400615 	stw	r21,24(sp)
   101e4:	d8800315 	stw	r2,12(sp)
   101e8:	0480b016 	blt	zero,r18,104ac <_dtoa_r+0x1034>
   101ec:	88016c1e 	bne	r17,zero,107a0 <_dtoa_r+0x1328>
   101f0:	8025883a 	mov	r18,r16
   101f4:	dd800117 	ldw	r22,4(sp)
   101f8:	d9000317 	ldw	r4,12(sp)
   101fc:	98c0004c 	andi	r3,r19,1
   10200:	b0bfffc4 	addi	r2,r22,-1
   10204:	1105883a 	add	r2,r2,r4
   10208:	d8800515 	stw	r2,20(sp)
   1020c:	d8800217 	ldw	r2,8(sp)
   10210:	d8c00815 	stw	r3,32(sp)
   10214:	1884b03a 	or	r2,r3,r2
   10218:	d8800715 	stw	r2,28(sp)
   1021c:	00002b06 	br	102cc <_dtoa_r+0xe54>
   10220:	b809883a 	mov	r4,r23
   10224:	d9400415 	stw	r5,16(sp)
   10228:	00126ac0 	call	126ac <__mcmp>
   1022c:	d9400417 	ldw	r5,16(sp)
   10230:	e009883a 	mov	r4,fp
   10234:	d8800315 	stw	r2,12(sp)
   10238:	0011c9c0 	call	11c9c <_Bfree>
   1023c:	d8800317 	ldw	r2,12(sp)
   10240:	1000021e 	bne	r2,zero,1024c <_dtoa_r+0xdd4>
   10244:	d8c00717 	ldw	r3,28(sp)
   10248:	18021d26 	beq	r3,zero,10ac0 <_dtoa_r+0x1648>
   1024c:	b2000044 	addi	r8,r22,1
   10250:	da000315 	stw	r8,12(sp)
   10254:	88012116 	blt	r17,zero,106dc <_dtoa_r+0x1264>
   10258:	d8c00217 	ldw	r3,8(sp)
   1025c:	88e2b03a 	or	r17,r17,r3
   10260:	d8c00817 	ldw	r3,32(sp)
   10264:	1c62b03a 	or	r17,r3,r17
   10268:	88011c26 	beq	r17,zero,106dc <_dtoa_r+0x1264>
   1026c:	00816616 	blt	zero,r2,10808 <_dtoa_r+0x1390>
   10270:	d8800517 	ldw	r2,20(sp)
   10274:	b4c00005 	stb	r19,0(r22)
   10278:	15816d26 	beq	r2,r22,10830 <_dtoa_r+0x13b8>
   1027c:	b80b883a 	mov	r5,r23
   10280:	000f883a 	mov	r7,zero
   10284:	01800284 	movi	r6,10
   10288:	e009883a 	mov	r4,fp
   1028c:	0011cc00 	call	11cc0 <__multadd>
   10290:	102f883a 	mov	r23,r2
   10294:	800b883a 	mov	r5,r16
   10298:	000f883a 	mov	r7,zero
   1029c:	01800284 	movi	r6,10
   102a0:	e009883a 	mov	r4,fp
   102a4:	84801d26 	beq	r16,r18,1031c <_dtoa_r+0xea4>
   102a8:	0011cc00 	call	11cc0 <__multadd>
   102ac:	900b883a 	mov	r5,r18
   102b0:	000f883a 	mov	r7,zero
   102b4:	01800284 	movi	r6,10
   102b8:	e009883a 	mov	r4,fp
   102bc:	1021883a 	mov	r16,r2
   102c0:	0011cc00 	call	11cc0 <__multadd>
   102c4:	1025883a 	mov	r18,r2
   102c8:	dd800317 	ldw	r22,12(sp)
   102cc:	a00b883a 	mov	r5,r20
   102d0:	b809883a 	mov	r4,r23
   102d4:	000f2580 	call	f258 <quorem>
   102d8:	800b883a 	mov	r5,r16
   102dc:	b809883a 	mov	r4,r23
   102e0:	102b883a 	mov	r21,r2
   102e4:	00126ac0 	call	126ac <__mcmp>
   102e8:	a00b883a 	mov	r5,r20
   102ec:	900d883a 	mov	r6,r18
   102f0:	e009883a 	mov	r4,fp
   102f4:	1023883a 	mov	r17,r2
   102f8:	00127040 	call	12704 <__mdiff>
   102fc:	100b883a 	mov	r5,r2
   10300:	10800317 	ldw	r2,12(r2)
   10304:	acc00c04 	addi	r19,r21,48
   10308:	103fc526 	beq	r2,zero,10220 <_dtoa_r+0xda8>
   1030c:	e009883a 	mov	r4,fp
   10310:	0011c9c0 	call	11c9c <_Bfree>
   10314:	00800044 	movi	r2,1
   10318:	003fcc06 	br	1024c <_dtoa_r+0xdd4>
   1031c:	0011cc00 	call	11cc0 <__multadd>
   10320:	1021883a 	mov	r16,r2
   10324:	1025883a 	mov	r18,r2
   10328:	003fe706 	br	102c8 <_dtoa_r+0xe50>
   1032c:	d8800217 	ldw	r2,8(sp)
   10330:	108000d0 	cmplti	r2,r2,3
   10334:	10004026 	beq	r2,zero,10438 <_dtoa_r+0xfc0>
   10338:	d8800517 	ldw	r2,20(sp)
   1033c:	103faa1e 	bne	r2,zero,101e8 <_dtoa_r+0xd70>
   10340:	a00b883a 	mov	r5,r20
   10344:	b809883a 	mov	r4,r23
   10348:	000f2580 	call	f258 <quorem>
   1034c:	14c00c04 	addi	r19,r2,48
   10350:	d8800117 	ldw	r2,4(sp)
   10354:	0023883a 	mov	r17,zero
   10358:	12000044 	addi	r8,r2,1
   1035c:	14c00005 	stb	r19,0(r2)
   10360:	d8800617 	ldw	r2,24(sp)
   10364:	10800044 	addi	r2,r2,1
   10368:	d8800215 	stw	r2,8(sp)
   1036c:	003f0106 	br	ff74 <_dtoa_r+0xafc>
   10370:	a00b883a 	mov	r5,r20
   10374:	b809883a 	mov	r4,r23
   10378:	00126ac0 	call	126ac <__mcmp>
   1037c:	103edf0e 	bge	r2,zero,fefc <_dtoa_r+0xa84>
   10380:	b80b883a 	mov	r5,r23
   10384:	000f883a 	mov	r7,zero
   10388:	01800284 	movi	r6,10
   1038c:	e009883a 	mov	r4,fp
   10390:	0011cc00 	call	11cc0 <__multadd>
   10394:	d8c00617 	ldw	r3,24(sp)
   10398:	102f883a 	mov	r23,r2
   1039c:	d8800517 	ldw	r2,20(sp)
   103a0:	1d7fffc4 	addi	r21,r3,-1
   103a4:	103f861e 	bne	r2,zero,101c0 <_dtoa_r+0xd48>
   103a8:	d8800b17 	ldw	r2,44(sp)
   103ac:	0081cb0e 	bge	zero,r2,10adc <_dtoa_r+0x1664>
   103b0:	d8c00617 	ldw	r3,24(sp)
   103b4:	d8800315 	stw	r2,12(sp)
   103b8:	d8c00215 	stw	r3,8(sp)
   103bc:	003ed606 	br	ff18 <_dtoa_r+0xaa0>
   103c0:	008000b4 	movhi	r2,2
   103c4:	1007883a 	mov	r3,r2
   103c8:	18ea6e04 	addi	r3,r3,-22088
   103cc:	008000b4 	movhi	r2,2
   103d0:	d8c00115 	stw	r3,4(sp)
   103d4:	10aa6ec4 	addi	r2,r2,-22085
   103d8:	003de506 	br	fb70 <_dtoa_r+0x6f8>
   103dc:	00800044 	movi	r2,1
   103e0:	d8800515 	stw	r2,20(sp)
   103e4:	003f3206 	br	100b0 <_dtoa_r+0xc38>
   103e8:	983ea91e 	bne	r19,zero,fe90 <_dtoa_r+0xa18>
   103ec:	00800434 	movhi	r2,16
   103f0:	10bfffc4 	addi	r2,r2,-1
   103f4:	8884703a 	and	r2,r17,r2
   103f8:	103ea51e 	bne	r2,zero,fe90 <_dtoa_r+0xa18>
   103fc:	8c5ffc2c 	andhi	r17,r17,32752
   10400:	883ea326 	beq	r17,zero,fe90 <_dtoa_r+0xa18>
   10404:	d8800417 	ldw	r2,16(sp)
   10408:	b5800044 	addi	r22,r22,1
   1040c:	04400044 	movi	r17,1
   10410:	10800044 	addi	r2,r2,1
   10414:	d8800415 	stw	r2,16(sp)
   10418:	003e9e06 	br	fe94 <_dtoa_r+0xa1c>
   1041c:	00800044 	movi	r2,1
   10420:	d8800315 	stw	r2,12(sp)
   10424:	d8801d15 	stw	r2,116(sp)
   10428:	003f1906 	br	10090 <_dtoa_r+0xc18>
   1042c:	d8800b17 	ldw	r2,44(sp)
   10430:	dd400615 	stw	r21,24(sp)
   10434:	d8800315 	stw	r2,12(sp)
   10438:	d8800317 	ldw	r2,12(sp)
   1043c:	103e011e 	bne	r2,zero,fc44 <_dtoa_r+0x7cc>
   10440:	a00b883a 	mov	r5,r20
   10444:	e009883a 	mov	r4,fp
   10448:	000f883a 	mov	r7,zero
   1044c:	01800144 	movi	r6,5
   10450:	0011cc00 	call	11cc0 <__multadd>
   10454:	100b883a 	mov	r5,r2
   10458:	b809883a 	mov	r4,r23
   1045c:	1029883a 	mov	r20,r2
   10460:	00126ac0 	call	126ac <__mcmp>
   10464:	00bdf70e 	bge	zero,r2,fc44 <_dtoa_r+0x7cc>
   10468:	d8c00117 	ldw	r3,4(sp)
   1046c:	00800c44 	movi	r2,49
   10470:	18800005 	stb	r2,0(r3)
   10474:	d8800617 	ldw	r2,24(sp)
   10478:	1a000044 	addi	r8,r3,1
   1047c:	14c00044 	addi	r19,r2,1
   10480:	a00b883a 	mov	r5,r20
   10484:	e009883a 	mov	r4,fp
   10488:	da000315 	stw	r8,12(sp)
   1048c:	0011c9c0 	call	11c9c <_Bfree>
   10490:	98800044 	addi	r2,r19,1
   10494:	d8800215 	stw	r2,8(sp)
   10498:	da000317 	ldw	r8,12(sp)
   1049c:	803eda1e 	bne	r16,zero,10008 <_dtoa_r+0xb90>
   104a0:	003ede06 	br	1001c <_dtoa_r+0xba4>
   104a4:	b005883a 	mov	r2,r22
   104a8:	003e5506 	br	fe00 <_dtoa_r+0x988>
   104ac:	800b883a 	mov	r5,r16
   104b0:	900d883a 	mov	r6,r18
   104b4:	e009883a 	mov	r4,fp
   104b8:	00125240 	call	12524 <__lshift>
   104bc:	1021883a 	mov	r16,r2
   104c0:	003f4a06 	br	101ec <_dtoa_r+0xd74>
   104c4:	1529c83a 	sub	r20,r2,r20
   104c8:	003e3e06 	br	fdc4 <_dtoa_r+0x94c>
   104cc:	dcc00a15 	stw	r19,40(sp)
   104d0:	dc400c15 	stw	r17,48(sp)
   104d4:	04000084 	movi	r16,2
   104d8:	003ccf06 	br	f818 <_dtoa_r+0x3a0>
   104dc:	00800044 	movi	r2,1
   104e0:	003ea106 	br	ff68 <_dtoa_r+0xaf0>
   104e4:	00800044 	movi	r2,1
   104e8:	d8800515 	stw	r2,20(sp)
   104ec:	003c9506 	br	f744 <_dtoa_r+0x2cc>
   104f0:	1000021e 	bne	r2,zero,104fc <_dtoa_r+0x1084>
   104f4:	98c0004c 	andi	r3,r19,1
   104f8:	183ea91e 	bne	r3,zero,ffa0 <_dtoa_r+0xb28>
   104fc:	40bfffc7 	ldb	r2,-1(r8)
   10500:	4007883a 	mov	r3,r8
   10504:	423fffc4 	addi	r8,r8,-1
   10508:	10800c20 	cmpeqi	r2,r2,48
   1050c:	103ffb1e 	bne	r2,zero,104fc <_dtoa_r+0x1084>
   10510:	1811883a 	mov	r8,r3
   10514:	003eb006 	br	ffd8 <_dtoa_r+0xb60>
   10518:	d8c00117 	ldw	r3,4(sp)
   1051c:	00800c44 	movi	r2,49
   10520:	18800005 	stb	r2,0(r3)
   10524:	d8800217 	ldw	r2,8(sp)
   10528:	10800044 	addi	r2,r2,1
   1052c:	d8800215 	stw	r2,8(sp)
   10530:	003ea906 	br	ffd8 <_dtoa_r+0xb60>
   10534:	d8c00917 	ldw	r3,36(sp)
   10538:	18010e26 	beq	r3,zero,10974 <_dtoa_r+0x14fc>
   1053c:	d8c00417 	ldw	r3,16(sp)
   10540:	10810cc4 	addi	r2,r2,1075
   10544:	b0ad883a 	add	r22,r22,r2
   10548:	1885883a 	add	r2,r3,r2
   1054c:	dd000717 	ldw	r20,28(sp)
   10550:	1825883a 	mov	r18,r3
   10554:	d8800415 	stw	r2,16(sp)
   10558:	003e2106 	br	fde0 <_dtoa_r+0x968>
   1055c:	8009883a 	mov	r4,r16
   10560:	000c20c0 	call	c20c <__floatsidf>
   10564:	d9800a17 	ldw	r6,40(sp)
   10568:	900f883a 	mov	r7,r18
   1056c:	1009883a 	mov	r4,r2
   10570:	180b883a 	mov	r5,r3
   10574:	000b0800 	call	b080 <__muldf3>
   10578:	000d883a 	mov	r6,zero
   1057c:	01d00734 	movhi	r7,16412
   10580:	1009883a 	mov	r4,r2
   10584:	180b883a 	mov	r5,r3
   10588:	0009c2c0 	call	9c2c <__adddf3>
   1058c:	1029883a 	mov	r20,r2
   10590:	00bf3034 	movhi	r2,64704
   10594:	1885883a 	add	r2,r3,r2
   10598:	d8800c15 	stw	r2,48(sp)
   1059c:	d9000a17 	ldw	r4,40(sp)
   105a0:	900b883a 	mov	r5,r18
   105a4:	000d883a 	mov	r6,zero
   105a8:	01d00534 	movhi	r7,16404
   105ac:	000b82c0 	call	b82c <__subdf3>
   105b0:	d9c00c17 	ldw	r7,48(sp)
   105b4:	a00d883a 	mov	r6,r20
   105b8:	1009883a 	mov	r4,r2
   105bc:	180b883a 	mov	r5,r3
   105c0:	1025883a 	mov	r18,r2
   105c4:	1821883a 	mov	r16,r3
   105c8:	000aeb00 	call	aeb0 <__gedf2>
   105cc:	00812b16 	blt	zero,r2,10a7c <_dtoa_r+0x1604>
   105d0:	d8800c17 	ldw	r2,48(sp)
   105d4:	a00d883a 	mov	r6,r20
   105d8:	9009883a 	mov	r4,r18
   105dc:	11e0003c 	xorhi	r7,r2,32768
   105e0:	800b883a 	mov	r5,r16
   105e4:	000af980 	call	af98 <__ledf2>
   105e8:	103d780e 	bge	r2,zero,fbcc <_dtoa_r+0x754>
   105ec:	0029883a 	mov	r20,zero
   105f0:	0021883a 	mov	r16,zero
   105f4:	003d9306 	br	fc44 <_dtoa_r+0x7cc>
   105f8:	d9800717 	ldw	r6,28(sp)
   105fc:	b80b883a 	mov	r5,r23
   10600:	e009883a 	mov	r4,fp
   10604:	00123dc0 	call	123dc <__pow5mult>
   10608:	102f883a 	mov	r23,r2
   1060c:	003e1806 	br	fe70 <_dtoa_r+0x9f8>
   10610:	d8800617 	ldw	r2,24(sp)
   10614:	1000e326 	beq	r2,zero,109a4 <_dtoa_r+0x152c>
   10618:	00a9c83a 	sub	r20,zero,r2
   1061c:	a08003cc 	andi	r2,r20,15
   10620:	100690fa 	slli	r3,r2,3
   10624:	008000b4 	movhi	r2,2
   10628:	10aaae04 	addi	r2,r2,-21832
   1062c:	10c5883a 	add	r2,r2,r3
   10630:	11800017 	ldw	r6,0(r2)
   10634:	11c00117 	ldw	r7,4(r2)
   10638:	9809883a 	mov	r4,r19
   1063c:	880b883a 	mov	r5,r17
   10640:	a029d13a 	srai	r20,r20,4
   10644:	000b0800 	call	b080 <__muldf3>
   10648:	d8800a15 	stw	r2,40(sp)
   1064c:	1825883a 	mov	r18,r3
   10650:	a0013126 	beq	r20,zero,10b18 <_dtoa_r+0x16a0>
   10654:	020000b4 	movhi	r8,2
   10658:	04000084 	movi	r16,2
   1065c:	422aa404 	addi	r8,r8,-21872
   10660:	180b883a 	mov	r5,r3
   10664:	dc400c15 	stw	r17,48(sp)
   10668:	1009883a 	mov	r4,r2
   1066c:	8023883a 	mov	r17,r16
   10670:	0007883a 	mov	r3,zero
   10674:	4021883a 	mov	r16,r8
   10678:	a180004c 	andi	r6,r20,1
   1067c:	30000726 	beq	r6,zero,1069c <_dtoa_r+0x1224>
   10680:	81800017 	ldw	r6,0(r16)
   10684:	81c00117 	ldw	r7,4(r16)
   10688:	8c400044 	addi	r17,r17,1
   1068c:	000b0800 	call	b080 <__muldf3>
   10690:	180b883a 	mov	r5,r3
   10694:	1009883a 	mov	r4,r2
   10698:	00c00044 	movi	r3,1
   1069c:	a029d07a 	srai	r20,r20,1
   106a0:	84000204 	addi	r16,r16,8
   106a4:	a03ff41e 	bne	r20,zero,10678 <_dtoa_r+0x1200>
   106a8:	18c03fcc 	andi	r3,r3,255
   106ac:	8821883a 	mov	r16,r17
   106b0:	dc400c17 	ldw	r17,48(sp)
   106b4:	183c7126 	beq	r3,zero,f87c <_dtoa_r+0x404>
   106b8:	d9000a15 	stw	r4,40(sp)
   106bc:	2825883a 	mov	r18,r5
   106c0:	003c6e06 	br	f87c <_dtoa_r+0x404>
   106c4:	983eb41e 	bne	r19,zero,10198 <_dtoa_r+0xd20>
   106c8:	00800434 	movhi	r2,16
   106cc:	10bfffc4 	addi	r2,r2,-1
   106d0:	8884703a 	and	r2,r17,r2
   106d4:	103f4926 	beq	r2,zero,103fc <_dtoa_r+0xf84>
   106d8:	003eaf06 	br	10198 <_dtoa_r+0xd20>
   106dc:	00800e0e 	bge	zero,r2,10718 <_dtoa_r+0x12a0>
   106e0:	b80b883a 	mov	r5,r23
   106e4:	01800044 	movi	r6,1
   106e8:	e009883a 	mov	r4,fp
   106ec:	da000215 	stw	r8,8(sp)
   106f0:	00125240 	call	12524 <__lshift>
   106f4:	a00b883a 	mov	r5,r20
   106f8:	1009883a 	mov	r4,r2
   106fc:	102f883a 	mov	r23,r2
   10700:	00126ac0 	call	126ac <__mcmp>
   10704:	da000217 	ldw	r8,8(sp)
   10708:	0080e30e 	bge	zero,r2,10a98 <_dtoa_r+0x1620>
   1070c:	98c00e60 	cmpeqi	r3,r19,57
   10710:	1800cf1e 	bne	r3,zero,10a50 <_dtoa_r+0x15d8>
   10714:	acc00c44 	addi	r19,r21,49
   10718:	8023883a 	mov	r17,r16
   1071c:	d8800617 	ldw	r2,24(sp)
   10720:	b4c00005 	stb	r19,0(r22)
   10724:	9021883a 	mov	r16,r18
   10728:	10800044 	addi	r2,r2,1
   1072c:	d8800215 	stw	r2,8(sp)
   10730:	003e2906 	br	ffd8 <_dtoa_r+0xb60>
   10734:	b82b883a 	mov	r21,r23
   10738:	ddc00217 	ldw	r23,8(sp)
   1073c:	200d883a 	mov	r6,r4
   10740:	280f883a 	mov	r7,r5
   10744:	0009c2c0 	call	9c2c <__adddf3>
   10748:	102d883a 	mov	r22,r2
   1074c:	1009883a 	mov	r4,r2
   10750:	d8800617 	ldw	r2,24(sp)
   10754:	800d883a 	mov	r6,r16
   10758:	900f883a 	mov	r7,r18
   1075c:	10800044 	addi	r2,r2,1
   10760:	180b883a 	mov	r5,r3
   10764:	1823883a 	mov	r17,r3
   10768:	1027883a 	mov	r19,r2
   1076c:	d8800215 	stw	r2,8(sp)
   10770:	000aeb00 	call	aeb0 <__gedf2>
   10774:	00808916 	blt	zero,r2,1099c <_dtoa_r+0x1524>
   10778:	800d883a 	mov	r6,r16
   1077c:	900f883a 	mov	r7,r18
   10780:	b009883a 	mov	r4,r22
   10784:	880b883a 	mov	r5,r17
   10788:	000ae300 	call	ae30 <__eqdf2>
   1078c:	1000021e 	bne	r2,zero,10798 <_dtoa_r+0x1320>
   10790:	ad40004c 	andi	r21,r21,1
   10794:	a800811e 	bne	r21,zero,1099c <_dtoa_r+0x1524>
   10798:	a011883a 	mov	r8,r20
   1079c:	003e1f06 	br	1001c <_dtoa_r+0xba4>
   107a0:	81400117 	ldw	r5,4(r16)
   107a4:	e009883a 	mov	r4,fp
   107a8:	0011bf80 	call	11bf8 <_Balloc>
   107ac:	1023883a 	mov	r17,r2
   107b0:	1000f326 	beq	r2,zero,10b80 <_dtoa_r+0x1708>
   107b4:	81800417 	ldw	r6,16(r16)
   107b8:	81400304 	addi	r5,r16,12
   107bc:	11000304 	addi	r4,r2,12
   107c0:	31800084 	addi	r6,r6,2
   107c4:	300c90ba 	slli	r6,r6,2
   107c8:	000ce200 	call	ce20 <memcpy>
   107cc:	01800044 	movi	r6,1
   107d0:	880b883a 	mov	r5,r17
   107d4:	e009883a 	mov	r4,fp
   107d8:	00125240 	call	12524 <__lshift>
   107dc:	1025883a 	mov	r18,r2
   107e0:	003e8406 	br	101f4 <_dtoa_r+0xd7c>
   107e4:	b80b883a 	mov	r5,r23
   107e8:	e009883a 	mov	r4,fp
   107ec:	00123dc0 	call	123dc <__pow5mult>
   107f0:	102f883a 	mov	r23,r2
   107f4:	003d9e06 	br	fe70 <_dtoa_r+0x9f8>
   107f8:	d8800417 	ldw	r2,16(sp)
   107fc:	d8c00317 	ldw	r3,12(sp)
   10800:	10e5c83a 	sub	r18,r2,r3
   10804:	003d7606 	br	fde0 <_dtoa_r+0x968>
   10808:	98800e58 	cmpnei	r2,r19,57
   1080c:	10009026 	beq	r2,zero,10a50 <_dtoa_r+0x15d8>
   10810:	d8800617 	ldw	r2,24(sp)
   10814:	98c00044 	addi	r3,r19,1
   10818:	8023883a 	mov	r17,r16
   1081c:	10800044 	addi	r2,r2,1
   10820:	d8800215 	stw	r2,8(sp)
   10824:	b0c00005 	stb	r3,0(r22)
   10828:	9021883a 	mov	r16,r18
   1082c:	003dea06 	br	ffd8 <_dtoa_r+0xb60>
   10830:	d8800617 	ldw	r2,24(sp)
   10834:	8023883a 	mov	r17,r16
   10838:	9021883a 	mov	r16,r18
   1083c:	10800044 	addi	r2,r2,1
   10840:	d8800215 	stw	r2,8(sp)
   10844:	003dcb06 	br	ff74 <_dtoa_r+0xafc>
   10848:	d9400c17 	ldw	r5,48(sp)
   1084c:	a009883a 	mov	r4,r20
   10850:	000b0800 	call	b080 <__muldf3>
   10854:	d9400117 	ldw	r5,4(sp)
   10858:	d9000f17 	ldw	r4,60(sp)
   1085c:	d9800d17 	ldw	r6,52(sp)
   10860:	d8800a15 	stw	r2,40(sp)
   10864:	29000005 	stb	r4,0(r5)
   10868:	d8c00c15 	stw	r3,48(sp)
   1086c:	31000058 	cmpnei	r4,r6,1
   10870:	da000e17 	ldw	r8,56(sp)
   10874:	29a9883a 	add	r20,r5,r6
   10878:	20009d26 	beq	r4,zero,10af0 <_dtoa_r+0x1678>
   1087c:	dc400d15 	stw	r17,52(sp)
   10880:	8009883a 	mov	r4,r16
   10884:	900b883a 	mov	r5,r18
   10888:	4023883a 	mov	r17,r8
   1088c:	dcc00e15 	stw	r19,56(sp)
   10890:	000d883a 	mov	r6,zero
   10894:	01d00934 	movhi	r7,16420
   10898:	000b0800 	call	b080 <__muldf3>
   1089c:	180b883a 	mov	r5,r3
   108a0:	1009883a 	mov	r4,r2
   108a4:	1825883a 	mov	r18,r3
   108a8:	1027883a 	mov	r19,r2
   108ac:	000c18c0 	call	c18c <__fixdfsi>
   108b0:	1009883a 	mov	r4,r2
   108b4:	1021883a 	mov	r16,r2
   108b8:	000c20c0 	call	c20c <__floatsidf>
   108bc:	9809883a 	mov	r4,r19
   108c0:	900b883a 	mov	r5,r18
   108c4:	100d883a 	mov	r6,r2
   108c8:	180f883a 	mov	r7,r3
   108cc:	8c400044 	addi	r17,r17,1
   108d0:	84000c04 	addi	r16,r16,48
   108d4:	000b82c0 	call	b82c <__subdf3>
   108d8:	8c3fffc5 	stb	r16,-1(r17)
   108dc:	1009883a 	mov	r4,r2
   108e0:	180b883a 	mov	r5,r3
   108e4:	a47fea1e 	bne	r20,r17,10890 <_dtoa_r+0x1418>
   108e8:	dc400d17 	ldw	r17,52(sp)
   108ec:	dcc00e17 	ldw	r19,56(sp)
   108f0:	1021883a 	mov	r16,r2
   108f4:	1825883a 	mov	r18,r3
   108f8:	d9000a17 	ldw	r4,40(sp)
   108fc:	d9400c17 	ldw	r5,48(sp)
   10900:	000d883a 	mov	r6,zero
   10904:	01cff834 	movhi	r7,16352
   10908:	0009c2c0 	call	9c2c <__adddf3>
   1090c:	800d883a 	mov	r6,r16
   10910:	900f883a 	mov	r7,r18
   10914:	1009883a 	mov	r4,r2
   10918:	180b883a 	mov	r5,r3
   1091c:	000af980 	call	af98 <__ledf2>
   10920:	10005916 	blt	r2,zero,10a88 <_dtoa_r+0x1610>
   10924:	d9800a17 	ldw	r6,40(sp)
   10928:	d9c00c17 	ldw	r7,48(sp)
   1092c:	0009883a 	mov	r4,zero
   10930:	014ff834 	movhi	r5,16352
   10934:	000b82c0 	call	b82c <__subdf3>
   10938:	800d883a 	mov	r6,r16
   1093c:	900f883a 	mov	r7,r18
   10940:	1009883a 	mov	r4,r2
   10944:	180b883a 	mov	r5,r3
   10948:	000aeb00 	call	aeb0 <__gedf2>
   1094c:	00bc9f0e 	bge	zero,r2,fbcc <_dtoa_r+0x754>
   10950:	a0bfffc7 	ldb	r2,-1(r20)
   10954:	a011883a 	mov	r8,r20
   10958:	a53fffc4 	addi	r20,r20,-1
   1095c:	10800c20 	cmpeqi	r2,r2,48
   10960:	103ffb1e 	bne	r2,zero,10950 <_dtoa_r+0x14d8>
   10964:	d8801017 	ldw	r2,64(sp)
   10968:	10800044 	addi	r2,r2,1
   1096c:	d8800215 	stw	r2,8(sp)
   10970:	003daa06 	br	1001c <_dtoa_r+0xba4>
   10974:	d8c01117 	ldw	r3,68(sp)
   10978:	d9000417 	ldw	r4,16(sp)
   1097c:	00800d84 	movi	r2,54
   10980:	10c5c83a 	sub	r2,r2,r3
   10984:	b0ad883a 	add	r22,r22,r2
   10988:	2085883a 	add	r2,r4,r2
   1098c:	dd000717 	ldw	r20,28(sp)
   10990:	2025883a 	mov	r18,r4
   10994:	d8800415 	stw	r2,16(sp)
   10998:	003d1106 	br	fde0 <_dtoa_r+0x968>
   1099c:	d9000117 	ldw	r4,4(sp)
   109a0:	003c4e06 	br	fadc <_dtoa_r+0x664>
   109a4:	dcc00a15 	stw	r19,40(sp)
   109a8:	8825883a 	mov	r18,r17
   109ac:	04000084 	movi	r16,2
   109b0:	003bb206 	br	f87c <_dtoa_r+0x404>
   109b4:	d8800317 	ldw	r2,12(sp)
   109b8:	103ee826 	beq	r2,zero,1055c <_dtoa_r+0x10e4>
   109bc:	d8800b17 	ldw	r2,44(sp)
   109c0:	00bc820e 	bge	zero,r2,fbcc <_dtoa_r+0x754>
   109c4:	900b883a 	mov	r5,r18
   109c8:	a009883a 	mov	r4,r20
   109cc:	000d883a 	mov	r6,zero
   109d0:	01d00934 	movhi	r7,16420
   109d4:	000b0800 	call	b080 <__muldf3>
   109d8:	81000044 	addi	r4,r16,1
   109dc:	1029883a 	mov	r20,r2
   109e0:	1825883a 	mov	r18,r3
   109e4:	d8800a15 	stw	r2,40(sp)
   109e8:	000c20c0 	call	c20c <__floatsidf>
   109ec:	a00d883a 	mov	r6,r20
   109f0:	900f883a 	mov	r7,r18
   109f4:	1009883a 	mov	r4,r2
   109f8:	180b883a 	mov	r5,r3
   109fc:	000b0800 	call	b080 <__muldf3>
   10a00:	1009883a 	mov	r4,r2
   10a04:	000d883a 	mov	r6,zero
   10a08:	01d00734 	movhi	r7,16412
   10a0c:	180b883a 	mov	r5,r3
   10a10:	0009c2c0 	call	9c2c <__adddf3>
   10a14:	d9000617 	ldw	r4,24(sp)
   10a18:	1029883a 	mov	r20,r2
   10a1c:	00bf3034 	movhi	r2,64704
   10a20:	1887883a 	add	r3,r3,r2
   10a24:	d8800b17 	ldw	r2,44(sp)
   10a28:	213fffc4 	addi	r4,r4,-1
   10a2c:	d9001015 	stw	r4,64(sp)
   10a30:	d8c00c15 	stw	r3,48(sp)
   10a34:	d8800d15 	stw	r2,52(sp)
   10a38:	003baf06 	br	f8f8 <_dtoa_r+0x480>
   10a3c:	00c00c44 	movi	r3,49
   10a40:	9cc00044 	addi	r19,r19,1
   10a44:	003c2e06 	br	fb00 <_dtoa_r+0x688>
   10a48:	b0800044 	addi	r2,r22,1
   10a4c:	d8800315 	stw	r2,12(sp)
   10a50:	00800e44 	movi	r2,57
   10a54:	b0800005 	stb	r2,0(r22)
   10a58:	d8800617 	ldw	r2,24(sp)
   10a5c:	8023883a 	mov	r17,r16
   10a60:	da000317 	ldw	r8,12(sp)
   10a64:	10800044 	addi	r2,r2,1
   10a68:	d9400117 	ldw	r5,4(sp)
   10a6c:	d8800215 	stw	r2,8(sp)
   10a70:	9021883a 	mov	r16,r18
   10a74:	01000e44 	movi	r4,57
   10a78:	003d4f06 	br	ffb8 <_dtoa_r+0xb40>
   10a7c:	0029883a 	mov	r20,zero
   10a80:	0021883a 	mov	r16,zero
   10a84:	003e7806 	br	10468 <_dtoa_r+0xff0>
   10a88:	d8801017 	ldw	r2,64(sp)
   10a8c:	d9000117 	ldw	r4,4(sp)
   10a90:	14c00044 	addi	r19,r2,1
   10a94:	003c1106 	br	fadc <_dtoa_r+0x664>
   10a98:	103f1f1e 	bne	r2,zero,10718 <_dtoa_r+0x12a0>
   10a9c:	9880004c 	andi	r2,r19,1
   10aa0:	103f1a1e 	bne	r2,zero,1070c <_dtoa_r+0x1294>
   10aa4:	003f1c06 	br	10718 <_dtoa_r+0x12a0>
   10aa8:	d8801017 	ldw	r2,64(sp)
   10aac:	ddc00c17 	ldw	r23,48(sp)
   10ab0:	a811883a 	mov	r8,r21
   10ab4:	10800044 	addi	r2,r2,1
   10ab8:	d8800215 	stw	r2,8(sp)
   10abc:	003d5706 	br	1001c <_dtoa_r+0xba4>
   10ac0:	98800e60 	cmpeqi	r2,r19,57
   10ac4:	103fe01e 	bne	r2,zero,10a48 <_dtoa_r+0x15d0>
   10ac8:	0440010e 	bge	zero,r17,10ad0 <_dtoa_r+0x1658>
   10acc:	acc00c44 	addi	r19,r21,49
   10ad0:	8023883a 	mov	r17,r16
   10ad4:	b2000044 	addi	r8,r22,1
   10ad8:	003f1006 	br	1071c <_dtoa_r+0x12a4>
   10adc:	d8800217 	ldw	r2,8(sp)
   10ae0:	108000c8 	cmpgei	r2,r2,3
   10ae4:	103e511e 	bne	r2,zero,1042c <_dtoa_r+0xfb4>
   10ae8:	dd400615 	stw	r21,24(sp)
   10aec:	003e1406 	br	10340 <_dtoa_r+0xec8>
   10af0:	4029883a 	mov	r20,r8
   10af4:	003f8006 	br	108f8 <_dtoa_r+0x1480>
   10af8:	d8800217 	ldw	r2,8(sp)
   10afc:	108000c8 	cmpgei	r2,r2,3
   10b00:	103e4a1e 	bne	r2,zero,1042c <_dtoa_r+0xfb4>
   10b04:	d8800b17 	ldw	r2,44(sp)
   10b08:	dd400615 	stw	r21,24(sp)
   10b0c:	d8800315 	stw	r2,12(sp)
   10b10:	04bdb60e 	bge	zero,r18,101ec <_dtoa_r+0xd74>
   10b14:	003e6506 	br	104ac <_dtoa_r+0x1034>
   10b18:	04000084 	movi	r16,2
   10b1c:	003b5706 	br	f87c <_dtoa_r+0x404>
   10b20:	01c000b4 	movhi	r7,2
   10b24:	010000b4 	movhi	r4,2
   10b28:	39ea7204 	addi	r7,r7,-22072
   10b2c:	000d883a 	mov	r6,zero
   10b30:	01406a84 	movi	r5,426
   10b34:	212a7704 	addi	r4,r4,-22052
   10b38:	00147d00 	call	147d0 <__assert_func>
   10b3c:	000b883a 	mov	r5,zero
   10b40:	003b1006 	br	f784 <_dtoa_r+0x30c>
   10b44:	e0001115 	stw	zero,68(fp)
   10b48:	000b883a 	mov	r5,zero
   10b4c:	e009883a 	mov	r4,fp
   10b50:	0011bf80 	call	11bf8 <_Balloc>
   10b54:	d8800115 	stw	r2,4(sp)
   10b58:	103ff126 	beq	r2,zero,10b20 <_dtoa_r+0x16a8>
   10b5c:	d8800117 	ldw	r2,4(sp)
   10b60:	d8001d15 	stw	zero,116(sp)
   10b64:	e0801015 	stw	r2,64(fp)
   10b68:	00bfffc4 	movi	r2,-1
   10b6c:	d8800315 	stw	r2,12(sp)
   10b70:	d8800b15 	stw	r2,44(sp)
   10b74:	00800044 	movi	r2,1
   10b78:	d8800515 	stw	r2,20(sp)
   10b7c:	003c1306 	br	fbcc <_dtoa_r+0x754>
   10b80:	01c000b4 	movhi	r7,2
   10b84:	010000b4 	movhi	r4,2
   10b88:	39ea7204 	addi	r7,r7,-22072
   10b8c:	000d883a 	mov	r6,zero
   10b90:	0140ba84 	movi	r5,746
   10b94:	212a7704 	addi	r4,r4,-22052
   10b98:	00147d00 	call	147d0 <__assert_func>
   10b9c:	008000b4 	movhi	r2,2
   10ba0:	10aa6f04 	addi	r2,r2,-22084
   10ba4:	d8800115 	stw	r2,4(sp)
   10ba8:	003a6506 	br	f540 <_dtoa_r+0xc8>
   10bac:	18c00120 	cmpeqi	r3,r3,4
   10bb0:	183cc81e 	bne	r3,zero,fed4 <_dtoa_r+0xa5c>
   10bb4:	00c00f04 	movi	r3,60
   10bb8:	1885c83a 	sub	r2,r3,r2
   10bbc:	003cc006 	br	fec0 <_dtoa_r+0xa48>

00010bc0 <__sflush_r>:
   10bc0:	2880030b 	ldhu	r2,12(r5)
   10bc4:	defffb04 	addi	sp,sp,-20
   10bc8:	dcc00315 	stw	r19,12(sp)
   10bcc:	dc000015 	stw	r16,0(sp)
   10bd0:	dfc00415 	stw	ra,16(sp)
   10bd4:	dc800215 	stw	r18,8(sp)
   10bd8:	dc400115 	stw	r17,4(sp)
   10bdc:	10c0020c 	andi	r3,r2,8
   10be0:	2821883a 	mov	r16,r5
   10be4:	2027883a 	mov	r19,r4
   10be8:	18003f1e 	bne	r3,zero,10ce8 <__sflush_r+0x128>
   10bec:	28c00117 	ldw	r3,4(r5)
   10bf0:	10820014 	ori	r2,r2,2048
   10bf4:	2880030d 	sth	r2,12(r5)
   10bf8:	00c0550e 	bge	zero,r3,10d50 <__sflush_r+0x190>
   10bfc:	82000a17 	ldw	r8,40(r16)
   10c00:	40003126 	beq	r8,zero,10cc8 <__sflush_r+0x108>
   10c04:	9c400017 	ldw	r17,0(r19)
   10c08:	1104000c 	andi	r4,r2,4096
   10c0c:	98000015 	stw	zero,0(r19)
   10c10:	1007883a 	mov	r3,r2
   10c14:	2000531e 	bne	r4,zero,10d64 <__sflush_r+0x1a4>
   10c18:	81400717 	ldw	r5,28(r16)
   10c1c:	01c00044 	movi	r7,1
   10c20:	000d883a 	mov	r6,zero
   10c24:	9809883a 	mov	r4,r19
   10c28:	403ee83a 	callr	r8
   10c2c:	10ffffd8 	cmpnei	r3,r2,-1
   10c30:	18005826 	beq	r3,zero,10d94 <__sflush_r+0x1d4>
   10c34:	80c0030b 	ldhu	r3,12(r16)
   10c38:	82000a17 	ldw	r8,40(r16)
   10c3c:	18c0010c 	andi	r3,r3,4
   10c40:	18000626 	beq	r3,zero,10c5c <__sflush_r+0x9c>
   10c44:	81000117 	ldw	r4,4(r16)
   10c48:	80c00c17 	ldw	r3,48(r16)
   10c4c:	1105c83a 	sub	r2,r2,r4
   10c50:	18000226 	beq	r3,zero,10c5c <__sflush_r+0x9c>
   10c54:	80c00f17 	ldw	r3,60(r16)
   10c58:	10c5c83a 	sub	r2,r2,r3
   10c5c:	81400717 	ldw	r5,28(r16)
   10c60:	100d883a 	mov	r6,r2
   10c64:	000f883a 	mov	r7,zero
   10c68:	9809883a 	mov	r4,r19
   10c6c:	403ee83a 	callr	r8
   10c70:	10ffffd8 	cmpnei	r3,r2,-1
   10c74:	18003d1e 	bne	r3,zero,10d6c <__sflush_r+0x1ac>
   10c78:	99000017 	ldw	r4,0(r19)
   10c7c:	80c0030b 	ldhu	r3,12(r16)
   10c80:	20004e26 	beq	r4,zero,10dbc <__sflush_r+0x1fc>
   10c84:	21400760 	cmpeqi	r5,r4,29
   10c88:	2800021e 	bne	r5,zero,10c94 <__sflush_r+0xd4>
   10c8c:	210005a0 	cmpeqi	r4,r4,22
   10c90:	20002c26 	beq	r4,zero,10d44 <__sflush_r+0x184>
   10c94:	80800417 	ldw	r2,16(r16)
   10c98:	18fdffcc 	andi	r3,r3,63487
   10c9c:	80c0030d 	sth	r3,12(r16)
   10ca0:	80000115 	stw	zero,4(r16)
   10ca4:	80800015 	stw	r2,0(r16)
   10ca8:	81400c17 	ldw	r5,48(r16)
   10cac:	9c400015 	stw	r17,0(r19)
   10cb0:	28000526 	beq	r5,zero,10cc8 <__sflush_r+0x108>
   10cb4:	80801004 	addi	r2,r16,64
   10cb8:	28800226 	beq	r5,r2,10cc4 <__sflush_r+0x104>
   10cbc:	9809883a 	mov	r4,r19
   10cc0:	00113940 	call	11394 <_free_r>
   10cc4:	80000c15 	stw	zero,48(r16)
   10cc8:	0005883a 	mov	r2,zero
   10ccc:	dfc00417 	ldw	ra,16(sp)
   10cd0:	dcc00317 	ldw	r19,12(sp)
   10cd4:	dc800217 	ldw	r18,8(sp)
   10cd8:	dc400117 	ldw	r17,4(sp)
   10cdc:	dc000017 	ldw	r16,0(sp)
   10ce0:	dec00504 	addi	sp,sp,20
   10ce4:	f800283a 	ret
   10ce8:	2c800417 	ldw	r18,16(r5)
   10cec:	903ff626 	beq	r18,zero,10cc8 <__sflush_r+0x108>
   10cf0:	2c400017 	ldw	r17,0(r5)
   10cf4:	108000cc 	andi	r2,r2,3
   10cf8:	2c800015 	stw	r18,0(r5)
   10cfc:	8ca3c83a 	sub	r17,r17,r18
   10d00:	1000161e 	bne	r2,zero,10d5c <__sflush_r+0x19c>
   10d04:	28800517 	ldw	r2,20(r5)
   10d08:	80800215 	stw	r2,8(r16)
   10d0c:	04400316 	blt	zero,r17,10d1c <__sflush_r+0x15c>
   10d10:	003fed06 	br	10cc8 <__sflush_r+0x108>
   10d14:	90a5883a 	add	r18,r18,r2
   10d18:	047feb0e 	bge	zero,r17,10cc8 <__sflush_r+0x108>
   10d1c:	80800917 	ldw	r2,36(r16)
   10d20:	81400717 	ldw	r5,28(r16)
   10d24:	880f883a 	mov	r7,r17
   10d28:	900d883a 	mov	r6,r18
   10d2c:	9809883a 	mov	r4,r19
   10d30:	103ee83a 	callr	r2
   10d34:	88a3c83a 	sub	r17,r17,r2
   10d38:	00bff616 	blt	zero,r2,10d14 <__sflush_r+0x154>
   10d3c:	80c0030b 	ldhu	r3,12(r16)
   10d40:	00bfffc4 	movi	r2,-1
   10d44:	18c01014 	ori	r3,r3,64
   10d48:	80c0030d 	sth	r3,12(r16)
   10d4c:	003fdf06 	br	10ccc <__sflush_r+0x10c>
   10d50:	28c00f17 	ldw	r3,60(r5)
   10d54:	00ffa916 	blt	zero,r3,10bfc <__sflush_r+0x3c>
   10d58:	003fdb06 	br	10cc8 <__sflush_r+0x108>
   10d5c:	0005883a 	mov	r2,zero
   10d60:	003fe906 	br	10d08 <__sflush_r+0x148>
   10d64:	80801417 	ldw	r2,80(r16)
   10d68:	003fb406 	br	10c3c <__sflush_r+0x7c>
   10d6c:	80c0030b 	ldhu	r3,12(r16)
   10d70:	81000417 	ldw	r4,16(r16)
   10d74:	80000115 	stw	zero,4(r16)
   10d78:	197dffcc 	andi	r5,r3,63487
   10d7c:	8140030d 	sth	r5,12(r16)
   10d80:	81000015 	stw	r4,0(r16)
   10d84:	18c4000c 	andi	r3,r3,4096
   10d88:	183fc726 	beq	r3,zero,10ca8 <__sflush_r+0xe8>
   10d8c:	80801415 	stw	r2,80(r16)
   10d90:	003fc506 	br	10ca8 <__sflush_r+0xe8>
   10d94:	98c00017 	ldw	r3,0(r19)
   10d98:	183fa626 	beq	r3,zero,10c34 <__sflush_r+0x74>
   10d9c:	19000760 	cmpeqi	r4,r3,29
   10da0:	20000e1e 	bne	r4,zero,10ddc <__sflush_r+0x21c>
   10da4:	18c00598 	cmpnei	r3,r3,22
   10da8:	18000c26 	beq	r3,zero,10ddc <__sflush_r+0x21c>
   10dac:	80c0030b 	ldhu	r3,12(r16)
   10db0:	18c01014 	ori	r3,r3,64
   10db4:	80c0030d 	sth	r3,12(r16)
   10db8:	003fc406 	br	10ccc <__sflush_r+0x10c>
   10dbc:	81000417 	ldw	r4,16(r16)
   10dc0:	197dffcc 	andi	r5,r3,63487
   10dc4:	8140030d 	sth	r5,12(r16)
   10dc8:	80000115 	stw	zero,4(r16)
   10dcc:	81000015 	stw	r4,0(r16)
   10dd0:	18c4000c 	andi	r3,r3,4096
   10dd4:	183fb426 	beq	r3,zero,10ca8 <__sflush_r+0xe8>
   10dd8:	003fec06 	br	10d8c <__sflush_r+0x1cc>
   10ddc:	9c400015 	stw	r17,0(r19)
   10de0:	0005883a 	mov	r2,zero
   10de4:	003fb906 	br	10ccc <__sflush_r+0x10c>

00010de8 <_fflush_r>:
   10de8:	defffd04 	addi	sp,sp,-12
   10dec:	dc000115 	stw	r16,4(sp)
   10df0:	dfc00215 	stw	ra,8(sp)
   10df4:	2021883a 	mov	r16,r4
   10df8:	20000226 	beq	r4,zero,10e04 <_fflush_r+0x1c>
   10dfc:	20800e17 	ldw	r2,56(r4)
   10e00:	10000726 	beq	r2,zero,10e20 <_fflush_r+0x38>
   10e04:	2880030f 	ldh	r2,12(r5)
   10e08:	10000a1e 	bne	r2,zero,10e34 <_fflush_r+0x4c>
   10e0c:	0005883a 	mov	r2,zero
   10e10:	dfc00217 	ldw	ra,8(sp)
   10e14:	dc000117 	ldw	r16,4(sp)
   10e18:	dec00304 	addi	sp,sp,12
   10e1c:	f800283a 	ret
   10e20:	d9400015 	stw	r5,0(sp)
   10e24:	00112300 	call	11230 <__sinit>
   10e28:	d9400017 	ldw	r5,0(sp)
   10e2c:	2880030f 	ldh	r2,12(r5)
   10e30:	103ff626 	beq	r2,zero,10e0c <_fflush_r+0x24>
   10e34:	8009883a 	mov	r4,r16
   10e38:	dfc00217 	ldw	ra,8(sp)
   10e3c:	dc000117 	ldw	r16,4(sp)
   10e40:	dec00304 	addi	sp,sp,12
   10e44:	0010bc01 	jmpi	10bc0 <__sflush_r>

00010e48 <fflush>:
   10e48:	20001726 	beq	r4,zero,10ea8 <fflush+0x60>
   10e4c:	008000b4 	movhi	r2,2
   10e50:	200b883a 	mov	r5,r4
   10e54:	1132d417 	ldw	r4,-13488(r2)
   10e58:	20000226 	beq	r4,zero,10e64 <fflush+0x1c>
   10e5c:	20800e17 	ldw	r2,56(r4)
   10e60:	10000526 	beq	r2,zero,10e78 <fflush+0x30>
   10e64:	2880030f 	ldh	r2,12(r5)
   10e68:	1000021e 	bne	r2,zero,10e74 <fflush+0x2c>
   10e6c:	0005883a 	mov	r2,zero
   10e70:	f800283a 	ret
   10e74:	0010bc01 	jmpi	10bc0 <__sflush_r>
   10e78:	defffd04 	addi	sp,sp,-12
   10e7c:	d9400115 	stw	r5,4(sp)
   10e80:	d9000015 	stw	r4,0(sp)
   10e84:	dfc00215 	stw	ra,8(sp)
   10e88:	00112300 	call	11230 <__sinit>
   10e8c:	d9400117 	ldw	r5,4(sp)
   10e90:	d9000017 	ldw	r4,0(sp)
   10e94:	2880030f 	ldh	r2,12(r5)
   10e98:	10000826 	beq	r2,zero,10ebc <fflush+0x74>
   10e9c:	dfc00217 	ldw	ra,8(sp)
   10ea0:	dec00304 	addi	sp,sp,12
   10ea4:	0010bc01 	jmpi	10bc0 <__sflush_r>
   10ea8:	008000b4 	movhi	r2,2
   10eac:	1132d317 	ldw	r4,-13492(r2)
   10eb0:	01400074 	movhi	r5,1
   10eb4:	29437a04 	addi	r5,r5,3560
   10eb8:	00117281 	jmpi	11728 <_fwalk_reent>
   10ebc:	0005883a 	mov	r2,zero
   10ec0:	dfc00217 	ldw	ra,8(sp)
   10ec4:	dec00304 	addi	sp,sp,12
   10ec8:	f800283a 	ret

00010ecc <__fp_lock>:
   10ecc:	0005883a 	mov	r2,zero
   10ed0:	f800283a 	ret

00010ed4 <_cleanup_r>:
   10ed4:	01400074 	movhi	r5,1
   10ed8:	29529704 	addi	r5,r5,19036
   10edc:	00117281 	jmpi	11728 <_fwalk_reent>

00010ee0 <__fp_unlock>:
   10ee0:	0005883a 	mov	r2,zero
   10ee4:	f800283a 	ret

00010ee8 <__sinit.part.0>:
   10ee8:	00c00074 	movhi	r3,1
   10eec:	20800117 	ldw	r2,4(r4)
   10ef0:	18c3b504 	addi	r3,r3,3796
   10ef4:	20c00f15 	stw	r3,60(r4)
   10ef8:	2140bb04 	addi	r5,r4,748
   10efc:	00c000c4 	movi	r3,3
   10f00:	20c0b915 	stw	r3,740(r4)
   10f04:	2140ba15 	stw	r5,744(r4)
   10f08:	2000b815 	stw	zero,736(r4)
   10f0c:	10001705 	stb	zero,92(r2)
   10f10:	10001745 	stb	zero,93(r2)
   10f14:	10001785 	stb	zero,94(r2)
   10f18:	100017c5 	stb	zero,95(r2)
   10f1c:	10001805 	stb	zero,96(r2)
   10f20:	10001845 	stb	zero,97(r2)
   10f24:	10001885 	stb	zero,98(r2)
   10f28:	100018c5 	stb	zero,99(r2)
   10f2c:	00c00104 	movi	r3,4
   10f30:	10c00315 	stw	r3,12(r2)
   10f34:	02000074 	movhi	r8,1
   10f38:	20c00217 	ldw	r3,8(r4)
   10f3c:	01c00074 	movhi	r7,1
   10f40:	01800074 	movhi	r6,1
   10f44:	01400074 	movhi	r5,1
   10f48:	420be504 	addi	r8,r8,12180
   10f4c:	39cbfc04 	addi	r7,r7,12272
   10f50:	318c1c04 	addi	r6,r6,12400
   10f54:	294c3304 	addi	r5,r5,12492
   10f58:	02400074 	movhi	r9,1
   10f5c:	10001915 	stw	zero,100(r2)
   10f60:	10000015 	stw	zero,0(r2)
   10f64:	10000115 	stw	zero,4(r2)
   10f68:	10000215 	stw	zero,8(r2)
   10f6c:	10000415 	stw	zero,16(r2)
   10f70:	10000515 	stw	zero,20(r2)
   10f74:	10000615 	stw	zero,24(r2)
   10f78:	10800715 	stw	r2,28(r2)
   10f7c:	12000815 	stw	r8,32(r2)
   10f80:	11c00915 	stw	r7,36(r2)
   10f84:	11800a15 	stw	r6,40(r2)
   10f88:	11400b15 	stw	r5,44(r2)
   10f8c:	4a400284 	addi	r9,r9,10
   10f90:	1a400315 	stw	r9,12(r3)
   10f94:	18001915 	stw	zero,100(r3)
   10f98:	18000015 	stw	zero,0(r3)
   10f9c:	18000115 	stw	zero,4(r3)
   10fa0:	18000215 	stw	zero,8(r3)
   10fa4:	18000415 	stw	zero,16(r3)
   10fa8:	18001705 	stb	zero,92(r3)
   10fac:	18001745 	stb	zero,93(r3)
   10fb0:	18001785 	stb	zero,94(r3)
   10fb4:	180017c5 	stb	zero,95(r3)
   10fb8:	18001805 	stb	zero,96(r3)
   10fbc:	18001845 	stb	zero,97(r3)
   10fc0:	18001885 	stb	zero,98(r3)
   10fc4:	180018c5 	stb	zero,99(r3)
   10fc8:	20800317 	ldw	r2,12(r4)
   10fcc:	024000b4 	movhi	r9,2
   10fd0:	18000515 	stw	zero,20(r3)
   10fd4:	18000615 	stw	zero,24(r3)
   10fd8:	18c00715 	stw	r3,28(r3)
   10fdc:	1a000815 	stw	r8,32(r3)
   10fe0:	19c00915 	stw	r7,36(r3)
   10fe4:	19800a15 	stw	r6,40(r3)
   10fe8:	19400b15 	stw	r5,44(r3)
   10fec:	4a400484 	addi	r9,r9,18
   10ff0:	10001915 	stw	zero,100(r2)
   10ff4:	10000015 	stw	zero,0(r2)
   10ff8:	10000115 	stw	zero,4(r2)
   10ffc:	10000215 	stw	zero,8(r2)
   11000:	12400315 	stw	r9,12(r2)
   11004:	10000415 	stw	zero,16(r2)
   11008:	10000515 	stw	zero,20(r2)
   1100c:	10000615 	stw	zero,24(r2)
   11010:	10001705 	stb	zero,92(r2)
   11014:	10001745 	stb	zero,93(r2)
   11018:	10001785 	stb	zero,94(r2)
   1101c:	100017c5 	stb	zero,95(r2)
   11020:	10001805 	stb	zero,96(r2)
   11024:	10001845 	stb	zero,97(r2)
   11028:	10001885 	stb	zero,98(r2)
   1102c:	100018c5 	stb	zero,99(r2)
   11030:	10800715 	stw	r2,28(r2)
   11034:	12000815 	stw	r8,32(r2)
   11038:	11c00915 	stw	r7,36(r2)
   1103c:	11800a15 	stw	r6,40(r2)
   11040:	11400b15 	stw	r5,44(r2)
   11044:	00800044 	movi	r2,1
   11048:	20800e15 	stw	r2,56(r4)
   1104c:	f800283a 	ret

00011050 <__sfmoreglue>:
   11050:	defffc04 	addi	sp,sp,-16
   11054:	dc800215 	stw	r18,8(sp)
   11058:	2825883a 	mov	r18,r5
   1105c:	dc000015 	stw	r16,0(sp)
   11060:	01401a04 	movi	r5,104
   11064:	2021883a 	mov	r16,r4
   11068:	913fffc4 	addi	r4,r18,-1
   1106c:	dfc00315 	stw	ra,12(sp)
   11070:	dc400115 	stw	r17,4(sp)
   11074:	0008b4c0 	call	8b4c <__mulsi3>
   11078:	8009883a 	mov	r4,r16
   1107c:	11401d04 	addi	r5,r2,116
   11080:	1023883a 	mov	r17,r2
   11084:	000c6400 	call	c640 <_malloc_r>
   11088:	1021883a 	mov	r16,r2
   1108c:	10000726 	beq	r2,zero,110ac <__sfmoreglue+0x5c>
   11090:	11000304 	addi	r4,r2,12
   11094:	10000015 	stw	zero,0(r2)
   11098:	14800115 	stw	r18,4(r2)
   1109c:	11000215 	stw	r4,8(r2)
   110a0:	89801a04 	addi	r6,r17,104
   110a4:	000b883a 	mov	r5,zero
   110a8:	0011b080 	call	11b08 <memset>
   110ac:	8005883a 	mov	r2,r16
   110b0:	dfc00317 	ldw	ra,12(sp)
   110b4:	dc800217 	ldw	r18,8(sp)
   110b8:	dc400117 	ldw	r17,4(sp)
   110bc:	dc000017 	ldw	r16,0(sp)
   110c0:	dec00404 	addi	sp,sp,16
   110c4:	f800283a 	ret

000110c8 <__sfp>:
   110c8:	defffb04 	addi	sp,sp,-20
   110cc:	008000b4 	movhi	r2,2
   110d0:	dc000015 	stw	r16,0(sp)
   110d4:	1432d317 	ldw	r16,-13492(r2)
   110d8:	dc400115 	stw	r17,4(sp)
   110dc:	dfc00415 	stw	ra,16(sp)
   110e0:	80800e17 	ldw	r2,56(r16)
   110e4:	dcc00315 	stw	r19,12(sp)
   110e8:	dc800215 	stw	r18,8(sp)
   110ec:	2023883a 	mov	r17,r4
   110f0:	10003126 	beq	r2,zero,111b8 <__sfp+0xf0>
   110f4:	8100ba17 	ldw	r4,744(r16)
   110f8:	8140b917 	ldw	r5,740(r16)
   110fc:	04c00104 	movi	r19,4
   11100:	8400b804 	addi	r16,r16,736
   11104:	297fffc4 	addi	r5,r5,-1
   11108:	2800050e 	bge	r5,zero,11120 <__sfp+0x58>
   1110c:	00002406 	br	111a0 <__sfp+0xd8>
   11110:	297fffc4 	addi	r5,r5,-1
   11114:	28bfffd8 	cmpnei	r2,r5,-1
   11118:	21001a04 	addi	r4,r4,104
   1111c:	10002026 	beq	r2,zero,111a0 <__sfp+0xd8>
   11120:	2080030f 	ldh	r2,12(r4)
   11124:	103ffa1e 	bne	r2,zero,11110 <__sfp+0x48>
   11128:	00bffff4 	movhi	r2,65535
   1112c:	10800044 	addi	r2,r2,1
   11130:	20001915 	stw	zero,100(r4)
   11134:	20000015 	stw	zero,0(r4)
   11138:	20000115 	stw	zero,4(r4)
   1113c:	20000215 	stw	zero,8(r4)
   11140:	20800315 	stw	r2,12(r4)
   11144:	20000415 	stw	zero,16(r4)
   11148:	20000515 	stw	zero,20(r4)
   1114c:	20000615 	stw	zero,24(r4)
   11150:	20001705 	stb	zero,92(r4)
   11154:	20001745 	stb	zero,93(r4)
   11158:	20001785 	stb	zero,94(r4)
   1115c:	200017c5 	stb	zero,95(r4)
   11160:	20001805 	stb	zero,96(r4)
   11164:	20001845 	stb	zero,97(r4)
   11168:	20001885 	stb	zero,98(r4)
   1116c:	200018c5 	stb	zero,99(r4)
   11170:	20000c15 	stw	zero,48(r4)
   11174:	20000d15 	stw	zero,52(r4)
   11178:	20001115 	stw	zero,68(r4)
   1117c:	20001215 	stw	zero,72(r4)
   11180:	2005883a 	mov	r2,r4
   11184:	dfc00417 	ldw	ra,16(sp)
   11188:	dcc00317 	ldw	r19,12(sp)
   1118c:	dc800217 	ldw	r18,8(sp)
   11190:	dc400117 	ldw	r17,4(sp)
   11194:	dc000017 	ldw	r16,0(sp)
   11198:	dec00504 	addi	sp,sp,20
   1119c:	f800283a 	ret
   111a0:	80800017 	ldw	r2,0(r16)
   111a4:	10000726 	beq	r2,zero,111c4 <__sfp+0xfc>
   111a8:	11000217 	ldw	r4,8(r2)
   111ac:	11400117 	ldw	r5,4(r2)
   111b0:	1021883a 	mov	r16,r2
   111b4:	003fd306 	br	11104 <__sfp+0x3c>
   111b8:	8009883a 	mov	r4,r16
   111bc:	0010ee80 	call	10ee8 <__sinit.part.0>
   111c0:	003fcc06 	br	110f4 <__sfp+0x2c>
   111c4:	01406b04 	movi	r5,428
   111c8:	8809883a 	mov	r4,r17
   111cc:	000c6400 	call	c640 <_malloc_r>
   111d0:	1025883a 	mov	r18,r2
   111d4:	10000c26 	beq	r2,zero,11208 <__sfp+0x140>
   111d8:	11000304 	addi	r4,r2,12
   111dc:	11000215 	stw	r4,8(r2)
   111e0:	000b883a 	mov	r5,zero
   111e4:	10000015 	stw	zero,0(r2)
   111e8:	14c00115 	stw	r19,4(r2)
   111ec:	01806804 	movi	r6,416
   111f0:	0011b080 	call	11b08 <memset>
   111f4:	1009883a 	mov	r4,r2
   111f8:	84800015 	stw	r18,0(r16)
   111fc:	014000c4 	movi	r5,3
   11200:	9021883a 	mov	r16,r18
   11204:	003fc606 	br	11120 <__sfp+0x58>
   11208:	80000015 	stw	zero,0(r16)
   1120c:	00800304 	movi	r2,12
   11210:	88800015 	stw	r2,0(r17)
   11214:	0009883a 	mov	r4,zero
   11218:	003fd906 	br	11180 <__sfp+0xb8>

0001121c <_cleanup>:
   1121c:	008000b4 	movhi	r2,2
   11220:	1132d317 	ldw	r4,-13492(r2)
   11224:	01400074 	movhi	r5,1
   11228:	29529704 	addi	r5,r5,19036
   1122c:	00117281 	jmpi	11728 <_fwalk_reent>

00011230 <__sinit>:
   11230:	20800e17 	ldw	r2,56(r4)
   11234:	10000126 	beq	r2,zero,1123c <__sinit+0xc>
   11238:	f800283a 	ret
   1123c:	0010ee81 	jmpi	10ee8 <__sinit.part.0>

00011240 <__sfp_lock_acquire>:
   11240:	f800283a 	ret

00011244 <__sfp_lock_release>:
   11244:	f800283a 	ret

00011248 <__sinit_lock_acquire>:
   11248:	f800283a 	ret

0001124c <__sinit_lock_release>:
   1124c:	f800283a 	ret

00011250 <__fp_lock_all>:
   11250:	008000b4 	movhi	r2,2
   11254:	1132d417 	ldw	r4,-13488(r2)
   11258:	01400074 	movhi	r5,1
   1125c:	2943b304 	addi	r5,r5,3788
   11260:	00116901 	jmpi	11690 <_fwalk>

00011264 <__fp_unlock_all>:
   11264:	008000b4 	movhi	r2,2
   11268:	1132d417 	ldw	r4,-13488(r2)
   1126c:	01400074 	movhi	r5,1
   11270:	2943b804 	addi	r5,r5,3808
   11274:	00116901 	jmpi	11690 <_fwalk>

00011278 <_malloc_trim_r>:
   11278:	defffb04 	addi	sp,sp,-20
   1127c:	dcc00315 	stw	r19,12(sp)
   11280:	04c000b4 	movhi	r19,2
   11284:	dc800215 	stw	r18,8(sp)
   11288:	dc400115 	stw	r17,4(sp)
   1128c:	dc000015 	stw	r16,0(sp)
   11290:	dfc00415 	stw	ra,16(sp)
   11294:	2821883a 	mov	r16,r5
   11298:	9cecc604 	addi	r19,r19,-19688
   1129c:	2025883a 	mov	r18,r4
   112a0:	00175f80 	call	175f8 <__malloc_lock>
   112a4:	98800217 	ldw	r2,8(r19)
   112a8:	14400117 	ldw	r17,4(r2)
   112ac:	00bfff04 	movi	r2,-4
   112b0:	88a2703a 	and	r17,r17,r2
   112b4:	8c21c83a 	sub	r16,r17,r16
   112b8:	8403fbc4 	addi	r16,r16,4079
   112bc:	8020d33a 	srli	r16,r16,12
   112c0:	843fffc4 	addi	r16,r16,-1
   112c4:	8020933a 	slli	r16,r16,12
   112c8:	80840008 	cmpgei	r2,r16,4096
   112cc:	10000626 	beq	r2,zero,112e8 <_malloc_trim_r+0x70>
   112d0:	000b883a 	mov	r5,zero
   112d4:	9009883a 	mov	r4,r18
   112d8:	000cfa80 	call	cfa8 <_sbrk_r>
   112dc:	98c00217 	ldw	r3,8(r19)
   112e0:	1c47883a 	add	r3,r3,r17
   112e4:	10c00a26 	beq	r2,r3,11310 <_malloc_trim_r+0x98>
   112e8:	9009883a 	mov	r4,r18
   112ec:	001761c0 	call	1761c <__malloc_unlock>
   112f0:	0005883a 	mov	r2,zero
   112f4:	dfc00417 	ldw	ra,16(sp)
   112f8:	dcc00317 	ldw	r19,12(sp)
   112fc:	dc800217 	ldw	r18,8(sp)
   11300:	dc400117 	ldw	r17,4(sp)
   11304:	dc000017 	ldw	r16,0(sp)
   11308:	dec00504 	addi	sp,sp,20
   1130c:	f800283a 	ret
   11310:	040bc83a 	sub	r5,zero,r16
   11314:	9009883a 	mov	r4,r18
   11318:	000cfa80 	call	cfa8 <_sbrk_r>
   1131c:	10bfffd8 	cmpnei	r2,r2,-1
   11320:	10000d26 	beq	r2,zero,11358 <_malloc_trim_r+0xe0>
   11324:	008000b4 	movhi	r2,2
   11328:	10ba1317 	ldw	r2,-6068(r2)
   1132c:	98c00217 	ldw	r3,8(r19)
   11330:	8c23c83a 	sub	r17,r17,r16
   11334:	8c400054 	ori	r17,r17,1
   11338:	1421c83a 	sub	r16,r2,r16
   1133c:	1c400115 	stw	r17,4(r3)
   11340:	008000b4 	movhi	r2,2
   11344:	9009883a 	mov	r4,r18
   11348:	143a1315 	stw	r16,-6068(r2)
   1134c:	001761c0 	call	1761c <__malloc_unlock>
   11350:	00800044 	movi	r2,1
   11354:	003fe706 	br	112f4 <_malloc_trim_r+0x7c>
   11358:	000b883a 	mov	r5,zero
   1135c:	9009883a 	mov	r4,r18
   11360:	000cfa80 	call	cfa8 <_sbrk_r>
   11364:	99000217 	ldw	r4,8(r19)
   11368:	1107c83a 	sub	r3,r2,r4
   1136c:	19400410 	cmplti	r5,r3,16
   11370:	283fdd1e 	bne	r5,zero,112e8 <_malloc_trim_r+0x70>
   11374:	014000b4 	movhi	r5,2
   11378:	2972d517 	ldw	r5,-13484(r5)
   1137c:	18c00054 	ori	r3,r3,1
   11380:	20c00115 	stw	r3,4(r4)
   11384:	1145c83a 	sub	r2,r2,r5
   11388:	014000b4 	movhi	r5,2
   1138c:	28ba1315 	stw	r2,-6068(r5)
   11390:	003fd506 	br	112e8 <_malloc_trim_r+0x70>

00011394 <_free_r>:
   11394:	28004f26 	beq	r5,zero,114d4 <_free_r+0x140>
   11398:	defffd04 	addi	sp,sp,-12
   1139c:	dc400115 	stw	r17,4(sp)
   113a0:	dc000015 	stw	r16,0(sp)
   113a4:	2023883a 	mov	r17,r4
   113a8:	2821883a 	mov	r16,r5
   113ac:	dfc00215 	stw	ra,8(sp)
   113b0:	00175f80 	call	175f8 <__malloc_lock>
   113b4:	81ffff17 	ldw	r7,-4(r16)
   113b8:	00bfff84 	movi	r2,-2
   113bc:	80fffe04 	addi	r3,r16,-8
   113c0:	3884703a 	and	r2,r7,r2
   113c4:	010000b4 	movhi	r4,2
   113c8:	188d883a 	add	r6,r3,r2
   113cc:	212cc604 	addi	r4,r4,-19688
   113d0:	31400117 	ldw	r5,4(r6)
   113d4:	22000217 	ldw	r8,8(r4)
   113d8:	027fff04 	movi	r9,-4
   113dc:	2a4a703a 	and	r5,r5,r9
   113e0:	41806426 	beq	r8,r6,11574 <_free_r+0x1e0>
   113e4:	31400115 	stw	r5,4(r6)
   113e8:	39c0004c 	andi	r7,r7,1
   113ec:	3151883a 	add	r8,r6,r5
   113f0:	3800281e 	bne	r7,zero,11494 <_free_r+0x100>
   113f4:	82bffe17 	ldw	r10,-8(r16)
   113f8:	42000117 	ldw	r8,4(r8)
   113fc:	01c000b4 	movhi	r7,2
   11400:	1a87c83a 	sub	r3,r3,r10
   11404:	1a400217 	ldw	r9,8(r3)
   11408:	39ecc804 	addi	r7,r7,-19680
   1140c:	1285883a 	add	r2,r2,r10
   11410:	4200004c 	andi	r8,r8,1
   11414:	49c04c26 	beq	r9,r7,11548 <_free_r+0x1b4>
   11418:	1a800317 	ldw	r10,12(r3)
   1141c:	4a800315 	stw	r10,12(r9)
   11420:	52400215 	stw	r9,8(r10)
   11424:	40007126 	beq	r8,zero,115ec <_free_r+0x258>
   11428:	11400054 	ori	r5,r2,1
   1142c:	19400115 	stw	r5,4(r3)
   11430:	30800015 	stw	r2,0(r6)
   11434:	11408028 	cmpgeui	r5,r2,512
   11438:	28002c1e 	bne	r5,zero,114ec <_free_r+0x158>
   1143c:	100ad0fa 	srli	r5,r2,3
   11440:	100cd17a 	srli	r6,r2,5
   11444:	00800044 	movi	r2,1
   11448:	29400044 	addi	r5,r5,1
   1144c:	280a90fa 	slli	r5,r5,3
   11450:	21c00117 	ldw	r7,4(r4)
   11454:	1184983a 	sll	r2,r2,r6
   11458:	214b883a 	add	r5,r4,r5
   1145c:	29800017 	ldw	r6,0(r5)
   11460:	11c4b03a 	or	r2,r2,r7
   11464:	29fffe04 	addi	r7,r5,-8
   11468:	19c00315 	stw	r7,12(r3)
   1146c:	19800215 	stw	r6,8(r3)
   11470:	20800115 	stw	r2,4(r4)
   11474:	28c00015 	stw	r3,0(r5)
   11478:	30c00315 	stw	r3,12(r6)
   1147c:	8809883a 	mov	r4,r17
   11480:	dfc00217 	ldw	ra,8(sp)
   11484:	dc400117 	ldw	r17,4(sp)
   11488:	dc000017 	ldw	r16,0(sp)
   1148c:	dec00304 	addi	sp,sp,12
   11490:	001761c1 	jmpi	1761c <__malloc_unlock>
   11494:	41c00117 	ldw	r7,4(r8)
   11498:	39c0004c 	andi	r7,r7,1
   1149c:	38000e1e 	bne	r7,zero,114d8 <_free_r+0x144>
   114a0:	01c000b4 	movhi	r7,2
   114a4:	1145883a 	add	r2,r2,r5
   114a8:	39ecc804 	addi	r7,r7,-19680
   114ac:	31400217 	ldw	r5,8(r6)
   114b0:	12400054 	ori	r9,r2,1
   114b4:	1891883a 	add	r8,r3,r2
   114b8:	29c05226 	beq	r5,r7,11604 <_free_r+0x270>
   114bc:	31800317 	ldw	r6,12(r6)
   114c0:	29800315 	stw	r6,12(r5)
   114c4:	31400215 	stw	r5,8(r6)
   114c8:	1a400115 	stw	r9,4(r3)
   114cc:	40800015 	stw	r2,0(r8)
   114d0:	003fd806 	br	11434 <_free_r+0xa0>
   114d4:	f800283a 	ret
   114d8:	11400054 	ori	r5,r2,1
   114dc:	817fff15 	stw	r5,-4(r16)
   114e0:	30800015 	stw	r2,0(r6)
   114e4:	11408028 	cmpgeui	r5,r2,512
   114e8:	283fd426 	beq	r5,zero,1143c <_free_r+0xa8>
   114ec:	100ad27a 	srli	r5,r2,9
   114f0:	29800168 	cmpgeui	r6,r5,5
   114f4:	3000341e 	bne	r6,zero,115c8 <_free_r+0x234>
   114f8:	100ad1ba 	srli	r5,r2,6
   114fc:	29800e44 	addi	r6,r5,57
   11500:	300c90fa 	slli	r6,r6,3
   11504:	29c00e04 	addi	r7,r5,56
   11508:	218d883a 	add	r6,r4,r6
   1150c:	31400017 	ldw	r5,0(r6)
   11510:	31bffe04 	addi	r6,r6,-8
   11514:	31404226 	beq	r6,r5,11620 <_free_r+0x28c>
   11518:	01ffff04 	movi	r7,-4
   1151c:	29000117 	ldw	r4,4(r5)
   11520:	21c8703a 	and	r4,r4,r7
   11524:	1100022e 	bgeu	r2,r4,11530 <_free_r+0x19c>
   11528:	29400217 	ldw	r5,8(r5)
   1152c:	317ffb1e 	bne	r6,r5,1151c <_free_r+0x188>
   11530:	29800317 	ldw	r6,12(r5)
   11534:	19800315 	stw	r6,12(r3)
   11538:	19400215 	stw	r5,8(r3)
   1153c:	30c00215 	stw	r3,8(r6)
   11540:	28c00315 	stw	r3,12(r5)
   11544:	003fcd06 	br	1147c <_free_r+0xe8>
   11548:	40004d1e 	bne	r8,zero,11680 <_free_r+0x2ec>
   1154c:	31000317 	ldw	r4,12(r6)
   11550:	31800217 	ldw	r6,8(r6)
   11554:	2885883a 	add	r2,r5,r2
   11558:	11400054 	ori	r5,r2,1
   1155c:	31000315 	stw	r4,12(r6)
   11560:	21800215 	stw	r6,8(r4)
   11564:	19400115 	stw	r5,4(r3)
   11568:	1887883a 	add	r3,r3,r2
   1156c:	18800015 	stw	r2,0(r3)
   11570:	003fc206 	br	1147c <_free_r+0xe8>
   11574:	39c0004c 	andi	r7,r7,1
   11578:	1145883a 	add	r2,r2,r5
   1157c:	3800071e 	bne	r7,zero,1159c <_free_r+0x208>
   11580:	81fffe17 	ldw	r7,-8(r16)
   11584:	19c7c83a 	sub	r3,r3,r7
   11588:	19400317 	ldw	r5,12(r3)
   1158c:	19800217 	ldw	r6,8(r3)
   11590:	11c5883a 	add	r2,r2,r7
   11594:	31400315 	stw	r5,12(r6)
   11598:	29800215 	stw	r6,8(r5)
   1159c:	014000b4 	movhi	r5,2
   115a0:	11800054 	ori	r6,r2,1
   115a4:	2972d617 	ldw	r5,-13480(r5)
   115a8:	19800115 	stw	r6,4(r3)
   115ac:	20c00215 	stw	r3,8(r4)
   115b0:	117fb236 	bltu	r2,r5,1147c <_free_r+0xe8>
   115b4:	008000b4 	movhi	r2,2
   115b8:	117a0817 	ldw	r5,-6112(r2)
   115bc:	8809883a 	mov	r4,r17
   115c0:	00112780 	call	11278 <_malloc_trim_r>
   115c4:	003fad06 	br	1147c <_free_r+0xe8>
   115c8:	29800568 	cmpgeui	r6,r5,21
   115cc:	30000926 	beq	r6,zero,115f4 <_free_r+0x260>
   115d0:	29801568 	cmpgeui	r6,r5,85
   115d4:	3000191e 	bne	r6,zero,1163c <_free_r+0x2a8>
   115d8:	100ad33a 	srli	r5,r2,12
   115dc:	29801bc4 	addi	r6,r5,111
   115e0:	300c90fa 	slli	r6,r6,3
   115e4:	29c01b84 	addi	r7,r5,110
   115e8:	003fc706 	br	11508 <_free_r+0x174>
   115ec:	1145883a 	add	r2,r2,r5
   115f0:	003fae06 	br	114ac <_free_r+0x118>
   115f4:	29801704 	addi	r6,r5,92
   115f8:	300c90fa 	slli	r6,r6,3
   115fc:	29c016c4 	addi	r7,r5,91
   11600:	003fc106 	br	11508 <_free_r+0x174>
   11604:	20c00515 	stw	r3,20(r4)
   11608:	20c00415 	stw	r3,16(r4)
   1160c:	19c00315 	stw	r7,12(r3)
   11610:	19c00215 	stw	r7,8(r3)
   11614:	1a400115 	stw	r9,4(r3)
   11618:	40800015 	stw	r2,0(r8)
   1161c:	003f9706 	br	1147c <_free_r+0xe8>
   11620:	380fd0ba 	srai	r7,r7,2
   11624:	00800044 	movi	r2,1
   11628:	22000117 	ldw	r8,4(r4)
   1162c:	11ce983a 	sll	r7,r2,r7
   11630:	3a0eb03a 	or	r7,r7,r8
   11634:	21c00115 	stw	r7,4(r4)
   11638:	003fbe06 	br	11534 <_free_r+0x1a0>
   1163c:	29805568 	cmpgeui	r6,r5,341
   11640:	3000051e 	bne	r6,zero,11658 <_free_r+0x2c4>
   11644:	100ad3fa 	srli	r5,r2,15
   11648:	29801e04 	addi	r6,r5,120
   1164c:	300c90fa 	slli	r6,r6,3
   11650:	29c01dc4 	addi	r7,r5,119
   11654:	003fac06 	br	11508 <_free_r+0x174>
   11658:	29415568 	cmpgeui	r5,r5,1365
   1165c:	2800051e 	bne	r5,zero,11674 <_free_r+0x2e0>
   11660:	100ad4ba 	srli	r5,r2,18
   11664:	29801f44 	addi	r6,r5,125
   11668:	300c90fa 	slli	r6,r6,3
   1166c:	29c01f04 	addi	r7,r5,124
   11670:	003fa506 	br	11508 <_free_r+0x174>
   11674:	0180fe04 	movi	r6,1016
   11678:	01c01f84 	movi	r7,126
   1167c:	003fa206 	br	11508 <_free_r+0x174>
   11680:	11000054 	ori	r4,r2,1
   11684:	19000115 	stw	r4,4(r3)
   11688:	30800015 	stw	r2,0(r6)
   1168c:	003f7b06 	br	1147c <_free_r+0xe8>

00011690 <_fwalk>:
   11690:	defffa04 	addi	sp,sp,-24
   11694:	dd000415 	stw	r20,16(sp)
   11698:	dcc00315 	stw	r19,12(sp)
   1169c:	dc800215 	stw	r18,8(sp)
   116a0:	dfc00515 	stw	ra,20(sp)
   116a4:	dc400115 	stw	r17,4(sp)
   116a8:	dc000015 	stw	r16,0(sp)
   116ac:	2827883a 	mov	r19,r5
   116b0:	2480b804 	addi	r18,r4,736
   116b4:	0029883a 	mov	r20,zero
   116b8:	94400117 	ldw	r17,4(r18)
   116bc:	94000217 	ldw	r16,8(r18)
   116c0:	8c7fffc4 	addi	r17,r17,-1
   116c4:	88000d16 	blt	r17,zero,116fc <_fwalk+0x6c>
   116c8:	8080030b 	ldhu	r2,12(r16)
   116cc:	8c7fffc4 	addi	r17,r17,-1
   116d0:	108000b0 	cmpltui	r2,r2,2
   116d4:	1000061e 	bne	r2,zero,116f0 <_fwalk+0x60>
   116d8:	8080038f 	ldh	r2,14(r16)
   116dc:	8009883a 	mov	r4,r16
   116e0:	10bfffe0 	cmpeqi	r2,r2,-1
   116e4:	1000021e 	bne	r2,zero,116f0 <_fwalk+0x60>
   116e8:	983ee83a 	callr	r19
   116ec:	a0a8b03a 	or	r20,r20,r2
   116f0:	88bfffd8 	cmpnei	r2,r17,-1
   116f4:	84001a04 	addi	r16,r16,104
   116f8:	103ff31e 	bne	r2,zero,116c8 <_fwalk+0x38>
   116fc:	94800017 	ldw	r18,0(r18)
   11700:	903fed1e 	bne	r18,zero,116b8 <_fwalk+0x28>
   11704:	a005883a 	mov	r2,r20
   11708:	dfc00517 	ldw	ra,20(sp)
   1170c:	dd000417 	ldw	r20,16(sp)
   11710:	dcc00317 	ldw	r19,12(sp)
   11714:	dc800217 	ldw	r18,8(sp)
   11718:	dc400117 	ldw	r17,4(sp)
   1171c:	dc000017 	ldw	r16,0(sp)
   11720:	dec00604 	addi	sp,sp,24
   11724:	f800283a 	ret

00011728 <_fwalk_reent>:
   11728:	defff904 	addi	sp,sp,-28
   1172c:	dd400515 	stw	r21,20(sp)
   11730:	dd000415 	stw	r20,16(sp)
   11734:	dcc00315 	stw	r19,12(sp)
   11738:	dc800215 	stw	r18,8(sp)
   1173c:	dfc00615 	stw	ra,24(sp)
   11740:	dc400115 	stw	r17,4(sp)
   11744:	dc000015 	stw	r16,0(sp)
   11748:	202b883a 	mov	r21,r4
   1174c:	2827883a 	mov	r19,r5
   11750:	2480b804 	addi	r18,r4,736
   11754:	0029883a 	mov	r20,zero
   11758:	94400117 	ldw	r17,4(r18)
   1175c:	94000217 	ldw	r16,8(r18)
   11760:	8c7fffc4 	addi	r17,r17,-1
   11764:	88000e16 	blt	r17,zero,117a0 <_fwalk_reent+0x78>
   11768:	8080030b 	ldhu	r2,12(r16)
   1176c:	8c7fffc4 	addi	r17,r17,-1
   11770:	108000b0 	cmpltui	r2,r2,2
   11774:	1000071e 	bne	r2,zero,11794 <_fwalk_reent+0x6c>
   11778:	8080038f 	ldh	r2,14(r16)
   1177c:	800b883a 	mov	r5,r16
   11780:	a809883a 	mov	r4,r21
   11784:	10bfffe0 	cmpeqi	r2,r2,-1
   11788:	1000021e 	bne	r2,zero,11794 <_fwalk_reent+0x6c>
   1178c:	983ee83a 	callr	r19
   11790:	a0a8b03a 	or	r20,r20,r2
   11794:	88bfffd8 	cmpnei	r2,r17,-1
   11798:	84001a04 	addi	r16,r16,104
   1179c:	103ff21e 	bne	r2,zero,11768 <_fwalk_reent+0x40>
   117a0:	94800017 	ldw	r18,0(r18)
   117a4:	903fec1e 	bne	r18,zero,11758 <_fwalk_reent+0x30>
   117a8:	a005883a 	mov	r2,r20
   117ac:	dfc00617 	ldw	ra,24(sp)
   117b0:	dd400517 	ldw	r21,20(sp)
   117b4:	dd000417 	ldw	r20,16(sp)
   117b8:	dcc00317 	ldw	r19,12(sp)
   117bc:	dc800217 	ldw	r18,8(sp)
   117c0:	dc400117 	ldw	r17,4(sp)
   117c4:	dc000017 	ldw	r16,0(sp)
   117c8:	dec00704 	addi	sp,sp,28
   117cc:	f800283a 	ret

000117d0 <__localeconv_l>:
   117d0:	20803c04 	addi	r2,r4,240
   117d4:	f800283a 	ret

000117d8 <_localeconv_r>:
   117d8:	008000b4 	movhi	r2,2
   117dc:	10ae0404 	addi	r2,r2,-18416
   117e0:	f800283a 	ret

000117e4 <localeconv>:
   117e4:	008000b4 	movhi	r2,2
   117e8:	10ae0404 	addi	r2,r2,-18416
   117ec:	f800283a 	ret

000117f0 <__smakebuf_r>:
   117f0:	2880030b 	ldhu	r2,12(r5)
   117f4:	deffe804 	addi	sp,sp,-96
   117f8:	dc001215 	stw	r16,72(sp)
   117fc:	dfc01715 	stw	ra,92(sp)
   11800:	dd001615 	stw	r20,88(sp)
   11804:	dcc01515 	stw	r19,84(sp)
   11808:	dc801415 	stw	r18,80(sp)
   1180c:	dc401315 	stw	r17,76(sp)
   11810:	10c0008c 	andi	r3,r2,2
   11814:	2821883a 	mov	r16,r5
   11818:	18000d26 	beq	r3,zero,11850 <__smakebuf_r+0x60>
   1181c:	288010c4 	addi	r2,r5,67
   11820:	28800015 	stw	r2,0(r5)
   11824:	28800415 	stw	r2,16(r5)
   11828:	00800044 	movi	r2,1
   1182c:	28800515 	stw	r2,20(r5)
   11830:	dfc01717 	ldw	ra,92(sp)
   11834:	dd001617 	ldw	r20,88(sp)
   11838:	dcc01517 	ldw	r19,84(sp)
   1183c:	dc801417 	ldw	r18,80(sp)
   11840:	dc401317 	ldw	r17,76(sp)
   11844:	dc001217 	ldw	r16,72(sp)
   11848:	dec01804 	addi	sp,sp,96
   1184c:	f800283a 	ret
   11850:	2940038f 	ldh	r5,14(r5)
   11854:	2023883a 	mov	r17,r4
   11858:	28002816 	blt	r5,zero,118fc <__smakebuf_r+0x10c>
   1185c:	d80d883a 	mov	r6,sp
   11860:	0014d940 	call	14d94 <_fstat_r>
   11864:	10002416 	blt	r2,zero,118f8 <__smakebuf_r+0x108>
   11868:	d8800117 	ldw	r2,4(sp)
   1186c:	10bc000c 	andi	r2,r2,61440
   11870:	10880018 	cmpnei	r2,r2,8192
   11874:	1000461e 	bne	r2,zero,11990 <__smakebuf_r+0x1a0>
   11878:	8140038f 	ldh	r5,14(r16)
   1187c:	8809883a 	mov	r4,r17
   11880:	00152880 	call	15288 <_isatty_r>
   11884:	10003e26 	beq	r2,zero,11980 <__smakebuf_r+0x190>
   11888:	8080030b 	ldhu	r2,12(r16)
   1188c:	80c010c4 	addi	r3,r16,67
   11890:	80c00015 	stw	r3,0(r16)
   11894:	10800054 	ori	r2,r2,1
   11898:	8080030d 	sth	r2,12(r16)
   1189c:	00800044 	movi	r2,1
   118a0:	80c00415 	stw	r3,16(r16)
   118a4:	80800515 	stw	r2,20(r16)
   118a8:	04c00044 	movi	r19,1
   118ac:	05010004 	movi	r20,1024
   118b0:	04820004 	movi	r18,2048
   118b4:	a00b883a 	mov	r5,r20
   118b8:	8809883a 	mov	r4,r17
   118bc:	000c6400 	call	c640 <_malloc_r>
   118c0:	10001726 	beq	r2,zero,11920 <__smakebuf_r+0x130>
   118c4:	80c0030b 	ldhu	r3,12(r16)
   118c8:	01000074 	movhi	r4,1
   118cc:	2103b504 	addi	r4,r4,3796
   118d0:	89000f15 	stw	r4,60(r17)
   118d4:	18c02014 	ori	r3,r3,128
   118d8:	80c0030d 	sth	r3,12(r16)
   118dc:	80800015 	stw	r2,0(r16)
   118e0:	80800415 	stw	r2,16(r16)
   118e4:	85000515 	stw	r20,20(r16)
   118e8:	98001d1e 	bne	r19,zero,11960 <__smakebuf_r+0x170>
   118ec:	90c6b03a 	or	r3,r18,r3
   118f0:	80c0030d 	sth	r3,12(r16)
   118f4:	003fce06 	br	11830 <__smakebuf_r+0x40>
   118f8:	8080030b 	ldhu	r2,12(r16)
   118fc:	1080200c 	andi	r2,r2,128
   11900:	0027883a 	mov	r19,zero
   11904:	10001326 	beq	r2,zero,11954 <__smakebuf_r+0x164>
   11908:	05001004 	movi	r20,64
   1190c:	a00b883a 	mov	r5,r20
   11910:	8809883a 	mov	r4,r17
   11914:	0025883a 	mov	r18,zero
   11918:	000c6400 	call	c640 <_malloc_r>
   1191c:	103fe91e 	bne	r2,zero,118c4 <__smakebuf_r+0xd4>
   11920:	8080030b 	ldhu	r2,12(r16)
   11924:	10c0800c 	andi	r3,r2,512
   11928:	183fc11e 	bne	r3,zero,11830 <__smakebuf_r+0x40>
   1192c:	00ffff04 	movi	r3,-4
   11930:	10c4703a 	and	r2,r2,r3
   11934:	10800094 	ori	r2,r2,2
   11938:	80c010c4 	addi	r3,r16,67
   1193c:	8080030d 	sth	r2,12(r16)
   11940:	00800044 	movi	r2,1
   11944:	80c00015 	stw	r3,0(r16)
   11948:	80c00415 	stw	r3,16(r16)
   1194c:	80800515 	stw	r2,20(r16)
   11950:	003fb706 	br	11830 <__smakebuf_r+0x40>
   11954:	05010004 	movi	r20,1024
   11958:	0025883a 	mov	r18,zero
   1195c:	003fd506 	br	118b4 <__smakebuf_r+0xc4>
   11960:	8140038f 	ldh	r5,14(r16)
   11964:	8809883a 	mov	r4,r17
   11968:	00152880 	call	15288 <_isatty_r>
   1196c:	80c0030b 	ldhu	r3,12(r16)
   11970:	103fde26 	beq	r2,zero,118ec <__smakebuf_r+0xfc>
   11974:	18ffff0c 	andi	r3,r3,65532
   11978:	18c00054 	ori	r3,r3,1
   1197c:	003fdb06 	br	118ec <__smakebuf_r+0xfc>
   11980:	04c00044 	movi	r19,1
   11984:	05010004 	movi	r20,1024
   11988:	04820004 	movi	r18,2048
   1198c:	003fc906 	br	118b4 <__smakebuf_r+0xc4>
   11990:	0027883a 	mov	r19,zero
   11994:	05010004 	movi	r20,1024
   11998:	04820004 	movi	r18,2048
   1199c:	003fc506 	br	118b4 <__smakebuf_r+0xc4>

000119a0 <__swhatbuf_r>:
   119a0:	deffea04 	addi	sp,sp,-88
   119a4:	dc001215 	stw	r16,72(sp)
   119a8:	2821883a 	mov	r16,r5
   119ac:	2940038f 	ldh	r5,14(r5)
   119b0:	dc801415 	stw	r18,80(sp)
   119b4:	dc401315 	stw	r17,76(sp)
   119b8:	dfc01515 	stw	ra,84(sp)
   119bc:	3023883a 	mov	r17,r6
   119c0:	3825883a 	mov	r18,r7
   119c4:	28001016 	blt	r5,zero,11a08 <__swhatbuf_r+0x68>
   119c8:	d80d883a 	mov	r6,sp
   119cc:	0014d940 	call	14d94 <_fstat_r>
   119d0:	10000d16 	blt	r2,zero,11a08 <__swhatbuf_r+0x68>
   119d4:	d8c00117 	ldw	r3,4(sp)
   119d8:	00820004 	movi	r2,2048
   119dc:	18fc000c 	andi	r3,r3,61440
   119e0:	18c80020 	cmpeqi	r3,r3,8192
   119e4:	90c00015 	stw	r3,0(r18)
   119e8:	00c10004 	movi	r3,1024
   119ec:	88c00015 	stw	r3,0(r17)
   119f0:	dfc01517 	ldw	ra,84(sp)
   119f4:	dc801417 	ldw	r18,80(sp)
   119f8:	dc401317 	ldw	r17,76(sp)
   119fc:	dc001217 	ldw	r16,72(sp)
   11a00:	dec01604 	addi	sp,sp,88
   11a04:	f800283a 	ret
   11a08:	8080030b 	ldhu	r2,12(r16)
   11a0c:	90000015 	stw	zero,0(r18)
   11a10:	1080200c 	andi	r2,r2,128
   11a14:	10000426 	beq	r2,zero,11a28 <__swhatbuf_r+0x88>
   11a18:	00801004 	movi	r2,64
   11a1c:	88800015 	stw	r2,0(r17)
   11a20:	0005883a 	mov	r2,zero
   11a24:	003ff206 	br	119f0 <__swhatbuf_r+0x50>
   11a28:	00810004 	movi	r2,1024
   11a2c:	88800015 	stw	r2,0(r17)
   11a30:	0005883a 	mov	r2,zero
   11a34:	003fee06 	br	119f0 <__swhatbuf_r+0x50>

00011a38 <memchr>:
   11a38:	208000cc 	andi	r2,r4,3
   11a3c:	280f883a 	mov	r7,r5
   11a40:	10000e26 	beq	r2,zero,11a7c <memchr+0x44>
   11a44:	30bfffc4 	addi	r2,r6,-1
   11a48:	30001726 	beq	r6,zero,11aa8 <memchr+0x70>
   11a4c:	29803fcc 	andi	r6,r5,255
   11a50:	00000606 	br	11a6c <memchr+0x34>
   11a54:	21000044 	addi	r4,r4,1
   11a58:	20c000cc 	andi	r3,r4,3
   11a5c:	18000826 	beq	r3,zero,11a80 <memchr+0x48>
   11a60:	10bfffc4 	addi	r2,r2,-1
   11a64:	10ffffe0 	cmpeqi	r3,r2,-1
   11a68:	18000f1e 	bne	r3,zero,11aa8 <memchr+0x70>
   11a6c:	20c00003 	ldbu	r3,0(r4)
   11a70:	19bff81e 	bne	r3,r6,11a54 <memchr+0x1c>
   11a74:	2005883a 	mov	r2,r4
   11a78:	f800283a 	ret
   11a7c:	3005883a 	mov	r2,r6
   11a80:	10c00128 	cmpgeui	r3,r2,4
   11a84:	18000a1e 	bne	r3,zero,11ab0 <memchr+0x78>
   11a88:	10001e26 	beq	r2,zero,11b04 <memchr+0xcc>
   11a8c:	2087883a 	add	r3,r4,r2
   11a90:	39803fcc 	andi	r6,r7,255
   11a94:	2005883a 	mov	r2,r4
   11a98:	11000003 	ldbu	r4,0(r2)
   11a9c:	21bff626 	beq	r4,r6,11a78 <memchr+0x40>
   11aa0:	10800044 	addi	r2,r2,1
   11aa4:	18bffc1e 	bne	r3,r2,11a98 <memchr+0x60>
   11aa8:	0005883a 	mov	r2,zero
   11aac:	f800283a 	ret
   11ab0:	29403fcc 	andi	r5,r5,255
   11ab4:	280c923a 	slli	r6,r5,8
   11ab8:	027fbff4 	movhi	r9,65279
   11abc:	02202074 	movhi	r8,32897
   11ac0:	314ab03a 	or	r5,r6,r5
   11ac4:	280c943a 	slli	r6,r5,16
   11ac8:	4a7fbfc4 	addi	r9,r9,-257
   11acc:	42202004 	addi	r8,r8,-32640
   11ad0:	314cb03a 	or	r6,r6,r5
   11ad4:	20c00017 	ldw	r3,0(r4)
   11ad8:	30c6f03a 	xor	r3,r6,r3
   11adc:	1a4b883a 	add	r5,r3,r9
   11ae0:	00c6303a 	nor	r3,zero,r3
   11ae4:	28c6703a 	and	r3,r5,r3
   11ae8:	1a06703a 	and	r3,r3,r8
   11aec:	183fe71e 	bne	r3,zero,11a8c <memchr+0x54>
   11af0:	10bfff04 	addi	r2,r2,-4
   11af4:	10c00128 	cmpgeui	r3,r2,4
   11af8:	21000104 	addi	r4,r4,4
   11afc:	183ff51e 	bne	r3,zero,11ad4 <memchr+0x9c>
   11b00:	003fe106 	br	11a88 <memchr+0x50>
   11b04:	f800283a 	ret

00011b08 <memset>:
   11b08:	20c000cc 	andi	r3,r4,3
   11b0c:	2005883a 	mov	r2,r4
   11b10:	18003626 	beq	r3,zero,11bec <memset+0xe4>
   11b14:	31ffffc4 	addi	r7,r6,-1
   11b18:	30003326 	beq	r6,zero,11be8 <memset+0xe0>
   11b1c:	2811883a 	mov	r8,r5
   11b20:	2007883a 	mov	r3,r4
   11b24:	00000306 	br	11b34 <memset+0x2c>
   11b28:	39ffffc4 	addi	r7,r7,-1
   11b2c:	39bfffe0 	cmpeqi	r6,r7,-1
   11b30:	30002d1e 	bne	r6,zero,11be8 <memset+0xe0>
   11b34:	18c00044 	addi	r3,r3,1
   11b38:	198000cc 	andi	r6,r3,3
   11b3c:	1a3fffc5 	stb	r8,-1(r3)
   11b40:	303ff91e 	bne	r6,zero,11b28 <memset+0x20>
   11b44:	39000130 	cmpltui	r4,r7,4
   11b48:	2000221e 	bne	r4,zero,11bd4 <memset+0xcc>
   11b4c:	29003fcc 	andi	r4,r5,255
   11b50:	200c923a 	slli	r6,r4,8
   11b54:	3a000430 	cmpltui	r8,r7,16
   11b58:	3108b03a 	or	r4,r6,r4
   11b5c:	200c943a 	slli	r6,r4,16
   11b60:	310cb03a 	or	r6,r6,r4
   11b64:	40000e1e 	bne	r8,zero,11ba0 <memset+0x98>
   11b68:	393ffc04 	addi	r4,r7,-16
   11b6c:	2008d13a 	srli	r4,r4,4
   11b70:	21000044 	addi	r4,r4,1
   11b74:	2008913a 	slli	r4,r4,4
   11b78:	1909883a 	add	r4,r3,r4
   11b7c:	19800015 	stw	r6,0(r3)
   11b80:	19800115 	stw	r6,4(r3)
   11b84:	19800215 	stw	r6,8(r3)
   11b88:	19800315 	stw	r6,12(r3)
   11b8c:	18c00404 	addi	r3,r3,16
   11b90:	20fffa1e 	bne	r4,r3,11b7c <memset+0x74>
   11b94:	3900030c 	andi	r4,r7,12
   11b98:	39c003cc 	andi	r7,r7,15
   11b9c:	20000d26 	beq	r4,zero,11bd4 <memset+0xcc>
   11ba0:	1811883a 	mov	r8,r3
   11ba4:	42000104 	addi	r8,r8,4
   11ba8:	3a09c83a 	sub	r4,r7,r8
   11bac:	1909883a 	add	r4,r3,r4
   11bb0:	21000128 	cmpgeui	r4,r4,4
   11bb4:	41bfff15 	stw	r6,-4(r8)
   11bb8:	203ffa1e 	bne	r4,zero,11ba4 <memset+0x9c>
   11bbc:	393fff04 	addi	r4,r7,-4
   11bc0:	2008d0ba 	srli	r4,r4,2
   11bc4:	39c000cc 	andi	r7,r7,3
   11bc8:	21000044 	addi	r4,r4,1
   11bcc:	200890ba 	slli	r4,r4,2
   11bd0:	1907883a 	add	r3,r3,r4
   11bd4:	38000426 	beq	r7,zero,11be8 <memset+0xe0>
   11bd8:	19cf883a 	add	r7,r3,r7
   11bdc:	18c00044 	addi	r3,r3,1
   11be0:	197fffc5 	stb	r5,-1(r3)
   11be4:	38fffd1e 	bne	r7,r3,11bdc <memset+0xd4>
   11be8:	f800283a 	ret
   11bec:	2007883a 	mov	r3,r4
   11bf0:	300f883a 	mov	r7,r6
   11bf4:	003fd306 	br	11b44 <memset+0x3c>

00011bf8 <_Balloc>:
   11bf8:	20801317 	ldw	r2,76(r4)
   11bfc:	defffc04 	addi	sp,sp,-16
   11c00:	dc400115 	stw	r17,4(sp)
   11c04:	dc000015 	stw	r16,0(sp)
   11c08:	dfc00315 	stw	ra,12(sp)
   11c0c:	dc800215 	stw	r18,8(sp)
   11c10:	2021883a 	mov	r16,r4
   11c14:	2823883a 	mov	r17,r5
   11c18:	10000e26 	beq	r2,zero,11c54 <_Balloc+0x5c>
   11c1c:	880690ba 	slli	r3,r17,2
   11c20:	10c7883a 	add	r3,r2,r3
   11c24:	18800017 	ldw	r2,0(r3)
   11c28:	10001126 	beq	r2,zero,11c70 <_Balloc+0x78>
   11c2c:	11000017 	ldw	r4,0(r2)
   11c30:	19000015 	stw	r4,0(r3)
   11c34:	10000415 	stw	zero,16(r2)
   11c38:	10000315 	stw	zero,12(r2)
   11c3c:	dfc00317 	ldw	ra,12(sp)
   11c40:	dc800217 	ldw	r18,8(sp)
   11c44:	dc400117 	ldw	r17,4(sp)
   11c48:	dc000017 	ldw	r16,0(sp)
   11c4c:	dec00404 	addi	sp,sp,16
   11c50:	f800283a 	ret
   11c54:	01800844 	movi	r6,33
   11c58:	01400104 	movi	r5,4
   11c5c:	00148480 	call	14848 <_calloc_r>
   11c60:	80801315 	stw	r2,76(r16)
   11c64:	103fed1e 	bne	r2,zero,11c1c <_Balloc+0x24>
   11c68:	0005883a 	mov	r2,zero
   11c6c:	003ff306 	br	11c3c <_Balloc+0x44>
   11c70:	04800044 	movi	r18,1
   11c74:	9464983a 	sll	r18,r18,r17
   11c78:	01400044 	movi	r5,1
   11c7c:	8009883a 	mov	r4,r16
   11c80:	91800144 	addi	r6,r18,5
   11c84:	300c90ba 	slli	r6,r6,2
   11c88:	00148480 	call	14848 <_calloc_r>
   11c8c:	103ff626 	beq	r2,zero,11c68 <_Balloc+0x70>
   11c90:	14400115 	stw	r17,4(r2)
   11c94:	14800215 	stw	r18,8(r2)
   11c98:	003fe606 	br	11c34 <_Balloc+0x3c>

00011c9c <_Bfree>:
   11c9c:	28000726 	beq	r5,zero,11cbc <_Bfree+0x20>
   11ca0:	28c00117 	ldw	r3,4(r5)
   11ca4:	20801317 	ldw	r2,76(r4)
   11ca8:	180690ba 	slli	r3,r3,2
   11cac:	10c5883a 	add	r2,r2,r3
   11cb0:	10c00017 	ldw	r3,0(r2)
   11cb4:	28c00015 	stw	r3,0(r5)
   11cb8:	11400015 	stw	r5,0(r2)
   11cbc:	f800283a 	ret

00011cc0 <__multadd>:
   11cc0:	defff704 	addi	sp,sp,-36
   11cc4:	dc800215 	stw	r18,8(sp)
   11cc8:	2c800417 	ldw	r18,16(r5)
   11ccc:	ddc00715 	stw	r23,28(sp)
   11cd0:	dd800615 	stw	r22,24(sp)
   11cd4:	dd400515 	stw	r21,20(sp)
   11cd8:	dd000415 	stw	r20,16(sp)
   11cdc:	dcc00315 	stw	r19,12(sp)
   11ce0:	dc400115 	stw	r17,4(sp)
   11ce4:	dfc00815 	stw	ra,32(sp)
   11ce8:	dc000015 	stw	r16,0(sp)
   11cec:	2827883a 	mov	r19,r5
   11cf0:	2029883a 	mov	r20,r4
   11cf4:	302b883a 	mov	r21,r6
   11cf8:	3823883a 	mov	r17,r7
   11cfc:	2d800504 	addi	r22,r5,20
   11d00:	002f883a 	mov	r23,zero
   11d04:	b4000017 	ldw	r16,0(r22)
   11d08:	a80b883a 	mov	r5,r21
   11d0c:	b5800104 	addi	r22,r22,4
   11d10:	813fffcc 	andi	r4,r16,65535
   11d14:	0008b4c0 	call	8b4c <__mulsi3>
   11d18:	8008d43a 	srli	r4,r16,16
   11d1c:	a80b883a 	mov	r5,r21
   11d20:	1461883a 	add	r16,r2,r17
   11d24:	0008b4c0 	call	8b4c <__mulsi3>
   11d28:	800ed43a 	srli	r7,r16,16
   11d2c:	843fffcc 	andi	r16,r16,65535
   11d30:	bdc00044 	addi	r23,r23,1
   11d34:	11c5883a 	add	r2,r2,r7
   11d38:	1006943a 	slli	r3,r2,16
   11d3c:	1022d43a 	srli	r17,r2,16
   11d40:	1c21883a 	add	r16,r3,r16
   11d44:	b43fff15 	stw	r16,-4(r22)
   11d48:	bcbfee16 	blt	r23,r18,11d04 <__multadd+0x44>
   11d4c:	88000826 	beq	r17,zero,11d70 <__multadd+0xb0>
   11d50:	98800217 	ldw	r2,8(r19)
   11d54:	9080120e 	bge	r18,r2,11da0 <__multadd+0xe0>
   11d58:	90800144 	addi	r2,r18,5
   11d5c:	100490ba 	slli	r2,r2,2
   11d60:	94800044 	addi	r18,r18,1
   11d64:	9885883a 	add	r2,r19,r2
   11d68:	14400015 	stw	r17,0(r2)
   11d6c:	9c800415 	stw	r18,16(r19)
   11d70:	9805883a 	mov	r2,r19
   11d74:	dfc00817 	ldw	ra,32(sp)
   11d78:	ddc00717 	ldw	r23,28(sp)
   11d7c:	dd800617 	ldw	r22,24(sp)
   11d80:	dd400517 	ldw	r21,20(sp)
   11d84:	dd000417 	ldw	r20,16(sp)
   11d88:	dcc00317 	ldw	r19,12(sp)
   11d8c:	dc800217 	ldw	r18,8(sp)
   11d90:	dc400117 	ldw	r17,4(sp)
   11d94:	dc000017 	ldw	r16,0(sp)
   11d98:	dec00904 	addi	sp,sp,36
   11d9c:	f800283a 	ret
   11da0:	99400117 	ldw	r5,4(r19)
   11da4:	a009883a 	mov	r4,r20
   11da8:	29400044 	addi	r5,r5,1
   11dac:	0011bf80 	call	11bf8 <_Balloc>
   11db0:	1021883a 	mov	r16,r2
   11db4:	10001226 	beq	r2,zero,11e00 <__multadd+0x140>
   11db8:	99800417 	ldw	r6,16(r19)
   11dbc:	99400304 	addi	r5,r19,12
   11dc0:	11000304 	addi	r4,r2,12
   11dc4:	31800084 	addi	r6,r6,2
   11dc8:	300c90ba 	slli	r6,r6,2
   11dcc:	000ce200 	call	ce20 <memcpy>
   11dd0:	98000926 	beq	r19,zero,11df8 <__multadd+0x138>
   11dd4:	98c00117 	ldw	r3,4(r19)
   11dd8:	a0801317 	ldw	r2,76(r20)
   11ddc:	180690ba 	slli	r3,r3,2
   11de0:	10c5883a 	add	r2,r2,r3
   11de4:	10c00017 	ldw	r3,0(r2)
   11de8:	98c00015 	stw	r3,0(r19)
   11dec:	14c00015 	stw	r19,0(r2)
   11df0:	8027883a 	mov	r19,r16
   11df4:	003fd806 	br	11d58 <__multadd+0x98>
   11df8:	8027883a 	mov	r19,r16
   11dfc:	003fd606 	br	11d58 <__multadd+0x98>
   11e00:	01c000b4 	movhi	r7,2
   11e04:	010000b4 	movhi	r4,2
   11e08:	39ea7204 	addi	r7,r7,-22072
   11e0c:	000d883a 	mov	r6,zero
   11e10:	01402d44 	movi	r5,181
   11e14:	212a8704 	addi	r4,r4,-21988
   11e18:	00147d00 	call	147d0 <__assert_func>

00011e1c <__s2b>:
   11e1c:	defff904 	addi	sp,sp,-28
   11e20:	dc800215 	stw	r18,8(sp)
   11e24:	dc000015 	stw	r16,0(sp)
   11e28:	2025883a 	mov	r18,r4
   11e2c:	2821883a 	mov	r16,r5
   11e30:	39000204 	addi	r4,r7,8
   11e34:	01400244 	movi	r5,9
   11e38:	dcc00315 	stw	r19,12(sp)
   11e3c:	dc400115 	stw	r17,4(sp)
   11e40:	dfc00615 	stw	ra,24(sp)
   11e44:	3823883a 	mov	r17,r7
   11e48:	dd400515 	stw	r21,20(sp)
   11e4c:	dd000415 	stw	r20,16(sp)
   11e50:	3027883a 	mov	r19,r6
   11e54:	00089980 	call	8998 <__divsi3>
   11e58:	88c00290 	cmplti	r3,r17,10
   11e5c:	1800341e 	bne	r3,zero,11f30 <__s2b+0x114>
   11e60:	00c00044 	movi	r3,1
   11e64:	000b883a 	mov	r5,zero
   11e68:	18c7883a 	add	r3,r3,r3
   11e6c:	29400044 	addi	r5,r5,1
   11e70:	18bffd16 	blt	r3,r2,11e68 <__s2b+0x4c>
   11e74:	9009883a 	mov	r4,r18
   11e78:	0011bf80 	call	11bf8 <_Balloc>
   11e7c:	100b883a 	mov	r5,r2
   11e80:	10002d26 	beq	r2,zero,11f38 <__s2b+0x11c>
   11e84:	d8800717 	ldw	r2,28(sp)
   11e88:	28800515 	stw	r2,20(r5)
   11e8c:	00800044 	movi	r2,1
   11e90:	28800415 	stw	r2,16(r5)
   11e94:	98800290 	cmplti	r2,r19,10
   11e98:	1000221e 	bne	r2,zero,11f24 <__s2b+0x108>
   11e9c:	85400244 	addi	r21,r16,9
   11ea0:	a829883a 	mov	r20,r21
   11ea4:	84e1883a 	add	r16,r16,r19
   11ea8:	a1c00007 	ldb	r7,0(r20)
   11eac:	01800284 	movi	r6,10
   11eb0:	9009883a 	mov	r4,r18
   11eb4:	39fff404 	addi	r7,r7,-48
   11eb8:	0011cc00 	call	11cc0 <__multadd>
   11ebc:	a5000044 	addi	r20,r20,1
   11ec0:	100b883a 	mov	r5,r2
   11ec4:	a43ff81e 	bne	r20,r16,11ea8 <__s2b+0x8c>
   11ec8:	9c3ffe04 	addi	r16,r19,-8
   11ecc:	ac21883a 	add	r16,r21,r16
   11ed0:	9c400a0e 	bge	r19,r17,11efc <__s2b+0xe0>
   11ed4:	8ce3c83a 	sub	r17,r17,r19
   11ed8:	8463883a 	add	r17,r16,r17
   11edc:	81c00007 	ldb	r7,0(r16)
   11ee0:	01800284 	movi	r6,10
   11ee4:	9009883a 	mov	r4,r18
   11ee8:	39fff404 	addi	r7,r7,-48
   11eec:	0011cc00 	call	11cc0 <__multadd>
   11ef0:	84000044 	addi	r16,r16,1
   11ef4:	100b883a 	mov	r5,r2
   11ef8:	8c3ff81e 	bne	r17,r16,11edc <__s2b+0xc0>
   11efc:	2805883a 	mov	r2,r5
   11f00:	dfc00617 	ldw	ra,24(sp)
   11f04:	dd400517 	ldw	r21,20(sp)
   11f08:	dd000417 	ldw	r20,16(sp)
   11f0c:	dcc00317 	ldw	r19,12(sp)
   11f10:	dc800217 	ldw	r18,8(sp)
   11f14:	dc400117 	ldw	r17,4(sp)
   11f18:	dc000017 	ldw	r16,0(sp)
   11f1c:	dec00704 	addi	sp,sp,28
   11f20:	f800283a 	ret
   11f24:	84000284 	addi	r16,r16,10
   11f28:	04c00244 	movi	r19,9
   11f2c:	003fe806 	br	11ed0 <__s2b+0xb4>
   11f30:	000b883a 	mov	r5,zero
   11f34:	003fcf06 	br	11e74 <__s2b+0x58>
   11f38:	01c000b4 	movhi	r7,2
   11f3c:	010000b4 	movhi	r4,2
   11f40:	39ea7204 	addi	r7,r7,-22072
   11f44:	000d883a 	mov	r6,zero
   11f48:	01403384 	movi	r5,206
   11f4c:	212a8704 	addi	r4,r4,-21988
   11f50:	00147d00 	call	147d0 <__assert_func>

00011f54 <__hi0bits>:
   11f54:	20bfffec 	andhi	r2,r4,65535
   11f58:	1000131e 	bne	r2,zero,11fa8 <__hi0bits+0x54>
   11f5c:	2008943a 	slli	r4,r4,16
   11f60:	00800404 	movi	r2,16
   11f64:	20ffc02c 	andhi	r3,r4,65280
   11f68:	1800021e 	bne	r3,zero,11f74 <__hi0bits+0x20>
   11f6c:	2008923a 	slli	r4,r4,8
   11f70:	10800204 	addi	r2,r2,8
   11f74:	20fc002c 	andhi	r3,r4,61440
   11f78:	1800021e 	bne	r3,zero,11f84 <__hi0bits+0x30>
   11f7c:	2008913a 	slli	r4,r4,4
   11f80:	10800104 	addi	r2,r2,4
   11f84:	20f0002c 	andhi	r3,r4,49152
   11f88:	1800021e 	bne	r3,zero,11f94 <__hi0bits+0x40>
   11f8c:	200890ba 	slli	r4,r4,2
   11f90:	10800084 	addi	r2,r2,2
   11f94:	20000316 	blt	r4,zero,11fa4 <__hi0bits+0x50>
   11f98:	2110002c 	andhi	r4,r4,16384
   11f9c:	10800044 	addi	r2,r2,1
   11fa0:	20000326 	beq	r4,zero,11fb0 <__hi0bits+0x5c>
   11fa4:	f800283a 	ret
   11fa8:	0005883a 	mov	r2,zero
   11fac:	003fed06 	br	11f64 <__hi0bits+0x10>
   11fb0:	00800804 	movi	r2,32
   11fb4:	f800283a 	ret

00011fb8 <__lo0bits>:
   11fb8:	20c00017 	ldw	r3,0(r4)
   11fbc:	188001cc 	andi	r2,r3,7
   11fc0:	10000826 	beq	r2,zero,11fe4 <__lo0bits+0x2c>
   11fc4:	1880004c 	andi	r2,r3,1
   11fc8:	10001f1e 	bne	r2,zero,12048 <__lo0bits+0x90>
   11fcc:	1880008c 	andi	r2,r3,2
   11fd0:	10002126 	beq	r2,zero,12058 <__lo0bits+0xa0>
   11fd4:	1806d07a 	srli	r3,r3,1
   11fd8:	00800044 	movi	r2,1
   11fdc:	20c00015 	stw	r3,0(r4)
   11fe0:	f800283a 	ret
   11fe4:	18bfffcc 	andi	r2,r3,65535
   11fe8:	10001426 	beq	r2,zero,1203c <__lo0bits+0x84>
   11fec:	0005883a 	mov	r2,zero
   11ff0:	19403fcc 	andi	r5,r3,255
   11ff4:	2800021e 	bne	r5,zero,12000 <__lo0bits+0x48>
   11ff8:	1806d23a 	srli	r3,r3,8
   11ffc:	10800204 	addi	r2,r2,8
   12000:	194003cc 	andi	r5,r3,15
   12004:	2800021e 	bne	r5,zero,12010 <__lo0bits+0x58>
   12008:	1806d13a 	srli	r3,r3,4
   1200c:	10800104 	addi	r2,r2,4
   12010:	194000cc 	andi	r5,r3,3
   12014:	2800021e 	bne	r5,zero,12020 <__lo0bits+0x68>
   12018:	1806d0ba 	srli	r3,r3,2
   1201c:	10800084 	addi	r2,r2,2
   12020:	1940004c 	andi	r5,r3,1
   12024:	2800031e 	bne	r5,zero,12034 <__lo0bits+0x7c>
   12028:	1806d07a 	srli	r3,r3,1
   1202c:	10800044 	addi	r2,r2,1
   12030:	18000726 	beq	r3,zero,12050 <__lo0bits+0x98>
   12034:	20c00015 	stw	r3,0(r4)
   12038:	f800283a 	ret
   1203c:	1806d43a 	srli	r3,r3,16
   12040:	00800404 	movi	r2,16
   12044:	003fea06 	br	11ff0 <__lo0bits+0x38>
   12048:	0005883a 	mov	r2,zero
   1204c:	f800283a 	ret
   12050:	00800804 	movi	r2,32
   12054:	f800283a 	ret
   12058:	1806d0ba 	srli	r3,r3,2
   1205c:	00800084 	movi	r2,2
   12060:	20c00015 	stw	r3,0(r4)
   12064:	f800283a 	ret

00012068 <__i2b>:
   12068:	20c01317 	ldw	r3,76(r4)
   1206c:	defffd04 	addi	sp,sp,-12
   12070:	dc400115 	stw	r17,4(sp)
   12074:	dc000015 	stw	r16,0(sp)
   12078:	dfc00215 	stw	ra,8(sp)
   1207c:	2021883a 	mov	r16,r4
   12080:	2823883a 	mov	r17,r5
   12084:	18000d26 	beq	r3,zero,120bc <__i2b+0x54>
   12088:	18800117 	ldw	r2,4(r3)
   1208c:	10001826 	beq	r2,zero,120f0 <__i2b+0x88>
   12090:	11000017 	ldw	r4,0(r2)
   12094:	19000115 	stw	r4,4(r3)
   12098:	00c00044 	movi	r3,1
   1209c:	10000315 	stw	zero,12(r2)
   120a0:	14400515 	stw	r17,20(r2)
   120a4:	10c00415 	stw	r3,16(r2)
   120a8:	dfc00217 	ldw	ra,8(sp)
   120ac:	dc400117 	ldw	r17,4(sp)
   120b0:	dc000017 	ldw	r16,0(sp)
   120b4:	dec00304 	addi	sp,sp,12
   120b8:	f800283a 	ret
   120bc:	01800844 	movi	r6,33
   120c0:	01400104 	movi	r5,4
   120c4:	00148480 	call	14848 <_calloc_r>
   120c8:	80801315 	stw	r2,76(r16)
   120cc:	1007883a 	mov	r3,r2
   120d0:	103fed1e 	bne	r2,zero,12088 <__i2b+0x20>
   120d4:	01c000b4 	movhi	r7,2
   120d8:	010000b4 	movhi	r4,2
   120dc:	39ea7204 	addi	r7,r7,-22072
   120e0:	000d883a 	mov	r6,zero
   120e4:	01405004 	movi	r5,320
   120e8:	212a8704 	addi	r4,r4,-21988
   120ec:	00147d00 	call	147d0 <__assert_func>
   120f0:	01800704 	movi	r6,28
   120f4:	01400044 	movi	r5,1
   120f8:	8009883a 	mov	r4,r16
   120fc:	00148480 	call	14848 <_calloc_r>
   12100:	103ff426 	beq	r2,zero,120d4 <__i2b+0x6c>
   12104:	00c00044 	movi	r3,1
   12108:	10c00115 	stw	r3,4(r2)
   1210c:	00c00084 	movi	r3,2
   12110:	10c00215 	stw	r3,8(r2)
   12114:	003fe006 	br	12098 <__i2b+0x30>

00012118 <__multiply>:
   12118:	defff004 	addi	sp,sp,-64
   1211c:	dd800c15 	stw	r22,48(sp)
   12120:	dc400715 	stw	r17,28(sp)
   12124:	2d800417 	ldw	r22,16(r5)
   12128:	34400417 	ldw	r17,16(r6)
   1212c:	dc800815 	stw	r18,32(sp)
   12130:	dc000615 	stw	r16,24(sp)
   12134:	dfc00f15 	stw	ra,60(sp)
   12138:	df000e15 	stw	fp,56(sp)
   1213c:	ddc00d15 	stw	r23,52(sp)
   12140:	dd400b15 	stw	r21,44(sp)
   12144:	dd000a15 	stw	r20,40(sp)
   12148:	dcc00915 	stw	r19,36(sp)
   1214c:	2825883a 	mov	r18,r5
   12150:	3021883a 	mov	r16,r6
   12154:	b4400516 	blt	r22,r17,1216c <__multiply+0x54>
   12158:	8807883a 	mov	r3,r17
   1215c:	2821883a 	mov	r16,r5
   12160:	b023883a 	mov	r17,r22
   12164:	3025883a 	mov	r18,r6
   12168:	182d883a 	mov	r22,r3
   1216c:	80800217 	ldw	r2,8(r16)
   12170:	8d87883a 	add	r3,r17,r22
   12174:	d8c00015 	stw	r3,0(sp)
   12178:	81400117 	ldw	r5,4(r16)
   1217c:	10c0010e 	bge	r2,r3,12184 <__multiply+0x6c>
   12180:	29400044 	addi	r5,r5,1
   12184:	0011bf80 	call	11bf8 <_Balloc>
   12188:	d8800515 	stw	r2,20(sp)
   1218c:	10008c26 	beq	r2,zero,123c0 <__multiply+0x2a8>
   12190:	d8800017 	ldw	r2,0(sp)
   12194:	102690ba 	slli	r19,r2,2
   12198:	d8800517 	ldw	r2,20(sp)
   1219c:	15000504 	addi	r20,r2,20
   121a0:	a4c5883a 	add	r2,r20,r19
   121a4:	d8800115 	stw	r2,4(sp)
   121a8:	a0800a2e 	bgeu	r20,r2,121d4 <__multiply+0xbc>
   121ac:	d8800117 	ldw	r2,4(sp)
   121b0:	d8c00517 	ldw	r3,20(sp)
   121b4:	000b883a 	mov	r5,zero
   121b8:	a009883a 	mov	r4,r20
   121bc:	10cdc83a 	sub	r6,r2,r3
   121c0:	31bffac4 	addi	r6,r6,-21
   121c4:	300cd0ba 	srli	r6,r6,2
   121c8:	31800044 	addi	r6,r6,1
   121cc:	300c90ba 	slli	r6,r6,2
   121d0:	0011b080 	call	11b08 <memset>
   121d4:	b02c90ba 	slli	r22,r22,2
   121d8:	882290ba 	slli	r17,r17,2
   121dc:	94800504 	addi	r18,r18,20
   121e0:	80800504 	addi	r2,r16,20
   121e4:	9587883a 	add	r3,r18,r22
   121e8:	d8800315 	stw	r2,12(sp)
   121ec:	d8c00215 	stw	r3,8(sp)
   121f0:	1463883a 	add	r17,r2,r17
   121f4:	90c0542e 	bgeu	r18,r3,12348 <__multiply+0x230>
   121f8:	80800544 	addi	r2,r16,21
   121fc:	88806d36 	bltu	r17,r2,123b4 <__multiply+0x29c>
   12200:	8c05c83a 	sub	r2,r17,r16
   12204:	10bffac4 	addi	r2,r2,-21
   12208:	1004d0ba 	srli	r2,r2,2
   1220c:	10800044 	addi	r2,r2,1
   12210:	100490ba 	slli	r2,r2,2
   12214:	d8800415 	stw	r2,16(sp)
   12218:	00000606 	br	12234 <__multiply+0x11c>
   1221c:	102ad43a 	srli	r21,r2,16
   12220:	a800271e 	bne	r21,zero,122c0 <__multiply+0x1a8>
   12224:	d8800217 	ldw	r2,8(sp)
   12228:	94800104 	addi	r18,r18,4
   1222c:	a5000104 	addi	r20,r20,4
   12230:	9080452e 	bgeu	r18,r2,12348 <__multiply+0x230>
   12234:	90800017 	ldw	r2,0(r18)
   12238:	15ffffcc 	andi	r23,r2,65535
   1223c:	b83ff726 	beq	r23,zero,1221c <__multiply+0x104>
   12240:	dd400317 	ldw	r21,12(sp)
   12244:	a02d883a 	mov	r22,r20
   12248:	0027883a 	mov	r19,zero
   1224c:	af000017 	ldw	fp,0(r21)
   12250:	b4000017 	ldw	r16,0(r22)
   12254:	b80b883a 	mov	r5,r23
   12258:	e13fffcc 	andi	r4,fp,65535
   1225c:	0008b4c0 	call	8b4c <__mulsi3>
   12260:	e008d43a 	srli	r4,fp,16
   12264:	823fffcc 	andi	r8,r16,65535
   12268:	1205883a 	add	r2,r2,r8
   1226c:	b80b883a 	mov	r5,r23
   12270:	14e7883a 	add	r19,r2,r19
   12274:	8020d43a 	srli	r16,r16,16
   12278:	0008b4c0 	call	8b4c <__mulsi3>
   1227c:	9808d43a 	srli	r4,r19,16
   12280:	1405883a 	add	r2,r2,r16
   12284:	98ffffcc 	andi	r3,r19,65535
   12288:	1105883a 	add	r2,r2,r4
   1228c:	1008943a 	slli	r4,r2,16
   12290:	b5800104 	addi	r22,r22,4
   12294:	ad400104 	addi	r21,r21,4
   12298:	20c6b03a 	or	r3,r4,r3
   1229c:	b0ffff15 	stw	r3,-4(r22)
   122a0:	1026d43a 	srli	r19,r2,16
   122a4:	ac7fe936 	bltu	r21,r17,1224c <__multiply+0x134>
   122a8:	d8800417 	ldw	r2,16(sp)
   122ac:	a085883a 	add	r2,r20,r2
   122b0:	14c00015 	stw	r19,0(r2)
   122b4:	90800017 	ldw	r2,0(r18)
   122b8:	102ad43a 	srli	r21,r2,16
   122bc:	a83fd926 	beq	r21,zero,12224 <__multiply+0x10c>
   122c0:	a5c00017 	ldw	r23,0(r20)
   122c4:	dd800317 	ldw	r22,12(sp)
   122c8:	a027883a 	mov	r19,r20
   122cc:	b821883a 	mov	r16,r23
   122d0:	0039883a 	mov	fp,zero
   122d4:	b100000b 	ldhu	r4,0(r22)
   122d8:	a80b883a 	mov	r5,r21
   122dc:	9cc00104 	addi	r19,r19,4
   122e0:	0008b4c0 	call	8b4c <__mulsi3>
   122e4:	800cd43a 	srli	r6,r16,16
   122e8:	b8ffffcc 	andi	r3,r23,65535
   122ec:	b5800104 	addi	r22,r22,4
   122f0:	118d883a 	add	r6,r2,r6
   122f4:	3739883a 	add	fp,r6,fp
   122f8:	e004943a 	slli	r2,fp,16
   122fc:	9c000017 	ldw	r16,0(r19)
   12300:	a80b883a 	mov	r5,r21
   12304:	10c6b03a 	or	r3,r2,r3
   12308:	98ffff15 	stw	r3,-4(r19)
   1230c:	b13fff8b 	ldhu	r4,-2(r22)
   12310:	0008b4c0 	call	8b4c <__mulsi3>
   12314:	e00cd43a 	srli	r6,fp,16
   12318:	80ffffcc 	andi	r3,r16,65535
   1231c:	10c7883a 	add	r3,r2,r3
   12320:	19af883a 	add	r23,r3,r6
   12324:	b838d43a 	srli	fp,r23,16
   12328:	b47fea36 	bltu	r22,r17,122d4 <__multiply+0x1bc>
   1232c:	d8800417 	ldw	r2,16(sp)
   12330:	94800104 	addi	r18,r18,4
   12334:	a085883a 	add	r2,r20,r2
   12338:	15c00015 	stw	r23,0(r2)
   1233c:	d8800217 	ldw	r2,8(sp)
   12340:	a5000104 	addi	r20,r20,4
   12344:	90bfbb36 	bltu	r18,r2,12234 <__multiply+0x11c>
   12348:	d8800017 	ldw	r2,0(sp)
   1234c:	00800516 	blt	zero,r2,12364 <__multiply+0x24c>
   12350:	00000906 	br	12378 <__multiply+0x260>
   12354:	d8800017 	ldw	r2,0(sp)
   12358:	10bfffc4 	addi	r2,r2,-1
   1235c:	d8800015 	stw	r2,0(sp)
   12360:	10000526 	beq	r2,zero,12378 <__multiply+0x260>
   12364:	d8c00117 	ldw	r3,4(sp)
   12368:	18bfff17 	ldw	r2,-4(r3)
   1236c:	18ffff04 	addi	r3,r3,-4
   12370:	d8c00115 	stw	r3,4(sp)
   12374:	103ff726 	beq	r2,zero,12354 <__multiply+0x23c>
   12378:	d8800517 	ldw	r2,20(sp)
   1237c:	d8c00017 	ldw	r3,0(sp)
   12380:	10c00415 	stw	r3,16(r2)
   12384:	dfc00f17 	ldw	ra,60(sp)
   12388:	df000e17 	ldw	fp,56(sp)
   1238c:	ddc00d17 	ldw	r23,52(sp)
   12390:	dd800c17 	ldw	r22,48(sp)
   12394:	dd400b17 	ldw	r21,44(sp)
   12398:	dd000a17 	ldw	r20,40(sp)
   1239c:	dcc00917 	ldw	r19,36(sp)
   123a0:	dc800817 	ldw	r18,32(sp)
   123a4:	dc400717 	ldw	r17,28(sp)
   123a8:	dc000617 	ldw	r16,24(sp)
   123ac:	dec01004 	addi	sp,sp,64
   123b0:	f800283a 	ret
   123b4:	00800104 	movi	r2,4
   123b8:	d8800415 	stw	r2,16(sp)
   123bc:	003f9d06 	br	12234 <__multiply+0x11c>
   123c0:	01c000b4 	movhi	r7,2
   123c4:	010000b4 	movhi	r4,2
   123c8:	39ea7204 	addi	r7,r7,-22072
   123cc:	000d883a 	mov	r6,zero
   123d0:	01405744 	movi	r5,349
   123d4:	212a8704 	addi	r4,r4,-21988
   123d8:	00147d00 	call	147d0 <__assert_func>

000123dc <__pow5mult>:
   123dc:	defffb04 	addi	sp,sp,-20
   123e0:	dcc00315 	stw	r19,12(sp)
   123e4:	dc000015 	stw	r16,0(sp)
   123e8:	dfc00415 	stw	ra,16(sp)
   123ec:	dc800215 	stw	r18,8(sp)
   123f0:	dc400115 	stw	r17,4(sp)
   123f4:	308000cc 	andi	r2,r6,3
   123f8:	3021883a 	mov	r16,r6
   123fc:	2027883a 	mov	r19,r4
   12400:	10002d1e 	bne	r2,zero,124b8 <__pow5mult+0xdc>
   12404:	2825883a 	mov	r18,r5
   12408:	8021d0ba 	srai	r16,r16,2
   1240c:	80001926 	beq	r16,zero,12474 <__pow5mult+0x98>
   12410:	9c401217 	ldw	r17,72(r19)
   12414:	8800061e 	bne	r17,zero,12430 <__pow5mult+0x54>
   12418:	00002f06 	br	124d8 <__pow5mult+0xfc>
   1241c:	8021d07a 	srai	r16,r16,1
   12420:	80001426 	beq	r16,zero,12474 <__pow5mult+0x98>
   12424:	88800017 	ldw	r2,0(r17)
   12428:	10001a26 	beq	r2,zero,12494 <__pow5mult+0xb8>
   1242c:	1023883a 	mov	r17,r2
   12430:	8080004c 	andi	r2,r16,1
   12434:	103ff926 	beq	r2,zero,1241c <__pow5mult+0x40>
   12438:	880d883a 	mov	r6,r17
   1243c:	900b883a 	mov	r5,r18
   12440:	9809883a 	mov	r4,r19
   12444:	00121180 	call	12118 <__multiply>
   12448:	90001926 	beq	r18,zero,124b0 <__pow5mult+0xd4>
   1244c:	91000117 	ldw	r4,4(r18)
   12450:	98c01317 	ldw	r3,76(r19)
   12454:	8021d07a 	srai	r16,r16,1
   12458:	200890ba 	slli	r4,r4,2
   1245c:	1907883a 	add	r3,r3,r4
   12460:	19000017 	ldw	r4,0(r3)
   12464:	91000015 	stw	r4,0(r18)
   12468:	1c800015 	stw	r18,0(r3)
   1246c:	1025883a 	mov	r18,r2
   12470:	803fec1e 	bne	r16,zero,12424 <__pow5mult+0x48>
   12474:	9005883a 	mov	r2,r18
   12478:	dfc00417 	ldw	ra,16(sp)
   1247c:	dcc00317 	ldw	r19,12(sp)
   12480:	dc800217 	ldw	r18,8(sp)
   12484:	dc400117 	ldw	r17,4(sp)
   12488:	dc000017 	ldw	r16,0(sp)
   1248c:	dec00504 	addi	sp,sp,20
   12490:	f800283a 	ret
   12494:	880d883a 	mov	r6,r17
   12498:	880b883a 	mov	r5,r17
   1249c:	9809883a 	mov	r4,r19
   124a0:	00121180 	call	12118 <__multiply>
   124a4:	88800015 	stw	r2,0(r17)
   124a8:	10000015 	stw	zero,0(r2)
   124ac:	003fdf06 	br	1242c <__pow5mult+0x50>
   124b0:	1025883a 	mov	r18,r2
   124b4:	003fd906 	br	1241c <__pow5mult+0x40>
   124b8:	100490ba 	slli	r2,r2,2
   124bc:	00c000b4 	movhi	r3,2
   124c0:	000f883a 	mov	r7,zero
   124c4:	10c7883a 	add	r3,r2,r3
   124c8:	19aa9617 	ldw	r6,-21928(r3)
   124cc:	0011cc00 	call	11cc0 <__multadd>
   124d0:	1025883a 	mov	r18,r2
   124d4:	003fcc06 	br	12408 <__pow5mult+0x2c>
   124d8:	01400044 	movi	r5,1
   124dc:	9809883a 	mov	r4,r19
   124e0:	0011bf80 	call	11bf8 <_Balloc>
   124e4:	1023883a 	mov	r17,r2
   124e8:	10000726 	beq	r2,zero,12508 <__pow5mult+0x12c>
   124ec:	00809c44 	movi	r2,625
   124f0:	88800515 	stw	r2,20(r17)
   124f4:	00800044 	movi	r2,1
   124f8:	88800415 	stw	r2,16(r17)
   124fc:	9c401215 	stw	r17,72(r19)
   12500:	88000015 	stw	zero,0(r17)
   12504:	003fca06 	br	12430 <__pow5mult+0x54>
   12508:	01c000b4 	movhi	r7,2
   1250c:	010000b4 	movhi	r4,2
   12510:	39ea7204 	addi	r7,r7,-22072
   12514:	000d883a 	mov	r6,zero
   12518:	01405004 	movi	r5,320
   1251c:	212a8704 	addi	r4,r4,-21988
   12520:	00147d00 	call	147d0 <__assert_func>

00012524 <__lshift>:
   12524:	defff804 	addi	sp,sp,-32
   12528:	dd800615 	stw	r22,24(sp)
   1252c:	dc000015 	stw	r16,0(sp)
   12530:	302dd17a 	srai	r22,r6,5
   12534:	2c000417 	ldw	r16,16(r5)
   12538:	28800217 	ldw	r2,8(r5)
   1253c:	dd000415 	stw	r20,16(sp)
   12540:	b421883a 	add	r16,r22,r16
   12544:	dcc00315 	stw	r19,12(sp)
   12548:	dc800215 	stw	r18,8(sp)
   1254c:	dc400115 	stw	r17,4(sp)
   12550:	dfc00715 	stw	ra,28(sp)
   12554:	dd400515 	stw	r21,20(sp)
   12558:	85000044 	addi	r20,r16,1
   1255c:	2827883a 	mov	r19,r5
   12560:	3025883a 	mov	r18,r6
   12564:	29400117 	ldw	r5,4(r5)
   12568:	2023883a 	mov	r17,r4
   1256c:	1500030e 	bge	r2,r20,1257c <__lshift+0x58>
   12570:	1085883a 	add	r2,r2,r2
   12574:	29400044 	addi	r5,r5,1
   12578:	153ffd16 	blt	r2,r20,12570 <__lshift+0x4c>
   1257c:	8809883a 	mov	r4,r17
   12580:	0011bf80 	call	11bf8 <_Balloc>
   12584:	102b883a 	mov	r21,r2
   12588:	10004126 	beq	r2,zero,12690 <__lshift+0x16c>
   1258c:	11000504 	addi	r4,r2,20
   12590:	0580050e 	bge	zero,r22,125a8 <__lshift+0x84>
   12594:	b02c90ba 	slli	r22,r22,2
   12598:	000b883a 	mov	r5,zero
   1259c:	b00d883a 	mov	r6,r22
   125a0:	0011b080 	call	11b08 <memset>
   125a4:	1589883a 	add	r4,r2,r22
   125a8:	9a000417 	ldw	r8,16(r19)
   125ac:	98c00504 	addi	r3,r19,20
   125b0:	948007cc 	andi	r18,r18,31
   125b4:	401090ba 	slli	r8,r8,2
   125b8:	1a11883a 	add	r8,r3,r8
   125bc:	90002c26 	beq	r18,zero,12670 <__lshift+0x14c>
   125c0:	01400804 	movi	r5,32
   125c4:	2c8bc83a 	sub	r5,r5,r18
   125c8:	2005883a 	mov	r2,r4
   125cc:	000f883a 	mov	r7,zero
   125d0:	19800017 	ldw	r6,0(r3)
   125d4:	10800104 	addi	r2,r2,4
   125d8:	18c00104 	addi	r3,r3,4
   125dc:	348c983a 	sll	r6,r6,r18
   125e0:	31ccb03a 	or	r6,r6,r7
   125e4:	11bfff15 	stw	r6,-4(r2)
   125e8:	19bfff17 	ldw	r6,-4(r3)
   125ec:	314ed83a 	srl	r7,r6,r5
   125f0:	1a3ff736 	bltu	r3,r8,125d0 <__lshift+0xac>
   125f4:	98800544 	addi	r2,r19,21
   125f8:	40802336 	bltu	r8,r2,12688 <__lshift+0x164>
   125fc:	44c7c83a 	sub	r3,r8,r19
   12600:	18fffac4 	addi	r3,r3,-21
   12604:	1806d0ba 	srli	r3,r3,2
   12608:	18c00044 	addi	r3,r3,1
   1260c:	180690ba 	slli	r3,r3,2
   12610:	20c9883a 	add	r4,r4,r3
   12614:	21c00015 	stw	r7,0(r4)
   12618:	38000126 	beq	r7,zero,12620 <__lshift+0xfc>
   1261c:	a021883a 	mov	r16,r20
   12620:	ac000415 	stw	r16,16(r21)
   12624:	98000726 	beq	r19,zero,12644 <__lshift+0x120>
   12628:	98c00117 	ldw	r3,4(r19)
   1262c:	88801317 	ldw	r2,76(r17)
   12630:	180690ba 	slli	r3,r3,2
   12634:	10c5883a 	add	r2,r2,r3
   12638:	10c00017 	ldw	r3,0(r2)
   1263c:	98c00015 	stw	r3,0(r19)
   12640:	14c00015 	stw	r19,0(r2)
   12644:	a805883a 	mov	r2,r21
   12648:	dfc00717 	ldw	ra,28(sp)
   1264c:	dd800617 	ldw	r22,24(sp)
   12650:	dd400517 	ldw	r21,20(sp)
   12654:	dd000417 	ldw	r20,16(sp)
   12658:	dcc00317 	ldw	r19,12(sp)
   1265c:	dc800217 	ldw	r18,8(sp)
   12660:	dc400117 	ldw	r17,4(sp)
   12664:	dc000017 	ldw	r16,0(sp)
   12668:	dec00804 	addi	sp,sp,32
   1266c:	f800283a 	ret
   12670:	18800017 	ldw	r2,0(r3)
   12674:	18c00104 	addi	r3,r3,4
   12678:	21000104 	addi	r4,r4,4
   1267c:	20bfff15 	stw	r2,-4(r4)
   12680:	1a3ffb36 	bltu	r3,r8,12670 <__lshift+0x14c>
   12684:	003fe606 	br	12620 <__lshift+0xfc>
   12688:	00c00104 	movi	r3,4
   1268c:	003fe006 	br	12610 <__lshift+0xec>
   12690:	01c000b4 	movhi	r7,2
   12694:	010000b4 	movhi	r4,2
   12698:	39ea7204 	addi	r7,r7,-22072
   1269c:	000d883a 	mov	r6,zero
   126a0:	01407644 	movi	r5,473
   126a4:	212a8704 	addi	r4,r4,-21988
   126a8:	00147d00 	call	147d0 <__assert_func>

000126ac <__mcmp>:
   126ac:	21800417 	ldw	r6,16(r4)
   126b0:	28c00417 	ldw	r3,16(r5)
   126b4:	30c5c83a 	sub	r2,r6,r3
   126b8:	30c00e1e 	bne	r6,r3,126f4 <__mcmp+0x48>
   126bc:	180690ba 	slli	r3,r3,2
   126c0:	21c00504 	addi	r7,r4,20
   126c4:	29400504 	addi	r5,r5,20
   126c8:	38c9883a 	add	r4,r7,r3
   126cc:	28c7883a 	add	r3,r5,r3
   126d0:	00000106 	br	126d8 <__mcmp+0x2c>
   126d4:	3900082e 	bgeu	r7,r4,126f8 <__mcmp+0x4c>
   126d8:	21bfff17 	ldw	r6,-4(r4)
   126dc:	197fff17 	ldw	r5,-4(r3)
   126e0:	213fff04 	addi	r4,r4,-4
   126e4:	18ffff04 	addi	r3,r3,-4
   126e8:	317ffa26 	beq	r6,r5,126d4 <__mcmp+0x28>
   126ec:	3140032e 	bgeu	r6,r5,126fc <__mcmp+0x50>
   126f0:	00bfffc4 	movi	r2,-1
   126f4:	f800283a 	ret
   126f8:	f800283a 	ret
   126fc:	00800044 	movi	r2,1
   12700:	f800283a 	ret

00012704 <__mdiff>:
   12704:	28800417 	ldw	r2,16(r5)
   12708:	30c00417 	ldw	r3,16(r6)
   1270c:	defffc04 	addi	sp,sp,-16
   12710:	dc800215 	stw	r18,8(sp)
   12714:	dc400115 	stw	r17,4(sp)
   12718:	dc000015 	stw	r16,0(sp)
   1271c:	dfc00315 	stw	ra,12(sp)
   12720:	2823883a 	mov	r17,r5
   12724:	3021883a 	mov	r16,r6
   12728:	10e5c83a 	sub	r18,r2,r3
   1272c:	10c0641e 	bne	r2,r3,128c0 <__mdiff+0x1bc>
   12730:	180c90ba 	slli	r6,r3,2
   12734:	29400504 	addi	r5,r5,20
   12738:	80c00504 	addi	r3,r16,20
   1273c:	2985883a 	add	r2,r5,r6
   12740:	1987883a 	add	r3,r3,r6
   12744:	00000106 	br	1274c <__mdiff+0x48>
   12748:	2880642e 	bgeu	r5,r2,128dc <__mdiff+0x1d8>
   1274c:	11bfff17 	ldw	r6,-4(r2)
   12750:	19ffff17 	ldw	r7,-4(r3)
   12754:	10bfff04 	addi	r2,r2,-4
   12758:	18ffff04 	addi	r3,r3,-4
   1275c:	31fffa26 	beq	r6,r7,12748 <__mdiff+0x44>
   12760:	31c05236 	bltu	r6,r7,128ac <__mdiff+0x1a8>
   12764:	89400117 	ldw	r5,4(r17)
   12768:	0011bf80 	call	11bf8 <_Balloc>
   1276c:	10006226 	beq	r2,zero,128f8 <__mdiff+0x1f4>
   12770:	8a400417 	ldw	r9,16(r17)
   12774:	83000417 	ldw	r12,16(r16)
   12778:	8ac00504 	addi	r11,r17,20
   1277c:	481090ba 	slli	r8,r9,2
   12780:	601890ba 	slli	r12,r12,2
   12784:	81800504 	addi	r6,r16,20
   12788:	13400504 	addi	r13,r2,20
   1278c:	14800315 	stw	r18,12(r2)
   12790:	5a11883a 	add	r8,r11,r8
   12794:	3319883a 	add	r12,r6,r12
   12798:	681d883a 	mov	r14,r13
   1279c:	5815883a 	mov	r10,r11
   127a0:	0007883a 	mov	r3,zero
   127a4:	51000017 	ldw	r4,0(r10)
   127a8:	31c00017 	ldw	r7,0(r6)
   127ac:	73800104 	addi	r14,r14,4
   127b0:	217fffcc 	andi	r5,r4,65535
   127b4:	28cb883a 	add	r5,r5,r3
   127b8:	38ffffcc 	andi	r3,r7,65535
   127bc:	28cbc83a 	sub	r5,r5,r3
   127c0:	380ed43a 	srli	r7,r7,16
   127c4:	2006d43a 	srli	r3,r4,16
   127c8:	2809d43a 	srai	r4,r5,16
   127cc:	297fffcc 	andi	r5,r5,65535
   127d0:	19c7c83a 	sub	r3,r3,r7
   127d4:	1907883a 	add	r3,r3,r4
   127d8:	1808943a 	slli	r4,r3,16
   127dc:	31800104 	addi	r6,r6,4
   127e0:	1807d43a 	srai	r3,r3,16
   127e4:	214ab03a 	or	r5,r4,r5
   127e8:	717fff15 	stw	r5,-4(r14)
   127ec:	52800104 	addi	r10,r10,4
   127f0:	333fec36 	bltu	r6,r12,127a4 <__mdiff+0xa0>
   127f4:	640fc83a 	sub	r7,r12,r16
   127f8:	39fffac4 	addi	r7,r7,-21
   127fc:	84000544 	addi	r16,r16,21
   12800:	380ed0ba 	srli	r7,r7,2
   12804:	64003336 	bltu	r12,r16,128d4 <__mdiff+0x1d0>
   12808:	380890ba 	slli	r4,r7,2
   1280c:	6909883a 	add	r4,r13,r4
   12810:	64002e36 	bltu	r12,r16,128cc <__mdiff+0x1c8>
   12814:	39800044 	addi	r6,r7,1
   12818:	300c90ba 	slli	r6,r6,2
   1281c:	5997883a 	add	r11,r11,r6
   12820:	699b883a 	add	r13,r13,r6
   12824:	5a00152e 	bgeu	r11,r8,1287c <__mdiff+0x178>
   12828:	680f883a 	mov	r7,r13
   1282c:	580d883a 	mov	r6,r11
   12830:	31000017 	ldw	r4,0(r6)
   12834:	39c00104 	addi	r7,r7,4
   12838:	31800104 	addi	r6,r6,4
   1283c:	217fffcc 	andi	r5,r4,65535
   12840:	28cb883a 	add	r5,r5,r3
   12844:	2815d43a 	srai	r10,r5,16
   12848:	2006d43a 	srli	r3,r4,16
   1284c:	297fffcc 	andi	r5,r5,65535
   12850:	1a87883a 	add	r3,r3,r10
   12854:	1814943a 	slli	r10,r3,16
   12858:	1807d43a 	srai	r3,r3,16
   1285c:	514ab03a 	or	r5,r10,r5
   12860:	397fff15 	stw	r5,-4(r7)
   12864:	323ff236 	bltu	r6,r8,12830 <__mdiff+0x12c>
   12868:	413fffc4 	addi	r4,r8,-1
   1286c:	22c9c83a 	sub	r4,r4,r11
   12870:	2008d0ba 	srli	r4,r4,2
   12874:	200890ba 	slli	r4,r4,2
   12878:	6909883a 	add	r4,r13,r4
   1287c:	2800041e 	bne	r5,zero,12890 <__mdiff+0x18c>
   12880:	20ffff17 	ldw	r3,-4(r4)
   12884:	4a7fffc4 	addi	r9,r9,-1
   12888:	213fff04 	addi	r4,r4,-4
   1288c:	183ffc26 	beq	r3,zero,12880 <__mdiff+0x17c>
   12890:	12400415 	stw	r9,16(r2)
   12894:	dfc00317 	ldw	ra,12(sp)
   12898:	dc800217 	ldw	r18,8(sp)
   1289c:	dc400117 	ldw	r17,4(sp)
   128a0:	dc000017 	ldw	r16,0(sp)
   128a4:	dec00404 	addi	sp,sp,16
   128a8:	f800283a 	ret
   128ac:	8805883a 	mov	r2,r17
   128b0:	04800044 	movi	r18,1
   128b4:	8023883a 	mov	r17,r16
   128b8:	1021883a 	mov	r16,r2
   128bc:	003fa906 	br	12764 <__mdiff+0x60>
   128c0:	903ffa16 	blt	r18,zero,128ac <__mdiff+0x1a8>
   128c4:	0025883a 	mov	r18,zero
   128c8:	003fa606 	br	12764 <__mdiff+0x60>
   128cc:	01800104 	movi	r6,4
   128d0:	003fd206 	br	1281c <__mdiff+0x118>
   128d4:	0009883a 	mov	r4,zero
   128d8:	003fcc06 	br	1280c <__mdiff+0x108>
   128dc:	000b883a 	mov	r5,zero
   128e0:	0011bf80 	call	11bf8 <_Balloc>
   128e4:	10000b26 	beq	r2,zero,12914 <__mdiff+0x210>
   128e8:	00c00044 	movi	r3,1
   128ec:	10c00415 	stw	r3,16(r2)
   128f0:	10000515 	stw	zero,20(r2)
   128f4:	003fe706 	br	12894 <__mdiff+0x190>
   128f8:	01c000b4 	movhi	r7,2
   128fc:	010000b4 	movhi	r4,2
   12900:	39ea7204 	addi	r7,r7,-22072
   12904:	000d883a 	mov	r6,zero
   12908:	01409004 	movi	r5,576
   1290c:	212a8704 	addi	r4,r4,-21988
   12910:	00147d00 	call	147d0 <__assert_func>
   12914:	01c000b4 	movhi	r7,2
   12918:	010000b4 	movhi	r4,2
   1291c:	39ea7204 	addi	r7,r7,-22072
   12920:	000d883a 	mov	r6,zero
   12924:	01408c84 	movi	r5,562
   12928:	212a8704 	addi	r4,r4,-21988
   1292c:	00147d00 	call	147d0 <__assert_func>

00012930 <__ulp>:
   12930:	28dffc2c 	andhi	r3,r5,32752
   12934:	017f3034 	movhi	r5,64704
   12938:	1947883a 	add	r3,r3,r5
   1293c:	00c0020e 	bge	zero,r3,12948 <__ulp+0x18>
   12940:	0005883a 	mov	r2,zero
   12944:	f800283a 	ret
   12948:	00c7c83a 	sub	r3,zero,r3
   1294c:	1807d53a 	srai	r3,r3,20
   12950:	18800508 	cmpgei	r2,r3,20
   12954:	1000041e 	bne	r2,zero,12968 <__ulp+0x38>
   12958:	00800234 	movhi	r2,8
   1295c:	10c7d83a 	sra	r3,r2,r3
   12960:	0005883a 	mov	r2,zero
   12964:	f800283a 	ret
   12968:	193ffb04 	addi	r4,r3,-20
   1296c:	208007c8 	cmpgei	r2,r4,31
   12970:	0007883a 	mov	r3,zero
   12974:	1000031e 	bne	r2,zero,12984 <__ulp+0x54>
   12978:	00a00034 	movhi	r2,32768
   1297c:	1104d83a 	srl	r2,r2,r4
   12980:	f800283a 	ret
   12984:	00800044 	movi	r2,1
   12988:	f800283a 	ret

0001298c <__b2d>:
   1298c:	defffa04 	addi	sp,sp,-24
   12990:	dc400115 	stw	r17,4(sp)
   12994:	24400417 	ldw	r17,16(r4)
   12998:	dc000015 	stw	r16,0(sp)
   1299c:	24000504 	addi	r16,r4,20
   129a0:	882290ba 	slli	r17,r17,2
   129a4:	dc800215 	stw	r18,8(sp)
   129a8:	dd000415 	stw	r20,16(sp)
   129ac:	8463883a 	add	r17,r16,r17
   129b0:	8cbfff17 	ldw	r18,-4(r17)
   129b4:	dcc00315 	stw	r19,12(sp)
   129b8:	dfc00515 	stw	ra,20(sp)
   129bc:	9009883a 	mov	r4,r18
   129c0:	2827883a 	mov	r19,r5
   129c4:	0011f540 	call	11f54 <__hi0bits>
   129c8:	00c00804 	movi	r3,32
   129cc:	1889c83a 	sub	r4,r3,r2
   129d0:	99000015 	stw	r4,0(r19)
   129d4:	110002c8 	cmpgei	r4,r2,11
   129d8:	8d3fff04 	addi	r20,r17,-4
   129dc:	20002026 	beq	r4,zero,12a60 <__b2d+0xd4>
   129e0:	10bffd44 	addi	r2,r2,-11
   129e4:	85000e2e 	bgeu	r16,r20,12a20 <__b2d+0x94>
   129e8:	897ffe17 	ldw	r5,-8(r17)
   129ec:	10001226 	beq	r2,zero,12a38 <__b2d+0xac>
   129f0:	1889c83a 	sub	r4,r3,r2
   129f4:	90a4983a 	sll	r18,r18,r2
   129f8:	2906d83a 	srl	r3,r5,r4
   129fc:	89bffe04 	addi	r6,r17,-8
   12a00:	2884983a 	sll	r2,r5,r2
   12a04:	90e4b03a 	or	r18,r18,r3
   12a08:	90cffc34 	orhi	r3,r18,16368
   12a0c:	81800c2e 	bgeu	r16,r6,12a40 <__b2d+0xb4>
   12a10:	897ffd17 	ldw	r5,-12(r17)
   12a14:	2908d83a 	srl	r4,r5,r4
   12a18:	1104b03a 	or	r2,r2,r4
   12a1c:	00000806 	br	12a40 <__b2d+0xb4>
   12a20:	10000426 	beq	r2,zero,12a34 <__b2d+0xa8>
   12a24:	90a4983a 	sll	r18,r18,r2
   12a28:	0005883a 	mov	r2,zero
   12a2c:	90cffc34 	orhi	r3,r18,16368
   12a30:	00000306 	br	12a40 <__b2d+0xb4>
   12a34:	000b883a 	mov	r5,zero
   12a38:	90cffc34 	orhi	r3,r18,16368
   12a3c:	2805883a 	mov	r2,r5
   12a40:	dfc00517 	ldw	ra,20(sp)
   12a44:	dd000417 	ldw	r20,16(sp)
   12a48:	dcc00317 	ldw	r19,12(sp)
   12a4c:	dc800217 	ldw	r18,8(sp)
   12a50:	dc400117 	ldw	r17,4(sp)
   12a54:	dc000017 	ldw	r16,0(sp)
   12a58:	dec00604 	addi	sp,sp,24
   12a5c:	f800283a 	ret
   12a60:	014002c4 	movi	r5,11
   12a64:	2889c83a 	sub	r4,r5,r2
   12a68:	9106d83a 	srl	r3,r18,r4
   12a6c:	18cffc34 	orhi	r3,r3,16368
   12a70:	85000536 	bltu	r16,r20,12a88 <__b2d+0xfc>
   12a74:	000b883a 	mov	r5,zero
   12a78:	10800544 	addi	r2,r2,21
   12a7c:	9084983a 	sll	r2,r18,r2
   12a80:	1144b03a 	or	r2,r2,r5
   12a84:	003fee06 	br	12a40 <__b2d+0xb4>
   12a88:	897ffe17 	ldw	r5,-8(r17)
   12a8c:	290ad83a 	srl	r5,r5,r4
   12a90:	003ff906 	br	12a78 <__b2d+0xec>

00012a94 <__d2b>:
   12a94:	defff804 	addi	sp,sp,-32
   12a98:	dd000615 	stw	r20,24(sp)
   12a9c:	2829883a 	mov	r20,r5
   12aa0:	01400044 	movi	r5,1
   12aa4:	dcc00515 	stw	r19,20(sp)
   12aa8:	dc000215 	stw	r16,8(sp)
   12aac:	dfc00715 	stw	ra,28(sp)
   12ab0:	dc800415 	stw	r18,16(sp)
   12ab4:	dc400315 	stw	r17,12(sp)
   12ab8:	3021883a 	mov	r16,r6
   12abc:	3827883a 	mov	r19,r7
   12ac0:	0011bf80 	call	11bf8 <_Balloc>
   12ac4:	10004526 	beq	r2,zero,12bdc <__d2b+0x148>
   12ac8:	8024d53a 	srli	r18,r16,20
   12acc:	01800434 	movhi	r6,16
   12ad0:	31bfffc4 	addi	r6,r6,-1
   12ad4:	9481ffcc 	andi	r18,r18,2047
   12ad8:	1023883a 	mov	r17,r2
   12adc:	81a0703a 	and	r16,r16,r6
   12ae0:	90000126 	beq	r18,zero,12ae8 <__d2b+0x54>
   12ae4:	84000434 	orhi	r16,r16,16
   12ae8:	dc000115 	stw	r16,4(sp)
   12aec:	a0002226 	beq	r20,zero,12b78 <__d2b+0xe4>
   12af0:	d809883a 	mov	r4,sp
   12af4:	dd000015 	stw	r20,0(sp)
   12af8:	0011fb80 	call	11fb8 <__lo0bits>
   12afc:	d8c00117 	ldw	r3,4(sp)
   12b00:	10003326 	beq	r2,zero,12bd0 <__d2b+0x13c>
   12b04:	01000804 	movi	r4,32
   12b08:	2089c83a 	sub	r4,r4,r2
   12b0c:	1908983a 	sll	r4,r3,r4
   12b10:	d9400017 	ldw	r5,0(sp)
   12b14:	1886d83a 	srl	r3,r3,r2
   12b18:	2148b03a 	or	r4,r4,r5
   12b1c:	89000515 	stw	r4,20(r17)
   12b20:	d8c00115 	stw	r3,4(sp)
   12b24:	88c00615 	stw	r3,24(r17)
   12b28:	1800271e 	bne	r3,zero,12bc8 <__d2b+0x134>
   12b2c:	04000044 	movi	r16,1
   12b30:	8c000415 	stw	r16,16(r17)
   12b34:	90001926 	beq	r18,zero,12b9c <__d2b+0x108>
   12b38:	00c00d44 	movi	r3,53
   12b3c:	94bef344 	addi	r18,r18,-1075
   12b40:	90a5883a 	add	r18,r18,r2
   12b44:	1885c83a 	sub	r2,r3,r2
   12b48:	d8c00817 	ldw	r3,32(sp)
   12b4c:	9c800015 	stw	r18,0(r19)
   12b50:	18800015 	stw	r2,0(r3)
   12b54:	8805883a 	mov	r2,r17
   12b58:	dfc00717 	ldw	ra,28(sp)
   12b5c:	dd000617 	ldw	r20,24(sp)
   12b60:	dcc00517 	ldw	r19,20(sp)
   12b64:	dc800417 	ldw	r18,16(sp)
   12b68:	dc400317 	ldw	r17,12(sp)
   12b6c:	dc000217 	ldw	r16,8(sp)
   12b70:	dec00804 	addi	sp,sp,32
   12b74:	f800283a 	ret
   12b78:	d9000104 	addi	r4,sp,4
   12b7c:	0011fb80 	call	11fb8 <__lo0bits>
   12b80:	00c00044 	movi	r3,1
   12b84:	88c00415 	stw	r3,16(r17)
   12b88:	d8c00117 	ldw	r3,4(sp)
   12b8c:	10800804 	addi	r2,r2,32
   12b90:	04000044 	movi	r16,1
   12b94:	88c00515 	stw	r3,20(r17)
   12b98:	903fe71e 	bne	r18,zero,12b38 <__d2b+0xa4>
   12b9c:	800690ba 	slli	r3,r16,2
   12ba0:	10bef384 	addi	r2,r2,-1074
   12ba4:	98800015 	stw	r2,0(r19)
   12ba8:	88c5883a 	add	r2,r17,r3
   12bac:	11000417 	ldw	r4,16(r2)
   12bb0:	8020917a 	slli	r16,r16,5
   12bb4:	0011f540 	call	11f54 <__hi0bits>
   12bb8:	80a1c83a 	sub	r16,r16,r2
   12bbc:	d8800817 	ldw	r2,32(sp)
   12bc0:	14000015 	stw	r16,0(r2)
   12bc4:	003fe306 	br	12b54 <__d2b+0xc0>
   12bc8:	04000084 	movi	r16,2
   12bcc:	003fd806 	br	12b30 <__d2b+0x9c>
   12bd0:	d9000017 	ldw	r4,0(sp)
   12bd4:	89000515 	stw	r4,20(r17)
   12bd8:	003fd206 	br	12b24 <__d2b+0x90>
   12bdc:	01c000b4 	movhi	r7,2
   12be0:	010000b4 	movhi	r4,2
   12be4:	39ea7204 	addi	r7,r7,-22072
   12be8:	000d883a 	mov	r6,zero
   12bec:	0140c284 	movi	r5,778
   12bf0:	212a8704 	addi	r4,r4,-21988
   12bf4:	00147d00 	call	147d0 <__assert_func>

00012bf8 <__ratio>:
   12bf8:	defff904 	addi	sp,sp,-28
   12bfc:	dc400315 	stw	r17,12(sp)
   12c00:	2823883a 	mov	r17,r5
   12c04:	d80b883a 	mov	r5,sp
   12c08:	dfc00615 	stw	ra,24(sp)
   12c0c:	dcc00515 	stw	r19,20(sp)
   12c10:	dc800415 	stw	r18,16(sp)
   12c14:	2027883a 	mov	r19,r4
   12c18:	dc000215 	stw	r16,8(sp)
   12c1c:	001298c0 	call	1298c <__b2d>
   12c20:	d9400104 	addi	r5,sp,4
   12c24:	8809883a 	mov	r4,r17
   12c28:	1025883a 	mov	r18,r2
   12c2c:	1821883a 	mov	r16,r3
   12c30:	001298c0 	call	1298c <__b2d>
   12c34:	89000417 	ldw	r4,16(r17)
   12c38:	9a000417 	ldw	r8,16(r19)
   12c3c:	d9400117 	ldw	r5,4(sp)
   12c40:	100d883a 	mov	r6,r2
   12c44:	4111c83a 	sub	r8,r8,r4
   12c48:	d9000017 	ldw	r4,0(sp)
   12c4c:	4010917a 	slli	r8,r8,5
   12c50:	180f883a 	mov	r7,r3
   12c54:	2149c83a 	sub	r4,r4,r5
   12c58:	4111883a 	add	r8,r8,r4
   12c5c:	02000c0e 	bge	zero,r8,12c90 <__ratio+0x98>
   12c60:	4010953a 	slli	r8,r8,20
   12c64:	4421883a 	add	r16,r8,r16
   12c68:	9009883a 	mov	r4,r18
   12c6c:	800b883a 	mov	r5,r16
   12c70:	000a51c0 	call	a51c <__divdf3>
   12c74:	dfc00617 	ldw	ra,24(sp)
   12c78:	dcc00517 	ldw	r19,20(sp)
   12c7c:	dc800417 	ldw	r18,16(sp)
   12c80:	dc400317 	ldw	r17,12(sp)
   12c84:	dc000217 	ldw	r16,8(sp)
   12c88:	dec00704 	addi	sp,sp,28
   12c8c:	f800283a 	ret
   12c90:	4010953a 	slli	r8,r8,20
   12c94:	1a0fc83a 	sub	r7,r3,r8
   12c98:	003ff306 	br	12c68 <__ratio+0x70>

00012c9c <_mprec_log10>:
   12c9c:	defffe04 	addi	sp,sp,-8
   12ca0:	dc000015 	stw	r16,0(sp)
   12ca4:	dfc00115 	stw	ra,4(sp)
   12ca8:	20800608 	cmpgei	r2,r4,24
   12cac:	2021883a 	mov	r16,r4
   12cb0:	10000f26 	beq	r2,zero,12cf0 <_mprec_log10+0x54>
   12cb4:	0009883a 	mov	r4,zero
   12cb8:	014ffc34 	movhi	r5,16368
   12cbc:	000d883a 	mov	r6,zero
   12cc0:	01d00934 	movhi	r7,16420
   12cc4:	000b0800 	call	b080 <__muldf3>
   12cc8:	843fffc4 	addi	r16,r16,-1
   12ccc:	1009883a 	mov	r4,r2
   12cd0:	180b883a 	mov	r5,r3
   12cd4:	803ff91e 	bne	r16,zero,12cbc <_mprec_log10+0x20>
   12cd8:	2005883a 	mov	r2,r4
   12cdc:	2807883a 	mov	r3,r5
   12ce0:	dfc00117 	ldw	ra,4(sp)
   12ce4:	dc000017 	ldw	r16,0(sp)
   12ce8:	dec00204 	addi	sp,sp,8
   12cec:	f800283a 	ret
   12cf0:	202090fa 	slli	r16,r4,3
   12cf4:	008000b4 	movhi	r2,2
   12cf8:	10aaae04 	addi	r2,r2,-21832
   12cfc:	1421883a 	add	r16,r2,r16
   12d00:	81000017 	ldw	r4,0(r16)
   12d04:	81400117 	ldw	r5,4(r16)
   12d08:	003ff306 	br	12cd8 <_mprec_log10+0x3c>

00012d0c <__copybits>:
   12d0c:	297fffc4 	addi	r5,r5,-1
   12d10:	280fd17a 	srai	r7,r5,5
   12d14:	31400417 	ldw	r5,16(r6)
   12d18:	30800504 	addi	r2,r6,20
   12d1c:	39c00044 	addi	r7,r7,1
   12d20:	280a90ba 	slli	r5,r5,2
   12d24:	380e90ba 	slli	r7,r7,2
   12d28:	114b883a 	add	r5,r2,r5
   12d2c:	21cf883a 	add	r7,r4,r7
   12d30:	11400c2e 	bgeu	r2,r5,12d64 <__copybits+0x58>
   12d34:	2007883a 	mov	r3,r4
   12d38:	12000017 	ldw	r8,0(r2)
   12d3c:	10800104 	addi	r2,r2,4
   12d40:	18c00104 	addi	r3,r3,4
   12d44:	1a3fff15 	stw	r8,-4(r3)
   12d48:	117ffb36 	bltu	r2,r5,12d38 <__copybits+0x2c>
   12d4c:	2985c83a 	sub	r2,r5,r6
   12d50:	10bffac4 	addi	r2,r2,-21
   12d54:	1004d0ba 	srli	r2,r2,2
   12d58:	10800044 	addi	r2,r2,1
   12d5c:	100490ba 	slli	r2,r2,2
   12d60:	2089883a 	add	r4,r4,r2
   12d64:	21c0072e 	bgeu	r4,r7,12d84 <__copybits+0x78>
   12d68:	39bfffc4 	addi	r6,r7,-1
   12d6c:	310dc83a 	sub	r6,r6,r4
   12d70:	300cd0ba 	srli	r6,r6,2
   12d74:	000b883a 	mov	r5,zero
   12d78:	31800044 	addi	r6,r6,1
   12d7c:	300c90ba 	slli	r6,r6,2
   12d80:	0011b081 	jmpi	11b08 <memset>
   12d84:	f800283a 	ret

00012d88 <__any_on>:
   12d88:	20c00417 	ldw	r3,16(r4)
   12d8c:	280dd17a 	srai	r6,r5,5
   12d90:	21000504 	addi	r4,r4,20
   12d94:	1980080e 	bge	r3,r6,12db8 <__any_on+0x30>
   12d98:	180490ba 	slli	r2,r3,2
   12d9c:	2085883a 	add	r2,r4,r2
   12da0:	20800f2e 	bgeu	r4,r2,12de0 <__any_on+0x58>
   12da4:	10ffff17 	ldw	r3,-4(r2)
   12da8:	10bfff04 	addi	r2,r2,-4
   12dac:	183ffc26 	beq	r3,zero,12da0 <__any_on+0x18>
   12db0:	00800044 	movi	r2,1
   12db4:	f800283a 	ret
   12db8:	300490ba 	slli	r2,r6,2
   12dbc:	2085883a 	add	r2,r4,r2
   12dc0:	30fff70e 	bge	r6,r3,12da0 <__any_on+0x18>
   12dc4:	294007cc 	andi	r5,r5,31
   12dc8:	283ff526 	beq	r5,zero,12da0 <__any_on+0x18>
   12dcc:	11800017 	ldw	r6,0(r2)
   12dd0:	3146d83a 	srl	r3,r6,r5
   12dd4:	194a983a 	sll	r5,r3,r5
   12dd8:	317ff51e 	bne	r6,r5,12db0 <__any_on+0x28>
   12ddc:	003ff006 	br	12da0 <__any_on+0x18>
   12de0:	0005883a 	mov	r2,zero
   12de4:	f800283a 	ret

00012de8 <_putc_r>:
   12de8:	defffc04 	addi	sp,sp,-16
   12dec:	dc400215 	stw	r17,8(sp)
   12df0:	dfc00315 	stw	ra,12(sp)
   12df4:	2023883a 	mov	r17,r4
   12df8:	20000226 	beq	r4,zero,12e04 <_putc_r+0x1c>
   12dfc:	20800e17 	ldw	r2,56(r4)
   12e00:	10000e26 	beq	r2,zero,12e3c <_putc_r+0x54>
   12e04:	30800217 	ldw	r2,8(r6)
   12e08:	10bfffc4 	addi	r2,r2,-1
   12e0c:	30800215 	stw	r2,8(r6)
   12e10:	10001316 	blt	r2,zero,12e60 <_putc_r+0x78>
   12e14:	30800017 	ldw	r2,0(r6)
   12e18:	11400005 	stb	r5,0(r2)
   12e1c:	30800017 	ldw	r2,0(r6)
   12e20:	10c00044 	addi	r3,r2,1
   12e24:	30c00015 	stw	r3,0(r6)
   12e28:	10800003 	ldbu	r2,0(r2)
   12e2c:	dfc00317 	ldw	ra,12(sp)
   12e30:	dc400217 	ldw	r17,8(sp)
   12e34:	dec00404 	addi	sp,sp,16
   12e38:	f800283a 	ret
   12e3c:	d9800115 	stw	r6,4(sp)
   12e40:	d9400015 	stw	r5,0(sp)
   12e44:	00112300 	call	11230 <__sinit>
   12e48:	d9800117 	ldw	r6,4(sp)
   12e4c:	d9400017 	ldw	r5,0(sp)
   12e50:	30800217 	ldw	r2,8(r6)
   12e54:	10bfffc4 	addi	r2,r2,-1
   12e58:	30800215 	stw	r2,8(r6)
   12e5c:	103fed0e 	bge	r2,zero,12e14 <_putc_r+0x2c>
   12e60:	30c00617 	ldw	r3,24(r6)
   12e64:	10c00e16 	blt	r2,r3,12ea0 <_putc_r+0xb8>
   12e68:	30800017 	ldw	r2,0(r6)
   12e6c:	11400005 	stb	r5,0(r2)
   12e70:	30c00017 	ldw	r3,0(r6)
   12e74:	18800003 	ldbu	r2,0(r3)
   12e78:	108002a0 	cmpeqi	r2,r2,10
   12e7c:	1000071e 	bne	r2,zero,12e9c <_putc_r+0xb4>
   12e80:	18800044 	addi	r2,r3,1
   12e84:	30800015 	stw	r2,0(r6)
   12e88:	18800003 	ldbu	r2,0(r3)
   12e8c:	dfc00317 	ldw	ra,12(sp)
   12e90:	dc400217 	ldw	r17,8(sp)
   12e94:	dec00404 	addi	sp,sp,16
   12e98:	f800283a 	ret
   12e9c:	01400284 	movi	r5,10
   12ea0:	8809883a 	mov	r4,r17
   12ea4:	dfc00317 	ldw	ra,12(sp)
   12ea8:	dc400217 	ldw	r17,8(sp)
   12eac:	dec00404 	addi	sp,sp,16
   12eb0:	00145b41 	jmpi	145b4 <__swbuf_r>

00012eb4 <putc>:
   12eb4:	defffc04 	addi	sp,sp,-16
   12eb8:	008000b4 	movhi	r2,2
   12ebc:	dc800215 	stw	r18,8(sp)
   12ec0:	14b2d417 	ldw	r18,-13488(r2)
   12ec4:	dc400115 	stw	r17,4(sp)
   12ec8:	dfc00315 	stw	ra,12(sp)
   12ecc:	2023883a 	mov	r17,r4
   12ed0:	90000226 	beq	r18,zero,12edc <putc+0x28>
   12ed4:	90800e17 	ldw	r2,56(r18)
   12ed8:	10000f26 	beq	r2,zero,12f18 <putc+0x64>
   12edc:	28800217 	ldw	r2,8(r5)
   12ee0:	10bfffc4 	addi	r2,r2,-1
   12ee4:	28800215 	stw	r2,8(r5)
   12ee8:	10001316 	blt	r2,zero,12f38 <putc+0x84>
   12eec:	28800017 	ldw	r2,0(r5)
   12ef0:	14400005 	stb	r17,0(r2)
   12ef4:	28800017 	ldw	r2,0(r5)
   12ef8:	10c00044 	addi	r3,r2,1
   12efc:	28c00015 	stw	r3,0(r5)
   12f00:	10800003 	ldbu	r2,0(r2)
   12f04:	dfc00317 	ldw	ra,12(sp)
   12f08:	dc800217 	ldw	r18,8(sp)
   12f0c:	dc400117 	ldw	r17,4(sp)
   12f10:	dec00404 	addi	sp,sp,16
   12f14:	f800283a 	ret
   12f18:	9009883a 	mov	r4,r18
   12f1c:	d9400015 	stw	r5,0(sp)
   12f20:	00112300 	call	11230 <__sinit>
   12f24:	d9400017 	ldw	r5,0(sp)
   12f28:	28800217 	ldw	r2,8(r5)
   12f2c:	10bfffc4 	addi	r2,r2,-1
   12f30:	28800215 	stw	r2,8(r5)
   12f34:	103fed0e 	bge	r2,zero,12eec <putc+0x38>
   12f38:	28c00617 	ldw	r3,24(r5)
   12f3c:	10c00a16 	blt	r2,r3,12f68 <putc+0xb4>
   12f40:	28800017 	ldw	r2,0(r5)
   12f44:	14400005 	stb	r17,0(r2)
   12f48:	28c00017 	ldw	r3,0(r5)
   12f4c:	18800003 	ldbu	r2,0(r3)
   12f50:	108002a0 	cmpeqi	r2,r2,10
   12f54:	10000c1e 	bne	r2,zero,12f88 <putc+0xd4>
   12f58:	18800044 	addi	r2,r3,1
   12f5c:	28800015 	stw	r2,0(r5)
   12f60:	18800003 	ldbu	r2,0(r3)
   12f64:	003fe706 	br	12f04 <putc+0x50>
   12f68:	280d883a 	mov	r6,r5
   12f6c:	880b883a 	mov	r5,r17
   12f70:	9009883a 	mov	r4,r18
   12f74:	dfc00317 	ldw	ra,12(sp)
   12f78:	dc800217 	ldw	r18,8(sp)
   12f7c:	dc400117 	ldw	r17,4(sp)
   12f80:	dec00404 	addi	sp,sp,16
   12f84:	00145b41 	jmpi	145b4 <__swbuf_r>
   12f88:	280d883a 	mov	r6,r5
   12f8c:	01400284 	movi	r5,10
   12f90:	003ff706 	br	12f70 <putc+0xbc>

00012f94 <__sread>:
   12f94:	defffe04 	addi	sp,sp,-8
   12f98:	dc000015 	stw	r16,0(sp)
   12f9c:	2821883a 	mov	r16,r5
   12fa0:	2940038f 	ldh	r5,14(r5)
   12fa4:	dfc00115 	stw	ra,4(sp)
   12fa8:	00155b40 	call	155b4 <_read_r>
   12fac:	10000716 	blt	r2,zero,12fcc <__sread+0x38>
   12fb0:	80c01417 	ldw	r3,80(r16)
   12fb4:	1887883a 	add	r3,r3,r2
   12fb8:	80c01415 	stw	r3,80(r16)
   12fbc:	dfc00117 	ldw	ra,4(sp)
   12fc0:	dc000017 	ldw	r16,0(sp)
   12fc4:	dec00204 	addi	sp,sp,8
   12fc8:	f800283a 	ret
   12fcc:	80c0030b 	ldhu	r3,12(r16)
   12fd0:	18fbffcc 	andi	r3,r3,61439
   12fd4:	80c0030d 	sth	r3,12(r16)
   12fd8:	dfc00117 	ldw	ra,4(sp)
   12fdc:	dc000017 	ldw	r16,0(sp)
   12fe0:	dec00204 	addi	sp,sp,8
   12fe4:	f800283a 	ret

00012fe8 <__seofread>:
   12fe8:	0005883a 	mov	r2,zero
   12fec:	f800283a 	ret

00012ff0 <__swrite>:
   12ff0:	2880030b 	ldhu	r2,12(r5)
   12ff4:	defffb04 	addi	sp,sp,-20
   12ff8:	dcc00315 	stw	r19,12(sp)
   12ffc:	dc800215 	stw	r18,8(sp)
   13000:	dc400115 	stw	r17,4(sp)
   13004:	dc000015 	stw	r16,0(sp)
   13008:	dfc00415 	stw	ra,16(sp)
   1300c:	10c0400c 	andi	r3,r2,256
   13010:	2821883a 	mov	r16,r5
   13014:	2023883a 	mov	r17,r4
   13018:	3025883a 	mov	r18,r6
   1301c:	3827883a 	mov	r19,r7
   13020:	18000d1e 	bne	r3,zero,13058 <__swrite+0x68>
   13024:	8140038f 	ldh	r5,14(r16)
   13028:	10bbffcc 	andi	r2,r2,61439
   1302c:	980f883a 	mov	r7,r19
   13030:	900d883a 	mov	r6,r18
   13034:	8809883a 	mov	r4,r17
   13038:	8080030d 	sth	r2,12(r16)
   1303c:	dfc00417 	ldw	ra,16(sp)
   13040:	dcc00317 	ldw	r19,12(sp)
   13044:	dc800217 	ldw	r18,8(sp)
   13048:	dc400117 	ldw	r17,4(sp)
   1304c:	dc000017 	ldw	r16,0(sp)
   13050:	dec00504 	addi	sp,sp,20
   13054:	00147141 	jmpi	14714 <_write_r>
   13058:	2940038f 	ldh	r5,14(r5)
   1305c:	01c00084 	movi	r7,2
   13060:	000d883a 	mov	r6,zero
   13064:	00153d40 	call	153d4 <_lseek_r>
   13068:	8080030b 	ldhu	r2,12(r16)
   1306c:	003fed06 	br	13024 <__swrite+0x34>

00013070 <__sseek>:
   13070:	defffe04 	addi	sp,sp,-8
   13074:	dc000015 	stw	r16,0(sp)
   13078:	2821883a 	mov	r16,r5
   1307c:	2940038f 	ldh	r5,14(r5)
   13080:	dfc00115 	stw	ra,4(sp)
   13084:	00153d40 	call	153d4 <_lseek_r>
   13088:	10ffffd8 	cmpnei	r3,r2,-1
   1308c:	18000826 	beq	r3,zero,130b0 <__sseek+0x40>
   13090:	80c0030b 	ldhu	r3,12(r16)
   13094:	80801415 	stw	r2,80(r16)
   13098:	18c40014 	ori	r3,r3,4096
   1309c:	80c0030d 	sth	r3,12(r16)
   130a0:	dfc00117 	ldw	ra,4(sp)
   130a4:	dc000017 	ldw	r16,0(sp)
   130a8:	dec00204 	addi	sp,sp,8
   130ac:	f800283a 	ret
   130b0:	80c0030b 	ldhu	r3,12(r16)
   130b4:	18fbffcc 	andi	r3,r3,61439
   130b8:	80c0030d 	sth	r3,12(r16)
   130bc:	dfc00117 	ldw	ra,4(sp)
   130c0:	dc000017 	ldw	r16,0(sp)
   130c4:	dec00204 	addi	sp,sp,8
   130c8:	f800283a 	ret

000130cc <__sclose>:
   130cc:	2940038f 	ldh	r5,14(r5)
   130d0:	00147781 	jmpi	14778 <_close_r>

000130d4 <strlen>:
   130d4:	208000cc 	andi	r2,r4,3
   130d8:	10000926 	beq	r2,zero,13100 <strlen+0x2c>
   130dc:	2005883a 	mov	r2,r4
   130e0:	00000306 	br	130f0 <strlen+0x1c>
   130e4:	10800044 	addi	r2,r2,1
   130e8:	10c000cc 	andi	r3,r2,3
   130ec:	18000526 	beq	r3,zero,13104 <strlen+0x30>
   130f0:	10c00007 	ldb	r3,0(r2)
   130f4:	183ffb1e 	bne	r3,zero,130e4 <strlen+0x10>
   130f8:	1105c83a 	sub	r2,r2,r4
   130fc:	f800283a 	ret
   13100:	2005883a 	mov	r2,r4
   13104:	11400017 	ldw	r5,0(r2)
   13108:	01ffbff4 	movhi	r7,65279
   1310c:	39ffbfc4 	addi	r7,r7,-257
   13110:	29c7883a 	add	r3,r5,r7
   13114:	01a02074 	movhi	r6,32897
   13118:	014a303a 	nor	r5,zero,r5
   1311c:	1946703a 	and	r3,r3,r5
   13120:	31a02004 	addi	r6,r6,-32640
   13124:	1986703a 	and	r3,r3,r6
   13128:	1800071e 	bne	r3,zero,13148 <strlen+0x74>
   1312c:	11400117 	ldw	r5,4(r2)
   13130:	10800104 	addi	r2,r2,4
   13134:	29c7883a 	add	r3,r5,r7
   13138:	014a303a 	nor	r5,zero,r5
   1313c:	1946703a 	and	r3,r3,r5
   13140:	1986703a 	and	r3,r3,r6
   13144:	183ff926 	beq	r3,zero,1312c <strlen+0x58>
   13148:	10c00007 	ldb	r3,0(r2)
   1314c:	183fea26 	beq	r3,zero,130f8 <strlen+0x24>
   13150:	10c00047 	ldb	r3,1(r2)
   13154:	10800044 	addi	r2,r2,1
   13158:	183fe726 	beq	r3,zero,130f8 <strlen+0x24>
   1315c:	10c00047 	ldb	r3,1(r2)
   13160:	10800044 	addi	r2,r2,1
   13164:	183ffa1e 	bne	r3,zero,13150 <strlen+0x7c>
   13168:	003fe306 	br	130f8 <strlen+0x24>

0001316c <__sprint_r.part.0>:
   1316c:	28801917 	ldw	r2,100(r5)
   13170:	defff604 	addi	sp,sp,-40
   13174:	dcc00315 	stw	r19,12(sp)
   13178:	dfc00915 	stw	ra,36(sp)
   1317c:	df000815 	stw	fp,32(sp)
   13180:	ddc00715 	stw	r23,28(sp)
   13184:	dd800615 	stw	r22,24(sp)
   13188:	dd400515 	stw	r21,20(sp)
   1318c:	dd000415 	stw	r20,16(sp)
   13190:	dc800215 	stw	r18,8(sp)
   13194:	dc400115 	stw	r17,4(sp)
   13198:	dc000015 	stw	r16,0(sp)
   1319c:	1088000c 	andi	r2,r2,8192
   131a0:	3027883a 	mov	r19,r6
   131a4:	10002c26 	beq	r2,zero,13258 <__sprint_r.part.0+0xec>
   131a8:	30800217 	ldw	r2,8(r6)
   131ac:	35000017 	ldw	r20,0(r6)
   131b0:	2821883a 	mov	r16,r5
   131b4:	2023883a 	mov	r17,r4
   131b8:	05bfff04 	movi	r22,-4
   131bc:	10002426 	beq	r2,zero,13250 <__sprint_r.part.0+0xe4>
   131c0:	a5400117 	ldw	r21,4(r20)
   131c4:	a5c00017 	ldw	r23,0(r20)
   131c8:	a824d0ba 	srli	r18,r21,2
   131cc:	90001b26 	beq	r18,zero,1323c <__sprint_r.part.0+0xd0>
   131d0:	0039883a 	mov	fp,zero
   131d4:	00000206 	br	131e0 <__sprint_r.part.0+0x74>
   131d8:	bdc00104 	addi	r23,r23,4
   131dc:	97001626 	beq	r18,fp,13238 <__sprint_r.part.0+0xcc>
   131e0:	b9400017 	ldw	r5,0(r23)
   131e4:	800d883a 	mov	r6,r16
   131e8:	8809883a 	mov	r4,r17
   131ec:	0014cf80 	call	14cf8 <_fputwc_r>
   131f0:	10bfffe0 	cmpeqi	r2,r2,-1
   131f4:	e7000044 	addi	fp,fp,1
   131f8:	103ff726 	beq	r2,zero,131d8 <__sprint_r.part.0+0x6c>
   131fc:	00bfffc4 	movi	r2,-1
   13200:	98000215 	stw	zero,8(r19)
   13204:	98000115 	stw	zero,4(r19)
   13208:	dfc00917 	ldw	ra,36(sp)
   1320c:	df000817 	ldw	fp,32(sp)
   13210:	ddc00717 	ldw	r23,28(sp)
   13214:	dd800617 	ldw	r22,24(sp)
   13218:	dd400517 	ldw	r21,20(sp)
   1321c:	dd000417 	ldw	r20,16(sp)
   13220:	dcc00317 	ldw	r19,12(sp)
   13224:	dc800217 	ldw	r18,8(sp)
   13228:	dc400117 	ldw	r17,4(sp)
   1322c:	dc000017 	ldw	r16,0(sp)
   13230:	dec00a04 	addi	sp,sp,40
   13234:	f800283a 	ret
   13238:	98800217 	ldw	r2,8(r19)
   1323c:	adaa703a 	and	r21,r21,r22
   13240:	1545c83a 	sub	r2,r2,r21
   13244:	98800215 	stw	r2,8(r19)
   13248:	a5000204 	addi	r20,r20,8
   1324c:	103fdc1e 	bne	r2,zero,131c0 <__sprint_r.part.0+0x54>
   13250:	0005883a 	mov	r2,zero
   13254:	003fea06 	br	13200 <__sprint_r.part.0+0x94>
   13258:	0014df40 	call	14df4 <__sfvwrite_r>
   1325c:	003fe806 	br	13200 <__sprint_r.part.0+0x94>

00013260 <__sprint_r>:
   13260:	30c00217 	ldw	r3,8(r6)
   13264:	18000126 	beq	r3,zero,1326c <__sprint_r+0xc>
   13268:	001316c1 	jmpi	1316c <__sprint_r.part.0>
   1326c:	30000115 	stw	zero,4(r6)
   13270:	0005883a 	mov	r2,zero
   13274:	f800283a 	ret

00013278 <___vfiprintf_internal_r>:
   13278:	deffcf04 	addi	sp,sp,-196
   1327c:	dd802d15 	stw	r22,180(sp)
   13280:	dd402c15 	stw	r21,176(sp)
   13284:	dd002b15 	stw	r20,172(sp)
   13288:	dfc03015 	stw	ra,192(sp)
   1328c:	df002f15 	stw	fp,188(sp)
   13290:	ddc02e15 	stw	r23,184(sp)
   13294:	dcc02a15 	stw	r19,168(sp)
   13298:	dc802915 	stw	r18,164(sp)
   1329c:	dc402815 	stw	r17,160(sp)
   132a0:	dc002715 	stw	r16,156(sp)
   132a4:	d9c00415 	stw	r7,16(sp)
   132a8:	202d883a 	mov	r22,r4
   132ac:	282b883a 	mov	r21,r5
   132b0:	3029883a 	mov	r20,r6
   132b4:	20000226 	beq	r4,zero,132c0 <___vfiprintf_internal_r+0x48>
   132b8:	20800e17 	ldw	r2,56(r4)
   132bc:	1001ba26 	beq	r2,zero,139a8 <___vfiprintf_internal_r+0x730>
   132c0:	a880030b 	ldhu	r2,12(r21)
   132c4:	10c8000c 	andi	r3,r2,8192
   132c8:	1800061e 	bne	r3,zero,132e4 <___vfiprintf_internal_r+0x6c>
   132cc:	a8c01917 	ldw	r3,100(r21)
   132d0:	0137ffc4 	movi	r4,-8193
   132d4:	10880014 	ori	r2,r2,8192
   132d8:	1906703a 	and	r3,r3,r4
   132dc:	a880030d 	sth	r2,12(r21)
   132e0:	a8c01915 	stw	r3,100(r21)
   132e4:	10c0020c 	andi	r3,r2,8
   132e8:	18010526 	beq	r3,zero,13700 <___vfiprintf_internal_r+0x488>
   132ec:	a8c00417 	ldw	r3,16(r21)
   132f0:	18010326 	beq	r3,zero,13700 <___vfiprintf_internal_r+0x488>
   132f4:	1080068c 	andi	r2,r2,26
   132f8:	10800298 	cmpnei	r2,r2,10
   132fc:	10010826 	beq	r2,zero,13720 <___vfiprintf_internal_r+0x4a8>
   13300:	dc801704 	addi	r18,sp,92
   13304:	dc800a15 	stw	r18,40(sp)
   13308:	d8000c15 	stw	zero,48(sp)
   1330c:	d8000b15 	stw	zero,44(sp)
   13310:	9021883a 	mov	r16,r18
   13314:	d8000515 	stw	zero,20(sp)
   13318:	d8000115 	stw	zero,4(sp)
   1331c:	a0800007 	ldb	r2,0(r20)
   13320:	1000e526 	beq	r2,zero,136b8 <___vfiprintf_internal_r+0x440>
   13324:	a023883a 	mov	r17,r20
   13328:	00000306 	br	13338 <___vfiprintf_internal_r+0xc0>
   1332c:	88800047 	ldb	r2,1(r17)
   13330:	8c400044 	addi	r17,r17,1
   13334:	10013026 	beq	r2,zero,137f8 <___vfiprintf_internal_r+0x580>
   13338:	10800958 	cmpnei	r2,r2,37
   1333c:	103ffb1e 	bne	r2,zero,1332c <___vfiprintf_internal_r+0xb4>
   13340:	8d27c83a 	sub	r19,r17,r20
   13344:	8d012e1e 	bne	r17,r20,13800 <___vfiprintf_internal_r+0x588>
   13348:	88800003 	ldbu	r2,0(r17)
   1334c:	10803fcc 	andi	r2,r2,255
   13350:	1080201c 	xori	r2,r2,128
   13354:	10bfe004 	addi	r2,r2,-128
   13358:	1000d726 	beq	r2,zero,136b8 <___vfiprintf_internal_r+0x440>
   1335c:	88800047 	ldb	r2,1(r17)
   13360:	8d000044 	addi	r20,r17,1
   13364:	d8000945 	stb	zero,37(sp)
   13368:	000b883a 	mov	r5,zero
   1336c:	000d883a 	mov	r6,zero
   13370:	023fffc4 	movi	r8,-1
   13374:	0023883a 	mov	r17,zero
   13378:	001b883a 	mov	r13,zero
   1337c:	a5000044 	addi	r20,r20,1
   13380:	10fff804 	addi	r3,r2,-32
   13384:	19001668 	cmpgeui	r4,r3,89
   13388:	20006c1e 	bne	r4,zero,1353c <___vfiprintf_internal_r+0x2c4>
   1338c:	180690ba 	slli	r3,r3,2
   13390:	01000074 	movhi	r4,1
   13394:	1909883a 	add	r4,r3,r4
   13398:	20cce817 	ldw	r3,13216(r4)
   1339c:	1800683a 	jmp	r3
   133a0:	00013bc8 	cmpgei	zero,zero,1263
   133a4:	0001353c 	xorhi	zero,zero,1236
   133a8:	0001353c 	xorhi	zero,zero,1236
   133ac:	00013bbc 	xorhi	zero,zero,1262
   133b0:	0001353c 	xorhi	zero,zero,1236
   133b4:	0001353c 	xorhi	zero,zero,1236
   133b8:	0001353c 	xorhi	zero,zero,1236
   133bc:	0001353c 	xorhi	zero,zero,1236
   133c0:	0001353c 	xorhi	zero,zero,1236
   133c4:	0001353c 	xorhi	zero,zero,1236
   133c8:	00013a24 	muli	zero,zero,1256
   133cc:	00013bac 	andhi	zero,zero,1262
   133d0:	0001353c 	xorhi	zero,zero,1236
   133d4:	00013a3c 	xorhi	zero,zero,1256
   133d8:	00013a48 	cmpgei	zero,zero,1257
   133dc:	0001353c 	xorhi	zero,zero,1236
   133e0:	00013ba0 	cmpeqi	zero,zero,1262
   133e4:	00013504 	movi	zero,1236
   133e8:	00013504 	movi	zero,1236
   133ec:	00013504 	movi	zero,1236
   133f0:	00013504 	movi	zero,1236
   133f4:	00013504 	movi	zero,1236
   133f8:	00013504 	movi	zero,1236
   133fc:	00013504 	movi	zero,1236
   13400:	00013504 	movi	zero,1236
   13404:	00013504 	movi	zero,1236
   13408:	0001353c 	xorhi	zero,zero,1236
   1340c:	0001353c 	xorhi	zero,zero,1236
   13410:	0001353c 	xorhi	zero,zero,1236
   13414:	0001353c 	xorhi	zero,zero,1236
   13418:	0001353c 	xorhi	zero,zero,1236
   1341c:	0001353c 	xorhi	zero,zero,1236
   13420:	0001353c 	xorhi	zero,zero,1236
   13424:	0001353c 	xorhi	zero,zero,1236
   13428:	0001353c 	xorhi	zero,zero,1236
   1342c:	0001353c 	xorhi	zero,zero,1236
   13430:	00013a94 	movui	zero,1258
   13434:	0001353c 	xorhi	zero,zero,1236
   13438:	0001353c 	xorhi	zero,zero,1236
   1343c:	0001353c 	xorhi	zero,zero,1236
   13440:	0001353c 	xorhi	zero,zero,1236
   13444:	0001353c 	xorhi	zero,zero,1236
   13448:	0001353c 	xorhi	zero,zero,1236
   1344c:	0001353c 	xorhi	zero,zero,1236
   13450:	0001353c 	xorhi	zero,zero,1236
   13454:	0001353c 	xorhi	zero,zero,1236
   13458:	0001353c 	xorhi	zero,zero,1236
   1345c:	00013790 	cmplti	zero,zero,1246
   13460:	0001353c 	xorhi	zero,zero,1236
   13464:	0001353c 	xorhi	zero,zero,1236
   13468:	0001353c 	xorhi	zero,zero,1236
   1346c:	0001353c 	xorhi	zero,zero,1236
   13470:	0001353c 	xorhi	zero,zero,1236
   13474:	00013768 	cmpgeui	zero,zero,1245
   13478:	0001353c 	xorhi	zero,zero,1236
   1347c:	0001353c 	xorhi	zero,zero,1236
   13480:	00013c98 	cmpnei	zero,zero,1266
   13484:	0001353c 	xorhi	zero,zero,1236
   13488:	0001353c 	xorhi	zero,zero,1236
   1348c:	0001353c 	xorhi	zero,zero,1236
   13490:	0001353c 	xorhi	zero,zero,1236
   13494:	0001353c 	xorhi	zero,zero,1236
   13498:	0001353c 	xorhi	zero,zero,1236
   1349c:	0001353c 	xorhi	zero,zero,1236
   134a0:	0001353c 	xorhi	zero,zero,1236
   134a4:	0001353c 	xorhi	zero,zero,1236
   134a8:	0001353c 	xorhi	zero,zero,1236
   134ac:	00013c70 	cmpltui	zero,zero,1265
   134b0:	000139b0 	cmpltui	zero,zero,1254
   134b4:	0001353c 	xorhi	zero,zero,1236
   134b8:	0001353c 	xorhi	zero,zero,1236
   134bc:	0001353c 	xorhi	zero,zero,1236
   134c0:	00013c10 	cmplti	zero,zero,1264
   134c4:	000139b0 	cmpltui	zero,zero,1254
   134c8:	0001353c 	xorhi	zero,zero,1236
   134cc:	0001353c 	xorhi	zero,zero,1236
   134d0:	00013c5c 	xori	zero,zero,1265
   134d4:	0001353c 	xorhi	zero,zero,1236
   134d8:	00013c1c 	xori	zero,zero,1264
   134dc:	00013794 	movui	zero,1246
   134e0:	00013d8c 	andi	zero,zero,1270
   134e4:	00013d80 	call	13d8 <kf_bfly_generic+0x64>
   134e8:	0001353c 	xorhi	zero,zero,1236
   134ec:	00013d28 	cmpgeui	zero,zero,1268
   134f0:	0001353c 	xorhi	zero,zero,1236
   134f4:	0001376c 	andhi	zero,zero,1245
   134f8:	0001353c 	xorhi	zero,zero,1236
   134fc:	0001353c 	xorhi	zero,zero,1236
   13500:	00013ce0 	cmpeqi	zero,zero,1267
   13504:	0023883a 	mov	r17,zero
   13508:	113ff404 	addi	r4,r2,-48
   1350c:	880690ba 	slli	r3,r17,2
   13510:	a0800007 	ldb	r2,0(r20)
   13514:	a5000044 	addi	r20,r20,1
   13518:	1c63883a 	add	r17,r3,r17
   1351c:	8c63883a 	add	r17,r17,r17
   13520:	2463883a 	add	r17,r4,r17
   13524:	113ff404 	addi	r4,r2,-48
   13528:	20c002b0 	cmpltui	r3,r4,10
   1352c:	183ff71e 	bne	r3,zero,1350c <___vfiprintf_internal_r+0x294>
   13530:	10fff804 	addi	r3,r2,-32
   13534:	19001668 	cmpgeui	r4,r3,89
   13538:	203f9426 	beq	r4,zero,1338c <___vfiprintf_internal_r+0x114>
   1353c:	29403fcc 	andi	r5,r5,255
   13540:	2803b61e 	bne	r5,zero,1441c <___vfiprintf_internal_r+0x11a4>
   13544:	10005c26 	beq	r2,zero,136b8 <___vfiprintf_internal_r+0x440>
   13548:	d8800d05 	stb	r2,52(sp)
   1354c:	d8000945 	stb	zero,37(sp)
   13550:	05c00044 	movi	r23,1
   13554:	07000044 	movi	fp,1
   13558:	dcc00d04 	addi	r19,sp,52
   1355c:	db400015 	stw	r13,0(sp)
   13560:	0011883a 	mov	r8,zero
   13564:	d8800017 	ldw	r2,0(sp)
   13568:	1380008c 	andi	r14,r2,2
   1356c:	70000126 	beq	r14,zero,13574 <___vfiprintf_internal_r+0x2fc>
   13570:	bdc00084 	addi	r23,r23,2
   13574:	d8800017 	ldw	r2,0(sp)
   13578:	d9000b17 	ldw	r4,44(sp)
   1357c:	1340210c 	andi	r13,r2,132
   13580:	21800044 	addi	r6,r4,1
   13584:	d8800c17 	ldw	r2,48(sp)
   13588:	300b883a 	mov	r5,r6
   1358c:	6800021e 	bne	r13,zero,13598 <___vfiprintf_internal_r+0x320>
   13590:	8dc7c83a 	sub	r3,r17,r23
   13594:	00c2e516 	blt	zero,r3,1412c <___vfiprintf_internal_r+0xeb4>
   13598:	d8c00947 	ldb	r3,37(sp)
   1359c:	18000c26 	beq	r3,zero,135d0 <___vfiprintf_internal_r+0x358>
   135a0:	d8c00944 	addi	r3,sp,37
   135a4:	10800044 	addi	r2,r2,1
   135a8:	80c00015 	stw	r3,0(r16)
   135ac:	00c00044 	movi	r3,1
   135b0:	80c00115 	stw	r3,4(r16)
   135b4:	d8800c15 	stw	r2,48(sp)
   135b8:	d9400b15 	stw	r5,44(sp)
   135bc:	28c00208 	cmpgei	r3,r5,8
   135c0:	1802a01e 	bne	r3,zero,14044 <___vfiprintf_internal_r+0xdcc>
   135c4:	2809883a 	mov	r4,r5
   135c8:	84000204 	addi	r16,r16,8
   135cc:	29400044 	addi	r5,r5,1
   135d0:	70001726 	beq	r14,zero,13630 <___vfiprintf_internal_r+0x3b8>
   135d4:	d8c00984 	addi	r3,sp,38
   135d8:	10800084 	addi	r2,r2,2
   135dc:	80c00015 	stw	r3,0(r16)
   135e0:	00c00084 	movi	r3,2
   135e4:	80c00115 	stw	r3,4(r16)
   135e8:	d8800c15 	stw	r2,48(sp)
   135ec:	d9400b15 	stw	r5,44(sp)
   135f0:	28c00208 	cmpgei	r3,r5,8
   135f4:	1802aa26 	beq	r3,zero,140a0 <___vfiprintf_internal_r+0xe28>
   135f8:	10032526 	beq	r2,zero,14290 <___vfiprintf_internal_r+0x1018>
   135fc:	d9800a04 	addi	r6,sp,40
   13600:	a80b883a 	mov	r5,r21
   13604:	b009883a 	mov	r4,r22
   13608:	da000315 	stw	r8,12(sp)
   1360c:	db400215 	stw	r13,8(sp)
   13610:	001316c0 	call	1316c <__sprint_r.part.0>
   13614:	10002a1e 	bne	r2,zero,136c0 <___vfiprintf_internal_r+0x448>
   13618:	d9000b17 	ldw	r4,44(sp)
   1361c:	d8800c17 	ldw	r2,48(sp)
   13620:	da000317 	ldw	r8,12(sp)
   13624:	db400217 	ldw	r13,8(sp)
   13628:	9021883a 	mov	r16,r18
   1362c:	21400044 	addi	r5,r4,1
   13630:	6b402018 	cmpnei	r13,r13,128
   13634:	6801f126 	beq	r13,zero,13dfc <___vfiprintf_internal_r+0xb84>
   13638:	4711c83a 	sub	r8,r8,fp
   1363c:	02022e16 	blt	zero,r8,13ef8 <___vfiprintf_internal_r+0xc80>
   13640:	e085883a 	add	r2,fp,r2
   13644:	d9400b15 	stw	r5,44(sp)
   13648:	84c00015 	stw	r19,0(r16)
   1364c:	87000115 	stw	fp,4(r16)
   13650:	d8800c15 	stw	r2,48(sp)
   13654:	29400208 	cmpgei	r5,r5,8
   13658:	2801e226 	beq	r5,zero,13de4 <___vfiprintf_internal_r+0xb6c>
   1365c:	10009826 	beq	r2,zero,138c0 <___vfiprintf_internal_r+0x648>
   13660:	d9800a04 	addi	r6,sp,40
   13664:	a80b883a 	mov	r5,r21
   13668:	b009883a 	mov	r4,r22
   1366c:	001316c0 	call	1316c <__sprint_r.part.0>
   13670:	1000131e 	bne	r2,zero,136c0 <___vfiprintf_internal_r+0x448>
   13674:	d8800c17 	ldw	r2,48(sp)
   13678:	9021883a 	mov	r16,r18
   1367c:	d8c00017 	ldw	r3,0(sp)
   13680:	1cc0010c 	andi	r19,r3,4
   13684:	98000226 	beq	r19,zero,13690 <___vfiprintf_internal_r+0x418>
   13688:	8de7c83a 	sub	r19,r17,r23
   1368c:	04c09316 	blt	zero,r19,138dc <___vfiprintf_internal_r+0x664>
   13690:	8dc0010e 	bge	r17,r23,13698 <___vfiprintf_internal_r+0x420>
   13694:	b823883a 	mov	r17,r23
   13698:	d8c00117 	ldw	r3,4(sp)
   1369c:	1c47883a 	add	r3,r3,r17
   136a0:	d8c00115 	stw	r3,4(sp)
   136a4:	10025d1e 	bne	r2,zero,1401c <___vfiprintf_internal_r+0xda4>
   136a8:	a0800007 	ldb	r2,0(r20)
   136ac:	d8000b15 	stw	zero,44(sp)
   136b0:	9021883a 	mov	r16,r18
   136b4:	103f1b1e 	bne	r2,zero,13324 <___vfiprintf_internal_r+0xac>
   136b8:	d8800c17 	ldw	r2,48(sp)
   136bc:	1003591e 	bne	r2,zero,14424 <___vfiprintf_internal_r+0x11ac>
   136c0:	a880030b 	ldhu	r2,12(r21)
   136c4:	1080100c 	andi	r2,r2,64
   136c8:	1003741e 	bne	r2,zero,1449c <___vfiprintf_internal_r+0x1224>
   136cc:	d8800117 	ldw	r2,4(sp)
   136d0:	dfc03017 	ldw	ra,192(sp)
   136d4:	df002f17 	ldw	fp,188(sp)
   136d8:	ddc02e17 	ldw	r23,184(sp)
   136dc:	dd802d17 	ldw	r22,180(sp)
   136e0:	dd402c17 	ldw	r21,176(sp)
   136e4:	dd002b17 	ldw	r20,172(sp)
   136e8:	dcc02a17 	ldw	r19,168(sp)
   136ec:	dc802917 	ldw	r18,164(sp)
   136f0:	dc402817 	ldw	r17,160(sp)
   136f4:	dc002717 	ldw	r16,156(sp)
   136f8:	dec03104 	addi	sp,sp,196
   136fc:	f800283a 	ret
   13700:	a80b883a 	mov	r5,r21
   13704:	b009883a 	mov	r4,r22
   13708:	000f0f40 	call	f0f4 <__swsetup_r>
   1370c:	1003631e 	bne	r2,zero,1449c <___vfiprintf_internal_r+0x1224>
   13710:	a880030b 	ldhu	r2,12(r21)
   13714:	1080068c 	andi	r2,r2,26
   13718:	10800298 	cmpnei	r2,r2,10
   1371c:	103ef81e 	bne	r2,zero,13300 <___vfiprintf_internal_r+0x88>
   13720:	a880038f 	ldh	r2,14(r21)
   13724:	103ef616 	blt	r2,zero,13300 <___vfiprintf_internal_r+0x88>
   13728:	d9c00417 	ldw	r7,16(sp)
   1372c:	a00d883a 	mov	r6,r20
   13730:	a80b883a 	mov	r5,r21
   13734:	b009883a 	mov	r4,r22
   13738:	dfc03017 	ldw	ra,192(sp)
   1373c:	df002f17 	ldw	fp,188(sp)
   13740:	ddc02e17 	ldw	r23,184(sp)
   13744:	dd802d17 	ldw	r22,180(sp)
   13748:	dd402c17 	ldw	r21,176(sp)
   1374c:	dd002b17 	ldw	r20,172(sp)
   13750:	dcc02a17 	ldw	r19,168(sp)
   13754:	dc802917 	ldw	r18,164(sp)
   13758:	dc402817 	ldw	r17,160(sp)
   1375c:	dc002717 	ldw	r16,156(sp)
   13760:	dec03104 	addi	sp,sp,196
   13764:	00144f41 	jmpi	144f4 <__sbprintf>
   13768:	6b400414 	ori	r13,r13,16
   1376c:	6880080c 	andi	r2,r13,32
   13770:	10004726 	beq	r2,zero,13890 <___vfiprintf_internal_r+0x618>
   13774:	d8c00417 	ldw	r3,16(sp)
   13778:	00800044 	movi	r2,1
   1377c:	1dc00017 	ldw	r23,0(r3)
   13780:	1f000117 	ldw	fp,4(r3)
   13784:	18c00204 	addi	r3,r3,8
   13788:	d8c00415 	stw	r3,16(sp)
   1378c:	00000906 	br	137b4 <___vfiprintf_internal_r+0x53c>
   13790:	6b400414 	ori	r13,r13,16
   13794:	6880080c 	andi	r2,r13,32
   13798:	10003126 	beq	r2,zero,13860 <___vfiprintf_internal_r+0x5e8>
   1379c:	d8c00417 	ldw	r3,16(sp)
   137a0:	0005883a 	mov	r2,zero
   137a4:	1dc00017 	ldw	r23,0(r3)
   137a8:	1f000117 	ldw	fp,4(r3)
   137ac:	18c00204 	addi	r3,r3,8
   137b0:	d8c00415 	stw	r3,16(sp)
   137b4:	d8000945 	stb	zero,37(sp)
   137b8:	40ffffe0 	cmpeqi	r3,r8,-1
   137bc:	001d883a 	mov	r14,zero
   137c0:	1800d11e 	bne	r3,zero,13b08 <___vfiprintf_internal_r+0x890>
   137c4:	04ffdfc4 	movi	r19,-129
   137c8:	6cc8703a 	and	r4,r13,r19
   137cc:	bf06b03a 	or	r3,r23,fp
   137d0:	d9000015 	stw	r4,0(sp)
   137d4:	1802361e 	bne	r3,zero,140b0 <___vfiprintf_internal_r+0xe38>
   137d8:	4001fb1e 	bne	r8,zero,13fc8 <___vfiprintf_internal_r+0xd50>
   137dc:	1002a31e 	bne	r2,zero,1426c <___vfiprintf_internal_r+0xff4>
   137e0:	6f00004c 	andi	fp,r13,1
   137e4:	e002c726 	beq	fp,zero,14304 <___vfiprintf_internal_r+0x108c>
   137e8:	00800c04 	movi	r2,48
   137ec:	d88016c5 	stb	r2,91(sp)
   137f0:	dcc016c4 	addi	r19,sp,91
   137f4:	0000e106 	br	13b7c <___vfiprintf_internal_r+0x904>
   137f8:	8d27c83a 	sub	r19,r17,r20
   137fc:	8d3fae26 	beq	r17,r20,136b8 <___vfiprintf_internal_r+0x440>
   13800:	d8c00c17 	ldw	r3,48(sp)
   13804:	d8800b17 	ldw	r2,44(sp)
   13808:	85000015 	stw	r20,0(r16)
   1380c:	98c7883a 	add	r3,r19,r3
   13810:	10800044 	addi	r2,r2,1
   13814:	d8800b15 	stw	r2,44(sp)
   13818:	84c00115 	stw	r19,4(r16)
   1381c:	d8c00c15 	stw	r3,48(sp)
   13820:	10800208 	cmpgei	r2,r2,8
   13824:	1000061e 	bne	r2,zero,13840 <___vfiprintf_internal_r+0x5c8>
   13828:	84000204 	addi	r16,r16,8
   1382c:	d8c00117 	ldw	r3,4(sp)
   13830:	88800003 	ldbu	r2,0(r17)
   13834:	1cc7883a 	add	r3,r3,r19
   13838:	d8c00115 	stw	r3,4(sp)
   1383c:	003ec306 	br	1334c <___vfiprintf_internal_r+0xd4>
   13840:	18028626 	beq	r3,zero,1425c <___vfiprintf_internal_r+0xfe4>
   13844:	d9800a04 	addi	r6,sp,40
   13848:	a80b883a 	mov	r5,r21
   1384c:	b009883a 	mov	r4,r22
   13850:	001316c0 	call	1316c <__sprint_r.part.0>
   13854:	103f9a1e 	bne	r2,zero,136c0 <___vfiprintf_internal_r+0x448>
   13858:	9021883a 	mov	r16,r18
   1385c:	003ff306 	br	1382c <___vfiprintf_internal_r+0x5b4>
   13860:	d8c00417 	ldw	r3,16(sp)
   13864:	6880040c 	andi	r2,r13,16
   13868:	1dc00017 	ldw	r23,0(r3)
   1386c:	18c00104 	addi	r3,r3,4
   13870:	d8c00415 	stw	r3,16(sp)
   13874:	1000031e 	bne	r2,zero,13884 <___vfiprintf_internal_r+0x60c>
   13878:	6880100c 	andi	r2,r13,64
   1387c:	10000126 	beq	r2,zero,13884 <___vfiprintf_internal_r+0x60c>
   13880:	bdffffcc 	andi	r23,r23,65535
   13884:	0039883a 	mov	fp,zero
   13888:	0005883a 	mov	r2,zero
   1388c:	003fc906 	br	137b4 <___vfiprintf_internal_r+0x53c>
   13890:	d8c00417 	ldw	r3,16(sp)
   13894:	6880040c 	andi	r2,r13,16
   13898:	1dc00017 	ldw	r23,0(r3)
   1389c:	18c00104 	addi	r3,r3,4
   138a0:	d8c00415 	stw	r3,16(sp)
   138a4:	1000031e 	bne	r2,zero,138b4 <___vfiprintf_internal_r+0x63c>
   138a8:	6880100c 	andi	r2,r13,64
   138ac:	10000126 	beq	r2,zero,138b4 <___vfiprintf_internal_r+0x63c>
   138b0:	bdffffcc 	andi	r23,r23,65535
   138b4:	0039883a 	mov	fp,zero
   138b8:	00800044 	movi	r2,1
   138bc:	003fbd06 	br	137b4 <___vfiprintf_internal_r+0x53c>
   138c0:	d8c00017 	ldw	r3,0(sp)
   138c4:	d8000b15 	stw	zero,44(sp)
   138c8:	1cc0010c 	andi	r19,r3,4
   138cc:	98025226 	beq	r19,zero,14218 <___vfiprintf_internal_r+0xfa0>
   138d0:	8de7c83a 	sub	r19,r17,r23
   138d4:	04c2500e 	bge	zero,r19,14218 <___vfiprintf_internal_r+0xfa0>
   138d8:	9021883a 	mov	r16,r18
   138dc:	98c00450 	cmplti	r3,r19,17
   138e0:	d9000b17 	ldw	r4,44(sp)
   138e4:	01c000b4 	movhi	r7,2
   138e8:	1802e61e 	bne	r3,zero,14484 <___vfiprintf_internal_r+0x120c>
   138ec:	39eae404 	addi	r7,r7,-21616
   138f0:	07000404 	movi	fp,16
   138f4:	00000606 	br	13910 <___vfiprintf_internal_r+0x698>
   138f8:	21400084 	addi	r5,r4,2
   138fc:	84000204 	addi	r16,r16,8
   13900:	1809883a 	mov	r4,r3
   13904:	9cfffc04 	addi	r19,r19,-16
   13908:	98c00448 	cmpgei	r3,r19,17
   1390c:	18001726 	beq	r3,zero,1396c <___vfiprintf_internal_r+0x6f4>
   13910:	20c00044 	addi	r3,r4,1
   13914:	10800404 	addi	r2,r2,16
   13918:	81c00015 	stw	r7,0(r16)
   1391c:	87000115 	stw	fp,4(r16)
   13920:	d8800c15 	stw	r2,48(sp)
   13924:	d8c00b15 	stw	r3,44(sp)
   13928:	19400208 	cmpgei	r5,r3,8
   1392c:	283ff226 	beq	r5,zero,138f8 <___vfiprintf_internal_r+0x680>
   13930:	d9800a04 	addi	r6,sp,40
   13934:	a80b883a 	mov	r5,r21
   13938:	b009883a 	mov	r4,r22
   1393c:	10012b26 	beq	r2,zero,13dec <___vfiprintf_internal_r+0xb74>
   13940:	d9c00015 	stw	r7,0(sp)
   13944:	001316c0 	call	1316c <__sprint_r.part.0>
   13948:	103f5d1e 	bne	r2,zero,136c0 <___vfiprintf_internal_r+0x448>
   1394c:	d9000b17 	ldw	r4,44(sp)
   13950:	9cfffc04 	addi	r19,r19,-16
   13954:	98c00448 	cmpgei	r3,r19,17
   13958:	d8800c17 	ldw	r2,48(sp)
   1395c:	d9c00017 	ldw	r7,0(sp)
   13960:	9021883a 	mov	r16,r18
   13964:	21400044 	addi	r5,r4,1
   13968:	183fe91e 	bne	r3,zero,13910 <___vfiprintf_internal_r+0x698>
   1396c:	14c5883a 	add	r2,r2,r19
   13970:	d9400b15 	stw	r5,44(sp)
   13974:	81c00015 	stw	r7,0(r16)
   13978:	84c00115 	stw	r19,4(r16)
   1397c:	d8800c15 	stw	r2,48(sp)
   13980:	29400210 	cmplti	r5,r5,8
   13984:	283f421e 	bne	r5,zero,13690 <___vfiprintf_internal_r+0x418>
   13988:	10022326 	beq	r2,zero,14218 <___vfiprintf_internal_r+0xfa0>
   1398c:	d9800a04 	addi	r6,sp,40
   13990:	a80b883a 	mov	r5,r21
   13994:	b009883a 	mov	r4,r22
   13998:	001316c0 	call	1316c <__sprint_r.part.0>
   1399c:	103f481e 	bne	r2,zero,136c0 <___vfiprintf_internal_r+0x448>
   139a0:	d8800c17 	ldw	r2,48(sp)
   139a4:	003f3a06 	br	13690 <___vfiprintf_internal_r+0x418>
   139a8:	00112300 	call	11230 <__sinit>
   139ac:	003e4406 	br	132c0 <___vfiprintf_internal_r+0x48>
   139b0:	29403fcc 	andi	r5,r5,255
   139b4:	2802b11e 	bne	r5,zero,1447c <___vfiprintf_internal_r+0x1204>
   139b8:	6880080c 	andi	r2,r13,32
   139bc:	10003a26 	beq	r2,zero,13aa8 <___vfiprintf_internal_r+0x830>
   139c0:	d8c00417 	ldw	r3,16(sp)
   139c4:	18800117 	ldw	r2,4(r3)
   139c8:	1dc00017 	ldw	r23,0(r3)
   139cc:	18c00204 	addi	r3,r3,8
   139d0:	d8c00415 	stw	r3,16(sp)
   139d4:	1039883a 	mov	fp,r2
   139d8:	10004116 	blt	r2,zero,13ae0 <___vfiprintf_internal_r+0x868>
   139dc:	40bfffd8 	cmpnei	r2,r8,-1
   139e0:	db800943 	ldbu	r14,37(sp)
   139e4:	10000626 	beq	r2,zero,13a00 <___vfiprintf_internal_r+0x788>
   139e8:	04ffdfc4 	movi	r19,-129
   139ec:	6cc6703a 	and	r3,r13,r19
   139f0:	bf04b03a 	or	r2,r23,fp
   139f4:	d8c00015 	stw	r3,0(sp)
   139f8:	10021b26 	beq	r2,zero,14268 <___vfiprintf_internal_r+0xff0>
   139fc:	db400017 	ldw	r13,0(sp)
   13a00:	e001ad1e 	bne	fp,zero,140b8 <___vfiprintf_internal_r+0xe40>
   13a04:	b88002a8 	cmpgeui	r2,r23,10
   13a08:	1001ab1e 	bne	r2,zero,140b8 <___vfiprintf_internal_r+0xe40>
   13a0c:	bdc00c04 	addi	r23,r23,48
   13a10:	ddc016c5 	stb	r23,91(sp)
   13a14:	db400015 	stw	r13,0(sp)
   13a18:	07000044 	movi	fp,1
   13a1c:	dcc016c4 	addi	r19,sp,91
   13a20:	00005606 	br	13b7c <___vfiprintf_internal_r+0x904>
   13a24:	d8800417 	ldw	r2,16(sp)
   13a28:	14400017 	ldw	r17,0(r2)
   13a2c:	10c00104 	addi	r3,r2,4
   13a30:	8802310e 	bge	r17,zero,142f8 <___vfiprintf_internal_r+0x1080>
   13a34:	0463c83a 	sub	r17,zero,r17
   13a38:	d8c00415 	stw	r3,16(sp)
   13a3c:	a0800007 	ldb	r2,0(r20)
   13a40:	6b400114 	ori	r13,r13,4
   13a44:	003e4d06 	br	1337c <___vfiprintf_internal_r+0x104>
   13a48:	a0800007 	ldb	r2,0(r20)
   13a4c:	a0c00044 	addi	r3,r20,1
   13a50:	11000aa0 	cmpeqi	r4,r2,42
   13a54:	2002941e 	bne	r4,zero,144a8 <___vfiprintf_internal_r+0x1230>
   13a58:	113ff404 	addi	r4,r2,-48
   13a5c:	21c002b0 	cmpltui	r7,r4,10
   13a60:	1829883a 	mov	r20,r3
   13a64:	0011883a 	mov	r8,zero
   13a68:	383e4526 	beq	r7,zero,13380 <___vfiprintf_internal_r+0x108>
   13a6c:	400690ba 	slli	r3,r8,2
   13a70:	a0800007 	ldb	r2,0(r20)
   13a74:	a5000044 	addi	r20,r20,1
   13a78:	1a11883a 	add	r8,r3,r8
   13a7c:	4211883a 	add	r8,r8,r8
   13a80:	4111883a 	add	r8,r8,r4
   13a84:	113ff404 	addi	r4,r2,-48
   13a88:	20c002b0 	cmpltui	r3,r4,10
   13a8c:	183ff71e 	bne	r3,zero,13a6c <___vfiprintf_internal_r+0x7f4>
   13a90:	003e3b06 	br	13380 <___vfiprintf_internal_r+0x108>
   13a94:	29403fcc 	andi	r5,r5,255
   13a98:	28026d1e 	bne	r5,zero,14450 <___vfiprintf_internal_r+0x11d8>
   13a9c:	6b400414 	ori	r13,r13,16
   13aa0:	6880080c 	andi	r2,r13,32
   13aa4:	103fc61e 	bne	r2,zero,139c0 <___vfiprintf_internal_r+0x748>
   13aa8:	d8c00417 	ldw	r3,16(sp)
   13aac:	6880040c 	andi	r2,r13,16
   13ab0:	1dc00017 	ldw	r23,0(r3)
   13ab4:	18c00104 	addi	r3,r3,4
   13ab8:	d8c00415 	stw	r3,16(sp)
   13abc:	1001f11e 	bne	r2,zero,14284 <___vfiprintf_internal_r+0x100c>
   13ac0:	6880100c 	andi	r2,r13,64
   13ac4:	1001ef26 	beq	r2,zero,14284 <___vfiprintf_internal_r+0x100c>
   13ac8:	bdffffcc 	andi	r23,r23,65535
   13acc:	bde0001c 	xori	r23,r23,32768
   13ad0:	bde00004 	addi	r23,r23,-32768
   13ad4:	b839d7fa 	srai	fp,r23,31
   13ad8:	e005883a 	mov	r2,fp
   13adc:	103fbf0e 	bge	r2,zero,139dc <___vfiprintf_internal_r+0x764>
   13ae0:	b804c03a 	cmpne	r2,r23,zero
   13ae4:	0739c83a 	sub	fp,zero,fp
   13ae8:	e0b9c83a 	sub	fp,fp,r2
   13aec:	00800b44 	movi	r2,45
   13af0:	d8800945 	stb	r2,37(sp)
   13af4:	40ffffe0 	cmpeqi	r3,r8,-1
   13af8:	05efc83a 	sub	r23,zero,r23
   13afc:	03800b44 	movi	r14,45
   13b00:	00800044 	movi	r2,1
   13b04:	183f2f26 	beq	r3,zero,137c4 <___vfiprintf_internal_r+0x54c>
   13b08:	10c00060 	cmpeqi	r3,r2,1
   13b0c:	183fbc1e 	bne	r3,zero,13a00 <___vfiprintf_internal_r+0x788>
   13b10:	108000a0 	cmpeqi	r2,r2,2
   13b14:	1001311e 	bne	r2,zero,13fdc <___vfiprintf_internal_r+0xd64>
   13b18:	9027883a 	mov	r19,r18
   13b1c:	e008977a 	slli	r4,fp,29
   13b20:	b806d0fa 	srli	r3,r23,3
   13b24:	e038d0fa 	srli	fp,fp,3
   13b28:	b88001cc 	andi	r2,r23,7
   13b2c:	10800c04 	addi	r2,r2,48
   13b30:	20eeb03a 	or	r23,r4,r3
   13b34:	98bfffc5 	stb	r2,-1(r19)
   13b38:	bf06b03a 	or	r3,r23,fp
   13b3c:	980b883a 	mov	r5,r19
   13b40:	9cffffc4 	addi	r19,r19,-1
   13b44:	183ff51e 	bne	r3,zero,13b1c <___vfiprintf_internal_r+0x8a4>
   13b48:	68c0004c 	andi	r3,r13,1
   13b4c:	18013026 	beq	r3,zero,14010 <___vfiprintf_internal_r+0xd98>
   13b50:	10803fcc 	andi	r2,r2,255
   13b54:	1080201c 	xori	r2,r2,128
   13b58:	10bfe004 	addi	r2,r2,-128
   13b5c:	10800c18 	cmpnei	r2,r2,48
   13b60:	10012b26 	beq	r2,zero,14010 <___vfiprintf_internal_r+0xd98>
   13b64:	297fff84 	addi	r5,r5,-2
   13b68:	00800c04 	movi	r2,48
   13b6c:	98bfffc5 	stb	r2,-1(r19)
   13b70:	9179c83a 	sub	fp,r18,r5
   13b74:	db400015 	stw	r13,0(sp)
   13b78:	2827883a 	mov	r19,r5
   13b7c:	e02f883a 	mov	r23,fp
   13b80:	e200010e 	bge	fp,r8,13b88 <___vfiprintf_internal_r+0x910>
   13b84:	402f883a 	mov	r23,r8
   13b88:	73803fcc 	andi	r14,r14,255
   13b8c:	7380201c 	xori	r14,r14,128
   13b90:	73bfe004 	addi	r14,r14,-128
   13b94:	703e7326 	beq	r14,zero,13564 <___vfiprintf_internal_r+0x2ec>
   13b98:	bdc00044 	addi	r23,r23,1
   13b9c:	003e7106 	br	13564 <___vfiprintf_internal_r+0x2ec>
   13ba0:	a0800007 	ldb	r2,0(r20)
   13ba4:	6b402014 	ori	r13,r13,128
   13ba8:	003df406 	br	1337c <___vfiprintf_internal_r+0x104>
   13bac:	a0800007 	ldb	r2,0(r20)
   13bb0:	01400044 	movi	r5,1
   13bb4:	01800ac4 	movi	r6,43
   13bb8:	003df006 	br	1337c <___vfiprintf_internal_r+0x104>
   13bbc:	a0800007 	ldb	r2,0(r20)
   13bc0:	6b400054 	ori	r13,r13,1
   13bc4:	003ded06 	br	1337c <___vfiprintf_internal_r+0x104>
   13bc8:	30c03fcc 	andi	r3,r6,255
   13bcc:	18c0201c 	xori	r3,r3,128
   13bd0:	18ffe004 	addi	r3,r3,-128
   13bd4:	a0800003 	ldbu	r2,0(r20)
   13bd8:	1800091e 	bne	r3,zero,13c00 <___vfiprintf_internal_r+0x988>
   13bdc:	10803fcc 	andi	r2,r2,255
   13be0:	1080201c 	xori	r2,r2,128
   13be4:	01400044 	movi	r5,1
   13be8:	01800804 	movi	r6,32
   13bec:	10bfe004 	addi	r2,r2,-128
   13bf0:	003de206 	br	1337c <___vfiprintf_internal_r+0x104>
   13bf4:	a0800043 	ldbu	r2,1(r20)
   13bf8:	6b400814 	ori	r13,r13,32
   13bfc:	a5000044 	addi	r20,r20,1
   13c00:	10803fcc 	andi	r2,r2,255
   13c04:	1080201c 	xori	r2,r2,128
   13c08:	10bfe004 	addi	r2,r2,-128
   13c0c:	003ddb06 	br	1337c <___vfiprintf_internal_r+0x104>
   13c10:	a0800007 	ldb	r2,0(r20)
   13c14:	6b401014 	ori	r13,r13,64
   13c18:	003dd806 	br	1337c <___vfiprintf_internal_r+0x104>
   13c1c:	29403fcc 	andi	r5,r5,255
   13c20:	28020f1e 	bne	r5,zero,14460 <___vfiprintf_internal_r+0x11e8>
   13c24:	d9000417 	ldw	r4,16(sp)
   13c28:	6880080c 	andi	r2,r13,32
   13c2c:	20c00104 	addi	r3,r4,4
   13c30:	1001c01e 	bne	r2,zero,14334 <___vfiprintf_internal_r+0x10bc>
   13c34:	6880040c 	andi	r2,r13,16
   13c38:	1001df1e 	bne	r2,zero,143b8 <___vfiprintf_internal_r+0x1140>
   13c3c:	6b40100c 	andi	r13,r13,64
   13c40:	6801dd26 	beq	r13,zero,143b8 <___vfiprintf_internal_r+0x1140>
   13c44:	d8800417 	ldw	r2,16(sp)
   13c48:	d8c00415 	stw	r3,16(sp)
   13c4c:	d8c00117 	ldw	r3,4(sp)
   13c50:	10800017 	ldw	r2,0(r2)
   13c54:	10c0000d 	sth	r3,0(r2)
   13c58:	003db006 	br	1331c <___vfiprintf_internal_r+0xa4>
   13c5c:	a0800007 	ldb	r2,0(r20)
   13c60:	10c01b18 	cmpnei	r3,r2,108
   13c64:	183fe326 	beq	r3,zero,13bf4 <___vfiprintf_internal_r+0x97c>
   13c68:	6b400414 	ori	r13,r13,16
   13c6c:	003dc306 	br	1337c <___vfiprintf_internal_r+0x104>
   13c70:	d8c00417 	ldw	r3,16(sp)
   13c74:	d8000945 	stb	zero,37(sp)
   13c78:	05c00044 	movi	r23,1
   13c7c:	18800017 	ldw	r2,0(r3)
   13c80:	18c00104 	addi	r3,r3,4
   13c84:	d8c00415 	stw	r3,16(sp)
   13c88:	d8800d05 	stb	r2,52(sp)
   13c8c:	07000044 	movi	fp,1
   13c90:	dcc00d04 	addi	r19,sp,52
   13c94:	003e3106 	br	1355c <___vfiprintf_internal_r+0x2e4>
   13c98:	29403fcc 	andi	r5,r5,255
   13c9c:	2801ee1e 	bne	r5,zero,14458 <___vfiprintf_internal_r+0x11e0>
   13ca0:	00c000b4 	movhi	r3,2
   13ca4:	18ea5e04 	addi	r3,r3,-22152
   13ca8:	d8c00515 	stw	r3,20(sp)
   13cac:	68c0080c 	andi	r3,r13,32
   13cb0:	18001226 	beq	r3,zero,13cfc <___vfiprintf_internal_r+0xa84>
   13cb4:	d8c00417 	ldw	r3,16(sp)
   13cb8:	1dc00017 	ldw	r23,0(r3)
   13cbc:	1f000117 	ldw	fp,4(r3)
   13cc0:	18c00204 	addi	r3,r3,8
   13cc4:	d8c00415 	stw	r3,16(sp)
   13cc8:	68c0004c 	andi	r3,r13,1
   13ccc:	18000226 	beq	r3,zero,13cd8 <___vfiprintf_internal_r+0xa60>
   13cd0:	bf06b03a 	or	r3,r23,fp
   13cd4:	1801911e 	bne	r3,zero,1431c <___vfiprintf_internal_r+0x10a4>
   13cd8:	00800084 	movi	r2,2
   13cdc:	003eb506 	br	137b4 <___vfiprintf_internal_r+0x53c>
   13ce0:	29403fcc 	andi	r5,r5,255
   13ce4:	2801e01e 	bne	r5,zero,14468 <___vfiprintf_internal_r+0x11f0>
   13ce8:	00c000b4 	movhi	r3,2
   13cec:	18ea5904 	addi	r3,r3,-22172
   13cf0:	d8c00515 	stw	r3,20(sp)
   13cf4:	68c0080c 	andi	r3,r13,32
   13cf8:	183fee1e 	bne	r3,zero,13cb4 <___vfiprintf_internal_r+0xa3c>
   13cfc:	d9000417 	ldw	r4,16(sp)
   13d00:	68c0040c 	andi	r3,r13,16
   13d04:	25c00017 	ldw	r23,0(r4)
   13d08:	21000104 	addi	r4,r4,4
   13d0c:	d9000415 	stw	r4,16(sp)
   13d10:	18015a1e 	bne	r3,zero,1427c <___vfiprintf_internal_r+0x1004>
   13d14:	68c0100c 	andi	r3,r13,64
   13d18:	18015826 	beq	r3,zero,1427c <___vfiprintf_internal_r+0x1004>
   13d1c:	bdffffcc 	andi	r23,r23,65535
   13d20:	0039883a 	mov	fp,zero
   13d24:	003fe806 	br	13cc8 <___vfiprintf_internal_r+0xa50>
   13d28:	d8800417 	ldw	r2,16(sp)
   13d2c:	d8000945 	stb	zero,37(sp)
   13d30:	14c00017 	ldw	r19,0(r2)
   13d34:	10c00104 	addi	r3,r2,4
   13d38:	9801a526 	beq	r19,zero,143d0 <___vfiprintf_internal_r+0x1158>
   13d3c:	40bfffe0 	cmpeqi	r2,r8,-1
   13d40:	10018a1e 	bne	r2,zero,1436c <___vfiprintf_internal_r+0x10f4>
   13d44:	400d883a 	mov	r6,r8
   13d48:	000b883a 	mov	r5,zero
   13d4c:	9809883a 	mov	r4,r19
   13d50:	d8c00315 	stw	r3,12(sp)
   13d54:	db400215 	stw	r13,8(sp)
   13d58:	da000015 	stw	r8,0(sp)
   13d5c:	0011a380 	call	11a38 <memchr>
   13d60:	da000017 	ldw	r8,0(sp)
   13d64:	db400217 	ldw	r13,8(sp)
   13d68:	d8c00317 	ldw	r3,12(sp)
   13d6c:	1001b426 	beq	r2,zero,14440 <___vfiprintf_internal_r+0x11c8>
   13d70:	14f9c83a 	sub	fp,r2,r19
   13d74:	e02f883a 	mov	r23,fp
   13d78:	d8c00415 	stw	r3,16(sp)
   13d7c:	003df706 	br	1355c <___vfiprintf_internal_r+0x2e4>
   13d80:	a0800007 	ldb	r2,0(r20)
   13d84:	6b400814 	ori	r13,r13,32
   13d88:	003d7c06 	br	1337c <___vfiprintf_internal_r+0x104>
   13d8c:	d8c00417 	ldw	r3,16(sp)
   13d90:	00800c04 	movi	r2,48
   13d94:	d8800985 	stb	r2,38(sp)
   13d98:	00801e04 	movi	r2,120
   13d9c:	010000b4 	movhi	r4,2
   13da0:	d88009c5 	stb	r2,39(sp)
   13da4:	18800104 	addi	r2,r3,4
   13da8:	d8800415 	stw	r2,16(sp)
   13dac:	20aa5904 	addi	r2,r4,-22172
   13db0:	d8800515 	stw	r2,20(sp)
   13db4:	1dc00017 	ldw	r23,0(r3)
   13db8:	0039883a 	mov	fp,zero
   13dbc:	6b400094 	ori	r13,r13,2
   13dc0:	00800084 	movi	r2,2
   13dc4:	003e7b06 	br	137b4 <___vfiprintf_internal_r+0x53c>
   13dc8:	00c00044 	movi	r3,1
   13dcc:	e005883a 	mov	r2,fp
   13dd0:	dcc01715 	stw	r19,92(sp)
   13dd4:	df001815 	stw	fp,96(sp)
   13dd8:	df000c15 	stw	fp,48(sp)
   13ddc:	d8c00b15 	stw	r3,44(sp)
   13de0:	9021883a 	mov	r16,r18
   13de4:	84000204 	addi	r16,r16,8
   13de8:	003e2406 	br	1367c <___vfiprintf_internal_r+0x404>
   13dec:	01400044 	movi	r5,1
   13df0:	0009883a 	mov	r4,zero
   13df4:	9021883a 	mov	r16,r18
   13df8:	003ec206 	br	13904 <___vfiprintf_internal_r+0x68c>
   13dfc:	8dc7c83a 	sub	r3,r17,r23
   13e00:	00fe0d0e 	bge	zero,r3,13638 <___vfiprintf_internal_r+0x3c0>
   13e04:	19800450 	cmplti	r6,r3,17
   13e08:	01c000b4 	movhi	r7,2
   13e0c:	3001a01e 	bne	r6,zero,14490 <___vfiprintf_internal_r+0x1218>
   13e10:	39eae004 	addi	r7,r7,-21632
   13e14:	03400404 	movi	r13,16
   13e18:	00000606 	br	13e34 <___vfiprintf_internal_r+0xbbc>
   13e1c:	21800084 	addi	r6,r4,2
   13e20:	84000204 	addi	r16,r16,8
   13e24:	2809883a 	mov	r4,r5
   13e28:	18fffc04 	addi	r3,r3,-16
   13e2c:	19400448 	cmpgei	r5,r3,17
   13e30:	28001c26 	beq	r5,zero,13ea4 <___vfiprintf_internal_r+0xc2c>
   13e34:	21400044 	addi	r5,r4,1
   13e38:	10800404 	addi	r2,r2,16
   13e3c:	81c00015 	stw	r7,0(r16)
   13e40:	83400115 	stw	r13,4(r16)
   13e44:	d8800c15 	stw	r2,48(sp)
   13e48:	d9400b15 	stw	r5,44(sp)
   13e4c:	29800208 	cmpgei	r6,r5,8
   13e50:	303ff226 	beq	r6,zero,13e1c <___vfiprintf_internal_r+0xba4>
   13e54:	d9800a04 	addi	r6,sp,40
   13e58:	a80b883a 	mov	r5,r21
   13e5c:	b009883a 	mov	r4,r22
   13e60:	10007426 	beq	r2,zero,14034 <___vfiprintf_internal_r+0xdbc>
   13e64:	d9c00615 	stw	r7,24(sp)
   13e68:	d8c00315 	stw	r3,12(sp)
   13e6c:	da000215 	stw	r8,8(sp)
   13e70:	001316c0 	call	1316c <__sprint_r.part.0>
   13e74:	103e121e 	bne	r2,zero,136c0 <___vfiprintf_internal_r+0x448>
   13e78:	d8c00317 	ldw	r3,12(sp)
   13e7c:	d9000b17 	ldw	r4,44(sp)
   13e80:	d8800c17 	ldw	r2,48(sp)
   13e84:	18fffc04 	addi	r3,r3,-16
   13e88:	19400448 	cmpgei	r5,r3,17
   13e8c:	d9c00617 	ldw	r7,24(sp)
   13e90:	da000217 	ldw	r8,8(sp)
   13e94:	9021883a 	mov	r16,r18
   13e98:	21800044 	addi	r6,r4,1
   13e9c:	03400404 	movi	r13,16
   13ea0:	283fe41e 	bne	r5,zero,13e34 <___vfiprintf_internal_r+0xbbc>
   13ea4:	10c5883a 	add	r2,r2,r3
   13ea8:	80c00115 	stw	r3,4(r16)
   13eac:	81c00015 	stw	r7,0(r16)
   13eb0:	d8800c15 	stw	r2,48(sp)
   13eb4:	d9800b15 	stw	r6,44(sp)
   13eb8:	30c00208 	cmpgei	r3,r6,8
   13ebc:	18011326 	beq	r3,zero,1430c <___vfiprintf_internal_r+0x1094>
   13ec0:	10014b26 	beq	r2,zero,143f0 <___vfiprintf_internal_r+0x1178>
   13ec4:	d9800a04 	addi	r6,sp,40
   13ec8:	a80b883a 	mov	r5,r21
   13ecc:	b009883a 	mov	r4,r22
   13ed0:	da000215 	stw	r8,8(sp)
   13ed4:	001316c0 	call	1316c <__sprint_r.part.0>
   13ed8:	103df91e 	bne	r2,zero,136c0 <___vfiprintf_internal_r+0x448>
   13edc:	da000217 	ldw	r8,8(sp)
   13ee0:	d9000b17 	ldw	r4,44(sp)
   13ee4:	d8800c17 	ldw	r2,48(sp)
   13ee8:	4711c83a 	sub	r8,r8,fp
   13eec:	9021883a 	mov	r16,r18
   13ef0:	21400044 	addi	r5,r4,1
   13ef4:	023dd20e 	bge	zero,r8,13640 <___vfiprintf_internal_r+0x3c8>
   13ef8:	01c000b4 	movhi	r7,2
   13efc:	40c00450 	cmplti	r3,r8,17
   13f00:	39eae004 	addi	r7,r7,-21632
   13f04:	03400404 	movi	r13,16
   13f08:	18000726 	beq	r3,zero,13f28 <___vfiprintf_internal_r+0xcb0>
   13f0c:	00002006 	br	13f90 <___vfiprintf_internal_r+0xd18>
   13f10:	21400084 	addi	r5,r4,2
   13f14:	84000204 	addi	r16,r16,8
   13f18:	1809883a 	mov	r4,r3
   13f1c:	423ffc04 	addi	r8,r8,-16
   13f20:	40c00448 	cmpgei	r3,r8,17
   13f24:	18001a26 	beq	r3,zero,13f90 <___vfiprintf_internal_r+0xd18>
   13f28:	20c00044 	addi	r3,r4,1
   13f2c:	10800404 	addi	r2,r2,16
   13f30:	81c00015 	stw	r7,0(r16)
   13f34:	83400115 	stw	r13,4(r16)
   13f38:	d8800c15 	stw	r2,48(sp)
   13f3c:	d8c00b15 	stw	r3,44(sp)
   13f40:	19400208 	cmpgei	r5,r3,8
   13f44:	283ff226 	beq	r5,zero,13f10 <___vfiprintf_internal_r+0xc98>
   13f48:	d9800a04 	addi	r6,sp,40
   13f4c:	a80b883a 	mov	r5,r21
   13f50:	b009883a 	mov	r4,r22
   13f54:	10001826 	beq	r2,zero,13fb8 <___vfiprintf_internal_r+0xd40>
   13f58:	d9c00315 	stw	r7,12(sp)
   13f5c:	da000215 	stw	r8,8(sp)
   13f60:	001316c0 	call	1316c <__sprint_r.part.0>
   13f64:	103dd61e 	bne	r2,zero,136c0 <___vfiprintf_internal_r+0x448>
   13f68:	da000217 	ldw	r8,8(sp)
   13f6c:	d9000b17 	ldw	r4,44(sp)
   13f70:	d8800c17 	ldw	r2,48(sp)
   13f74:	423ffc04 	addi	r8,r8,-16
   13f78:	40c00448 	cmpgei	r3,r8,17
   13f7c:	d9c00317 	ldw	r7,12(sp)
   13f80:	9021883a 	mov	r16,r18
   13f84:	21400044 	addi	r5,r4,1
   13f88:	03400404 	movi	r13,16
   13f8c:	183fe61e 	bne	r3,zero,13f28 <___vfiprintf_internal_r+0xcb0>
   13f90:	1205883a 	add	r2,r2,r8
   13f94:	81c00015 	stw	r7,0(r16)
   13f98:	82000115 	stw	r8,4(r16)
   13f9c:	d8800c15 	stw	r2,48(sp)
   13fa0:	d9400b15 	stw	r5,44(sp)
   13fa4:	28c00208 	cmpgei	r3,r5,8
   13fa8:	1800a11e 	bne	r3,zero,14230 <___vfiprintf_internal_r+0xfb8>
   13fac:	84000204 	addi	r16,r16,8
   13fb0:	29400044 	addi	r5,r5,1
   13fb4:	003da206 	br	13640 <___vfiprintf_internal_r+0x3c8>
   13fb8:	01400044 	movi	r5,1
   13fbc:	0009883a 	mov	r4,zero
   13fc0:	9021883a 	mov	r16,r18
   13fc4:	003fd506 	br	13f1c <___vfiprintf_internal_r+0xca4>
   13fc8:	10c00060 	cmpeqi	r3,r2,1
   13fcc:	18011a1e 	bne	r3,zero,14438 <___vfiprintf_internal_r+0x11c0>
   13fd0:	108000a0 	cmpeqi	r2,r2,2
   13fd4:	db400017 	ldw	r13,0(sp)
   13fd8:	103ecf26 	beq	r2,zero,13b18 <___vfiprintf_internal_r+0x8a0>
   13fdc:	9027883a 	mov	r19,r18
   13fe0:	d9000517 	ldw	r4,20(sp)
   13fe4:	b88003cc 	andi	r2,r23,15
   13fe8:	e006973a 	slli	r3,fp,28
   13fec:	b82ed13a 	srli	r23,r23,4
   13ff0:	2085883a 	add	r2,r4,r2
   13ff4:	10800003 	ldbu	r2,0(r2)
   13ff8:	e038d13a 	srli	fp,fp,4
   13ffc:	1deeb03a 	or	r23,r3,r23
   14000:	98bfffc5 	stb	r2,-1(r19)
   14004:	bf04b03a 	or	r2,r23,fp
   14008:	9cffffc4 	addi	r19,r19,-1
   1400c:	103ff41e 	bne	r2,zero,13fe0 <___vfiprintf_internal_r+0xd68>
   14010:	94f9c83a 	sub	fp,r18,r19
   14014:	db400015 	stw	r13,0(sp)
   14018:	003ed806 	br	13b7c <___vfiprintf_internal_r+0x904>
   1401c:	d9800a04 	addi	r6,sp,40
   14020:	a80b883a 	mov	r5,r21
   14024:	b009883a 	mov	r4,r22
   14028:	001316c0 	call	1316c <__sprint_r.part.0>
   1402c:	103d9e26 	beq	r2,zero,136a8 <___vfiprintf_internal_r+0x430>
   14030:	003da306 	br	136c0 <___vfiprintf_internal_r+0x448>
   14034:	01800044 	movi	r6,1
   14038:	0009883a 	mov	r4,zero
   1403c:	9021883a 	mov	r16,r18
   14040:	003f7906 	br	13e28 <___vfiprintf_internal_r+0xbb0>
   14044:	10009626 	beq	r2,zero,142a0 <___vfiprintf_internal_r+0x1028>
   14048:	d9800a04 	addi	r6,sp,40
   1404c:	a80b883a 	mov	r5,r21
   14050:	b009883a 	mov	r4,r22
   14054:	da000615 	stw	r8,24(sp)
   14058:	db400315 	stw	r13,12(sp)
   1405c:	db800215 	stw	r14,8(sp)
   14060:	001316c0 	call	1316c <__sprint_r.part.0>
   14064:	103d961e 	bne	r2,zero,136c0 <___vfiprintf_internal_r+0x448>
   14068:	d9000b17 	ldw	r4,44(sp)
   1406c:	d8800c17 	ldw	r2,48(sp)
   14070:	da000617 	ldw	r8,24(sp)
   14074:	db400317 	ldw	r13,12(sp)
   14078:	db800217 	ldw	r14,8(sp)
   1407c:	9021883a 	mov	r16,r18
   14080:	21400044 	addi	r5,r4,1
   14084:	003d5206 	br	135d0 <___vfiprintf_internal_r+0x358>
   14088:	d8800984 	addi	r2,sp,38
   1408c:	d8801715 	stw	r2,92(sp)
   14090:	00800084 	movi	r2,2
   14094:	d8801815 	stw	r2,96(sp)
   14098:	01400044 	movi	r5,1
   1409c:	9021883a 	mov	r16,r18
   140a0:	2809883a 	mov	r4,r5
   140a4:	84000204 	addi	r16,r16,8
   140a8:	21400044 	addi	r5,r4,1
   140ac:	003d6006 	br	13630 <___vfiprintf_internal_r+0x3b8>
   140b0:	db400017 	ldw	r13,0(sp)
   140b4:	003e9406 	br	13b08 <___vfiprintf_internal_r+0x890>
   140b8:	9027883a 	mov	r19,r18
   140bc:	b809883a 	mov	r4,r23
   140c0:	e00b883a 	mov	r5,fp
   140c4:	01800284 	movi	r6,10
   140c8:	000f883a 	mov	r7,zero
   140cc:	db800315 	stw	r14,12(sp)
   140d0:	da000215 	stw	r8,8(sp)
   140d4:	db400015 	stw	r13,0(sp)
   140d8:	00168c80 	call	168c8 <__umoddi3>
   140dc:	10800c04 	addi	r2,r2,48
   140e0:	b809883a 	mov	r4,r23
   140e4:	e00b883a 	mov	r5,fp
   140e8:	98bfffc5 	stb	r2,-1(r19)
   140ec:	01800284 	movi	r6,10
   140f0:	000f883a 	mov	r7,zero
   140f4:	00162a80 	call	162a8 <__udivdi3>
   140f8:	e009883a 	mov	r4,fp
   140fc:	b80b883a 	mov	r5,r23
   14100:	db400017 	ldw	r13,0(sp)
   14104:	da000217 	ldw	r8,8(sp)
   14108:	db800317 	ldw	r14,12(sp)
   1410c:	9cffffc4 	addi	r19,r19,-1
   14110:	102f883a 	mov	r23,r2
   14114:	1839883a 	mov	fp,r3
   14118:	203fe81e 	bne	r4,zero,140bc <___vfiprintf_internal_r+0xe44>
   1411c:	294002a8 	cmpgeui	r5,r5,10
   14120:	283fe61e 	bne	r5,zero,140bc <___vfiprintf_internal_r+0xe44>
   14124:	94f9c83a 	sub	fp,r18,r19
   14128:	003e9406 	br	13b7c <___vfiprintf_internal_r+0x904>
   1412c:	19400450 	cmplti	r5,r3,17
   14130:	01c000b4 	movhi	r7,2
   14134:	2800ce1e 	bne	r5,zero,14470 <___vfiprintf_internal_r+0x11f8>
   14138:	39eae404 	addi	r7,r7,-21616
   1413c:	03c00404 	movi	r15,16
   14140:	00000706 	br	14160 <___vfiprintf_internal_r+0xee8>
   14144:	27c00084 	addi	ra,r4,2
   14148:	84000204 	addi	r16,r16,8
   1414c:	3009883a 	mov	r4,r6
   14150:	18fffc04 	addi	r3,r3,-16
   14154:	19400448 	cmpgei	r5,r3,17
   14158:	28002026 	beq	r5,zero,141dc <___vfiprintf_internal_r+0xf64>
   1415c:	21800044 	addi	r6,r4,1
   14160:	10800404 	addi	r2,r2,16
   14164:	81c00015 	stw	r7,0(r16)
   14168:	83c00115 	stw	r15,4(r16)
   1416c:	d8800c15 	stw	r2,48(sp)
   14170:	d9800b15 	stw	r6,44(sp)
   14174:	31400208 	cmpgei	r5,r6,8
   14178:	283ff226 	beq	r5,zero,14144 <___vfiprintf_internal_r+0xecc>
   1417c:	d9800a04 	addi	r6,sp,40
   14180:	a80b883a 	mov	r5,r21
   14184:	b009883a 	mov	r4,r22
   14188:	10001f26 	beq	r2,zero,14208 <___vfiprintf_internal_r+0xf90>
   1418c:	d9c00815 	stw	r7,32(sp)
   14190:	d8c00715 	stw	r3,28(sp)
   14194:	da000615 	stw	r8,24(sp)
   14198:	db400315 	stw	r13,12(sp)
   1419c:	db800215 	stw	r14,8(sp)
   141a0:	001316c0 	call	1316c <__sprint_r.part.0>
   141a4:	103d461e 	bne	r2,zero,136c0 <___vfiprintf_internal_r+0x448>
   141a8:	d8c00717 	ldw	r3,28(sp)
   141ac:	d9000b17 	ldw	r4,44(sp)
   141b0:	d8800c17 	ldw	r2,48(sp)
   141b4:	18fffc04 	addi	r3,r3,-16
   141b8:	19400448 	cmpgei	r5,r3,17
   141bc:	d9c00817 	ldw	r7,32(sp)
   141c0:	da000617 	ldw	r8,24(sp)
   141c4:	db400317 	ldw	r13,12(sp)
   141c8:	db800217 	ldw	r14,8(sp)
   141cc:	9021883a 	mov	r16,r18
   141d0:	27c00044 	addi	ra,r4,1
   141d4:	03c00404 	movi	r15,16
   141d8:	283fe01e 	bne	r5,zero,1415c <___vfiprintf_internal_r+0xee4>
   141dc:	10c5883a 	add	r2,r2,r3
   141e0:	80c00115 	stw	r3,4(r16)
   141e4:	81c00015 	stw	r7,0(r16)
   141e8:	d8800c15 	stw	r2,48(sp)
   141ec:	dfc00b15 	stw	ra,44(sp)
   141f0:	f8c00208 	cmpgei	r3,ra,8
   141f4:	18002f1e 	bne	r3,zero,142b4 <___vfiprintf_internal_r+0x103c>
   141f8:	84000204 	addi	r16,r16,8
   141fc:	f9400044 	addi	r5,ra,1
   14200:	f809883a 	mov	r4,ra
   14204:	003ce406 	br	13598 <___vfiprintf_internal_r+0x320>
   14208:	0009883a 	mov	r4,zero
   1420c:	07c00044 	movi	ra,1
   14210:	9021883a 	mov	r16,r18
   14214:	003fce06 	br	14150 <___vfiprintf_internal_r+0xed8>
   14218:	8dc0010e 	bge	r17,r23,14220 <___vfiprintf_internal_r+0xfa8>
   1421c:	b823883a 	mov	r17,r23
   14220:	d8800117 	ldw	r2,4(sp)
   14224:	1445883a 	add	r2,r2,r17
   14228:	d8800115 	stw	r2,4(sp)
   1422c:	003d1e06 	br	136a8 <___vfiprintf_internal_r+0x430>
   14230:	103ee526 	beq	r2,zero,13dc8 <___vfiprintf_internal_r+0xb50>
   14234:	d9800a04 	addi	r6,sp,40
   14238:	a80b883a 	mov	r5,r21
   1423c:	b009883a 	mov	r4,r22
   14240:	001316c0 	call	1316c <__sprint_r.part.0>
   14244:	103d1e1e 	bne	r2,zero,136c0 <___vfiprintf_internal_r+0x448>
   14248:	d9400b17 	ldw	r5,44(sp)
   1424c:	d8800c17 	ldw	r2,48(sp)
   14250:	9021883a 	mov	r16,r18
   14254:	29400044 	addi	r5,r5,1
   14258:	003cf906 	br	13640 <___vfiprintf_internal_r+0x3c8>
   1425c:	d8000b15 	stw	zero,44(sp)
   14260:	9021883a 	mov	r16,r18
   14264:	003d7106 	br	1382c <___vfiprintf_internal_r+0x5b4>
   14268:	4000731e 	bne	r8,zero,14438 <___vfiprintf_internal_r+0x11c0>
   1426c:	0011883a 	mov	r8,zero
   14270:	0039883a 	mov	fp,zero
   14274:	9027883a 	mov	r19,r18
   14278:	003e4006 	br	13b7c <___vfiprintf_internal_r+0x904>
   1427c:	0039883a 	mov	fp,zero
   14280:	003e9106 	br	13cc8 <___vfiprintf_internal_r+0xa50>
   14284:	b839d7fa 	srai	fp,r23,31
   14288:	e005883a 	mov	r2,fp
   1428c:	003dd206 	br	139d8 <___vfiprintf_internal_r+0x760>
   14290:	01400044 	movi	r5,1
   14294:	0009883a 	mov	r4,zero
   14298:	9021883a 	mov	r16,r18
   1429c:	003ce406 	br	13630 <___vfiprintf_internal_r+0x3b8>
   142a0:	70002b1e 	bne	r14,zero,14350 <___vfiprintf_internal_r+0x10d8>
   142a4:	0009883a 	mov	r4,zero
   142a8:	01400044 	movi	r5,1
   142ac:	9021883a 	mov	r16,r18
   142b0:	003cdf06 	br	13630 <___vfiprintf_internal_r+0x3b8>
   142b4:	10003726 	beq	r2,zero,14394 <___vfiprintf_internal_r+0x111c>
   142b8:	d9800a04 	addi	r6,sp,40
   142bc:	a80b883a 	mov	r5,r21
   142c0:	b009883a 	mov	r4,r22
   142c4:	da000615 	stw	r8,24(sp)
   142c8:	db400315 	stw	r13,12(sp)
   142cc:	db800215 	stw	r14,8(sp)
   142d0:	001316c0 	call	1316c <__sprint_r.part.0>
   142d4:	103cfa1e 	bne	r2,zero,136c0 <___vfiprintf_internal_r+0x448>
   142d8:	d9000b17 	ldw	r4,44(sp)
   142dc:	d8800c17 	ldw	r2,48(sp)
   142e0:	da000617 	ldw	r8,24(sp)
   142e4:	db400317 	ldw	r13,12(sp)
   142e8:	db800217 	ldw	r14,8(sp)
   142ec:	9021883a 	mov	r16,r18
   142f0:	21400044 	addi	r5,r4,1
   142f4:	003ca806 	br	13598 <___vfiprintf_internal_r+0x320>
   142f8:	a0800007 	ldb	r2,0(r20)
   142fc:	d8c00415 	stw	r3,16(sp)
   14300:	003c1e06 	br	1337c <___vfiprintf_internal_r+0x104>
   14304:	9027883a 	mov	r19,r18
   14308:	003e1c06 	br	13b7c <___vfiprintf_internal_r+0x904>
   1430c:	84000204 	addi	r16,r16,8
   14310:	31400044 	addi	r5,r6,1
   14314:	3009883a 	mov	r4,r6
   14318:	003cc706 	br	13638 <___vfiprintf_internal_r+0x3c0>
   1431c:	00c00c04 	movi	r3,48
   14320:	d88009c5 	stb	r2,39(sp)
   14324:	d8c00985 	stb	r3,38(sp)
   14328:	6b400094 	ori	r13,r13,2
   1432c:	00800084 	movi	r2,2
   14330:	003d2006 	br	137b4 <___vfiprintf_internal_r+0x53c>
   14334:	d9400117 	ldw	r5,4(sp)
   14338:	20800017 	ldw	r2,0(r4)
   1433c:	d8c00415 	stw	r3,16(sp)
   14340:	2809d7fa 	srai	r4,r5,31
   14344:	11400015 	stw	r5,0(r2)
   14348:	11000115 	stw	r4,4(r2)
   1434c:	003bf306 	br	1331c <___vfiprintf_internal_r+0xa4>
   14350:	d8800984 	addi	r2,sp,38
   14354:	d8801715 	stw	r2,92(sp)
   14358:	00800084 	movi	r2,2
   1435c:	d8801815 	stw	r2,96(sp)
   14360:	01000044 	movi	r4,1
   14364:	9021883a 	mov	r16,r18
   14368:	003f4e06 	br	140a4 <___vfiprintf_internal_r+0xe2c>
   1436c:	9809883a 	mov	r4,r19
   14370:	d8c00215 	stw	r3,8(sp)
   14374:	db400015 	stw	r13,0(sp)
   14378:	00130d40 	call	130d4 <strlen>
   1437c:	d8c00217 	ldw	r3,8(sp)
   14380:	db400017 	ldw	r13,0(sp)
   14384:	1039883a 	mov	fp,r2
   14388:	102f883a 	mov	r23,r2
   1438c:	d8c00415 	stw	r3,16(sp)
   14390:	003c7206 	br	1355c <___vfiprintf_internal_r+0x2e4>
   14394:	d8c00947 	ldb	r3,37(sp)
   14398:	18001b26 	beq	r3,zero,14408 <___vfiprintf_internal_r+0x1190>
   1439c:	d8800944 	addi	r2,sp,37
   143a0:	d8801715 	stw	r2,92(sp)
   143a4:	00800044 	movi	r2,1
   143a8:	d8801815 	stw	r2,96(sp)
   143ac:	01400044 	movi	r5,1
   143b0:	9021883a 	mov	r16,r18
   143b4:	003c8306 	br	135c4 <___vfiprintf_internal_r+0x34c>
   143b8:	d8800417 	ldw	r2,16(sp)
   143bc:	10800017 	ldw	r2,0(r2)
   143c0:	d8c00415 	stw	r3,16(sp)
   143c4:	d8c00117 	ldw	r3,4(sp)
   143c8:	10c00015 	stw	r3,0(r2)
   143cc:	003bd306 	br	1331c <___vfiprintf_internal_r+0xa4>
   143d0:	408001f0 	cmpltui	r2,r8,7
   143d4:	4039883a 	mov	fp,r8
   143d8:	10000926 	beq	r2,zero,14400 <___vfiprintf_internal_r+0x1188>
   143dc:	04c000b4 	movhi	r19,2
   143e0:	e02f883a 	mov	r23,fp
   143e4:	d8c00415 	stw	r3,16(sp)
   143e8:	9cea6304 	addi	r19,r19,-22132
   143ec:	003c5b06 	br	1355c <___vfiprintf_internal_r+0x2e4>
   143f0:	01400044 	movi	r5,1
   143f4:	0009883a 	mov	r4,zero
   143f8:	9021883a 	mov	r16,r18
   143fc:	003c8e06 	br	13638 <___vfiprintf_internal_r+0x3c0>
   14400:	07000184 	movi	fp,6
   14404:	003ff506 	br	143dc <___vfiprintf_internal_r+0x1164>
   14408:	703f1f1e 	bne	r14,zero,14088 <___vfiprintf_internal_r+0xe10>
   1440c:	0009883a 	mov	r4,zero
   14410:	01400044 	movi	r5,1
   14414:	9021883a 	mov	r16,r18
   14418:	003c8706 	br	13638 <___vfiprintf_internal_r+0x3c0>
   1441c:	d9800945 	stb	r6,37(sp)
   14420:	003c4806 	br	13544 <___vfiprintf_internal_r+0x2cc>
   14424:	d9800a04 	addi	r6,sp,40
   14428:	a80b883a 	mov	r5,r21
   1442c:	b009883a 	mov	r4,r22
   14430:	001316c0 	call	1316c <__sprint_r.part.0>
   14434:	003ca206 	br	136c0 <___vfiprintf_internal_r+0x448>
   14438:	db400017 	ldw	r13,0(sp)
   1443c:	003d7306 	br	13a0c <___vfiprintf_internal_r+0x794>
   14440:	402f883a 	mov	r23,r8
   14444:	d8c00415 	stw	r3,16(sp)
   14448:	4039883a 	mov	fp,r8
   1444c:	003c4306 	br	1355c <___vfiprintf_internal_r+0x2e4>
   14450:	d9800945 	stb	r6,37(sp)
   14454:	003d9106 	br	13a9c <___vfiprintf_internal_r+0x824>
   14458:	d9800945 	stb	r6,37(sp)
   1445c:	003e1006 	br	13ca0 <___vfiprintf_internal_r+0xa28>
   14460:	d9800945 	stb	r6,37(sp)
   14464:	003def06 	br	13c24 <___vfiprintf_internal_r+0x9ac>
   14468:	d9800945 	stb	r6,37(sp)
   1446c:	003e1e06 	br	13ce8 <___vfiprintf_internal_r+0xa70>
   14470:	303f883a 	mov	ra,r6
   14474:	39eae404 	addi	r7,r7,-21616
   14478:	003f5806 	br	141dc <___vfiprintf_internal_r+0xf64>
   1447c:	d9800945 	stb	r6,37(sp)
   14480:	003d4d06 	br	139b8 <___vfiprintf_internal_r+0x740>
   14484:	21400044 	addi	r5,r4,1
   14488:	39eae404 	addi	r7,r7,-21616
   1448c:	003d3706 	br	1396c <___vfiprintf_internal_r+0x6f4>
   14490:	280d883a 	mov	r6,r5
   14494:	39eae004 	addi	r7,r7,-21632
   14498:	003e8206 	br	13ea4 <___vfiprintf_internal_r+0xc2c>
   1449c:	00bfffc4 	movi	r2,-1
   144a0:	d8800115 	stw	r2,4(sp)
   144a4:	003c8906 	br	136cc <___vfiprintf_internal_r+0x454>
   144a8:	d8800417 	ldw	r2,16(sp)
   144ac:	12000017 	ldw	r8,0(r2)
   144b0:	11000104 	addi	r4,r2,4
   144b4:	4000010e 	bge	r8,zero,144bc <___vfiprintf_internal_r+0x1244>
   144b8:	023fffc4 	movi	r8,-1
   144bc:	a0800043 	ldbu	r2,1(r20)
   144c0:	d9000415 	stw	r4,16(sp)
   144c4:	1829883a 	mov	r20,r3
   144c8:	10803fcc 	andi	r2,r2,255
   144cc:	1080201c 	xori	r2,r2,128
   144d0:	10bfe004 	addi	r2,r2,-128
   144d4:	003ba906 	br	1337c <___vfiprintf_internal_r+0x104>

000144d8 <__vfiprintf_internal>:
   144d8:	00c000b4 	movhi	r3,2
   144dc:	2005883a 	mov	r2,r4
   144e0:	1932d417 	ldw	r4,-13488(r3)
   144e4:	300f883a 	mov	r7,r6
   144e8:	280d883a 	mov	r6,r5
   144ec:	100b883a 	mov	r5,r2
   144f0:	00132781 	jmpi	13278 <___vfiprintf_internal_r>

000144f4 <__sbprintf>:
   144f4:	2880030b 	ldhu	r2,12(r5)
   144f8:	2b001917 	ldw	r12,100(r5)
   144fc:	2ac0038b 	ldhu	r11,14(r5)
   14500:	2a800717 	ldw	r10,28(r5)
   14504:	2a400917 	ldw	r9,36(r5)
   14508:	defee204 	addi	sp,sp,-1144
   1450c:	da001a04 	addi	r8,sp,104
   14510:	00c10004 	movi	r3,1024
   14514:	dc011a15 	stw	r16,1128(sp)
   14518:	10bfff4c 	andi	r2,r2,65533
   1451c:	2821883a 	mov	r16,r5
   14520:	d80b883a 	mov	r5,sp
   14524:	dc811c15 	stw	r18,1136(sp)
   14528:	dc411b15 	stw	r17,1132(sp)
   1452c:	dfc11d15 	stw	ra,1140(sp)
   14530:	2025883a 	mov	r18,r4
   14534:	d880030d 	sth	r2,12(sp)
   14538:	db001915 	stw	r12,100(sp)
   1453c:	dac0038d 	sth	r11,14(sp)
   14540:	da800715 	stw	r10,28(sp)
   14544:	da400915 	stw	r9,36(sp)
   14548:	da000015 	stw	r8,0(sp)
   1454c:	da000415 	stw	r8,16(sp)
   14550:	d8c00215 	stw	r3,8(sp)
   14554:	d8c00515 	stw	r3,20(sp)
   14558:	d8000615 	stw	zero,24(sp)
   1455c:	00132780 	call	13278 <___vfiprintf_internal_r>
   14560:	1023883a 	mov	r17,r2
   14564:	10000d0e 	bge	r2,zero,1459c <__sbprintf+0xa8>
   14568:	d880030b 	ldhu	r2,12(sp)
   1456c:	1080100c 	andi	r2,r2,64
   14570:	10000326 	beq	r2,zero,14580 <__sbprintf+0x8c>
   14574:	8080030b 	ldhu	r2,12(r16)
   14578:	10801014 	ori	r2,r2,64
   1457c:	8080030d 	sth	r2,12(r16)
   14580:	8805883a 	mov	r2,r17
   14584:	dfc11d17 	ldw	ra,1140(sp)
   14588:	dc811c17 	ldw	r18,1136(sp)
   1458c:	dc411b17 	ldw	r17,1132(sp)
   14590:	dc011a17 	ldw	r16,1128(sp)
   14594:	dec11e04 	addi	sp,sp,1144
   14598:	f800283a 	ret
   1459c:	d80b883a 	mov	r5,sp
   145a0:	9009883a 	mov	r4,r18
   145a4:	0010de80 	call	10de8 <_fflush_r>
   145a8:	103fef26 	beq	r2,zero,14568 <__sbprintf+0x74>
   145ac:	047fffc4 	movi	r17,-1
   145b0:	003fed06 	br	14568 <__sbprintf+0x74>

000145b4 <__swbuf_r>:
   145b4:	defffb04 	addi	sp,sp,-20
   145b8:	dcc00315 	stw	r19,12(sp)
   145bc:	dc400115 	stw	r17,4(sp)
   145c0:	dc000015 	stw	r16,0(sp)
   145c4:	dfc00415 	stw	ra,16(sp)
   145c8:	dc800215 	stw	r18,8(sp)
   145cc:	2027883a 	mov	r19,r4
   145d0:	2823883a 	mov	r17,r5
   145d4:	3021883a 	mov	r16,r6
   145d8:	20000226 	beq	r4,zero,145e4 <__swbuf_r+0x30>
   145dc:	20800e17 	ldw	r2,56(r4)
   145e0:	10003e26 	beq	r2,zero,146dc <__swbuf_r+0x128>
   145e4:	80800617 	ldw	r2,24(r16)
   145e8:	80c0030b 	ldhu	r3,12(r16)
   145ec:	80800215 	stw	r2,8(r16)
   145f0:	1880020c 	andi	r2,r3,8
   145f4:	10001f26 	beq	r2,zero,14674 <__swbuf_r+0xc0>
   145f8:	80800417 	ldw	r2,16(r16)
   145fc:	10001d26 	beq	r2,zero,14674 <__swbuf_r+0xc0>
   14600:	1948000c 	andi	r5,r3,8192
   14604:	8c803fcc 	andi	r18,r17,255
   14608:	28002326 	beq	r5,zero,14698 <__swbuf_r+0xe4>
   1460c:	80c00017 	ldw	r3,0(r16)
   14610:	81000517 	ldw	r4,20(r16)
   14614:	1885c83a 	sub	r2,r3,r2
   14618:	1100290e 	bge	r2,r4,146c0 <__swbuf_r+0x10c>
   1461c:	10800044 	addi	r2,r2,1
   14620:	81400217 	ldw	r5,8(r16)
   14624:	19000044 	addi	r4,r3,1
   14628:	81000015 	stw	r4,0(r16)
   1462c:	297fffc4 	addi	r5,r5,-1
   14630:	81400215 	stw	r5,8(r16)
   14634:	1c400005 	stb	r17,0(r3)
   14638:	80c00517 	ldw	r3,20(r16)
   1463c:	18802926 	beq	r3,r2,146e4 <__swbuf_r+0x130>
   14640:	8080030b 	ldhu	r2,12(r16)
   14644:	1080004c 	andi	r2,r2,1
   14648:	10000226 	beq	r2,zero,14654 <__swbuf_r+0xa0>
   1464c:	90800298 	cmpnei	r2,r18,10
   14650:	10002426 	beq	r2,zero,146e4 <__swbuf_r+0x130>
   14654:	9005883a 	mov	r2,r18
   14658:	dfc00417 	ldw	ra,16(sp)
   1465c:	dcc00317 	ldw	r19,12(sp)
   14660:	dc800217 	ldw	r18,8(sp)
   14664:	dc400117 	ldw	r17,4(sp)
   14668:	dc000017 	ldw	r16,0(sp)
   1466c:	dec00504 	addi	sp,sp,20
   14670:	f800283a 	ret
   14674:	800b883a 	mov	r5,r16
   14678:	9809883a 	mov	r4,r19
   1467c:	000f0f40 	call	f0f4 <__swsetup_r>
   14680:	10001c1e 	bne	r2,zero,146f4 <__swbuf_r+0x140>
   14684:	80c0030b 	ldhu	r3,12(r16)
   14688:	80800417 	ldw	r2,16(r16)
   1468c:	8c803fcc 	andi	r18,r17,255
   14690:	1948000c 	andi	r5,r3,8192
   14694:	283fdd1e 	bne	r5,zero,1460c <__swbuf_r+0x58>
   14698:	81001917 	ldw	r4,100(r16)
   1469c:	18c80014 	ori	r3,r3,8192
   146a0:	0177ffc4 	movi	r5,-8193
   146a4:	2148703a 	and	r4,r4,r5
   146a8:	80c0030d 	sth	r3,12(r16)
   146ac:	80c00017 	ldw	r3,0(r16)
   146b0:	81001915 	stw	r4,100(r16)
   146b4:	81000517 	ldw	r4,20(r16)
   146b8:	1885c83a 	sub	r2,r3,r2
   146bc:	113fd716 	blt	r2,r4,1461c <__swbuf_r+0x68>
   146c0:	800b883a 	mov	r5,r16
   146c4:	9809883a 	mov	r4,r19
   146c8:	0010de80 	call	10de8 <_fflush_r>
   146cc:	1000091e 	bne	r2,zero,146f4 <__swbuf_r+0x140>
   146d0:	80c00017 	ldw	r3,0(r16)
   146d4:	00800044 	movi	r2,1
   146d8:	003fd106 	br	14620 <__swbuf_r+0x6c>
   146dc:	00112300 	call	11230 <__sinit>
   146e0:	003fc006 	br	145e4 <__swbuf_r+0x30>
   146e4:	800b883a 	mov	r5,r16
   146e8:	9809883a 	mov	r4,r19
   146ec:	0010de80 	call	10de8 <_fflush_r>
   146f0:	103fd826 	beq	r2,zero,14654 <__swbuf_r+0xa0>
   146f4:	04bfffc4 	movi	r18,-1
   146f8:	003fd606 	br	14654 <__swbuf_r+0xa0>

000146fc <__swbuf>:
   146fc:	00c000b4 	movhi	r3,2
   14700:	2005883a 	mov	r2,r4
   14704:	1932d417 	ldw	r4,-13488(r3)
   14708:	280d883a 	mov	r6,r5
   1470c:	100b883a 	mov	r5,r2
   14710:	00145b41 	jmpi	145b4 <__swbuf_r>

00014714 <_write_r>:
   14714:	2807883a 	mov	r3,r5
   14718:	defffe04 	addi	sp,sp,-8
   1471c:	dc000015 	stw	r16,0(sp)
   14720:	300b883a 	mov	r5,r6
   14724:	008000b4 	movhi	r2,2
   14728:	380d883a 	mov	r6,r7
   1472c:	2021883a 	mov	r16,r4
   14730:	1809883a 	mov	r4,r3
   14734:	dfc00115 	stw	ra,4(sp)
   14738:	103a0915 	stw	zero,-6108(r2)
   1473c:	0017b440 	call	17b44 <write>
   14740:	10ffffd8 	cmpnei	r3,r2,-1
   14744:	18000426 	beq	r3,zero,14758 <_write_r+0x44>
   14748:	dfc00117 	ldw	ra,4(sp)
   1474c:	dc000017 	ldw	r16,0(sp)
   14750:	dec00204 	addi	sp,sp,8
   14754:	f800283a 	ret
   14758:	00c000b4 	movhi	r3,2
   1475c:	18fa0917 	ldw	r3,-6108(r3)
   14760:	183ff926 	beq	r3,zero,14748 <_write_r+0x34>
   14764:	80c00015 	stw	r3,0(r16)
   14768:	dfc00117 	ldw	ra,4(sp)
   1476c:	dc000017 	ldw	r16,0(sp)
   14770:	dec00204 	addi	sp,sp,8
   14774:	f800283a 	ret

00014778 <_close_r>:
   14778:	defffe04 	addi	sp,sp,-8
   1477c:	dc000015 	stw	r16,0(sp)
   14780:	008000b4 	movhi	r2,2
   14784:	2021883a 	mov	r16,r4
   14788:	2809883a 	mov	r4,r5
   1478c:	dfc00115 	stw	ra,4(sp)
   14790:	103a0915 	stw	zero,-6108(r2)
   14794:	0016ec80 	call	16ec8 <close>
   14798:	10ffffd8 	cmpnei	r3,r2,-1
   1479c:	18000426 	beq	r3,zero,147b0 <_close_r+0x38>
   147a0:	dfc00117 	ldw	ra,4(sp)
   147a4:	dc000017 	ldw	r16,0(sp)
   147a8:	dec00204 	addi	sp,sp,8
   147ac:	f800283a 	ret
   147b0:	00c000b4 	movhi	r3,2
   147b4:	18fa0917 	ldw	r3,-6108(r3)
   147b8:	183ff926 	beq	r3,zero,147a0 <_close_r+0x28>
   147bc:	80c00015 	stw	r3,0(r16)
   147c0:	dfc00117 	ldw	ra,4(sp)
   147c4:	dc000017 	ldw	r16,0(sp)
   147c8:	dec00204 	addi	sp,sp,8
   147cc:	f800283a 	ret

000147d0 <__assert_func>:
   147d0:	008000b4 	movhi	r2,2
   147d4:	1232d417 	ldw	r8,-13488(r2)
   147d8:	defffc04 	addi	sp,sp,-16
   147dc:	3807883a 	mov	r3,r7
   147e0:	3005883a 	mov	r2,r6
   147e4:	dfc00315 	stw	ra,12(sp)
   147e8:	42400317 	ldw	r9,12(r8)
   147ec:	200f883a 	mov	r7,r4
   147f0:	2811883a 	mov	r8,r5
   147f4:	180d883a 	mov	r6,r3
   147f8:	10000a26 	beq	r2,zero,14824 <__assert_func+0x54>
   147fc:	00c000b4 	movhi	r3,2
   14800:	18eae804 	addi	r3,r3,-21600
   14804:	014000b4 	movhi	r5,2
   14808:	296aec04 	addi	r5,r5,-21584
   1480c:	4809883a 	mov	r4,r9
   14810:	d8c00115 	stw	r3,4(sp)
   14814:	da000015 	stw	r8,0(sp)
   14818:	d8800215 	stw	r2,8(sp)
   1481c:	0014b5c0 	call	14b5c <fiprintf>
   14820:	0015d400 	call	15d40 <abort>
   14824:	00c000b4 	movhi	r3,2
   14828:	18eaeb04 	addi	r3,r3,-21588
   1482c:	1805883a 	mov	r2,r3
   14830:	003ff406 	br	14804 <__assert_func+0x34>

00014834 <__assert>:
   14834:	deffff04 	addi	sp,sp,-4
   14838:	300f883a 	mov	r7,r6
   1483c:	000d883a 	mov	r6,zero
   14840:	dfc00015 	stw	ra,0(sp)
   14844:	00147d00 	call	147d0 <__assert_func>

00014848 <_calloc_r>:
   14848:	2806d43a 	srli	r3,r5,16
   1484c:	defffb04 	addi	sp,sp,-20
   14850:	dc400115 	stw	r17,4(sp)
   14854:	dc000015 	stw	r16,0(sp)
   14858:	dfc00415 	stw	ra,16(sp)
   1485c:	dcc00315 	stw	r19,12(sp)
   14860:	dc800215 	stw	r18,8(sp)
   14864:	3022d43a 	srli	r17,r6,16
   14868:	2805883a 	mov	r2,r5
   1486c:	2021883a 	mov	r16,r4
   14870:	18002d1e 	bne	r3,zero,14928 <_calloc_r+0xe0>
   14874:	88003e1e 	bne	r17,zero,14970 <_calloc_r+0x128>
   14878:	317fffcc 	andi	r5,r6,65535
   1487c:	113fffcc 	andi	r4,r2,65535
   14880:	0008b4c0 	call	8b4c <__mulsi3>
   14884:	100b883a 	mov	r5,r2
   14888:	8009883a 	mov	r4,r16
   1488c:	000c6400 	call	c640 <_malloc_r>
   14890:	1009883a 	mov	r4,r2
   14894:	10001626 	beq	r2,zero,148f0 <_calloc_r+0xa8>
   14898:	11bfff17 	ldw	r6,-4(r2)
   1489c:	00bfff04 	movi	r2,-4
   148a0:	308c703a 	and	r6,r6,r2
   148a4:	31bfff04 	addi	r6,r6,-4
   148a8:	30800968 	cmpgeui	r2,r6,37
   148ac:	1000181e 	bne	r2,zero,14910 <_calloc_r+0xc8>
   148b0:	30800530 	cmpltui	r2,r6,20
   148b4:	10000a1e 	bne	r2,zero,148e0 <_calloc_r+0x98>
   148b8:	20000015 	stw	zero,0(r4)
   148bc:	20000115 	stw	zero,4(r4)
   148c0:	30800728 	cmpgeui	r2,r6,28
   148c4:	10001626 	beq	r2,zero,14920 <_calloc_r+0xd8>
   148c8:	20000215 	stw	zero,8(r4)
   148cc:	20000315 	stw	zero,12(r4)
   148d0:	31800920 	cmpeqi	r6,r6,36
   148d4:	30002d1e 	bne	r6,zero,1498c <_calloc_r+0x144>
   148d8:	20800404 	addi	r2,r4,16
   148dc:	00000106 	br	148e4 <_calloc_r+0x9c>
   148e0:	2005883a 	mov	r2,r4
   148e4:	10000015 	stw	zero,0(r2)
   148e8:	10000115 	stw	zero,4(r2)
   148ec:	10000215 	stw	zero,8(r2)
   148f0:	2005883a 	mov	r2,r4
   148f4:	dfc00417 	ldw	ra,16(sp)
   148f8:	dcc00317 	ldw	r19,12(sp)
   148fc:	dc800217 	ldw	r18,8(sp)
   14900:	dc400117 	ldw	r17,4(sp)
   14904:	dc000017 	ldw	r16,0(sp)
   14908:	dec00504 	addi	sp,sp,20
   1490c:	f800283a 	ret
   14910:	000b883a 	mov	r5,zero
   14914:	0011b080 	call	11b08 <memset>
   14918:	1009883a 	mov	r4,r2
   1491c:	003ff406 	br	148f0 <_calloc_r+0xa8>
   14920:	20800204 	addi	r2,r4,8
   14924:	003fef06 	br	148e4 <_calloc_r+0x9c>
   14928:	8800131e 	bne	r17,zero,14978 <_calloc_r+0x130>
   1492c:	1823883a 	mov	r17,r3
   14930:	3027883a 	mov	r19,r6
   14934:	317fffcc 	andi	r5,r6,65535
   14938:	113fffcc 	andi	r4,r2,65535
   1493c:	0008b4c0 	call	8b4c <__mulsi3>
   14940:	897fffcc 	andi	r5,r17,65535
   14944:	993fffcc 	andi	r4,r19,65535
   14948:	1025883a 	mov	r18,r2
   1494c:	0008b4c0 	call	8b4c <__mulsi3>
   14950:	900ad43a 	srli	r5,r18,16
   14954:	114b883a 	add	r5,r2,r5
   14958:	2804d43a 	srli	r2,r5,16
   1495c:	1000061e 	bne	r2,zero,14978 <_calloc_r+0x130>
   14960:	280a943a 	slli	r5,r5,16
   14964:	94bfffcc 	andi	r18,r18,65535
   14968:	2c8ab03a 	or	r5,r5,r18
   1496c:	003fc606 	br	14888 <_calloc_r+0x40>
   14970:	2827883a 	mov	r19,r5
   14974:	003fef06 	br	14934 <_calloc_r+0xec>
   14978:	000c6140 	call	c614 <__errno>
   1497c:	00c00304 	movi	r3,12
   14980:	10c00015 	stw	r3,0(r2)
   14984:	0009883a 	mov	r4,zero
   14988:	003fd906 	br	148f0 <_calloc_r+0xa8>
   1498c:	20000415 	stw	zero,16(r4)
   14990:	20800604 	addi	r2,r4,24
   14994:	20000515 	stw	zero,20(r4)
   14998:	003fd206 	br	148e4 <_calloc_r+0x9c>

0001499c <_fclose_r.part.0>:
   1499c:	defffc04 	addi	sp,sp,-16
   149a0:	dc800215 	stw	r18,8(sp)
   149a4:	dc400115 	stw	r17,4(sp)
   149a8:	dc000015 	stw	r16,0(sp)
   149ac:	dfc00315 	stw	ra,12(sp)
   149b0:	2821883a 	mov	r16,r5
   149b4:	2023883a 	mov	r17,r4
   149b8:	0010bc00 	call	10bc0 <__sflush_r>
   149bc:	80c00b17 	ldw	r3,44(r16)
   149c0:	1025883a 	mov	r18,r2
   149c4:	18000426 	beq	r3,zero,149d8 <_fclose_r.part.0+0x3c>
   149c8:	81400717 	ldw	r5,28(r16)
   149cc:	8809883a 	mov	r4,r17
   149d0:	183ee83a 	callr	r3
   149d4:	10001916 	blt	r2,zero,14a3c <_fclose_r.part.0+0xa0>
   149d8:	8080030b 	ldhu	r2,12(r16)
   149dc:	1080200c 	andi	r2,r2,128
   149e0:	10001a1e 	bne	r2,zero,14a4c <_fclose_r.part.0+0xb0>
   149e4:	81400c17 	ldw	r5,48(r16)
   149e8:	28000526 	beq	r5,zero,14a00 <_fclose_r.part.0+0x64>
   149ec:	80801004 	addi	r2,r16,64
   149f0:	28800226 	beq	r5,r2,149fc <_fclose_r.part.0+0x60>
   149f4:	8809883a 	mov	r4,r17
   149f8:	00113940 	call	11394 <_free_r>
   149fc:	80000c15 	stw	zero,48(r16)
   14a00:	81401117 	ldw	r5,68(r16)
   14a04:	28000326 	beq	r5,zero,14a14 <_fclose_r.part.0+0x78>
   14a08:	8809883a 	mov	r4,r17
   14a0c:	00113940 	call	11394 <_free_r>
   14a10:	80001115 	stw	zero,68(r16)
   14a14:	00112400 	call	11240 <__sfp_lock_acquire>
   14a18:	8000030d 	sth	zero,12(r16)
   14a1c:	00112440 	call	11244 <__sfp_lock_release>
   14a20:	9005883a 	mov	r2,r18
   14a24:	dfc00317 	ldw	ra,12(sp)
   14a28:	dc800217 	ldw	r18,8(sp)
   14a2c:	dc400117 	ldw	r17,4(sp)
   14a30:	dc000017 	ldw	r16,0(sp)
   14a34:	dec00404 	addi	sp,sp,16
   14a38:	f800283a 	ret
   14a3c:	8080030b 	ldhu	r2,12(r16)
   14a40:	04bfffc4 	movi	r18,-1
   14a44:	1080200c 	andi	r2,r2,128
   14a48:	103fe626 	beq	r2,zero,149e4 <_fclose_r.part.0+0x48>
   14a4c:	81400417 	ldw	r5,16(r16)
   14a50:	8809883a 	mov	r4,r17
   14a54:	00113940 	call	11394 <_free_r>
   14a58:	003fe206 	br	149e4 <_fclose_r.part.0+0x48>

00014a5c <_fclose_r>:
   14a5c:	28001926 	beq	r5,zero,14ac4 <_fclose_r+0x68>
   14a60:	defffd04 	addi	sp,sp,-12
   14a64:	dc000115 	stw	r16,4(sp)
   14a68:	dfc00215 	stw	ra,8(sp)
   14a6c:	2021883a 	mov	r16,r4
   14a70:	20000226 	beq	r4,zero,14a7c <_fclose_r+0x20>
   14a74:	20800e17 	ldw	r2,56(r4)
   14a78:	10000c26 	beq	r2,zero,14aac <_fclose_r+0x50>
   14a7c:	2880030f 	ldh	r2,12(r5)
   14a80:	1000051e 	bne	r2,zero,14a98 <_fclose_r+0x3c>
   14a84:	0005883a 	mov	r2,zero
   14a88:	dfc00217 	ldw	ra,8(sp)
   14a8c:	dc000117 	ldw	r16,4(sp)
   14a90:	dec00304 	addi	sp,sp,12
   14a94:	f800283a 	ret
   14a98:	8009883a 	mov	r4,r16
   14a9c:	dfc00217 	ldw	ra,8(sp)
   14aa0:	dc000117 	ldw	r16,4(sp)
   14aa4:	dec00304 	addi	sp,sp,12
   14aa8:	001499c1 	jmpi	1499c <_fclose_r.part.0>
   14aac:	d9400015 	stw	r5,0(sp)
   14ab0:	00112300 	call	11230 <__sinit>
   14ab4:	d9400017 	ldw	r5,0(sp)
   14ab8:	2880030f 	ldh	r2,12(r5)
   14abc:	103ff126 	beq	r2,zero,14a84 <_fclose_r+0x28>
   14ac0:	003ff506 	br	14a98 <_fclose_r+0x3c>
   14ac4:	0005883a 	mov	r2,zero
   14ac8:	f800283a 	ret

00014acc <fclose>:
   14acc:	20000826 	beq	r4,zero,14af0 <fclose+0x24>
   14ad0:	008000b4 	movhi	r2,2
   14ad4:	200b883a 	mov	r5,r4
   14ad8:	1132d417 	ldw	r4,-13488(r2)
   14adc:	20000226 	beq	r4,zero,14ae8 <fclose+0x1c>
   14ae0:	20800e17 	ldw	r2,56(r4)
   14ae4:	10000526 	beq	r2,zero,14afc <fclose+0x30>
   14ae8:	2880030f 	ldh	r2,12(r5)
   14aec:	1000021e 	bne	r2,zero,14af8 <fclose+0x2c>
   14af0:	0005883a 	mov	r2,zero
   14af4:	f800283a 	ret
   14af8:	001499c1 	jmpi	1499c <_fclose_r.part.0>
   14afc:	defffd04 	addi	sp,sp,-12
   14b00:	d9400115 	stw	r5,4(sp)
   14b04:	d9000015 	stw	r4,0(sp)
   14b08:	dfc00215 	stw	ra,8(sp)
   14b0c:	00112300 	call	11230 <__sinit>
   14b10:	d9400117 	ldw	r5,4(sp)
   14b14:	d9000017 	ldw	r4,0(sp)
   14b18:	2880030f 	ldh	r2,12(r5)
   14b1c:	10000326 	beq	r2,zero,14b2c <fclose+0x60>
   14b20:	dfc00217 	ldw	ra,8(sp)
   14b24:	dec00304 	addi	sp,sp,12
   14b28:	001499c1 	jmpi	1499c <_fclose_r.part.0>
   14b2c:	0005883a 	mov	r2,zero
   14b30:	dfc00217 	ldw	ra,8(sp)
   14b34:	dec00304 	addi	sp,sp,12
   14b38:	f800283a 	ret

00014b3c <_fiprintf_r>:
   14b3c:	defffe04 	addi	sp,sp,-8
   14b40:	dfc00015 	stw	ra,0(sp)
   14b44:	d9c00115 	stw	r7,4(sp)
   14b48:	d9c00104 	addi	r7,sp,4
   14b4c:	0015c0c0 	call	15c0c <_vfiprintf_r>
   14b50:	dfc00017 	ldw	ra,0(sp)
   14b54:	dec00204 	addi	sp,sp,8
   14b58:	f800283a 	ret

00014b5c <fiprintf>:
   14b5c:	defffd04 	addi	sp,sp,-12
   14b60:	2005883a 	mov	r2,r4
   14b64:	dfc00015 	stw	ra,0(sp)
   14b68:	d9800115 	stw	r6,4(sp)
   14b6c:	d9c00215 	stw	r7,8(sp)
   14b70:	00c000b4 	movhi	r3,2
   14b74:	1932d417 	ldw	r4,-13488(r3)
   14b78:	280d883a 	mov	r6,r5
   14b7c:	d9c00104 	addi	r7,sp,4
   14b80:	100b883a 	mov	r5,r2
   14b84:	0015c0c0 	call	15c0c <_vfiprintf_r>
   14b88:	dfc00017 	ldw	ra,0(sp)
   14b8c:	dec00304 	addi	sp,sp,12
   14b90:	f800283a 	ret

00014b94 <__fputwc>:
   14b94:	defff904 	addi	sp,sp,-28
   14b98:	dcc00415 	stw	r19,16(sp)
   14b9c:	dc800315 	stw	r18,12(sp)
   14ba0:	dc000115 	stw	r16,4(sp)
   14ba4:	dfc00615 	stw	ra,24(sp)
   14ba8:	dd000515 	stw	r20,20(sp)
   14bac:	dc400215 	stw	r17,8(sp)
   14bb0:	2025883a 	mov	r18,r4
   14bb4:	2827883a 	mov	r19,r5
   14bb8:	3021883a 	mov	r16,r6
   14bbc:	00153540 	call	15354 <__locale_mb_cur_max>
   14bc0:	10800058 	cmpnei	r2,r2,1
   14bc4:	1000071e 	bne	r2,zero,14be4 <__fputwc+0x50>
   14bc8:	98bfffc4 	addi	r2,r19,-1
   14bcc:	10803fe8 	cmpgeui	r2,r2,255
   14bd0:	1000041e 	bne	r2,zero,14be4 <__fputwc+0x50>
   14bd4:	980b883a 	mov	r5,r19
   14bd8:	dcc000c5 	stb	r19,3(sp)
   14bdc:	05000044 	movi	r20,1
   14be0:	00000a06 	br	14c0c <__fputwc+0x78>
   14be4:	81c01704 	addi	r7,r16,92
   14be8:	980d883a 	mov	r6,r19
   14bec:	d94000c4 	addi	r5,sp,3
   14bf0:	9009883a 	mov	r4,r18
   14bf4:	0015c100 	call	15c10 <_wcrtomb_r>
   14bf8:	1029883a 	mov	r20,r2
   14bfc:	10bfffd8 	cmpnei	r2,r2,-1
   14c00:	10003926 	beq	r2,zero,14ce8 <__fputwc+0x154>
   14c04:	a0001f26 	beq	r20,zero,14c84 <__fputwc+0xf0>
   14c08:	d94000c3 	ldbu	r5,3(sp)
   14c0c:	0023883a 	mov	r17,zero
   14c10:	00000a06 	br	14c3c <__fputwc+0xa8>
   14c14:	80800017 	ldw	r2,0(r16)
   14c18:	11400005 	stb	r5,0(r2)
   14c1c:	80c00017 	ldw	r3,0(r16)
   14c20:	18c00044 	addi	r3,r3,1
   14c24:	80c00015 	stw	r3,0(r16)
   14c28:	8c400044 	addi	r17,r17,1
   14c2c:	d88000c4 	addi	r2,sp,3
   14c30:	1447883a 	add	r3,r2,r17
   14c34:	8d00132e 	bgeu	r17,r20,14c84 <__fputwc+0xf0>
   14c38:	19400003 	ldbu	r5,0(r3)
   14c3c:	80c00217 	ldw	r3,8(r16)
   14c40:	18ffffc4 	addi	r3,r3,-1
   14c44:	80c00215 	stw	r3,8(r16)
   14c48:	183ff20e 	bge	r3,zero,14c14 <__fputwc+0x80>
   14c4c:	80800617 	ldw	r2,24(r16)
   14c50:	18801616 	blt	r3,r2,14cac <__fputwc+0x118>
   14c54:	80800017 	ldw	r2,0(r16)
   14c58:	11400005 	stb	r5,0(r2)
   14c5c:	80800017 	ldw	r2,0(r16)
   14c60:	10c00003 	ldbu	r3,0(r2)
   14c64:	10800044 	addi	r2,r2,1
   14c68:	18c002a0 	cmpeqi	r3,r3,10
   14c6c:	1800171e 	bne	r3,zero,14ccc <__fputwc+0x138>
   14c70:	80800015 	stw	r2,0(r16)
   14c74:	8c400044 	addi	r17,r17,1
   14c78:	d88000c4 	addi	r2,sp,3
   14c7c:	1447883a 	add	r3,r2,r17
   14c80:	8d3fed36 	bltu	r17,r20,14c38 <__fputwc+0xa4>
   14c84:	9829883a 	mov	r20,r19
   14c88:	a005883a 	mov	r2,r20
   14c8c:	dfc00617 	ldw	ra,24(sp)
   14c90:	dd000517 	ldw	r20,20(sp)
   14c94:	dcc00417 	ldw	r19,16(sp)
   14c98:	dc800317 	ldw	r18,12(sp)
   14c9c:	dc400217 	ldw	r17,8(sp)
   14ca0:	dc000117 	ldw	r16,4(sp)
   14ca4:	dec00704 	addi	sp,sp,28
   14ca8:	f800283a 	ret
   14cac:	29403fcc 	andi	r5,r5,255
   14cb0:	800d883a 	mov	r6,r16
   14cb4:	9009883a 	mov	r4,r18
   14cb8:	00145b40 	call	145b4 <__swbuf_r>
   14cbc:	10bfffe0 	cmpeqi	r2,r2,-1
   14cc0:	103fd926 	beq	r2,zero,14c28 <__fputwc+0x94>
   14cc4:	053fffc4 	movi	r20,-1
   14cc8:	003fef06 	br	14c88 <__fputwc+0xf4>
   14ccc:	800d883a 	mov	r6,r16
   14cd0:	01400284 	movi	r5,10
   14cd4:	9009883a 	mov	r4,r18
   14cd8:	00145b40 	call	145b4 <__swbuf_r>
   14cdc:	10bfffe0 	cmpeqi	r2,r2,-1
   14ce0:	103fd126 	beq	r2,zero,14c28 <__fputwc+0x94>
   14ce4:	003ff706 	br	14cc4 <__fputwc+0x130>
   14ce8:	8080030b 	ldhu	r2,12(r16)
   14cec:	10801014 	ori	r2,r2,64
   14cf0:	8080030d 	sth	r2,12(r16)
   14cf4:	003fe406 	br	14c88 <__fputwc+0xf4>

00014cf8 <_fputwc_r>:
   14cf8:	3080030b 	ldhu	r2,12(r6)
   14cfc:	10c8000c 	andi	r3,r2,8192
   14d00:	1800051e 	bne	r3,zero,14d18 <_fputwc_r+0x20>
   14d04:	30c01917 	ldw	r3,100(r6)
   14d08:	10880014 	ori	r2,r2,8192
   14d0c:	3080030d 	sth	r2,12(r6)
   14d10:	18880014 	ori	r2,r3,8192
   14d14:	30801915 	stw	r2,100(r6)
   14d18:	0014b941 	jmpi	14b94 <__fputwc>

00014d1c <fputwc>:
   14d1c:	defffc04 	addi	sp,sp,-16
   14d20:	008000b4 	movhi	r2,2
   14d24:	dc000215 	stw	r16,8(sp)
   14d28:	1432d417 	ldw	r16,-13488(r2)
   14d2c:	dfc00315 	stw	ra,12(sp)
   14d30:	280d883a 	mov	r6,r5
   14d34:	200b883a 	mov	r5,r4
   14d38:	80000226 	beq	r16,zero,14d44 <fputwc+0x28>
   14d3c:	80800e17 	ldw	r2,56(r16)
   14d40:	10000d26 	beq	r2,zero,14d78 <fputwc+0x5c>
   14d44:	3080030b 	ldhu	r2,12(r6)
   14d48:	10c8000c 	andi	r3,r2,8192
   14d4c:	1800051e 	bne	r3,zero,14d64 <fputwc+0x48>
   14d50:	30c01917 	ldw	r3,100(r6)
   14d54:	10880014 	ori	r2,r2,8192
   14d58:	3080030d 	sth	r2,12(r6)
   14d5c:	18880014 	ori	r2,r3,8192
   14d60:	30801915 	stw	r2,100(r6)
   14d64:	8009883a 	mov	r4,r16
   14d68:	dfc00317 	ldw	ra,12(sp)
   14d6c:	dc000217 	ldw	r16,8(sp)
   14d70:	dec00404 	addi	sp,sp,16
   14d74:	0014b941 	jmpi	14b94 <__fputwc>
   14d78:	d9000015 	stw	r4,0(sp)
   14d7c:	8009883a 	mov	r4,r16
   14d80:	d9800115 	stw	r6,4(sp)
   14d84:	00112300 	call	11230 <__sinit>
   14d88:	d9800117 	ldw	r6,4(sp)
   14d8c:	d9400017 	ldw	r5,0(sp)
   14d90:	003fec06 	br	14d44 <fputwc+0x28>

00014d94 <_fstat_r>:
   14d94:	2807883a 	mov	r3,r5
   14d98:	defffe04 	addi	sp,sp,-8
   14d9c:	dc000015 	stw	r16,0(sp)
   14da0:	008000b4 	movhi	r2,2
   14da4:	300b883a 	mov	r5,r6
   14da8:	2021883a 	mov	r16,r4
   14dac:	1809883a 	mov	r4,r3
   14db0:	dfc00115 	stw	ra,4(sp)
   14db4:	103a0915 	stw	zero,-6108(r2)
   14db8:	00170440 	call	17044 <fstat>
   14dbc:	10ffffd8 	cmpnei	r3,r2,-1
   14dc0:	18000426 	beq	r3,zero,14dd4 <_fstat_r+0x40>
   14dc4:	dfc00117 	ldw	ra,4(sp)
   14dc8:	dc000017 	ldw	r16,0(sp)
   14dcc:	dec00204 	addi	sp,sp,8
   14dd0:	f800283a 	ret
   14dd4:	00c000b4 	movhi	r3,2
   14dd8:	18fa0917 	ldw	r3,-6108(r3)
   14ddc:	183ff926 	beq	r3,zero,14dc4 <_fstat_r+0x30>
   14de0:	80c00015 	stw	r3,0(r16)
   14de4:	dfc00117 	ldw	ra,4(sp)
   14de8:	dc000017 	ldw	r16,0(sp)
   14dec:	dec00204 	addi	sp,sp,8
   14df0:	f800283a 	ret

00014df4 <__sfvwrite_r>:
   14df4:	30800217 	ldw	r2,8(r6)
   14df8:	10009b26 	beq	r2,zero,15068 <__sfvwrite_r+0x274>
   14dfc:	2a00030b 	ldhu	r8,12(r5)
   14e00:	defff404 	addi	sp,sp,-48
   14e04:	dd400715 	stw	r21,28(sp)
   14e08:	dd000615 	stw	r20,24(sp)
   14e0c:	dc000215 	stw	r16,8(sp)
   14e10:	dfc00b15 	stw	ra,44(sp)
   14e14:	df000a15 	stw	fp,40(sp)
   14e18:	ddc00915 	stw	r23,36(sp)
   14e1c:	dd800815 	stw	r22,32(sp)
   14e20:	dcc00515 	stw	r19,20(sp)
   14e24:	dc800415 	stw	r18,16(sp)
   14e28:	dc400315 	stw	r17,12(sp)
   14e2c:	4080020c 	andi	r2,r8,8
   14e30:	3029883a 	mov	r20,r6
   14e34:	202b883a 	mov	r21,r4
   14e38:	2821883a 	mov	r16,r5
   14e3c:	10002626 	beq	r2,zero,14ed8 <__sfvwrite_r+0xe4>
   14e40:	28800417 	ldw	r2,16(r5)
   14e44:	10002426 	beq	r2,zero,14ed8 <__sfvwrite_r+0xe4>
   14e48:	4080008c 	andi	r2,r8,2
   14e4c:	a4400017 	ldw	r17,0(r20)
   14e50:	10002926 	beq	r2,zero,14ef8 <__sfvwrite_r+0x104>
   14e54:	05a00034 	movhi	r22,32768
   14e58:	0027883a 	mov	r19,zero
   14e5c:	0025883a 	mov	r18,zero
   14e60:	b5bf0004 	addi	r22,r22,-1024
   14e64:	980d883a 	mov	r6,r19
   14e68:	a809883a 	mov	r4,r21
   14e6c:	90007126 	beq	r18,zero,15034 <__sfvwrite_r+0x240>
   14e70:	900f883a 	mov	r7,r18
   14e74:	b480012e 	bgeu	r22,r18,14e7c <__sfvwrite_r+0x88>
   14e78:	b00f883a 	mov	r7,r22
   14e7c:	80800917 	ldw	r2,36(r16)
   14e80:	81400717 	ldw	r5,28(r16)
   14e84:	103ee83a 	callr	r2
   14e88:	0080720e 	bge	zero,r2,15054 <__sfvwrite_r+0x260>
   14e8c:	a0c00217 	ldw	r3,8(r20)
   14e90:	98a7883a 	add	r19,r19,r2
   14e94:	90a5c83a 	sub	r18,r18,r2
   14e98:	1885c83a 	sub	r2,r3,r2
   14e9c:	a0800215 	stw	r2,8(r20)
   14ea0:	103ff01e 	bne	r2,zero,14e64 <__sfvwrite_r+0x70>
   14ea4:	0005883a 	mov	r2,zero
   14ea8:	dfc00b17 	ldw	ra,44(sp)
   14eac:	df000a17 	ldw	fp,40(sp)
   14eb0:	ddc00917 	ldw	r23,36(sp)
   14eb4:	dd800817 	ldw	r22,32(sp)
   14eb8:	dd400717 	ldw	r21,28(sp)
   14ebc:	dd000617 	ldw	r20,24(sp)
   14ec0:	dcc00517 	ldw	r19,20(sp)
   14ec4:	dc800417 	ldw	r18,16(sp)
   14ec8:	dc400317 	ldw	r17,12(sp)
   14ecc:	dc000217 	ldw	r16,8(sp)
   14ed0:	dec00c04 	addi	sp,sp,48
   14ed4:	f800283a 	ret
   14ed8:	800b883a 	mov	r5,r16
   14edc:	a809883a 	mov	r4,r21
   14ee0:	000f0f40 	call	f0f4 <__swsetup_r>
   14ee4:	1000e61e 	bne	r2,zero,15280 <__sfvwrite_r+0x48c>
   14ee8:	8200030b 	ldhu	r8,12(r16)
   14eec:	a4400017 	ldw	r17,0(r20)
   14ef0:	4080008c 	andi	r2,r8,2
   14ef4:	103fd71e 	bne	r2,zero,14e54 <__sfvwrite_r+0x60>
   14ef8:	4080004c 	andi	r2,r8,1
   14efc:	10005c1e 	bne	r2,zero,15070 <__sfvwrite_r+0x27c>
   14f00:	00a00034 	movhi	r2,32768
   14f04:	10bfff84 	addi	r2,r2,-2
   14f08:	00e00034 	movhi	r3,32768
   14f0c:	d8800015 	stw	r2,0(sp)
   14f10:	18bfffc4 	addi	r2,r3,-1
   14f14:	0039883a 	mov	fp,zero
   14f18:	0025883a 	mov	r18,zero
   14f1c:	d8800115 	stw	r2,4(sp)
   14f20:	90004026 	beq	r18,zero,15024 <__sfvwrite_r+0x230>
   14f24:	4080800c 	andi	r2,r8,512
   14f28:	81000017 	ldw	r4,0(r16)
   14f2c:	85c00217 	ldw	r23,8(r16)
   14f30:	10008826 	beq	r2,zero,15154 <__sfvwrite_r+0x360>
   14f34:	b82d883a 	mov	r22,r23
   14f38:	95c0ae36 	bltu	r18,r23,151f4 <__sfvwrite_r+0x400>
   14f3c:	4081200c 	andi	r2,r8,1152
   14f40:	10002626 	beq	r2,zero,14fdc <__sfvwrite_r+0x1e8>
   14f44:	81800517 	ldw	r6,20(r16)
   14f48:	81400417 	ldw	r5,16(r16)
   14f4c:	3185883a 	add	r2,r6,r6
   14f50:	1185883a 	add	r2,r2,r6
   14f54:	1026d7fa 	srli	r19,r2,31
   14f58:	216dc83a 	sub	r22,r4,r5
   14f5c:	b1000044 	addi	r4,r22,1
   14f60:	98a7883a 	add	r19,r19,r2
   14f64:	9827d07a 	srai	r19,r19,1
   14f68:	2485883a 	add	r2,r4,r18
   14f6c:	980d883a 	mov	r6,r19
   14f70:	9880022e 	bgeu	r19,r2,14f7c <__sfvwrite_r+0x188>
   14f74:	1027883a 	mov	r19,r2
   14f78:	100d883a 	mov	r6,r2
   14f7c:	4201000c 	andi	r8,r8,1024
   14f80:	4000af26 	beq	r8,zero,15240 <__sfvwrite_r+0x44c>
   14f84:	300b883a 	mov	r5,r6
   14f88:	a809883a 	mov	r4,r21
   14f8c:	000c6400 	call	c640 <_malloc_r>
   14f90:	1000b726 	beq	r2,zero,15270 <__sfvwrite_r+0x47c>
   14f94:	81400417 	ldw	r5,16(r16)
   14f98:	b00d883a 	mov	r6,r22
   14f9c:	1009883a 	mov	r4,r2
   14fa0:	000ce200 	call	ce20 <memcpy>
   14fa4:	100f883a 	mov	r7,r2
   14fa8:	8080030b 	ldhu	r2,12(r16)
   14fac:	00fedfc4 	movi	r3,-1153
   14fb0:	10c4703a 	and	r2,r2,r3
   14fb4:	10802014 	ori	r2,r2,128
   14fb8:	8080030d 	sth	r2,12(r16)
   14fbc:	3d89883a 	add	r4,r7,r22
   14fc0:	9d85c83a 	sub	r2,r19,r22
   14fc4:	81c00415 	stw	r7,16(r16)
   14fc8:	81000015 	stw	r4,0(r16)
   14fcc:	84c00515 	stw	r19,20(r16)
   14fd0:	902f883a 	mov	r23,r18
   14fd4:	80800215 	stw	r2,8(r16)
   14fd8:	902d883a 	mov	r22,r18
   14fdc:	b00d883a 	mov	r6,r22
   14fe0:	e00b883a 	mov	r5,fp
   14fe4:	00154880 	call	15488 <memmove>
   14fe8:	81000217 	ldw	r4,8(r16)
   14fec:	80800017 	ldw	r2,0(r16)
   14ff0:	9027883a 	mov	r19,r18
   14ff4:	25c9c83a 	sub	r4,r4,r23
   14ff8:	1585883a 	add	r2,r2,r22
   14ffc:	81000215 	stw	r4,8(r16)
   15000:	80800015 	stw	r2,0(r16)
   15004:	0025883a 	mov	r18,zero
   15008:	a1800217 	ldw	r6,8(r20)
   1500c:	e4f9883a 	add	fp,fp,r19
   15010:	34e7c83a 	sub	r19,r6,r19
   15014:	a4c00215 	stw	r19,8(r20)
   15018:	983fa226 	beq	r19,zero,14ea4 <__sfvwrite_r+0xb0>
   1501c:	8200030b 	ldhu	r8,12(r16)
   15020:	903fc01e 	bne	r18,zero,14f24 <__sfvwrite_r+0x130>
   15024:	8f000017 	ldw	fp,0(r17)
   15028:	8c800117 	ldw	r18,4(r17)
   1502c:	8c400204 	addi	r17,r17,8
   15030:	003fbb06 	br	14f20 <__sfvwrite_r+0x12c>
   15034:	8cc00017 	ldw	r19,0(r17)
   15038:	8c800117 	ldw	r18,4(r17)
   1503c:	8c400204 	addi	r17,r17,8
   15040:	003f8806 	br	14e64 <__sfvwrite_r+0x70>
   15044:	800b883a 	mov	r5,r16
   15048:	a809883a 	mov	r4,r21
   1504c:	0010de80 	call	10de8 <_fflush_r>
   15050:	10002226 	beq	r2,zero,150dc <__sfvwrite_r+0x2e8>
   15054:	8080030b 	ldhu	r2,12(r16)
   15058:	10801014 	ori	r2,r2,64
   1505c:	8080030d 	sth	r2,12(r16)
   15060:	00bfffc4 	movi	r2,-1
   15064:	003f9006 	br	14ea8 <__sfvwrite_r+0xb4>
   15068:	0005883a 	mov	r2,zero
   1506c:	f800283a 	ret
   15070:	002d883a 	mov	r22,zero
   15074:	0039883a 	mov	fp,zero
   15078:	0005883a 	mov	r2,zero
   1507c:	002f883a 	mov	r23,zero
   15080:	b0001d26 	beq	r22,zero,150f8 <__sfvwrite_r+0x304>
   15084:	10002026 	beq	r2,zero,15108 <__sfvwrite_r+0x314>
   15088:	e027883a 	mov	r19,fp
   1508c:	b4c0012e 	bgeu	r22,r19,15094 <__sfvwrite_r+0x2a0>
   15090:	b027883a 	mov	r19,r22
   15094:	81000017 	ldw	r4,0(r16)
   15098:	80800417 	ldw	r2,16(r16)
   1509c:	81c00517 	ldw	r7,20(r16)
   150a0:	1100032e 	bgeu	r2,r4,150b0 <__sfvwrite_r+0x2bc>
   150a4:	84800217 	ldw	r18,8(r16)
   150a8:	3ca5883a 	add	r18,r7,r18
   150ac:	94c01e16 	blt	r18,r19,15128 <__sfvwrite_r+0x334>
   150b0:	99c05316 	blt	r19,r7,15200 <__sfvwrite_r+0x40c>
   150b4:	80800917 	ldw	r2,36(r16)
   150b8:	81400717 	ldw	r5,28(r16)
   150bc:	b80d883a 	mov	r6,r23
   150c0:	a809883a 	mov	r4,r21
   150c4:	103ee83a 	callr	r2
   150c8:	1025883a 	mov	r18,r2
   150cc:	00bfe10e 	bge	zero,r2,15054 <__sfvwrite_r+0x260>
   150d0:	e4b9c83a 	sub	fp,fp,r18
   150d4:	e03fdb26 	beq	fp,zero,15044 <__sfvwrite_r+0x250>
   150d8:	00800044 	movi	r2,1
   150dc:	a1800217 	ldw	r6,8(r20)
   150e0:	bcaf883a 	add	r23,r23,r18
   150e4:	b4adc83a 	sub	r22,r22,r18
   150e8:	34a5c83a 	sub	r18,r6,r18
   150ec:	a4800215 	stw	r18,8(r20)
   150f0:	903f6c26 	beq	r18,zero,14ea4 <__sfvwrite_r+0xb0>
   150f4:	b03fe31e 	bne	r22,zero,15084 <__sfvwrite_r+0x290>
   150f8:	8d800117 	ldw	r22,4(r17)
   150fc:	8dc00017 	ldw	r23,0(r17)
   15100:	8c400204 	addi	r17,r17,8
   15104:	b03ffc26 	beq	r22,zero,150f8 <__sfvwrite_r+0x304>
   15108:	b00d883a 	mov	r6,r22
   1510c:	01400284 	movi	r5,10
   15110:	b809883a 	mov	r4,r23
   15114:	0011a380 	call	11a38 <memchr>
   15118:	10004626 	beq	r2,zero,15234 <__sfvwrite_r+0x440>
   1511c:	10800044 	addi	r2,r2,1
   15120:	15f9c83a 	sub	fp,r2,r23
   15124:	003fd806 	br	15088 <__sfvwrite_r+0x294>
   15128:	b80b883a 	mov	r5,r23
   1512c:	900d883a 	mov	r6,r18
   15130:	00154880 	call	15488 <memmove>
   15134:	80800017 	ldw	r2,0(r16)
   15138:	800b883a 	mov	r5,r16
   1513c:	a809883a 	mov	r4,r21
   15140:	1485883a 	add	r2,r2,r18
   15144:	80800015 	stw	r2,0(r16)
   15148:	0010de80 	call	10de8 <_fflush_r>
   1514c:	103fe026 	beq	r2,zero,150d0 <__sfvwrite_r+0x2dc>
   15150:	003fc006 	br	15054 <__sfvwrite_r+0x260>
   15154:	80800417 	ldw	r2,16(r16)
   15158:	11001436 	bltu	r2,r4,151ac <__sfvwrite_r+0x3b8>
   1515c:	84c00517 	ldw	r19,20(r16)
   15160:	94c01236 	bltu	r18,r19,151ac <__sfvwrite_r+0x3b8>
   15164:	d8800017 	ldw	r2,0(sp)
   15168:	1480302e 	bgeu	r2,r18,1522c <__sfvwrite_r+0x438>
   1516c:	d9000117 	ldw	r4,4(sp)
   15170:	980b883a 	mov	r5,r19
   15174:	00089980 	call	8998 <__divsi3>
   15178:	980b883a 	mov	r5,r19
   1517c:	1009883a 	mov	r4,r2
   15180:	0008b4c0 	call	8b4c <__mulsi3>
   15184:	82000917 	ldw	r8,36(r16)
   15188:	81400717 	ldw	r5,28(r16)
   1518c:	100f883a 	mov	r7,r2
   15190:	e00d883a 	mov	r6,fp
   15194:	a809883a 	mov	r4,r21
   15198:	403ee83a 	callr	r8
   1519c:	1027883a 	mov	r19,r2
   151a0:	00bfac0e 	bge	zero,r2,15054 <__sfvwrite_r+0x260>
   151a4:	94e5c83a 	sub	r18,r18,r19
   151a8:	003f9706 	br	15008 <__sfvwrite_r+0x214>
   151ac:	b827883a 	mov	r19,r23
   151b0:	95c0012e 	bgeu	r18,r23,151b8 <__sfvwrite_r+0x3c4>
   151b4:	9027883a 	mov	r19,r18
   151b8:	980d883a 	mov	r6,r19
   151bc:	e00b883a 	mov	r5,fp
   151c0:	00154880 	call	15488 <memmove>
   151c4:	80800217 	ldw	r2,8(r16)
   151c8:	81000017 	ldw	r4,0(r16)
   151cc:	14c5c83a 	sub	r2,r2,r19
   151d0:	24c9883a 	add	r4,r4,r19
   151d4:	80800215 	stw	r2,8(r16)
   151d8:	81000015 	stw	r4,0(r16)
   151dc:	103ff11e 	bne	r2,zero,151a4 <__sfvwrite_r+0x3b0>
   151e0:	800b883a 	mov	r5,r16
   151e4:	a809883a 	mov	r4,r21
   151e8:	0010de80 	call	10de8 <_fflush_r>
   151ec:	103fed26 	beq	r2,zero,151a4 <__sfvwrite_r+0x3b0>
   151f0:	003f9806 	br	15054 <__sfvwrite_r+0x260>
   151f4:	902f883a 	mov	r23,r18
   151f8:	902d883a 	mov	r22,r18
   151fc:	003f7706 	br	14fdc <__sfvwrite_r+0x1e8>
   15200:	980d883a 	mov	r6,r19
   15204:	b80b883a 	mov	r5,r23
   15208:	00154880 	call	15488 <memmove>
   1520c:	80c00217 	ldw	r3,8(r16)
   15210:	80800017 	ldw	r2,0(r16)
   15214:	9825883a 	mov	r18,r19
   15218:	1cc7c83a 	sub	r3,r3,r19
   1521c:	14c5883a 	add	r2,r2,r19
   15220:	80c00215 	stw	r3,8(r16)
   15224:	80800015 	stw	r2,0(r16)
   15228:	003fa906 	br	150d0 <__sfvwrite_r+0x2dc>
   1522c:	9009883a 	mov	r4,r18
   15230:	003fcf06 	br	15170 <__sfvwrite_r+0x37c>
   15234:	b4c00044 	addi	r19,r22,1
   15238:	9839883a 	mov	fp,r19
   1523c:	003f9306 	br	1508c <__sfvwrite_r+0x298>
   15240:	a809883a 	mov	r4,r21
   15244:	00156180 	call	15618 <_realloc_r>
   15248:	100f883a 	mov	r7,r2
   1524c:	103f5b1e 	bne	r2,zero,14fbc <__sfvwrite_r+0x1c8>
   15250:	81400417 	ldw	r5,16(r16)
   15254:	a809883a 	mov	r4,r21
   15258:	00113940 	call	11394 <_free_r>
   1525c:	8080030b 	ldhu	r2,12(r16)
   15260:	00c00304 	movi	r3,12
   15264:	a8c00015 	stw	r3,0(r21)
   15268:	10bfdfcc 	andi	r2,r2,65407
   1526c:	003f7a06 	br	15058 <__sfvwrite_r+0x264>
   15270:	00c00304 	movi	r3,12
   15274:	8080030b 	ldhu	r2,12(r16)
   15278:	a8c00015 	stw	r3,0(r21)
   1527c:	003f7606 	br	15058 <__sfvwrite_r+0x264>
   15280:	00bfffc4 	movi	r2,-1
   15284:	003f0806 	br	14ea8 <__sfvwrite_r+0xb4>

00015288 <_isatty_r>:
   15288:	defffe04 	addi	sp,sp,-8
   1528c:	dc000015 	stw	r16,0(sp)
   15290:	008000b4 	movhi	r2,2
   15294:	2021883a 	mov	r16,r4
   15298:	2809883a 	mov	r4,r5
   1529c:	dfc00115 	stw	ra,4(sp)
   152a0:	103a0915 	stw	zero,-6108(r2)
   152a4:	001715c0 	call	1715c <isatty>
   152a8:	10ffffd8 	cmpnei	r3,r2,-1
   152ac:	18000426 	beq	r3,zero,152c0 <_isatty_r+0x38>
   152b0:	dfc00117 	ldw	ra,4(sp)
   152b4:	dc000017 	ldw	r16,0(sp)
   152b8:	dec00204 	addi	sp,sp,8
   152bc:	f800283a 	ret
   152c0:	00c000b4 	movhi	r3,2
   152c4:	18fa0917 	ldw	r3,-6108(r3)
   152c8:	183ff926 	beq	r3,zero,152b0 <_isatty_r+0x28>
   152cc:	80c00015 	stw	r3,0(r16)
   152d0:	dfc00117 	ldw	ra,4(sp)
   152d4:	dc000017 	ldw	r16,0(sp)
   152d8:	dec00204 	addi	sp,sp,8
   152dc:	f800283a 	ret

000152e0 <_setlocale_r>:
   152e0:	30001626 	beq	r6,zero,1533c <_setlocale_r+0x5c>
   152e4:	014000b4 	movhi	r5,2
   152e8:	defffe04 	addi	sp,sp,-8
   152ec:	296af904 	addi	r5,r5,-21532
   152f0:	3009883a 	mov	r4,r6
   152f4:	dc000015 	stw	r16,0(sp)
   152f8:	dfc00115 	stw	ra,4(sp)
   152fc:	3021883a 	mov	r16,r6
   15300:	0015b540 	call	15b54 <strcmp>
   15304:	1000061e 	bne	r2,zero,15320 <_setlocale_r+0x40>
   15308:	008000b4 	movhi	r2,2
   1530c:	10aaf804 	addi	r2,r2,-21536
   15310:	dfc00117 	ldw	ra,4(sp)
   15314:	dc000017 	ldw	r16,0(sp)
   15318:	dec00204 	addi	sp,sp,8
   1531c:	f800283a 	ret
   15320:	80800003 	ldbu	r2,0(r16)
   15324:	10bfef44 	addi	r2,r2,-67
   15328:	10000726 	beq	r2,zero,15348 <_setlocale_r+0x68>
   1532c:	80800003 	ldbu	r2,0(r16)
   15330:	103ff526 	beq	r2,zero,15308 <_setlocale_r+0x28>
   15334:	0005883a 	mov	r2,zero
   15338:	003ff506 	br	15310 <_setlocale_r+0x30>
   1533c:	008000b4 	movhi	r2,2
   15340:	10aaf804 	addi	r2,r2,-21536
   15344:	f800283a 	ret
   15348:	80800043 	ldbu	r2,1(r16)
   1534c:	103fee26 	beq	r2,zero,15308 <_setlocale_r+0x28>
   15350:	003ff606 	br	1532c <_setlocale_r+0x4c>

00015354 <__locale_mb_cur_max>:
   15354:	008000b4 	movhi	r2,2
   15358:	10ae1207 	ldb	r2,-18360(r2)
   1535c:	f800283a 	ret

00015360 <setlocale>:
   15360:	28001626 	beq	r5,zero,153bc <setlocale+0x5c>
   15364:	defffe04 	addi	sp,sp,-8
   15368:	dc000015 	stw	r16,0(sp)
   1536c:	2821883a 	mov	r16,r5
   15370:	014000b4 	movhi	r5,2
   15374:	296af904 	addi	r5,r5,-21532
   15378:	8009883a 	mov	r4,r16
   1537c:	dfc00115 	stw	ra,4(sp)
   15380:	0015b540 	call	15b54 <strcmp>
   15384:	1000061e 	bne	r2,zero,153a0 <setlocale+0x40>
   15388:	008000b4 	movhi	r2,2
   1538c:	10aaf804 	addi	r2,r2,-21536
   15390:	dfc00117 	ldw	ra,4(sp)
   15394:	dc000017 	ldw	r16,0(sp)
   15398:	dec00204 	addi	sp,sp,8
   1539c:	f800283a 	ret
   153a0:	80800003 	ldbu	r2,0(r16)
   153a4:	10bfef44 	addi	r2,r2,-67
   153a8:	10000726 	beq	r2,zero,153c8 <setlocale+0x68>
   153ac:	80800003 	ldbu	r2,0(r16)
   153b0:	103ff526 	beq	r2,zero,15388 <setlocale+0x28>
   153b4:	0005883a 	mov	r2,zero
   153b8:	003ff506 	br	15390 <setlocale+0x30>
   153bc:	008000b4 	movhi	r2,2
   153c0:	10aaf804 	addi	r2,r2,-21536
   153c4:	f800283a 	ret
   153c8:	80800043 	ldbu	r2,1(r16)
   153cc:	103fee26 	beq	r2,zero,15388 <setlocale+0x28>
   153d0:	003ff606 	br	153ac <setlocale+0x4c>

000153d4 <_lseek_r>:
   153d4:	2807883a 	mov	r3,r5
   153d8:	defffe04 	addi	sp,sp,-8
   153dc:	dc000015 	stw	r16,0(sp)
   153e0:	300b883a 	mov	r5,r6
   153e4:	008000b4 	movhi	r2,2
   153e8:	380d883a 	mov	r6,r7
   153ec:	2021883a 	mov	r16,r4
   153f0:	1809883a 	mov	r4,r3
   153f4:	dfc00115 	stw	ra,4(sp)
   153f8:	103a0915 	stw	zero,-6108(r2)
   153fc:	001749c0 	call	1749c <lseek>
   15400:	10ffffd8 	cmpnei	r3,r2,-1
   15404:	18000426 	beq	r3,zero,15418 <_lseek_r+0x44>
   15408:	dfc00117 	ldw	ra,4(sp)
   1540c:	dc000017 	ldw	r16,0(sp)
   15410:	dec00204 	addi	sp,sp,8
   15414:	f800283a 	ret
   15418:	00c000b4 	movhi	r3,2
   1541c:	18fa0917 	ldw	r3,-6108(r3)
   15420:	183ff926 	beq	r3,zero,15408 <_lseek_r+0x34>
   15424:	80c00015 	stw	r3,0(r16)
   15428:	dfc00117 	ldw	ra,4(sp)
   1542c:	dc000017 	ldw	r16,0(sp)
   15430:	dec00204 	addi	sp,sp,8
   15434:	f800283a 	ret

00015438 <_mbtowc_r>:
   15438:	008000b4 	movhi	r2,2
   1543c:	10ae0117 	ldw	r2,-18428(r2)
   15440:	1000683a 	jmp	r2

00015444 <__ascii_mbtowc>:
   15444:	deffff04 	addi	sp,sp,-4
   15448:	28000826 	beq	r5,zero,1546c <__ascii_mbtowc+0x28>
   1544c:	30000926 	beq	r6,zero,15474 <__ascii_mbtowc+0x30>
   15450:	38000b26 	beq	r7,zero,15480 <__ascii_mbtowc+0x3c>
   15454:	30800003 	ldbu	r2,0(r6)
   15458:	28800015 	stw	r2,0(r5)
   1545c:	30800003 	ldbu	r2,0(r6)
   15460:	1004c03a 	cmpne	r2,r2,zero
   15464:	dec00104 	addi	sp,sp,4
   15468:	f800283a 	ret
   1546c:	d80b883a 	mov	r5,sp
   15470:	303ff71e 	bne	r6,zero,15450 <__ascii_mbtowc+0xc>
   15474:	0005883a 	mov	r2,zero
   15478:	dec00104 	addi	sp,sp,4
   1547c:	f800283a 	ret
   15480:	00bfff84 	movi	r2,-2
   15484:	003ff706 	br	15464 <__ascii_mbtowc+0x20>

00015488 <memmove>:
   15488:	2005883a 	mov	r2,r4
   1548c:	29000a2e 	bgeu	r5,r4,154b8 <memmove+0x30>
   15490:	2989883a 	add	r4,r5,r6
   15494:	1100082e 	bgeu	r2,r4,154b8 <memmove+0x30>
   15498:	1187883a 	add	r3,r2,r6
   1549c:	30003e26 	beq	r6,zero,15598 <memmove+0x110>
   154a0:	217fffc3 	ldbu	r5,-1(r4)
   154a4:	18ffffc4 	addi	r3,r3,-1
   154a8:	213fffc4 	addi	r4,r4,-1
   154ac:	19400005 	stb	r5,0(r3)
   154b0:	10fffb1e 	bne	r2,r3,154a0 <memmove+0x18>
   154b4:	f800283a 	ret
   154b8:	30c00430 	cmpltui	r3,r6,16
   154bc:	18000b26 	beq	r3,zero,154ec <memmove+0x64>
   154c0:	1007883a 	mov	r3,r2
   154c4:	31ffffc4 	addi	r7,r6,-1
   154c8:	30003726 	beq	r6,zero,155a8 <memmove+0x120>
   154cc:	39c00044 	addi	r7,r7,1
   154d0:	29cf883a 	add	r7,r5,r7
   154d4:	29800003 	ldbu	r6,0(r5)
   154d8:	29400044 	addi	r5,r5,1
   154dc:	18c00044 	addi	r3,r3,1
   154e0:	19bfffc5 	stb	r6,-1(r3)
   154e4:	29fffb1e 	bne	r5,r7,154d4 <memmove+0x4c>
   154e8:	f800283a 	ret
   154ec:	2886b03a 	or	r3,r5,r2
   154f0:	18c000cc 	andi	r3,r3,3
   154f4:	1800291e 	bne	r3,zero,1559c <memmove+0x114>
   154f8:	327ffc04 	addi	r9,r6,-16
   154fc:	4812d13a 	srli	r9,r9,4
   15500:	280f883a 	mov	r7,r5
   15504:	1007883a 	mov	r3,r2
   15508:	4a400044 	addi	r9,r9,1
   1550c:	4812913a 	slli	r9,r9,4
   15510:	1251883a 	add	r8,r2,r9
   15514:	39000017 	ldw	r4,0(r7)
   15518:	39c00404 	addi	r7,r7,16
   1551c:	18c00404 	addi	r3,r3,16
   15520:	193ffc15 	stw	r4,-16(r3)
   15524:	393ffd17 	ldw	r4,-12(r7)
   15528:	193ffd15 	stw	r4,-12(r3)
   1552c:	393ffe17 	ldw	r4,-8(r7)
   15530:	193ffe15 	stw	r4,-8(r3)
   15534:	393fff17 	ldw	r4,-4(r7)
   15538:	193fff15 	stw	r4,-4(r3)
   1553c:	40fff51e 	bne	r8,r3,15514 <memmove+0x8c>
   15540:	3100030c 	andi	r4,r6,12
   15544:	2a4b883a 	add	r5,r5,r9
   15548:	320003cc 	andi	r8,r6,15
   1554c:	20001726 	beq	r4,zero,155ac <memmove+0x124>
   15550:	2813883a 	mov	r9,r5
   15554:	180f883a 	mov	r7,r3
   15558:	4a800017 	ldw	r10,0(r9)
   1555c:	39c00104 	addi	r7,r7,4
   15560:	41c9c83a 	sub	r4,r8,r7
   15564:	1909883a 	add	r4,r3,r4
   15568:	21000128 	cmpgeui	r4,r4,4
   1556c:	3abfff15 	stw	r10,-4(r7)
   15570:	4a400104 	addi	r9,r9,4
   15574:	203ff81e 	bne	r4,zero,15558 <memmove+0xd0>
   15578:	413fff04 	addi	r4,r8,-4
   1557c:	2008d0ba 	srli	r4,r4,2
   15580:	318000cc 	andi	r6,r6,3
   15584:	21000044 	addi	r4,r4,1
   15588:	200890ba 	slli	r4,r4,2
   1558c:	1907883a 	add	r3,r3,r4
   15590:	290b883a 	add	r5,r5,r4
   15594:	003fcb06 	br	154c4 <memmove+0x3c>
   15598:	f800283a 	ret
   1559c:	31ffffc4 	addi	r7,r6,-1
   155a0:	1007883a 	mov	r3,r2
   155a4:	003fc906 	br	154cc <memmove+0x44>
   155a8:	f800283a 	ret
   155ac:	400d883a 	mov	r6,r8
   155b0:	003fc406 	br	154c4 <memmove+0x3c>

000155b4 <_read_r>:
   155b4:	2807883a 	mov	r3,r5
   155b8:	defffe04 	addi	sp,sp,-8
   155bc:	dc000015 	stw	r16,0(sp)
   155c0:	300b883a 	mov	r5,r6
   155c4:	008000b4 	movhi	r2,2
   155c8:	380d883a 	mov	r6,r7
   155cc:	2021883a 	mov	r16,r4
   155d0:	1809883a 	mov	r4,r3
   155d4:	dfc00115 	stw	ra,4(sp)
   155d8:	103a0915 	stw	zero,-6108(r2)
   155dc:	00178d80 	call	178d8 <read>
   155e0:	10ffffd8 	cmpnei	r3,r2,-1
   155e4:	18000426 	beq	r3,zero,155f8 <_read_r+0x44>
   155e8:	dfc00117 	ldw	ra,4(sp)
   155ec:	dc000017 	ldw	r16,0(sp)
   155f0:	dec00204 	addi	sp,sp,8
   155f4:	f800283a 	ret
   155f8:	00c000b4 	movhi	r3,2
   155fc:	18fa0917 	ldw	r3,-6108(r3)
   15600:	183ff926 	beq	r3,zero,155e8 <_read_r+0x34>
   15604:	80c00015 	stw	r3,0(r16)
   15608:	dfc00117 	ldw	ra,4(sp)
   1560c:	dc000017 	ldw	r16,0(sp)
   15610:	dec00204 	addi	sp,sp,8
   15614:	f800283a 	ret

00015618 <_realloc_r>:
   15618:	defff604 	addi	sp,sp,-40
   1561c:	dc800215 	stw	r18,8(sp)
   15620:	dfc00915 	stw	ra,36(sp)
   15624:	df000815 	stw	fp,32(sp)
   15628:	ddc00715 	stw	r23,28(sp)
   1562c:	dd800615 	stw	r22,24(sp)
   15630:	dd400515 	stw	r21,20(sp)
   15634:	dd000415 	stw	r20,16(sp)
   15638:	dcc00315 	stw	r19,12(sp)
   1563c:	dc400115 	stw	r17,4(sp)
   15640:	dc000015 	stw	r16,0(sp)
   15644:	3025883a 	mov	r18,r6
   15648:	28008b26 	beq	r5,zero,15878 <_realloc_r+0x260>
   1564c:	2821883a 	mov	r16,r5
   15650:	2027883a 	mov	r19,r4
   15654:	944002c4 	addi	r17,r18,11
   15658:	00175f80 	call	175f8 <__malloc_lock>
   1565c:	888005f0 	cmpltui	r2,r17,23
   15660:	1000521e 	bne	r2,zero,157ac <_realloc_r+0x194>
   15664:	017ffe04 	movi	r5,-8
   15668:	8962703a 	and	r17,r17,r5
   1566c:	8807883a 	mov	r3,r17
   15670:	88005116 	blt	r17,zero,157b8 <_realloc_r+0x1a0>
   15674:	8c805036 	bltu	r17,r18,157b8 <_realloc_r+0x1a0>
   15678:	80bfff17 	ldw	r2,-4(r16)
   1567c:	017fff04 	movi	r5,-4
   15680:	857ffe04 	addi	r21,r16,-8
   15684:	1168703a 	and	r20,r2,r5
   15688:	a0c0390e 	bge	r20,r3,15770 <_realloc_r+0x158>
   1568c:	05c000b4 	movhi	r23,2
   15690:	bdecc604 	addi	r23,r23,-19688
   15694:	ba000217 	ldw	r8,8(r23)
   15698:	ad0f883a 	add	r7,r21,r20
   1569c:	39000117 	ldw	r4,4(r7)
   156a0:	41c08e26 	beq	r8,r7,158dc <_realloc_r+0x2c4>
   156a4:	01bfff84 	movi	r6,-2
   156a8:	218c703a 	and	r6,r4,r6
   156ac:	398d883a 	add	r6,r7,r6
   156b0:	31800117 	ldw	r6,4(r6)
   156b4:	3180004c 	andi	r6,r6,1
   156b8:	30004f1e 	bne	r6,zero,157f8 <_realloc_r+0x1e0>
   156bc:	2148703a 	and	r4,r4,r5
   156c0:	a10b883a 	add	r5,r20,r4
   156c4:	28c0bb0e 	bge	r5,r3,159b4 <_realloc_r+0x39c>
   156c8:	1080004c 	andi	r2,r2,1
   156cc:	10004c1e 	bne	r2,zero,15800 <_realloc_r+0x1e8>
   156d0:	873ffe17 	ldw	fp,-8(r16)
   156d4:	00bfff04 	movi	r2,-4
   156d8:	af39c83a 	sub	fp,r21,fp
   156dc:	e1400117 	ldw	r5,4(fp)
   156e0:	288a703a 	and	r5,r5,r2
   156e4:	38000426 	beq	r7,zero,156f8 <_realloc_r+0xe0>
   156e8:	a16d883a 	add	r22,r20,r5
   156ec:	b12d883a 	add	r22,r22,r4
   156f0:	41c0ba26 	beq	r8,r7,159dc <_realloc_r+0x3c4>
   156f4:	b0c0930e 	bge	r22,r3,15944 <_realloc_r+0x32c>
   156f8:	e0004126 	beq	fp,zero,15800 <_realloc_r+0x1e8>
   156fc:	a16d883a 	add	r22,r20,r5
   15700:	b0c03f16 	blt	r22,r3,15800 <_realloc_r+0x1e8>
   15704:	e0800317 	ldw	r2,12(fp)
   15708:	e0c00217 	ldw	r3,8(fp)
   1570c:	a1bfff04 	addi	r6,r20,-4
   15710:	31400968 	cmpgeui	r5,r6,37
   15714:	18800315 	stw	r2,12(r3)
   15718:	10c00215 	stw	r3,8(r2)
   1571c:	e1000204 	addi	r4,fp,8
   15720:	2800941e 	bne	r5,zero,15974 <_realloc_r+0x35c>
   15724:	30800530 	cmpltui	r2,r6,20
   15728:	1000db1e 	bne	r2,zero,15a98 <_realloc_r+0x480>
   1572c:	80c00017 	ldw	r3,0(r16)
   15730:	30800728 	cmpgeui	r2,r6,28
   15734:	e0c00215 	stw	r3,8(fp)
   15738:	80c00117 	ldw	r3,4(r16)
   1573c:	e0c00315 	stw	r3,12(fp)
   15740:	1000d71e 	bne	r2,zero,15aa0 <_realloc_r+0x488>
   15744:	84000204 	addi	r16,r16,8
   15748:	e0800404 	addi	r2,fp,16
   1574c:	80c00017 	ldw	r3,0(r16)
   15750:	b029883a 	mov	r20,r22
   15754:	e02b883a 	mov	r21,fp
   15758:	10c00015 	stw	r3,0(r2)
   1575c:	80c00117 	ldw	r3,4(r16)
   15760:	10c00115 	stw	r3,4(r2)
   15764:	80c00217 	ldw	r3,8(r16)
   15768:	2021883a 	mov	r16,r4
   1576c:	10c00215 	stw	r3,8(r2)
   15770:	a9800117 	ldw	r6,4(r21)
   15774:	a447c83a 	sub	r3,r20,r17
   15778:	19000430 	cmpltui	r4,r3,16
   1577c:	3180004c 	andi	r6,r6,1
   15780:	ad05883a 	add	r2,r21,r20
   15784:	20004926 	beq	r4,zero,158ac <_realloc_r+0x294>
   15788:	a18cb03a 	or	r6,r20,r6
   1578c:	a9800115 	stw	r6,4(r21)
   15790:	10c00117 	ldw	r3,4(r2)
   15794:	18c00054 	ori	r3,r3,1
   15798:	10c00115 	stw	r3,4(r2)
   1579c:	9809883a 	mov	r4,r19
   157a0:	001761c0 	call	1761c <__malloc_unlock>
   157a4:	8025883a 	mov	r18,r16
   157a8:	00000606 	br	157c4 <_realloc_r+0x1ac>
   157ac:	04400404 	movi	r17,16
   157b0:	00c00404 	movi	r3,16
   157b4:	8cbfb02e 	bgeu	r17,r18,15678 <_realloc_r+0x60>
   157b8:	00800304 	movi	r2,12
   157bc:	98800015 	stw	r2,0(r19)
   157c0:	0025883a 	mov	r18,zero
   157c4:	9005883a 	mov	r2,r18
   157c8:	dfc00917 	ldw	ra,36(sp)
   157cc:	df000817 	ldw	fp,32(sp)
   157d0:	ddc00717 	ldw	r23,28(sp)
   157d4:	dd800617 	ldw	r22,24(sp)
   157d8:	dd400517 	ldw	r21,20(sp)
   157dc:	dd000417 	ldw	r20,16(sp)
   157e0:	dcc00317 	ldw	r19,12(sp)
   157e4:	dc800217 	ldw	r18,8(sp)
   157e8:	dc400117 	ldw	r17,4(sp)
   157ec:	dc000017 	ldw	r16,0(sp)
   157f0:	dec00a04 	addi	sp,sp,40
   157f4:	f800283a 	ret
   157f8:	1080004c 	andi	r2,r2,1
   157fc:	10006826 	beq	r2,zero,159a0 <_realloc_r+0x388>
   15800:	900b883a 	mov	r5,r18
   15804:	9809883a 	mov	r4,r19
   15808:	000c6400 	call	c640 <_malloc_r>
   1580c:	1025883a 	mov	r18,r2
   15810:	10001626 	beq	r2,zero,1586c <_realloc_r+0x254>
   15814:	80bfff17 	ldw	r2,-4(r16)
   15818:	013fff84 	movi	r4,-2
   1581c:	90fffe04 	addi	r3,r18,-8
   15820:	1104703a 	and	r2,r2,r4
   15824:	a885883a 	add	r2,r21,r2
   15828:	10c05826 	beq	r2,r3,1598c <_realloc_r+0x374>
   1582c:	a1bfff04 	addi	r6,r20,-4
   15830:	30800968 	cmpgeui	r2,r6,37
   15834:	1000651e 	bne	r2,zero,159cc <_realloc_r+0x3b4>
   15838:	30800530 	cmpltui	r2,r6,20
   1583c:	10003826 	beq	r2,zero,15920 <_realloc_r+0x308>
   15840:	9005883a 	mov	r2,r18
   15844:	8007883a 	mov	r3,r16
   15848:	19000017 	ldw	r4,0(r3)
   1584c:	11000015 	stw	r4,0(r2)
   15850:	19000117 	ldw	r4,4(r3)
   15854:	11000115 	stw	r4,4(r2)
   15858:	18c00217 	ldw	r3,8(r3)
   1585c:	10c00215 	stw	r3,8(r2)
   15860:	800b883a 	mov	r5,r16
   15864:	9809883a 	mov	r4,r19
   15868:	00113940 	call	11394 <_free_r>
   1586c:	9809883a 	mov	r4,r19
   15870:	001761c0 	call	1761c <__malloc_unlock>
   15874:	003fd306 	br	157c4 <_realloc_r+0x1ac>
   15878:	300b883a 	mov	r5,r6
   1587c:	dfc00917 	ldw	ra,36(sp)
   15880:	df000817 	ldw	fp,32(sp)
   15884:	ddc00717 	ldw	r23,28(sp)
   15888:	dd800617 	ldw	r22,24(sp)
   1588c:	dd400517 	ldw	r21,20(sp)
   15890:	dd000417 	ldw	r20,16(sp)
   15894:	dcc00317 	ldw	r19,12(sp)
   15898:	dc800217 	ldw	r18,8(sp)
   1589c:	dc400117 	ldw	r17,4(sp)
   158a0:	dc000017 	ldw	r16,0(sp)
   158a4:	dec00a04 	addi	sp,sp,40
   158a8:	000c6401 	jmpi	c640 <_malloc_r>
   158ac:	344cb03a 	or	r6,r6,r17
   158b0:	a9800115 	stw	r6,4(r21)
   158b4:	ac4b883a 	add	r5,r21,r17
   158b8:	18c00054 	ori	r3,r3,1
   158bc:	28c00115 	stw	r3,4(r5)
   158c0:	10c00117 	ldw	r3,4(r2)
   158c4:	29400204 	addi	r5,r5,8
   158c8:	9809883a 	mov	r4,r19
   158cc:	18c00054 	ori	r3,r3,1
   158d0:	10c00115 	stw	r3,4(r2)
   158d4:	00113940 	call	11394 <_free_r>
   158d8:	003fb006 	br	1579c <_realloc_r+0x184>
   158dc:	2148703a 	and	r4,r4,r5
   158e0:	a10b883a 	add	r5,r20,r4
   158e4:	89800404 	addi	r6,r17,16
   158e8:	29bf7716 	blt	r5,r6,156c8 <_realloc_r+0xb0>
   158ec:	ac6b883a 	add	r21,r21,r17
   158f0:	2c45c83a 	sub	r2,r5,r17
   158f4:	bd400215 	stw	r21,8(r23)
   158f8:	10800054 	ori	r2,r2,1
   158fc:	a8800115 	stw	r2,4(r21)
   15900:	80bfff17 	ldw	r2,-4(r16)
   15904:	9809883a 	mov	r4,r19
   15908:	8025883a 	mov	r18,r16
   1590c:	1080004c 	andi	r2,r2,1
   15910:	1462b03a 	or	r17,r2,r17
   15914:	847fff15 	stw	r17,-4(r16)
   15918:	001761c0 	call	1761c <__malloc_unlock>
   1591c:	003fa906 	br	157c4 <_realloc_r+0x1ac>
   15920:	80c00017 	ldw	r3,0(r16)
   15924:	30800728 	cmpgeui	r2,r6,28
   15928:	90c00015 	stw	r3,0(r18)
   1592c:	80c00117 	ldw	r3,4(r16)
   15930:	90c00115 	stw	r3,4(r18)
   15934:	10004f1e 	bne	r2,zero,15a74 <_realloc_r+0x45c>
   15938:	80c00204 	addi	r3,r16,8
   1593c:	90800204 	addi	r2,r18,8
   15940:	003fc106 	br	15848 <_realloc_r+0x230>
   15944:	38800317 	ldw	r2,12(r7)
   15948:	38c00217 	ldw	r3,8(r7)
   1594c:	a1bfff04 	addi	r6,r20,-4
   15950:	31400968 	cmpgeui	r5,r6,37
   15954:	18800315 	stw	r2,12(r3)
   15958:	10c00215 	stw	r3,8(r2)
   1595c:	e0c00217 	ldw	r3,8(fp)
   15960:	e0800317 	ldw	r2,12(fp)
   15964:	e1000204 	addi	r4,fp,8
   15968:	18800315 	stw	r2,12(r3)
   1596c:	10c00215 	stw	r3,8(r2)
   15970:	283f6c26 	beq	r5,zero,15724 <_realloc_r+0x10c>
   15974:	800b883a 	mov	r5,r16
   15978:	00154880 	call	15488 <memmove>
   1597c:	1021883a 	mov	r16,r2
   15980:	b029883a 	mov	r20,r22
   15984:	e02b883a 	mov	r21,fp
   15988:	003f7906 	br	15770 <_realloc_r+0x158>
   1598c:	90bfff17 	ldw	r2,-4(r18)
   15990:	00ffff04 	movi	r3,-4
   15994:	10c4703a 	and	r2,r2,r3
   15998:	a0a9883a 	add	r20,r20,r2
   1599c:	003f7406 	br	15770 <_realloc_r+0x158>
   159a0:	873ffe17 	ldw	fp,-8(r16)
   159a4:	af39c83a 	sub	fp,r21,fp
   159a8:	e0800117 	ldw	r2,4(fp)
   159ac:	114a703a 	and	r5,r2,r5
   159b0:	003f5106 	br	156f8 <_realloc_r+0xe0>
   159b4:	38800317 	ldw	r2,12(r7)
   159b8:	38c00217 	ldw	r3,8(r7)
   159bc:	2829883a 	mov	r20,r5
   159c0:	18800315 	stw	r2,12(r3)
   159c4:	10c00215 	stw	r3,8(r2)
   159c8:	003f6906 	br	15770 <_realloc_r+0x158>
   159cc:	800b883a 	mov	r5,r16
   159d0:	9009883a 	mov	r4,r18
   159d4:	00154880 	call	15488 <memmove>
   159d8:	003fa106 	br	15860 <_realloc_r+0x248>
   159dc:	88800404 	addi	r2,r17,16
   159e0:	b0bf4516 	blt	r22,r2,156f8 <_realloc_r+0xe0>
   159e4:	e0800317 	ldw	r2,12(fp)
   159e8:	e0c00217 	ldw	r3,8(fp)
   159ec:	a1bfff04 	addi	r6,r20,-4
   159f0:	31000968 	cmpgeui	r4,r6,37
   159f4:	18800315 	stw	r2,12(r3)
   159f8:	10c00215 	stw	r3,8(r2)
   159fc:	e4800204 	addi	r18,fp,8
   15a00:	2000391e 	bne	r4,zero,15ae8 <_realloc_r+0x4d0>
   15a04:	30800530 	cmpltui	r2,r6,20
   15a08:	1000351e 	bne	r2,zero,15ae0 <_realloc_r+0x4c8>
   15a0c:	80c00017 	ldw	r3,0(r16)
   15a10:	30800728 	cmpgeui	r2,r6,28
   15a14:	e0c00215 	stw	r3,8(fp)
   15a18:	80c00117 	ldw	r3,4(r16)
   15a1c:	e0c00315 	stw	r3,12(fp)
   15a20:	10003c1e 	bne	r2,zero,15b14 <_realloc_r+0x4fc>
   15a24:	84000204 	addi	r16,r16,8
   15a28:	e0800404 	addi	r2,fp,16
   15a2c:	80c00017 	ldw	r3,0(r16)
   15a30:	10c00015 	stw	r3,0(r2)
   15a34:	80c00117 	ldw	r3,4(r16)
   15a38:	10c00115 	stw	r3,4(r2)
   15a3c:	80c00217 	ldw	r3,8(r16)
   15a40:	10c00215 	stw	r3,8(r2)
   15a44:	e447883a 	add	r3,fp,r17
   15a48:	b445c83a 	sub	r2,r22,r17
   15a4c:	b8c00215 	stw	r3,8(r23)
   15a50:	10800054 	ori	r2,r2,1
   15a54:	18800115 	stw	r2,4(r3)
   15a58:	e0800117 	ldw	r2,4(fp)
   15a5c:	9809883a 	mov	r4,r19
   15a60:	1080004c 	andi	r2,r2,1
   15a64:	1462b03a 	or	r17,r2,r17
   15a68:	e4400115 	stw	r17,4(fp)
   15a6c:	001761c0 	call	1761c <__malloc_unlock>
   15a70:	003f5406 	br	157c4 <_realloc_r+0x1ac>
   15a74:	80800217 	ldw	r2,8(r16)
   15a78:	31800920 	cmpeqi	r6,r6,36
   15a7c:	90800215 	stw	r2,8(r18)
   15a80:	80800317 	ldw	r2,12(r16)
   15a84:	90800315 	stw	r2,12(r18)
   15a88:	30000e1e 	bne	r6,zero,15ac4 <_realloc_r+0x4ac>
   15a8c:	80c00404 	addi	r3,r16,16
   15a90:	90800404 	addi	r2,r18,16
   15a94:	003f6c06 	br	15848 <_realloc_r+0x230>
   15a98:	2005883a 	mov	r2,r4
   15a9c:	003f2b06 	br	1574c <_realloc_r+0x134>
   15aa0:	80800217 	ldw	r2,8(r16)
   15aa4:	31800920 	cmpeqi	r6,r6,36
   15aa8:	e0800415 	stw	r2,16(fp)
   15aac:	80800317 	ldw	r2,12(r16)
   15ab0:	e0800515 	stw	r2,20(fp)
   15ab4:	3000101e 	bne	r6,zero,15af8 <_realloc_r+0x4e0>
   15ab8:	84000404 	addi	r16,r16,16
   15abc:	e0800604 	addi	r2,fp,24
   15ac0:	003f2206 	br	1574c <_realloc_r+0x134>
   15ac4:	81000417 	ldw	r4,16(r16)
   15ac8:	80c00604 	addi	r3,r16,24
   15acc:	90800604 	addi	r2,r18,24
   15ad0:	91000415 	stw	r4,16(r18)
   15ad4:	81000517 	ldw	r4,20(r16)
   15ad8:	91000515 	stw	r4,20(r18)
   15adc:	003f5a06 	br	15848 <_realloc_r+0x230>
   15ae0:	9005883a 	mov	r2,r18
   15ae4:	003fd106 	br	15a2c <_realloc_r+0x414>
   15ae8:	800b883a 	mov	r5,r16
   15aec:	9009883a 	mov	r4,r18
   15af0:	00154880 	call	15488 <memmove>
   15af4:	003fd306 	br	15a44 <_realloc_r+0x42c>
   15af8:	80c00417 	ldw	r3,16(r16)
   15afc:	84000604 	addi	r16,r16,24
   15b00:	e0800804 	addi	r2,fp,32
   15b04:	e0c00615 	stw	r3,24(fp)
   15b08:	80ffff17 	ldw	r3,-4(r16)
   15b0c:	e0c00715 	stw	r3,28(fp)
   15b10:	003f0e06 	br	1574c <_realloc_r+0x134>
   15b14:	80800217 	ldw	r2,8(r16)
   15b18:	31800920 	cmpeqi	r6,r6,36
   15b1c:	e0800415 	stw	r2,16(fp)
   15b20:	80800317 	ldw	r2,12(r16)
   15b24:	e0800515 	stw	r2,20(fp)
   15b28:	3000031e 	bne	r6,zero,15b38 <_realloc_r+0x520>
   15b2c:	84000404 	addi	r16,r16,16
   15b30:	e0800604 	addi	r2,fp,24
   15b34:	003fbd06 	br	15a2c <_realloc_r+0x414>
   15b38:	80c00417 	ldw	r3,16(r16)
   15b3c:	84000604 	addi	r16,r16,24
   15b40:	e0800804 	addi	r2,fp,32
   15b44:	e0c00615 	stw	r3,24(fp)
   15b48:	80ffff17 	ldw	r3,-4(r16)
   15b4c:	e0c00715 	stw	r3,28(fp)
   15b50:	003fb606 	br	15a2c <_realloc_r+0x414>

00015b54 <strcmp>:
   15b54:	2144b03a 	or	r2,r4,r5
   15b58:	108000cc 	andi	r2,r2,3
   15b5c:	1000141e 	bne	r2,zero,15bb0 <strcmp+0x5c>
   15b60:	20800017 	ldw	r2,0(r4)
   15b64:	28c00017 	ldw	r3,0(r5)
   15b68:	10c0111e 	bne	r2,r3,15bb0 <strcmp+0x5c>
   15b6c:	01ffbff4 	movhi	r7,65279
   15b70:	01a02074 	movhi	r6,32897
   15b74:	39ffbfc4 	addi	r7,r7,-257
   15b78:	31a02004 	addi	r6,r6,-32640
   15b7c:	00000306 	br	15b8c <strcmp+0x38>
   15b80:	20800017 	ldw	r2,0(r4)
   15b84:	28c00017 	ldw	r3,0(r5)
   15b88:	10c0091e 	bne	r2,r3,15bb0 <strcmp+0x5c>
   15b8c:	11c7883a 	add	r3,r2,r7
   15b90:	0084303a 	nor	r2,zero,r2
   15b94:	1884703a 	and	r2,r3,r2
   15b98:	1184703a 	and	r2,r2,r6
   15b9c:	21000104 	addi	r4,r4,4
   15ba0:	29400104 	addi	r5,r5,4
   15ba4:	103ff626 	beq	r2,zero,15b80 <strcmp+0x2c>
   15ba8:	0005883a 	mov	r2,zero
   15bac:	f800283a 	ret
   15bb0:	20c00003 	ldbu	r3,0(r4)
   15bb4:	18803fcc 	andi	r2,r3,255
   15bb8:	1080201c 	xori	r2,r2,128
   15bbc:	10bfe004 	addi	r2,r2,-128
   15bc0:	1000071e 	bne	r2,zero,15be0 <strcmp+0x8c>
   15bc4:	00000a06 	br	15bf0 <strcmp+0x9c>
   15bc8:	20c00003 	ldbu	r3,0(r4)
   15bcc:	29400044 	addi	r5,r5,1
   15bd0:	18803fcc 	andi	r2,r3,255
   15bd4:	1080201c 	xori	r2,r2,128
   15bd8:	10bfe004 	addi	r2,r2,-128
   15bdc:	10000726 	beq	r2,zero,15bfc <strcmp+0xa8>
   15be0:	29800007 	ldb	r6,0(r5)
   15be4:	21000044 	addi	r4,r4,1
   15be8:	30bff726 	beq	r6,r2,15bc8 <strcmp+0x74>
   15bec:	18803fcc 	andi	r2,r3,255
   15bf0:	28c00003 	ldbu	r3,0(r5)
   15bf4:	10c5c83a 	sub	r2,r2,r3
   15bf8:	f800283a 	ret
   15bfc:	28c00003 	ldbu	r3,0(r5)
   15c00:	0005883a 	mov	r2,zero
   15c04:	10c5c83a 	sub	r2,r2,r3
   15c08:	f800283a 	ret

00015c0c <_vfiprintf_r>:
   15c0c:	00132781 	jmpi	13278 <___vfiprintf_internal_r>

00015c10 <_wcrtomb_r>:
   15c10:	defffa04 	addi	sp,sp,-24
   15c14:	dc400415 	stw	r17,16(sp)
   15c18:	dc000315 	stw	r16,12(sp)
   15c1c:	008000b4 	movhi	r2,2
   15c20:	dfc00515 	stw	ra,20(sp)
   15c24:	10ae0017 	ldw	r2,-18432(r2)
   15c28:	2023883a 	mov	r17,r4
   15c2c:	3821883a 	mov	r16,r7
   15c30:	28000826 	beq	r5,zero,15c54 <_wcrtomb_r+0x44>
   15c34:	103ee83a 	callr	r2
   15c38:	10ffffd8 	cmpnei	r3,r2,-1
   15c3c:	18000a26 	beq	r3,zero,15c68 <_wcrtomb_r+0x58>
   15c40:	dfc00517 	ldw	ra,20(sp)
   15c44:	dc400417 	ldw	r17,16(sp)
   15c48:	dc000317 	ldw	r16,12(sp)
   15c4c:	dec00604 	addi	sp,sp,24
   15c50:	f800283a 	ret
   15c54:	000d883a 	mov	r6,zero
   15c58:	d9400084 	addi	r5,sp,2
   15c5c:	103ee83a 	callr	r2
   15c60:	10ffffd8 	cmpnei	r3,r2,-1
   15c64:	183ff61e 	bne	r3,zero,15c40 <_wcrtomb_r+0x30>
   15c68:	00802284 	movi	r2,138
   15c6c:	80000015 	stw	zero,0(r16)
   15c70:	88800015 	stw	r2,0(r17)
   15c74:	00bfffc4 	movi	r2,-1
   15c78:	003ff106 	br	15c40 <_wcrtomb_r+0x30>

00015c7c <wcrtomb>:
   15c7c:	defffa04 	addi	sp,sp,-24
   15c80:	00c000b4 	movhi	r3,2
   15c84:	dc400415 	stw	r17,16(sp)
   15c88:	dc000315 	stw	r16,12(sp)
   15c8c:	1c72d417 	ldw	r17,-13488(r3)
   15c90:	dfc00515 	stw	ra,20(sp)
   15c94:	00c000b4 	movhi	r3,2
   15c98:	18ee0017 	ldw	r3,-18432(r3)
   15c9c:	3021883a 	mov	r16,r6
   15ca0:	20000c26 	beq	r4,zero,15cd4 <wcrtomb+0x58>
   15ca4:	280d883a 	mov	r6,r5
   15ca8:	800f883a 	mov	r7,r16
   15cac:	200b883a 	mov	r5,r4
   15cb0:	8809883a 	mov	r4,r17
   15cb4:	183ee83a 	callr	r3
   15cb8:	10ffffd8 	cmpnei	r3,r2,-1
   15cbc:	18000c26 	beq	r3,zero,15cf0 <wcrtomb+0x74>
   15cc0:	dfc00517 	ldw	ra,20(sp)
   15cc4:	dc400417 	ldw	r17,16(sp)
   15cc8:	dc000317 	ldw	r16,12(sp)
   15ccc:	dec00604 	addi	sp,sp,24
   15cd0:	f800283a 	ret
   15cd4:	300f883a 	mov	r7,r6
   15cd8:	d9400084 	addi	r5,sp,2
   15cdc:	000d883a 	mov	r6,zero
   15ce0:	8809883a 	mov	r4,r17
   15ce4:	183ee83a 	callr	r3
   15ce8:	10ffffd8 	cmpnei	r3,r2,-1
   15cec:	183ff41e 	bne	r3,zero,15cc0 <wcrtomb+0x44>
   15cf0:	00802284 	movi	r2,138
   15cf4:	80000015 	stw	zero,0(r16)
   15cf8:	88800015 	stw	r2,0(r17)
   15cfc:	00bfffc4 	movi	r2,-1
   15d00:	003fef06 	br	15cc0 <wcrtomb+0x44>

00015d04 <_wctomb_r>:
   15d04:	008000b4 	movhi	r2,2
   15d08:	10ae0017 	ldw	r2,-18432(r2)
   15d0c:	1000683a 	jmp	r2

00015d10 <__ascii_wctomb>:
   15d10:	28000926 	beq	r5,zero,15d38 <__ascii_wctomb+0x28>
   15d14:	30804030 	cmpltui	r2,r6,256
   15d18:	10000326 	beq	r2,zero,15d28 <__ascii_wctomb+0x18>
   15d1c:	29800005 	stb	r6,0(r5)
   15d20:	00800044 	movi	r2,1
   15d24:	f800283a 	ret
   15d28:	00802284 	movi	r2,138
   15d2c:	20800015 	stw	r2,0(r4)
   15d30:	00bfffc4 	movi	r2,-1
   15d34:	f800283a 	ret
   15d38:	0005883a 	mov	r2,zero
   15d3c:	f800283a 	ret

00015d40 <abort>:
   15d40:	deffff04 	addi	sp,sp,-4
   15d44:	01000184 	movi	r4,6
   15d48:	dfc00015 	stw	ra,0(sp)
   15d4c:	0015fcc0 	call	15fcc <raise>
   15d50:	01000044 	movi	r4,1
   15d54:	0016fd00 	call	16fd0 <_exit>

00015d58 <_init_signal_r>:
   15d58:	2080b717 	ldw	r2,732(r4)
   15d5c:	10000226 	beq	r2,zero,15d68 <_init_signal_r+0x10>
   15d60:	0005883a 	mov	r2,zero
   15d64:	f800283a 	ret
   15d68:	defffe04 	addi	sp,sp,-8
   15d6c:	01402004 	movi	r5,128
   15d70:	dc000015 	stw	r16,0(sp)
   15d74:	dfc00115 	stw	ra,4(sp)
   15d78:	2021883a 	mov	r16,r4
   15d7c:	000c6400 	call	c640 <_malloc_r>
   15d80:	8080b715 	stw	r2,732(r16)
   15d84:	1009883a 	mov	r4,r2
   15d88:	10000826 	beq	r2,zero,15dac <_init_signal_r+0x54>
   15d8c:	01802004 	movi	r6,128
   15d90:	000b883a 	mov	r5,zero
   15d94:	0011b080 	call	11b08 <memset>
   15d98:	0005883a 	mov	r2,zero
   15d9c:	dfc00117 	ldw	ra,4(sp)
   15da0:	dc000017 	ldw	r16,0(sp)
   15da4:	dec00204 	addi	sp,sp,8
   15da8:	f800283a 	ret
   15dac:	00bfffc4 	movi	r2,-1
   15db0:	003ffa06 	br	15d9c <_init_signal_r+0x44>

00015db4 <_signal_r>:
   15db4:	defffc04 	addi	sp,sp,-16
   15db8:	dc400115 	stw	r17,4(sp)
   15dbc:	dfc00315 	stw	ra,12(sp)
   15dc0:	dc800215 	stw	r18,8(sp)
   15dc4:	dc000015 	stw	r16,0(sp)
   15dc8:	28800830 	cmpltui	r2,r5,32
   15dcc:	2023883a 	mov	r17,r4
   15dd0:	10000e26 	beq	r2,zero,15e0c <_signal_r+0x58>
   15dd4:	20c0b717 	ldw	r3,732(r4)
   15dd8:	2821883a 	mov	r16,r5
   15ddc:	3025883a 	mov	r18,r6
   15de0:	18000e26 	beq	r3,zero,15e1c <_signal_r+0x68>
   15de4:	802090ba 	slli	r16,r16,2
   15de8:	1c21883a 	add	r16,r3,r16
   15dec:	80800017 	ldw	r2,0(r16)
   15df0:	84800015 	stw	r18,0(r16)
   15df4:	dfc00317 	ldw	ra,12(sp)
   15df8:	dc800217 	ldw	r18,8(sp)
   15dfc:	dc400117 	ldw	r17,4(sp)
   15e00:	dc000017 	ldw	r16,0(sp)
   15e04:	dec00404 	addi	sp,sp,16
   15e08:	f800283a 	ret
   15e0c:	00800584 	movi	r2,22
   15e10:	20800015 	stw	r2,0(r4)
   15e14:	00bfffc4 	movi	r2,-1
   15e18:	003ff606 	br	15df4 <_signal_r+0x40>
   15e1c:	01402004 	movi	r5,128
   15e20:	000c6400 	call	c640 <_malloc_r>
   15e24:	8880b715 	stw	r2,732(r17)
   15e28:	10000626 	beq	r2,zero,15e44 <_signal_r+0x90>
   15e2c:	01802004 	movi	r6,128
   15e30:	000b883a 	mov	r5,zero
   15e34:	1009883a 	mov	r4,r2
   15e38:	0011b080 	call	11b08 <memset>
   15e3c:	1007883a 	mov	r3,r2
   15e40:	003fe806 	br	15de4 <_signal_r+0x30>
   15e44:	00bfffc4 	movi	r2,-1
   15e48:	003fea06 	br	15df4 <_signal_r+0x40>

00015e4c <_raise_r>:
   15e4c:	28800830 	cmpltui	r2,r5,32
   15e50:	10002b26 	beq	r2,zero,15f00 <_raise_r+0xb4>
   15e54:	2080b717 	ldw	r2,732(r4)
   15e58:	defffd04 	addi	sp,sp,-12
   15e5c:	dc000115 	stw	r16,4(sp)
   15e60:	dfc00215 	stw	ra,8(sp)
   15e64:	2821883a 	mov	r16,r5
   15e68:	10001026 	beq	r2,zero,15eac <_raise_r+0x60>
   15e6c:	280690ba 	slli	r3,r5,2
   15e70:	10c5883a 	add	r2,r2,r3
   15e74:	10c00017 	ldw	r3,0(r2)
   15e78:	18000c26 	beq	r3,zero,15eac <_raise_r+0x60>
   15e7c:	19400060 	cmpeqi	r5,r3,1
   15e80:	28001a1e 	bne	r5,zero,15eec <_raise_r+0xa0>
   15e84:	197fffd8 	cmpnei	r5,r3,-1
   15e88:	28001126 	beq	r5,zero,15ed0 <_raise_r+0x84>
   15e8c:	10000015 	stw	zero,0(r2)
   15e90:	8009883a 	mov	r4,r16
   15e94:	183ee83a 	callr	r3
   15e98:	0005883a 	mov	r2,zero
   15e9c:	dfc00217 	ldw	ra,8(sp)
   15ea0:	dc000117 	ldw	r16,4(sp)
   15ea4:	dec00304 	addi	sp,sp,12
   15ea8:	f800283a 	ret
   15eac:	d9000015 	stw	r4,0(sp)
   15eb0:	00162a40 	call	162a4 <_getpid_r>
   15eb4:	d9000017 	ldw	r4,0(sp)
   15eb8:	800d883a 	mov	r6,r16
   15ebc:	100b883a 	mov	r5,r2
   15ec0:	dfc00217 	ldw	ra,8(sp)
   15ec4:	dc000117 	ldw	r16,4(sp)
   15ec8:	dec00304 	addi	sp,sp,12
   15ecc:	00162441 	jmpi	16244 <_kill_r>
   15ed0:	00800584 	movi	r2,22
   15ed4:	20800015 	stw	r2,0(r4)
   15ed8:	00800044 	movi	r2,1
   15edc:	dfc00217 	ldw	ra,8(sp)
   15ee0:	dc000117 	ldw	r16,4(sp)
   15ee4:	dec00304 	addi	sp,sp,12
   15ee8:	f800283a 	ret
   15eec:	0005883a 	mov	r2,zero
   15ef0:	dfc00217 	ldw	ra,8(sp)
   15ef4:	dc000117 	ldw	r16,4(sp)
   15ef8:	dec00304 	addi	sp,sp,12
   15efc:	f800283a 	ret
   15f00:	00800584 	movi	r2,22
   15f04:	20800015 	stw	r2,0(r4)
   15f08:	00bfffc4 	movi	r2,-1
   15f0c:	f800283a 	ret

00015f10 <__sigtramp_r>:
   15f10:	28800830 	cmpltui	r2,r5,32
   15f14:	10002b26 	beq	r2,zero,15fc4 <__sigtramp_r+0xb4>
   15f18:	20c0b717 	ldw	r3,732(r4)
   15f1c:	defffd04 	addi	sp,sp,-12
   15f20:	dc400115 	stw	r17,4(sp)
   15f24:	dc000015 	stw	r16,0(sp)
   15f28:	dfc00215 	stw	ra,8(sp)
   15f2c:	2821883a 	mov	r16,r5
   15f30:	2023883a 	mov	r17,r4
   15f34:	18001326 	beq	r3,zero,15f84 <__sigtramp_r+0x74>
   15f38:	800490ba 	slli	r2,r16,2
   15f3c:	1887883a 	add	r3,r3,r2
   15f40:	18800017 	ldw	r2,0(r3)
   15f44:	10000d26 	beq	r2,zero,15f7c <__sigtramp_r+0x6c>
   15f48:	113fffe0 	cmpeqi	r4,r2,-1
   15f4c:	2000191e 	bne	r4,zero,15fb4 <__sigtramp_r+0xa4>
   15f50:	11000060 	cmpeqi	r4,r2,1
   15f54:	2000151e 	bne	r4,zero,15fac <__sigtramp_r+0x9c>
   15f58:	18000015 	stw	zero,0(r3)
   15f5c:	8009883a 	mov	r4,r16
   15f60:	103ee83a 	callr	r2
   15f64:	0005883a 	mov	r2,zero
   15f68:	dfc00217 	ldw	ra,8(sp)
   15f6c:	dc400117 	ldw	r17,4(sp)
   15f70:	dc000017 	ldw	r16,0(sp)
   15f74:	dec00304 	addi	sp,sp,12
   15f78:	f800283a 	ret
   15f7c:	00800044 	movi	r2,1
   15f80:	003ff906 	br	15f68 <__sigtramp_r+0x58>
   15f84:	01402004 	movi	r5,128
   15f88:	000c6400 	call	c640 <_malloc_r>
   15f8c:	8880b715 	stw	r2,732(r17)
   15f90:	10000a26 	beq	r2,zero,15fbc <__sigtramp_r+0xac>
   15f94:	01802004 	movi	r6,128
   15f98:	000b883a 	mov	r5,zero
   15f9c:	1009883a 	mov	r4,r2
   15fa0:	0011b080 	call	11b08 <memset>
   15fa4:	1007883a 	mov	r3,r2
   15fa8:	003fe306 	br	15f38 <__sigtramp_r+0x28>
   15fac:	008000c4 	movi	r2,3
   15fb0:	003fed06 	br	15f68 <__sigtramp_r+0x58>
   15fb4:	00800084 	movi	r2,2
   15fb8:	003feb06 	br	15f68 <__sigtramp_r+0x58>
   15fbc:	00bfffc4 	movi	r2,-1
   15fc0:	003fe906 	br	15f68 <__sigtramp_r+0x58>
   15fc4:	00bfffc4 	movi	r2,-1
   15fc8:	f800283a 	ret

00015fcc <raise>:
   15fcc:	defffd04 	addi	sp,sp,-12
   15fd0:	dc400115 	stw	r17,4(sp)
   15fd4:	00c000b4 	movhi	r3,2
   15fd8:	dfc00215 	stw	ra,8(sp)
   15fdc:	dc000015 	stw	r16,0(sp)
   15fe0:	20800830 	cmpltui	r2,r4,32
   15fe4:	1c72d417 	ldw	r17,-13488(r3)
   15fe8:	10002326 	beq	r2,zero,16078 <raise+0xac>
   15fec:	8880b717 	ldw	r2,732(r17)
   15ff0:	2021883a 	mov	r16,r4
   15ff4:	10001026 	beq	r2,zero,16038 <raise+0x6c>
   15ff8:	200690ba 	slli	r3,r4,2
   15ffc:	10c5883a 	add	r2,r2,r3
   16000:	10c00017 	ldw	r3,0(r2)
   16004:	18000c26 	beq	r3,zero,16038 <raise+0x6c>
   16008:	19400060 	cmpeqi	r5,r3,1
   1600c:	2800181e 	bne	r5,zero,16070 <raise+0xa4>
   16010:	197fffd8 	cmpnei	r5,r3,-1
   16014:	28001226 	beq	r5,zero,16060 <raise+0x94>
   16018:	10000015 	stw	zero,0(r2)
   1601c:	183ee83a 	callr	r3
   16020:	0005883a 	mov	r2,zero
   16024:	dfc00217 	ldw	ra,8(sp)
   16028:	dc400117 	ldw	r17,4(sp)
   1602c:	dc000017 	ldw	r16,0(sp)
   16030:	dec00304 	addi	sp,sp,12
   16034:	f800283a 	ret
   16038:	8809883a 	mov	r4,r17
   1603c:	00162a40 	call	162a4 <_getpid_r>
   16040:	800d883a 	mov	r6,r16
   16044:	100b883a 	mov	r5,r2
   16048:	8809883a 	mov	r4,r17
   1604c:	dfc00217 	ldw	ra,8(sp)
   16050:	dc400117 	ldw	r17,4(sp)
   16054:	dc000017 	ldw	r16,0(sp)
   16058:	dec00304 	addi	sp,sp,12
   1605c:	00162441 	jmpi	16244 <_kill_r>
   16060:	00800584 	movi	r2,22
   16064:	88800015 	stw	r2,0(r17)
   16068:	00800044 	movi	r2,1
   1606c:	003fed06 	br	16024 <raise+0x58>
   16070:	0005883a 	mov	r2,zero
   16074:	003feb06 	br	16024 <raise+0x58>
   16078:	00800584 	movi	r2,22
   1607c:	88800015 	stw	r2,0(r17)
   16080:	00bfffc4 	movi	r2,-1
   16084:	003fe706 	br	16024 <raise+0x58>

00016088 <signal>:
   16088:	defffc04 	addi	sp,sp,-16
   1608c:	dc800215 	stw	r18,8(sp)
   16090:	00c000b4 	movhi	r3,2
   16094:	dfc00315 	stw	ra,12(sp)
   16098:	dc400115 	stw	r17,4(sp)
   1609c:	dc000015 	stw	r16,0(sp)
   160a0:	20800830 	cmpltui	r2,r4,32
   160a4:	1cb2d417 	ldw	r18,-13488(r3)
   160a8:	10000e26 	beq	r2,zero,160e4 <signal+0x5c>
   160ac:	2021883a 	mov	r16,r4
   160b0:	9100b717 	ldw	r4,732(r18)
   160b4:	2823883a 	mov	r17,r5
   160b8:	20000e26 	beq	r4,zero,160f4 <signal+0x6c>
   160bc:	802090ba 	slli	r16,r16,2
   160c0:	2421883a 	add	r16,r4,r16
   160c4:	80800017 	ldw	r2,0(r16)
   160c8:	84400015 	stw	r17,0(r16)
   160cc:	dfc00317 	ldw	ra,12(sp)
   160d0:	dc800217 	ldw	r18,8(sp)
   160d4:	dc400117 	ldw	r17,4(sp)
   160d8:	dc000017 	ldw	r16,0(sp)
   160dc:	dec00404 	addi	sp,sp,16
   160e0:	f800283a 	ret
   160e4:	00800584 	movi	r2,22
   160e8:	90800015 	stw	r2,0(r18)
   160ec:	00bfffc4 	movi	r2,-1
   160f0:	003ff606 	br	160cc <signal+0x44>
   160f4:	9009883a 	mov	r4,r18
   160f8:	01402004 	movi	r5,128
   160fc:	000c6400 	call	c640 <_malloc_r>
   16100:	9080b715 	stw	r2,732(r18)
   16104:	1009883a 	mov	r4,r2
   16108:	10000526 	beq	r2,zero,16120 <signal+0x98>
   1610c:	01802004 	movi	r6,128
   16110:	000b883a 	mov	r5,zero
   16114:	0011b080 	call	11b08 <memset>
   16118:	1009883a 	mov	r4,r2
   1611c:	003fe706 	br	160bc <signal+0x34>
   16120:	00bfffc4 	movi	r2,-1
   16124:	003fe906 	br	160cc <signal+0x44>

00016128 <_init_signal>:
   16128:	defffe04 	addi	sp,sp,-8
   1612c:	008000b4 	movhi	r2,2
   16130:	dc000015 	stw	r16,0(sp)
   16134:	1432d417 	ldw	r16,-13488(r2)
   16138:	dfc00115 	stw	ra,4(sp)
   1613c:	8080b717 	ldw	r2,732(r16)
   16140:	10000526 	beq	r2,zero,16158 <_init_signal+0x30>
   16144:	0005883a 	mov	r2,zero
   16148:	dfc00117 	ldw	ra,4(sp)
   1614c:	dc000017 	ldw	r16,0(sp)
   16150:	dec00204 	addi	sp,sp,8
   16154:	f800283a 	ret
   16158:	8009883a 	mov	r4,r16
   1615c:	01402004 	movi	r5,128
   16160:	000c6400 	call	c640 <_malloc_r>
   16164:	8080b715 	stw	r2,732(r16)
   16168:	1009883a 	mov	r4,r2
   1616c:	10000426 	beq	r2,zero,16180 <_init_signal+0x58>
   16170:	01802004 	movi	r6,128
   16174:	000b883a 	mov	r5,zero
   16178:	0011b080 	call	11b08 <memset>
   1617c:	003ff106 	br	16144 <_init_signal+0x1c>
   16180:	00bfffc4 	movi	r2,-1
   16184:	003ff006 	br	16148 <_init_signal+0x20>

00016188 <__sigtramp>:
   16188:	defffd04 	addi	sp,sp,-12
   1618c:	dc400115 	stw	r17,4(sp)
   16190:	00c000b4 	movhi	r3,2
   16194:	dfc00215 	stw	ra,8(sp)
   16198:	dc000015 	stw	r16,0(sp)
   1619c:	20800830 	cmpltui	r2,r4,32
   161a0:	1c72d417 	ldw	r17,-13488(r3)
   161a4:	10002526 	beq	r2,zero,1623c <__sigtramp+0xb4>
   161a8:	88c0b717 	ldw	r3,732(r17)
   161ac:	2021883a 	mov	r16,r4
   161b0:	18001326 	beq	r3,zero,16200 <__sigtramp+0x78>
   161b4:	800890ba 	slli	r4,r16,2
   161b8:	1907883a 	add	r3,r3,r4
   161bc:	18800017 	ldw	r2,0(r3)
   161c0:	10000d26 	beq	r2,zero,161f8 <__sigtramp+0x70>
   161c4:	113fffe0 	cmpeqi	r4,r2,-1
   161c8:	20001a1e 	bne	r4,zero,16234 <__sigtramp+0xac>
   161cc:	11000060 	cmpeqi	r4,r2,1
   161d0:	2000161e 	bne	r4,zero,1622c <__sigtramp+0xa4>
   161d4:	18000015 	stw	zero,0(r3)
   161d8:	8009883a 	mov	r4,r16
   161dc:	103ee83a 	callr	r2
   161e0:	0005883a 	mov	r2,zero
   161e4:	dfc00217 	ldw	ra,8(sp)
   161e8:	dc400117 	ldw	r17,4(sp)
   161ec:	dc000017 	ldw	r16,0(sp)
   161f0:	dec00304 	addi	sp,sp,12
   161f4:	f800283a 	ret
   161f8:	00800044 	movi	r2,1
   161fc:	003ff906 	br	161e4 <__sigtramp+0x5c>
   16200:	01402004 	movi	r5,128
   16204:	8809883a 	mov	r4,r17
   16208:	000c6400 	call	c640 <_malloc_r>
   1620c:	8880b715 	stw	r2,732(r17)
   16210:	10000a26 	beq	r2,zero,1623c <__sigtramp+0xb4>
   16214:	01802004 	movi	r6,128
   16218:	000b883a 	mov	r5,zero
   1621c:	1009883a 	mov	r4,r2
   16220:	0011b080 	call	11b08 <memset>
   16224:	1007883a 	mov	r3,r2
   16228:	003fe206 	br	161b4 <__sigtramp+0x2c>
   1622c:	008000c4 	movi	r2,3
   16230:	003fec06 	br	161e4 <__sigtramp+0x5c>
   16234:	00800084 	movi	r2,2
   16238:	003fea06 	br	161e4 <__sigtramp+0x5c>
   1623c:	00bfffc4 	movi	r2,-1
   16240:	003fe806 	br	161e4 <__sigtramp+0x5c>

00016244 <_kill_r>:
   16244:	2807883a 	mov	r3,r5
   16248:	defffe04 	addi	sp,sp,-8
   1624c:	dc000015 	stw	r16,0(sp)
   16250:	008000b4 	movhi	r2,2
   16254:	300b883a 	mov	r5,r6
   16258:	2021883a 	mov	r16,r4
   1625c:	1809883a 	mov	r4,r3
   16260:	dfc00115 	stw	ra,4(sp)
   16264:	103a0915 	stw	zero,-6108(r2)
   16268:	00172480 	call	17248 <kill>
   1626c:	10ffffd8 	cmpnei	r3,r2,-1
   16270:	18000426 	beq	r3,zero,16284 <_kill_r+0x40>
   16274:	dfc00117 	ldw	ra,4(sp)
   16278:	dc000017 	ldw	r16,0(sp)
   1627c:	dec00204 	addi	sp,sp,8
   16280:	f800283a 	ret
   16284:	00c000b4 	movhi	r3,2
   16288:	18fa0917 	ldw	r3,-6108(r3)
   1628c:	183ff926 	beq	r3,zero,16274 <_kill_r+0x30>
   16290:	80c00015 	stw	r3,0(r16)
   16294:	dfc00117 	ldw	ra,4(sp)
   16298:	dc000017 	ldw	r16,0(sp)
   1629c:	dec00204 	addi	sp,sp,8
   162a0:	f800283a 	ret

000162a4 <_getpid_r>:
   162a4:	00171001 	jmpi	17100 <getpid>

000162a8 <__udivdi3>:
   162a8:	defff504 	addi	sp,sp,-44
   162ac:	dd000515 	stw	r20,20(sp)
   162b0:	dc800315 	stw	r18,12(sp)
   162b4:	dfc00a15 	stw	ra,40(sp)
   162b8:	df000915 	stw	fp,36(sp)
   162bc:	ddc00815 	stw	r23,32(sp)
   162c0:	dd800715 	stw	r22,28(sp)
   162c4:	dd400615 	stw	r21,24(sp)
   162c8:	dcc00415 	stw	r19,16(sp)
   162cc:	dc400215 	stw	r17,8(sp)
   162d0:	dc000115 	stw	r16,4(sp)
   162d4:	2029883a 	mov	r20,r4
   162d8:	2825883a 	mov	r18,r5
   162dc:	3800461e 	bne	r7,zero,163f8 <__udivdi3+0x150>
   162e0:	3823883a 	mov	r17,r7
   162e4:	3021883a 	mov	r16,r6
   162e8:	2027883a 	mov	r19,r4
   162ec:	2980622e 	bgeu	r5,r6,16478 <__udivdi3+0x1d0>
   162f0:	00bfffd4 	movui	r2,65535
   162f4:	282b883a 	mov	r21,r5
   162f8:	1180aa2e 	bgeu	r2,r6,165a4 <__udivdi3+0x2fc>
   162fc:	00804034 	movhi	r2,256
   16300:	30815a36 	bltu	r6,r2,1686c <__udivdi3+0x5c4>
   16304:	3006d63a 	srli	r3,r6,24
   16308:	04400604 	movi	r17,24
   1630c:	008000b4 	movhi	r2,2
   16310:	1885883a 	add	r2,r3,r2
   16314:	10aa1503 	ldbu	r2,-22444(r2)
   16318:	00c00804 	movi	r3,32
   1631c:	1463883a 	add	r17,r2,r17
   16320:	1c45c83a 	sub	r2,r3,r17
   16324:	1c400526 	beq	r3,r17,1633c <__udivdi3+0x94>
   16328:	9086983a 	sll	r3,r18,r2
   1632c:	a462d83a 	srl	r17,r20,r17
   16330:	30a0983a 	sll	r16,r6,r2
   16334:	a0a6983a 	sll	r19,r20,r2
   16338:	88eab03a 	or	r21,r17,r3
   1633c:	802cd43a 	srli	r22,r16,16
   16340:	a809883a 	mov	r4,r21
   16344:	853fffcc 	andi	r20,r16,65535
   16348:	b00b883a 	mov	r5,r22
   1634c:	0008af00 	call	8af0 <__umodsi3>
   16350:	a809883a 	mov	r4,r21
   16354:	b00b883a 	mov	r5,r22
   16358:	1025883a 	mov	r18,r2
   1635c:	0008a8c0 	call	8a8c <__udivsi3>
   16360:	a009883a 	mov	r4,r20
   16364:	100b883a 	mov	r5,r2
   16368:	102b883a 	mov	r21,r2
   1636c:	0008b4c0 	call	8b4c <__mulsi3>
   16370:	9024943a 	slli	r18,r18,16
   16374:	9808d43a 	srli	r4,r19,16
   16378:	9108b03a 	or	r4,r18,r4
   1637c:	2080052e 	bgeu	r4,r2,16394 <__udivdi3+0xec>
   16380:	2409883a 	add	r4,r4,r16
   16384:	a8ffffc4 	addi	r3,r21,-1
   16388:	24000136 	bltu	r4,r16,16390 <__udivdi3+0xe8>
   1638c:	20814836 	bltu	r4,r2,168b0 <__udivdi3+0x608>
   16390:	182b883a 	mov	r21,r3
   16394:	20a3c83a 	sub	r17,r4,r2
   16398:	8809883a 	mov	r4,r17
   1639c:	b00b883a 	mov	r5,r22
   163a0:	0008af00 	call	8af0 <__umodsi3>
   163a4:	8809883a 	mov	r4,r17
   163a8:	1023883a 	mov	r17,r2
   163ac:	b00b883a 	mov	r5,r22
   163b0:	8822943a 	slli	r17,r17,16
   163b4:	0008a8c0 	call	8a8c <__udivsi3>
   163b8:	100b883a 	mov	r5,r2
   163bc:	a009883a 	mov	r4,r20
   163c0:	9cffffcc 	andi	r19,r19,65535
   163c4:	1025883a 	mov	r18,r2
   163c8:	8ce6b03a 	or	r19,r17,r19
   163cc:	0008b4c0 	call	8b4c <__mulsi3>
   163d0:	9880052e 	bgeu	r19,r2,163e8 <__udivdi3+0x140>
   163d4:	84e7883a 	add	r19,r16,r19
   163d8:	90ffffc4 	addi	r3,r18,-1
   163dc:	9c000136 	bltu	r19,r16,163e4 <__udivdi3+0x13c>
   163e0:	98813136 	bltu	r19,r2,168a8 <__udivdi3+0x600>
   163e4:	1825883a 	mov	r18,r3
   163e8:	a80c943a 	slli	r6,r21,16
   163ec:	0007883a 	mov	r3,zero
   163f0:	3484b03a 	or	r2,r6,r18
   163f4:	00000306 	br	16404 <__udivdi3+0x15c>
   163f8:	29c00e2e 	bgeu	r5,r7,16434 <__udivdi3+0x18c>
   163fc:	0007883a 	mov	r3,zero
   16400:	0005883a 	mov	r2,zero
   16404:	dfc00a17 	ldw	ra,40(sp)
   16408:	df000917 	ldw	fp,36(sp)
   1640c:	ddc00817 	ldw	r23,32(sp)
   16410:	dd800717 	ldw	r22,28(sp)
   16414:	dd400617 	ldw	r21,24(sp)
   16418:	dd000517 	ldw	r20,20(sp)
   1641c:	dcc00417 	ldw	r19,16(sp)
   16420:	dc800317 	ldw	r18,12(sp)
   16424:	dc400217 	ldw	r17,8(sp)
   16428:	dc000117 	ldw	r16,4(sp)
   1642c:	dec00b04 	addi	sp,sp,44
   16430:	f800283a 	ret
   16434:	00bfffd4 	movui	r2,65535
   16438:	11c05f2e 	bgeu	r2,r7,165b8 <__udivdi3+0x310>
   1643c:	00804034 	movhi	r2,256
   16440:	3880fc36 	bltu	r7,r2,16834 <__udivdi3+0x58c>
   16444:	3804d63a 	srli	r2,r7,24
   16448:	01000604 	movi	r4,24
   1644c:	00c000b4 	movhi	r3,2
   16450:	10c7883a 	add	r3,r2,r3
   16454:	18aa1503 	ldbu	r2,-22444(r3)
   16458:	00c00804 	movi	r3,32
   1645c:	1105883a 	add	r2,r2,r4
   16460:	18a3c83a 	sub	r17,r3,r2
   16464:	1880901e 	bne	r3,r2,166a8 <__udivdi3+0x400>
   16468:	3c80f736 	bltu	r7,r18,16848 <__udivdi3+0x5a0>
   1646c:	a185403a 	cmpgeu	r2,r20,r6
   16470:	0007883a 	mov	r3,zero
   16474:	003fe306 	br	16404 <__udivdi3+0x15c>
   16478:	3000041e 	bne	r6,zero,1648c <__udivdi3+0x1e4>
   1647c:	000b883a 	mov	r5,zero
   16480:	01000044 	movi	r4,1
   16484:	0008a8c0 	call	8a8c <__udivsi3>
   16488:	1021883a 	mov	r16,r2
   1648c:	00bfffd4 	movui	r2,65535
   16490:	14003f2e 	bgeu	r2,r16,16590 <__udivdi3+0x2e8>
   16494:	00804034 	movhi	r2,256
   16498:	8080f136 	bltu	r16,r2,16860 <__udivdi3+0x5b8>
   1649c:	8006d63a 	srli	r3,r16,24
   164a0:	04400604 	movi	r17,24
   164a4:	008000b4 	movhi	r2,2
   164a8:	1885883a 	add	r2,r3,r2
   164ac:	10aa1503 	ldbu	r2,-22444(r2)
   164b0:	00c00804 	movi	r3,32
   164b4:	1463883a 	add	r17,r2,r17
   164b8:	1c45c83a 	sub	r2,r3,r17
   164bc:	1c40431e 	bne	r3,r17,165cc <__udivdi3+0x324>
   164c0:	802cd43a 	srli	r22,r16,16
   164c4:	9423c83a 	sub	r17,r18,r16
   164c8:	853fffcc 	andi	r20,r16,65535
   164cc:	00c00044 	movi	r3,1
   164d0:	b00b883a 	mov	r5,r22
   164d4:	8809883a 	mov	r4,r17
   164d8:	d8c00015 	stw	r3,0(sp)
   164dc:	0008af00 	call	8af0 <__umodsi3>
   164e0:	b00b883a 	mov	r5,r22
   164e4:	8809883a 	mov	r4,r17
   164e8:	1025883a 	mov	r18,r2
   164ec:	0008a8c0 	call	8a8c <__udivsi3>
   164f0:	1009883a 	mov	r4,r2
   164f4:	a00b883a 	mov	r5,r20
   164f8:	102b883a 	mov	r21,r2
   164fc:	0008b4c0 	call	8b4c <__mulsi3>
   16500:	9024943a 	slli	r18,r18,16
   16504:	9808d43a 	srli	r4,r19,16
   16508:	d8c00017 	ldw	r3,0(sp)
   1650c:	9108b03a 	or	r4,r18,r4
   16510:	2080052e 	bgeu	r4,r2,16528 <__udivdi3+0x280>
   16514:	2409883a 	add	r4,r4,r16
   16518:	a97fffc4 	addi	r5,r21,-1
   1651c:	24000136 	bltu	r4,r16,16524 <__udivdi3+0x27c>
   16520:	2080e636 	bltu	r4,r2,168bc <__udivdi3+0x614>
   16524:	282b883a 	mov	r21,r5
   16528:	20a3c83a 	sub	r17,r4,r2
   1652c:	8809883a 	mov	r4,r17
   16530:	b00b883a 	mov	r5,r22
   16534:	d8c00015 	stw	r3,0(sp)
   16538:	0008af00 	call	8af0 <__umodsi3>
   1653c:	8809883a 	mov	r4,r17
   16540:	1023883a 	mov	r17,r2
   16544:	b00b883a 	mov	r5,r22
   16548:	8822943a 	slli	r17,r17,16
   1654c:	0008a8c0 	call	8a8c <__udivsi3>
   16550:	a00b883a 	mov	r5,r20
   16554:	1009883a 	mov	r4,r2
   16558:	9cffffcc 	andi	r19,r19,65535
   1655c:	1025883a 	mov	r18,r2
   16560:	8ce6b03a 	or	r19,r17,r19
   16564:	0008b4c0 	call	8b4c <__mulsi3>
   16568:	d8c00017 	ldw	r3,0(sp)
   1656c:	9880052e 	bgeu	r19,r2,16584 <__udivdi3+0x2dc>
   16570:	84e7883a 	add	r19,r16,r19
   16574:	913fffc4 	addi	r4,r18,-1
   16578:	9c000136 	bltu	r19,r16,16580 <__udivdi3+0x2d8>
   1657c:	9880c836 	bltu	r19,r2,168a0 <__udivdi3+0x5f8>
   16580:	2025883a 	mov	r18,r4
   16584:	a80c943a 	slli	r6,r21,16
   16588:	3484b03a 	or	r2,r6,r18
   1658c:	003f9d06 	br	16404 <__udivdi3+0x15c>
   16590:	80804030 	cmpltui	r2,r16,256
   16594:	1000b81e 	bne	r2,zero,16878 <__udivdi3+0x5d0>
   16598:	8006d23a 	srli	r3,r16,8
   1659c:	04400204 	movi	r17,8
   165a0:	003fc006 	br	164a4 <__udivdi3+0x1fc>
   165a4:	30804030 	cmpltui	r2,r6,256
   165a8:	1000a51e 	bne	r2,zero,16840 <__udivdi3+0x598>
   165ac:	3006d23a 	srli	r3,r6,8
   165b0:	04400204 	movi	r17,8
   165b4:	003f5506 	br	1630c <__udivdi3+0x64>
   165b8:	38804030 	cmpltui	r2,r7,256
   165bc:	1000a51e 	bne	r2,zero,16854 <__udivdi3+0x5ac>
   165c0:	3804d23a 	srli	r2,r7,8
   165c4:	01000204 	movi	r4,8
   165c8:	003fa006 	br	1644c <__udivdi3+0x1a4>
   165cc:	80a0983a 	sll	r16,r16,r2
   165d0:	946ed83a 	srl	r23,r18,r17
   165d4:	9086983a 	sll	r3,r18,r2
   165d8:	802cd43a 	srli	r22,r16,16
   165dc:	a462d83a 	srl	r17,r20,r17
   165e0:	b809883a 	mov	r4,r23
   165e4:	b00b883a 	mov	r5,r22
   165e8:	88eab03a 	or	r21,r17,r3
   165ec:	a0a6983a 	sll	r19,r20,r2
   165f0:	0008af00 	call	8af0 <__umodsi3>
   165f4:	b809883a 	mov	r4,r23
   165f8:	b00b883a 	mov	r5,r22
   165fc:	1025883a 	mov	r18,r2
   16600:	853fffcc 	andi	r20,r16,65535
   16604:	0008a8c0 	call	8a8c <__udivsi3>
   16608:	a009883a 	mov	r4,r20
   1660c:	100b883a 	mov	r5,r2
   16610:	102f883a 	mov	r23,r2
   16614:	0008b4c0 	call	8b4c <__mulsi3>
   16618:	9024943a 	slli	r18,r18,16
   1661c:	a808d43a 	srli	r4,r21,16
   16620:	9108b03a 	or	r4,r18,r4
   16624:	2080062e 	bgeu	r4,r2,16640 <__udivdi3+0x398>
   16628:	2409883a 	add	r4,r4,r16
   1662c:	b8ffffc4 	addi	r3,r23,-1
   16630:	24009936 	bltu	r4,r16,16898 <__udivdi3+0x5f0>
   16634:	2080982e 	bgeu	r4,r2,16898 <__udivdi3+0x5f0>
   16638:	bdffff84 	addi	r23,r23,-2
   1663c:	2409883a 	add	r4,r4,r16
   16640:	20a3c83a 	sub	r17,r4,r2
   16644:	8809883a 	mov	r4,r17
   16648:	b00b883a 	mov	r5,r22
   1664c:	0008af00 	call	8af0 <__umodsi3>
   16650:	1025883a 	mov	r18,r2
   16654:	8809883a 	mov	r4,r17
   16658:	b00b883a 	mov	r5,r22
   1665c:	9024943a 	slli	r18,r18,16
   16660:	0008a8c0 	call	8a8c <__udivsi3>
   16664:	100b883a 	mov	r5,r2
   16668:	a009883a 	mov	r4,r20
   1666c:	ac7fffcc 	andi	r17,r21,65535
   16670:	1039883a 	mov	fp,r2
   16674:	9462b03a 	or	r17,r18,r17
   16678:	0008b4c0 	call	8b4c <__mulsi3>
   1667c:	8880062e 	bgeu	r17,r2,16698 <__udivdi3+0x3f0>
   16680:	8c23883a 	add	r17,r17,r16
   16684:	e0ffffc4 	addi	r3,fp,-1
   16688:	8c007f36 	bltu	r17,r16,16888 <__udivdi3+0x5e0>
   1668c:	88807e2e 	bgeu	r17,r2,16888 <__udivdi3+0x5e0>
   16690:	e73fff84 	addi	fp,fp,-2
   16694:	8c23883a 	add	r17,r17,r16
   16698:	b806943a 	slli	r3,r23,16
   1669c:	88a3c83a 	sub	r17,r17,r2
   166a0:	1f06b03a 	or	r3,r3,fp
   166a4:	003f8a06 	br	164d0 <__udivdi3+0x228>
   166a8:	30a6d83a 	srl	r19,r6,r2
   166ac:	3c4e983a 	sll	r7,r7,r17
   166b0:	90a0d83a 	srl	r16,r18,r2
   166b4:	9446983a 	sll	r3,r18,r17
   166b8:	99e6b03a 	or	r19,r19,r7
   166bc:	a084d83a 	srl	r2,r20,r2
   166c0:	9838d43a 	srli	fp,r19,16
   166c4:	8009883a 	mov	r4,r16
   166c8:	10eab03a 	or	r21,r2,r3
   166cc:	e00b883a 	mov	r5,fp
   166d0:	346c983a 	sll	r22,r6,r17
   166d4:	dd400015 	stw	r21,0(sp)
   166d8:	0008af00 	call	8af0 <__umodsi3>
   166dc:	8009883a 	mov	r4,r16
   166e0:	e00b883a 	mov	r5,fp
   166e4:	102f883a 	mov	r23,r2
   166e8:	9cbfffcc 	andi	r18,r19,65535
   166ec:	0008a8c0 	call	8a8c <__udivsi3>
   166f0:	9009883a 	mov	r4,r18
   166f4:	100b883a 	mov	r5,r2
   166f8:	1021883a 	mov	r16,r2
   166fc:	0008b4c0 	call	8b4c <__mulsi3>
   16700:	b82e943a 	slli	r23,r23,16
   16704:	a808d43a 	srli	r4,r21,16
   16708:	b908b03a 	or	r4,r23,r4
   1670c:	2080062e 	bgeu	r4,r2,16728 <__udivdi3+0x480>
   16710:	24c9883a 	add	r4,r4,r19
   16714:	817fffc4 	addi	r5,r16,-1
   16718:	24c05d36 	bltu	r4,r19,16890 <__udivdi3+0x5e8>
   1671c:	20805c2e 	bgeu	r4,r2,16890 <__udivdi3+0x5e8>
   16720:	843fff84 	addi	r16,r16,-2
   16724:	24c9883a 	add	r4,r4,r19
   16728:	20abc83a 	sub	r21,r4,r2
   1672c:	a809883a 	mov	r4,r21
   16730:	e00b883a 	mov	r5,fp
   16734:	0008af00 	call	8af0 <__umodsi3>
   16738:	a809883a 	mov	r4,r21
   1673c:	e00b883a 	mov	r5,fp
   16740:	102b883a 	mov	r21,r2
   16744:	0008a8c0 	call	8a8c <__udivsi3>
   16748:	9009883a 	mov	r4,r18
   1674c:	100b883a 	mov	r5,r2
   16750:	102f883a 	mov	r23,r2
   16754:	0008b4c0 	call	8b4c <__mulsi3>
   16758:	d8c00017 	ldw	r3,0(sp)
   1675c:	a82a943a 	slli	r21,r21,16
   16760:	100d883a 	mov	r6,r2
   16764:	1cbfffcc 	andi	r18,r3,65535
   16768:	aca4b03a 	or	r18,r21,r18
   1676c:	9080062e 	bgeu	r18,r2,16788 <__udivdi3+0x4e0>
   16770:	94e5883a 	add	r18,r18,r19
   16774:	b8bfffc4 	addi	r2,r23,-1
   16778:	94c04136 	bltu	r18,r19,16880 <__udivdi3+0x5d8>
   1677c:	9180402e 	bgeu	r18,r6,16880 <__udivdi3+0x5d8>
   16780:	bdffff84 	addi	r23,r23,-2
   16784:	94e5883a 	add	r18,r18,r19
   16788:	8004943a 	slli	r2,r16,16
   1678c:	bd7fffcc 	andi	r21,r23,65535
   16790:	b73fffcc 	andi	fp,r22,65535
   16794:	15e0b03a 	or	r16,r2,r23
   16798:	8026d43a 	srli	r19,r16,16
   1679c:	a809883a 	mov	r4,r21
   167a0:	e00b883a 	mov	r5,fp
   167a4:	91a5c83a 	sub	r18,r18,r6
   167a8:	b02cd43a 	srli	r22,r22,16
   167ac:	0008b4c0 	call	8b4c <__mulsi3>
   167b0:	9809883a 	mov	r4,r19
   167b4:	e00b883a 	mov	r5,fp
   167b8:	102f883a 	mov	r23,r2
   167bc:	0008b4c0 	call	8b4c <__mulsi3>
   167c0:	9809883a 	mov	r4,r19
   167c4:	b00b883a 	mov	r5,r22
   167c8:	1027883a 	mov	r19,r2
   167cc:	0008b4c0 	call	8b4c <__mulsi3>
   167d0:	a809883a 	mov	r4,r21
   167d4:	b00b883a 	mov	r5,r22
   167d8:	102b883a 	mov	r21,r2
   167dc:	0008b4c0 	call	8b4c <__mulsi3>
   167e0:	b806d43a 	srli	r3,r23,16
   167e4:	14c5883a 	add	r2,r2,r19
   167e8:	1887883a 	add	r3,r3,r2
   167ec:	1cc0022e 	bgeu	r3,r19,167f8 <__udivdi3+0x550>
   167f0:	00800074 	movhi	r2,1
   167f4:	a8ab883a 	add	r21,r21,r2
   167f8:	1804d43a 	srli	r2,r3,16
   167fc:	156b883a 	add	r21,r2,r21
   16800:	95400936 	bltu	r18,r21,16828 <__udivdi3+0x580>
   16804:	95400326 	beq	r18,r21,16814 <__udivdi3+0x56c>
   16808:	8005883a 	mov	r2,r16
   1680c:	0007883a 	mov	r3,zero
   16810:	003efc06 	br	16404 <__udivdi3+0x15c>
   16814:	1806943a 	slli	r3,r3,16
   16818:	a44c983a 	sll	r6,r20,r17
   1681c:	bdffffcc 	andi	r23,r23,65535
   16820:	1dc7883a 	add	r3,r3,r23
   16824:	30fff82e 	bgeu	r6,r3,16808 <__udivdi3+0x560>
   16828:	80bfffc4 	addi	r2,r16,-1
   1682c:	0007883a 	mov	r3,zero
   16830:	003ef406 	br	16404 <__udivdi3+0x15c>
   16834:	3804d43a 	srli	r2,r7,16
   16838:	01000404 	movi	r4,16
   1683c:	003f0306 	br	1644c <__udivdi3+0x1a4>
   16840:	3007883a 	mov	r3,r6
   16844:	003eb106 	br	1630c <__udivdi3+0x64>
   16848:	0007883a 	mov	r3,zero
   1684c:	00800044 	movi	r2,1
   16850:	003eec06 	br	16404 <__udivdi3+0x15c>
   16854:	3805883a 	mov	r2,r7
   16858:	0009883a 	mov	r4,zero
   1685c:	003efb06 	br	1644c <__udivdi3+0x1a4>
   16860:	8006d43a 	srli	r3,r16,16
   16864:	04400404 	movi	r17,16
   16868:	003f0e06 	br	164a4 <__udivdi3+0x1fc>
   1686c:	3006d43a 	srli	r3,r6,16
   16870:	04400404 	movi	r17,16
   16874:	003ea506 	br	1630c <__udivdi3+0x64>
   16878:	8007883a 	mov	r3,r16
   1687c:	003f0906 	br	164a4 <__udivdi3+0x1fc>
   16880:	102f883a 	mov	r23,r2
   16884:	003fc006 	br	16788 <__udivdi3+0x4e0>
   16888:	1839883a 	mov	fp,r3
   1688c:	003f8206 	br	16698 <__udivdi3+0x3f0>
   16890:	2821883a 	mov	r16,r5
   16894:	003fa406 	br	16728 <__udivdi3+0x480>
   16898:	182f883a 	mov	r23,r3
   1689c:	003f6806 	br	16640 <__udivdi3+0x398>
   168a0:	94bfff84 	addi	r18,r18,-2
   168a4:	003f3706 	br	16584 <__udivdi3+0x2dc>
   168a8:	94bfff84 	addi	r18,r18,-2
   168ac:	003ece06 	br	163e8 <__udivdi3+0x140>
   168b0:	ad7fff84 	addi	r21,r21,-2
   168b4:	2409883a 	add	r4,r4,r16
   168b8:	003eb606 	br	16394 <__udivdi3+0xec>
   168bc:	ad7fff84 	addi	r21,r21,-2
   168c0:	2409883a 	add	r4,r4,r16
   168c4:	003f1806 	br	16528 <__udivdi3+0x280>

000168c8 <__umoddi3>:
   168c8:	defff304 	addi	sp,sp,-52
   168cc:	dc400415 	stw	r17,16(sp)
   168d0:	dc000315 	stw	r16,12(sp)
   168d4:	dfc00c15 	stw	ra,48(sp)
   168d8:	df000b15 	stw	fp,44(sp)
   168dc:	ddc00a15 	stw	r23,40(sp)
   168e0:	dd800915 	stw	r22,36(sp)
   168e4:	dd400815 	stw	r21,32(sp)
   168e8:	dd000715 	stw	r20,28(sp)
   168ec:	dcc00615 	stw	r19,24(sp)
   168f0:	dc800515 	stw	r18,20(sp)
   168f4:	2823883a 	mov	r17,r5
   168f8:	2021883a 	mov	r16,r4
   168fc:	38003b1e 	bne	r7,zero,169ec <__umoddi3+0x124>
   16900:	3825883a 	mov	r18,r7
   16904:	3029883a 	mov	r20,r6
   16908:	2027883a 	mov	r19,r4
   1690c:	29805b2e 	bgeu	r5,r6,16a7c <__umoddi3+0x1b4>
   16910:	00bfffd4 	movui	r2,65535
   16914:	282d883a 	mov	r22,r5
   16918:	11809a2e 	bgeu	r2,r6,16b84 <__umoddi3+0x2bc>
   1691c:	00804034 	movhi	r2,256
   16920:	30814436 	bltu	r6,r2,16e34 <__umoddi3+0x56c>
   16924:	3006d63a 	srli	r3,r6,24
   16928:	04800604 	movi	r18,24
   1692c:	008000b4 	movhi	r2,2
   16930:	1885883a 	add	r2,r3,r2
   16934:	10aa1503 	ldbu	r2,-22444(r2)
   16938:	00c00804 	movi	r3,32
   1693c:	1485883a 	add	r2,r2,r18
   16940:	18a5c83a 	sub	r18,r3,r2
   16944:	18800526 	beq	r3,r2,1695c <__umoddi3+0x94>
   16948:	8ca2983a 	sll	r17,r17,r18
   1694c:	8084d83a 	srl	r2,r16,r2
   16950:	34a8983a 	sll	r20,r6,r18
   16954:	84a6983a 	sll	r19,r16,r18
   16958:	146cb03a 	or	r22,r2,r17
   1695c:	a02ed43a 	srli	r23,r20,16
   16960:	b009883a 	mov	r4,r22
   16964:	a57fffcc 	andi	r21,r20,65535
   16968:	b80b883a 	mov	r5,r23
   1696c:	0008af00 	call	8af0 <__umodsi3>
   16970:	b80b883a 	mov	r5,r23
   16974:	b009883a 	mov	r4,r22
   16978:	1023883a 	mov	r17,r2
   1697c:	0008a8c0 	call	8a8c <__udivsi3>
   16980:	a809883a 	mov	r4,r21
   16984:	100b883a 	mov	r5,r2
   16988:	0008b4c0 	call	8b4c <__mulsi3>
   1698c:	8822943a 	slli	r17,r17,16
   16990:	9808d43a 	srli	r4,r19,16
   16994:	8908b03a 	or	r4,r17,r4
   16998:	2080042e 	bgeu	r4,r2,169ac <__umoddi3+0xe4>
   1699c:	2509883a 	add	r4,r4,r20
   169a0:	25000236 	bltu	r4,r20,169ac <__umoddi3+0xe4>
   169a4:	2080012e 	bgeu	r4,r2,169ac <__umoddi3+0xe4>
   169a8:	2509883a 	add	r4,r4,r20
   169ac:	20a1c83a 	sub	r16,r4,r2
   169b0:	b80b883a 	mov	r5,r23
   169b4:	8009883a 	mov	r4,r16
   169b8:	0008af00 	call	8af0 <__umodsi3>
   169bc:	b80b883a 	mov	r5,r23
   169c0:	8009883a 	mov	r4,r16
   169c4:	1023883a 	mov	r17,r2
   169c8:	0008a8c0 	call	8a8c <__udivsi3>
   169cc:	8822943a 	slli	r17,r17,16
   169d0:	100b883a 	mov	r5,r2
   169d4:	a809883a 	mov	r4,r21
   169d8:	0008b4c0 	call	8b4c <__mulsi3>
   169dc:	98ffffcc 	andi	r3,r19,65535
   169e0:	88c6b03a 	or	r3,r17,r3
   169e4:	18805e2e 	bgeu	r3,r2,16b60 <__umoddi3+0x298>
   169e8:	00005906 	br	16b50 <__umoddi3+0x288>
   169ec:	2005883a 	mov	r2,r4
   169f0:	29c00d2e 	bgeu	r5,r7,16a28 <__umoddi3+0x160>
   169f4:	2807883a 	mov	r3,r5
   169f8:	dfc00c17 	ldw	ra,48(sp)
   169fc:	df000b17 	ldw	fp,44(sp)
   16a00:	ddc00a17 	ldw	r23,40(sp)
   16a04:	dd800917 	ldw	r22,36(sp)
   16a08:	dd400817 	ldw	r21,32(sp)
   16a0c:	dd000717 	ldw	r20,28(sp)
   16a10:	dcc00617 	ldw	r19,24(sp)
   16a14:	dc800517 	ldw	r18,20(sp)
   16a18:	dc400417 	ldw	r17,16(sp)
   16a1c:	dc000317 	ldw	r16,12(sp)
   16a20:	dec00d04 	addi	sp,sp,52
   16a24:	f800283a 	ret
   16a28:	013fffd4 	movui	r4,65535
   16a2c:	2807883a 	mov	r3,r5
   16a30:	21c0592e 	bgeu	r4,r7,16b98 <__umoddi3+0x2d0>
   16a34:	01004034 	movhi	r4,256
   16a38:	39010336 	bltu	r7,r4,16e48 <__umoddi3+0x580>
   16a3c:	3808d63a 	srli	r4,r7,24
   16a40:	02000604 	movi	r8,24
   16a44:	014000b4 	movhi	r5,2
   16a48:	214b883a 	add	r5,r4,r5
   16a4c:	2d2a1503 	ldbu	r20,-22444(r5)
   16a50:	01000804 	movi	r4,32
   16a54:	a229883a 	add	r20,r20,r8
   16a58:	252bc83a 	sub	r21,r4,r20
   16a5c:	2500531e 	bne	r4,r20,16bac <__umoddi3+0x2e4>
   16a60:	3c400136 	bltu	r7,r17,16a68 <__umoddi3+0x1a0>
   16a64:	81bfe436 	bltu	r16,r6,169f8 <__umoddi3+0x130>
   16a68:	8185c83a 	sub	r2,r16,r6
   16a6c:	89cfc83a 	sub	r7,r17,r7
   16a70:	8087803a 	cmpltu	r3,r16,r2
   16a74:	38c7c83a 	sub	r3,r7,r3
   16a78:	003fdf06 	br	169f8 <__umoddi3+0x130>
   16a7c:	3000041e 	bne	r6,zero,16a90 <__umoddi3+0x1c8>
   16a80:	000b883a 	mov	r5,zero
   16a84:	01000044 	movi	r4,1
   16a88:	0008a8c0 	call	8a8c <__udivsi3>
   16a8c:	1029883a 	mov	r20,r2
   16a90:	00bfffd4 	movui	r2,65535
   16a94:	1500362e 	bgeu	r2,r20,16b70 <__umoddi3+0x2a8>
   16a98:	00804034 	movhi	r2,256
   16a9c:	a080ed36 	bltu	r20,r2,16e54 <__umoddi3+0x58c>
   16aa0:	a006d63a 	srli	r3,r20,24
   16aa4:	04800604 	movi	r18,24
   16aa8:	008000b4 	movhi	r2,2
   16aac:	1885883a 	add	r2,r3,r2
   16ab0:	15aa1503 	ldbu	r22,-22444(r2)
   16ab4:	00800804 	movi	r2,32
   16ab8:	b4ad883a 	add	r22,r22,r18
   16abc:	15a5c83a 	sub	r18,r2,r22
   16ac0:	1580a51e 	bne	r2,r22,16d58 <__umoddi3+0x490>
   16ac4:	a02ed43a 	srli	r23,r20,16
   16ac8:	8d23c83a 	sub	r17,r17,r20
   16acc:	a57fffcc 	andi	r21,r20,65535
   16ad0:	8809883a 	mov	r4,r17
   16ad4:	b80b883a 	mov	r5,r23
   16ad8:	0008af00 	call	8af0 <__umodsi3>
   16adc:	8809883a 	mov	r4,r17
   16ae0:	b80b883a 	mov	r5,r23
   16ae4:	1023883a 	mov	r17,r2
   16ae8:	0008a8c0 	call	8a8c <__udivsi3>
   16aec:	1009883a 	mov	r4,r2
   16af0:	a80b883a 	mov	r5,r21
   16af4:	0008b4c0 	call	8b4c <__mulsi3>
   16af8:	8822943a 	slli	r17,r17,16
   16afc:	9808d43a 	srli	r4,r19,16
   16b00:	8908b03a 	or	r4,r17,r4
   16b04:	2080032e 	bgeu	r4,r2,16b14 <__umoddi3+0x24c>
   16b08:	2509883a 	add	r4,r4,r20
   16b0c:	25000136 	bltu	r4,r20,16b14 <__umoddi3+0x24c>
   16b10:	2080dc36 	bltu	r4,r2,16e84 <__umoddi3+0x5bc>
   16b14:	20a1c83a 	sub	r16,r4,r2
   16b18:	b80b883a 	mov	r5,r23
   16b1c:	8009883a 	mov	r4,r16
   16b20:	0008af00 	call	8af0 <__umodsi3>
   16b24:	b80b883a 	mov	r5,r23
   16b28:	8009883a 	mov	r4,r16
   16b2c:	1023883a 	mov	r17,r2
   16b30:	8822943a 	slli	r17,r17,16
   16b34:	0008a8c0 	call	8a8c <__udivsi3>
   16b38:	a80b883a 	mov	r5,r21
   16b3c:	1009883a 	mov	r4,r2
   16b40:	0008b4c0 	call	8b4c <__mulsi3>
   16b44:	9cffffcc 	andi	r19,r19,65535
   16b48:	8cc6b03a 	or	r3,r17,r19
   16b4c:	1880042e 	bgeu	r3,r2,16b60 <__umoddi3+0x298>
   16b50:	1d07883a 	add	r3,r3,r20
   16b54:	1d000236 	bltu	r3,r20,16b60 <__umoddi3+0x298>
   16b58:	1880012e 	bgeu	r3,r2,16b60 <__umoddi3+0x298>
   16b5c:	1d07883a 	add	r3,r3,r20
   16b60:	1885c83a 	sub	r2,r3,r2
   16b64:	1484d83a 	srl	r2,r2,r18
   16b68:	0007883a 	mov	r3,zero
   16b6c:	003fa206 	br	169f8 <__umoddi3+0x130>
   16b70:	a0804030 	cmpltui	r2,r20,256
   16b74:	1000ba1e 	bne	r2,zero,16e60 <__umoddi3+0x598>
   16b78:	a006d23a 	srli	r3,r20,8
   16b7c:	04800204 	movi	r18,8
   16b80:	003fc906 	br	16aa8 <__umoddi3+0x1e0>
   16b84:	30804030 	cmpltui	r2,r6,256
   16b88:	1000ad1e 	bne	r2,zero,16e40 <__umoddi3+0x578>
   16b8c:	3006d23a 	srli	r3,r6,8
   16b90:	04800204 	movi	r18,8
   16b94:	003f6506 	br	1692c <__umoddi3+0x64>
   16b98:	39004030 	cmpltui	r4,r7,256
   16b9c:	2000b21e 	bne	r4,zero,16e68 <__umoddi3+0x5a0>
   16ba0:	3808d23a 	srli	r4,r7,8
   16ba4:	02000204 	movi	r8,8
   16ba8:	003fa606 	br	16a44 <__umoddi3+0x17c>
   16bac:	3d4e983a 	sll	r7,r7,r21
   16bb0:	3508d83a 	srl	r4,r6,r20
   16bb4:	8d2cd83a 	srl	r22,r17,r20
   16bb8:	8504d83a 	srl	r2,r16,r20
   16bbc:	21e4b03a 	or	r18,r4,r7
   16bc0:	8d62983a 	sll	r17,r17,r21
   16bc4:	9026d43a 	srli	r19,r18,16
   16bc8:	354c983a 	sll	r6,r6,r21
   16bcc:	1444b03a 	or	r2,r2,r17
   16bd0:	b009883a 	mov	r4,r22
   16bd4:	980b883a 	mov	r5,r19
   16bd8:	d9800115 	stw	r6,4(sp)
   16bdc:	d8800015 	stw	r2,0(sp)
   16be0:	0008af00 	call	8af0 <__umodsi3>
   16be4:	980b883a 	mov	r5,r19
   16be8:	b009883a 	mov	r4,r22
   16bec:	102f883a 	mov	r23,r2
   16bf0:	947fffcc 	andi	r17,r18,65535
   16bf4:	0008a8c0 	call	8a8c <__udivsi3>
   16bf8:	8809883a 	mov	r4,r17
   16bfc:	100b883a 	mov	r5,r2
   16c00:	1039883a 	mov	fp,r2
   16c04:	0008b4c0 	call	8b4c <__mulsi3>
   16c08:	d8c00017 	ldw	r3,0(sp)
   16c0c:	b82e943a 	slli	r23,r23,16
   16c10:	8560983a 	sll	r16,r16,r21
   16c14:	1808d43a 	srli	r4,r3,16
   16c18:	b908b03a 	or	r4,r23,r4
   16c1c:	2080062e 	bgeu	r4,r2,16c38 <__umoddi3+0x370>
   16c20:	2489883a 	add	r4,r4,r18
   16c24:	e17fffc4 	addi	r5,fp,-1
   16c28:	24809436 	bltu	r4,r18,16e7c <__umoddi3+0x5b4>
   16c2c:	2080932e 	bgeu	r4,r2,16e7c <__umoddi3+0x5b4>
   16c30:	e73fff84 	addi	fp,fp,-2
   16c34:	2489883a 	add	r4,r4,r18
   16c38:	20adc83a 	sub	r22,r4,r2
   16c3c:	980b883a 	mov	r5,r19
   16c40:	b009883a 	mov	r4,r22
   16c44:	0008af00 	call	8af0 <__umodsi3>
   16c48:	980b883a 	mov	r5,r19
   16c4c:	b009883a 	mov	r4,r22
   16c50:	102f883a 	mov	r23,r2
   16c54:	0008a8c0 	call	8a8c <__udivsi3>
   16c58:	100b883a 	mov	r5,r2
   16c5c:	8809883a 	mov	r4,r17
   16c60:	d8800215 	stw	r2,8(sp)
   16c64:	0008b4c0 	call	8b4c <__mulsi3>
   16c68:	d8c00017 	ldw	r3,0(sp)
   16c6c:	b82e943a 	slli	r23,r23,16
   16c70:	d9400217 	ldw	r5,8(sp)
   16c74:	1c7fffcc 	andi	r17,r3,65535
   16c78:	bc62b03a 	or	r17,r23,r17
   16c7c:	8880062e 	bgeu	r17,r2,16c98 <__umoddi3+0x3d0>
   16c80:	8ca3883a 	add	r17,r17,r18
   16c84:	28ffffc4 	addi	r3,r5,-1
   16c88:	8c807a36 	bltu	r17,r18,16e74 <__umoddi3+0x5ac>
   16c8c:	8880792e 	bgeu	r17,r2,16e74 <__umoddi3+0x5ac>
   16c90:	297fff84 	addi	r5,r5,-2
   16c94:	8ca3883a 	add	r17,r17,r18
   16c98:	e02c943a 	slli	r22,fp,16
   16c9c:	d9c00117 	ldw	r7,4(sp)
   16ca0:	29bfffcc 	andi	r6,r5,65535
   16ca4:	b16cb03a 	or	r22,r22,r5
   16ca8:	38ffffcc 	andi	r3,r7,65535
   16cac:	b02cd43a 	srli	r22,r22,16
   16cb0:	180b883a 	mov	r5,r3
   16cb4:	3009883a 	mov	r4,r6
   16cb8:	3838d43a 	srli	fp,r7,16
   16cbc:	182f883a 	mov	r23,r3
   16cc0:	d9800015 	stw	r6,0(sp)
   16cc4:	88a3c83a 	sub	r17,r17,r2
   16cc8:	0008b4c0 	call	8b4c <__mulsi3>
   16ccc:	b80b883a 	mov	r5,r23
   16cd0:	b009883a 	mov	r4,r22
   16cd4:	102f883a 	mov	r23,r2
   16cd8:	0008b4c0 	call	8b4c <__mulsi3>
   16cdc:	e00b883a 	mov	r5,fp
   16ce0:	b009883a 	mov	r4,r22
   16ce4:	102d883a 	mov	r22,r2
   16ce8:	0008b4c0 	call	8b4c <__mulsi3>
   16cec:	d9800017 	ldw	r6,0(sp)
   16cf0:	e00b883a 	mov	r5,fp
   16cf4:	1039883a 	mov	fp,r2
   16cf8:	3009883a 	mov	r4,r6
   16cfc:	0008b4c0 	call	8b4c <__mulsi3>
   16d00:	b808d43a 	srli	r4,r23,16
   16d04:	1585883a 	add	r2,r2,r22
   16d08:	2089883a 	add	r4,r4,r2
   16d0c:	2580022e 	bgeu	r4,r22,16d18 <__umoddi3+0x450>
   16d10:	00800074 	movhi	r2,1
   16d14:	e0b9883a 	add	fp,fp,r2
   16d18:	2006d43a 	srli	r3,r4,16
   16d1c:	2008943a 	slli	r4,r4,16
   16d20:	bdffffcc 	andi	r23,r23,65535
   16d24:	1f07883a 	add	r3,r3,fp
   16d28:	25c9883a 	add	r4,r4,r23
   16d2c:	88c03a36 	bltu	r17,r3,16e18 <__umoddi3+0x550>
   16d30:	88c03826 	beq	r17,r3,16e14 <__umoddi3+0x54c>
   16d34:	8109c83a 	sub	r4,r16,r4
   16d38:	8121803a 	cmpltu	r16,r16,r4
   16d3c:	88c7c83a 	sub	r3,r17,r3
   16d40:	1c07c83a 	sub	r3,r3,r16
   16d44:	1d04983a 	sll	r2,r3,r20
   16d48:	2548d83a 	srl	r4,r4,r21
   16d4c:	1d46d83a 	srl	r3,r3,r21
   16d50:	1104b03a 	or	r2,r2,r4
   16d54:	003f2806 	br	169f8 <__umoddi3+0x130>
   16d58:	a4a8983a 	sll	r20,r20,r18
   16d5c:	8da6d83a 	srl	r19,r17,r22
   16d60:	8ca2983a 	sll	r17,r17,r18
   16d64:	a02ed43a 	srli	r23,r20,16
   16d68:	9809883a 	mov	r4,r19
   16d6c:	85acd83a 	srl	r22,r16,r22
   16d70:	b80b883a 	mov	r5,r23
   16d74:	0008af00 	call	8af0 <__umodsi3>
   16d78:	9809883a 	mov	r4,r19
   16d7c:	b80b883a 	mov	r5,r23
   16d80:	b46cb03a 	or	r22,r22,r17
   16d84:	a57fffcc 	andi	r21,r20,65535
   16d88:	1023883a 	mov	r17,r2
   16d8c:	0008a8c0 	call	8a8c <__udivsi3>
   16d90:	a809883a 	mov	r4,r21
   16d94:	100b883a 	mov	r5,r2
   16d98:	0008b4c0 	call	8b4c <__mulsi3>
   16d9c:	8822943a 	slli	r17,r17,16
   16da0:	b008d43a 	srli	r4,r22,16
   16da4:	84a6983a 	sll	r19,r16,r18
   16da8:	8908b03a 	or	r4,r17,r4
   16dac:	2080042e 	bgeu	r4,r2,16dc0 <__umoddi3+0x4f8>
   16db0:	2509883a 	add	r4,r4,r20
   16db4:	25000236 	bltu	r4,r20,16dc0 <__umoddi3+0x4f8>
   16db8:	2080012e 	bgeu	r4,r2,16dc0 <__umoddi3+0x4f8>
   16dbc:	2509883a 	add	r4,r4,r20
   16dc0:	20a1c83a 	sub	r16,r4,r2
   16dc4:	8009883a 	mov	r4,r16
   16dc8:	b80b883a 	mov	r5,r23
   16dcc:	0008af00 	call	8af0 <__umodsi3>
   16dd0:	8009883a 	mov	r4,r16
   16dd4:	1021883a 	mov	r16,r2
   16dd8:	b80b883a 	mov	r5,r23
   16ddc:	8020943a 	slli	r16,r16,16
   16de0:	0008a8c0 	call	8a8c <__udivsi3>
   16de4:	100b883a 	mov	r5,r2
   16de8:	a809883a 	mov	r4,r21
   16dec:	b47fffcc 	andi	r17,r22,65535
   16df0:	0008b4c0 	call	8b4c <__mulsi3>
   16df4:	8462b03a 	or	r17,r16,r17
   16df8:	8880042e 	bgeu	r17,r2,16e0c <__umoddi3+0x544>
   16dfc:	8d23883a 	add	r17,r17,r20
   16e00:	8d000236 	bltu	r17,r20,16e0c <__umoddi3+0x544>
   16e04:	8880012e 	bgeu	r17,r2,16e0c <__umoddi3+0x544>
   16e08:	8d23883a 	add	r17,r17,r20
   16e0c:	88a3c83a 	sub	r17,r17,r2
   16e10:	003f2f06 	br	16ad0 <__umoddi3+0x208>
   16e14:	813fc72e 	bgeu	r16,r4,16d34 <__umoddi3+0x46c>
   16e18:	d8800117 	ldw	r2,4(sp)
   16e1c:	20a7c83a 	sub	r19,r4,r2
   16e20:	24c9803a 	cmpltu	r4,r4,r19
   16e24:	2489883a 	add	r4,r4,r18
   16e28:	1907c83a 	sub	r3,r3,r4
   16e2c:	9809883a 	mov	r4,r19
   16e30:	003fc006 	br	16d34 <__umoddi3+0x46c>
   16e34:	3006d43a 	srli	r3,r6,16
   16e38:	04800404 	movi	r18,16
   16e3c:	003ebb06 	br	1692c <__umoddi3+0x64>
   16e40:	3007883a 	mov	r3,r6
   16e44:	003eb906 	br	1692c <__umoddi3+0x64>
   16e48:	3808d43a 	srli	r4,r7,16
   16e4c:	02000404 	movi	r8,16
   16e50:	003efc06 	br	16a44 <__umoddi3+0x17c>
   16e54:	a006d43a 	srli	r3,r20,16
   16e58:	04800404 	movi	r18,16
   16e5c:	003f1206 	br	16aa8 <__umoddi3+0x1e0>
   16e60:	a007883a 	mov	r3,r20
   16e64:	003f1006 	br	16aa8 <__umoddi3+0x1e0>
   16e68:	3809883a 	mov	r4,r7
   16e6c:	0011883a 	mov	r8,zero
   16e70:	003ef406 	br	16a44 <__umoddi3+0x17c>
   16e74:	180b883a 	mov	r5,r3
   16e78:	003f8706 	br	16c98 <__umoddi3+0x3d0>
   16e7c:	2839883a 	mov	fp,r5
   16e80:	003f6d06 	br	16c38 <__umoddi3+0x370>
   16e84:	2509883a 	add	r4,r4,r20
   16e88:	003f2206 	br	16b14 <__umoddi3+0x24c>

00016e8c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   16e8c:	defffe04 	addi	sp,sp,-8
   16e90:	dfc00115 	stw	ra,4(sp)
   16e94:	df000015 	stw	fp,0(sp)
   16e98:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   16e9c:	d0a00917 	ldw	r2,-32732(gp)
   16ea0:	10000326 	beq	r2,zero,16eb0 <alt_get_errno+0x24>
   16ea4:	d0a00917 	ldw	r2,-32732(gp)
   16ea8:	103ee83a 	callr	r2
   16eac:	00000106 	br	16eb4 <alt_get_errno+0x28>
   16eb0:	d0a73604 	addi	r2,gp,-25384
}
   16eb4:	e037883a 	mov	sp,fp
   16eb8:	dfc00117 	ldw	ra,4(sp)
   16ebc:	df000017 	ldw	fp,0(sp)
   16ec0:	dec00204 	addi	sp,sp,8
   16ec4:	f800283a 	ret

00016ec8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   16ec8:	defffb04 	addi	sp,sp,-20
   16ecc:	dfc00415 	stw	ra,16(sp)
   16ed0:	df000315 	stw	fp,12(sp)
   16ed4:	df000304 	addi	fp,sp,12
   16ed8:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   16edc:	e0bffd17 	ldw	r2,-12(fp)
   16ee0:	10000916 	blt	r2,zero,16f08 <close+0x40>
   16ee4:	e0fffd17 	ldw	r3,-12(fp)
   16ee8:	1805883a 	mov	r2,r3
   16eec:	1085883a 	add	r2,r2,r2
   16ef0:	10c5883a 	add	r2,r2,r3
   16ef4:	100490ba 	slli	r2,r2,2
   16ef8:	00c000b4 	movhi	r3,2
   16efc:	18ee2d04 	addi	r3,r3,-18252
   16f00:	10c5883a 	add	r2,r2,r3
   16f04:	00000106 	br	16f0c <close+0x44>
   16f08:	0005883a 	mov	r2,zero
   16f0c:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
   16f10:	e0bfff17 	ldw	r2,-4(fp)
   16f14:	10001926 	beq	r2,zero,16f7c <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   16f18:	e0bfff17 	ldw	r2,-4(fp)
   16f1c:	10800017 	ldw	r2,0(r2)
   16f20:	10800417 	ldw	r2,16(r2)
   16f24:	10000626 	beq	r2,zero,16f40 <close+0x78>
   16f28:	e0bfff17 	ldw	r2,-4(fp)
   16f2c:	10800017 	ldw	r2,0(r2)
   16f30:	10800417 	ldw	r2,16(r2)
   16f34:	e13fff17 	ldw	r4,-4(fp)
   16f38:	103ee83a 	callr	r2
   16f3c:	00000106 	br	16f44 <close+0x7c>
   16f40:	0005883a 	mov	r2,zero
   16f44:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   16f48:	e13ffd17 	ldw	r4,-12(fp)
   16f4c:	00179e00 	call	179e0 <alt_release_fd>
    if (rval < 0)
   16f50:	e0bffe17 	ldw	r2,-8(fp)
   16f54:	1000070e 	bge	r2,zero,16f74 <close+0xac>
    {
      ALT_ERRNO = -rval;
   16f58:	0016e8c0 	call	16e8c <alt_get_errno>
   16f5c:	1007883a 	mov	r3,r2
   16f60:	e0bffe17 	ldw	r2,-8(fp)
   16f64:	0085c83a 	sub	r2,zero,r2
   16f68:	18800015 	stw	r2,0(r3)
      return -1;
   16f6c:	00bfffc4 	movi	r2,-1
   16f70:	00000706 	br	16f90 <close+0xc8>
    }
    return 0;
   16f74:	0005883a 	mov	r2,zero
   16f78:	00000506 	br	16f90 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   16f7c:	0016e8c0 	call	16e8c <alt_get_errno>
   16f80:	1007883a 	mov	r3,r2
   16f84:	00801444 	movi	r2,81
   16f88:	18800015 	stw	r2,0(r3)
    return -1;
   16f8c:	00bfffc4 	movi	r2,-1
  }
}
   16f90:	e037883a 	mov	sp,fp
   16f94:	dfc00117 	ldw	ra,4(sp)
   16f98:	df000017 	ldw	fp,0(sp)
   16f9c:	dec00204 	addi	sp,sp,8
   16fa0:	f800283a 	ret

00016fa4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   16fa4:	defffc04 	addi	sp,sp,-16
   16fa8:	df000315 	stw	fp,12(sp)
   16fac:	df000304 	addi	fp,sp,12
   16fb0:	e13fff15 	stw	r4,-4(fp)
   16fb4:	e17ffe15 	stw	r5,-8(fp)
   16fb8:	e1bffd15 	stw	r6,-12(fp)
  return len;
   16fbc:	e0bffd17 	ldw	r2,-12(fp)
}
   16fc0:	e037883a 	mov	sp,fp
   16fc4:	df000017 	ldw	fp,0(sp)
   16fc8:	dec00104 	addi	sp,sp,4
   16fcc:	f800283a 	ret

00016fd0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   16fd0:	defffd04 	addi	sp,sp,-12
   16fd4:	df000215 	stw	fp,8(sp)
   16fd8:	df000204 	addi	fp,sp,8
   16fdc:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   16fe0:	0001883a 	nop
   16fe4:	e0bffe17 	ldw	r2,-8(fp)
   16fe8:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   16fec:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   16ff0:	10000226 	beq	r2,zero,16ffc <_exit+0x2c>
    ALT_SIM_FAIL();
   16ff4:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
   16ff8:	00000106 	br	17000 <_exit+0x30>
    ALT_SIM_PASS();
   16ffc:	002af0b0 	cmpltui	zero,zero,43970
}
   17000:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   17004:	003fff06 	br	17004 <_exit+0x34>

00017008 <alt_get_errno>:
{
   17008:	defffe04 	addi	sp,sp,-8
   1700c:	dfc00115 	stw	ra,4(sp)
   17010:	df000015 	stw	fp,0(sp)
   17014:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   17018:	d0a00917 	ldw	r2,-32732(gp)
   1701c:	10000326 	beq	r2,zero,1702c <alt_get_errno+0x24>
   17020:	d0a00917 	ldw	r2,-32732(gp)
   17024:	103ee83a 	callr	r2
   17028:	00000106 	br	17030 <alt_get_errno+0x28>
   1702c:	d0a73604 	addi	r2,gp,-25384
}
   17030:	e037883a 	mov	sp,fp
   17034:	dfc00117 	ldw	ra,4(sp)
   17038:	df000017 	ldw	fp,0(sp)
   1703c:	dec00204 	addi	sp,sp,8
   17040:	f800283a 	ret

00017044 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   17044:	defffb04 	addi	sp,sp,-20
   17048:	dfc00415 	stw	ra,16(sp)
   1704c:	df000315 	stw	fp,12(sp)
   17050:	df000304 	addi	fp,sp,12
   17054:	e13ffe15 	stw	r4,-8(fp)
   17058:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   1705c:	e0bffe17 	ldw	r2,-8(fp)
   17060:	10000916 	blt	r2,zero,17088 <fstat+0x44>
   17064:	e0fffe17 	ldw	r3,-8(fp)
   17068:	1805883a 	mov	r2,r3
   1706c:	1085883a 	add	r2,r2,r2
   17070:	10c5883a 	add	r2,r2,r3
   17074:	100490ba 	slli	r2,r2,2
   17078:	00c000b4 	movhi	r3,2
   1707c:	18ee2d04 	addi	r3,r3,-18252
   17080:	10c5883a 	add	r2,r2,r3
   17084:	00000106 	br	1708c <fstat+0x48>
   17088:	0005883a 	mov	r2,zero
   1708c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   17090:	e0bfff17 	ldw	r2,-4(fp)
   17094:	10001026 	beq	r2,zero,170d8 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   17098:	e0bfff17 	ldw	r2,-4(fp)
   1709c:	10800017 	ldw	r2,0(r2)
   170a0:	10800817 	ldw	r2,32(r2)
   170a4:	10000726 	beq	r2,zero,170c4 <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
   170a8:	e0bfff17 	ldw	r2,-4(fp)
   170ac:	10800017 	ldw	r2,0(r2)
   170b0:	10800817 	ldw	r2,32(r2)
   170b4:	e17ffd17 	ldw	r5,-12(fp)
   170b8:	e13fff17 	ldw	r4,-4(fp)
   170bc:	103ee83a 	callr	r2
   170c0:	00000a06 	br	170ec <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   170c4:	e0bffd17 	ldw	r2,-12(fp)
   170c8:	00c80004 	movi	r3,8192
   170cc:	10c00115 	stw	r3,4(r2)
      return 0;
   170d0:	0005883a 	mov	r2,zero
   170d4:	00000506 	br	170ec <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   170d8:	00170080 	call	17008 <alt_get_errno>
   170dc:	1007883a 	mov	r3,r2
   170e0:	00801444 	movi	r2,81
   170e4:	18800015 	stw	r2,0(r3)
    return -1;
   170e8:	00bfffc4 	movi	r2,-1
  }
}
   170ec:	e037883a 	mov	sp,fp
   170f0:	dfc00117 	ldw	ra,4(sp)
   170f4:	df000017 	ldw	fp,0(sp)
   170f8:	dec00204 	addi	sp,sp,8
   170fc:	f800283a 	ret

00017100 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
   17100:	deffff04 	addi	sp,sp,-4
   17104:	df000015 	stw	fp,0(sp)
   17108:	d839883a 	mov	fp,sp
  return 0;
   1710c:	0005883a 	mov	r2,zero
}
   17110:	e037883a 	mov	sp,fp
   17114:	df000017 	ldw	fp,0(sp)
   17118:	dec00104 	addi	sp,sp,4
   1711c:	f800283a 	ret

00017120 <alt_get_errno>:
{
   17120:	defffe04 	addi	sp,sp,-8
   17124:	dfc00115 	stw	ra,4(sp)
   17128:	df000015 	stw	fp,0(sp)
   1712c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   17130:	d0a00917 	ldw	r2,-32732(gp)
   17134:	10000326 	beq	r2,zero,17144 <alt_get_errno+0x24>
   17138:	d0a00917 	ldw	r2,-32732(gp)
   1713c:	103ee83a 	callr	r2
   17140:	00000106 	br	17148 <alt_get_errno+0x28>
   17144:	d0a73604 	addi	r2,gp,-25384
}
   17148:	e037883a 	mov	sp,fp
   1714c:	dfc00117 	ldw	ra,4(sp)
   17150:	df000017 	ldw	fp,0(sp)
   17154:	dec00204 	addi	sp,sp,8
   17158:	f800283a 	ret

0001715c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   1715c:	deffea04 	addi	sp,sp,-88
   17160:	dfc01515 	stw	ra,84(sp)
   17164:	df001415 	stw	fp,80(sp)
   17168:	df001404 	addi	fp,sp,80
   1716c:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   17170:	e0bfec17 	ldw	r2,-80(fp)
   17174:	10000916 	blt	r2,zero,1719c <isatty+0x40>
   17178:	e0ffec17 	ldw	r3,-80(fp)
   1717c:	1805883a 	mov	r2,r3
   17180:	1085883a 	add	r2,r2,r2
   17184:	10c5883a 	add	r2,r2,r3
   17188:	100490ba 	slli	r2,r2,2
   1718c:	00c000b4 	movhi	r3,2
   17190:	18ee2d04 	addi	r3,r3,-18252
   17194:	10c5883a 	add	r2,r2,r3
   17198:	00000106 	br	171a0 <isatty+0x44>
   1719c:	0005883a 	mov	r2,zero
   171a0:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   171a4:	e0bfff17 	ldw	r2,-4(fp)
   171a8:	10000e26 	beq	r2,zero,171e4 <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   171ac:	e0bfff17 	ldw	r2,-4(fp)
   171b0:	10800017 	ldw	r2,0(r2)
   171b4:	10800817 	ldw	r2,32(r2)
   171b8:	1000021e 	bne	r2,zero,171c4 <isatty+0x68>
    {
      return 1;
   171bc:	00800044 	movi	r2,1
   171c0:	00000d06 	br	171f8 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   171c4:	e0bfed04 	addi	r2,fp,-76
   171c8:	100b883a 	mov	r5,r2
   171cc:	e13fec17 	ldw	r4,-80(fp)
   171d0:	00170440 	call	17044 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   171d4:	e0bfee17 	ldw	r2,-72(fp)
   171d8:	10880020 	cmpeqi	r2,r2,8192
   171dc:	10803fcc 	andi	r2,r2,255
   171e0:	00000506 	br	171f8 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   171e4:	00171200 	call	17120 <alt_get_errno>
   171e8:	1007883a 	mov	r3,r2
   171ec:	00801444 	movi	r2,81
   171f0:	18800015 	stw	r2,0(r3)
    return 0;
   171f4:	0005883a 	mov	r2,zero
  }
}
   171f8:	e037883a 	mov	sp,fp
   171fc:	dfc00117 	ldw	ra,4(sp)
   17200:	df000017 	ldw	fp,0(sp)
   17204:	dec00204 	addi	sp,sp,8
   17208:	f800283a 	ret

0001720c <alt_get_errno>:
{
   1720c:	defffe04 	addi	sp,sp,-8
   17210:	dfc00115 	stw	ra,4(sp)
   17214:	df000015 	stw	fp,0(sp)
   17218:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   1721c:	d0a00917 	ldw	r2,-32732(gp)
   17220:	10000326 	beq	r2,zero,17230 <alt_get_errno+0x24>
   17224:	d0a00917 	ldw	r2,-32732(gp)
   17228:	103ee83a 	callr	r2
   1722c:	00000106 	br	17234 <alt_get_errno+0x28>
   17230:	d0a73604 	addi	r2,gp,-25384
}
   17234:	e037883a 	mov	sp,fp
   17238:	dfc00117 	ldw	ra,4(sp)
   1723c:	df000017 	ldw	fp,0(sp)
   17240:	dec00204 	addi	sp,sp,8
   17244:	f800283a 	ret

00017248 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
   17248:	defffb04 	addi	sp,sp,-20
   1724c:	dfc00415 	stw	ra,16(sp)
   17250:	df000315 	stw	fp,12(sp)
   17254:	df000304 	addi	fp,sp,12
   17258:	e13ffe15 	stw	r4,-8(fp)
   1725c:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
   17260:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
   17264:	e0bffe17 	ldw	r2,-8(fp)
   17268:	00802e16 	blt	zero,r2,17324 <kill+0xdc>
  {
    switch (sig)
   1726c:	e0bffd17 	ldw	r2,-12(fp)
   17270:	10800828 	cmpgeui	r2,r2,32
   17274:	1000281e 	bne	r2,zero,17318 <kill+0xd0>
   17278:	e0bffd17 	ldw	r2,-12(fp)
   1727c:	100690ba 	slli	r3,r2,2
   17280:	00800074 	movhi	r2,1
   17284:	1885883a 	add	r2,r3,r2
   17288:	109ca417 	ldw	r2,29328(r2)
   1728c:	1000683a 	jmp	r2
   17290:	00017338 	rdprs	zero,zero,1484
   17294:	00017318 	cmpnei	zero,zero,1484
   17298:	00017318 	cmpnei	zero,zero,1484
   1729c:	00017310 	cmplti	zero,zero,1484
   172a0:	00017310 	cmplti	zero,zero,1484
   172a4:	00017310 	cmplti	zero,zero,1484
   172a8:	00017310 	cmplti	zero,zero,1484
   172ac:	00017318 	cmpnei	zero,zero,1484
   172b0:	00017310 	cmplti	zero,zero,1484
   172b4:	00017310 	cmplti	zero,zero,1484
   172b8:	00017310 	cmplti	zero,zero,1484
   172bc:	00017310 	cmplti	zero,zero,1484
   172c0:	00017310 	cmplti	zero,zero,1484
   172c4:	00017310 	cmplti	zero,zero,1484
   172c8:	00017310 	cmplti	zero,zero,1484
   172cc:	00017310 	cmplti	zero,zero,1484
   172d0:	00017338 	rdprs	zero,zero,1484
   172d4:	00017318 	cmpnei	zero,zero,1484
   172d8:	00017318 	cmpnei	zero,zero,1484
   172dc:	00017318 	cmpnei	zero,zero,1484
   172e0:	00017338 	rdprs	zero,zero,1484
   172e4:	00017318 	cmpnei	zero,zero,1484
   172e8:	00017318 	cmpnei	zero,zero,1484
   172ec:	00017310 	cmplti	zero,zero,1484
   172f0:	00017310 	cmplti	zero,zero,1484
   172f4:	00017310 	cmplti	zero,zero,1484
   172f8:	00017310 	cmplti	zero,zero,1484
   172fc:	00017310 	cmplti	zero,zero,1484
   17300:	00017318 	cmpnei	zero,zero,1484
   17304:	00017318 	cmpnei	zero,zero,1484
   17308:	00017310 	cmplti	zero,zero,1484
   1730c:	00017310 	cmplti	zero,zero,1484
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
   17310:	0009883a 	mov	r4,zero
   17314:	0016fd00 	call	16fd0 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
   17318:	00800584 	movi	r2,22
   1731c:	e0bfff15 	stw	r2,-4(fp)
   17320:	00000606 	br	1733c <kill+0xf4>
    }
  }

  else if (pid > 0)
   17324:	e0bffe17 	ldw	r2,-8(fp)
   17328:	0080040e 	bge	zero,r2,1733c <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
   1732c:	008000c4 	movi	r2,3
   17330:	e0bfff15 	stw	r2,-4(fp)
   17334:	00000106 	br	1733c <kill+0xf4>
      break;
   17338:	0001883a 	nop
  }

  if (status)
   1733c:	e0bfff17 	ldw	r2,-4(fp)
   17340:	10000626 	beq	r2,zero,1735c <kill+0x114>
  {
    ALT_ERRNO = status;
   17344:	001720c0 	call	1720c <alt_get_errno>
   17348:	1007883a 	mov	r3,r2
   1734c:	e0bfff17 	ldw	r2,-4(fp)
   17350:	18800015 	stw	r2,0(r3)
    return -1;
   17354:	00bfffc4 	movi	r2,-1
   17358:	00000106 	br	17360 <kill+0x118>
  }

  return 0;
   1735c:	0005883a 	mov	r2,zero
}
   17360:	e037883a 	mov	sp,fp
   17364:	dfc00117 	ldw	ra,4(sp)
   17368:	df000017 	ldw	fp,0(sp)
   1736c:	dec00204 	addi	sp,sp,8
   17370:	f800283a 	ret

00017374 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   17374:	defffc04 	addi	sp,sp,-16
   17378:	df000315 	stw	fp,12(sp)
   1737c:	df000304 	addi	fp,sp,12
   17380:	e13fff15 	stw	r4,-4(fp)
   17384:	e17ffe15 	stw	r5,-8(fp)
   17388:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
   1738c:	e0fffe17 	ldw	r3,-8(fp)
   17390:	e0bfff17 	ldw	r2,-4(fp)
   17394:	18800c26 	beq	r3,r2,173c8 <alt_load_section+0x54>
  {
    while( to != end )
   17398:	00000806 	br	173bc <alt_load_section+0x48>
    {
      *to++ = *from++;
   1739c:	e0ffff17 	ldw	r3,-4(fp)
   173a0:	18800104 	addi	r2,r3,4
   173a4:	e0bfff15 	stw	r2,-4(fp)
   173a8:	e0bffe17 	ldw	r2,-8(fp)
   173ac:	11000104 	addi	r4,r2,4
   173b0:	e13ffe15 	stw	r4,-8(fp)
   173b4:	18c00017 	ldw	r3,0(r3)
   173b8:	10c00015 	stw	r3,0(r2)
    while( to != end )
   173bc:	e0fffe17 	ldw	r3,-8(fp)
   173c0:	e0bffd17 	ldw	r2,-12(fp)
   173c4:	18bff51e 	bne	r3,r2,1739c <alt_load_section+0x28>
    }
  }
}
   173c8:	0001883a 	nop
   173cc:	e037883a 	mov	sp,fp
   173d0:	df000017 	ldw	fp,0(sp)
   173d4:	dec00104 	addi	sp,sp,4
   173d8:	f800283a 	ret

000173dc <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   173dc:	defffe04 	addi	sp,sp,-8
   173e0:	dfc00115 	stw	ra,4(sp)
   173e4:	df000015 	stw	fp,0(sp)
   173e8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   173ec:	018000b4 	movhi	r6,2
   173f0:	31b2e104 	addi	r6,r6,-13436
   173f4:	014000b4 	movhi	r5,2
   173f8:	296bbd04 	addi	r5,r5,-20748
   173fc:	010000b4 	movhi	r4,2
   17400:	2132e104 	addi	r4,r4,-13436
   17404:	00173740 	call	17374 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   17408:	01800034 	movhi	r6,0
   1740c:	31808a04 	addi	r6,r6,552
   17410:	01400034 	movhi	r5,0
   17414:	29400804 	addi	r5,r5,32
   17418:	01000034 	movhi	r4,0
   1741c:	21000804 	addi	r4,r4,32
   17420:	00173740 	call	17374 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   17424:	018000b4 	movhi	r6,2
   17428:	31abbd04 	addi	r6,r6,-20748
   1742c:	014000b4 	movhi	r5,2
   17430:	29684b04 	addi	r5,r5,-24276
   17434:	010000b4 	movhi	r4,2
   17438:	21284b04 	addi	r4,r4,-24276
   1743c:	00173740 	call	17374 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   17440:	00192ac0 	call	192ac <alt_dcache_flush_all>
  alt_icache_flush_all();
   17444:	00195080 	call	19508 <alt_icache_flush_all>
}
   17448:	0001883a 	nop
   1744c:	e037883a 	mov	sp,fp
   17450:	dfc00117 	ldw	ra,4(sp)
   17454:	df000017 	ldw	fp,0(sp)
   17458:	dec00204 	addi	sp,sp,8
   1745c:	f800283a 	ret

00017460 <alt_get_errno>:
{
   17460:	defffe04 	addi	sp,sp,-8
   17464:	dfc00115 	stw	ra,4(sp)
   17468:	df000015 	stw	fp,0(sp)
   1746c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   17470:	d0a00917 	ldw	r2,-32732(gp)
   17474:	10000326 	beq	r2,zero,17484 <alt_get_errno+0x24>
   17478:	d0a00917 	ldw	r2,-32732(gp)
   1747c:	103ee83a 	callr	r2
   17480:	00000106 	br	17488 <alt_get_errno+0x28>
   17484:	d0a73604 	addi	r2,gp,-25384
}
   17488:	e037883a 	mov	sp,fp
   1748c:	dfc00117 	ldw	ra,4(sp)
   17490:	df000017 	ldw	fp,0(sp)
   17494:	dec00204 	addi	sp,sp,8
   17498:	f800283a 	ret

0001749c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   1749c:	defff904 	addi	sp,sp,-28
   174a0:	dfc00615 	stw	ra,24(sp)
   174a4:	df000515 	stw	fp,20(sp)
   174a8:	df000504 	addi	fp,sp,20
   174ac:	e13ffd15 	stw	r4,-12(fp)
   174b0:	e17ffc15 	stw	r5,-16(fp)
   174b4:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   174b8:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   174bc:	e0bffd17 	ldw	r2,-12(fp)
   174c0:	10000916 	blt	r2,zero,174e8 <lseek+0x4c>
   174c4:	e0fffd17 	ldw	r3,-12(fp)
   174c8:	1805883a 	mov	r2,r3
   174cc:	1085883a 	add	r2,r2,r2
   174d0:	10c5883a 	add	r2,r2,r3
   174d4:	100490ba 	slli	r2,r2,2
   174d8:	00c000b4 	movhi	r3,2
   174dc:	18ee2d04 	addi	r3,r3,-18252
   174e0:	10c5883a 	add	r2,r2,r3
   174e4:	00000106 	br	174ec <lseek+0x50>
   174e8:	0005883a 	mov	r2,zero
   174ec:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
   174f0:	e0bffe17 	ldw	r2,-8(fp)
   174f4:	10001026 	beq	r2,zero,17538 <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   174f8:	e0bffe17 	ldw	r2,-8(fp)
   174fc:	10800017 	ldw	r2,0(r2)
   17500:	10800717 	ldw	r2,28(r2)
   17504:	10000926 	beq	r2,zero,1752c <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   17508:	e0bffe17 	ldw	r2,-8(fp)
   1750c:	10800017 	ldw	r2,0(r2)
   17510:	10800717 	ldw	r2,28(r2)
   17514:	e1bffb17 	ldw	r6,-20(fp)
   17518:	e17ffc17 	ldw	r5,-16(fp)
   1751c:	e13ffe17 	ldw	r4,-8(fp)
   17520:	103ee83a 	callr	r2
   17524:	e0bfff15 	stw	r2,-4(fp)
   17528:	00000506 	br	17540 <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   1752c:	00bfde84 	movi	r2,-134
   17530:	e0bfff15 	stw	r2,-4(fp)
   17534:	00000206 	br	17540 <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
   17538:	00bfebc4 	movi	r2,-81
   1753c:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
   17540:	e0bfff17 	ldw	r2,-4(fp)
   17544:	1000070e 	bge	r2,zero,17564 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
   17548:	00174600 	call	17460 <alt_get_errno>
   1754c:	1007883a 	mov	r3,r2
   17550:	e0bfff17 	ldw	r2,-4(fp)
   17554:	0085c83a 	sub	r2,zero,r2
   17558:	18800015 	stw	r2,0(r3)
    rc = -1;
   1755c:	00bfffc4 	movi	r2,-1
   17560:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
   17564:	e0bfff17 	ldw	r2,-4(fp)
}
   17568:	e037883a 	mov	sp,fp
   1756c:	dfc00117 	ldw	ra,4(sp)
   17570:	df000017 	ldw	fp,0(sp)
   17574:	dec00204 	addi	sp,sp,8
   17578:	f800283a 	ret

0001757c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   1757c:	defffd04 	addi	sp,sp,-12
   17580:	dfc00215 	stw	ra,8(sp)
   17584:	df000115 	stw	fp,4(sp)
   17588:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   1758c:	0009883a 	mov	r4,zero
   17590:	0017c7c0 	call	17c7c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   17594:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   17598:	0017cb80 	call	17cb8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   1759c:	018000b4 	movhi	r6,2
   175a0:	31aba004 	addi	r6,r6,-20864
   175a4:	014000b4 	movhi	r5,2
   175a8:	296ba004 	addi	r5,r5,-20864
   175ac:	010000b4 	movhi	r4,2
   175b0:	212ba004 	addi	r4,r4,-20864
   175b4:	00195fc0 	call	195fc <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   175b8:	00193b00 	call	193b0 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   175bc:	010000b4 	movhi	r4,2
   175c0:	21250504 	addi	r4,r4,-27628
   175c4:	0019ebc0 	call	19ebc <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   175c8:	d0a73817 	ldw	r2,-25376(gp)
   175cc:	d0e73917 	ldw	r3,-25372(gp)
   175d0:	d1273a17 	ldw	r4,-25368(gp)
   175d4:	200d883a 	mov	r6,r4
   175d8:	180b883a 	mov	r5,r3
   175dc:	1009883a 	mov	r4,r2
   175e0:	0001e0c0 	call	1e0c <main>
   175e4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   175e8:	01000044 	movi	r4,1
   175ec:	0016ec80 	call	16ec8 <close>
  exit (result);
   175f0:	e13fff17 	ldw	r4,-4(fp)
   175f4:	0019ed00 	call	19ed0 <exit>

000175f8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   175f8:	defffe04 	addi	sp,sp,-8
   175fc:	df000115 	stw	fp,4(sp)
   17600:	df000104 	addi	fp,sp,4
   17604:	e13fff15 	stw	r4,-4(fp)
}
   17608:	0001883a 	nop
   1760c:	e037883a 	mov	sp,fp
   17610:	df000017 	ldw	fp,0(sp)
   17614:	dec00104 	addi	sp,sp,4
   17618:	f800283a 	ret

0001761c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   1761c:	defffe04 	addi	sp,sp,-8
   17620:	df000115 	stw	fp,4(sp)
   17624:	df000104 	addi	fp,sp,4
   17628:	e13fff15 	stw	r4,-4(fp)
}
   1762c:	0001883a 	nop
   17630:	e037883a 	mov	sp,fp
   17634:	df000017 	ldw	fp,0(sp)
   17638:	dec00104 	addi	sp,sp,4
   1763c:	f800283a 	ret

00017640 <alt_printf>:
/* 
 * ALT printf function 
 */
void 
alt_printf(const char* fmt, ... )
{
   17640:	defff204 	addi	sp,sp,-56
   17644:	dfc00a15 	stw	ra,40(sp)
   17648:	df000915 	stw	fp,36(sp)
   1764c:	df000904 	addi	fp,sp,36
   17650:	e13ff715 	stw	r4,-36(fp)
   17654:	e1400215 	stw	r5,8(fp)
   17658:	e1800315 	stw	r6,12(fp)
   1765c:	e1c00415 	stw	r7,16(fp)
	va_list args;
	va_start(args, fmt);
   17660:	e0800204 	addi	r2,fp,8
   17664:	e0bff815 	stw	r2,-32(fp)
    const char *w;
    char c;

    /* Process format string. */
    w = fmt;
   17668:	e0bff717 	ldw	r2,-36(fp)
   1766c:	e0bfff15 	stw	r2,-4(fp)
    while ((c = *w++) != 0)
   17670:	00006f06 	br	17830 <alt_printf+0x1f0>
    {
        /* If not a format escape character, just print  */
        /* character.  Otherwise, process format string. */
        if (c != '%')
   17674:	e0bffec7 	ldb	r2,-5(fp)
   17678:	10800960 	cmpeqi	r2,r2,37
   1767c:	1000041e 	bne	r2,zero,17690 <alt_printf+0x50>
        {
            alt_putchar(c);
   17680:	e0bffec7 	ldb	r2,-5(fp)
   17684:	1009883a 	mov	r4,r2
   17688:	001786c0 	call	1786c <alt_putchar>
   1768c:	00006806 	br	17830 <alt_printf+0x1f0>
        }
        else
        {
            /* Get format character.  If none     */
            /* available, processing is complete. */
            if ((c = *w++) != 0)
   17690:	e0bfff17 	ldw	r2,-4(fp)
   17694:	10c00044 	addi	r3,r2,1
   17698:	e0ffff15 	stw	r3,-4(fp)
   1769c:	10800003 	ldbu	r2,0(r2)
   176a0:	e0bffec5 	stb	r2,-5(fp)
   176a4:	e0bffec7 	ldb	r2,-5(fp)
   176a8:	10006926 	beq	r2,zero,17850 <alt_printf+0x210>
            {
                if (c == '%')
   176ac:	e0bffec7 	ldb	r2,-5(fp)
   176b0:	10800958 	cmpnei	r2,r2,37
   176b4:	1000041e 	bne	r2,zero,176c8 <alt_printf+0x88>
                {
                    /* Process "%" escape sequence. */
                    alt_putchar(c);
   176b8:	e0bffec7 	ldb	r2,-5(fp)
   176bc:	1009883a 	mov	r4,r2
   176c0:	001786c0 	call	1786c <alt_putchar>
   176c4:	00005a06 	br	17830 <alt_printf+0x1f0>
                } 
                else if (c == 'c')
   176c8:	e0bffec7 	ldb	r2,-5(fp)
   176cc:	108018d8 	cmpnei	r2,r2,99
   176d0:	1000081e 	bne	r2,zero,176f4 <alt_printf+0xb4>
                {
                    int v = va_arg(args, int);
   176d4:	e0bff817 	ldw	r2,-32(fp)
   176d8:	10c00104 	addi	r3,r2,4
   176dc:	e0fff815 	stw	r3,-32(fp)
   176e0:	10800017 	ldw	r2,0(r2)
   176e4:	e0bff915 	stw	r2,-28(fp)
                    alt_putchar(v);
   176e8:	e13ff917 	ldw	r4,-28(fp)
   176ec:	001786c0 	call	1786c <alt_putchar>
   176f0:	00004f06 	br	17830 <alt_printf+0x1f0>
                }
                else if (c == 'x')
   176f4:	e0bffec7 	ldb	r2,-5(fp)
   176f8:	10801e18 	cmpnei	r2,r2,120
   176fc:	1000341e 	bne	r2,zero,177d0 <alt_printf+0x190>
                {
                    /* Process hexadecimal number format. */
                    unsigned long v = va_arg(args, unsigned long);
   17700:	e0bff817 	ldw	r2,-32(fp)
   17704:	10c00104 	addi	r3,r2,4
   17708:	e0fff815 	stw	r3,-32(fp)
   1770c:	10800017 	ldw	r2,0(r2)
   17710:	e0bffb15 	stw	r2,-20(fp)
                    unsigned long digit;
                    int digit_shift;

                    /* If the number value is zero, just print and continue. */
                    if (v == 0)
   17714:	e0bffb17 	ldw	r2,-20(fp)
   17718:	1000031e 	bne	r2,zero,17728 <alt_printf+0xe8>
                    {
                        alt_putchar('0');
   1771c:	01000c04 	movi	r4,48
   17720:	001786c0 	call	1786c <alt_putchar>
                        continue;
   17724:	00004206 	br	17830 <alt_printf+0x1f0>
                    }

                    /* Find first non-zero digit. */
                    digit_shift = 28;
   17728:	00800704 	movi	r2,28
   1772c:	e0bffd15 	stw	r2,-12(fp)
                    while (!(v & (0xF << digit_shift)))
   17730:	00000306 	br	17740 <alt_printf+0x100>
                        digit_shift -= 4;
   17734:	e0bffd17 	ldw	r2,-12(fp)
   17738:	10bfff04 	addi	r2,r2,-4
   1773c:	e0bffd15 	stw	r2,-12(fp)
                    while (!(v & (0xF << digit_shift)))
   17740:	00c003c4 	movi	r3,15
   17744:	e0bffd17 	ldw	r2,-12(fp)
   17748:	1884983a 	sll	r2,r3,r2
   1774c:	1007883a 	mov	r3,r2
   17750:	e0bffb17 	ldw	r2,-20(fp)
   17754:	1884703a 	and	r2,r3,r2
   17758:	103ff626 	beq	r2,zero,17734 <alt_printf+0xf4>

                    /* Print digits. */
                    for (; digit_shift >= 0; digit_shift -= 4)
   1775c:	00001906 	br	177c4 <alt_printf+0x184>
                    {
                        digit = (v & (0xF << digit_shift)) >> digit_shift;
   17760:	00c003c4 	movi	r3,15
   17764:	e0bffd17 	ldw	r2,-12(fp)
   17768:	1884983a 	sll	r2,r3,r2
   1776c:	1007883a 	mov	r3,r2
   17770:	e0bffb17 	ldw	r2,-20(fp)
   17774:	1886703a 	and	r3,r3,r2
   17778:	e0bffd17 	ldw	r2,-12(fp)
   1777c:	1884d83a 	srl	r2,r3,r2
   17780:	e0bffa15 	stw	r2,-24(fp)
                        if (digit <= 9)
   17784:	e0bffa17 	ldw	r2,-24(fp)
   17788:	108002a8 	cmpgeui	r2,r2,10
   1778c:	1000041e 	bne	r2,zero,177a0 <alt_printf+0x160>
                            c = '0' + digit;
   17790:	e0bffa17 	ldw	r2,-24(fp)
   17794:	10800c04 	addi	r2,r2,48
   17798:	e0bffec5 	stb	r2,-5(fp)
   1779c:	00000306 	br	177ac <alt_printf+0x16c>
                        else
                            c = 'a' + digit - 10;
   177a0:	e0bffa17 	ldw	r2,-24(fp)
   177a4:	108015c4 	addi	r2,r2,87
   177a8:	e0bffec5 	stb	r2,-5(fp)
                        alt_putchar(c);
   177ac:	e0bffec7 	ldb	r2,-5(fp)
   177b0:	1009883a 	mov	r4,r2
   177b4:	001786c0 	call	1786c <alt_putchar>
                    for (; digit_shift >= 0; digit_shift -= 4)
   177b8:	e0bffd17 	ldw	r2,-12(fp)
   177bc:	10bfff04 	addi	r2,r2,-4
   177c0:	e0bffd15 	stw	r2,-12(fp)
   177c4:	e0bffd17 	ldw	r2,-12(fp)
   177c8:	103fe50e 	bge	r2,zero,17760 <alt_printf+0x120>
   177cc:	00001806 	br	17830 <alt_printf+0x1f0>
                    }
                }
                else if (c == 's')
   177d0:	e0bffec7 	ldb	r2,-5(fp)
   177d4:	10801cd8 	cmpnei	r2,r2,115
   177d8:	1000151e 	bne	r2,zero,17830 <alt_printf+0x1f0>
                {
                    /* Process string format. */
                    char *s = va_arg(args, char *);
   177dc:	e0bff817 	ldw	r2,-32(fp)
   177e0:	10c00104 	addi	r3,r2,4
   177e4:	e0fff815 	stw	r3,-32(fp)
   177e8:	10800017 	ldw	r2,0(r2)
   177ec:	e0bffc15 	stw	r2,-16(fp)

                    while(*s)
   177f0:	00000906 	br	17818 <alt_printf+0x1d8>
                      alt_putchar(*s++);
   177f4:	e0bffc17 	ldw	r2,-16(fp)
   177f8:	10c00044 	addi	r3,r2,1
   177fc:	e0fffc15 	stw	r3,-16(fp)
   17800:	10800003 	ldbu	r2,0(r2)
   17804:	10803fcc 	andi	r2,r2,255
   17808:	1080201c 	xori	r2,r2,128
   1780c:	10bfe004 	addi	r2,r2,-128
   17810:	1009883a 	mov	r4,r2
   17814:	001786c0 	call	1786c <alt_putchar>
                    while(*s)
   17818:	e0bffc17 	ldw	r2,-16(fp)
   1781c:	10800003 	ldbu	r2,0(r2)
   17820:	10803fcc 	andi	r2,r2,255
   17824:	1080201c 	xori	r2,r2,128
   17828:	10bfe004 	addi	r2,r2,-128
   1782c:	103ff11e 	bne	r2,zero,177f4 <alt_printf+0x1b4>
    while ((c = *w++) != 0)
   17830:	e0bfff17 	ldw	r2,-4(fp)
   17834:	10c00044 	addi	r3,r2,1
   17838:	e0ffff15 	stw	r3,-4(fp)
   1783c:	10800003 	ldbu	r2,0(r2)
   17840:	e0bffec5 	stb	r2,-5(fp)
   17844:	e0bffec7 	ldb	r2,-5(fp)
   17848:	103f8a1e 	bne	r2,zero,17674 <alt_printf+0x34>
        }
    }
#ifdef ALT_SEMIHOSTING
    alt_putbufflush();
#endif
}
   1784c:	00000106 	br	17854 <alt_printf+0x214>
                break;
   17850:	0001883a 	nop
}
   17854:	0001883a 	nop
   17858:	e037883a 	mov	sp,fp
   1785c:	dfc00117 	ldw	ra,4(sp)
   17860:	df000017 	ldw	fp,0(sp)
   17864:	dec00504 	addi	sp,sp,20
   17868:	f800283a 	ret

0001786c <alt_putchar>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided putchar() routine.
 */
int 
alt_putchar(int c)
{
   1786c:	defffd04 	addi	sp,sp,-12
   17870:	dfc00215 	stw	ra,8(sp)
   17874:	df000115 	stw	fp,4(sp)
   17878:	df000104 	addi	fp,sp,4
   1787c:	e13fff15 	stw	r4,-4(fp)
    if (ALT_DRIVER_WRITE(ALT_STDOUT_DEV, &c1, 1, 0) == -1) {
        return -1;
    }
    return c;
#else
    return putchar(c);
   17880:	e13fff17 	ldw	r4,-4(fp)
   17884:	000cf900 	call	cf90 <putchar>
#endif
#endif
}
   17888:	e037883a 	mov	sp,fp
   1788c:	dfc00117 	ldw	ra,4(sp)
   17890:	df000017 	ldw	fp,0(sp)
   17894:	dec00204 	addi	sp,sp,8
   17898:	f800283a 	ret

0001789c <alt_get_errno>:
{
   1789c:	defffe04 	addi	sp,sp,-8
   178a0:	dfc00115 	stw	ra,4(sp)
   178a4:	df000015 	stw	fp,0(sp)
   178a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   178ac:	d0a00917 	ldw	r2,-32732(gp)
   178b0:	10000326 	beq	r2,zero,178c0 <alt_get_errno+0x24>
   178b4:	d0a00917 	ldw	r2,-32732(gp)
   178b8:	103ee83a 	callr	r2
   178bc:	00000106 	br	178c4 <alt_get_errno+0x28>
   178c0:	d0a73604 	addi	r2,gp,-25384
}
   178c4:	e037883a 	mov	sp,fp
   178c8:	dfc00117 	ldw	ra,4(sp)
   178cc:	df000017 	ldw	fp,0(sp)
   178d0:	dec00204 	addi	sp,sp,8
   178d4:	f800283a 	ret

000178d8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   178d8:	defff904 	addi	sp,sp,-28
   178dc:	dfc00615 	stw	ra,24(sp)
   178e0:	df000515 	stw	fp,20(sp)
   178e4:	df000504 	addi	fp,sp,20
   178e8:	e13ffd15 	stw	r4,-12(fp)
   178ec:	e17ffc15 	stw	r5,-16(fp)
   178f0:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   178f4:	e0bffd17 	ldw	r2,-12(fp)
   178f8:	10000916 	blt	r2,zero,17920 <read+0x48>
   178fc:	e0fffd17 	ldw	r3,-12(fp)
   17900:	1805883a 	mov	r2,r3
   17904:	1085883a 	add	r2,r2,r2
   17908:	10c5883a 	add	r2,r2,r3
   1790c:	100490ba 	slli	r2,r2,2
   17910:	00c000b4 	movhi	r3,2
   17914:	18ee2d04 	addi	r3,r3,-18252
   17918:	10c5883a 	add	r2,r2,r3
   1791c:	00000106 	br	17924 <read+0x4c>
   17920:	0005883a 	mov	r2,zero
   17924:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   17928:	e0bfff17 	ldw	r2,-4(fp)
   1792c:	10002226 	beq	r2,zero,179b8 <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   17930:	e0bfff17 	ldw	r2,-4(fp)
   17934:	10800217 	ldw	r2,8(r2)
   17938:	108000cc 	andi	r2,r2,3
   1793c:	10800060 	cmpeqi	r2,r2,1
   17940:	1000181e 	bne	r2,zero,179a4 <read+0xcc>
        (fd->dev->read))
   17944:	e0bfff17 	ldw	r2,-4(fp)
   17948:	10800017 	ldw	r2,0(r2)
   1794c:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   17950:	10001426 	beq	r2,zero,179a4 <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   17954:	e0bfff17 	ldw	r2,-4(fp)
   17958:	10800017 	ldw	r2,0(r2)
   1795c:	10800517 	ldw	r2,20(r2)
   17960:	e0fffb17 	ldw	r3,-20(fp)
   17964:	180d883a 	mov	r6,r3
   17968:	e17ffc17 	ldw	r5,-16(fp)
   1796c:	e13fff17 	ldw	r4,-4(fp)
   17970:	103ee83a 	callr	r2
   17974:	e0bffe15 	stw	r2,-8(fp)
   17978:	e0bffe17 	ldw	r2,-8(fp)
   1797c:	1000070e 	bge	r2,zero,1799c <read+0xc4>
        {
          ALT_ERRNO = -rval;
   17980:	001789c0 	call	1789c <alt_get_errno>
   17984:	1007883a 	mov	r3,r2
   17988:	e0bffe17 	ldw	r2,-8(fp)
   1798c:	0085c83a 	sub	r2,zero,r2
   17990:	18800015 	stw	r2,0(r3)
          return -1;
   17994:	00bfffc4 	movi	r2,-1
   17998:	00000c06 	br	179cc <read+0xf4>
        }
        return rval;
   1799c:	e0bffe17 	ldw	r2,-8(fp)
   179a0:	00000a06 	br	179cc <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
   179a4:	001789c0 	call	1789c <alt_get_errno>
   179a8:	1007883a 	mov	r3,r2
   179ac:	00800344 	movi	r2,13
   179b0:	18800015 	stw	r2,0(r3)
   179b4:	00000406 	br	179c8 <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   179b8:	001789c0 	call	1789c <alt_get_errno>
   179bc:	1007883a 	mov	r3,r2
   179c0:	00801444 	movi	r2,81
   179c4:	18800015 	stw	r2,0(r3)
  }
  return -1;
   179c8:	00bfffc4 	movi	r2,-1
}
   179cc:	e037883a 	mov	sp,fp
   179d0:	dfc00117 	ldw	ra,4(sp)
   179d4:	df000017 	ldw	fp,0(sp)
   179d8:	dec00204 	addi	sp,sp,8
   179dc:	f800283a 	ret

000179e0 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   179e0:	defffe04 	addi	sp,sp,-8
   179e4:	df000115 	stw	fp,4(sp)
   179e8:	df000104 	addi	fp,sp,4
   179ec:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   179f0:	e0bfff17 	ldw	r2,-4(fp)
   179f4:	108000d0 	cmplti	r2,r2,3
   179f8:	1000101e 	bne	r2,zero,17a3c <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
   179fc:	e0ffff17 	ldw	r3,-4(fp)
   17a00:	1805883a 	mov	r2,r3
   17a04:	1085883a 	add	r2,r2,r2
   17a08:	10c5883a 	add	r2,r2,r3
   17a0c:	100490ba 	slli	r2,r2,2
   17a10:	00c000b4 	movhi	r3,2
   17a14:	10c7883a 	add	r3,r2,r3
   17a18:	182e2f15 	stw	zero,-18244(r3)
    alt_fd_list[fd].dev      = 0;
   17a1c:	e0ffff17 	ldw	r3,-4(fp)
   17a20:	1805883a 	mov	r2,r3
   17a24:	1085883a 	add	r2,r2,r2
   17a28:	10c5883a 	add	r2,r2,r3
   17a2c:	100490ba 	slli	r2,r2,2
   17a30:	00c000b4 	movhi	r3,2
   17a34:	10c7883a 	add	r3,r2,r3
   17a38:	182e2d15 	stw	zero,-18252(r3)
  }
}
   17a3c:	0001883a 	nop
   17a40:	e037883a 	mov	sp,fp
   17a44:	df000017 	ldw	fp,0(sp)
   17a48:	dec00104 	addi	sp,sp,4
   17a4c:	f800283a 	ret

00017a50 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   17a50:	defff904 	addi	sp,sp,-28
   17a54:	df000615 	stw	fp,24(sp)
   17a58:	df000604 	addi	fp,sp,24
   17a5c:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
   17a60:	0005303a 	rdctl	r2,status
   17a64:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   17a68:	e0fffd17 	ldw	r3,-12(fp)
   17a6c:	00bfff84 	movi	r2,-2
   17a70:	1884703a 	and	r2,r3,r2
   17a74:	1001703a 	wrctl	status,r2
  return context;
   17a78:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   17a7c:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   17a80:	d0a00a17 	ldw	r2,-32728(gp)
   17a84:	10c000c4 	addi	r3,r2,3
   17a88:	00bfff04 	movi	r2,-4
   17a8c:	1884703a 	and	r2,r3,r2
   17a90:	d0a00a15 	stw	r2,-32728(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   17a94:	d0e00a17 	ldw	r3,-32728(gp)
   17a98:	e0bffa17 	ldw	r2,-24(fp)
   17a9c:	1887883a 	add	r3,r3,r2
   17aa0:	00820034 	movhi	r2,2048
   17aa4:	10800004 	addi	r2,r2,0
   17aa8:	10c0072e 	bgeu	r2,r3,17ac8 <sbrk+0x78>
   17aac:	e0bfff17 	ldw	r2,-4(fp)
   17ab0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   17ab4:	e0bffc17 	ldw	r2,-16(fp)
   17ab8:	1001703a 	wrctl	status,r2
}
   17abc:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   17ac0:	00bfffc4 	movi	r2,-1
   17ac4:	00000c06 	br	17af8 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   17ac8:	d0a00a17 	ldw	r2,-32728(gp)
   17acc:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
   17ad0:	d0e00a17 	ldw	r3,-32728(gp)
   17ad4:	e0bffa17 	ldw	r2,-24(fp)
   17ad8:	1885883a 	add	r2,r3,r2
   17adc:	d0a00a15 	stw	r2,-32728(gp)
   17ae0:	e0bfff17 	ldw	r2,-4(fp)
   17ae4:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   17ae8:	e0bffb17 	ldw	r2,-20(fp)
   17aec:	1001703a 	wrctl	status,r2
}
   17af0:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   17af4:	e0bffe17 	ldw	r2,-8(fp)
} 
   17af8:	e037883a 	mov	sp,fp
   17afc:	df000017 	ldw	fp,0(sp)
   17b00:	dec00104 	addi	sp,sp,4
   17b04:	f800283a 	ret

00017b08 <alt_get_errno>:
{
   17b08:	defffe04 	addi	sp,sp,-8
   17b0c:	dfc00115 	stw	ra,4(sp)
   17b10:	df000015 	stw	fp,0(sp)
   17b14:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   17b18:	d0a00917 	ldw	r2,-32732(gp)
   17b1c:	10000326 	beq	r2,zero,17b2c <alt_get_errno+0x24>
   17b20:	d0a00917 	ldw	r2,-32732(gp)
   17b24:	103ee83a 	callr	r2
   17b28:	00000106 	br	17b30 <alt_get_errno+0x28>
   17b2c:	d0a73604 	addi	r2,gp,-25384
}
   17b30:	e037883a 	mov	sp,fp
   17b34:	dfc00117 	ldw	ra,4(sp)
   17b38:	df000017 	ldw	fp,0(sp)
   17b3c:	dec00204 	addi	sp,sp,8
   17b40:	f800283a 	ret

00017b44 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   17b44:	defff904 	addi	sp,sp,-28
   17b48:	dfc00615 	stw	ra,24(sp)
   17b4c:	df000515 	stw	fp,20(sp)
   17b50:	df000504 	addi	fp,sp,20
   17b54:	e13ffd15 	stw	r4,-12(fp)
   17b58:	e17ffc15 	stw	r5,-16(fp)
   17b5c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   17b60:	e0bffd17 	ldw	r2,-12(fp)
   17b64:	10000916 	blt	r2,zero,17b8c <write+0x48>
   17b68:	e0fffd17 	ldw	r3,-12(fp)
   17b6c:	1805883a 	mov	r2,r3
   17b70:	1085883a 	add	r2,r2,r2
   17b74:	10c5883a 	add	r2,r2,r3
   17b78:	100490ba 	slli	r2,r2,2
   17b7c:	00c000b4 	movhi	r3,2
   17b80:	18ee2d04 	addi	r3,r3,-18252
   17b84:	10c5883a 	add	r2,r2,r3
   17b88:	00000106 	br	17b90 <write+0x4c>
   17b8c:	0005883a 	mov	r2,zero
   17b90:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   17b94:	e0bfff17 	ldw	r2,-4(fp)
   17b98:	10002126 	beq	r2,zero,17c20 <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   17b9c:	e0bfff17 	ldw	r2,-4(fp)
   17ba0:	10800217 	ldw	r2,8(r2)
   17ba4:	108000cc 	andi	r2,r2,3
   17ba8:	10001826 	beq	r2,zero,17c0c <write+0xc8>
   17bac:	e0bfff17 	ldw	r2,-4(fp)
   17bb0:	10800017 	ldw	r2,0(r2)
   17bb4:	10800617 	ldw	r2,24(r2)
   17bb8:	10001426 	beq	r2,zero,17c0c <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   17bbc:	e0bfff17 	ldw	r2,-4(fp)
   17bc0:	10800017 	ldw	r2,0(r2)
   17bc4:	10800617 	ldw	r2,24(r2)
   17bc8:	e0fffb17 	ldw	r3,-20(fp)
   17bcc:	180d883a 	mov	r6,r3
   17bd0:	e17ffc17 	ldw	r5,-16(fp)
   17bd4:	e13fff17 	ldw	r4,-4(fp)
   17bd8:	103ee83a 	callr	r2
   17bdc:	e0bffe15 	stw	r2,-8(fp)
   17be0:	e0bffe17 	ldw	r2,-8(fp)
   17be4:	1000070e 	bge	r2,zero,17c04 <write+0xc0>
      {
        ALT_ERRNO = -rval;
   17be8:	0017b080 	call	17b08 <alt_get_errno>
   17bec:	1007883a 	mov	r3,r2
   17bf0:	e0bffe17 	ldw	r2,-8(fp)
   17bf4:	0085c83a 	sub	r2,zero,r2
   17bf8:	18800015 	stw	r2,0(r3)
        return -1;
   17bfc:	00bfffc4 	movi	r2,-1
   17c00:	00000c06 	br	17c34 <write+0xf0>
      }
      return rval;
   17c04:	e0bffe17 	ldw	r2,-8(fp)
   17c08:	00000a06 	br	17c34 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
   17c0c:	0017b080 	call	17b08 <alt_get_errno>
   17c10:	1007883a 	mov	r3,r2
   17c14:	00800344 	movi	r2,13
   17c18:	18800015 	stw	r2,0(r3)
   17c1c:	00000406 	br	17c30 <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   17c20:	0017b080 	call	17b08 <alt_get_errno>
   17c24:	1007883a 	mov	r3,r2
   17c28:	00801444 	movi	r2,81
   17c2c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   17c30:	00bfffc4 	movi	r2,-1
}
   17c34:	e037883a 	mov	sp,fp
   17c38:	dfc00117 	ldw	ra,4(sp)
   17c3c:	df000017 	ldw	fp,0(sp)
   17c40:	dec00204 	addi	sp,sp,8
   17c44:	f800283a 	ret

00017c48 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   17c48:	defffd04 	addi	sp,sp,-12
   17c4c:	dfc00215 	stw	ra,8(sp)
   17c50:	df000115 	stw	fp,4(sp)
   17c54:	df000104 	addi	fp,sp,4
   17c58:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   17c5c:	d1600604 	addi	r5,gp,-32744
   17c60:	e13fff17 	ldw	r4,-4(fp)
   17c64:	00193080 	call	19308 <alt_dev_llist_insert>
}
   17c68:	e037883a 	mov	sp,fp
   17c6c:	dfc00117 	ldw	ra,4(sp)
   17c70:	df000017 	ldw	fp,0(sp)
   17c74:	dec00204 	addi	sp,sp,8
   17c78:	f800283a 	ret

00017c7c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   17c7c:	defffd04 	addi	sp,sp,-12
   17c80:	dfc00215 	stw	ra,8(sp)
   17c84:	df000115 	stw	fp,4(sp)
   17c88:	df000104 	addi	fp,sp,4
   17c8c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2, Nios2);
   17c90:	0019c400 	call	19c40 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   17c94:	00800044 	movi	r2,1
   17c98:	1001703a 	wrctl	status,r2
}
   17c9c:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
   17ca0:	0001883a 	nop
   17ca4:	e037883a 	mov	sp,fp
   17ca8:	dfc00117 	ldw	ra,4(sp)
   17cac:	df000017 	ldw	fp,0(sp)
   17cb0:	dec00204 	addi	sp,sp,8
   17cb4:	f800283a 	ret

00017cb8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   17cb8:	defffe04 	addi	sp,sp,-8
   17cbc:	dfc00115 	stw	ra,4(sp)
   17cc0:	df000015 	stw	fp,0(sp)
   17cc4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER, Interval_Timer);
   17cc8:	01c00204 	movi	r7,8
   17ccc:	01800144 	movi	r6,5
   17cd0:	000b883a 	mov	r5,zero
   17cd4:	013fc834 	movhi	r4,65312
   17cd8:	21080004 	addi	r4,r4,8192
   17cdc:	00188440 	call	18844 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER_2, Interval_Timer_2);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, JTAG_UART);
   17ce0:	01800104 	movi	r6,4
   17ce4:	000b883a 	mov	r5,zero
   17ce8:	010000b4 	movhi	r4,2
   17cec:	212e9704 	addi	r4,r4,-17828
   17cf0:	0017ebc0 	call	17ebc <altera_avalon_jtag_uart_init>
   17cf4:	010000b4 	movhi	r4,2
   17cf8:	212e8d04 	addi	r4,r4,-17868
   17cfc:	0017c480 	call	17c48 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, SysID);
   17d00:	0001883a 	nop
    ALTERA_UP_AVALON_AUDIO_AND_VIDEO_CONFIG_INIT ( AV_CONFIG, AV_Config);
   17d04:	010000b4 	movhi	r4,2
   17d08:	2132a504 	addi	r4,r4,-13676
   17d0c:	0017c480 	call	17c48 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_INIT ( AUDIO_SUBSYSTEM_AUDIO, Audio_Subsystem_Audio);
   17d10:	010000b4 	movhi	r4,2
   17d14:	2132b104 	addi	r4,r4,-13628
   17d18:	0017c480 	call	17c48 <alt_dev_reg>
    ALTERA_UP_AVALON_CHARACTER_LCD_INIT ( CHAR_LCD_16X2, Char_LCD_16x2);
   17d1c:	010000b4 	movhi	r4,2
   17d20:	2132bd04 	addi	r4,r4,-13580
   17d24:	00189740 	call	18974 <alt_up_character_lcd_init>
   17d28:	010000b4 	movhi	r4,2
   17d2c:	2132bd04 	addi	r4,r4,-13580
   17d30:	0017c480 	call	17c48 <alt_dev_reg>
    ALTERA_UP_AVALON_RS232_INIT ( SERIAL_PORT, Serial_Port);
   17d34:	010000b4 	movhi	r4,2
   17d38:	2132c804 	addi	r4,r4,-13536
   17d3c:	0017c480 	call	17c48 <alt_dev_reg>
}
   17d40:	0001883a 	nop
   17d44:	e037883a 	mov	sp,fp
   17d48:	dfc00117 	ldw	ra,4(sp)
   17d4c:	df000017 	ldw	fp,0(sp)
   17d50:	dec00204 	addi	sp,sp,8
   17d54:	f800283a 	ret

00017d58 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   17d58:	defffa04 	addi	sp,sp,-24
   17d5c:	dfc00515 	stw	ra,20(sp)
   17d60:	df000415 	stw	fp,16(sp)
   17d64:	df000404 	addi	fp,sp,16
   17d68:	e13ffe15 	stw	r4,-8(fp)
   17d6c:	e17ffd15 	stw	r5,-12(fp)
   17d70:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   17d74:	e0bffe17 	ldw	r2,-8(fp)
   17d78:	10800017 	ldw	r2,0(r2)
   17d7c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   17d80:	e0bfff17 	ldw	r2,-4(fp)
   17d84:	10c00a04 	addi	r3,r2,40
   17d88:	e0bffe17 	ldw	r2,-8(fp)
   17d8c:	10800217 	ldw	r2,8(r2)
   17d90:	100f883a 	mov	r7,r2
   17d94:	e1bffc17 	ldw	r6,-16(fp)
   17d98:	e17ffd17 	ldw	r5,-12(fp)
   17d9c:	1809883a 	mov	r4,r3
   17da0:	001837c0 	call	1837c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   17da4:	e037883a 	mov	sp,fp
   17da8:	dfc00117 	ldw	ra,4(sp)
   17dac:	df000017 	ldw	fp,0(sp)
   17db0:	dec00204 	addi	sp,sp,8
   17db4:	f800283a 	ret

00017db8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   17db8:	defffa04 	addi	sp,sp,-24
   17dbc:	dfc00515 	stw	ra,20(sp)
   17dc0:	df000415 	stw	fp,16(sp)
   17dc4:	df000404 	addi	fp,sp,16
   17dc8:	e13ffe15 	stw	r4,-8(fp)
   17dcc:	e17ffd15 	stw	r5,-12(fp)
   17dd0:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   17dd4:	e0bffe17 	ldw	r2,-8(fp)
   17dd8:	10800017 	ldw	r2,0(r2)
   17ddc:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   17de0:	e0bfff17 	ldw	r2,-4(fp)
   17de4:	10c00a04 	addi	r3,r2,40
   17de8:	e0bffe17 	ldw	r2,-8(fp)
   17dec:	10800217 	ldw	r2,8(r2)
   17df0:	100f883a 	mov	r7,r2
   17df4:	e1bffc17 	ldw	r6,-16(fp)
   17df8:	e17ffd17 	ldw	r5,-12(fp)
   17dfc:	1809883a 	mov	r4,r3
   17e00:	001859c0 	call	1859c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   17e04:	e037883a 	mov	sp,fp
   17e08:	dfc00117 	ldw	ra,4(sp)
   17e0c:	df000017 	ldw	fp,0(sp)
   17e10:	dec00204 	addi	sp,sp,8
   17e14:	f800283a 	ret

00017e18 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   17e18:	defffc04 	addi	sp,sp,-16
   17e1c:	dfc00315 	stw	ra,12(sp)
   17e20:	df000215 	stw	fp,8(sp)
   17e24:	df000204 	addi	fp,sp,8
   17e28:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   17e2c:	e0bffe17 	ldw	r2,-8(fp)
   17e30:	10800017 	ldw	r2,0(r2)
   17e34:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   17e38:	e0bfff17 	ldw	r2,-4(fp)
   17e3c:	10c00a04 	addi	r3,r2,40
   17e40:	e0bffe17 	ldw	r2,-8(fp)
   17e44:	10800217 	ldw	r2,8(r2)
   17e48:	100b883a 	mov	r5,r2
   17e4c:	1809883a 	mov	r4,r3
   17e50:	00182200 	call	18220 <altera_avalon_jtag_uart_close>
}
   17e54:	e037883a 	mov	sp,fp
   17e58:	dfc00117 	ldw	ra,4(sp)
   17e5c:	df000017 	ldw	fp,0(sp)
   17e60:	dec00204 	addi	sp,sp,8
   17e64:	f800283a 	ret

00017e68 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   17e68:	defffa04 	addi	sp,sp,-24
   17e6c:	dfc00515 	stw	ra,20(sp)
   17e70:	df000415 	stw	fp,16(sp)
   17e74:	df000404 	addi	fp,sp,16
   17e78:	e13ffe15 	stw	r4,-8(fp)
   17e7c:	e17ffd15 	stw	r5,-12(fp)
   17e80:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   17e84:	e0bffe17 	ldw	r2,-8(fp)
   17e88:	10800017 	ldw	r2,0(r2)
   17e8c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   17e90:	e0bfff17 	ldw	r2,-4(fp)
   17e94:	10800a04 	addi	r2,r2,40
   17e98:	e1bffc17 	ldw	r6,-16(fp)
   17e9c:	e17ffd17 	ldw	r5,-12(fp)
   17ea0:	1009883a 	mov	r4,r2
   17ea4:	00182880 	call	18288 <altera_avalon_jtag_uart_ioctl>
}
   17ea8:	e037883a 	mov	sp,fp
   17eac:	dfc00117 	ldw	ra,4(sp)
   17eb0:	df000017 	ldw	fp,0(sp)
   17eb4:	dec00204 	addi	sp,sp,8
   17eb8:	f800283a 	ret

00017ebc <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   17ebc:	defffb04 	addi	sp,sp,-20
   17ec0:	dfc00415 	stw	ra,16(sp)
   17ec4:	df000315 	stw	fp,12(sp)
   17ec8:	df000304 	addi	fp,sp,12
   17ecc:	e13fff15 	stw	r4,-4(fp)
   17ed0:	e17ffe15 	stw	r5,-8(fp)
   17ed4:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   17ed8:	e0bfff17 	ldw	r2,-4(fp)
   17edc:	00c00044 	movi	r3,1
   17ee0:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   17ee4:	e0bfff17 	ldw	r2,-4(fp)
   17ee8:	10800017 	ldw	r2,0(r2)
   17eec:	10800104 	addi	r2,r2,4
   17ef0:	1007883a 	mov	r3,r2
   17ef4:	e0bfff17 	ldw	r2,-4(fp)
   17ef8:	10800817 	ldw	r2,32(r2)
   17efc:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
   17f00:	e0bffd17 	ldw	r2,-12(fp)
   17f04:	01800074 	movhi	r6,1
   17f08:	319fdc04 	addi	r6,r6,32624
   17f0c:	e17fff17 	ldw	r5,-4(fp)
   17f10:	1009883a 	mov	r4,r2
   17f14:	00196780 	call	19678 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   17f18:	e0bfff17 	ldw	r2,-4(fp)
   17f1c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   17f20:	e0bfff17 	ldw	r2,-4(fp)
   17f24:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   17f28:	d0e73c17 	ldw	r3,-25360(gp)
   17f2c:	e1ffff17 	ldw	r7,-4(fp)
   17f30:	018000b4 	movhi	r6,2
   17f34:	31a06004 	addi	r6,r6,-32384
   17f38:	180b883a 	mov	r5,r3
   17f3c:	1009883a 	mov	r4,r2
   17f40:	001914c0 	call	1914c <alt_alarm_start>
   17f44:	1000040e 	bge	r2,zero,17f58 <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   17f48:	e0ffff17 	ldw	r3,-4(fp)
   17f4c:	00a00034 	movhi	r2,32768
   17f50:	10bfffc4 	addi	r2,r2,-1
   17f54:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   17f58:	0001883a 	nop
   17f5c:	e037883a 	mov	sp,fp
   17f60:	dfc00117 	ldw	ra,4(sp)
   17f64:	df000017 	ldw	fp,0(sp)
   17f68:	dec00204 	addi	sp,sp,8
   17f6c:	f800283a 	ret

00017f70 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   17f70:	defff704 	addi	sp,sp,-36
   17f74:	df000815 	stw	fp,32(sp)
   17f78:	df000804 	addi	fp,sp,32
   17f7c:	e13ff915 	stw	r4,-28(fp)
   17f80:	e17ff815 	stw	r5,-32(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   17f84:	e0bff917 	ldw	r2,-28(fp)
   17f88:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
   17f8c:	e0bffd17 	ldw	r2,-12(fp)
   17f90:	10800017 	ldw	r2,0(r2)
   17f94:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   17f98:	e0bffc17 	ldw	r2,-16(fp)
   17f9c:	10800104 	addi	r2,r2,4
   17fa0:	10800037 	ldwio	r2,0(r2)
   17fa4:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   17fa8:	e0bffb17 	ldw	r2,-20(fp)
   17fac:	1080c00c 	andi	r2,r2,768
   17fb0:	10006d26 	beq	r2,zero,18168 <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   17fb4:	e0bffb17 	ldw	r2,-20(fp)
   17fb8:	1080400c 	andi	r2,r2,256
   17fbc:	10003526 	beq	r2,zero,18094 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   17fc0:	00800074 	movhi	r2,1
   17fc4:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   17fc8:	e0bffd17 	ldw	r2,-12(fp)
   17fcc:	10800a17 	ldw	r2,40(r2)
   17fd0:	10800044 	addi	r2,r2,1
   17fd4:	1081ffcc 	andi	r2,r2,2047
   17fd8:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   17fdc:	e0bffd17 	ldw	r2,-12(fp)
   17fe0:	10800b17 	ldw	r2,44(r2)
   17fe4:	e0fffa17 	ldw	r3,-24(fp)
   17fe8:	18801526 	beq	r3,r2,18040 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   17fec:	e0bffc17 	ldw	r2,-16(fp)
   17ff0:	10800037 	ldwio	r2,0(r2)
   17ff4:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   17ff8:	e0bfff17 	ldw	r2,-4(fp)
   17ffc:	10a0000c 	andi	r2,r2,32768
   18000:	10001126 	beq	r2,zero,18048 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   18004:	e0bffd17 	ldw	r2,-12(fp)
   18008:	10800a17 	ldw	r2,40(r2)
   1800c:	e0ffff17 	ldw	r3,-4(fp)
   18010:	1809883a 	mov	r4,r3
   18014:	e0fffd17 	ldw	r3,-12(fp)
   18018:	1885883a 	add	r2,r3,r2
   1801c:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   18020:	e0bffd17 	ldw	r2,-12(fp)
   18024:	10800a17 	ldw	r2,40(r2)
   18028:	10800044 	addi	r2,r2,1
   1802c:	10c1ffcc 	andi	r3,r2,2047
   18030:	e0bffd17 	ldw	r2,-12(fp)
   18034:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   18038:	0001883a 	nop
      {
   1803c:	003fe206 	br	17fc8 <altera_avalon_jtag_uart_irq+0x58>
          break;
   18040:	0001883a 	nop
   18044:	00000106 	br	1804c <altera_avalon_jtag_uart_irq+0xdc>
          break;
   18048:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   1804c:	e0bfff17 	ldw	r2,-4(fp)
   18050:	10bfffec 	andhi	r2,r2,65535
   18054:	10000f26 	beq	r2,zero,18094 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   18058:	e0bffd17 	ldw	r2,-12(fp)
   1805c:	10c00817 	ldw	r3,32(r2)
   18060:	00bfff84 	movi	r2,-2
   18064:	1886703a 	and	r3,r3,r2
   18068:	e0bffd17 	ldw	r2,-12(fp)
   1806c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   18070:	e0bffc17 	ldw	r2,-16(fp)
   18074:	10800104 	addi	r2,r2,4
   18078:	1007883a 	mov	r3,r2
   1807c:	e0bffd17 	ldw	r2,-12(fp)
   18080:	10800817 	ldw	r2,32(r2)
   18084:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   18088:	e0bffc17 	ldw	r2,-16(fp)
   1808c:	10800104 	addi	r2,r2,4
   18090:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   18094:	e0bffb17 	ldw	r2,-20(fp)
   18098:	1080800c 	andi	r2,r2,512
   1809c:	103fbe26 	beq	r2,zero,17f98 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   180a0:	e0bffb17 	ldw	r2,-20(fp)
   180a4:	1004d43a 	srli	r2,r2,16
   180a8:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   180ac:	00001406 	br	18100 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   180b0:	e0bffc17 	ldw	r2,-16(fp)
   180b4:	e0fffd17 	ldw	r3,-12(fp)
   180b8:	18c00d17 	ldw	r3,52(r3)
   180bc:	e13ffd17 	ldw	r4,-12(fp)
   180c0:	20c7883a 	add	r3,r4,r3
   180c4:	18c20e03 	ldbu	r3,2104(r3)
   180c8:	18c03fcc 	andi	r3,r3,255
   180cc:	18c0201c 	xori	r3,r3,128
   180d0:	18ffe004 	addi	r3,r3,-128
   180d4:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   180d8:	e0bffd17 	ldw	r2,-12(fp)
   180dc:	10800d17 	ldw	r2,52(r2)
   180e0:	10800044 	addi	r2,r2,1
   180e4:	10c1ffcc 	andi	r3,r2,2047
   180e8:	e0bffd17 	ldw	r2,-12(fp)
   180ec:	10c00d15 	stw	r3,52(r2)
   180f0:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   180f4:	e0bffe17 	ldw	r2,-8(fp)
   180f8:	10bfffc4 	addi	r2,r2,-1
   180fc:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
   18100:	e0bffe17 	ldw	r2,-8(fp)
   18104:	10000526 	beq	r2,zero,1811c <altera_avalon_jtag_uart_irq+0x1ac>
   18108:	e0bffd17 	ldw	r2,-12(fp)
   1810c:	10c00d17 	ldw	r3,52(r2)
   18110:	e0bffd17 	ldw	r2,-12(fp)
   18114:	10800c17 	ldw	r2,48(r2)
   18118:	18bfe51e 	bne	r3,r2,180b0 <altera_avalon_jtag_uart_irq+0x140>
      }

      if (space > 0)
   1811c:	e0bffe17 	ldw	r2,-8(fp)
   18120:	103f9d26 	beq	r2,zero,17f98 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   18124:	e0bffd17 	ldw	r2,-12(fp)
   18128:	10c00817 	ldw	r3,32(r2)
   1812c:	00bfff44 	movi	r2,-3
   18130:	1886703a 	and	r3,r3,r2
   18134:	e0bffd17 	ldw	r2,-12(fp)
   18138:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   1813c:	e0bffd17 	ldw	r2,-12(fp)
   18140:	10800017 	ldw	r2,0(r2)
   18144:	10800104 	addi	r2,r2,4
   18148:	1007883a 	mov	r3,r2
   1814c:	e0bffd17 	ldw	r2,-12(fp)
   18150:	10800817 	ldw	r2,32(r2)
   18154:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   18158:	e0bffc17 	ldw	r2,-16(fp)
   1815c:	10800104 	addi	r2,r2,4
   18160:	10800037 	ldwio	r2,0(r2)
  {
   18164:	003f8c06 	br	17f98 <altera_avalon_jtag_uart_irq+0x28>
      break;
   18168:	0001883a 	nop
      }
    }
  }
}
   1816c:	0001883a 	nop
   18170:	e037883a 	mov	sp,fp
   18174:	df000017 	ldw	fp,0(sp)
   18178:	dec00104 	addi	sp,sp,4
   1817c:	f800283a 	ret

00018180 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   18180:	defffc04 	addi	sp,sp,-16
   18184:	df000315 	stw	fp,12(sp)
   18188:	df000304 	addi	fp,sp,12
   1818c:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   18190:	e0bffd17 	ldw	r2,-12(fp)
   18194:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   18198:	e0bfff17 	ldw	r2,-4(fp)
   1819c:	10800017 	ldw	r2,0(r2)
   181a0:	10800104 	addi	r2,r2,4
   181a4:	10800037 	ldwio	r2,0(r2)
   181a8:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   181ac:	e0bffe17 	ldw	r2,-8(fp)
   181b0:	1081000c 	andi	r2,r2,1024
   181b4:	10000b26 	beq	r2,zero,181e4 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   181b8:	e0bfff17 	ldw	r2,-4(fp)
   181bc:	10800017 	ldw	r2,0(r2)
   181c0:	10800104 	addi	r2,r2,4
   181c4:	1007883a 	mov	r3,r2
   181c8:	e0bfff17 	ldw	r2,-4(fp)
   181cc:	10800817 	ldw	r2,32(r2)
   181d0:	10810014 	ori	r2,r2,1024
   181d4:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   181d8:	e0bfff17 	ldw	r2,-4(fp)
   181dc:	10000915 	stw	zero,36(r2)
   181e0:	00000a06 	br	1820c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   181e4:	e0bfff17 	ldw	r2,-4(fp)
   181e8:	10c00917 	ldw	r3,36(r2)
   181ec:	00a00034 	movhi	r2,32768
   181f0:	10bfff04 	addi	r2,r2,-4
   181f4:	10c00536 	bltu	r2,r3,1820c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   181f8:	e0bfff17 	ldw	r2,-4(fp)
   181fc:	10800917 	ldw	r2,36(r2)
   18200:	10c00044 	addi	r3,r2,1
   18204:	e0bfff17 	ldw	r2,-4(fp)
   18208:	10c00915 	stw	r3,36(r2)
   1820c:	d0a73c17 	ldw	r2,-25360(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   18210:	e037883a 	mov	sp,fp
   18214:	df000017 	ldw	fp,0(sp)
   18218:	dec00104 	addi	sp,sp,4
   1821c:	f800283a 	ret

00018220 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   18220:	defffd04 	addi	sp,sp,-12
   18224:	df000215 	stw	fp,8(sp)
   18228:	df000204 	addi	fp,sp,8
   1822c:	e13fff15 	stw	r4,-4(fp)
   18230:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   18234:	00000506 	br	1824c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   18238:	e0bffe17 	ldw	r2,-8(fp)
   1823c:	1090000c 	andi	r2,r2,16384
   18240:	10000226 	beq	r2,zero,1824c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   18244:	00bffd44 	movi	r2,-11
   18248:	00000b06 	br	18278 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   1824c:	e0bfff17 	ldw	r2,-4(fp)
   18250:	10c00d17 	ldw	r3,52(r2)
   18254:	e0bfff17 	ldw	r2,-4(fp)
   18258:	10800c17 	ldw	r2,48(r2)
   1825c:	18800526 	beq	r3,r2,18274 <altera_avalon_jtag_uart_close+0x54>
   18260:	e0bfff17 	ldw	r2,-4(fp)
   18264:	10c00917 	ldw	r3,36(r2)
   18268:	e0bfff17 	ldw	r2,-4(fp)
   1826c:	10800117 	ldw	r2,4(r2)
   18270:	18bff136 	bltu	r3,r2,18238 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
   18274:	0005883a 	mov	r2,zero
}
   18278:	e037883a 	mov	sp,fp
   1827c:	df000017 	ldw	fp,0(sp)
   18280:	dec00104 	addi	sp,sp,4
   18284:	f800283a 	ret

00018288 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   18288:	defffa04 	addi	sp,sp,-24
   1828c:	df000515 	stw	fp,20(sp)
   18290:	df000504 	addi	fp,sp,20
   18294:	e13ffd15 	stw	r4,-12(fp)
   18298:	e17ffc15 	stw	r5,-16(fp)
   1829c:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
   182a0:	00bff9c4 	movi	r2,-25
   182a4:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
   182a8:	e0bffc17 	ldw	r2,-16(fp)
   182ac:	109a8060 	cmpeqi	r2,r2,27137
   182b0:	1000041e 	bne	r2,zero,182c4 <altera_avalon_jtag_uart_ioctl+0x3c>
   182b4:	e0bffc17 	ldw	r2,-16(fp)
   182b8:	109a80a0 	cmpeqi	r2,r2,27138
   182bc:	1000181e 	bne	r2,zero,18320 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   182c0:	00002906 	br	18368 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
   182c4:	e0bffd17 	ldw	r2,-12(fp)
   182c8:	10c00117 	ldw	r3,4(r2)
   182cc:	00a00034 	movhi	r2,32768
   182d0:	10bfffc4 	addi	r2,r2,-1
   182d4:	18802126 	beq	r3,r2,1835c <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
   182d8:	e0bffb17 	ldw	r2,-20(fp)
   182dc:	10800017 	ldw	r2,0(r2)
   182e0:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   182e4:	e0bffe17 	ldw	r2,-8(fp)
   182e8:	10800090 	cmplti	r2,r2,2
   182ec:	1000061e 	bne	r2,zero,18308 <altera_avalon_jtag_uart_ioctl+0x80>
   182f0:	e0fffe17 	ldw	r3,-8(fp)
   182f4:	00a00034 	movhi	r2,32768
   182f8:	10bfffc4 	addi	r2,r2,-1
   182fc:	18800226 	beq	r3,r2,18308 <altera_avalon_jtag_uart_ioctl+0x80>
   18300:	e0bffe17 	ldw	r2,-8(fp)
   18304:	00000206 	br	18310 <altera_avalon_jtag_uart_ioctl+0x88>
   18308:	00a00034 	movhi	r2,32768
   1830c:	10bfff84 	addi	r2,r2,-2
   18310:	e0fffd17 	ldw	r3,-12(fp)
   18314:	18800115 	stw	r2,4(r3)
      rc = 0;
   18318:	e03fff15 	stw	zero,-4(fp)
    break;
   1831c:	00000f06 	br	1835c <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
   18320:	e0bffd17 	ldw	r2,-12(fp)
   18324:	10c00117 	ldw	r3,4(r2)
   18328:	00a00034 	movhi	r2,32768
   1832c:	10bfffc4 	addi	r2,r2,-1
   18330:	18800c26 	beq	r3,r2,18364 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   18334:	e0bffd17 	ldw	r2,-12(fp)
   18338:	10c00917 	ldw	r3,36(r2)
   1833c:	e0bffd17 	ldw	r2,-12(fp)
   18340:	10800117 	ldw	r2,4(r2)
   18344:	1885803a 	cmpltu	r2,r3,r2
   18348:	10c03fcc 	andi	r3,r2,255
   1834c:	e0bffb17 	ldw	r2,-20(fp)
   18350:	10c00015 	stw	r3,0(r2)
      rc = 0;
   18354:	e03fff15 	stw	zero,-4(fp)
    break;
   18358:	00000206 	br	18364 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
   1835c:	0001883a 	nop
   18360:	00000106 	br	18368 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
   18364:	0001883a 	nop
  }

  return rc;
   18368:	e0bfff17 	ldw	r2,-4(fp)
}
   1836c:	e037883a 	mov	sp,fp
   18370:	df000017 	ldw	fp,0(sp)
   18374:	dec00104 	addi	sp,sp,4
   18378:	f800283a 	ret

0001837c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   1837c:	defff304 	addi	sp,sp,-52
   18380:	dfc00c15 	stw	ra,48(sp)
   18384:	df000b15 	stw	fp,44(sp)
   18388:	df000b04 	addi	fp,sp,44
   1838c:	e13ff815 	stw	r4,-32(fp)
   18390:	e17ff715 	stw	r5,-36(fp)
   18394:	e1bff615 	stw	r6,-40(fp)
   18398:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
   1839c:	e0bff717 	ldw	r2,-36(fp)
   183a0:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   183a4:	00004706 	br	184c4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   183a8:	e0bff817 	ldw	r2,-32(fp)
   183ac:	10800a17 	ldw	r2,40(r2)
   183b0:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
   183b4:	e0bff817 	ldw	r2,-32(fp)
   183b8:	10800b17 	ldw	r2,44(r2)
   183bc:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
   183c0:	e0fffd17 	ldw	r3,-12(fp)
   183c4:	e0bffc17 	ldw	r2,-16(fp)
   183c8:	18800536 	bltu	r3,r2,183e0 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   183cc:	e0fffd17 	ldw	r3,-12(fp)
   183d0:	e0bffc17 	ldw	r2,-16(fp)
   183d4:	1885c83a 	sub	r2,r3,r2
   183d8:	e0bffe15 	stw	r2,-8(fp)
   183dc:	00000406 	br	183f0 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   183e0:	00c20004 	movi	r3,2048
   183e4:	e0bffc17 	ldw	r2,-16(fp)
   183e8:	1885c83a 	sub	r2,r3,r2
   183ec:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   183f0:	e0bffe17 	ldw	r2,-8(fp)
   183f4:	10001e26 	beq	r2,zero,18470 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   183f8:	e0fff617 	ldw	r3,-40(fp)
   183fc:	e0bffe17 	ldw	r2,-8(fp)
   18400:	1880022e 	bgeu	r3,r2,1840c <altera_avalon_jtag_uart_read+0x90>
        n = space;
   18404:	e0bff617 	ldw	r2,-40(fp)
   18408:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   1840c:	e0bff817 	ldw	r2,-32(fp)
   18410:	10c00e04 	addi	r3,r2,56
   18414:	e0bffc17 	ldw	r2,-16(fp)
   18418:	1885883a 	add	r2,r3,r2
   1841c:	e1bffe17 	ldw	r6,-8(fp)
   18420:	100b883a 	mov	r5,r2
   18424:	e13fff17 	ldw	r4,-4(fp)
   18428:	000ce200 	call	ce20 <memcpy>
      ptr   += n;
   1842c:	e0ffff17 	ldw	r3,-4(fp)
   18430:	e0bffe17 	ldw	r2,-8(fp)
   18434:	1885883a 	add	r2,r3,r2
   18438:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
   1843c:	e0fff617 	ldw	r3,-40(fp)
   18440:	e0bffe17 	ldw	r2,-8(fp)
   18444:	1885c83a 	sub	r2,r3,r2
   18448:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   1844c:	e0fffc17 	ldw	r3,-16(fp)
   18450:	e0bffe17 	ldw	r2,-8(fp)
   18454:	1885883a 	add	r2,r3,r2
   18458:	10c1ffcc 	andi	r3,r2,2047
   1845c:	e0bff817 	ldw	r2,-32(fp)
   18460:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   18464:	e0bff617 	ldw	r2,-40(fp)
   18468:	00bfcf16 	blt	zero,r2,183a8 <altera_avalon_jtag_uart_read+0x2c>
   1846c:	00000106 	br	18474 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
   18470:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
   18474:	e0ffff17 	ldw	r3,-4(fp)
   18478:	e0bff717 	ldw	r2,-36(fp)
   1847c:	1880141e 	bne	r3,r2,184d0 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   18480:	e0bff517 	ldw	r2,-44(fp)
   18484:	1090000c 	andi	r2,r2,16384
   18488:	1000131e 	bne	r2,zero,184d8 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   1848c:	0001883a 	nop
   18490:	e0bff817 	ldw	r2,-32(fp)
   18494:	10800a17 	ldw	r2,40(r2)
   18498:	e0fffd17 	ldw	r3,-12(fp)
   1849c:	1880051e 	bne	r3,r2,184b4 <altera_avalon_jtag_uart_read+0x138>
   184a0:	e0bff817 	ldw	r2,-32(fp)
   184a4:	10c00917 	ldw	r3,36(r2)
   184a8:	e0bff817 	ldw	r2,-32(fp)
   184ac:	10800117 	ldw	r2,4(r2)
   184b0:	18bff736 	bltu	r3,r2,18490 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   184b4:	e0bff817 	ldw	r2,-32(fp)
   184b8:	10800a17 	ldw	r2,40(r2)
   184bc:	e0fffd17 	ldw	r3,-12(fp)
   184c0:	18800726 	beq	r3,r2,184e0 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
   184c4:	e0bff617 	ldw	r2,-40(fp)
   184c8:	00bfb716 	blt	zero,r2,183a8 <altera_avalon_jtag_uart_read+0x2c>
   184cc:	00000506 	br	184e4 <altera_avalon_jtag_uart_read+0x168>
      break;
   184d0:	0001883a 	nop
   184d4:	00000306 	br	184e4 <altera_avalon_jtag_uart_read+0x168>
      break;
   184d8:	0001883a 	nop
   184dc:	00000106 	br	184e4 <altera_avalon_jtag_uart_read+0x168>
      break;
   184e0:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   184e4:	e0ffff17 	ldw	r3,-4(fp)
   184e8:	e0bff717 	ldw	r2,-36(fp)
   184ec:	18801926 	beq	r3,r2,18554 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
   184f0:	0005303a 	rdctl	r2,status
   184f4:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   184f8:	e0fff917 	ldw	r3,-28(fp)
   184fc:	00bfff84 	movi	r2,-2
   18500:	1884703a 	and	r2,r3,r2
   18504:	1001703a 	wrctl	status,r2
  return context;
   18508:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   1850c:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   18510:	e0bff817 	ldw	r2,-32(fp)
   18514:	10800817 	ldw	r2,32(r2)
   18518:	10c00054 	ori	r3,r2,1
   1851c:	e0bff817 	ldw	r2,-32(fp)
   18520:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   18524:	e0bff817 	ldw	r2,-32(fp)
   18528:	10800017 	ldw	r2,0(r2)
   1852c:	10800104 	addi	r2,r2,4
   18530:	1007883a 	mov	r3,r2
   18534:	e0bff817 	ldw	r2,-32(fp)
   18538:	10800817 	ldw	r2,32(r2)
   1853c:	18800035 	stwio	r2,0(r3)
   18540:	e0bffb17 	ldw	r2,-20(fp)
   18544:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   18548:	e0bffa17 	ldw	r2,-24(fp)
   1854c:	1001703a 	wrctl	status,r2
}
   18550:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   18554:	e0ffff17 	ldw	r3,-4(fp)
   18558:	e0bff717 	ldw	r2,-36(fp)
   1855c:	18800426 	beq	r3,r2,18570 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
   18560:	e0ffff17 	ldw	r3,-4(fp)
   18564:	e0bff717 	ldw	r2,-36(fp)
   18568:	1885c83a 	sub	r2,r3,r2
   1856c:	00000606 	br	18588 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   18570:	e0bff517 	ldw	r2,-44(fp)
   18574:	1090000c 	andi	r2,r2,16384
   18578:	10000226 	beq	r2,zero,18584 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
   1857c:	00bffd44 	movi	r2,-11
   18580:	00000106 	br	18588 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   18584:	00bffec4 	movi	r2,-5
}
   18588:	e037883a 	mov	sp,fp
   1858c:	dfc00117 	ldw	ra,4(sp)
   18590:	df000017 	ldw	fp,0(sp)
   18594:	dec00204 	addi	sp,sp,8
   18598:	f800283a 	ret

0001859c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   1859c:	defff304 	addi	sp,sp,-52
   185a0:	dfc00c15 	stw	ra,48(sp)
   185a4:	df000b15 	stw	fp,44(sp)
   185a8:	df000b04 	addi	fp,sp,44
   185ac:	e13ff815 	stw	r4,-32(fp)
   185b0:	e17ff715 	stw	r5,-36(fp)
   185b4:	e1bff615 	stw	r6,-40(fp)
   185b8:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   185bc:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   185c0:	e0bff717 	ldw	r2,-36(fp)
   185c4:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   185c8:	00003706 	br	186a8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   185cc:	e0bff817 	ldw	r2,-32(fp)
   185d0:	10800c17 	ldw	r2,48(r2)
   185d4:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
   185d8:	e0bff817 	ldw	r2,-32(fp)
   185dc:	10800d17 	ldw	r2,52(r2)
   185e0:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
   185e4:	e0fffc17 	ldw	r3,-16(fp)
   185e8:	e0bfff17 	ldw	r2,-4(fp)
   185ec:	1880062e 	bgeu	r3,r2,18608 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   185f0:	e0ffff17 	ldw	r3,-4(fp)
   185f4:	e0bffc17 	ldw	r2,-16(fp)
   185f8:	1885c83a 	sub	r2,r3,r2
   185fc:	10bfffc4 	addi	r2,r2,-1
   18600:	e0bffe15 	stw	r2,-8(fp)
   18604:	00000b06 	br	18634 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   18608:	e0bfff17 	ldw	r2,-4(fp)
   1860c:	10000526 	beq	r2,zero,18624 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   18610:	00c20004 	movi	r3,2048
   18614:	e0bffc17 	ldw	r2,-16(fp)
   18618:	1885c83a 	sub	r2,r3,r2
   1861c:	e0bffe15 	stw	r2,-8(fp)
   18620:	00000406 	br	18634 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   18624:	00c1ffc4 	movi	r3,2047
   18628:	e0bffc17 	ldw	r2,-16(fp)
   1862c:	1885c83a 	sub	r2,r3,r2
   18630:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   18634:	e0bffe17 	ldw	r2,-8(fp)
   18638:	10001e26 	beq	r2,zero,186b4 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   1863c:	e0fff617 	ldw	r3,-40(fp)
   18640:	e0bffe17 	ldw	r2,-8(fp)
   18644:	1880022e 	bgeu	r3,r2,18650 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   18648:	e0bff617 	ldw	r2,-40(fp)
   1864c:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   18650:	e0bff817 	ldw	r2,-32(fp)
   18654:	10c20e04 	addi	r3,r2,2104
   18658:	e0bffc17 	ldw	r2,-16(fp)
   1865c:	1885883a 	add	r2,r3,r2
   18660:	e1bffe17 	ldw	r6,-8(fp)
   18664:	e17ff717 	ldw	r5,-36(fp)
   18668:	1009883a 	mov	r4,r2
   1866c:	000ce200 	call	ce20 <memcpy>
      ptr   += n;
   18670:	e0fff717 	ldw	r3,-36(fp)
   18674:	e0bffe17 	ldw	r2,-8(fp)
   18678:	1885883a 	add	r2,r3,r2
   1867c:	e0bff715 	stw	r2,-36(fp)
      count -= n;
   18680:	e0fff617 	ldw	r3,-40(fp)
   18684:	e0bffe17 	ldw	r2,-8(fp)
   18688:	1885c83a 	sub	r2,r3,r2
   1868c:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   18690:	e0fffc17 	ldw	r3,-16(fp)
   18694:	e0bffe17 	ldw	r2,-8(fp)
   18698:	1885883a 	add	r2,r3,r2
   1869c:	10c1ffcc 	andi	r3,r2,2047
   186a0:	e0bff817 	ldw	r2,-32(fp)
   186a4:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
   186a8:	e0bff617 	ldw	r2,-40(fp)
   186ac:	00bfc716 	blt	zero,r2,185cc <altera_avalon_jtag_uart_write+0x30>
   186b0:	00000106 	br	186b8 <altera_avalon_jtag_uart_write+0x11c>
        break;
   186b4:	0001883a 	nop
  NIOS2_READ_STATUS (context);
   186b8:	0005303a 	rdctl	r2,status
   186bc:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   186c0:	e0fff917 	ldw	r3,-28(fp)
   186c4:	00bfff84 	movi	r2,-2
   186c8:	1884703a 	and	r2,r3,r2
   186cc:	1001703a 	wrctl	status,r2
  return context;
   186d0:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   186d4:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   186d8:	e0bff817 	ldw	r2,-32(fp)
   186dc:	10800817 	ldw	r2,32(r2)
   186e0:	10c00094 	ori	r3,r2,2
   186e4:	e0bff817 	ldw	r2,-32(fp)
   186e8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   186ec:	e0bff817 	ldw	r2,-32(fp)
   186f0:	10800017 	ldw	r2,0(r2)
   186f4:	10800104 	addi	r2,r2,4
   186f8:	1007883a 	mov	r3,r2
   186fc:	e0bff817 	ldw	r2,-32(fp)
   18700:	10800817 	ldw	r2,32(r2)
   18704:	18800035 	stwio	r2,0(r3)
   18708:	e0bffb17 	ldw	r2,-20(fp)
   1870c:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   18710:	e0bffa17 	ldw	r2,-24(fp)
   18714:	1001703a 	wrctl	status,r2
}
   18718:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   1871c:	e0bff617 	ldw	r2,-40(fp)
   18720:	0080100e 	bge	zero,r2,18764 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   18724:	e0bff517 	ldw	r2,-44(fp)
   18728:	1090000c 	andi	r2,r2,16384
   1872c:	1000101e 	bne	r2,zero,18770 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   18730:	0001883a 	nop
   18734:	e0bff817 	ldw	r2,-32(fp)
   18738:	10800d17 	ldw	r2,52(r2)
   1873c:	e0ffff17 	ldw	r3,-4(fp)
   18740:	1880051e 	bne	r3,r2,18758 <altera_avalon_jtag_uart_write+0x1bc>
   18744:	e0bff817 	ldw	r2,-32(fp)
   18748:	10c00917 	ldw	r3,36(r2)
   1874c:	e0bff817 	ldw	r2,-32(fp)
   18750:	10800117 	ldw	r2,4(r2)
   18754:	18bff736 	bltu	r3,r2,18734 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   18758:	e0bff817 	ldw	r2,-32(fp)
   1875c:	10800917 	ldw	r2,36(r2)
   18760:	1000051e 	bne	r2,zero,18778 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
   18764:	e0bff617 	ldw	r2,-40(fp)
   18768:	00bfcf16 	blt	zero,r2,186a8 <altera_avalon_jtag_uart_write+0x10c>
   1876c:	00000306 	br	1877c <altera_avalon_jtag_uart_write+0x1e0>
        break;
   18770:	0001883a 	nop
   18774:	00000106 	br	1877c <altera_avalon_jtag_uart_write+0x1e0>
         break;
   18778:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   1877c:	e0fff717 	ldw	r3,-36(fp)
   18780:	e0bffd17 	ldw	r2,-12(fp)
   18784:	18800426 	beq	r3,r2,18798 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
   18788:	e0fff717 	ldw	r3,-36(fp)
   1878c:	e0bffd17 	ldw	r2,-12(fp)
   18790:	1885c83a 	sub	r2,r3,r2
   18794:	00000606 	br	187b0 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
   18798:	e0bff517 	ldw	r2,-44(fp)
   1879c:	1090000c 	andi	r2,r2,16384
   187a0:	10000226 	beq	r2,zero,187ac <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
   187a4:	00bffd44 	movi	r2,-11
   187a8:	00000106 	br	187b0 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   187ac:	00bffec4 	movi	r2,-5
}
   187b0:	e037883a 	mov	sp,fp
   187b4:	dfc00117 	ldw	ra,4(sp)
   187b8:	df000017 	ldw	fp,0(sp)
   187bc:	dec00204 	addi	sp,sp,8
   187c0:	f800283a 	ret

000187c4 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   187c4:	defff904 	addi	sp,sp,-28
   187c8:	dfc00615 	stw	ra,24(sp)
   187cc:	df000515 	stw	fp,20(sp)
   187d0:	df000504 	addi	fp,sp,20
   187d4:	e13ffc15 	stw	r4,-16(fp)
   187d8:	e17ffb15 	stw	r5,-20(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   187dc:	0007883a 	mov	r3,zero
   187e0:	e0bffc17 	ldw	r2,-16(fp)
   187e4:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   187e8:	e0bffc17 	ldw	r2,-16(fp)
   187ec:	10800104 	addi	r2,r2,4
   187f0:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
   187f4:	0005303a 	rdctl	r2,status
   187f8:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   187fc:	e0fffd17 	ldw	r3,-12(fp)
   18800:	00bfff84 	movi	r2,-2
   18804:	1884703a 	and	r2,r3,r2
   18808:	1001703a 	wrctl	status,r2
  return context;
   1880c:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   18810:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
   18814:	0019b140 	call	19b14 <alt_tick>
   18818:	e0bfff17 	ldw	r2,-4(fp)
   1881c:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   18820:	e0bffe17 	ldw	r2,-8(fp)
   18824:	1001703a 	wrctl	status,r2
}
   18828:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
   1882c:	0001883a 	nop
   18830:	e037883a 	mov	sp,fp
   18834:	dfc00117 	ldw	ra,4(sp)
   18838:	df000017 	ldw	fp,0(sp)
   1883c:	dec00204 	addi	sp,sp,8
   18840:	f800283a 	ret

00018844 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   18844:	defff904 	addi	sp,sp,-28
   18848:	dfc00615 	stw	ra,24(sp)
   1884c:	df000515 	stw	fp,20(sp)
   18850:	df000504 	addi	fp,sp,20
   18854:	e13ffe15 	stw	r4,-8(fp)
   18858:	e17ffd15 	stw	r5,-12(fp)
   1885c:	e1bffc15 	stw	r6,-16(fp)
   18860:	e1fffb15 	stw	r7,-20(fp)
   18864:	e0bffb17 	ldw	r2,-20(fp)
   18868:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   1886c:	d0a73c17 	ldw	r2,-25360(gp)
   18870:	1000031e 	bne	r2,zero,18880 <alt_avalon_timer_sc_init+0x3c>
  {
    _alt_tick_rate = nticks;
   18874:	e0bfff17 	ldw	r2,-4(fp)
   18878:	d0a73c15 	stw	r2,-25360(gp)
    return 0;
   1887c:	00000106 	br	18884 <alt_avalon_timer_sc_init+0x40>
  }
  else
  {
    return -1;
   18880:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   18884:	e0bffe17 	ldw	r2,-8(fp)
   18888:	10800104 	addi	r2,r2,4
   1888c:	00c001c4 	movi	r3,7
   18890:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
   18894:	018000b4 	movhi	r6,2
   18898:	31a1f104 	addi	r6,r6,-30780
   1889c:	e17ffe17 	ldw	r5,-8(fp)
   188a0:	e13ffc17 	ldw	r4,-16(fp)
   188a4:	00196780 	call	19678 <alt_irq_register>
#endif  
}
   188a8:	0001883a 	nop
   188ac:	e037883a 	mov	sp,fp
   188b0:	dfc00117 	ldw	ra,4(sp)
   188b4:	df000017 	ldw	fp,0(sp)
   188b8:	dec00204 	addi	sp,sp,8
   188bc:	f800283a 	ret

000188c0 <get_DDRAM_addr>:
 * @sa the datasheet for the LCD Display Controller on the DE2 Board
 * @note the function requires that the input are in the valid range
 *
 **/
unsigned char get_DDRAM_addr(unsigned x_pos, unsigned y_pos)
{
   188c0:	defffc04 	addi	sp,sp,-16
   188c4:	df000315 	stw	fp,12(sp)
   188c8:	df000304 	addi	fp,sp,12
   188cc:	e13ffe15 	stw	r4,-8(fp)
   188d0:	e17ffd15 	stw	r5,-12(fp)
	//assume valid inputs
	unsigned char addr = 0x00000000;
   188d4:	e03fffc5 	stb	zero,-1(fp)
	if (y_pos == 0)
   188d8:	e0bffd17 	ldw	r2,-12(fp)
   188dc:	1000061e 	bne	r2,zero,188f8 <get_DDRAM_addr+0x38>
	{
		addr |= x_pos;
   188e0:	e0bffe17 	ldw	r2,-8(fp)
   188e4:	1007883a 	mov	r3,r2
   188e8:	e0bfffc3 	ldbu	r2,-1(fp)
   188ec:	10c4b03a 	or	r2,r2,r3
   188f0:	e0bfffc5 	stb	r2,-1(fp)
   188f4:	00000806 	br	18918 <get_DDRAM_addr+0x58>
	}
	else
	{
		addr |= x_pos;
   188f8:	e0bffe17 	ldw	r2,-8(fp)
   188fc:	1007883a 	mov	r3,r2
   18900:	e0bfffc3 	ldbu	r2,-1(fp)
   18904:	10c4b03a 	or	r2,r2,r3
   18908:	e0bfffc5 	stb	r2,-1(fp)
		addr |= 0x00000040;
   1890c:	e0bfffc3 	ldbu	r2,-1(fp)
   18910:	10801014 	ori	r2,r2,64
   18914:	e0bfffc5 	stb	r2,-1(fp)
	}
	// b_7 is always 1 for DDRAM address, see datasheet
	return (addr | 0x00000080);
   18918:	e0ffffc3 	ldbu	r3,-1(fp)
   1891c:	00bfe004 	movi	r2,-128
   18920:	1884b03a 	or	r2,r3,r2
}
   18924:	e037883a 	mov	sp,fp
   18928:	df000017 	ldw	fp,0(sp)
   1892c:	dec00104 	addi	sp,sp,4
   18930:	f800283a 	ret

00018934 <alt_up_character_lcd_send_cmd>:
 * @param cmd -- the command bits 
 *
 * @return nothing
 **/
void alt_up_character_lcd_send_cmd(alt_up_character_lcd_dev *lcd, unsigned char cmd)
{
   18934:	defffd04 	addi	sp,sp,-12
   18938:	df000215 	stw	fp,8(sp)
   1893c:	df000204 	addi	fp,sp,8
   18940:	e13fff15 	stw	r4,-4(fp)
   18944:	2805883a 	mov	r2,r5
   18948:	e0bffe05 	stb	r2,-8(fp)
 	// NOTE: We use the term Instruction Register and Control Register interchangeably
	IOWR_ALT_UP_CHARACTER_LCD_COMMAND(lcd->base, cmd);
   1894c:	e0bfff17 	ldw	r2,-4(fp)
   18950:	10800a17 	ldw	r2,40(r2)
   18954:	1007883a 	mov	r3,r2
   18958:	e0bffe03 	ldbu	r2,-8(fp)
   1895c:	18800025 	stbio	r2,0(r3)
}
   18960:	0001883a 	nop
   18964:	e037883a 	mov	sp,fp
   18968:	df000017 	ldw	fp,0(sp)
   1896c:	dec00104 	addi	sp,sp,4
   18970:	f800283a 	ret

00018974 <alt_up_character_lcd_init>:
 * file for a detailed description of each function
 */
////////////////////////////////////////////////////////////////////////////

void alt_up_character_lcd_init(alt_up_character_lcd_dev *lcd)
{
   18974:	defffe04 	addi	sp,sp,-8
   18978:	df000115 	stw	fp,4(sp)
   1897c:	df000104 	addi	fp,sp,4
   18980:	e13fff15 	stw	r4,-4(fp)
	IOWR_ALT_UP_CHARACTER_LCD_COMMAND(lcd->base, ALT_UP_CHARACTER_LCD_COMM_CLEAR_DISPLAY);
   18984:	e0bfff17 	ldw	r2,-4(fp)
   18988:	10800a17 	ldw	r2,40(r2)
   1898c:	1007883a 	mov	r3,r2
   18990:	00800044 	movi	r2,1
   18994:	18800025 	stbio	r2,0(r3)
	// register the device 
	// see "Developing Device Drivers for the HAL" in "Nios II Software Developer's Handbook"
}
   18998:	0001883a 	nop
   1899c:	e037883a 	mov	sp,fp
   189a0:	df000017 	ldw	fp,0(sp)
   189a4:	dec00104 	addi	sp,sp,4
   189a8:	f800283a 	ret

000189ac <alt_up_character_lcd_open_dev>:

alt_up_character_lcd_dev* alt_up_character_lcd_open_dev(const char* name)
{
   189ac:	defffc04 	addi	sp,sp,-16
   189b0:	dfc00315 	stw	ra,12(sp)
   189b4:	df000215 	stw	fp,8(sp)
   189b8:	df000204 	addi	fp,sp,8
   189bc:	e13ffe15 	stw	r4,-8(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_character_lcd_dev *dev = (alt_up_character_lcd_dev*)alt_find_dev(name, &alt_dev_list);
   189c0:	d1600604 	addi	r5,gp,-32744
   189c4:	e13ffe17 	ldw	r4,-8(fp)
   189c8:	00194780 	call	19478 <alt_find_dev>
   189cc:	e0bfff15 	stw	r2,-4(fp)

  return dev;
   189d0:	e0bfff17 	ldw	r2,-4(fp)
}
   189d4:	e037883a 	mov	sp,fp
   189d8:	dfc00117 	ldw	ra,4(sp)
   189dc:	df000017 	ldw	fp,0(sp)
   189e0:	dec00204 	addi	sp,sp,8
   189e4:	f800283a 	ret

000189e8 <alt_up_character_lcd_write>:

void alt_up_character_lcd_write(alt_up_character_lcd_dev *dev, const char *ptr, unsigned int len)
{
   189e8:	defffb04 	addi	sp,sp,-20
   189ec:	df000415 	stw	fp,16(sp)
   189f0:	df000404 	addi	fp,sp,16
   189f4:	e13ffe15 	stw	r4,-8(fp)
   189f8:	e17ffd15 	stw	r5,-12(fp)
   189fc:	e1bffc15 	stw	r6,-16(fp)
	unsigned int i;
	for (i = 0; i < len; i++)
   18a00:	e03fff15 	stw	zero,-4(fp)
   18a04:	00000f06 	br	18a44 <alt_up_character_lcd_write+0x5c>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr+i));
   18a08:	e0bffe17 	ldw	r2,-8(fp)
   18a0c:	10800a17 	ldw	r2,40(r2)
   18a10:	10800044 	addi	r2,r2,1
   18a14:	1009883a 	mov	r4,r2
   18a18:	e0fffd17 	ldw	r3,-12(fp)
   18a1c:	e0bfff17 	ldw	r2,-4(fp)
   18a20:	1885883a 	add	r2,r3,r2
   18a24:	10800003 	ldbu	r2,0(r2)
   18a28:	10803fcc 	andi	r2,r2,255
   18a2c:	1080201c 	xori	r2,r2,128
   18a30:	10bfe004 	addi	r2,r2,-128
   18a34:	20800025 	stbio	r2,0(r4)
	for (i = 0; i < len; i++)
   18a38:	e0bfff17 	ldw	r2,-4(fp)
   18a3c:	10800044 	addi	r2,r2,1
   18a40:	e0bfff15 	stw	r2,-4(fp)
   18a44:	e0ffff17 	ldw	r3,-4(fp)
   18a48:	e0bffc17 	ldw	r2,-16(fp)
   18a4c:	18bfee36 	bltu	r3,r2,18a08 <alt_up_character_lcd_write+0x20>
	}
}
   18a50:	0001883a 	nop
   18a54:	0001883a 	nop
   18a58:	e037883a 	mov	sp,fp
   18a5c:	df000017 	ldw	fp,0(sp)
   18a60:	dec00104 	addi	sp,sp,4
   18a64:	f800283a 	ret

00018a68 <alt_up_character_lcd_string>:

void alt_up_character_lcd_string(alt_up_character_lcd_dev *dev, const char *ptr)
{
   18a68:	defffd04 	addi	sp,sp,-12
   18a6c:	df000215 	stw	fp,8(sp)
   18a70:	df000204 	addi	fp,sp,8
   18a74:	e13fff15 	stw	r4,-4(fp)
   18a78:	e17ffe15 	stw	r5,-8(fp)
	while ( *ptr )
   18a7c:	00000d06 	br	18ab4 <alt_up_character_lcd_string+0x4c>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr));
   18a80:	e0bfff17 	ldw	r2,-4(fp)
   18a84:	10800a17 	ldw	r2,40(r2)
   18a88:	10800044 	addi	r2,r2,1
   18a8c:	1007883a 	mov	r3,r2
   18a90:	e0bffe17 	ldw	r2,-8(fp)
   18a94:	10800003 	ldbu	r2,0(r2)
   18a98:	10803fcc 	andi	r2,r2,255
   18a9c:	1080201c 	xori	r2,r2,128
   18aa0:	10bfe004 	addi	r2,r2,-128
   18aa4:	18800025 	stbio	r2,0(r3)
		++ptr;
   18aa8:	e0bffe17 	ldw	r2,-8(fp)
   18aac:	10800044 	addi	r2,r2,1
   18ab0:	e0bffe15 	stw	r2,-8(fp)
	while ( *ptr )
   18ab4:	e0bffe17 	ldw	r2,-8(fp)
   18ab8:	10800003 	ldbu	r2,0(r2)
   18abc:	10803fcc 	andi	r2,r2,255
   18ac0:	1080201c 	xori	r2,r2,128
   18ac4:	10bfe004 	addi	r2,r2,-128
   18ac8:	103fed1e 	bne	r2,zero,18a80 <alt_up_character_lcd_string+0x18>
	}
}
   18acc:	0001883a 	nop
   18ad0:	0001883a 	nop
   18ad4:	e037883a 	mov	sp,fp
   18ad8:	df000017 	ldw	fp,0(sp)
   18adc:	dec00104 	addi	sp,sp,4
   18ae0:	f800283a 	ret

00018ae4 <alt_up_character_lcd_write_fd>:

// this function isn't used, and is included for future upgrades
int alt_up_character_lcd_write_fd(alt_fd *fd, const char *ptr, int len)
{
   18ae4:	defffb04 	addi	sp,sp,-20
   18ae8:	dfc00415 	stw	ra,16(sp)
   18aec:	df000315 	stw	fp,12(sp)
   18af0:	df000304 	addi	fp,sp,12
   18af4:	e13fff15 	stw	r4,-4(fp)
   18af8:	e17ffe15 	stw	r5,-8(fp)
   18afc:	e1bffd15 	stw	r6,-12(fp)
	alt_up_character_lcd_write( (alt_up_character_lcd_dev *) fd->dev, ptr, (unsigned int) len);
   18b00:	e0bfff17 	ldw	r2,-4(fp)
   18b04:	10800017 	ldw	r2,0(r2)
   18b08:	e0fffd17 	ldw	r3,-12(fp)
   18b0c:	180d883a 	mov	r6,r3
   18b10:	e17ffe17 	ldw	r5,-8(fp)
   18b14:	1009883a 	mov	r4,r2
   18b18:	00189e80 	call	189e8 <alt_up_character_lcd_write>
	return 0;
   18b1c:	0005883a 	mov	r2,zero
}
   18b20:	e037883a 	mov	sp,fp
   18b24:	dfc00117 	ldw	ra,4(sp)
   18b28:	df000017 	ldw	fp,0(sp)
   18b2c:	dec00204 	addi	sp,sp,8
   18b30:	f800283a 	ret

00018b34 <alt_up_character_lcd_set_cursor_pos>:

int alt_up_character_lcd_set_cursor_pos(alt_up_character_lcd_dev *lcd, unsigned x_pos, 
	 unsigned y_pos)
{
   18b34:	defffa04 	addi	sp,sp,-24
   18b38:	dfc00515 	stw	ra,20(sp)
   18b3c:	df000415 	stw	fp,16(sp)
   18b40:	df000404 	addi	fp,sp,16
   18b44:	e13ffe15 	stw	r4,-8(fp)
   18b48:	e17ffd15 	stw	r5,-12(fp)
   18b4c:	e1bffc15 	stw	r6,-16(fp)
	//boundary check
	if (x_pos > 39 || y_pos > 1 )
   18b50:	e0bffd17 	ldw	r2,-12(fp)
   18b54:	10800a28 	cmpgeui	r2,r2,40
   18b58:	1000031e 	bne	r2,zero,18b68 <alt_up_character_lcd_set_cursor_pos+0x34>
   18b5c:	e0bffc17 	ldw	r2,-16(fp)
   18b60:	108000b0 	cmpltui	r2,r2,2
   18b64:	1000021e 	bne	r2,zero,18b70 <alt_up_character_lcd_set_cursor_pos+0x3c>
		// invalid argument
		return -1;
   18b68:	00bfffc4 	movi	r2,-1
   18b6c:	00000906 	br	18b94 <alt_up_character_lcd_set_cursor_pos+0x60>
	// calculate address
	unsigned char addr = get_DDRAM_addr(x_pos, y_pos);
   18b70:	e17ffc17 	ldw	r5,-16(fp)
   18b74:	e13ffd17 	ldw	r4,-12(fp)
   18b78:	00188c00 	call	188c0 <get_DDRAM_addr>
   18b7c:	e0bfffc5 	stb	r2,-1(fp)
	// set the cursor
	alt_up_character_lcd_send_cmd(lcd, addr);
   18b80:	e0bfffc3 	ldbu	r2,-1(fp)
   18b84:	100b883a 	mov	r5,r2
   18b88:	e13ffe17 	ldw	r4,-8(fp)
   18b8c:	00189340 	call	18934 <alt_up_character_lcd_send_cmd>
	return 0;
   18b90:	0005883a 	mov	r2,zero
}
   18b94:	e037883a 	mov	sp,fp
   18b98:	dfc00117 	ldw	ra,4(sp)
   18b9c:	df000017 	ldw	fp,0(sp)
   18ba0:	dec00204 	addi	sp,sp,8
   18ba4:	f800283a 	ret

00018ba8 <alt_up_character_lcd_shift_cursor>:

void alt_up_character_lcd_shift_cursor(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
   18ba8:	defffb04 	addi	sp,sp,-20
   18bac:	dfc00415 	stw	ra,16(sp)
   18bb0:	df000315 	stw	fp,12(sp)
   18bb4:	df000304 	addi	fp,sp,12
   18bb8:	e13ffe15 	stw	r4,-8(fp)
   18bbc:	e17ffd15 	stw	r5,-12(fp)
	if (x_right_shift_offset == 0) 
   18bc0:	e0bffd17 	ldw	r2,-12(fp)
   18bc4:	10001526 	beq	r2,zero,18c1c <alt_up_character_lcd_shift_cursor+0x74>
		// don't ask me to do nothing 
		return;

	// see shift right or left
	unsigned char shift_cmd = (x_right_shift_offset > 0) ? 
   18bc8:	e0bffd17 	ldw	r2,-12(fp)
   18bcc:	0080020e 	bge	zero,r2,18bd8 <alt_up_character_lcd_shift_cursor+0x30>
   18bd0:	00800504 	movi	r2,20
   18bd4:	00000106 	br	18bdc <alt_up_character_lcd_shift_cursor+0x34>
   18bd8:	00800404 	movi	r2,16
   18bdc:	e0bfff85 	stb	r2,-2(fp)
		ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
   18be0:	e0bffd17 	ldw	r2,-12(fp)
   18be4:	1000010e 	bge	r2,zero,18bec <alt_up_character_lcd_shift_cursor+0x44>
   18be8:	0085c83a 	sub	r2,zero,r2
   18bec:	e0bfffc5 	stb	r2,-1(fp)
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
   18bf0:	00000406 	br	18c04 <alt_up_character_lcd_shift_cursor+0x5c>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
   18bf4:	e0bfff83 	ldbu	r2,-2(fp)
   18bf8:	100b883a 	mov	r5,r2
   18bfc:	e13ffe17 	ldw	r4,-8(fp)
   18c00:	00189340 	call	18934 <alt_up_character_lcd_send_cmd>
	while (num_offset-- > 0)
   18c04:	e0bfffc3 	ldbu	r2,-1(fp)
   18c08:	10ffffc4 	addi	r3,r2,-1
   18c0c:	e0ffffc5 	stb	r3,-1(fp)
   18c10:	10803fcc 	andi	r2,r2,255
   18c14:	103ff71e 	bne	r2,zero,18bf4 <alt_up_character_lcd_shift_cursor+0x4c>
   18c18:	00000106 	br	18c20 <alt_up_character_lcd_shift_cursor+0x78>
		return;
   18c1c:	0001883a 	nop
}
   18c20:	e037883a 	mov	sp,fp
   18c24:	dfc00117 	ldw	ra,4(sp)
   18c28:	df000017 	ldw	fp,0(sp)
   18c2c:	dec00204 	addi	sp,sp,8
   18c30:	f800283a 	ret

00018c34 <alt_up_character_lcd_shift_display>:

void alt_up_character_lcd_shift_display(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
   18c34:	defffb04 	addi	sp,sp,-20
   18c38:	dfc00415 	stw	ra,16(sp)
   18c3c:	df000315 	stw	fp,12(sp)
   18c40:	df000304 	addi	fp,sp,12
   18c44:	e13ffe15 	stw	r4,-8(fp)
   18c48:	e17ffd15 	stw	r5,-12(fp)
	if (x_right_shift_offset == 0) 
   18c4c:	e0bffd17 	ldw	r2,-12(fp)
   18c50:	10001526 	beq	r2,zero,18ca8 <alt_up_character_lcd_shift_display+0x74>
		// don't ask me to do nothing 
		return;

	// see shift right or left
	unsigned char shift_cmd = (x_right_shift_offset > 0) ? 
   18c54:	e0bffd17 	ldw	r2,-12(fp)
   18c58:	0080020e 	bge	zero,r2,18c64 <alt_up_character_lcd_shift_display+0x30>
   18c5c:	00800704 	movi	r2,28
   18c60:	00000106 	br	18c68 <alt_up_character_lcd_shift_display+0x34>
   18c64:	00800604 	movi	r2,24
   18c68:	e0bfff85 	stb	r2,-2(fp)
		ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
   18c6c:	e0bffd17 	ldw	r2,-12(fp)
   18c70:	1000010e 	bge	r2,zero,18c78 <alt_up_character_lcd_shift_display+0x44>
   18c74:	0085c83a 	sub	r2,zero,r2
   18c78:	e0bfffc5 	stb	r2,-1(fp)
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
   18c7c:	00000406 	br	18c90 <alt_up_character_lcd_shift_display+0x5c>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
   18c80:	e0bfff83 	ldbu	r2,-2(fp)
   18c84:	100b883a 	mov	r5,r2
   18c88:	e13ffe17 	ldw	r4,-8(fp)
   18c8c:	00189340 	call	18934 <alt_up_character_lcd_send_cmd>
	while (num_offset-- > 0)
   18c90:	e0bfffc3 	ldbu	r2,-1(fp)
   18c94:	10ffffc4 	addi	r3,r2,-1
   18c98:	e0ffffc5 	stb	r3,-1(fp)
   18c9c:	10803fcc 	andi	r2,r2,255
   18ca0:	103ff71e 	bne	r2,zero,18c80 <alt_up_character_lcd_shift_display+0x4c>
   18ca4:	00000106 	br	18cac <alt_up_character_lcd_shift_display+0x78>
		return;
   18ca8:	0001883a 	nop
}
   18cac:	e037883a 	mov	sp,fp
   18cb0:	dfc00117 	ldw	ra,4(sp)
   18cb4:	df000017 	ldw	fp,0(sp)
   18cb8:	dec00204 	addi	sp,sp,8
   18cbc:	f800283a 	ret

00018cc0 <alt_up_character_lcd_erase_pos>:

int alt_up_character_lcd_erase_pos(alt_up_character_lcd_dev *lcd, unsigned x_pos, unsigned y_pos)
{
   18cc0:	defffa04 	addi	sp,sp,-24
   18cc4:	dfc00515 	stw	ra,20(sp)
   18cc8:	df000415 	stw	fp,16(sp)
   18ccc:	df000404 	addi	fp,sp,16
   18cd0:	e13ffe15 	stw	r4,-8(fp)
   18cd4:	e17ffd15 	stw	r5,-12(fp)
   18cd8:	e1bffc15 	stw	r6,-16(fp)
	// boundary check
	if (x_pos > 39 || y_pos > 1 )
   18cdc:	e0bffd17 	ldw	r2,-12(fp)
   18ce0:	10800a28 	cmpgeui	r2,r2,40
   18ce4:	1000031e 	bne	r2,zero,18cf4 <alt_up_character_lcd_erase_pos+0x34>
   18ce8:	e0bffc17 	ldw	r2,-16(fp)
   18cec:	108000b0 	cmpltui	r2,r2,2
   18cf0:	1000021e 	bne	r2,zero,18cfc <alt_up_character_lcd_erase_pos+0x3c>
		return -1;
   18cf4:	00bfffc4 	movi	r2,-1
   18cf8:	00000f06 	br	18d38 <alt_up_character_lcd_erase_pos+0x78>

	// get address
	unsigned char addr = get_DDRAM_addr(x_pos, y_pos);
   18cfc:	e17ffc17 	ldw	r5,-16(fp)
   18d00:	e13ffd17 	ldw	r4,-12(fp)
   18d04:	00188c00 	call	188c0 <get_DDRAM_addr>
   18d08:	e0bfffc5 	stb	r2,-1(fp)
	// set cursor to dest point
	alt_up_character_lcd_send_cmd(lcd, addr);
   18d0c:	e0bfffc3 	ldbu	r2,-1(fp)
   18d10:	100b883a 	mov	r5,r2
   18d14:	e13ffe17 	ldw	r4,-8(fp)
   18d18:	00189340 	call	18934 <alt_up_character_lcd_send_cmd>
	//send an empty char as erase (refer to the Character Generator ROM part of the Datasheet)
	IOWR_ALT_UP_CHARACTER_LCD_DATA(lcd->base, (0x00000002) );
   18d1c:	e0bffe17 	ldw	r2,-8(fp)
   18d20:	10800a17 	ldw	r2,40(r2)
   18d24:	10800044 	addi	r2,r2,1
   18d28:	1007883a 	mov	r3,r2
   18d2c:	00800084 	movi	r2,2
   18d30:	18800025 	stbio	r2,0(r3)
	return 0;
   18d34:	0005883a 	mov	r2,zero
}
   18d38:	e037883a 	mov	sp,fp
   18d3c:	dfc00117 	ldw	ra,4(sp)
   18d40:	df000017 	ldw	fp,0(sp)
   18d44:	dec00204 	addi	sp,sp,8
   18d48:	f800283a 	ret

00018d4c <alt_up_character_lcd_cursor_off>:

void alt_up_character_lcd_cursor_off(alt_up_character_lcd_dev *lcd)
{
   18d4c:	defffd04 	addi	sp,sp,-12
   18d50:	dfc00215 	stw	ra,8(sp)
   18d54:	df000115 	stw	fp,4(sp)
   18d58:	df000104 	addi	fp,sp,4
   18d5c:	e13fff15 	stw	r4,-4(fp)
	alt_up_character_lcd_send_cmd(lcd, ALT_UP_CHARACTER_LCD_COMM_CURSOR_OFF);
   18d60:	01400304 	movi	r5,12
   18d64:	e13fff17 	ldw	r4,-4(fp)
   18d68:	00189340 	call	18934 <alt_up_character_lcd_send_cmd>
}
   18d6c:	0001883a 	nop
   18d70:	e037883a 	mov	sp,fp
   18d74:	dfc00117 	ldw	ra,4(sp)
   18d78:	df000017 	ldw	fp,0(sp)
   18d7c:	dec00204 	addi	sp,sp,8
   18d80:	f800283a 	ret

00018d84 <alt_up_character_lcd_cursor_blink_on>:

void alt_up_character_lcd_cursor_blink_on(alt_up_character_lcd_dev *lcd)
{
   18d84:	defffd04 	addi	sp,sp,-12
   18d88:	dfc00215 	stw	ra,8(sp)
   18d8c:	df000115 	stw	fp,4(sp)
   18d90:	df000104 	addi	fp,sp,4
   18d94:	e13fff15 	stw	r4,-4(fp)
	alt_up_character_lcd_send_cmd(lcd, ALT_UP_CHARACTER_LCD_COMM_CURSOR_BLINK_ON);
   18d98:	014003c4 	movi	r5,15
   18d9c:	e13fff17 	ldw	r4,-4(fp)
   18da0:	00189340 	call	18934 <alt_up_character_lcd_send_cmd>
}
   18da4:	0001883a 	nop
   18da8:	e037883a 	mov	sp,fp
   18dac:	dfc00117 	ldw	ra,4(sp)
   18db0:	df000017 	ldw	fp,0(sp)
   18db4:	dec00204 	addi	sp,sp,8
   18db8:	f800283a 	ret

00018dbc <alt_up_rs232_enable_read_interrupt>:
#include "altera_up_avalon_rs232.h"
#include "altera_up_avalon_rs232_regs.h"


void alt_up_rs232_enable_read_interrupt(alt_up_rs232_dev *rs232)
{
   18dbc:	defffd04 	addi	sp,sp,-12
   18dc0:	df000215 	stw	fp,8(sp)
   18dc4:	df000204 	addi	fp,sp,8
   18dc8:	e13ffe15 	stw	r4,-8(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
   18dcc:	e0bffe17 	ldw	r2,-8(fp)
   18dd0:	10800a17 	ldw	r2,40(r2)
   18dd4:	10800104 	addi	r2,r2,4
   18dd8:	10800037 	ldwio	r2,0(r2)
   18ddc:	e0bfff15 	stw	r2,-4(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_RS232_CONTROL_RE_MSK;
   18de0:	e0bfff17 	ldw	r2,-4(fp)
   18de4:	10800054 	ori	r2,r2,1
   18de8:	e0bfff15 	stw	r2,-4(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
   18dec:	e0bffe17 	ldw	r2,-8(fp)
   18df0:	10800a17 	ldw	r2,40(r2)
   18df4:	10800104 	addi	r2,r2,4
   18df8:	1007883a 	mov	r3,r2
   18dfc:	e0bfff17 	ldw	r2,-4(fp)
   18e00:	18800035 	stwio	r2,0(r3)
}
   18e04:	0001883a 	nop
   18e08:	e037883a 	mov	sp,fp
   18e0c:	df000017 	ldw	fp,0(sp)
   18e10:	dec00104 	addi	sp,sp,4
   18e14:	f800283a 	ret

00018e18 <alt_up_rs232_disable_read_interrupt>:

void alt_up_rs232_disable_read_interrupt(alt_up_rs232_dev *rs232)
{
   18e18:	defffd04 	addi	sp,sp,-12
   18e1c:	df000215 	stw	fp,8(sp)
   18e20:	df000204 	addi	fp,sp,8
   18e24:	e13ffe15 	stw	r4,-8(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
   18e28:	e0bffe17 	ldw	r2,-8(fp)
   18e2c:	10800a17 	ldw	r2,40(r2)
   18e30:	10800104 	addi	r2,r2,4
   18e34:	10800037 	ldwio	r2,0(r2)
   18e38:	e0bfff15 	stw	r2,-4(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_RS232_CONTROL_RE_MSK;
   18e3c:	e0ffff17 	ldw	r3,-4(fp)
   18e40:	00bfff84 	movi	r2,-2
   18e44:	1884703a 	and	r2,r3,r2
   18e48:	e0bfff15 	stw	r2,-4(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
   18e4c:	e0bffe17 	ldw	r2,-8(fp)
   18e50:	10800a17 	ldw	r2,40(r2)
   18e54:	10800104 	addi	r2,r2,4
   18e58:	1007883a 	mov	r3,r2
   18e5c:	e0bfff17 	ldw	r2,-4(fp)
   18e60:	18800035 	stwio	r2,0(r3)
}
   18e64:	0001883a 	nop
   18e68:	e037883a 	mov	sp,fp
   18e6c:	df000017 	ldw	fp,0(sp)
   18e70:	dec00104 	addi	sp,sp,4
   18e74:	f800283a 	ret

00018e78 <alt_up_rs232_get_used_space_in_read_FIFO>:

unsigned alt_up_rs232_get_used_space_in_read_FIFO(alt_up_rs232_dev *rs232)
{
   18e78:	defffd04 	addi	sp,sp,-12
   18e7c:	df000215 	stw	fp,8(sp)
   18e80:	df000204 	addi	fp,sp,8
   18e84:	e13ffe15 	stw	r4,-8(fp)
	alt_u16 ravail = 0;
   18e88:	e03fff8d 	sth	zero,-2(fp)
	// we can only read the 16 bits for RAVAIL --- a read of DATA will discard the data
//	ravail = IORD_16DIRECT(IOADDR_ALT_UP_RS232_DATA(rs232->base), 2); 
	ravail = IORD_ALT_UP_RS232_RAVAIL(rs232->base); 
   18e8c:	e0bffe17 	ldw	r2,-8(fp)
   18e90:	10800a17 	ldw	r2,40(r2)
   18e94:	10800084 	addi	r2,r2,2
   18e98:	1080002b 	ldhuio	r2,0(r2)
   18e9c:	10bfffcc 	andi	r2,r2,65535
   18ea0:	e0bfff8d 	sth	r2,-2(fp)
//	return ravail;
	return (ravail & ALT_UP_RS232_RAVAIL_MSK) >> ALT_UP_RS232_RAVAIL_OFST;
   18ea4:	e0bfff8b 	ldhu	r2,-2(fp)
}
   18ea8:	e037883a 	mov	sp,fp
   18eac:	df000017 	ldw	fp,0(sp)
   18eb0:	dec00104 	addi	sp,sp,4
   18eb4:	f800283a 	ret

00018eb8 <alt_up_rs232_get_available_space_in_write_FIFO>:

unsigned alt_up_rs232_get_available_space_in_write_FIFO(alt_up_rs232_dev *rs232)
{
   18eb8:	defffd04 	addi	sp,sp,-12
   18ebc:	df000215 	stw	fp,8(sp)
   18ec0:	df000204 	addi	fp,sp,8
   18ec4:	e13ffe15 	stw	r4,-8(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
   18ec8:	e0bffe17 	ldw	r2,-8(fp)
   18ecc:	10800a17 	ldw	r2,40(r2)
   18ed0:	10800104 	addi	r2,r2,4
   18ed4:	10800037 	ldwio	r2,0(r2)
   18ed8:	e0bfff15 	stw	r2,-4(fp)
	return (ctrl_reg & ALT_UP_RS232_CONTROL_WSPACE_MSK) >> ALT_UP_RS232_CONTROL_WSPACE_OFST;
   18edc:	e0bfff17 	ldw	r2,-4(fp)
   18ee0:	1004d43a 	srli	r2,r2,16
}
   18ee4:	e037883a 	mov	sp,fp
   18ee8:	df000017 	ldw	fp,0(sp)
   18eec:	dec00104 	addi	sp,sp,4
   18ef0:	f800283a 	ret

00018ef4 <alt_up_rs232_check_parity>:

int alt_up_rs232_check_parity(alt_u32 data_reg)
{
   18ef4:	defffd04 	addi	sp,sp,-12
   18ef8:	df000215 	stw	fp,8(sp)
   18efc:	df000204 	addi	fp,sp,8
   18f00:	e13ffe15 	stw	r4,-8(fp)
	unsigned parity_error = (data_reg & ALT_UP_RS232_DATA_PE_MSK) >> ALT_UP_RS232_DATA_PE_OFST;
   18f04:	e0bffe17 	ldw	r2,-8(fp)
   18f08:	1004d27a 	srli	r2,r2,9
   18f0c:	1080004c 	andi	r2,r2,1
   18f10:	e0bfff15 	stw	r2,-4(fp)
	return (parity_error ? -1 : 0);
   18f14:	e0bfff17 	ldw	r2,-4(fp)
   18f18:	10000226 	beq	r2,zero,18f24 <alt_up_rs232_check_parity+0x30>
   18f1c:	00bfffc4 	movi	r2,-1
   18f20:	00000106 	br	18f28 <alt_up_rs232_check_parity+0x34>
   18f24:	0005883a 	mov	r2,zero
}
   18f28:	e037883a 	mov	sp,fp
   18f2c:	df000017 	ldw	fp,0(sp)
   18f30:	dec00104 	addi	sp,sp,4
   18f34:	f800283a 	ret

00018f38 <alt_up_rs232_write_data>:

int alt_up_rs232_write_data(alt_up_rs232_dev *rs232, alt_u8 data)
{
   18f38:	defffd04 	addi	sp,sp,-12
   18f3c:	df000215 	stw	fp,8(sp)
   18f40:	df000204 	addi	fp,sp,8
   18f44:	e13fff15 	stw	r4,-4(fp)
   18f48:	2805883a 	mov	r2,r5
   18f4c:	e0bffe05 	stb	r2,-8(fp)
	/*alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);*/
    
	// we can write directly without thinking about other bit fields for this
	// case ONLY, because only DATA field of the data register is writable
	IOWR_ALT_UP_RS232_DATA(rs232->base, (data>>ALT_UP_RS232_DATA_DATA_OFST) & ALT_UP_RS232_DATA_DATA_MSK);
   18f50:	e0bfff17 	ldw	r2,-4(fp)
   18f54:	10800a17 	ldw	r2,40(r2)
   18f58:	1007883a 	mov	r3,r2
   18f5c:	e0bffe03 	ldbu	r2,-8(fp)
   18f60:	18800035 	stwio	r2,0(r3)
	return 0;
   18f64:	0005883a 	mov	r2,zero
}
   18f68:	e037883a 	mov	sp,fp
   18f6c:	df000017 	ldw	fp,0(sp)
   18f70:	dec00104 	addi	sp,sp,4
   18f74:	f800283a 	ret

00018f78 <alt_up_rs232_read_data>:

int alt_up_rs232_read_data(alt_up_rs232_dev *rs232, alt_u8 *data, alt_u8 *parity_error)
{
   18f78:	defffa04 	addi	sp,sp,-24
   18f7c:	dfc00515 	stw	ra,20(sp)
   18f80:	df000415 	stw	fp,16(sp)
   18f84:	df000404 	addi	fp,sp,16
   18f88:	e13ffe15 	stw	r4,-8(fp)
   18f8c:	e17ffd15 	stw	r5,-12(fp)
   18f90:	e1bffc15 	stw	r6,-16(fp)
	alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);
   18f94:	e0bffe17 	ldw	r2,-8(fp)
   18f98:	10800a17 	ldw	r2,40(r2)
   18f9c:	10800037 	ldwio	r2,0(r2)
   18fa0:	e0bfff15 	stw	r2,-4(fp)
	*data = (data_reg & ALT_UP_RS232_DATA_DATA_MSK) >> ALT_UP_RS232_DATA_DATA_OFST;
   18fa4:	e0bfff17 	ldw	r2,-4(fp)
   18fa8:	1007883a 	mov	r3,r2
   18fac:	e0bffd17 	ldw	r2,-12(fp)
   18fb0:	10c00005 	stb	r3,0(r2)
	*parity_error = alt_up_rs232_check_parity(data_reg);
   18fb4:	e13fff17 	ldw	r4,-4(fp)
   18fb8:	0018ef40 	call	18ef4 <alt_up_rs232_check_parity>
   18fbc:	1007883a 	mov	r3,r2
   18fc0:	e0bffc17 	ldw	r2,-16(fp)
   18fc4:	10c00005 	stb	r3,0(r2)
	return (((data_reg & ALT_UP_RS232_DATA_RVALID_MSK) >> ALT_UP_RS232_DATA_RVALID_OFST) - 1);
   18fc8:	e0bfff17 	ldw	r2,-4(fp)
   18fcc:	1004d3fa 	srli	r2,r2,15
   18fd0:	1080004c 	andi	r2,r2,1
   18fd4:	10bfffc4 	addi	r2,r2,-1
}
   18fd8:	e037883a 	mov	sp,fp
   18fdc:	dfc00117 	ldw	ra,4(sp)
   18fe0:	df000017 	ldw	fp,0(sp)
   18fe4:	dec00204 	addi	sp,sp,8
   18fe8:	f800283a 	ret

00018fec <alt_up_rs232_read_fd>:

int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
   18fec:	defff804 	addi	sp,sp,-32
   18ff0:	dfc00715 	stw	ra,28(sp)
   18ff4:	df000615 	stw	fp,24(sp)
   18ff8:	df000604 	addi	fp,sp,24
   18ffc:	e13ffc15 	stw	r4,-16(fp)
   19000:	e17ffb15 	stw	r5,-20(fp)
   19004:	e1bffa15 	stw	r6,-24(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
   19008:	e0bffc17 	ldw	r2,-16(fp)
   1900c:	10800017 	ldw	r2,0(r2)
   19010:	e0bffe15 	stw	r2,-8(fp)
	int count = 0;
   19014:	e03fff15 	stw	zero,-4(fp)
	alt_u8 parity_error;
	while(len--)
   19018:	00000c06 	br	1904c <alt_up_rs232_read_fd+0x60>
	{
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
   1901c:	e0bffb17 	ldw	r2,-20(fp)
   19020:	10c00044 	addi	r3,r2,1
   19024:	e0fffb15 	stw	r3,-20(fp)
   19028:	e0fffdc4 	addi	r3,fp,-9
   1902c:	180d883a 	mov	r6,r3
   19030:	100b883a 	mov	r5,r2
   19034:	e13ffe17 	ldw	r4,-8(fp)
   19038:	0018f780 	call	18f78 <alt_up_rs232_read_data>
   1903c:	1000081e 	bne	r2,zero,19060 <alt_up_rs232_read_fd+0x74>
			count++;
   19040:	e0bfff17 	ldw	r2,-4(fp)
   19044:	10800044 	addi	r2,r2,1
   19048:	e0bfff15 	stw	r2,-4(fp)
	while(len--)
   1904c:	e0bffa17 	ldw	r2,-24(fp)
   19050:	10ffffc4 	addi	r3,r2,-1
   19054:	e0fffa15 	stw	r3,-24(fp)
   19058:	103ff01e 	bne	r2,zero,1901c <alt_up_rs232_read_fd+0x30>
   1905c:	00000106 	br	19064 <alt_up_rs232_read_fd+0x78>
		else
			break;
   19060:	0001883a 	nop
	}
	return count;
   19064:	e0bfff17 	ldw	r2,-4(fp)
}
   19068:	e037883a 	mov	sp,fp
   1906c:	dfc00117 	ldw	ra,4(sp)
   19070:	df000017 	ldw	fp,0(sp)
   19074:	dec00204 	addi	sp,sp,8
   19078:	f800283a 	ret

0001907c <alt_up_rs232_write_fd>:

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
   1907c:	defff904 	addi	sp,sp,-28
   19080:	dfc00615 	stw	ra,24(sp)
   19084:	df000515 	stw	fp,20(sp)
   19088:	df000504 	addi	fp,sp,20
   1908c:	e13ffd15 	stw	r4,-12(fp)
   19090:	e17ffc15 	stw	r5,-16(fp)
   19094:	e1bffb15 	stw	r6,-20(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
   19098:	e0bffd17 	ldw	r2,-12(fp)
   1909c:	10800017 	ldw	r2,0(r2)
   190a0:	e0bffe15 	stw	r2,-8(fp)
	int count = 0;
   190a4:	e03fff15 	stw	zero,-4(fp)
	while(len--)
   190a8:	00000d06 	br	190e0 <alt_up_rs232_write_fd+0x64>
	{
		if (alt_up_rs232_write_data(rs232, *ptr)==0)
   190ac:	e0bffc17 	ldw	r2,-16(fp)
   190b0:	10800003 	ldbu	r2,0(r2)
   190b4:	10803fcc 	andi	r2,r2,255
   190b8:	100b883a 	mov	r5,r2
   190bc:	e13ffe17 	ldw	r4,-8(fp)
   190c0:	0018f380 	call	18f38 <alt_up_rs232_write_data>
   190c4:	10000b1e 	bne	r2,zero,190f4 <alt_up_rs232_write_fd+0x78>
		{
			count++;
   190c8:	e0bfff17 	ldw	r2,-4(fp)
   190cc:	10800044 	addi	r2,r2,1
   190d0:	e0bfff15 	stw	r2,-4(fp)
			ptr++;
   190d4:	e0bffc17 	ldw	r2,-16(fp)
   190d8:	10800044 	addi	r2,r2,1
   190dc:	e0bffc15 	stw	r2,-16(fp)
	while(len--)
   190e0:	e0bffb17 	ldw	r2,-20(fp)
   190e4:	10ffffc4 	addi	r3,r2,-1
   190e8:	e0fffb15 	stw	r3,-20(fp)
   190ec:	103fef1e 	bne	r2,zero,190ac <alt_up_rs232_write_fd+0x30>
   190f0:	00000106 	br	190f8 <alt_up_rs232_write_fd+0x7c>
		}
		else
			break;
   190f4:	0001883a 	nop
	}
	return count;
   190f8:	e0bfff17 	ldw	r2,-4(fp)
}
   190fc:	e037883a 	mov	sp,fp
   19100:	dfc00117 	ldw	ra,4(sp)
   19104:	df000017 	ldw	fp,0(sp)
   19108:	dec00204 	addi	sp,sp,8
   1910c:	f800283a 	ret

00019110 <alt_up_rs232_open_dev>:

alt_up_rs232_dev* alt_up_rs232_open_dev(const char* name)
{
   19110:	defffc04 	addi	sp,sp,-16
   19114:	dfc00315 	stw	ra,12(sp)
   19118:	df000215 	stw	fp,8(sp)
   1911c:	df000204 	addi	fp,sp,8
   19120:	e13ffe15 	stw	r4,-8(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_rs232_dev *dev = (alt_up_rs232_dev*)alt_find_dev(name, &alt_dev_list);
   19124:	d1600604 	addi	r5,gp,-32744
   19128:	e13ffe17 	ldw	r4,-8(fp)
   1912c:	00194780 	call	19478 <alt_find_dev>
   19130:	e0bfff15 	stw	r2,-4(fp)

  return dev;
   19134:	e0bfff17 	ldw	r2,-4(fp)
}
   19138:	e037883a 	mov	sp,fp
   1913c:	dfc00117 	ldw	ra,4(sp)
   19140:	df000017 	ldw	fp,0(sp)
   19144:	dec00204 	addi	sp,sp,8
   19148:	f800283a 	ret

0001914c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   1914c:	defff404 	addi	sp,sp,-48
   19150:	df000b15 	stw	fp,44(sp)
   19154:	df000b04 	addi	fp,sp,44
   19158:	e13ff815 	stw	r4,-32(fp)
   1915c:	e17ff715 	stw	r5,-36(fp)
   19160:	e1bff615 	stw	r6,-40(fp)
   19164:	e1fff515 	stw	r7,-44(fp)
  alt_irq_context irq_context;
  alt_u64 current_nticks = 0;
   19168:	e03ffe15 	stw	zero,-8(fp)
   1916c:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
   19170:	d0a73c17 	ldw	r2,-25360(gp)
  
  if (alt_ticks_per_second ())
   19174:	10004826 	beq	r2,zero,19298 <alt_alarm_start+0x14c>
  {
    if (alarm)
   19178:	e0bff817 	ldw	r2,-32(fp)
   1917c:	10004426 	beq	r2,zero,19290 <alt_alarm_start+0x144>
    {
      alarm->callback = callback;
   19180:	e0bff817 	ldw	r2,-32(fp)
   19184:	e0fff617 	ldw	r3,-40(fp)
   19188:	10c00415 	stw	r3,16(r2)
      alarm->context  = context;
   1918c:	e0bff817 	ldw	r2,-32(fp)
   19190:	e0fff517 	ldw	r3,-44(fp)
   19194:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
   19198:	0005303a 	rdctl	r2,status
   1919c:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   191a0:	e0fff917 	ldw	r3,-28(fp)
   191a4:	00bfff84 	movi	r2,-2
   191a8:	1884703a 	and	r2,r3,r2
   191ac:	1001703a 	wrctl	status,r2
  return context;
   191b0:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   191b4:	e0bffd15 	stw	r2,-12(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u64 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   191b8:	d0a73d17 	ldw	r2,-25356(gp)
   191bc:	d0e73e17 	ldw	r3,-25352(gp)
      
      current_nticks = alt_nticks();
   191c0:	e0bffe15 	stw	r2,-8(fp)
   191c4:	e0ffff15 	stw	r3,-4(fp)
      
      alarm->time = (alt_u64)nticks + current_nticks + 1; 
   191c8:	e0bff717 	ldw	r2,-36(fp)
   191cc:	1011883a 	mov	r8,r2
   191d0:	0013883a 	mov	r9,zero
   191d4:	e13ffe17 	ldw	r4,-8(fp)
   191d8:	e17fff17 	ldw	r5,-4(fp)
   191dc:	4105883a 	add	r2,r8,r4
   191e0:	120d803a 	cmpltu	r6,r2,r8
   191e4:	4947883a 	add	r3,r9,r5
   191e8:	30c9883a 	add	r4,r6,r3
   191ec:	2007883a 	mov	r3,r4
   191f0:	1009883a 	mov	r4,r2
   191f4:	180b883a 	mov	r5,r3
   191f8:	01800044 	movi	r6,1
   191fc:	000f883a 	mov	r7,zero
   19200:	2185883a 	add	r2,r4,r6
   19204:	1111803a 	cmpltu	r8,r2,r4
   19208:	29c7883a 	add	r3,r5,r7
   1920c:	40c9883a 	add	r4,r8,r3
   19210:	2007883a 	mov	r3,r4
   19214:	1009883a 	mov	r4,r2
   19218:	180b883a 	mov	r5,r3
   1921c:	e0bff817 	ldw	r2,-32(fp)
   19220:	11000215 	stw	r4,8(r2)
   19224:	11400315 	stw	r5,12(r2)
          
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   19228:	e0bff817 	ldw	r2,-32(fp)
   1922c:	d0e00c04 	addi	r3,gp,-32720
   19230:	e0fffb15 	stw	r3,-20(fp)
   19234:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   19238:	e0bffa17 	ldw	r2,-24(fp)
   1923c:	e0fffb17 	ldw	r3,-20(fp)
   19240:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   19244:	e0bffb17 	ldw	r2,-20(fp)
   19248:	10c00017 	ldw	r3,0(r2)
   1924c:	e0bffa17 	ldw	r2,-24(fp)
   19250:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   19254:	e0bffb17 	ldw	r2,-20(fp)
   19258:	10800017 	ldw	r2,0(r2)
   1925c:	e0fffa17 	ldw	r3,-24(fp)
   19260:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   19264:	e0bffb17 	ldw	r2,-20(fp)
   19268:	e0fffa17 	ldw	r3,-24(fp)
   1926c:	10c00015 	stw	r3,0(r2)
}
   19270:	0001883a 	nop
   19274:	e0bffd17 	ldw	r2,-12(fp)
   19278:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   1927c:	e0bffc17 	ldw	r2,-16(fp)
   19280:	1001703a 	wrctl	status,r2
}
   19284:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
   19288:	0005883a 	mov	r2,zero
   1928c:	00000306 	br	1929c <alt_alarm_start+0x150>
    }
    else
    {
      return -EINVAL;
   19290:	00bffa84 	movi	r2,-22
   19294:	00000106 	br	1929c <alt_alarm_start+0x150>
    }
  }
  else
  {
    return -ENOTSUP;
   19298:	00bfde84 	movi	r2,-134
  }
}
   1929c:	e037883a 	mov	sp,fp
   192a0:	df000017 	ldw	fp,0(sp)
   192a4:	dec00104 	addi	sp,sp,4
   192a8:	f800283a 	ret

000192ac <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   192ac:	deffff04 	addi	sp,sp,-4
   192b0:	df000015 	stw	fp,0(sp)
   192b4:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   192b8:	0001883a 	nop
   192bc:	e037883a 	mov	sp,fp
   192c0:	df000017 	ldw	fp,0(sp)
   192c4:	dec00104 	addi	sp,sp,4
   192c8:	f800283a 	ret

000192cc <alt_get_errno>:
{
   192cc:	defffe04 	addi	sp,sp,-8
   192d0:	dfc00115 	stw	ra,4(sp)
   192d4:	df000015 	stw	fp,0(sp)
   192d8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   192dc:	d0a00917 	ldw	r2,-32732(gp)
   192e0:	10000326 	beq	r2,zero,192f0 <alt_get_errno+0x24>
   192e4:	d0a00917 	ldw	r2,-32732(gp)
   192e8:	103ee83a 	callr	r2
   192ec:	00000106 	br	192f4 <alt_get_errno+0x28>
   192f0:	d0a73604 	addi	r2,gp,-25384
}
   192f4:	e037883a 	mov	sp,fp
   192f8:	dfc00117 	ldw	ra,4(sp)
   192fc:	df000017 	ldw	fp,0(sp)
   19300:	dec00204 	addi	sp,sp,8
   19304:	f800283a 	ret

00019308 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   19308:	defffa04 	addi	sp,sp,-24
   1930c:	dfc00515 	stw	ra,20(sp)
   19310:	df000415 	stw	fp,16(sp)
   19314:	df000404 	addi	fp,sp,16
   19318:	e13ffd15 	stw	r4,-12(fp)
   1931c:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   19320:	e0bffd17 	ldw	r2,-12(fp)
   19324:	10000326 	beq	r2,zero,19334 <alt_dev_llist_insert+0x2c>
   19328:	e0bffd17 	ldw	r2,-12(fp)
   1932c:	10800217 	ldw	r2,8(r2)
   19330:	1000061e 	bne	r2,zero,1934c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   19334:	00192cc0 	call	192cc <alt_get_errno>
   19338:	1007883a 	mov	r3,r2
   1933c:	00800584 	movi	r2,22
   19340:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   19344:	00bffa84 	movi	r2,-22
   19348:	00001406 	br	1939c <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   1934c:	e0bffd17 	ldw	r2,-12(fp)
   19350:	e0fffc17 	ldw	r3,-16(fp)
   19354:	e0ffff15 	stw	r3,-4(fp)
   19358:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
   1935c:	e0bffe17 	ldw	r2,-8(fp)
   19360:	e0ffff17 	ldw	r3,-4(fp)
   19364:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   19368:	e0bfff17 	ldw	r2,-4(fp)
   1936c:	10c00017 	ldw	r3,0(r2)
   19370:	e0bffe17 	ldw	r2,-8(fp)
   19374:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
   19378:	e0bfff17 	ldw	r2,-4(fp)
   1937c:	10800017 	ldw	r2,0(r2)
   19380:	e0fffe17 	ldw	r3,-8(fp)
   19384:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   19388:	e0bfff17 	ldw	r2,-4(fp)
   1938c:	e0fffe17 	ldw	r3,-8(fp)
   19390:	10c00015 	stw	r3,0(r2)
}
   19394:	0001883a 	nop

  return 0;  
   19398:	0005883a 	mov	r2,zero
}
   1939c:	e037883a 	mov	sp,fp
   193a0:	dfc00117 	ldw	ra,4(sp)
   193a4:	df000017 	ldw	fp,0(sp)
   193a8:	dec00204 	addi	sp,sp,8
   193ac:	f800283a 	ret

000193b0 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   193b0:	defffd04 	addi	sp,sp,-12
   193b4:	dfc00215 	stw	ra,8(sp)
   193b8:	df000115 	stw	fp,4(sp)
   193bc:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   193c0:	008000b4 	movhi	r2,2
   193c4:	10a84a04 	addi	r2,r2,-24280
   193c8:	e0bfff15 	stw	r2,-4(fp)
   193cc:	00000606 	br	193e8 <_do_ctors+0x38>
        (*ctor) (); 
   193d0:	e0bfff17 	ldw	r2,-4(fp)
   193d4:	10800017 	ldw	r2,0(r2)
   193d8:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   193dc:	e0bfff17 	ldw	r2,-4(fp)
   193e0:	10bfff04 	addi	r2,r2,-4
   193e4:	e0bfff15 	stw	r2,-4(fp)
   193e8:	e0ffff17 	ldw	r3,-4(fp)
   193ec:	008000b4 	movhi	r2,2
   193f0:	10a84b04 	addi	r2,r2,-24276
   193f4:	18bff62e 	bgeu	r3,r2,193d0 <_do_ctors+0x20>
}
   193f8:	0001883a 	nop
   193fc:	0001883a 	nop
   19400:	e037883a 	mov	sp,fp
   19404:	dfc00117 	ldw	ra,4(sp)
   19408:	df000017 	ldw	fp,0(sp)
   1940c:	dec00204 	addi	sp,sp,8
   19410:	f800283a 	ret

00019414 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   19414:	defffd04 	addi	sp,sp,-12
   19418:	dfc00215 	stw	ra,8(sp)
   1941c:	df000115 	stw	fp,4(sp)
   19420:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   19424:	008000b4 	movhi	r2,2
   19428:	10a84a04 	addi	r2,r2,-24280
   1942c:	e0bfff15 	stw	r2,-4(fp)
   19430:	00000606 	br	1944c <_do_dtors+0x38>
        (*dtor) (); 
   19434:	e0bfff17 	ldw	r2,-4(fp)
   19438:	10800017 	ldw	r2,0(r2)
   1943c:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   19440:	e0bfff17 	ldw	r2,-4(fp)
   19444:	10bfff04 	addi	r2,r2,-4
   19448:	e0bfff15 	stw	r2,-4(fp)
   1944c:	e0ffff17 	ldw	r3,-4(fp)
   19450:	008000b4 	movhi	r2,2
   19454:	10a84b04 	addi	r2,r2,-24276
   19458:	18bff62e 	bgeu	r3,r2,19434 <_do_dtors+0x20>
}
   1945c:	0001883a 	nop
   19460:	0001883a 	nop
   19464:	e037883a 	mov	sp,fp
   19468:	dfc00117 	ldw	ra,4(sp)
   1946c:	df000017 	ldw	fp,0(sp)
   19470:	dec00204 	addi	sp,sp,8
   19474:	f800283a 	ret

00019478 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   19478:	defffa04 	addi	sp,sp,-24
   1947c:	dfc00515 	stw	ra,20(sp)
   19480:	df000415 	stw	fp,16(sp)
   19484:	df000404 	addi	fp,sp,16
   19488:	e13ffd15 	stw	r4,-12(fp)
   1948c:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
   19490:	e0bffc17 	ldw	r2,-16(fp)
   19494:	10800017 	ldw	r2,0(r2)
   19498:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   1949c:	e13ffd17 	ldw	r4,-12(fp)
   194a0:	00130d40 	call	130d4 <strlen>
   194a4:	10800044 	addi	r2,r2,1
   194a8:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   194ac:	00000d06 	br	194e4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   194b0:	e0bfff17 	ldw	r2,-4(fp)
   194b4:	10800217 	ldw	r2,8(r2)
   194b8:	e0fffe17 	ldw	r3,-8(fp)
   194bc:	180d883a 	mov	r6,r3
   194c0:	e17ffd17 	ldw	r5,-12(fp)
   194c4:	1009883a 	mov	r4,r2
   194c8:	0019f040 	call	19f04 <memcmp>
   194cc:	1000021e 	bne	r2,zero,194d8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   194d0:	e0bfff17 	ldw	r2,-4(fp)
   194d4:	00000706 	br	194f4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   194d8:	e0bfff17 	ldw	r2,-4(fp)
   194dc:	10800017 	ldw	r2,0(r2)
   194e0:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
   194e4:	e0ffff17 	ldw	r3,-4(fp)
   194e8:	e0bffc17 	ldw	r2,-16(fp)
   194ec:	18bff01e 	bne	r3,r2,194b0 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
   194f0:	0005883a 	mov	r2,zero
}
   194f4:	e037883a 	mov	sp,fp
   194f8:	dfc00117 	ldw	ra,4(sp)
   194fc:	df000017 	ldw	fp,0(sp)
   19500:	dec00204 	addi	sp,sp,8
   19504:	f800283a 	ret

00019508 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   19508:	deffff04 	addi	sp,sp,-4
   1950c:	df000015 	stw	fp,0(sp)
   19510:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   19514:	0001883a 	nop
   19518:	e037883a 	mov	sp,fp
   1951c:	df000017 	ldw	fp,0(sp)
   19520:	dec00104 	addi	sp,sp,4
   19524:	f800283a 	ret

00019528 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   19528:	defff904 	addi	sp,sp,-28
   1952c:	dfc00615 	stw	ra,24(sp)
   19530:	df000515 	stw	fp,20(sp)
   19534:	df000504 	addi	fp,sp,20
   19538:	e13ffe15 	stw	r4,-8(fp)
   1953c:	e17ffd15 	stw	r5,-12(fp)
   19540:	e1bffc15 	stw	r6,-16(fp)
   19544:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
   19548:	e1bffb17 	ldw	r6,-20(fp)
   1954c:	e17ffc17 	ldw	r5,-16(fp)
   19550:	e13ffd17 	ldw	r4,-12(fp)
   19554:	00199100 	call	19910 <open>
   19558:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
   1955c:	e0bfff17 	ldw	r2,-4(fp)
   19560:	10002016 	blt	r2,zero,195e4 <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
   19564:	e0ffff17 	ldw	r3,-4(fp)
   19568:	1805883a 	mov	r2,r3
   1956c:	1085883a 	add	r2,r2,r2
   19570:	10c5883a 	add	r2,r2,r3
   19574:	100490ba 	slli	r2,r2,2
   19578:	00c000b4 	movhi	r3,2
   1957c:	10c7883a 	add	r3,r2,r3
   19580:	18ee2d17 	ldw	r3,-18252(r3)
   19584:	e0bffe17 	ldw	r2,-8(fp)
   19588:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   1958c:	e0ffff17 	ldw	r3,-4(fp)
   19590:	1805883a 	mov	r2,r3
   19594:	1085883a 	add	r2,r2,r2
   19598:	10c5883a 	add	r2,r2,r3
   1959c:	100490ba 	slli	r2,r2,2
   195a0:	00c000b4 	movhi	r3,2
   195a4:	10c7883a 	add	r3,r2,r3
   195a8:	18ee2e17 	ldw	r3,-18248(r3)
   195ac:	e0bffe17 	ldw	r2,-8(fp)
   195b0:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   195b4:	e0ffff17 	ldw	r3,-4(fp)
   195b8:	1805883a 	mov	r2,r3
   195bc:	1085883a 	add	r2,r2,r2
   195c0:	10c5883a 	add	r2,r2,r3
   195c4:	100490ba 	slli	r2,r2,2
   195c8:	00c000b4 	movhi	r3,2
   195cc:	10c7883a 	add	r3,r2,r3
   195d0:	18ee2f17 	ldw	r3,-18244(r3)
   195d4:	e0bffe17 	ldw	r2,-8(fp)
   195d8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   195dc:	e13fff17 	ldw	r4,-4(fp)
   195e0:	00179e00 	call	179e0 <alt_release_fd>
  }
} 
   195e4:	0001883a 	nop
   195e8:	e037883a 	mov	sp,fp
   195ec:	dfc00117 	ldw	ra,4(sp)
   195f0:	df000017 	ldw	fp,0(sp)
   195f4:	dec00204 	addi	sp,sp,8
   195f8:	f800283a 	ret

000195fc <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   195fc:	defffb04 	addi	sp,sp,-20
   19600:	dfc00415 	stw	ra,16(sp)
   19604:	df000315 	stw	fp,12(sp)
   19608:	df000304 	addi	fp,sp,12
   1960c:	e13fff15 	stw	r4,-4(fp)
   19610:	e17ffe15 	stw	r5,-8(fp)
   19614:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   19618:	01c07fc4 	movi	r7,511
   1961c:	01800044 	movi	r6,1
   19620:	e17fff17 	ldw	r5,-4(fp)
   19624:	010000b4 	movhi	r4,2
   19628:	212e3004 	addi	r4,r4,-18240
   1962c:	00195280 	call	19528 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   19630:	01c07fc4 	movi	r7,511
   19634:	000d883a 	mov	r6,zero
   19638:	e17ffe17 	ldw	r5,-8(fp)
   1963c:	010000b4 	movhi	r4,2
   19640:	212e2d04 	addi	r4,r4,-18252
   19644:	00195280 	call	19528 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   19648:	01c07fc4 	movi	r7,511
   1964c:	01800044 	movi	r6,1
   19650:	e17ffd17 	ldw	r5,-12(fp)
   19654:	010000b4 	movhi	r4,2
   19658:	212e3304 	addi	r4,r4,-18228
   1965c:	00195280 	call	19528 <alt_open_fd>
}  
   19660:	0001883a 	nop
   19664:	e037883a 	mov	sp,fp
   19668:	dfc00117 	ldw	ra,4(sp)
   1966c:	df000017 	ldw	fp,0(sp)
   19670:	dec00204 	addi	sp,sp,8
   19674:	f800283a 	ret

00019678 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
   19678:	defff004 	addi	sp,sp,-64
   1967c:	df000f15 	stw	fp,60(sp)
   19680:	df000f04 	addi	fp,sp,60
   19684:	e13ff315 	stw	r4,-52(fp)
   19688:	e17ff215 	stw	r5,-56(fp)
   1968c:	e1bff115 	stw	r6,-60(fp)
  int rc = -EINVAL;  
   19690:	00bffa84 	movi	r2,-22
   19694:	e0bfff15 	stw	r2,-4(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   19698:	e0bff317 	ldw	r2,-52(fp)
   1969c:	10800828 	cmpgeui	r2,r2,32
   196a0:	1000501e 	bne	r2,zero,197e4 <alt_irq_register+0x16c>
  NIOS2_READ_STATUS (context);
   196a4:	0005303a 	rdctl	r2,status
   196a8:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   196ac:	e0fffd17 	ldw	r3,-12(fp)
   196b0:	00bfff84 	movi	r2,-2
   196b4:	1884703a 	and	r2,r3,r2
   196b8:	1001703a 	wrctl	status,r2
  return context;
   196bc:	e0bffd17 	ldw	r2,-12(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
   196c0:	e0bffe15 	stw	r2,-8(fp)

    alt_irq[id].handler = handler;
   196c4:	e0bff317 	ldw	r2,-52(fp)
   196c8:	100890fa 	slli	r4,r2,3
   196cc:	e0fff117 	ldw	r3,-60(fp)
   196d0:	008000b4 	movhi	r2,2
   196d4:	2085883a 	add	r2,r4,r2
   196d8:	10fa1d15 	stw	r3,-6028(r2)
    alt_irq[id].context = context;
   196dc:	e0bff317 	ldw	r2,-52(fp)
   196e0:	100890fa 	slli	r4,r2,3
   196e4:	e0fff217 	ldw	r3,-56(fp)
   196e8:	008000b4 	movhi	r2,2
   196ec:	2085883a 	add	r2,r4,r2
   196f0:	10fa1e15 	stw	r3,-6024(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   196f4:	e0bff117 	ldw	r2,-60(fp)
   196f8:	10001a26 	beq	r2,zero,19764 <alt_irq_register+0xec>
   196fc:	e0bff317 	ldw	r2,-52(fp)
   19700:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_READ_STATUS (context);
   19704:	0005303a 	rdctl	r2,status
   19708:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1970c:	e0fffb17 	ldw	r3,-20(fp)
   19710:	00bfff84 	movi	r2,-2
   19714:	1884703a 	and	r2,r3,r2
   19718:	1001703a 	wrctl	status,r2
  return context;
   1971c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   19720:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active |= (1 << id);
   19724:	00c00044 	movi	r3,1
   19728:	e0bffc17 	ldw	r2,-16(fp)
   1972c:	1884983a 	sll	r2,r3,r2
   19730:	1007883a 	mov	r3,r2
   19734:	d0a73b17 	ldw	r2,-25364(gp)
   19738:	1884b03a 	or	r2,r3,r2
   1973c:	d0a73b15 	stw	r2,-25364(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   19740:	d0a73b17 	ldw	r2,-25364(gp)
   19744:	100170fa 	wrctl	ienable,r2
   19748:	e0bffa17 	ldw	r2,-24(fp)
   1974c:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context);
   19750:	e0bff917 	ldw	r2,-28(fp)
   19754:	1001703a 	wrctl	status,r2
}
   19758:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
   1975c:	0005883a 	mov	r2,zero
   19760:	00001a06 	br	197cc <alt_irq_register+0x154>
   19764:	e0bff317 	ldw	r2,-52(fp)
   19768:	e0bff815 	stw	r2,-32(fp)
  NIOS2_READ_STATUS (context);
   1976c:	0005303a 	rdctl	r2,status
   19770:	e0bff715 	stw	r2,-36(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   19774:	e0fff717 	ldw	r3,-36(fp)
   19778:	00bfff84 	movi	r2,-2
   1977c:	1884703a 	and	r2,r3,r2
   19780:	1001703a 	wrctl	status,r2
  return context;
   19784:	e0bff717 	ldw	r2,-36(fp)
  status = alt_irq_disable_all ();
   19788:	e0bff615 	stw	r2,-40(fp)
  alt_irq_active &= ~(1 << id);
   1978c:	00c00044 	movi	r3,1
   19790:	e0bff817 	ldw	r2,-32(fp)
   19794:	1884983a 	sll	r2,r3,r2
   19798:	0084303a 	nor	r2,zero,r2
   1979c:	1007883a 	mov	r3,r2
   197a0:	d0a73b17 	ldw	r2,-25364(gp)
   197a4:	1884703a 	and	r2,r3,r2
   197a8:	d0a73b15 	stw	r2,-25364(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   197ac:	d0a73b17 	ldw	r2,-25364(gp)
   197b0:	100170fa 	wrctl	ienable,r2
   197b4:	e0bff617 	ldw	r2,-40(fp)
   197b8:	e0bff515 	stw	r2,-44(fp)
  NIOS2_WRITE_STATUS (context);
   197bc:	e0bff517 	ldw	r2,-44(fp)
   197c0:	1001703a 	wrctl	status,r2
}
   197c4:	0001883a 	nop
  return 0;
   197c8:	0005883a 	mov	r2,zero
   197cc:	e0bfff15 	stw	r2,-4(fp)
   197d0:	e0bffe17 	ldw	r2,-8(fp)
   197d4:	e0bff415 	stw	r2,-48(fp)
  NIOS2_WRITE_STATUS (context);
   197d8:	e0bff417 	ldw	r2,-48(fp)
   197dc:	1001703a 	wrctl	status,r2
}
   197e0:	0001883a 	nop

    alt_irq_enable_all(status);
  }
  return rc; 
   197e4:	e0bfff17 	ldw	r2,-4(fp)
}
   197e8:	e037883a 	mov	sp,fp
   197ec:	df000017 	ldw	fp,0(sp)
   197f0:	dec00104 	addi	sp,sp,4
   197f4:	f800283a 	ret

000197f8 <alt_get_errno>:
{
   197f8:	defffe04 	addi	sp,sp,-8
   197fc:	dfc00115 	stw	ra,4(sp)
   19800:	df000015 	stw	fp,0(sp)
   19804:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   19808:	d0a00917 	ldw	r2,-32732(gp)
   1980c:	10000326 	beq	r2,zero,1981c <alt_get_errno+0x24>
   19810:	d0a00917 	ldw	r2,-32732(gp)
   19814:	103ee83a 	callr	r2
   19818:	00000106 	br	19820 <alt_get_errno+0x28>
   1981c:	d0a73604 	addi	r2,gp,-25384
}
   19820:	e037883a 	mov	sp,fp
   19824:	dfc00117 	ldw	ra,4(sp)
   19828:	df000017 	ldw	fp,0(sp)
   1982c:	dec00204 	addi	sp,sp,8
   19830:	f800283a 	ret

00019834 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   19834:	defffd04 	addi	sp,sp,-12
   19838:	df000215 	stw	fp,8(sp)
   1983c:	df000204 	addi	fp,sp,8
   19840:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   19844:	e0bffe17 	ldw	r2,-8(fp)
   19848:	10800217 	ldw	r2,8(r2)
   1984c:	10d00034 	orhi	r3,r2,16384
   19850:	e0bffe17 	ldw	r2,-8(fp)
   19854:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   19858:	e03fff15 	stw	zero,-4(fp)
   1985c:	00002306 	br	198ec <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   19860:	e0ffff17 	ldw	r3,-4(fp)
   19864:	1805883a 	mov	r2,r3
   19868:	1085883a 	add	r2,r2,r2
   1986c:	10c5883a 	add	r2,r2,r3
   19870:	100490ba 	slli	r2,r2,2
   19874:	00c000b4 	movhi	r3,2
   19878:	10c7883a 	add	r3,r2,r3
   1987c:	18ee2d17 	ldw	r3,-18252(r3)
   19880:	e0bffe17 	ldw	r2,-8(fp)
   19884:	10800017 	ldw	r2,0(r2)
   19888:	1880151e 	bne	r3,r2,198e0 <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   1988c:	e0ffff17 	ldw	r3,-4(fp)
   19890:	1805883a 	mov	r2,r3
   19894:	1085883a 	add	r2,r2,r2
   19898:	10c5883a 	add	r2,r2,r3
   1989c:	100490ba 	slli	r2,r2,2
   198a0:	00c000b4 	movhi	r3,2
   198a4:	10c7883a 	add	r3,r2,r3
   198a8:	18ae2f17 	ldw	r2,-18244(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
   198ac:	10000c0e 	bge	r2,zero,198e0 <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
   198b0:	e0ffff17 	ldw	r3,-4(fp)
   198b4:	1805883a 	mov	r2,r3
   198b8:	1085883a 	add	r2,r2,r2
   198bc:	10c5883a 	add	r2,r2,r3
   198c0:	100490ba 	slli	r2,r2,2
   198c4:	00c000b4 	movhi	r3,2
   198c8:	18ee2d04 	addi	r3,r3,-18252
   198cc:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   198d0:	e0fffe17 	ldw	r3,-8(fp)
   198d4:	18800226 	beq	r3,r2,198e0 <alt_file_locked+0xac>
    {
      return -EACCES;
   198d8:	00bffcc4 	movi	r2,-13
   198dc:	00000806 	br	19900 <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
   198e0:	e0bfff17 	ldw	r2,-4(fp)
   198e4:	10800044 	addi	r2,r2,1
   198e8:	e0bfff15 	stw	r2,-4(fp)
   198ec:	d0a00817 	ldw	r2,-32736(gp)
   198f0:	1007883a 	mov	r3,r2
   198f4:	e0bfff17 	ldw	r2,-4(fp)
   198f8:	18bfd92e 	bgeu	r3,r2,19860 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   198fc:	0005883a 	mov	r2,zero
}
   19900:	e037883a 	mov	sp,fp
   19904:	df000017 	ldw	fp,0(sp)
   19908:	dec00104 	addi	sp,sp,4
   1990c:	f800283a 	ret

00019910 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   19910:	defff604 	addi	sp,sp,-40
   19914:	dfc00915 	stw	ra,36(sp)
   19918:	df000815 	stw	fp,32(sp)
   1991c:	df000804 	addi	fp,sp,32
   19920:	e13ffa15 	stw	r4,-24(fp)
   19924:	e17ff915 	stw	r5,-28(fp)
   19928:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   1992c:	00bfffc4 	movi	r2,-1
   19930:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
   19934:	00bffb44 	movi	r2,-19
   19938:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
   1993c:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   19940:	d1600604 	addi	r5,gp,-32744
   19944:	e13ffa17 	ldw	r4,-24(fp)
   19948:	00194780 	call	19478 <alt_find_dev>
   1994c:	e0bfff15 	stw	r2,-4(fp)
   19950:	e0bfff17 	ldw	r2,-4(fp)
   19954:	1000051e 	bne	r2,zero,1996c <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   19958:	e13ffa17 	ldw	r4,-24(fp)
   1995c:	0019c640 	call	19c64 <alt_find_file>
   19960:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
   19964:	00800044 	movi	r2,1
   19968:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   1996c:	e0bfff17 	ldw	r2,-4(fp)
   19970:	10002c26 	beq	r2,zero,19a24 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
   19974:	e13fff17 	ldw	r4,-4(fp)
   19978:	0019d6c0 	call	19d6c <alt_get_fd>
   1997c:	e0bffe15 	stw	r2,-8(fp)
   19980:	e0bffe17 	ldw	r2,-8(fp)
   19984:	1000030e 	bge	r2,zero,19994 <open+0x84>
    {
      status = index;
   19988:	e0bffe17 	ldw	r2,-8(fp)
   1998c:	e0bffd15 	stw	r2,-12(fp)
   19990:	00002606 	br	19a2c <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
   19994:	e0fffe17 	ldw	r3,-8(fp)
   19998:	1805883a 	mov	r2,r3
   1999c:	1085883a 	add	r2,r2,r2
   199a0:	10c5883a 	add	r2,r2,r3
   199a4:	100490ba 	slli	r2,r2,2
   199a8:	00c000b4 	movhi	r3,2
   199ac:	18ee2d04 	addi	r3,r3,-18252
   199b0:	10c5883a 	add	r2,r2,r3
   199b4:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   199b8:	e0fff917 	ldw	r3,-28(fp)
   199bc:	00900034 	movhi	r2,16384
   199c0:	10bfffc4 	addi	r2,r2,-1
   199c4:	1886703a 	and	r3,r3,r2
   199c8:	e0bffb17 	ldw	r2,-20(fp)
   199cc:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   199d0:	e0bffc17 	ldw	r2,-16(fp)
   199d4:	1000051e 	bne	r2,zero,199ec <open+0xdc>
   199d8:	e13ffb17 	ldw	r4,-20(fp)
   199dc:	00198340 	call	19834 <alt_file_locked>
   199e0:	e0bffd15 	stw	r2,-12(fp)
   199e4:	e0bffd17 	ldw	r2,-12(fp)
   199e8:	10001016 	blt	r2,zero,19a2c <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   199ec:	e0bfff17 	ldw	r2,-4(fp)
   199f0:	10800317 	ldw	r2,12(r2)
   199f4:	10000826 	beq	r2,zero,19a18 <open+0x108>
   199f8:	e0bfff17 	ldw	r2,-4(fp)
   199fc:	10800317 	ldw	r2,12(r2)
   19a00:	e1fff817 	ldw	r7,-32(fp)
   19a04:	e1bff917 	ldw	r6,-28(fp)
   19a08:	e17ffa17 	ldw	r5,-24(fp)
   19a0c:	e13ffb17 	ldw	r4,-20(fp)
   19a10:	103ee83a 	callr	r2
   19a14:	00000106 	br	19a1c <open+0x10c>
   19a18:	0005883a 	mov	r2,zero
   19a1c:	e0bffd15 	stw	r2,-12(fp)
   19a20:	00000206 	br	19a2c <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
   19a24:	00bffb44 	movi	r2,-19
   19a28:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   19a2c:	e0bffd17 	ldw	r2,-12(fp)
   19a30:	1000090e 	bge	r2,zero,19a58 <open+0x148>
  {
    alt_release_fd (index);  
   19a34:	e13ffe17 	ldw	r4,-8(fp)
   19a38:	00179e00 	call	179e0 <alt_release_fd>
    ALT_ERRNO = -status;
   19a3c:	00197f80 	call	197f8 <alt_get_errno>
   19a40:	1007883a 	mov	r3,r2
   19a44:	e0bffd17 	ldw	r2,-12(fp)
   19a48:	0085c83a 	sub	r2,zero,r2
   19a4c:	18800015 	stw	r2,0(r3)
    return -1;
   19a50:	00bfffc4 	movi	r2,-1
   19a54:	00000106 	br	19a5c <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
   19a58:	e0bffe17 	ldw	r2,-8(fp)
}
   19a5c:	e037883a 	mov	sp,fp
   19a60:	dfc00117 	ldw	ra,4(sp)
   19a64:	df000017 	ldw	fp,0(sp)
   19a68:	dec00204 	addi	sp,sp,8
   19a6c:	f800283a 	ret

00019a70 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   19a70:	defffa04 	addi	sp,sp,-24
   19a74:	df000515 	stw	fp,20(sp)
   19a78:	df000504 	addi	fp,sp,20
   19a7c:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
   19a80:	0005303a 	rdctl	r2,status
   19a84:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   19a88:	e0fffc17 	ldw	r3,-16(fp)
   19a8c:	00bfff84 	movi	r2,-2
   19a90:	1884703a 	and	r2,r3,r2
   19a94:	1001703a 	wrctl	status,r2
  return context;
   19a98:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   19a9c:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
   19aa0:	e0bffb17 	ldw	r2,-20(fp)
   19aa4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   19aa8:	e0bffd17 	ldw	r2,-12(fp)
   19aac:	10800017 	ldw	r2,0(r2)
   19ab0:	e0fffd17 	ldw	r3,-12(fp)
   19ab4:	18c00117 	ldw	r3,4(r3)
   19ab8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   19abc:	e0bffd17 	ldw	r2,-12(fp)
   19ac0:	10800117 	ldw	r2,4(r2)
   19ac4:	e0fffd17 	ldw	r3,-12(fp)
   19ac8:	18c00017 	ldw	r3,0(r3)
   19acc:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   19ad0:	e0bffd17 	ldw	r2,-12(fp)
   19ad4:	e0fffd17 	ldw	r3,-12(fp)
   19ad8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   19adc:	e0bffd17 	ldw	r2,-12(fp)
   19ae0:	e0fffd17 	ldw	r3,-12(fp)
   19ae4:	10c00015 	stw	r3,0(r2)
} 
   19ae8:	0001883a 	nop
   19aec:	e0bfff17 	ldw	r2,-4(fp)
   19af0:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   19af4:	e0bffe17 	ldw	r2,-8(fp)
   19af8:	1001703a 	wrctl	status,r2
}
   19afc:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
   19b00:	0001883a 	nop
   19b04:	e037883a 	mov	sp,fp
   19b08:	df000017 	ldw	fp,0(sp)
   19b0c:	dec00104 	addi	sp,sp,4
   19b10:	f800283a 	ret

00019b14 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   19b14:	defff904 	addi	sp,sp,-28
   19b18:	dfc00615 	stw	ra,24(sp)
   19b1c:	df000515 	stw	fp,20(sp)
   19b20:	dc400415 	stw	r17,16(sp)
   19b24:	dc000315 	stw	r16,12(sp)
   19b28:	df000504 	addi	fp,sp,20
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   19b2c:	d0a00c17 	ldw	r2,-32720(gp)
   19b30:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   19b34:	d1273d17 	ldw	r4,-25356(gp)
   19b38:	d1673e17 	ldw	r5,-25352(gp)
   19b3c:	01800044 	movi	r6,1
   19b40:	000f883a 	mov	r7,zero
   19b44:	2185883a 	add	r2,r4,r6
   19b48:	1111803a 	cmpltu	r8,r2,r4
   19b4c:	29c7883a 	add	r3,r5,r7
   19b50:	40c9883a 	add	r4,r8,r3
   19b54:	2007883a 	mov	r3,r4
   19b58:	1009883a 	mov	r4,r2
   19b5c:	180b883a 	mov	r5,r3
   19b60:	d1273d15 	stw	r4,-25356(gp)
   19b64:	d1673e15 	stw	r5,-25352(gp)
 
  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   19b68:	00002906 	br	19c10 <alt_tick+0xfc>
  {
    next = (alt_alarm*) alarm->llist.next;
   19b6c:	e0bffd17 	ldw	r2,-12(fp)
   19b70:	10800017 	ldw	r2,0(r2)
   19b74:	e0bffc15 	stw	r2,-16(fp)
    
    /* if the alarm period has expired, make the callback */    
    if (alarm->time <= _alt_nticks)
   19b78:	e13ffd17 	ldw	r4,-12(fp)
   19b7c:	20800217 	ldw	r2,8(r4)
   19b80:	20c00317 	ldw	r3,12(r4)
   19b84:	d1273d17 	ldw	r4,-25356(gp)
   19b88:	d1673e17 	ldw	r5,-25352(gp)
   19b8c:	28c01e36 	bltu	r5,r3,19c08 <alt_tick+0xf4>
   19b90:	1940011e 	bne	r3,r5,19b98 <alt_tick+0x84>
   19b94:	20801c36 	bltu	r4,r2,19c08 <alt_tick+0xf4>
    {
      next_callback = alarm->callback (alarm->context);
   19b98:	e0bffd17 	ldw	r2,-12(fp)
   19b9c:	10800417 	ldw	r2,16(r2)
   19ba0:	e0fffd17 	ldw	r3,-12(fp)
   19ba4:	18c00517 	ldw	r3,20(r3)
   19ba8:	1809883a 	mov	r4,r3
   19bac:	103ee83a 	callr	r2
   19bb0:	e0bffb15 	stw	r2,-20(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   19bb4:	e0bffb17 	ldw	r2,-20(fp)
   19bb8:	1000031e 	bne	r2,zero,19bc8 <alt_tick+0xb4>
      {
        alt_alarm_stop (alarm);
   19bbc:	e13ffd17 	ldw	r4,-12(fp)
   19bc0:	0019a700 	call	19a70 <alt_alarm_stop>
   19bc4:	00001006 	br	19c08 <alt_tick+0xf4>
      }
      else
      {
        alarm->time += next_callback;
   19bc8:	e0bffd17 	ldw	r2,-12(fp)
   19bcc:	11000217 	ldw	r4,8(r2)
   19bd0:	11400317 	ldw	r5,12(r2)
   19bd4:	e0bffb17 	ldw	r2,-20(fp)
   19bd8:	1021883a 	mov	r16,r2
   19bdc:	0023883a 	mov	r17,zero
   19be0:	2405883a 	add	r2,r4,r16
   19be4:	110d803a 	cmpltu	r6,r2,r4
   19be8:	2c47883a 	add	r3,r5,r17
   19bec:	30c9883a 	add	r4,r6,r3
   19bf0:	2007883a 	mov	r3,r4
   19bf4:	1009883a 	mov	r4,r2
   19bf8:	180b883a 	mov	r5,r3
   19bfc:	e0bffd17 	ldw	r2,-12(fp)
   19c00:	11000215 	stw	r4,8(r2)
   19c04:	11400315 	stw	r5,12(r2)
      }
    }
    alarm = next;
   19c08:	e0bffc17 	ldw	r2,-16(fp)
   19c0c:	e0bffd15 	stw	r2,-12(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
   19c10:	e0fffd17 	ldw	r3,-12(fp)
   19c14:	d0a00c04 	addi	r2,gp,-32720
   19c18:	18bfd41e 	bne	r3,r2,19b6c <alt_tick+0x58>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   19c1c:	0001883a 	nop
}
   19c20:	0001883a 	nop
   19c24:	e6fffe04 	addi	sp,fp,-8
   19c28:	dfc00317 	ldw	ra,12(sp)
   19c2c:	df000217 	ldw	fp,8(sp)
   19c30:	dc400117 	ldw	r17,4(sp)
   19c34:	dc000017 	ldw	r16,0(sp)
   19c38:	dec00404 	addi	sp,sp,16
   19c3c:	f800283a 	ret

00019c40 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   19c40:	deffff04 	addi	sp,sp,-4
   19c44:	df000015 	stw	fp,0(sp)
   19c48:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   19c4c:	000170fa 	wrctl	ienable,zero
}
   19c50:	0001883a 	nop
   19c54:	e037883a 	mov	sp,fp
   19c58:	df000017 	ldw	fp,0(sp)
   19c5c:	dec00104 	addi	sp,sp,4
   19c60:	f800283a 	ret

00019c64 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   19c64:	defffb04 	addi	sp,sp,-20
   19c68:	dfc00415 	stw	ra,16(sp)
   19c6c:	df000315 	stw	fp,12(sp)
   19c70:	df000304 	addi	fp,sp,12
   19c74:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   19c78:	d0a00417 	ldw	r2,-32752(gp)
   19c7c:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   19c80:	00003106 	br	19d48 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   19c84:	e0bfff17 	ldw	r2,-4(fp)
   19c88:	10800217 	ldw	r2,8(r2)
   19c8c:	1009883a 	mov	r4,r2
   19c90:	00130d40 	call	130d4 <strlen>
   19c94:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   19c98:	e0bfff17 	ldw	r2,-4(fp)
   19c9c:	10c00217 	ldw	r3,8(r2)
   19ca0:	e0bffe17 	ldw	r2,-8(fp)
   19ca4:	10bfffc4 	addi	r2,r2,-1
   19ca8:	1885883a 	add	r2,r3,r2
   19cac:	10800003 	ldbu	r2,0(r2)
   19cb0:	10803fcc 	andi	r2,r2,255
   19cb4:	1080201c 	xori	r2,r2,128
   19cb8:	10bfe004 	addi	r2,r2,-128
   19cbc:	10800bd8 	cmpnei	r2,r2,47
   19cc0:	1000031e 	bne	r2,zero,19cd0 <alt_find_file+0x6c>
    {
      len -= 1;
   19cc4:	e0bffe17 	ldw	r2,-8(fp)
   19cc8:	10bfffc4 	addi	r2,r2,-1
   19ccc:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   19cd0:	e0bffe17 	ldw	r2,-8(fp)
   19cd4:	e0fffd17 	ldw	r3,-12(fp)
   19cd8:	1885883a 	add	r2,r3,r2
   19cdc:	10800003 	ldbu	r2,0(r2)
   19ce0:	10803fcc 	andi	r2,r2,255
   19ce4:	1080201c 	xori	r2,r2,128
   19ce8:	10bfe004 	addi	r2,r2,-128
   19cec:	10800be0 	cmpeqi	r2,r2,47
   19cf0:	1000081e 	bne	r2,zero,19d14 <alt_find_file+0xb0>
   19cf4:	e0bffe17 	ldw	r2,-8(fp)
   19cf8:	e0fffd17 	ldw	r3,-12(fp)
   19cfc:	1885883a 	add	r2,r3,r2
   19d00:	10800003 	ldbu	r2,0(r2)
   19d04:	10803fcc 	andi	r2,r2,255
   19d08:	1080201c 	xori	r2,r2,128
   19d0c:	10bfe004 	addi	r2,r2,-128
   19d10:	10000a1e 	bne	r2,zero,19d3c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   19d14:	e0bfff17 	ldw	r2,-4(fp)
   19d18:	10800217 	ldw	r2,8(r2)
   19d1c:	e0fffe17 	ldw	r3,-8(fp)
   19d20:	180d883a 	mov	r6,r3
   19d24:	e17ffd17 	ldw	r5,-12(fp)
   19d28:	1009883a 	mov	r4,r2
   19d2c:	0019f040 	call	19f04 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
   19d30:	1000021e 	bne	r2,zero,19d3c <alt_find_file+0xd8>
    {
      /* match found */

      return next;
   19d34:	e0bfff17 	ldw	r2,-4(fp)
   19d38:	00000706 	br	19d58 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   19d3c:	e0bfff17 	ldw	r2,-4(fp)
   19d40:	10800017 	ldw	r2,0(r2)
   19d44:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
   19d48:	e0ffff17 	ldw	r3,-4(fp)
   19d4c:	d0a00404 	addi	r2,gp,-32752
   19d50:	18bfcc1e 	bne	r3,r2,19c84 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
   19d54:	0005883a 	mov	r2,zero
}
   19d58:	e037883a 	mov	sp,fp
   19d5c:	dfc00117 	ldw	ra,4(sp)
   19d60:	df000017 	ldw	fp,0(sp)
   19d64:	dec00204 	addi	sp,sp,8
   19d68:	f800283a 	ret

00019d6c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   19d6c:	defffc04 	addi	sp,sp,-16
   19d70:	df000315 	stw	fp,12(sp)
   19d74:	df000304 	addi	fp,sp,12
   19d78:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
   19d7c:	00bffa04 	movi	r2,-24
   19d80:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   19d84:	e03fff15 	stw	zero,-4(fp)
   19d88:	00001d06 	br	19e00 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
   19d8c:	e0ffff17 	ldw	r3,-4(fp)
   19d90:	1805883a 	mov	r2,r3
   19d94:	1085883a 	add	r2,r2,r2
   19d98:	10c5883a 	add	r2,r2,r3
   19d9c:	100490ba 	slli	r2,r2,2
   19da0:	00c000b4 	movhi	r3,2
   19da4:	10c7883a 	add	r3,r2,r3
   19da8:	18ae2d17 	ldw	r2,-18252(r3)
   19dac:	1000111e 	bne	r2,zero,19df4 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
   19db0:	e0ffff17 	ldw	r3,-4(fp)
   19db4:	1805883a 	mov	r2,r3
   19db8:	1085883a 	add	r2,r2,r2
   19dbc:	10c5883a 	add	r2,r2,r3
   19dc0:	100490ba 	slli	r2,r2,2
   19dc4:	e13ffd17 	ldw	r4,-12(fp)
   19dc8:	00c000b4 	movhi	r3,2
   19dcc:	10c7883a 	add	r3,r2,r3
   19dd0:	192e2d15 	stw	r4,-18252(r3)
      if (i > alt_max_fd)
   19dd4:	d0e00817 	ldw	r3,-32736(gp)
   19dd8:	e0bfff17 	ldw	r2,-4(fp)
   19ddc:	1880020e 	bge	r3,r2,19de8 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
   19de0:	e0bfff17 	ldw	r2,-4(fp)
   19de4:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
   19de8:	e0bfff17 	ldw	r2,-4(fp)
   19dec:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   19df0:	00000706 	br	19e10 <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
   19df4:	e0bfff17 	ldw	r2,-4(fp)
   19df8:	10800044 	addi	r2,r2,1
   19dfc:	e0bfff15 	stw	r2,-4(fp)
   19e00:	e0bfff17 	ldw	r2,-4(fp)
   19e04:	10800810 	cmplti	r2,r2,32
   19e08:	103fe01e 	bne	r2,zero,19d8c <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
   19e0c:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   19e10:	e0bffe17 	ldw	r2,-8(fp)
}
   19e14:	e037883a 	mov	sp,fp
   19e18:	df000017 	ldw	fp,0(sp)
   19e1c:	dec00104 	addi	sp,sp,4
   19e20:	f800283a 	ret

00019e24 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   19e24:	defffe04 	addi	sp,sp,-8
   19e28:	df000115 	stw	fp,4(sp)
   19e2c:	df000104 	addi	fp,sp,4
   19e30:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   19e34:	e0bfff17 	ldw	r2,-4(fp)
   19e38:	10bffe84 	addi	r2,r2,-6
   19e3c:	10c00428 	cmpgeui	r3,r2,16
   19e40:	1800191e 	bne	r3,zero,19ea8 <alt_exception_cause_generated_bad_addr+0x84>
   19e44:	100690ba 	slli	r3,r2,2
   19e48:	008000b4 	movhi	r2,2
   19e4c:	1885883a 	add	r2,r3,r2
   19e50:	10a79617 	ldw	r2,-25000(r2)
   19e54:	1000683a 	jmp	r2
   19e58:	00019e98 	cmpnei	zero,zero,1658
   19e5c:	00019e98 	cmpnei	zero,zero,1658
   19e60:	00019ea8 	cmpgeui	zero,zero,1658
   19e64:	00019ea8 	cmpgeui	zero,zero,1658
   19e68:	00019ea8 	cmpgeui	zero,zero,1658
   19e6c:	00019e98 	cmpnei	zero,zero,1658
   19e70:	00019ea0 	cmpeqi	zero,zero,1658
   19e74:	00019ea8 	cmpgeui	zero,zero,1658
   19e78:	00019e98 	cmpnei	zero,zero,1658
   19e7c:	00019e98 	cmpnei	zero,zero,1658
   19e80:	00019ea8 	cmpgeui	zero,zero,1658
   19e84:	00019e98 	cmpnei	zero,zero,1658
   19e88:	00019ea0 	cmpeqi	zero,zero,1658
   19e8c:	00019ea8 	cmpgeui	zero,zero,1658
   19e90:	00019ea8 	cmpgeui	zero,zero,1658
   19e94:	00019e98 	cmpnei	zero,zero,1658
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   19e98:	00800044 	movi	r2,1
   19e9c:	00000306 	br	19eac <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   19ea0:	0005883a 	mov	r2,zero
   19ea4:	00000106 	br	19eac <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
   19ea8:	0005883a 	mov	r2,zero
  }
}
   19eac:	e037883a 	mov	sp,fp
   19eb0:	df000017 	ldw	fp,0(sp)
   19eb4:	dec00104 	addi	sp,sp,4
   19eb8:	f800283a 	ret

00019ebc <atexit>:
   19ebc:	200b883a 	mov	r5,r4
   19ec0:	000f883a 	mov	r7,zero
   19ec4:	000d883a 	mov	r6,zero
   19ec8:	0009883a 	mov	r4,zero
   19ecc:	0019f7c1 	jmpi	19f7c <__register_exitproc>

00019ed0 <exit>:
   19ed0:	defffe04 	addi	sp,sp,-8
   19ed4:	000b883a 	mov	r5,zero
   19ed8:	dc000015 	stw	r16,0(sp)
   19edc:	dfc00115 	stw	ra,4(sp)
   19ee0:	2021883a 	mov	r16,r4
   19ee4:	001a00c0 	call	1a00c <__call_exitprocs>
   19ee8:	008000b4 	movhi	r2,2
   19eec:	1132d317 	ldw	r4,-13492(r2)
   19ef0:	20800f17 	ldw	r2,60(r4)
   19ef4:	10000126 	beq	r2,zero,19efc <exit+0x2c>
   19ef8:	103ee83a 	callr	r2
   19efc:	8009883a 	mov	r4,r16
   19f00:	0016fd00 	call	16fd0 <_exit>

00019f04 <memcmp>:
   19f04:	30800130 	cmpltui	r2,r6,4
   19f08:	10000b1e 	bne	r2,zero,19f38 <memcmp+0x34>
   19f0c:	2144b03a 	or	r2,r4,r5
   19f10:	108000cc 	andi	r2,r2,3
   19f14:	1000171e 	bne	r2,zero,19f74 <memcmp+0x70>
   19f18:	20c00017 	ldw	r3,0(r4)
   19f1c:	28800017 	ldw	r2,0(r5)
   19f20:	1880141e 	bne	r3,r2,19f74 <memcmp+0x70>
   19f24:	31bfff04 	addi	r6,r6,-4
   19f28:	30800128 	cmpgeui	r2,r6,4
   19f2c:	21000104 	addi	r4,r4,4
   19f30:	29400104 	addi	r5,r5,4
   19f34:	103ff81e 	bne	r2,zero,19f18 <memcmp+0x14>
   19f38:	30bfffc4 	addi	r2,r6,-1
   19f3c:	30000b26 	beq	r6,zero,19f6c <memcmp+0x68>
   19f40:	11800044 	addi	r6,r2,1
   19f44:	218d883a 	add	r6,r4,r6
   19f48:	00000106 	br	19f50 <memcmp+0x4c>
   19f4c:	21800726 	beq	r4,r6,19f6c <memcmp+0x68>
   19f50:	20800003 	ldbu	r2,0(r4)
   19f54:	28c00003 	ldbu	r3,0(r5)
   19f58:	21000044 	addi	r4,r4,1
   19f5c:	29400044 	addi	r5,r5,1
   19f60:	10fffa26 	beq	r2,r3,19f4c <memcmp+0x48>
   19f64:	10c5c83a 	sub	r2,r2,r3
   19f68:	f800283a 	ret
   19f6c:	0005883a 	mov	r2,zero
   19f70:	f800283a 	ret
   19f74:	30bfffc4 	addi	r2,r6,-1
   19f78:	003ff106 	br	19f40 <memcmp+0x3c>

00019f7c <__register_exitproc>:
   19f7c:	008000b4 	movhi	r2,2
   19f80:	10f2d317 	ldw	r3,-13492(r2)
   19f84:	18805217 	ldw	r2,328(r3)
   19f88:	10001726 	beq	r2,zero,19fe8 <__register_exitproc+0x6c>
   19f8c:	10c00117 	ldw	r3,4(r2)
   19f90:	1a000808 	cmpgei	r8,r3,32
   19f94:	40001b1e 	bne	r8,zero,1a004 <__register_exitproc+0x88>
   19f98:	20000b26 	beq	r4,zero,19fc8 <__register_exitproc+0x4c>
   19f9c:	181090ba 	slli	r8,r3,2
   19fa0:	02400044 	movi	r9,1
   19fa4:	48d2983a 	sll	r9,r9,r3
   19fa8:	1211883a 	add	r8,r2,r8
   19fac:	41802215 	stw	r6,136(r8)
   19fb0:	11806217 	ldw	r6,392(r2)
   19fb4:	21000098 	cmpnei	r4,r4,2
   19fb8:	324cb03a 	or	r6,r6,r9
   19fbc:	11806215 	stw	r6,392(r2)
   19fc0:	41c04215 	stw	r7,264(r8)
   19fc4:	20000b26 	beq	r4,zero,19ff4 <__register_exitproc+0x78>
   19fc8:	19000084 	addi	r4,r3,2
   19fcc:	200890ba 	slli	r4,r4,2
   19fd0:	18c00044 	addi	r3,r3,1
   19fd4:	10c00115 	stw	r3,4(r2)
   19fd8:	1105883a 	add	r2,r2,r4
   19fdc:	11400015 	stw	r5,0(r2)
   19fe0:	0005883a 	mov	r2,zero
   19fe4:	f800283a 	ret
   19fe8:	18805304 	addi	r2,r3,332
   19fec:	18805215 	stw	r2,328(r3)
   19ff0:	003fe606 	br	19f8c <__register_exitproc+0x10>
   19ff4:	11006317 	ldw	r4,396(r2)
   19ff8:	2252b03a 	or	r9,r4,r9
   19ffc:	12406315 	stw	r9,396(r2)
   1a000:	003ff106 	br	19fc8 <__register_exitproc+0x4c>
   1a004:	00bfffc4 	movi	r2,-1
   1a008:	f800283a 	ret

0001a00c <__call_exitprocs>:
   1a00c:	defff704 	addi	sp,sp,-36
   1a010:	008000b4 	movhi	r2,2
   1a014:	dcc00315 	stw	r19,12(sp)
   1a018:	14f2d317 	ldw	r19,-13492(r2)
   1a01c:	dc800215 	stw	r18,8(sp)
   1a020:	dfc00815 	stw	ra,32(sp)
   1a024:	9c805217 	ldw	r18,328(r19)
   1a028:	ddc00715 	stw	r23,28(sp)
   1a02c:	dd800615 	stw	r22,24(sp)
   1a030:	dd400515 	stw	r21,20(sp)
   1a034:	dd000415 	stw	r20,16(sp)
   1a038:	dc400115 	stw	r17,4(sp)
   1a03c:	dc000015 	stw	r16,0(sp)
   1a040:	90001026 	beq	r18,zero,1a084 <__call_exitprocs+0x78>
   1a044:	202b883a 	mov	r21,r4
   1a048:	282d883a 	mov	r22,r5
   1a04c:	05000044 	movi	r20,1
   1a050:	94000117 	ldw	r16,4(r18)
   1a054:	847fffc4 	addi	r17,r16,-1
   1a058:	88000a16 	blt	r17,zero,1a084 <__call_exitprocs+0x78>
   1a05c:	84000044 	addi	r16,r16,1
   1a060:	802090ba 	slli	r16,r16,2
   1a064:	9421883a 	add	r16,r18,r16
   1a068:	b0001126 	beq	r22,zero,1a0b0 <__call_exitprocs+0xa4>
   1a06c:	80804017 	ldw	r2,256(r16)
   1a070:	15800f26 	beq	r2,r22,1a0b0 <__call_exitprocs+0xa4>
   1a074:	8c7fffc4 	addi	r17,r17,-1
   1a078:	88bfffd8 	cmpnei	r2,r17,-1
   1a07c:	843fff04 	addi	r16,r16,-4
   1a080:	103ff91e 	bne	r2,zero,1a068 <__call_exitprocs+0x5c>
   1a084:	dfc00817 	ldw	ra,32(sp)
   1a088:	ddc00717 	ldw	r23,28(sp)
   1a08c:	dd800617 	ldw	r22,24(sp)
   1a090:	dd400517 	ldw	r21,20(sp)
   1a094:	dd000417 	ldw	r20,16(sp)
   1a098:	dcc00317 	ldw	r19,12(sp)
   1a09c:	dc800217 	ldw	r18,8(sp)
   1a0a0:	dc400117 	ldw	r17,4(sp)
   1a0a4:	dc000017 	ldw	r16,0(sp)
   1a0a8:	dec00904 	addi	sp,sp,36
   1a0ac:	f800283a 	ret
   1a0b0:	90800117 	ldw	r2,4(r18)
   1a0b4:	81800017 	ldw	r6,0(r16)
   1a0b8:	10bfffc4 	addi	r2,r2,-1
   1a0bc:	14401726 	beq	r2,r17,1a11c <__call_exitprocs+0x110>
   1a0c0:	80000015 	stw	zero,0(r16)
   1a0c4:	303feb26 	beq	r6,zero,1a074 <__call_exitprocs+0x68>
   1a0c8:	a446983a 	sll	r3,r20,r17
   1a0cc:	90806217 	ldw	r2,392(r18)
   1a0d0:	95c00117 	ldw	r23,4(r18)
   1a0d4:	1884703a 	and	r2,r3,r2
   1a0d8:	1000081e 	bne	r2,zero,1a0fc <__call_exitprocs+0xf0>
   1a0dc:	303ee83a 	callr	r6
   1a0e0:	90c00117 	ldw	r3,4(r18)
   1a0e4:	98805217 	ldw	r2,328(r19)
   1a0e8:	1dc0011e 	bne	r3,r23,1a0f0 <__call_exitprocs+0xe4>
   1a0ec:	90bfe126 	beq	r18,r2,1a074 <__call_exitprocs+0x68>
   1a0f0:	103fe426 	beq	r2,zero,1a084 <__call_exitprocs+0x78>
   1a0f4:	1025883a 	mov	r18,r2
   1a0f8:	003fd506 	br	1a050 <__call_exitprocs+0x44>
   1a0fc:	90806317 	ldw	r2,396(r18)
   1a100:	81002017 	ldw	r4,128(r16)
   1a104:	1886703a 	and	r3,r3,r2
   1a108:	1800061e 	bne	r3,zero,1a124 <__call_exitprocs+0x118>
   1a10c:	200b883a 	mov	r5,r4
   1a110:	a809883a 	mov	r4,r21
   1a114:	303ee83a 	callr	r6
   1a118:	003ff106 	br	1a0e0 <__call_exitprocs+0xd4>
   1a11c:	94400115 	stw	r17,4(r18)
   1a120:	003fe806 	br	1a0c4 <__call_exitprocs+0xb8>
   1a124:	303ee83a 	callr	r6
   1a128:	003fed06 	br	1a0e0 <__call_exitprocs+0xd4>
