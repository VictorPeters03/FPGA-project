
rps.elf:     file format elf32-littlenios2
rps.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000228

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x000185b0 memsz 0x000185b0 flags r-x
    LOAD off    0x000195d0 vaddr 0x000185d0 paddr 0x0001a260 align 2**12
         filesz 0x00001c90 memsz 0x00001c90 flags rw-
    LOAD off    0x00000ef0 vaddr 0x0001bef0 paddr 0x0001bef0 align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000208  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00017b00  00000228  00000228  00001228  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000008a8  00017d28  00017d28  00018d28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c90  000185d0  0001a260  000195d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  0001bef0  0001bef0  0001bef0  2**2
                  ALLOC, SMALL_DATA
  6 .SDRAM        00000000  0001c04c  0001c04c  0001b260  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  0001b260  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 000013c8  00000000  00000000  0001b290  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   00035152  00000000  00000000  0001c658  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000d775  00000000  00000000  000517aa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   0001cdde  00000000  00000000  0005ef1f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  0000324c  00000000  00000000  0007bd00  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    000050ec  00000000  00000000  0007ef4c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    00023787  00000000  00000000  00084038  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000010  00000000  00000000  000a77c0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00002a00  00000000  00000000  000a77d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  000ae1bd  2**0
                  CONTENTS, READONLY
 18 .cpu          00000005  00000000  00000000  000ae1c0  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000ae1c5  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000ae1c6  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000ae1c7  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000ae1cb  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000ae1cf  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  000ae1d3  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  000ae1dc  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  000ae1e5  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000f  00000000  00000000  000ae1ee  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000002c  00000000  00000000  000ae1fd  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     000a4f39  00000000  00000000  000ae229  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000228 l    d  .text	00000000 .text
00017d28 l    d  .rodata	00000000 .rodata
000185d0 l    d  .rwdata	00000000 .rwdata
0001bef0 l    d  .bss	00000000 .bss
0001c04c l    d  .SDRAM	00000000 .SDRAM
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/school/Jaar-3/Periode-4/FPGA/FPGA-project/software/rps_bsp//obj/HAL/src/crt0.o
00000260 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 kiss_fft.c
0000181c l     F .text	00000154 kf_bfly2
00001970 l     F .text	000004b4 kf_bfly4
00001e24 l     F .text	000003a0 kf_bfly3
000021c4 l     F .text	00000768 kf_bfly5
0000292c l     F .text	000002d4 kf_bfly_generic
00002c00 l     F .text	00000238 kf_work
00002e38 l     F .text	00000144 kf_factor
00000000 l    df *ABS*	00000000 s_cos.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_sin.c
00000000 l    df *ABS*	00000000 w_log.c
00000000 l    df *ABS*	00000000 w_log10.c
00000000 l    df *ABS*	00000000 w_pow.c
00000000 l    df *ABS*	00000000 w_sqrt.c
00000000 l    df *ABS*	00000000 e_log.c
00000000 l    df *ABS*	00000000 e_log10.c
00000000 l    df *ABS*	00000000 e_pow.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
00017d54 l     O .rodata	00000080 npio2_hw
00017dd4 l     O .rodata	00000108 two_over_pi
00000000 l    df *ABS*	00000000 e_sqrt.c
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
00017f1c l     O .rodata	00000010 init_jk
00017edc l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 math_err.c
000073a4 l     F .text	00000048 with_errno
000073ec l     F .text	00000050 xflow
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 impure.c
000185d0 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000d040 l     F .text	000000c0 __sbprintf
00018084 l     O .rodata	00000010 blanks.1
00018074 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0000d264 l     F .text	00000220 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0000eed8 l     F .text	00000008 __fp_lock
0000eeec l     F .text	00000008 __fp_unlock
0000eef4 l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00018138 l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
00011a30 l     F .text	000000f4 __sprint_r.part.0
00012db8 l     F .text	000000c0 __sbprintf
0001826c l     O .rodata	00000010 blanks.1
0001825c l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00013100 l     F .text	000000c0 _fclose_r.part.0
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
00014ce4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
00014dfc l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00014e60 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
00014f78 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
00015064 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
000151cc l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
000152b8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00015498 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0001a250 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
00015704 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00015844 l     F .text	00000034 alt_dev_reg
00019110 l     O .rwdata	00001060 JTAG_UART
0001a170 l     O .rwdata	00000030 AV_Config
0001a1a0 l     O .rwdata	00000030 Audio_Subsystem_Audio
0001a1d0 l     O .rwdata	0000002c Char_LCD_16x2
0001a1fc l     O .rwdata	0000002c Serial_Port
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00015b6c l     F .text	00000210 altera_avalon_jtag_uart_irq
00015d7c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
000163c0 l     F .text	00000080 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_character_lcd.c
00000000 l    df *ABS*	00000000 altera_up_avalon_rs232.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00016ec8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00017124 l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
000173f4 l     F .text	0000003c alt_get_errno
00017430 l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0001bf20 g     O .bss	00000004 alt_instruction_exception_handler
00011268 g     F .text	00000070 _mprec_log10
00011354 g     F .text	00000060 __any_on
00013558 g     F .text	00000058 _isatty_r
00018144 g     O .rodata	00000028 __mprec_tinytens
000153d4 g     F .text	0000007c alt_main
0000ae40 g     F .text	000000cc _puts_r
0001bf4c g     O .bss	00000100 alt_irq
000136a4 g     F .text	00000064 _lseek_r
0000371c g     F .text	000000c4 log
00003b60 g     F .text	000000ac sqrt
0001a260 g       *ABS*	00000000 __flash_rwdata_start
00016530 g     F .text	00000040 alt_up_character_lcd_send_cmd
00008d78 g     F .text	00000080 .hidden __eqdf2
0001c04c g       *ABS*	00000000 __alt_heap_start
0001400c g     F .text	00000060 _kill_r
0000ae08 g     F .text	00000038 printf
000139d8 g     F .text	0000006c _wcrtomb_r
00013b7c g     F .text	00000098 _signal_r
000119cc g     F .text	0000005c __sseek
0000f23c g     F .text	00000010 __sinit
00013878 g     F .text	00000148 __swbuf_r
000135b0 g     F .text	00000074 _setlocale_r
0000f05c g     F .text	00000078 __sfmoreglue
00015474 g     F .text	00000024 __malloc_unlock
00016be8 g     F .text	00000090 alt_up_rs232_read_fd
00007460 g     F .text	0000004c .hidden __math_divzero
0000ffa8 g     F .text	0000012c memmove
0000f228 g     F .text	00000014 _cleanup
000101c4 g     F .text	000000a4 _Balloc
000079e0 g     F .text	00000070 .hidden __fixsfsi
00008df8 g     F .text	000000e8 .hidden __gtdf2
0001783c g     F .text	00000024 altera_nios2_gen2_irq_init
0000a4cc g     F .text	0000000c __errno
000164bc g     F .text	00000074 get_DDRAM_addr
00000000 g     F .entry	0000000c __reset
0000fc70 g     F .text	00000008 __localeconv_l
00000020 g       *ABS*	00000000 __flash_exceptions_start
000134f8 g     F .text	00000060 _fstat_r
0001befc g     O .bss	00000004 errno
00003474 g     F .text	000001e4 floor
00011944 g     F .text	00000008 __seofread
0001bf08 g     O .bss	00000004 alt_argv
00022228 g       *ABS*	00000000 _gp
00014f58 g     F .text	00000020 getpid
00018f90 g     O .rwdata	00000180 alt_fd_list
00005564 g     F .text	0000074c __ieee754_rem_pio2
00017074 g     F .text	00000090 alt_find_dev
0000acd8 g     F .text	00000100 memcpy
000166e0 g     F .text	00000050 alt_up_character_lcd_write_fd
000074ac g     F .text	00000094 .hidden __math_invalid
0000eee0 g     F .text	0000000c _cleanup_r
0000a154 g     F .text	000000b8 .hidden __floatsidf
000171f8 g     F .text	0000007c alt_io_redirect
00008ee0 g     F .text	000000e8 .hidden __ltdf2
00017d28 g       *ABS*	00000000 __DTOR_END__
00016b74 g     F .text	00000074 alt_up_rs232_read_data
0000af0c g     F .text	00000010 puts
00017a20 g     F .text	00000098 alt_exception_cause_generated_bad_addr
000111c4 g     F .text	000000a4 __ratio
00012d9c g     F .text	0000001c __vfiprintf_internal
00015f78 g     F .text	00000220 altera_avalon_jtag_uart_read
0000a4d8 g     F .text	00000010 malloc
0000add8 g     F .text	00000030 _printf_r
000078f8 g     F .text	00000064 .hidden __udivsi3
00014fb4 g     F .text	000000b0 isatty
00013c14 g     F .text	000000c4 _raise_r
00012f34 g     F .text	00000064 __assert_func
00018194 g     O .rodata	000000c8 __mprec_tens
00005f1c g     F .text	000004ac __kernel_cos
0001bef8 g     O .bss	00000004 __malloc_top_pad
0001406c g     F .text	00000004 _getpid_r
0000fc78 g     F .text	0000000c _localeconv_r
00010634 g     F .text	000000b0 __i2b
0000f69c g     F .text	00000494 __sfvwrite_r
00013cd8 g     F .text	000000bc __sigtramp_r
0000af1c g     F .text	00000058 _sbrk_r
00013758 g     F .text	00000064 _read_r
00004298 g     F .text	000001c4 __ieee754_log10
0001a248 g     O .rwdata	00000004 alt_max_fd
00016af0 g     F .text	00000044 alt_up_rs232_check_parity
000131c0 g     F .text	00000070 _fclose_r
0000ee54 g     F .text	00000084 fflush
0001bef4 g     O .bss	00000004 __malloc_max_sbrked_mem
00017274 g     F .text	00000180 alt_irq_register
000070dc g     F .text	000002c8 __kernel_sin
0000a20c g     F .text	000000fc .hidden __extendsfdf2
00007b74 g     F .text	000008f0 .hidden __adddf3
00010f58 g     F .text	00000108 __b2d
00014690 g     F .text	000005c4 .hidden __umoddi3
000152f4 g     F .text	000000e0 lseek
0001a228 g     O .rwdata	00000004 _global_impure_ptr
000113b4 g     F .text	0000053c _realloc_r
0001c04c g       *ABS*	00000000 __bss_end
00017710 g     F .text	0000012c alt_tick
00014070 g     F .text	00000620 .hidden __udivdi3
0001345c g     F .text	00000024 _fputwc_r
0001816c g     O .rodata	00000028 __mprec_bigtens
000103e8 g     F .text	00000138 __s2b
00013b08 g     F .text	00000018 abort
00014c54 g     F .text	00000090 .hidden __floatunsidf
00010c78 g     F .text	00000058 __mcmp
0000f25c g     F .text	00000014 __fp_lock_all
000007fc g     F .text	000000a8 denormalize_audio
00000620 g     F .text	000000cc check_KEYs
0001766c g     F .text	000000a4 alt_alarm_stop
0001bf10 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000cc alt_irq_handler
00018f68 g     O .rwdata	00000028 alt_dev_null
000063c8 g     F .text	00000d14 __kernel_rem_pio2
00016980 g     F .text	00000038 alt_up_character_lcd_cursor_blink_on
00016ea8 g     F .text	00000020 alt_dcache_flush_all
00010520 g     F .text	00000064 __hi0bits
0000a0d4 g     F .text	00000080 .hidden __fixdfsi
0001a260 g       *ABS*	00000000 __ram_rwdata_end
0001a240 g     O .rwdata	00000008 alt_dev_list
00015740 g     F .text	00000104 write
000185d0 g       *ABS*	00000000 __ram_rodata_end
00014e9c g     F .text	000000bc fstat
00016c78 g     F .text	00000094 alt_up_rs232_write_fd
000150a0 g     F .text	0000012c kill
00000000 g       *ABS*	00000000 __alt_mem_SDRAM
00008ee0 g     F .text	000000e8 .hidden __ledf2
00007454 g     F .text	0000000c .hidden __math_oflow
000109a8 g     F .text	00000148 __pow5mult
00011b3c g     F .text	00001260 ___vfiprintf_internal_r
0000795c g     F .text	0000005c .hidden __umodsi3
0001c04c g       *ABS*	00000000 end
00015ab8 g     F .text	000000b4 altera_avalon_jtag_uart_init
000001c8 g     F .exceptions	00000060 alt_instruction_exception_entry
000075a4 g     F .text	000000a0 .hidden __math_check_oflow
00017d28 g       *ABS*	00000000 __CTOR_LIST__
08000000 g       *ABS*	00000000 __alt_stack_pointer
00007448 g     F .text	0000000c .hidden __math_may_uflow
00016440 g     F .text	0000007c alt_avalon_timer_sc_init
0000a478 g     F .text	00000054 .hidden __clzsi2
00016198 g     F .text	00000228 altera_avalon_jtag_uart_write
000033c4 g     F .text	000000b0 cos
000031b8 g     F .text	000000d4 kiss_fft_stride
0000f24c g     F .text	00000004 __sfp_lock_acquire
0000fed8 g     F .text	000000d0 memchr
0000328c g     F .text	00000048 kiss_fft
000165e4 g     F .text	00000080 alt_up_character_lcd_write
0000b00c g     F .text	00002018 ___vfprintf_internal_r
0000f3a0 g     F .text	000002fc _free_r
000183d0 g     O .rodata	00000180 _ctype_b
00013624 g     F .text	0000000c __locale_mb_cur_max
00017c08 g     F .text	00000120 __call_exitprocs
0001a230 g     O .rwdata	00000004 __malloc_sbrk_base
00000960 g     F .text	000000e8 frame_blocking
00000228 g     F .text	0000003c _start
0001bf14 g     O .bss	00000004 _alt_tick_rate
00003658 g     F .text	000000c4 sin
00010af0 g     F .text	00000188 __lshift
0001bf18 g     O .bss	00000008 _alt_nticks
00013e50 g     F .text	000000a0 signal
000154d4 g     F .text	00000108 read
000158b4 g     F .text	000000a0 alt_sys_init
00016830 g     F .text	0000008c alt_up_character_lcd_shift_display
00007a50 g     F .text	00000124 .hidden __floatsisf
00017b78 g     F .text	00000090 __register_exitproc
00016ab4 g     F .text	0000003c alt_up_rs232_get_available_space_in_write_FIFO
000006ec g     F .text	00000110 normalize_audio
000106e4 g     F .text	000002c4 __multiply
000168bc g     F .text	0000008c alt_up_character_lcd_erase_pos
0000445c g     F .text	00001108 __ieee754_pow
00015e1c g     F .text	00000068 altera_avalon_jtag_uart_close
000038a4 g     F .text	000002bc pow
000079b8 g     F .text	00000028 .hidden __mulsi3
000185d0 g       *ABS*	00000000 __ram_rwdata_start
00017d28 g       *ABS*	00000000 __ram_rodata_start
0001bf24 g     O .bss	00000028 __malloc_current_mallinfo
00011060 g     F .text	00000164 __d2b
00000c24 g     F .text	0000056c mel_filter_bank
000037e0 g     F .text	000000c4 log10
00015954 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00017968 g     F .text	000000b8 alt_get_fd
00012edc g     F .text	00000058 _close_r
00017b00 g     F .text	00000078 memcmp
00015a14 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0001c04c g       *ABS*	00000000 __alt_stack_base
00015a64 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0000d100 g     F .text	00000164 __swsetup_r
00008464 g     F .text	00000914 .hidden __divdf3
0000f0d4 g     F .text	00000154 __sfp
000112d8 g     F .text	0000007c __copybits
000189f4 g     O .rwdata	00000408 __malloc_av_
0000f258 g     F .text	00000004 __sinit_lock_release
00008fc8 g     F .text	000007ac .hidden __muldf3
000118f0 g     F .text	00000054 __sread
00016a14 g     F .text	00000060 alt_up_rs232_disable_read_interrupt
00017860 g     F .text	00000108 alt_find_file
00016f04 g     F .text	000000a8 alt_dev_llist_insert
00015450 g     F .text	00000024 __malloc_lock
0001564c g     F .text	000000b8 sbrk
0000edf4 g     F .text	00000060 _fflush_r
00012fac g     F .text	00000154 _calloc_r
0001bef0 g       *ABS*	00000000 __bss_start
000100d4 g     F .text	000000f0 memset
00000264 g     F .text	000003bc main
0001bf0c g     O .bss	00000004 alt_envp
0001bef0 g     O .bss	00000004 __malloc_max_total_mem
000159b4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
000139c0 g     F .text	00000018 __swbuf
000167a4 g     F .text	0000008c alt_up_character_lcd_shift_cursor
00011a28 g     F .text	00000008 __sclose
08000000 g       *ABS*	00000000 __alt_heap_limit
00013230 g     F .text	00000070 fclose
0000a308 g     F .text	00000170 .hidden __truncdfsf2
0000d484 g     F .text	00001748 _dtoa_r
0000a4f8 g     F .text	000007e0 _malloc_r
00013ad8 g     F .text	00000030 __ascii_wctomb
0001a24c g     O .rwdata	00000004 alt_errno
000132a0 g     F .text	00000020 _fiprintf_r
00013ef0 g     F .text	00000060 _init_signal
0000fb30 g     F .text	00000098 _fwalk
00013708 g     F .text	0000000c _mbtowc_r
00007804 g     F .text	00000080 .hidden __divsi3
000165a8 g     F .text	0000003c alt_up_character_lcd_open_dev
0000f284 g     F .text	0000011c _malloc_trim_r
00017d28 g       *ABS*	00000000 __CTOR_END__
00007540 g     F .text	00000064 .hidden __math_check_uflow
00016570 g     F .text	00000038 alt_up_character_lcd_init
000137bc g     F .text	000000b8 strcmp
00017d28 g       *ABS*	00000000 __flash_rodata_start
00017d28 g       *ABS*	00000000 __DTOR_LIST__
00016d0c g     F .text	0000003c alt_up_rs232_open_dev
00008d78 g     F .text	00000080 .hidden __nedf2
00015878 g     F .text	0000003c alt_irq_init
000155dc g     F .text	00000070 alt_release_fd
00016948 g     F .text	00000038 alt_up_character_lcd_cursor_off
00017f2c g     O .rodata	00000100 .hidden __clz_tab
0001bf00 g     O .bss	00000004 _PathLocale
00017ab8 g     F .text	00000014 atexit
00012e78 g     F .text	00000064 _write_r
00013630 g     F .text	00000074 setlocale
0001a22c g     O .rwdata	00000004 _impure_ptr
0001bf04 g     O .bss	00000004 alt_argc
0000ebcc g     F .text	00000228 __sflush_r
00007644 g     F .text	000001c0 scalbn
00017010 g     F .text	00000064 _do_dtors
00003c0c g     F .text	0000068c __ieee754_log
0000136c g     F .text	000004b0 calculate_mfcc
00000020 g       .exceptions	00000000 alt_irq_entry
00013714 g     F .text	00000044 __ascii_mbtowc
00010efc g     F .text	0000005c __ulp
0000f270 g     F .text	00000014 __fp_unlock_all
0001a238 g     O .rwdata	00000008 alt_fs_list
000169b8 g     F .text	0000005c alt_up_rs232_enable_read_interrupt
00016b34 g     F .text	00000040 alt_up_rs232_write_data
00000020 g       *ABS*	00000000 __ram_exceptions_start
0000fc84 g     F .text	0000000c localeconv
00005cb0 g     F .text	0000026c __ieee754_sqrt
0000fe40 g     F .text	00000098 __swhatbuf_r
0001a260 g       *ABS*	00000000 _edata
0001c04c g       *ABS*	00000000 _end
000132f8 g     F .text	00000164 __fputwc
00000228 g       *ABS*	00000000 __ram_exceptions_end
00015e84 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0001194c g     F .text	00000080 __swrite
0001a234 g     O .rwdata	00000004 __malloc_trim_threshold
00017acc g     F .text	00000034 exit
000132c0 g     F .text	00000038 fiprintf
00013874 g     F .text	00000004 _vfiprintf_r
0000fbc8 g     F .text	000000a8 _fwalk_reent
00010cd0 g     F .text	0000022c __mdiff
000032d4 g     F .text	00000020 kiss_fft_cleanup
0000743c g     F .text	0000000c .hidden __math_uflow
00007884 g     F .text	00000074 .hidden __modsi3
08000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
0000f250 g     F .text	00000004 __sfp_lock_release
000008a4 g     F .text	000000bc pre_emphasis
00016664 g     F .text	0000007c alt_up_character_lcd_string
000182cc g     O .rodata	00000101 _ctype_
0000a080 g     F .text	00000054 .hidden __unorddf2
00000a48 g     F .text	0000017c hamming_window
00014e28 g     F .text	00000038 _exit
00000bc4 g     F .text	00000060 fft_example
00016d48 g     F .text	00000160 alt_alarm_start
0000fc90 g     F .text	000001b0 __smakebuf_r
0000af74 g     F .text	00000098 strlen
00013b20 g     F .text	0000005c _init_signal_r
0001750c g     F .text	00000160 open
00008df8 g     F .text	000000e8 .hidden __gedf2
00012f98 g     F .text	00000014 __assert
00011b24 g     F .text	00000018 __sprint_r
00017104 g     F .text	00000020 alt_icache_flush_all
00016730 g     F .text	00000074 alt_up_character_lcd_set_cursor_pos
0001a254 g     O .rwdata	00000004 alt_priority_mask
0000d024 g     F .text	0000001c __vfprintf_internal
00001190 g     F .text	000001dc dct
000032f4 g     F .text	000000d0 kiss_fft_next_fast_size
00013acc g     F .text	0000000c _wctomb_r
00002f7c g     F .text	0000023c kiss_fft_alloc
00009774 g     F .text	0000090c .hidden __subdf3
00010584 g     F .text	000000b0 __lo0bits
0001a258 g     O .rwdata	00000008 alt_alarm_list
00016fac g     F .text	00000064 _do_ctors
00013f50 g     F .text	000000bc __sigtramp
00016a74 g     F .text	00000040 alt_up_rs232_get_used_space_in_read_FIFO
00013a44 g     F .text	00000088 wcrtomb
00014d20 g     F .text	000000dc close
00018dfc g     O .rwdata	0000016c __global_locale
00015234 g     F .text	00000084 alt_load
00013480 g     F .text	00000078 fputwc
00013d94 g     F .text	000000bc raise
0000a4e8 g     F .text	00000010 free
0000f254 g     F .text	00000004 __sinit_lock_acquire
0001028c g     F .text	0000015c __multadd
00010268 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408a14 	ori	at,at,552
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001c80 	call	1c8 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffc15 	stw	r2,-16(fp)

  return active;
 118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0ffff17 	ldw	r3,-4(fp)
 130:	e0bffe17 	ldw	r2,-8(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001226 	beq	r2,zero,184 <alt_irq_handler+0x88>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 13c:	e0bffd17 	ldw	r2,-12(fp)
 140:	100690fa 	slli	r3,r2,3
 144:	008000b4 	movhi	r2,2
 148:	1885883a 	add	r2,r3,r2
 14c:	10efd317 	ldw	r3,-16564(r2)
 150:	e0bffd17 	ldw	r2,-12(fp)
 154:	100890fa 	slli	r4,r2,3
 158:	008000b4 	movhi	r2,2
 15c:	2085883a 	add	r2,r4,r2
 160:	10afd417 	ldw	r2,-16560(r2)
 164:	e17ffd17 	ldw	r5,-12(fp)
 168:	1009883a 	mov	r4,r2
 16c:	183ee83a 	callr	r3
#endif
        break;
 170:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
 174:	0005313a 	rdctl	r2,ipending
 178:	e0bffb15 	stw	r2,-20(fp)
  return active;
 17c:	e0bffb17 	ldw	r2,-20(fp)
 180:	00000706 	br	1a0 <alt_irq_handler+0xa4>
      }
      mask <<= 1;
 184:	e0bffe17 	ldw	r2,-8(fp)
 188:	1085883a 	add	r2,r2,r2
 18c:	e0bffe15 	stw	r2,-8(fp)
      i++;
 190:	e0bffd17 	ldw	r2,-12(fp)
 194:	10800044 	addi	r2,r2,1
 198:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
 19c:	003fe306 	br	12c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
 1a0:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 1a4:	e0bfff17 	ldw	r2,-4(fp)
 1a8:	103fdd1e 	bne	r2,zero,120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1ac:	0001883a 	nop
}
 1b0:	0001883a 	nop
 1b4:	e037883a 	mov	sp,fp
 1b8:	dfc00117 	ldw	ra,4(sp)
 1bc:	df000017 	ldw	fp,0(sp)
 1c0:	dec00204 	addi	sp,sp,8
 1c4:	f800283a 	ret

000001c8 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1c8:	defffb04 	addi	sp,sp,-20
 1cc:	dfc00415 	stw	ra,16(sp)
 1d0:	df000315 	stw	fp,12(sp)
 1d4:	df000304 	addi	fp,sp,12
 1d8:	e13ffd15 	stw	r4,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1dc:	00bfffc4 	movi	r2,-1
 1e0:	e0bfff15 	stw	r2,-4(fp)
  badaddr = 0;
 1e4:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1e8:	d0a73e17 	ldw	r2,-25352(gp)
 1ec:	10000726 	beq	r2,zero,20c <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1f0:	d0a73e17 	ldw	r2,-25352(gp)
 1f4:	e0ffff17 	ldw	r3,-4(fp)
 1f8:	e1bffe17 	ldw	r6,-8(fp)
 1fc:	e17ffd17 	ldw	r5,-12(fp)
 200:	1809883a 	mov	r4,r3
 204:	103ee83a 	callr	r2
 208:	00000206 	br	214 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 20c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 210:	0005883a 	mov	r2,zero
}
 214:	e037883a 	mov	sp,fp
 218:	dfc00117 	ldw	ra,4(sp)
 21c:	df000017 	ldw	fp,0(sp)
 220:	dec00204 	addi	sp,sp,8
 224:	f800283a 	ret

Disassembly of section .text:

00000228 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     228:	06c20034 	movhi	sp,2048
    ori sp, sp, %lo(__alt_stack_pointer)
     22c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     230:	068000b4 	movhi	gp,2
    ori gp, gp, %lo(_gp)
     234:	d6888a14 	ori	gp,gp,8744
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     238:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     23c:	10afbc14 	ori	r2,r2,48880

    movhi r3, %hi(__bss_end)
     240:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     244:	18f01314 	ori	r3,r3,49228

    beq r2, r3, 1f
     248:	10c00326 	beq	r2,r3,258 <_start+0x30>

0:
    stw zero, (r2)
     24c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     250:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     254:	10fffd36 	bltu	r2,r3,24c <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     258:	00152340 	call	15234 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     25c:	00153d40 	call	153d4 <alt_main>

00000260 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     260:	003fff06 	br	260 <alt_after_alt_main>

00000264 <main>:
 * 	1. records audio for 10 seconds when KEY[0] is pressed. LEDR[0] is lit
 *	   while recording.
 * 	2. plays the recorded audio when KEY[1] is pressed. LEDR[1] is lit while
 *	   playing.
 ******************************************************************************/
int main(void) {
     264:	defffd04 	addi	sp,sp,-12
     268:	dfc00215 	stw	ra,8(sp)
     26c:	df000115 	stw	fp,4(sp)
     270:	dc000015 	stw	r16,0(sp)
     274:	df000104 	addi	fp,sp,4
     278:	023ffa34 	movhi	r8,65512
     27c:	421bf804 	addi	r8,r8,28640
     280:	da37883a 	add	sp,sp,r8
  /* Declare volatile pointers to I/O registers (volatile means that IO load
     and store instructions will be used to access these pointer locations,
     instead of regular memory loads and stores) */
  volatile int *red_LED_ptr = (int *)LED_BASE;
     284:	00bfc834 	movhi	r2,65312
     288:	e0bffb15 	stw	r2,-20(fp)
  volatile int *audio_ptr = (int *)AUDIO_BASE;
     28c:	00bfc834 	movhi	r2,65312
     290:	108c1004 	addi	r2,r2,12352
     294:	e0bffa15 	stw	r2,-24(fp)

  /* used for audio record/playback */
  int fifospace;
  int record = 0, play = 0, buffer_index = 0;
     298:	e03ff915 	stw	zero,-28(fp)
     29c:	e03ff815 	stw	zero,-32(fp)
     2a0:	e03ff715 	stw	zero,-36(fp)
  float normalized_buffer[BUF_SIZE];
  float denormalized_buffer[BUF_SIZE];
  kiss_fft_cpx output[FFT_SIZE];

  /* read and echo audio data */
  record = 0;
     2a4:	e03ff915 	stw	zero,-28(fp)
  play = 0;
     2a8:	e03ff815 	stw	zero,-32(fp)

  while (1) {
    check_KEYs(&record, &play, &buffer_index);
     2ac:	e13ff704 	addi	r4,fp,-36
     2b0:	e0fff804 	addi	r3,fp,-32
     2b4:	e0bff904 	addi	r2,fp,-28
     2b8:	200d883a 	mov	r6,r4
     2bc:	180b883a 	mov	r5,r3
     2c0:	1009883a 	mov	r4,r2
     2c4:	00006200 	call	620 <check_KEYs>
    if (record) {
     2c8:	e0bff917 	ldw	r2,-28(fp)
     2cc:	10007026 	beq	r2,zero,490 <main+0x22c>
      *(red_LED_ptr) = 0x1;  // turn on LEDR[0]
     2d0:	e0bffb17 	ldw	r2,-20(fp)
     2d4:	00c00044 	movi	r3,1
     2d8:	10c00015 	stw	r3,0(r2)

      fifospace = *(audio_ptr + 1);  // read the audio port fifospace register
     2dc:	e0bffa17 	ldw	r2,-24(fp)
     2e0:	10800117 	ldw	r2,4(r2)
     2e4:	e0bffe15 	stw	r2,-8(fp)
      if ((fifospace & 0x000000FF) > BUF_THRESHOLD)  // check RARC
     2e8:	e0bffe17 	ldw	r2,-8(fp)
     2ec:	10803fcc 	andi	r2,r2,255
     2f0:	10801850 	cmplti	r2,r2,97
     2f4:	103fed1e 	bne	r2,zero,2ac <main+0x48>
      {
        // store data until the the audio-in FIFO is empty or the buffer is full
        while ((fifospace & 0x000000FF) && (buffer_index < BUF_SIZE)) {
     2f8:	00005d06 	br	470 <main+0x20c>
          left_buffer[buffer_index] = *(audio_ptr + 2);
     2fc:	e0bffa17 	ldw	r2,-24(fp)
     300:	10800204 	addi	r2,r2,8
     304:	10800017 	ldw	r2,0(r2)
     308:	e43ff717 	ldw	r16,-36(fp)
     30c:	1009883a 	mov	r4,r2
     310:	0007a500 	call	7a50 <__floatsisf>
     314:	1009883a 	mov	r4,r2
     318:	00bffeb4 	movhi	r2,65530
     31c:	1088f804 	addi	r2,r2,9184
     320:	10bfff04 	addi	r2,r2,-4
     324:	1707883a 	add	r3,r2,fp
     328:	800490ba 	slli	r2,r16,2
     32c:	1885883a 	add	r2,r3,r2
     330:	11000015 	stw	r4,0(r2)
          right_buffer[buffer_index] = *(audio_ptr + 3);
     334:	e17ff717 	ldw	r5,-36(fp)
     338:	e0bffa17 	ldw	r2,-24(fp)
     33c:	10c00317 	ldw	r3,12(r2)
     340:	00bffd34 	movhi	r2,65524
     344:	1091f804 	addi	r2,r2,18400
     348:	10bfff04 	addi	r2,r2,-4
     34c:	1709883a 	add	r4,r2,fp
     350:	280490ba 	slli	r2,r5,2
     354:	2085883a 	add	r2,r4,r2
     358:	10c00015 	stw	r3,0(r2)
          ++buffer_index;
     35c:	e0bff717 	ldw	r2,-36(fp)
     360:	10800044 	addi	r2,r2,1
     364:	e0bff715 	stw	r2,-36(fp)

          if (buffer_index == BUF_SIZE) {
     368:	e0fff717 	ldw	r3,-36(fp)
     36c:	00800074 	movhi	r2,1
     370:	109dc004 	addi	r2,r2,30464
     374:	18803b1e 	bne	r3,r2,464 <main+0x200>
            // done recording
            record = 0;
     378:	e03ff915 	stw	zero,-28(fp)
            *(red_LED_ptr) = 0x0;  // turn off LEDR
     37c:	e0bffb17 	ldw	r2,-20(fp)
     380:	10000015 	stw	zero,0(r2)
            *(red_LED_ptr) = 0x4;
     384:	e0bffb17 	ldw	r2,-20(fp)
     388:	00c00104 	movi	r3,4
     38c:	10c00015 	stw	r3,0(r2)
            normalize_audio(left_buffer, normalized_buffer, BUF_SIZE);
     390:	00bffbb4 	movhi	r2,65518
     394:	109af804 	addi	r2,r2,27616
     398:	10bfff04 	addi	r2,r2,-4
     39c:	1707883a 	add	r3,r2,fp
     3a0:	00bffeb4 	movhi	r2,65530
     3a4:	1088f804 	addi	r2,r2,9184
     3a8:	10bfff04 	addi	r2,r2,-4
     3ac:	1705883a 	add	r2,r2,fp
     3b0:	01800074 	movhi	r6,1
     3b4:	319dc004 	addi	r6,r6,30464
     3b8:	180b883a 	mov	r5,r3
     3bc:	1009883a 	mov	r4,r2
     3c0:	00006ec0 	call	6ec <normalize_audio>
            *(red_LED_ptr) = 0x8;
     3c4:	e0bffb17 	ldw	r2,-20(fp)
     3c8:	00c00204 	movi	r3,8
     3cc:	10c00015 	stw	r3,0(r2)
            // denormalize_audio(left_buffer, normalized_buffer, BUF_SIZE);
            fft_example(normalized_buffer, output);
     3d0:	00bffa34 	movhi	r2,65512
     3d4:	109bf804 	addi	r2,r2,28640
     3d8:	10bfff04 	addi	r2,r2,-4
     3dc:	1707883a 	add	r3,r2,fp
     3e0:	00bffbb4 	movhi	r2,65518
     3e4:	109af804 	addi	r2,r2,27616
     3e8:	10bfff04 	addi	r2,r2,-4
     3ec:	1705883a 	add	r2,r2,fp
     3f0:	180b883a 	mov	r5,r3
     3f4:	1009883a 	mov	r4,r2
     3f8:	0000bc40 	call	bc4 <fft_example>
            *(red_LED_ptr) = 0x4;
     3fc:	e0bffb17 	ldw	r2,-20(fp)
     400:	00c00104 	movi	r3,4
     404:	10c00015 	stw	r3,0(r2)
            for (int i = 0; i < FFT_SIZE; i++) {
     408:	e03ffd15 	stw	zero,-12(fp)
     40c:	00000f06 	br	44c <main+0x1e8>
              printf("%f\n", output[i]);
     410:	00bffa34 	movhi	r2,65512
     414:	109bf804 	addi	r2,r2,28640
     418:	10bfff04 	addi	r2,r2,-4
     41c:	1707883a 	add	r3,r2,fp
     420:	e0bffd17 	ldw	r2,-12(fp)
     424:	100490fa 	slli	r2,r2,3
     428:	1885883a 	add	r2,r3,r2
     42c:	11400017 	ldw	r5,0(r2)
     430:	11800117 	ldw	r6,4(r2)
     434:	01000074 	movhi	r4,1
     438:	211f4a04 	addi	r4,r4,32040
     43c:	000ae080 	call	ae08 <printf>
            for (int i = 0; i < FFT_SIZE; i++) {
     440:	e0bffd17 	ldw	r2,-12(fp)
     444:	10800044 	addi	r2,r2,1
     448:	e0bffd15 	stw	r2,-12(fp)
     44c:	e0bffd17 	ldw	r2,-12(fp)
     450:	10810010 	cmplti	r2,r2,1024
     454:	103fee1e 	bne	r2,zero,410 <main+0x1ac>
            }
            printf("\n-------------\n");
     458:	01000074 	movhi	r4,1
     45c:	211f4b04 	addi	r4,r4,32044
     460:	000af0c0 	call	af0c <puts>
          }
          fifospace =
     464:	e0bffa17 	ldw	r2,-24(fp)
     468:	10800117 	ldw	r2,4(r2)
     46c:	e0bffe15 	stw	r2,-8(fp)
        while ((fifospace & 0x000000FF) && (buffer_index < BUF_SIZE)) {
     470:	e0bffe17 	ldw	r2,-8(fp)
     474:	10803fcc 	andi	r2,r2,255
     478:	103f8c26 	beq	r2,zero,2ac <main+0x48>
     47c:	e0fff717 	ldw	r3,-36(fp)
     480:	00800074 	movhi	r2,1
     484:	109dbfc4 	addi	r2,r2,30463
     488:	10ff9c0e 	bge	r2,r3,2fc <main+0x98>
     48c:	003f8706 	br	2ac <main+0x48>
              *(audio_ptr + 1);  // read the audio port fifospace register
        }
      }
    } else if (play) {
     490:	e0bff817 	ldw	r2,-32(fp)
     494:	103f8526 	beq	r2,zero,2ac <main+0x48>
      buffer_index = 0; // reset buffer index for playback
     498:	e03ff715 	stw	zero,-36(fp)
      denormalize_audio(normalized_buffer, left_buffer, BUF_SIZE);
     49c:	00bffeb4 	movhi	r2,65530
     4a0:	1088f804 	addi	r2,r2,9184
     4a4:	10bfff04 	addi	r2,r2,-4
     4a8:	1707883a 	add	r3,r2,fp
     4ac:	00bffbb4 	movhi	r2,65518
     4b0:	109af804 	addi	r2,r2,27616
     4b4:	10bfff04 	addi	r2,r2,-4
     4b8:	1705883a 	add	r2,r2,fp
     4bc:	01800074 	movhi	r6,1
     4c0:	319dc004 	addi	r6,r6,30464
     4c4:	180b883a 	mov	r5,r3
     4c8:	1009883a 	mov	r4,r2
     4cc:	00007fc0 	call	7fc <denormalize_audio>
      printf("denormalized samples:\n");
     4d0:	01000074 	movhi	r4,1
     4d4:	211f4f04 	addi	r4,r4,32060
     4d8:	000af0c0 	call	af0c <puts>
      for (int i = 48000; i < 54000; i++) {
     4dc:	00aee014 	movui	r2,48000
     4e0:	e0bffc15 	stw	r2,-16(fp)
     4e4:	00001406 	br	538 <main+0x2d4>
    	  printf("%f\n", left_buffer[i]);
     4e8:	00bffeb4 	movhi	r2,65530
     4ec:	1088f804 	addi	r2,r2,9184
     4f0:	10bfff04 	addi	r2,r2,-4
     4f4:	1707883a 	add	r3,r2,fp
     4f8:	e0bffc17 	ldw	r2,-16(fp)
     4fc:	100490ba 	slli	r2,r2,2
     500:	1885883a 	add	r2,r3,r2
     504:	10c00017 	ldw	r3,0(r2)
     508:	1809883a 	mov	r4,r3
     50c:	000a20c0 	call	a20c <__extendsfdf2>
     510:	100d883a 	mov	r6,r2
     514:	180f883a 	mov	r7,r3
     518:	300b883a 	mov	r5,r6
     51c:	380d883a 	mov	r6,r7
     520:	01000074 	movhi	r4,1
     524:	211f4a04 	addi	r4,r4,32040
     528:	000ae080 	call	ae08 <printf>
      for (int i = 48000; i < 54000; i++) {
     52c:	e0bffc17 	ldw	r2,-16(fp)
     530:	10800044 	addi	r2,r2,1
     534:	e0bffc15 	stw	r2,-16(fp)
     538:	e0bffc17 	ldw	r2,-16(fp)
     53c:	00f4bbd4 	movui	r3,53999
     540:	18bfe90e 	bge	r3,r2,4e8 <main+0x284>
      }
      *(red_LED_ptr) = 0x2;          // turn on LEDR_1
     544:	e0bffb17 	ldw	r2,-20(fp)
     548:	00c00084 	movi	r3,2
     54c:	10c00015 	stw	r3,0(r2)
      fifospace = *(audio_ptr + 1);  // read the audio port fifospace register
     550:	e0bffa17 	ldw	r2,-24(fp)
     554:	10800117 	ldw	r2,4(r2)
     558:	e0bffe15 	stw	r2,-8(fp)
      if ((fifospace & 0x00FF0000) > BUF_THRESHOLD)  // check WSRC
     55c:	e0bffe17 	ldw	r2,-8(fp)
     560:	10803fec 	andhi	r2,r2,255
     564:	10801850 	cmplti	r2,r2,97
     568:	103f501e 	bne	r2,zero,2ac <main+0x48>
            *(red_LED_ptr) = 0x0;  // turn off LEDR
          }
          fifospace =
              *(audio_ptr + 1);  // read the audio port fifospace register
        }*/
    	  while (buffer_index < BUF_SIZE) {
     56c:	00002706 	br	60c <main+0x3a8>
			*(audio_ptr + 2) = left_buffer[buffer_index];
     570:	e13ff717 	ldw	r4,-36(fp)
     574:	00bffeb4 	movhi	r2,65530
     578:	1088f804 	addi	r2,r2,9184
     57c:	10bfff04 	addi	r2,r2,-4
     580:	1707883a 	add	r3,r2,fp
     584:	200490ba 	slli	r2,r4,2
     588:	1885883a 	add	r2,r3,r2
     58c:	10c00017 	ldw	r3,0(r2)
     590:	e0bffa17 	ldw	r2,-24(fp)
     594:	14000204 	addi	r16,r2,8
     598:	1809883a 	mov	r4,r3
     59c:	00079e00 	call	79e0 <__fixsfsi>
     5a0:	80800015 	stw	r2,0(r16)
			*(audio_ptr + 3) = left_buffer[buffer_index];
     5a4:	e13ff717 	ldw	r4,-36(fp)
     5a8:	00bffeb4 	movhi	r2,65530
     5ac:	1088f804 	addi	r2,r2,9184
     5b0:	10bfff04 	addi	r2,r2,-4
     5b4:	1707883a 	add	r3,r2,fp
     5b8:	200490ba 	slli	r2,r4,2
     5bc:	1885883a 	add	r2,r3,r2
     5c0:	10c00017 	ldw	r3,0(r2)
     5c4:	e0bffa17 	ldw	r2,-24(fp)
     5c8:	14000304 	addi	r16,r2,12
     5cc:	1809883a 	mov	r4,r3
     5d0:	00079e00 	call	79e0 <__fixsfsi>
     5d4:	80800015 	stw	r2,0(r16)
			++buffer_index;
     5d8:	e0bff717 	ldw	r2,-36(fp)
     5dc:	10800044 	addi	r2,r2,1
     5e0:	e0bff715 	stw	r2,-36(fp)

			if (buffer_index == BUF_SIZE) {
     5e4:	e0fff717 	ldw	r3,-36(fp)
     5e8:	00800074 	movhi	r2,1
     5ec:	109dc004 	addi	r2,r2,30464
     5f0:	1880031e 	bne	r3,r2,600 <main+0x39c>
			  // done playback
			  play = 0;
     5f4:	e03ff815 	stw	zero,-32(fp)
			  *(red_LED_ptr) = 0x0;  // turn off LEDR
     5f8:	e0bffb17 	ldw	r2,-20(fp)
     5fc:	10000015 	stw	zero,0(r2)
			}
			fifospace =
     600:	e0bffa17 	ldw	r2,-24(fp)
     604:	10800117 	ldw	r2,4(r2)
     608:	e0bffe15 	stw	r2,-8(fp)
    	  while (buffer_index < BUF_SIZE) {
     60c:	e0fff717 	ldw	r3,-36(fp)
     610:	00800074 	movhi	r2,1
     614:	109dbfc4 	addi	r2,r2,30463
     618:	10ffd50e 	bge	r2,r3,570 <main+0x30c>
    check_KEYs(&record, &play, &buffer_index);
     61c:	003f2306 	br	2ac <main+0x48>

00000620 <check_KEYs>:
}

/****************************************************************************************
 * Subroutine to read KEYs
 ****************************************************************************************/
void check_KEYs(int *KEY0, int *KEY1, int *counter) {
     620:	defff904 	addi	sp,sp,-28
     624:	df000615 	stw	fp,24(sp)
     628:	df000604 	addi	fp,sp,24
     62c:	e13ffc15 	stw	r4,-16(fp)
     630:	e17ffb15 	stw	r5,-20(fp)
     634:	e1bffa15 	stw	r6,-24(fp)
  volatile int *KEY_ptr = (int *)KEY_BASE;
     638:	00bfc834 	movhi	r2,65312
     63c:	10801404 	addi	r2,r2,80
     640:	e0bfff15 	stw	r2,-4(fp)
  volatile int *audio_ptr = (int *)AUDIO_BASE;
     644:	00bfc834 	movhi	r2,65312
     648:	108c1004 	addi	r2,r2,12352
     64c:	e0bffe15 	stw	r2,-8(fp)
  int KEY_value;

  KEY_value = *(KEY_ptr);  // read the pushbutton KEY values
     650:	e0bfff17 	ldw	r2,-4(fp)
     654:	10800017 	ldw	r2,0(r2)
     658:	e0bffd15 	stw	r2,-12(fp)
  while (*KEY_ptr)
     65c:	0001883a 	nop
     660:	e0bfff17 	ldw	r2,-4(fp)
     664:	10800017 	ldw	r2,0(r2)
     668:	103ffd1e 	bne	r2,zero,660 <check_KEYs+0x40>
    ;  // wait for pushbutton KEY release

  if (KEY_value == 0x1)  // check KEY0
     66c:	e0bffd17 	ldw	r2,-12(fp)
     670:	10800058 	cmpnei	r2,r2,1
     674:	10000b1e 	bne	r2,zero,6a4 <check_KEYs+0x84>
  {
    // reset counter to start recording
    *counter = 0;
     678:	e0bffa17 	ldw	r2,-24(fp)
     67c:	10000015 	stw	zero,0(r2)
    // clear audio-in FIFO
    *(audio_ptr) = 0x4;
     680:	e0bffe17 	ldw	r2,-8(fp)
     684:	00c00104 	movi	r3,4
     688:	10c00015 	stw	r3,0(r2)
    *(audio_ptr) = 0x0;
     68c:	e0bffe17 	ldw	r2,-8(fp)
     690:	10000015 	stw	zero,0(r2)

    *KEY0 = 1;
     694:	e0bffc17 	ldw	r2,-16(fp)
     698:	00c00044 	movi	r3,1
     69c:	10c00015 	stw	r3,0(r2)
    *(audio_ptr) = 0x8;
    *(audio_ptr) = 0x0;

    *KEY1 = 1;
  }
}
     6a0:	00000d06 	br	6d8 <check_KEYs+0xb8>
  else if (KEY_value == 0x2)  // check KEY1
     6a4:	e0bffd17 	ldw	r2,-12(fp)
     6a8:	10800098 	cmpnei	r2,r2,2
     6ac:	10000a1e 	bne	r2,zero,6d8 <check_KEYs+0xb8>
    *counter = 0;
     6b0:	e0bffa17 	ldw	r2,-24(fp)
     6b4:	10000015 	stw	zero,0(r2)
    *(audio_ptr) = 0x8;
     6b8:	e0bffe17 	ldw	r2,-8(fp)
     6bc:	00c00204 	movi	r3,8
     6c0:	10c00015 	stw	r3,0(r2)
    *(audio_ptr) = 0x0;
     6c4:	e0bffe17 	ldw	r2,-8(fp)
     6c8:	10000015 	stw	zero,0(r2)
    *KEY1 = 1;
     6cc:	e0bffb17 	ldw	r2,-20(fp)
     6d0:	00c00044 	movi	r3,1
     6d4:	10c00015 	stw	r3,0(r2)
}
     6d8:	0001883a 	nop
     6dc:	e037883a 	mov	sp,fp
     6e0:	df000017 	ldw	fp,0(sp)
     6e4:	dec00104 	addi	sp,sp,4
     6e8:	f800283a 	ret

000006ec <normalize_audio>:

void normalize_audio(float *input_buffer, float *output_buffer, int size) {
     6ec:	defff504 	addi	sp,sp,-44
     6f0:	dfc00a15 	stw	ra,40(sp)
     6f4:	df000915 	stw	fp,36(sp)
     6f8:	dc000815 	stw	r16,32(sp)
     6fc:	df000904 	addi	fp,sp,36
     700:	e13ff915 	stw	r4,-28(fp)
     704:	e17ff815 	stw	r5,-32(fp)
     708:	e1bff715 	stw	r6,-36(fp)
    int max_val = 0;
     70c:	e03ffe15 	stw	zero,-8(fp)

    // Convert unsigned values to signed values and find the maximum absolute value
    for (int i = 0; i < size; i++) {
     710:	e03ffd15 	stw	zero,-12(fp)
     714:	00001606 	br	770 <normalize_audio+0x84>
        int signed_val = input_buffer[i] - 32768;
     718:	e0bffd17 	ldw	r2,-12(fp)
     71c:	100490ba 	slli	r2,r2,2
     720:	e0fff917 	ldw	r3,-28(fp)
     724:	1885883a 	add	r2,r3,r2
     728:	10c00017 	ldw	r3,0(r2)
     72c:	0091c034 	movhi	r2,18176
     730:	1885ffb2 	custom	254,r2,r3,r2
     734:	1009883a 	mov	r4,r2
     738:	00079e00 	call	79e0 <__fixsfsi>
     73c:	e0bffb15 	stw	r2,-20(fp)
        int abs_val = abs(signed_val);
     740:	e0bffb17 	ldw	r2,-20(fp)
     744:	1000010e 	bge	r2,zero,74c <normalize_audio+0x60>
     748:	0085c83a 	sub	r2,zero,r2
     74c:	e0bffa15 	stw	r2,-24(fp)
        if (abs_val > max_val) {
     750:	e0bffa17 	ldw	r2,-24(fp)
     754:	e0fffe17 	ldw	r3,-8(fp)
     758:	1880020e 	bge	r3,r2,764 <normalize_audio+0x78>
            max_val = abs_val;
     75c:	e0bffa17 	ldw	r2,-24(fp)
     760:	e0bffe15 	stw	r2,-8(fp)
    for (int i = 0; i < size; i++) {
     764:	e0bffd17 	ldw	r2,-12(fp)
     768:	10800044 	addi	r2,r2,1
     76c:	e0bffd15 	stw	r2,-12(fp)
     770:	e0fffd17 	ldw	r3,-12(fp)
     774:	e0bff717 	ldw	r2,-36(fp)
     778:	18bfe716 	blt	r3,r2,718 <normalize_audio+0x2c>
        }
    }

    // Normalize the input buffer to the range [-1, 1]
    for (int i = 0; i < size; i++) {
     77c:	e03ffc15 	stw	zero,-16(fp)
     780:	00001306 	br	7d0 <normalize_audio+0xe4>
        output_buffer[i] = (float)(input_buffer[i] - 32768) / max_val;
     784:	e0bffc17 	ldw	r2,-16(fp)
     788:	100490ba 	slli	r2,r2,2
     78c:	e0fff917 	ldw	r3,-28(fp)
     790:	1885883a 	add	r2,r3,r2
     794:	10c00017 	ldw	r3,0(r2)
     798:	0091c034 	movhi	r2,18176
     79c:	18a1ffb2 	custom	254,r16,r3,r2
     7a0:	e13ffe17 	ldw	r4,-8(fp)
     7a4:	0007a500 	call	7a50 <__floatsisf>
     7a8:	1009883a 	mov	r4,r2
     7ac:	e0bffc17 	ldw	r2,-16(fp)
     7b0:	100490ba 	slli	r2,r2,2
     7b4:	e0fff817 	ldw	r3,-32(fp)
     7b8:	1885883a 	add	r2,r3,r2
     7bc:	8107fff2 	custom	255,r3,r16,r4
     7c0:	10c00015 	stw	r3,0(r2)
    for (int i = 0; i < size; i++) {
     7c4:	e0bffc17 	ldw	r2,-16(fp)
     7c8:	10800044 	addi	r2,r2,1
     7cc:	e0bffc15 	stw	r2,-16(fp)
     7d0:	e0fffc17 	ldw	r3,-16(fp)
     7d4:	e0bff717 	ldw	r2,-36(fp)
     7d8:	18bfea16 	blt	r3,r2,784 <normalize_audio+0x98>
    }
}
     7dc:	0001883a 	nop
     7e0:	0001883a 	nop
     7e4:	e6ffff04 	addi	sp,fp,-4
     7e8:	dfc00217 	ldw	ra,8(sp)
     7ec:	df000117 	ldw	fp,4(sp)
     7f0:	dc000017 	ldw	r16,0(sp)
     7f4:	dec00304 	addi	sp,sp,12
     7f8:	f800283a 	ret

000007fc <denormalize_audio>:

void denormalize_audio(float *input_buffer, float *output_buffer, int size) {
     7fc:	defff804 	addi	sp,sp,-32
     800:	dfc00715 	stw	ra,28(sp)
     804:	df000615 	stw	fp,24(sp)
     808:	dc000515 	stw	r16,20(sp)
     80c:	df000604 	addi	fp,sp,24
     810:	e13ffc15 	stw	r4,-16(fp)
     814:	e17ffb15 	stw	r5,-20(fp)
     818:	e1bffa15 	stw	r6,-24(fp)
    int max_val = 32767;  // Maximum value for 16-bit audio
     81c:	009fffc4 	movi	r2,32767
     820:	e0bffd15 	stw	r2,-12(fp)

    // Denormalize the input buffer back to the range of the original audio
    for (int i = 0; i < size; i++) {
     824:	e03ffe15 	stw	zero,-8(fp)
     828:	00001306 	br	878 <denormalize_audio+0x7c>
        output_buffer[i] = input_buffer[i] * max_val + 32768;
     82c:	e0bffe17 	ldw	r2,-8(fp)
     830:	100490ba 	slli	r2,r2,2
     834:	e0fffc17 	ldw	r3,-16(fp)
     838:	1885883a 	add	r2,r3,r2
     83c:	14000017 	ldw	r16,0(r2)
     840:	e13ffd17 	ldw	r4,-12(fp)
     844:	0007a500 	call	7a50 <__floatsisf>
     848:	1007883a 	mov	r3,r2
     84c:	80c9ff32 	custom	252,r4,r16,r3
     850:	e0bffe17 	ldw	r2,-8(fp)
     854:	100490ba 	slli	r2,r2,2
     858:	e0fffb17 	ldw	r3,-20(fp)
     85c:	1885883a 	add	r2,r3,r2
     860:	00d1c034 	movhi	r3,18176
     864:	20c7ff72 	custom	253,r3,r4,r3
     868:	10c00015 	stw	r3,0(r2)
    for (int i = 0; i < size; i++) {
     86c:	e0bffe17 	ldw	r2,-8(fp)
     870:	10800044 	addi	r2,r2,1
     874:	e0bffe15 	stw	r2,-8(fp)
     878:	e0fffe17 	ldw	r3,-8(fp)
     87c:	e0bffa17 	ldw	r2,-24(fp)
     880:	18bfea16 	blt	r3,r2,82c <denormalize_audio+0x30>
    }
}
     884:	0001883a 	nop
     888:	0001883a 	nop
     88c:	e6ffff04 	addi	sp,fp,-4
     890:	dfc00217 	ldw	ra,8(sp)
     894:	df000117 	ldw	fp,4(sp)
     898:	dc000017 	ldw	r16,0(sp)
     89c:	dec00304 	addi	sp,sp,12
     8a0:	f800283a 	ret

000008a4 <pre_emphasis>:

void pre_emphasis(float *signal, float *pre_emphasized, int size, float alpha) {
     8a4:	defffa04 	addi	sp,sp,-24
     8a8:	df000515 	stw	fp,20(sp)
     8ac:	df000504 	addi	fp,sp,20
     8b0:	e13ffe15 	stw	r4,-8(fp)
     8b4:	e17ffd15 	stw	r5,-12(fp)
     8b8:	e1bffc15 	stw	r6,-16(fp)
     8bc:	e1fffb15 	stw	r7,-20(fp)
    pre_emphasized[0] = signal[0];
     8c0:	e0bffe17 	ldw	r2,-8(fp)
     8c4:	10c00017 	ldw	r3,0(r2)
     8c8:	e0bffd17 	ldw	r2,-12(fp)
     8cc:	10c00015 	stw	r3,0(r2)
    for (int i = 1; i < size; i++) {
     8d0:	00800044 	movi	r2,1
     8d4:	e0bfff15 	stw	r2,-4(fp)
     8d8:	00001806 	br	93c <pre_emphasis+0x98>
        pre_emphasized[i] = signal[i] - alpha * signal[i - 1];
     8dc:	e0bfff17 	ldw	r2,-4(fp)
     8e0:	100490ba 	slli	r2,r2,2
     8e4:	e0fffe17 	ldw	r3,-8(fp)
     8e8:	1885883a 	add	r2,r3,r2
     8ec:	11000017 	ldw	r4,0(r2)
     8f0:	e0ffff17 	ldw	r3,-4(fp)
     8f4:	00900034 	movhi	r2,16384
     8f8:	10bfffc4 	addi	r2,r2,-1
     8fc:	1885883a 	add	r2,r3,r2
     900:	100490ba 	slli	r2,r2,2
     904:	e0fffe17 	ldw	r3,-8(fp)
     908:	1885883a 	add	r2,r3,r2
     90c:	10c00017 	ldw	r3,0(r2)
     910:	e0bffb17 	ldw	r2,-20(fp)
     914:	1887ff32 	custom	252,r3,r3,r2
     918:	e0bfff17 	ldw	r2,-4(fp)
     91c:	100490ba 	slli	r2,r2,2
     920:	e17ffd17 	ldw	r5,-12(fp)
     924:	2885883a 	add	r2,r5,r2
     928:	20c7ffb2 	custom	254,r3,r4,r3
     92c:	10c00015 	stw	r3,0(r2)
    for (int i = 1; i < size; i++) {
     930:	e0bfff17 	ldw	r2,-4(fp)
     934:	10800044 	addi	r2,r2,1
     938:	e0bfff15 	stw	r2,-4(fp)
     93c:	e0ffff17 	ldw	r3,-4(fp)
     940:	e0bffc17 	ldw	r2,-16(fp)
     944:	18bfe516 	blt	r3,r2,8dc <pre_emphasis+0x38>
    }
}
     948:	0001883a 	nop
     94c:	0001883a 	nop
     950:	e037883a 	mov	sp,fp
     954:	df000017 	ldw	fp,0(sp)
     958:	dec00104 	addi	sp,sp,4
     95c:	f800283a 	ret

00000960 <frame_blocking>:

void frame_blocking(float *signal, float **frames, int signal_size, int frame_size, int frame_stride) {
     960:	defff704 	addi	sp,sp,-36
     964:	dfc00815 	stw	ra,32(sp)
     968:	df000715 	stw	fp,28(sp)
     96c:	df000704 	addi	fp,sp,28
     970:	e13ffc15 	stw	r4,-16(fp)
     974:	e17ffb15 	stw	r5,-20(fp)
     978:	e1bffa15 	stw	r6,-24(fp)
     97c:	e1fff915 	stw	r7,-28(fp)
    int num_frames = 1 + (signal_size - frame_size) / frame_stride;
     980:	e0fffa17 	ldw	r3,-24(fp)
     984:	e0bff917 	ldw	r2,-28(fp)
     988:	1885c83a 	sub	r2,r3,r2
     98c:	e1400217 	ldw	r5,8(fp)
     990:	1009883a 	mov	r4,r2
     994:	00078040 	call	7804 <__divsi3>
     998:	10800044 	addi	r2,r2,1
     99c:	e0bffd15 	stw	r2,-12(fp)
    for (int i = 0; i < num_frames; i++) {
     9a0:	e03fff15 	stw	zero,-4(fp)
     9a4:	00001e06 	br	a20 <frame_blocking+0xc0>
        for (int j = 0; j < frame_size; j++) {
     9a8:	e03ffe15 	stw	zero,-8(fp)
     9ac:	00001606 	br	a08 <frame_blocking+0xa8>
            frames[i][j] = signal[i * frame_stride + j];
     9b0:	e1400217 	ldw	r5,8(fp)
     9b4:	e13fff17 	ldw	r4,-4(fp)
     9b8:	00079b80 	call	79b8 <__mulsi3>
     9bc:	1007883a 	mov	r3,r2
     9c0:	e0bffe17 	ldw	r2,-8(fp)
     9c4:	1885883a 	add	r2,r3,r2
     9c8:	100490ba 	slli	r2,r2,2
     9cc:	e0fffc17 	ldw	r3,-16(fp)
     9d0:	1889883a 	add	r4,r3,r2
     9d4:	e0bfff17 	ldw	r2,-4(fp)
     9d8:	100490ba 	slli	r2,r2,2
     9dc:	e0fffb17 	ldw	r3,-20(fp)
     9e0:	1885883a 	add	r2,r3,r2
     9e4:	10c00017 	ldw	r3,0(r2)
     9e8:	e0bffe17 	ldw	r2,-8(fp)
     9ec:	100490ba 	slli	r2,r2,2
     9f0:	1885883a 	add	r2,r3,r2
     9f4:	20c00017 	ldw	r3,0(r4)
     9f8:	10c00015 	stw	r3,0(r2)
        for (int j = 0; j < frame_size; j++) {
     9fc:	e0bffe17 	ldw	r2,-8(fp)
     a00:	10800044 	addi	r2,r2,1
     a04:	e0bffe15 	stw	r2,-8(fp)
     a08:	e0fffe17 	ldw	r3,-8(fp)
     a0c:	e0bff917 	ldw	r2,-28(fp)
     a10:	18bfe716 	blt	r3,r2,9b0 <frame_blocking+0x50>
    for (int i = 0; i < num_frames; i++) {
     a14:	e0bfff17 	ldw	r2,-4(fp)
     a18:	10800044 	addi	r2,r2,1
     a1c:	e0bfff15 	stw	r2,-4(fp)
     a20:	e0ffff17 	ldw	r3,-4(fp)
     a24:	e0bffd17 	ldw	r2,-12(fp)
     a28:	18bfdf16 	blt	r3,r2,9a8 <frame_blocking+0x48>
        }
    }
}
     a2c:	0001883a 	nop
     a30:	0001883a 	nop
     a34:	e037883a 	mov	sp,fp
     a38:	dfc00117 	ldw	ra,4(sp)
     a3c:	df000017 	ldw	fp,0(sp)
     a40:	dec00204 	addi	sp,sp,8
     a44:	f800283a 	ret

00000a48 <hamming_window>:

void hamming_window(float *frame, int frame_size) {
     a48:	defff804 	addi	sp,sp,-32
     a4c:	dfc00715 	stw	ra,28(sp)
     a50:	df000615 	stw	fp,24(sp)
     a54:	dc800515 	stw	r18,20(sp)
     a58:	dc400415 	stw	r17,16(sp)
     a5c:	dc000315 	stw	r16,12(sp)
     a60:	df000604 	addi	fp,sp,24
     a64:	e13ffb15 	stw	r4,-20(fp)
     a68:	e17ffa15 	stw	r5,-24(fp)
    for (int i = 0; i < frame_size; i++) {
     a6c:	e03ffc15 	stw	zero,-16(fp)
     a70:	00004706 	br	b90 <hamming_window+0x148>
        frame[i] *= 0.54 - 0.46 * cos(2 * PI * i / (frame_size - 1));
     a74:	e0bffc17 	ldw	r2,-16(fp)
     a78:	100490ba 	slli	r2,r2,2
     a7c:	e0fffb17 	ldw	r3,-20(fp)
     a80:	1885883a 	add	r2,r3,r2
     a84:	10c00017 	ldw	r3,0(r2)
     a88:	1809883a 	mov	r4,r3
     a8c:	000a20c0 	call	a20c <__extendsfdf2>
     a90:	1021883a 	mov	r16,r2
     a94:	1823883a 	mov	r17,r3
     a98:	e13ffc17 	ldw	r4,-16(fp)
     a9c:	0007a500 	call	7a50 <__floatsisf>
     aa0:	1007883a 	mov	r3,r2
     aa4:	00903274 	movhi	r2,16585
     aa8:	1083f6c4 	addi	r2,r2,4059
     aac:	18a5ff32 	custom	252,r18,r3,r2
     ab0:	e0bffa17 	ldw	r2,-24(fp)
     ab4:	10bfffc4 	addi	r2,r2,-1
     ab8:	1009883a 	mov	r4,r2
     abc:	0007a500 	call	7a50 <__floatsisf>
     ac0:	1007883a 	mov	r3,r2
     ac4:	90c5fff2 	custom	255,r2,r18,r3
     ac8:	1009883a 	mov	r4,r2
     acc:	000a20c0 	call	a20c <__extendsfdf2>
     ad0:	100d883a 	mov	r6,r2
     ad4:	180f883a 	mov	r7,r3
     ad8:	3009883a 	mov	r4,r6
     adc:	380b883a 	mov	r5,r7
     ae0:	00033c40 	call	33c4 <cos>
     ae4:	1011883a 	mov	r8,r2
     ae8:	1813883a 	mov	r9,r3
     aec:	01b80034 	movhi	r6,57344
     af0:	01cff774 	movhi	r7,16349
     af4:	39dc28c4 	addi	r7,r7,28835
     af8:	4009883a 	mov	r4,r8
     afc:	480b883a 	mov	r5,r9
     b00:	0008fc80 	call	8fc8 <__muldf3>
     b04:	1009883a 	mov	r4,r2
     b08:	180b883a 	mov	r5,r3
     b0c:	2005883a 	mov	r2,r4
     b10:	2807883a 	mov	r3,r5
     b14:	100d883a 	mov	r6,r2
     b18:	180f883a 	mov	r7,r3
     b1c:	01080034 	movhi	r4,8192
     b20:	014ff874 	movhi	r5,16353
     b24:	2951eb84 	addi	r5,r5,18350
     b28:	00097740 	call	9774 <__subdf3>
     b2c:	1009883a 	mov	r4,r2
     b30:	180b883a 	mov	r5,r3
     b34:	2005883a 	mov	r2,r4
     b38:	2807883a 	mov	r3,r5
     b3c:	100d883a 	mov	r6,r2
     b40:	180f883a 	mov	r7,r3
     b44:	8009883a 	mov	r4,r16
     b48:	880b883a 	mov	r5,r17
     b4c:	0008fc80 	call	8fc8 <__muldf3>
     b50:	1009883a 	mov	r4,r2
     b54:	180b883a 	mov	r5,r3
     b58:	2005883a 	mov	r2,r4
     b5c:	2807883a 	mov	r3,r5
     b60:	e13ffc17 	ldw	r4,-16(fp)
     b64:	200890ba 	slli	r4,r4,2
     b68:	e17ffb17 	ldw	r5,-20(fp)
     b6c:	2921883a 	add	r16,r5,r4
     b70:	1009883a 	mov	r4,r2
     b74:	180b883a 	mov	r5,r3
     b78:	000a3080 	call	a308 <__truncdfsf2>
     b7c:	1007883a 	mov	r3,r2
     b80:	80c00015 	stw	r3,0(r16)
    for (int i = 0; i < frame_size; i++) {
     b84:	e0bffc17 	ldw	r2,-16(fp)
     b88:	10800044 	addi	r2,r2,1
     b8c:	e0bffc15 	stw	r2,-16(fp)
     b90:	e0fffc17 	ldw	r3,-16(fp)
     b94:	e0bffa17 	ldw	r2,-24(fp)
     b98:	18bfb616 	blt	r3,r2,a74 <hamming_window+0x2c>
    }
}
     b9c:	0001883a 	nop
     ba0:	0001883a 	nop
     ba4:	e6fffd04 	addi	sp,fp,-12
     ba8:	dfc00417 	ldw	ra,16(sp)
     bac:	df000317 	ldw	fp,12(sp)
     bb0:	dc800217 	ldw	r18,8(sp)
     bb4:	dc400117 	ldw	r17,4(sp)
     bb8:	dc000017 	ldw	r16,0(sp)
     bbc:	dec00504 	addi	sp,sp,20
     bc0:	f800283a 	ret

00000bc4 <fft_example>:


void fft_example(float *input, kiss_fft_cpx *output) {
     bc4:	defffb04 	addi	sp,sp,-20
     bc8:	dfc00415 	stw	ra,16(sp)
     bcc:	df000315 	stw	fp,12(sp)
     bd0:	df000304 	addi	fp,sp,12
     bd4:	e13ffe15 	stw	r4,-8(fp)
     bd8:	e17ffd15 	stw	r5,-12(fp)

    kiss_fft_cfg cfg;

    cfg = kiss_fft_alloc(FFT_SIZE, 0, 0, 0);
     bdc:	000f883a 	mov	r7,zero
     be0:	000d883a 	mov	r6,zero
     be4:	000b883a 	mov	r5,zero
     be8:	01010004 	movi	r4,1024
     bec:	0002f7c0 	call	2f7c <kiss_fft_alloc>
     bf0:	e0bfff15 	stw	r2,-4(fp)


    kiss_fft(cfg, input, output);
     bf4:	e1bffd17 	ldw	r6,-12(fp)
     bf8:	e17ffe17 	ldw	r5,-8(fp)
     bfc:	e13fff17 	ldw	r4,-4(fp)
     c00:	000328c0 	call	328c <kiss_fft>


    kiss_fft_free(cfg);
     c04:	e13fff17 	ldw	r4,-4(fp)
     c08:	000a4e80 	call	a4e8 <free>

}
     c0c:	0001883a 	nop
     c10:	e037883a 	mov	sp,fp
     c14:	dfc00117 	ldw	ra,4(sp)
     c18:	df000017 	ldw	fp,0(sp)
     c1c:	dec00204 	addi	sp,sp,8
     c20:	f800283a 	ret

00000c24 <mel_filter_bank>:

void mel_filter_bank(float *power_spectrum, float *mel_energies, int num_filters, int fft_size, int sample_rate) {
     c24:	deffe904 	addi	sp,sp,-92
     c28:	dfc01615 	stw	ra,88(sp)
     c2c:	df001515 	stw	fp,84(sp)
     c30:	ddc01415 	stw	r23,80(sp)
     c34:	dd801315 	stw	r22,76(sp)
     c38:	dd401215 	stw	r21,72(sp)
     c3c:	dd001115 	stw	r20,68(sp)
     c40:	dcc01015 	stw	r19,64(sp)
     c44:	dc800f15 	stw	r18,60(sp)
     c48:	dc400e15 	stw	r17,56(sp)
     c4c:	dc000d15 	stw	r16,52(sp)
     c50:	df001504 	addi	fp,sp,84
     c54:	e13fef15 	stw	r4,-68(fp)
     c58:	e17fee15 	stw	r5,-72(fp)
     c5c:	e1bfed15 	stw	r6,-76(fp)
     c60:	e1ffec15 	stw	r7,-80(fp)
     c64:	d805883a 	mov	r2,sp
     c68:	e0bfeb15 	stw	r2,-84(fp)
    int low_freq_mel = 0;
     c6c:	e03ff315 	stw	zero,-52(fp)
    int high_freq_mel = (2595 * log10(1 + (sample_rate / 2) / 700.0));
     c70:	e0800217 	ldw	r2,8(fp)
     c74:	1006d7fa 	srli	r3,r2,31
     c78:	1885883a 	add	r2,r3,r2
     c7c:	1005d07a 	srai	r2,r2,1
     c80:	1009883a 	mov	r4,r2
     c84:	0007a500 	call	7a50 <__floatsisf>
     c88:	1007883a 	mov	r3,r2
     c8c:	00910bf4 	movhi	r2,17455
     c90:	1887fff2 	custom	255,r3,r3,r2
     c94:	008fe034 	movhi	r2,16256
     c98:	1885ff72 	custom	253,r2,r3,r2
     c9c:	1009883a 	mov	r4,r2
     ca0:	000a20c0 	call	a20c <__extendsfdf2>
     ca4:	100d883a 	mov	r6,r2
     ca8:	180f883a 	mov	r7,r3
     cac:	3009883a 	mov	r4,r6
     cb0:	380b883a 	mov	r5,r7
     cb4:	00037e00 	call	37e0 <log10>
     cb8:	1011883a 	mov	r8,r2
     cbc:	1813883a 	mov	r9,r3
     cc0:	000d883a 	mov	r6,zero
     cc4:	01d02934 	movhi	r7,16548
     cc8:	39d18004 	addi	r7,r7,17920
     ccc:	4009883a 	mov	r4,r8
     cd0:	480b883a 	mov	r5,r9
     cd4:	0008fc80 	call	8fc8 <__muldf3>
     cd8:	1009883a 	mov	r4,r2
     cdc:	180b883a 	mov	r5,r3
     ce0:	2005883a 	mov	r2,r4
     ce4:	2807883a 	mov	r3,r5
     ce8:	1009883a 	mov	r4,r2
     cec:	180b883a 	mov	r5,r3
     cf0:	000a0d40 	call	a0d4 <__fixdfsi>
     cf4:	e0bff215 	stw	r2,-56(fp)
    int mel_points[num_filters + 2];
     cf8:	e0bfed17 	ldw	r2,-76(fp)
     cfc:	10800084 	addi	r2,r2,2
     d00:	10ffffc4 	addi	r3,r2,-1
     d04:	e0fff115 	stw	r3,-60(fp)
     d08:	1007883a 	mov	r3,r2
     d0c:	182d883a 	mov	r22,r3
     d10:	002f883a 	mov	r23,zero
     d14:	b006d6fa 	srli	r3,r22,27
     d18:	b826917a 	slli	r19,r23,5
     d1c:	1ce6b03a 	or	r19,r3,r19
     d20:	b024917a 	slli	r18,r22,5
     d24:	1007883a 	mov	r3,r2
     d28:	1829883a 	mov	r20,r3
     d2c:	002b883a 	mov	r21,zero
     d30:	a006d6fa 	srli	r3,r20,27
     d34:	a822917a 	slli	r17,r21,5
     d38:	1c62b03a 	or	r17,r3,r17
     d3c:	a020917a 	slli	r16,r20,5
     d40:	100490ba 	slli	r2,r2,2
     d44:	108000c4 	addi	r2,r2,3
     d48:	1004d0ba 	srli	r2,r2,2
     d4c:	100490ba 	slli	r2,r2,2
     d50:	d8b7c83a 	sub	sp,sp,r2
     d54:	d805883a 	mov	r2,sp
     d58:	108000c4 	addi	r2,r2,3
     d5c:	1004d0ba 	srli	r2,r2,2
     d60:	100490ba 	slli	r2,r2,2
     d64:	e0bff015 	stw	r2,-64(fp)

    for (int i = 0; i < num_filters + 2; i++) {
     d68:	e03ff415 	stw	zero,-48(fp)
     d6c:	00005b06 	br	edc <mel_filter_bank+0x2b8>
        mel_points[i] = (fft_size + 1) * (700 * (pow(10, (low_freq_mel + i * (high_freq_mel - low_freq_mel) / (num_filters + 1)) / 2595.0) - 1)) / sample_rate;
     d70:	e0bfec17 	ldw	r2,-80(fp)
     d74:	10800044 	addi	r2,r2,1
     d78:	1009883a 	mov	r4,r2
     d7c:	000a1540 	call	a154 <__floatsidf>
     d80:	1021883a 	mov	r16,r2
     d84:	1823883a 	mov	r17,r3
     d88:	e0fff217 	ldw	r3,-56(fp)
     d8c:	e0bff317 	ldw	r2,-52(fp)
     d90:	1885c83a 	sub	r2,r3,r2
     d94:	e17ff417 	ldw	r5,-48(fp)
     d98:	1009883a 	mov	r4,r2
     d9c:	00079b80 	call	79b8 <__mulsi3>
     da0:	1007883a 	mov	r3,r2
     da4:	e0bfed17 	ldw	r2,-76(fp)
     da8:	10800044 	addi	r2,r2,1
     dac:	100b883a 	mov	r5,r2
     db0:	1809883a 	mov	r4,r3
     db4:	00078040 	call	7804 <__divsi3>
     db8:	1007883a 	mov	r3,r2
     dbc:	e0bff317 	ldw	r2,-52(fp)
     dc0:	1885883a 	add	r2,r3,r2
     dc4:	1009883a 	mov	r4,r2
     dc8:	0007a500 	call	7a50 <__floatsisf>
     dcc:	1007883a 	mov	r3,r2
     dd0:	009148b4 	movhi	r2,17698
     dd4:	108c0004 	addi	r2,r2,12288
     dd8:	1885fff2 	custom	255,r2,r3,r2
     ddc:	1009883a 	mov	r4,r2
     de0:	000a20c0 	call	a20c <__extendsfdf2>
     de4:	1009883a 	mov	r4,r2
     de8:	180b883a 	mov	r5,r3
     dec:	200d883a 	mov	r6,r4
     df0:	280f883a 	mov	r7,r5
     df4:	0009883a 	mov	r4,zero
     df8:	01500934 	movhi	r5,16420
     dfc:	00038a40 	call	38a4 <pow>
     e00:	1011883a 	mov	r8,r2
     e04:	1813883a 	mov	r9,r3
     e08:	000d883a 	mov	r6,zero
     e0c:	01cffc34 	movhi	r7,16368
     e10:	4009883a 	mov	r4,r8
     e14:	480b883a 	mov	r5,r9
     e18:	00097740 	call	9774 <__subdf3>
     e1c:	1009883a 	mov	r4,r2
     e20:	180b883a 	mov	r5,r3
     e24:	2005883a 	mov	r2,r4
     e28:	2807883a 	mov	r3,r5
     e2c:	000d883a 	mov	r6,zero
     e30:	01d021b4 	movhi	r7,16518
     e34:	39f80004 	addi	r7,r7,-8192
     e38:	1009883a 	mov	r4,r2
     e3c:	180b883a 	mov	r5,r3
     e40:	0008fc80 	call	8fc8 <__muldf3>
     e44:	1009883a 	mov	r4,r2
     e48:	180b883a 	mov	r5,r3
     e4c:	2005883a 	mov	r2,r4
     e50:	2807883a 	mov	r3,r5
     e54:	100d883a 	mov	r6,r2
     e58:	180f883a 	mov	r7,r3
     e5c:	8009883a 	mov	r4,r16
     e60:	880b883a 	mov	r5,r17
     e64:	0008fc80 	call	8fc8 <__muldf3>
     e68:	1009883a 	mov	r4,r2
     e6c:	180b883a 	mov	r5,r3
     e70:	2021883a 	mov	r16,r4
     e74:	2823883a 	mov	r17,r5
     e78:	e1000217 	ldw	r4,8(fp)
     e7c:	000a1540 	call	a154 <__floatsidf>
     e80:	1009883a 	mov	r4,r2
     e84:	180b883a 	mov	r5,r3
     e88:	200d883a 	mov	r6,r4
     e8c:	280f883a 	mov	r7,r5
     e90:	8009883a 	mov	r4,r16
     e94:	880b883a 	mov	r5,r17
     e98:	00084640 	call	8464 <__divdf3>
     e9c:	1009883a 	mov	r4,r2
     ea0:	180b883a 	mov	r5,r3
     ea4:	2005883a 	mov	r2,r4
     ea8:	2807883a 	mov	r3,r5
     eac:	1009883a 	mov	r4,r2
     eb0:	180b883a 	mov	r5,r3
     eb4:	000a0d40 	call	a0d4 <__fixdfsi>
     eb8:	1009883a 	mov	r4,r2
     ebc:	e0fff017 	ldw	r3,-64(fp)
     ec0:	e0bff417 	ldw	r2,-48(fp)
     ec4:	100490ba 	slli	r2,r2,2
     ec8:	1885883a 	add	r2,r3,r2
     ecc:	11000015 	stw	r4,0(r2)
    for (int i = 0; i < num_filters + 2; i++) {
     ed0:	e0bff417 	ldw	r2,-48(fp)
     ed4:	10800044 	addi	r2,r2,1
     ed8:	e0bff415 	stw	r2,-48(fp)
     edc:	e0bfed17 	ldw	r2,-76(fp)
     ee0:	10c00044 	addi	r3,r2,1
     ee4:	e0bff417 	ldw	r2,-48(fp)
     ee8:	18bfa10e 	bge	r3,r2,d70 <mel_filter_bank+0x14c>
    }

    for (int i = 0; i < num_filters; i++) {
     eec:	e03ff515 	stw	zero,-44(fp)
     ef0:	00009506 	br	1148 <mel_filter_bank+0x524>
        for (int j = mel_points[i]; j < mel_points[i + 1]; j++) {
     ef4:	e0fff017 	ldw	r3,-64(fp)
     ef8:	e0bff517 	ldw	r2,-44(fp)
     efc:	100490ba 	slli	r2,r2,2
     f00:	1885883a 	add	r2,r3,r2
     f04:	10800017 	ldw	r2,0(r2)
     f08:	e0bff615 	stw	r2,-40(fp)
     f0c:	00002d06 	br	fc4 <mel_filter_bank+0x3a0>
            mel_energies[i] += (j - mel_points[i]) / (mel_points[i + 1] - mel_points[i]) * power_spectrum[j];
     f10:	e0bff517 	ldw	r2,-44(fp)
     f14:	100490ba 	slli	r2,r2,2
     f18:	e0ffee17 	ldw	r3,-72(fp)
     f1c:	1885883a 	add	r2,r3,r2
     f20:	14000017 	ldw	r16,0(r2)
     f24:	e0fff017 	ldw	r3,-64(fp)
     f28:	e0bff517 	ldw	r2,-44(fp)
     f2c:	100490ba 	slli	r2,r2,2
     f30:	1885883a 	add	r2,r3,r2
     f34:	10800017 	ldw	r2,0(r2)
     f38:	e0fff617 	ldw	r3,-40(fp)
     f3c:	188dc83a 	sub	r6,r3,r2
     f40:	e0bff517 	ldw	r2,-44(fp)
     f44:	10800044 	addi	r2,r2,1
     f48:	e0fff017 	ldw	r3,-64(fp)
     f4c:	100490ba 	slli	r2,r2,2
     f50:	1885883a 	add	r2,r3,r2
     f54:	10c00017 	ldw	r3,0(r2)
     f58:	e13ff017 	ldw	r4,-64(fp)
     f5c:	e0bff517 	ldw	r2,-44(fp)
     f60:	100490ba 	slli	r2,r2,2
     f64:	2085883a 	add	r2,r4,r2
     f68:	10800017 	ldw	r2,0(r2)
     f6c:	1885c83a 	sub	r2,r3,r2
     f70:	100b883a 	mov	r5,r2
     f74:	3009883a 	mov	r4,r6
     f78:	00078040 	call	7804 <__divsi3>
     f7c:	1009883a 	mov	r4,r2
     f80:	0007a500 	call	7a50 <__floatsisf>
     f84:	1009883a 	mov	r4,r2
     f88:	e0bff617 	ldw	r2,-40(fp)
     f8c:	100490ba 	slli	r2,r2,2
     f90:	e0ffef17 	ldw	r3,-68(fp)
     f94:	1887883a 	add	r3,r3,r2
     f98:	18800017 	ldw	r2,0(r3)
     f9c:	2087ff32 	custom	252,r3,r4,r2
     fa0:	e0bff517 	ldw	r2,-44(fp)
     fa4:	100490ba 	slli	r2,r2,2
     fa8:	e13fee17 	ldw	r4,-72(fp)
     fac:	2085883a 	add	r2,r4,r2
     fb0:	80c7ff72 	custom	253,r3,r16,r3
     fb4:	10c00015 	stw	r3,0(r2)
        for (int j = mel_points[i]; j < mel_points[i + 1]; j++) {
     fb8:	e0bff617 	ldw	r2,-40(fp)
     fbc:	10800044 	addi	r2,r2,1
     fc0:	e0bff615 	stw	r2,-40(fp)
     fc4:	e0bff517 	ldw	r2,-44(fp)
     fc8:	10800044 	addi	r2,r2,1
     fcc:	e0fff017 	ldw	r3,-64(fp)
     fd0:	100490ba 	slli	r2,r2,2
     fd4:	1885883a 	add	r2,r3,r2
     fd8:	10800017 	ldw	r2,0(r2)
     fdc:	e0fff617 	ldw	r3,-40(fp)
     fe0:	18bfcb16 	blt	r3,r2,f10 <mel_filter_bank+0x2ec>
        }
        for (int j = mel_points[i + 1]; j < mel_points[i + 2]; j++) {
     fe4:	e0bff517 	ldw	r2,-44(fp)
     fe8:	10800044 	addi	r2,r2,1
     fec:	e0fff017 	ldw	r3,-64(fp)
     ff0:	100490ba 	slli	r2,r2,2
     ff4:	1885883a 	add	r2,r3,r2
     ff8:	10800017 	ldw	r2,0(r2)
     ffc:	e0bff715 	stw	r2,-36(fp)
    1000:	00002f06 	br	10c0 <mel_filter_bank+0x49c>
            mel_energies[i] += (mel_points[i + 2] - j) / (mel_points[i + 2] - mel_points[i + 1]) * power_spectrum[j];
    1004:	e0bff517 	ldw	r2,-44(fp)
    1008:	100490ba 	slli	r2,r2,2
    100c:	e0ffee17 	ldw	r3,-72(fp)
    1010:	1885883a 	add	r2,r3,r2
    1014:	14000017 	ldw	r16,0(r2)
    1018:	e0bff517 	ldw	r2,-44(fp)
    101c:	10800084 	addi	r2,r2,2
    1020:	e0fff017 	ldw	r3,-64(fp)
    1024:	100490ba 	slli	r2,r2,2
    1028:	1885883a 	add	r2,r3,r2
    102c:	10c00017 	ldw	r3,0(r2)
    1030:	e0bff717 	ldw	r2,-36(fp)
    1034:	188dc83a 	sub	r6,r3,r2
    1038:	e0bff517 	ldw	r2,-44(fp)
    103c:	10800084 	addi	r2,r2,2
    1040:	e0fff017 	ldw	r3,-64(fp)
    1044:	100490ba 	slli	r2,r2,2
    1048:	1885883a 	add	r2,r3,r2
    104c:	10c00017 	ldw	r3,0(r2)
    1050:	e0bff517 	ldw	r2,-44(fp)
    1054:	10800044 	addi	r2,r2,1
    1058:	e13ff017 	ldw	r4,-64(fp)
    105c:	100490ba 	slli	r2,r2,2
    1060:	2085883a 	add	r2,r4,r2
    1064:	10800017 	ldw	r2,0(r2)
    1068:	1885c83a 	sub	r2,r3,r2
    106c:	100b883a 	mov	r5,r2
    1070:	3009883a 	mov	r4,r6
    1074:	00078040 	call	7804 <__divsi3>
    1078:	1009883a 	mov	r4,r2
    107c:	0007a500 	call	7a50 <__floatsisf>
    1080:	1009883a 	mov	r4,r2
    1084:	e0bff717 	ldw	r2,-36(fp)
    1088:	100490ba 	slli	r2,r2,2
    108c:	e0ffef17 	ldw	r3,-68(fp)
    1090:	1887883a 	add	r3,r3,r2
    1094:	18800017 	ldw	r2,0(r3)
    1098:	2087ff32 	custom	252,r3,r4,r2
    109c:	e0bff517 	ldw	r2,-44(fp)
    10a0:	100490ba 	slli	r2,r2,2
    10a4:	e13fee17 	ldw	r4,-72(fp)
    10a8:	2085883a 	add	r2,r4,r2
    10ac:	80c7ff72 	custom	253,r3,r16,r3
    10b0:	10c00015 	stw	r3,0(r2)
        for (int j = mel_points[i + 1]; j < mel_points[i + 2]; j++) {
    10b4:	e0bff717 	ldw	r2,-36(fp)
    10b8:	10800044 	addi	r2,r2,1
    10bc:	e0bff715 	stw	r2,-36(fp)
    10c0:	e0bff517 	ldw	r2,-44(fp)
    10c4:	10800084 	addi	r2,r2,2
    10c8:	e0fff017 	ldw	r3,-64(fp)
    10cc:	100490ba 	slli	r2,r2,2
    10d0:	1885883a 	add	r2,r3,r2
    10d4:	10800017 	ldw	r2,0(r2)
    10d8:	e0fff717 	ldw	r3,-36(fp)
    10dc:	18bfc916 	blt	r3,r2,1004 <mel_filter_bank+0x3e0>
        }
        mel_energies[i] = log(mel_energies[i]);
    10e0:	e0bff517 	ldw	r2,-44(fp)
    10e4:	100490ba 	slli	r2,r2,2
    10e8:	e0ffee17 	ldw	r3,-72(fp)
    10ec:	1885883a 	add	r2,r3,r2
    10f0:	10c00017 	ldw	r3,0(r2)
    10f4:	1809883a 	mov	r4,r3
    10f8:	000a20c0 	call	a20c <__extendsfdf2>
    10fc:	100d883a 	mov	r6,r2
    1100:	180f883a 	mov	r7,r3
    1104:	3009883a 	mov	r4,r6
    1108:	380b883a 	mov	r5,r7
    110c:	000371c0 	call	371c <log>
    1110:	100d883a 	mov	r6,r2
    1114:	180f883a 	mov	r7,r3
    1118:	e0bff517 	ldw	r2,-44(fp)
    111c:	100490ba 	slli	r2,r2,2
    1120:	e0ffee17 	ldw	r3,-72(fp)
    1124:	18a1883a 	add	r16,r3,r2
    1128:	3009883a 	mov	r4,r6
    112c:	380b883a 	mov	r5,r7
    1130:	000a3080 	call	a308 <__truncdfsf2>
    1134:	1007883a 	mov	r3,r2
    1138:	80c00015 	stw	r3,0(r16)
    for (int i = 0; i < num_filters; i++) {
    113c:	e0bff517 	ldw	r2,-44(fp)
    1140:	10800044 	addi	r2,r2,1
    1144:	e0bff515 	stw	r2,-44(fp)
    1148:	e0fff517 	ldw	r3,-44(fp)
    114c:	e0bfed17 	ldw	r2,-76(fp)
    1150:	18bf6816 	blt	r3,r2,ef4 <mel_filter_bank+0x2d0>
    1154:	e6ffeb17 	ldw	sp,-84(fp)
    }
}
    1158:	0001883a 	nop
    115c:	e6fff804 	addi	sp,fp,-32
    1160:	dfc00917 	ldw	ra,36(sp)
    1164:	df000817 	ldw	fp,32(sp)
    1168:	ddc00717 	ldw	r23,28(sp)
    116c:	dd800617 	ldw	r22,24(sp)
    1170:	dd400517 	ldw	r21,20(sp)
    1174:	dd000417 	ldw	r20,16(sp)
    1178:	dcc00317 	ldw	r19,12(sp)
    117c:	dc800217 	ldw	r18,8(sp)
    1180:	dc400117 	ldw	r17,4(sp)
    1184:	dc000017 	ldw	r16,0(sp)
    1188:	dec00a04 	addi	sp,sp,40
    118c:	f800283a 	ret

00001190 <dct>:

void dct(float *mel_energies, float *mfcc, int num_filters, int num_coefficients) {
    1190:	defff304 	addi	sp,sp,-52
    1194:	dfc00c15 	stw	ra,48(sp)
    1198:	df000b15 	stw	fp,44(sp)
    119c:	dd000a15 	stw	r20,40(sp)
    11a0:	dcc00915 	stw	r19,36(sp)
    11a4:	dc800815 	stw	r18,32(sp)
    11a8:	dc400715 	stw	r17,28(sp)
    11ac:	dc000615 	stw	r16,24(sp)
    11b0:	df000b04 	addi	fp,sp,44
    11b4:	e13ff815 	stw	r4,-32(fp)
    11b8:	e17ff715 	stw	r5,-36(fp)
    11bc:	e1bff615 	stw	r6,-40(fp)
    11c0:	e1fff515 	stw	r7,-44(fp)
    for (int i = 0; i < num_coefficients; i++) {
    11c4:	e03ffa15 	stw	zero,-24(fp)
    11c8:	00005906 	br	1330 <dct+0x1a0>
        mfcc[i] = 0;
    11cc:	e0bffa17 	ldw	r2,-24(fp)
    11d0:	100490ba 	slli	r2,r2,2
    11d4:	e0fff717 	ldw	r3,-36(fp)
    11d8:	1885883a 	add	r2,r3,r2
    11dc:	10000015 	stw	zero,0(r2)
        for (int j = 0; j < num_filters; j++) {
    11e0:	e03ff915 	stw	zero,-28(fp)
    11e4:	00004c06 	br	1318 <dct+0x188>
            mfcc[i] += mel_energies[j] * cos(PI * i * (2 * j + 1) / (2 * num_filters));
    11e8:	e0bffa17 	ldw	r2,-24(fp)
    11ec:	100490ba 	slli	r2,r2,2
    11f0:	e0fff717 	ldw	r3,-36(fp)
    11f4:	1885883a 	add	r2,r3,r2
    11f8:	10c00017 	ldw	r3,0(r2)
    11fc:	1809883a 	mov	r4,r3
    1200:	000a20c0 	call	a20c <__extendsfdf2>
    1204:	1021883a 	mov	r16,r2
    1208:	1823883a 	mov	r17,r3
    120c:	e0bff917 	ldw	r2,-28(fp)
    1210:	100490ba 	slli	r2,r2,2
    1214:	e0fff817 	ldw	r3,-32(fp)
    1218:	1885883a 	add	r2,r3,r2
    121c:	10c00017 	ldw	r3,0(r2)
    1220:	1809883a 	mov	r4,r3
    1224:	000a20c0 	call	a20c <__extendsfdf2>
    1228:	1025883a 	mov	r18,r2
    122c:	1827883a 	mov	r19,r3
    1230:	e13ffa17 	ldw	r4,-24(fp)
    1234:	0007a500 	call	7a50 <__floatsisf>
    1238:	1007883a 	mov	r3,r2
    123c:	00901274 	movhi	r2,16457
    1240:	1083f6c4 	addi	r2,r2,4059
    1244:	18a9ff32 	custom	252,r20,r3,r2
    1248:	e0bff917 	ldw	r2,-28(fp)
    124c:	1085883a 	add	r2,r2,r2
    1250:	10800044 	addi	r2,r2,1
    1254:	1009883a 	mov	r4,r2
    1258:	0007a500 	call	7a50 <__floatsisf>
    125c:	1007883a 	mov	r3,r2
    1260:	a0e9ff32 	custom	252,r20,r20,r3
    1264:	e0bff617 	ldw	r2,-40(fp)
    1268:	1085883a 	add	r2,r2,r2
    126c:	1009883a 	mov	r4,r2
    1270:	0007a500 	call	7a50 <__floatsisf>
    1274:	1007883a 	mov	r3,r2
    1278:	a0c5fff2 	custom	255,r2,r20,r3
    127c:	1009883a 	mov	r4,r2
    1280:	000a20c0 	call	a20c <__extendsfdf2>
    1284:	100d883a 	mov	r6,r2
    1288:	180f883a 	mov	r7,r3
    128c:	3009883a 	mov	r4,r6
    1290:	380b883a 	mov	r5,r7
    1294:	00033c40 	call	33c4 <cos>
    1298:	1009883a 	mov	r4,r2
    129c:	180b883a 	mov	r5,r3
    12a0:	200d883a 	mov	r6,r4
    12a4:	280f883a 	mov	r7,r5
    12a8:	9009883a 	mov	r4,r18
    12ac:	980b883a 	mov	r5,r19
    12b0:	0008fc80 	call	8fc8 <__muldf3>
    12b4:	1009883a 	mov	r4,r2
    12b8:	180b883a 	mov	r5,r3
    12bc:	2005883a 	mov	r2,r4
    12c0:	2807883a 	mov	r3,r5
    12c4:	100d883a 	mov	r6,r2
    12c8:	180f883a 	mov	r7,r3
    12cc:	8009883a 	mov	r4,r16
    12d0:	880b883a 	mov	r5,r17
    12d4:	0007b740 	call	7b74 <__adddf3>
    12d8:	1009883a 	mov	r4,r2
    12dc:	180b883a 	mov	r5,r3
    12e0:	2005883a 	mov	r2,r4
    12e4:	2807883a 	mov	r3,r5
    12e8:	e13ffa17 	ldw	r4,-24(fp)
    12ec:	200890ba 	slli	r4,r4,2
    12f0:	e17ff717 	ldw	r5,-36(fp)
    12f4:	2921883a 	add	r16,r5,r4
    12f8:	1009883a 	mov	r4,r2
    12fc:	180b883a 	mov	r5,r3
    1300:	000a3080 	call	a308 <__truncdfsf2>
    1304:	1007883a 	mov	r3,r2
    1308:	80c00015 	stw	r3,0(r16)
        for (int j = 0; j < num_filters; j++) {
    130c:	e0bff917 	ldw	r2,-28(fp)
    1310:	10800044 	addi	r2,r2,1
    1314:	e0bff915 	stw	r2,-28(fp)
    1318:	e0fff917 	ldw	r3,-28(fp)
    131c:	e0bff617 	ldw	r2,-40(fp)
    1320:	18bfb116 	blt	r3,r2,11e8 <dct+0x58>
    for (int i = 0; i < num_coefficients; i++) {
    1324:	e0bffa17 	ldw	r2,-24(fp)
    1328:	10800044 	addi	r2,r2,1
    132c:	e0bffa15 	stw	r2,-24(fp)
    1330:	e0fffa17 	ldw	r3,-24(fp)
    1334:	e0bff517 	ldw	r2,-44(fp)
    1338:	18bfa416 	blt	r3,r2,11cc <dct+0x3c>
        }
    }
}
    133c:	0001883a 	nop
    1340:	0001883a 	nop
    1344:	e6fffb04 	addi	sp,fp,-20
    1348:	dfc00617 	ldw	ra,24(sp)
    134c:	df000517 	ldw	fp,20(sp)
    1350:	dd000417 	ldw	r20,16(sp)
    1354:	dcc00317 	ldw	r19,12(sp)
    1358:	dc800217 	ldw	r18,8(sp)
    135c:	dc400117 	ldw	r17,4(sp)
    1360:	dc000017 	ldw	r16,0(sp)
    1364:	dec00704 	addi	sp,sp,28
    1368:	f800283a 	ret

0000136c <calculate_mfcc>:

void calculate_mfcc(float *signal, int signal_size, int sample_rate, int frame_size, int frame_stride, int num_filters, int num_coefficients, float *mfcc_result) {
    136c:	deffca04 	addi	sp,sp,-216
    1370:	dfc03515 	stw	ra,212(sp)
    1374:	df003415 	stw	fp,208(sp)
    1378:	ddc03315 	stw	r23,204(sp)
    137c:	dd803215 	stw	r22,200(sp)
    1380:	dd403115 	stw	r21,196(sp)
    1384:	dd003015 	stw	r20,192(sp)
    1388:	dcc02f15 	stw	r19,188(sp)
    138c:	dc802e15 	stw	r18,184(sp)
    1390:	dc002d15 	stw	r16,180(sp)
    1394:	df003404 	addi	fp,sp,208
    1398:	e13fea15 	stw	r4,-88(fp)
    139c:	e17fe915 	stw	r5,-92(fp)
    13a0:	e1bfe815 	stw	r6,-96(fp)
    13a4:	e1ffe715 	stw	r7,-100(fp)
    int num_frames = 1 + (signal_size - frame_size) / frame_stride;
    13a8:	e0ffe917 	ldw	r3,-92(fp)
    13ac:	e0bfe717 	ldw	r2,-100(fp)
    13b0:	1885c83a 	sub	r2,r3,r2
    13b4:	e1400217 	ldw	r5,8(fp)
    13b8:	1009883a 	mov	r4,r2
    13bc:	00078040 	call	7804 <__divsi3>
    13c0:	10800044 	addi	r2,r2,1
    13c4:	e0bff515 	stw	r2,-44(fp)
    float **frames = (float **)malloc(num_frames * sizeof(float *));
    13c8:	e0bff517 	ldw	r2,-44(fp)
    13cc:	100490ba 	slli	r2,r2,2
    13d0:	1009883a 	mov	r4,r2
    13d4:	000a4d80 	call	a4d8 <malloc>
    13d8:	e0bff615 	stw	r2,-40(fp)
    for (int i = 0; i < num_frames; i++) {
    13dc:	e03ff715 	stw	zero,-36(fp)
    13e0:	00000b06 	br	1410 <calculate_mfcc+0xa4>
        frames[i] = (float *)malloc(frame_size * sizeof(float));
    13e4:	e0bfe717 	ldw	r2,-100(fp)
    13e8:	100890ba 	slli	r4,r2,2
    13ec:	e0bff717 	ldw	r2,-36(fp)
    13f0:	100690ba 	slli	r3,r2,2
    13f4:	e0bff617 	ldw	r2,-40(fp)
    13f8:	10e1883a 	add	r16,r2,r3
    13fc:	000a4d80 	call	a4d8 <malloc>
    1400:	80800015 	stw	r2,0(r16)
    for (int i = 0; i < num_frames; i++) {
    1404:	e0bff717 	ldw	r2,-36(fp)
    1408:	10800044 	addi	r2,r2,1
    140c:	e0bff715 	stw	r2,-36(fp)
    1410:	e0fff717 	ldw	r3,-36(fp)
    1414:	e0bff517 	ldw	r2,-44(fp)
    1418:	18bff216 	blt	r3,r2,13e4 <calculate_mfcc+0x78>
    }

    // Step 1: Pre-emphasis
    float pre_emphasized[signal_size];
    141c:	e0ffe917 	ldw	r3,-92(fp)
    1420:	d805883a 	mov	r2,sp
    1424:	1021883a 	mov	r16,r2
    1428:	18bfffc4 	addi	r2,r3,-1
    142c:	e0bff815 	stw	r2,-32(fp)
    1430:	1805883a 	mov	r2,r3
    1434:	102d883a 	mov	r22,r2
    1438:	002f883a 	mov	r23,zero
    143c:	b004d6fa 	srli	r2,r22,27
    1440:	b826917a 	slli	r19,r23,5
    1444:	14e6b03a 	or	r19,r2,r19
    1448:	b024917a 	slli	r18,r22,5
    144c:	1805883a 	mov	r2,r3
    1450:	e0bfe515 	stw	r2,-108(fp)
    1454:	e03fe615 	stw	zero,-104(fp)
    1458:	e0bfe517 	ldw	r2,-108(fp)
    145c:	1004d6fa 	srli	r2,r2,27
    1460:	e13fe617 	ldw	r4,-104(fp)
    1464:	202a917a 	slli	r21,r4,5
    1468:	156ab03a 	or	r21,r2,r21
    146c:	e0bfe517 	ldw	r2,-108(fp)
    1470:	1028917a 	slli	r20,r2,5
    1474:	1805883a 	mov	r2,r3
    1478:	100490ba 	slli	r2,r2,2
    147c:	108000c4 	addi	r2,r2,3
    1480:	1004d0ba 	srli	r2,r2,2
    1484:	100490ba 	slli	r2,r2,2
    1488:	d8b7c83a 	sub	sp,sp,r2
    148c:	d8800104 	addi	r2,sp,4
    1490:	108000c4 	addi	r2,r2,3
    1494:	1004d0ba 	srli	r2,r2,2
    1498:	100490ba 	slli	r2,r2,2
    149c:	e0bff115 	stw	r2,-60(fp)
    pre_emphasis(signal, pre_emphasized, signal_size, 0.97);
    14a0:	01cfde34 	movhi	r7,16248
    14a4:	39d47b04 	addi	r7,r7,20972
    14a8:	e1bfe917 	ldw	r6,-92(fp)
    14ac:	e17ff117 	ldw	r5,-60(fp)
    14b0:	e13fea17 	ldw	r4,-88(fp)
    14b4:	00008a40 	call	8a4 <pre_emphasis>

    // Step 2: Frame Blocking
    frame_blocking(pre_emphasized, frames, signal_size, frame_size, frame_stride);
    14b8:	e0800217 	ldw	r2,8(fp)
    14bc:	d8800015 	stw	r2,0(sp)
    14c0:	e1ffe717 	ldw	r7,-100(fp)
    14c4:	e1bfe917 	ldw	r6,-92(fp)
    14c8:	e17ff617 	ldw	r5,-40(fp)
    14cc:	e13ff117 	ldw	r4,-60(fp)
    14d0:	00009600 	call	960 <frame_blocking>

    // Step 3: Windowing and FFT
    float power_spectrum[frame_size / 2 + 1];
    14d4:	e0ffe717 	ldw	r3,-100(fp)
    14d8:	1804d7fa 	srli	r2,r3,31
    14dc:	10c5883a 	add	r2,r2,r3
    14e0:	1005d07a 	srai	r2,r2,1
    14e4:	10c00044 	addi	r3,r2,1
    14e8:	18bfffc4 	addi	r2,r3,-1
    14ec:	e0bff015 	stw	r2,-64(fp)
    14f0:	1805883a 	mov	r2,r3
    14f4:	e0bfe315 	stw	r2,-116(fp)
    14f8:	e03fe415 	stw	zero,-112(fp)
    14fc:	e0bfe317 	ldw	r2,-116(fp)
    1500:	1004d6fa 	srli	r2,r2,27
    1504:	e13fe417 	ldw	r4,-112(fp)
    1508:	2008917a 	slli	r4,r4,5
    150c:	e13fd815 	stw	r4,-160(fp)
    1510:	e13fd817 	ldw	r4,-160(fp)
    1514:	1104b03a 	or	r2,r2,r4
    1518:	e0bfd815 	stw	r2,-160(fp)
    151c:	e0bfe317 	ldw	r2,-116(fp)
    1520:	1004917a 	slli	r2,r2,5
    1524:	e0bfd715 	stw	r2,-164(fp)
    1528:	1805883a 	mov	r2,r3
    152c:	e0bfe115 	stw	r2,-124(fp)
    1530:	e03fe215 	stw	zero,-120(fp)
    1534:	e0bfe117 	ldw	r2,-124(fp)
    1538:	1004d6fa 	srli	r2,r2,27
    153c:	e13fe217 	ldw	r4,-120(fp)
    1540:	2008917a 	slli	r4,r4,5
    1544:	e13fd615 	stw	r4,-168(fp)
    1548:	e13fd617 	ldw	r4,-168(fp)
    154c:	1104b03a 	or	r2,r2,r4
    1550:	e0bfd615 	stw	r2,-168(fp)
    1554:	e0bfe117 	ldw	r2,-124(fp)
    1558:	1004917a 	slli	r2,r2,5
    155c:	e0bfd515 	stw	r2,-172(fp)
    1560:	1805883a 	mov	r2,r3
    1564:	100490ba 	slli	r2,r2,2
    1568:	108000c4 	addi	r2,r2,3
    156c:	1004d0ba 	srli	r2,r2,2
    1570:	100490ba 	slli	r2,r2,2
    1574:	d8b7c83a 	sub	sp,sp,r2
    1578:	d8800104 	addi	r2,sp,4
    157c:	108000c4 	addi	r2,r2,3
    1580:	1004d0ba 	srli	r2,r2,2
    1584:	100490ba 	slli	r2,r2,2
    1588:	e0bfef15 	stw	r2,-68(fp)
    float mel_energies[num_filters];
    158c:	e0800317 	ldw	r2,12(fp)
    1590:	10ffffc4 	addi	r3,r2,-1
    1594:	e0ffee15 	stw	r3,-72(fp)
    1598:	1007883a 	mov	r3,r2
    159c:	e0ffdf15 	stw	r3,-132(fp)
    15a0:	e03fe015 	stw	zero,-128(fp)
    15a4:	e0ffdf17 	ldw	r3,-132(fp)
    15a8:	1806d6fa 	srli	r3,r3,27
    15ac:	e13fe017 	ldw	r4,-128(fp)
    15b0:	2008917a 	slli	r4,r4,5
    15b4:	e13fd415 	stw	r4,-176(fp)
    15b8:	e13fd417 	ldw	r4,-176(fp)
    15bc:	1906b03a 	or	r3,r3,r4
    15c0:	e0ffd415 	stw	r3,-176(fp)
    15c4:	e0ffdf17 	ldw	r3,-132(fp)
    15c8:	1806917a 	slli	r3,r3,5
    15cc:	e0ffd315 	stw	r3,-180(fp)
    15d0:	1007883a 	mov	r3,r2
    15d4:	e0ffdd15 	stw	r3,-140(fp)
    15d8:	e03fde15 	stw	zero,-136(fp)
    15dc:	e0ffdd17 	ldw	r3,-140(fp)
    15e0:	1806d6fa 	srli	r3,r3,27
    15e4:	e13fde17 	ldw	r4,-136(fp)
    15e8:	2008917a 	slli	r4,r4,5
    15ec:	e13fd215 	stw	r4,-184(fp)
    15f0:	e13fd217 	ldw	r4,-184(fp)
    15f4:	1906b03a 	or	r3,r3,r4
    15f8:	e0ffd215 	stw	r3,-184(fp)
    15fc:	e0ffdd17 	ldw	r3,-140(fp)
    1600:	1806917a 	slli	r3,r3,5
    1604:	e0ffd115 	stw	r3,-188(fp)
    1608:	100490ba 	slli	r2,r2,2
    160c:	108000c4 	addi	r2,r2,3
    1610:	1004d0ba 	srli	r2,r2,2
    1614:	100490ba 	slli	r2,r2,2
    1618:	d8b7c83a 	sub	sp,sp,r2
    161c:	d8800104 	addi	r2,sp,4
    1620:	108000c4 	addi	r2,r2,3
    1624:	1004d0ba 	srli	r2,r2,2
    1628:	100490ba 	slli	r2,r2,2
    162c:	e0bfed15 	stw	r2,-76(fp)
    float mfcc[num_coefficients];
    1630:	e0800417 	ldw	r2,16(fp)
    1634:	10ffffc4 	addi	r3,r2,-1
    1638:	e0ffec15 	stw	r3,-80(fp)
    163c:	1007883a 	mov	r3,r2
    1640:	e0ffdb15 	stw	r3,-148(fp)
    1644:	e03fdc15 	stw	zero,-144(fp)
    1648:	e0ffdb17 	ldw	r3,-148(fp)
    164c:	1806d6fa 	srli	r3,r3,27
    1650:	e13fdc17 	ldw	r4,-144(fp)
    1654:	2008917a 	slli	r4,r4,5
    1658:	e13fd015 	stw	r4,-192(fp)
    165c:	e13fd017 	ldw	r4,-192(fp)
    1660:	1906b03a 	or	r3,r3,r4
    1664:	e0ffd015 	stw	r3,-192(fp)
    1668:	e0ffdb17 	ldw	r3,-148(fp)
    166c:	1806917a 	slli	r3,r3,5
    1670:	e0ffcf15 	stw	r3,-196(fp)
    1674:	1007883a 	mov	r3,r2
    1678:	e0ffd915 	stw	r3,-156(fp)
    167c:	e03fda15 	stw	zero,-152(fp)
    1680:	e0ffd917 	ldw	r3,-156(fp)
    1684:	1806d6fa 	srli	r3,r3,27
    1688:	e13fda17 	ldw	r4,-152(fp)
    168c:	2008917a 	slli	r4,r4,5
    1690:	e13fce15 	stw	r4,-200(fp)
    1694:	e13fce17 	ldw	r4,-200(fp)
    1698:	1906b03a 	or	r3,r3,r4
    169c:	e0ffce15 	stw	r3,-200(fp)
    16a0:	e0ffd917 	ldw	r3,-156(fp)
    16a4:	1806917a 	slli	r3,r3,5
    16a8:	e0ffcd15 	stw	r3,-204(fp)
    16ac:	100490ba 	slli	r2,r2,2
    16b0:	108000c4 	addi	r2,r2,3
    16b4:	1004d0ba 	srli	r2,r2,2
    16b8:	100490ba 	slli	r2,r2,2
    16bc:	d8b7c83a 	sub	sp,sp,r2
    16c0:	d8800104 	addi	r2,sp,4
    16c4:	108000c4 	addi	r2,r2,3
    16c8:	1004d0ba 	srli	r2,r2,2
    16cc:	100490ba 	slli	r2,r2,2
    16d0:	e0bfeb15 	stw	r2,-84(fp)
    for (int i = 0; i < num_frames; i++) {
    16d4:	e03ff215 	stw	zero,-56(fp)
    16d8:	00002e06 	br	1794 <calculate_mfcc+0x428>
        hamming_window(frames[i], frame_size);
    16dc:	e0bff217 	ldw	r2,-56(fp)
    16e0:	100490ba 	slli	r2,r2,2
    16e4:	e0fff617 	ldw	r3,-40(fp)
    16e8:	1885883a 	add	r2,r3,r2
    16ec:	10800017 	ldw	r2,0(r2)
    16f0:	e17fe717 	ldw	r5,-100(fp)
    16f4:	1009883a 	mov	r4,r2
    16f8:	0000a480 	call	a48 <hamming_window>
        //fft_and_power_spectrum(frames[i], power_spectrum, frame_size);
        mel_filter_bank(power_spectrum, mel_energies, num_filters, frame_size, sample_rate);
    16fc:	e0bfe817 	ldw	r2,-96(fp)
    1700:	d8800015 	stw	r2,0(sp)
    1704:	e1ffe717 	ldw	r7,-100(fp)
    1708:	e1800317 	ldw	r6,12(fp)
    170c:	e17fed17 	ldw	r5,-76(fp)
    1710:	e13fef17 	ldw	r4,-68(fp)
    1714:	0000c240 	call	c24 <mel_filter_bank>
        dct(mel_energies, mfcc, num_filters, num_coefficients);
    1718:	e1c00417 	ldw	r7,16(fp)
    171c:	e1800317 	ldw	r6,12(fp)
    1720:	e17feb17 	ldw	r5,-84(fp)
    1724:	e13fed17 	ldw	r4,-76(fp)
    1728:	00011900 	call	1190 <dct>

        for (int j = 0; j < num_coefficients; j++) {
    172c:	e03ff315 	stw	zero,-52(fp)
    1730:	00001206 	br	177c <calculate_mfcc+0x410>
            mfcc_result[i * num_coefficients + j] = mfcc[j];
    1734:	e1400417 	ldw	r5,16(fp)
    1738:	e13ff217 	ldw	r4,-56(fp)
    173c:	00079b80 	call	79b8 <__mulsi3>
    1740:	1007883a 	mov	r3,r2
    1744:	e0bff317 	ldw	r2,-52(fp)
    1748:	1885883a 	add	r2,r3,r2
    174c:	100490ba 	slli	r2,r2,2
    1750:	e0c00517 	ldw	r3,20(fp)
    1754:	1885883a 	add	r2,r3,r2
    1758:	e13feb17 	ldw	r4,-84(fp)
    175c:	e0fff317 	ldw	r3,-52(fp)
    1760:	180690ba 	slli	r3,r3,2
    1764:	20c9883a 	add	r4,r4,r3
    1768:	20c00017 	ldw	r3,0(r4)
    176c:	10c00015 	stw	r3,0(r2)
        for (int j = 0; j < num_coefficients; j++) {
    1770:	e0bff317 	ldw	r2,-52(fp)
    1774:	10800044 	addi	r2,r2,1
    1778:	e0bff315 	stw	r2,-52(fp)
    177c:	e0fff317 	ldw	r3,-52(fp)
    1780:	e0800417 	ldw	r2,16(fp)
    1784:	18bfeb16 	blt	r3,r2,1734 <calculate_mfcc+0x3c8>
    for (int i = 0; i < num_frames; i++) {
    1788:	e0bff217 	ldw	r2,-56(fp)
    178c:	10800044 	addi	r2,r2,1
    1790:	e0bff215 	stw	r2,-56(fp)
    1794:	e0fff217 	ldw	r3,-56(fp)
    1798:	e0bff517 	ldw	r2,-44(fp)
    179c:	18bfcf16 	blt	r3,r2,16dc <calculate_mfcc+0x370>
        }
    }

    // Free memory
    for (int i = 0; i < num_frames; i++) {
    17a0:	e03ff415 	stw	zero,-48(fp)
    17a4:	00000a06 	br	17d0 <calculate_mfcc+0x464>
        free(frames[i]);
    17a8:	e0bff417 	ldw	r2,-48(fp)
    17ac:	100490ba 	slli	r2,r2,2
    17b0:	e0fff617 	ldw	r3,-40(fp)
    17b4:	1885883a 	add	r2,r3,r2
    17b8:	10800017 	ldw	r2,0(r2)
    17bc:	1009883a 	mov	r4,r2
    17c0:	000a4e80 	call	a4e8 <free>
    for (int i = 0; i < num_frames; i++) {
    17c4:	e0bff417 	ldw	r2,-48(fp)
    17c8:	10800044 	addi	r2,r2,1
    17cc:	e0bff415 	stw	r2,-48(fp)
    17d0:	e0fff417 	ldw	r3,-48(fp)
    17d4:	e0bff517 	ldw	r2,-44(fp)
    17d8:	18bff316 	blt	r3,r2,17a8 <calculate_mfcc+0x43c>
    }
    free(frames);
    17dc:	e13ff617 	ldw	r4,-40(fp)
    17e0:	000a4e80 	call	a4e8 <free>
    17e4:	8037883a 	mov	sp,r16
}
    17e8:	0001883a 	nop
    17ec:	e6fff904 	addi	sp,fp,-28
    17f0:	dfc00817 	ldw	ra,32(sp)
    17f4:	df000717 	ldw	fp,28(sp)
    17f8:	ddc00617 	ldw	r23,24(sp)
    17fc:	dd800517 	ldw	r22,20(sp)
    1800:	dd400417 	ldw	r21,16(sp)
    1804:	dd000317 	ldw	r20,12(sp)
    1808:	dcc00217 	ldw	r19,8(sp)
    180c:	dc800117 	ldw	r18,4(sp)
    1810:	dc000017 	ldw	r16,0(sp)
    1814:	dec00904 	addi	sp,sp,36
    1818:	f800283a 	ret

0000181c <kf_bfly2>:
        kiss_fft_cpx * Fout,
        const size_t fstride,
        const kiss_fft_cfg st,
        int m
        )
{
    181c:	defff704 	addi	sp,sp,-36
    1820:	df000815 	stw	fp,32(sp)
    1824:	df000804 	addi	fp,sp,32
    1828:	e13ffb15 	stw	r4,-20(fp)
    182c:	e17ffa15 	stw	r5,-24(fp)
    1830:	e1bff915 	stw	r6,-28(fp)
    1834:	e1fff815 	stw	r7,-32(fp)
    kiss_fft_cpx * Fout2;
    kiss_fft_cpx * tw1 = st->twiddles;
    1838:	e0bff917 	ldw	r2,-28(fp)
    183c:	10804204 	addi	r2,r2,264
    1840:	e0bffe15 	stw	r2,-8(fp)
    kiss_fft_cpx t;
    Fout2 = Fout + m;
    1844:	e0bff817 	ldw	r2,-32(fp)
    1848:	100490fa 	slli	r2,r2,3
    184c:	e0fffb17 	ldw	r3,-20(fp)
    1850:	1885883a 	add	r2,r3,r2
    1854:	e0bfff15 	stw	r2,-4(fp)
    do{
        C_FIXDIV(*Fout,2); C_FIXDIV(*Fout2,2);

        C_MUL (t,  *Fout2 , *tw1);
    1858:	e0bfff17 	ldw	r2,-4(fp)
    185c:	10c00017 	ldw	r3,0(r2)
    1860:	e13ffe17 	ldw	r4,-8(fp)
    1864:	20800017 	ldw	r2,0(r4)
    1868:	1887ff32 	custom	252,r3,r3,r2
    186c:	e0bfff17 	ldw	r2,-4(fp)
    1870:	11000117 	ldw	r4,4(r2)
    1874:	e17ffe17 	ldw	r5,-8(fp)
    1878:	28800117 	ldw	r2,4(r5)
    187c:	2085ff32 	custom	252,r2,r4,r2
    1880:	1885ffb2 	custom	254,r2,r3,r2
    1884:	e0bffc15 	stw	r2,-16(fp)
    1888:	e0bfff17 	ldw	r2,-4(fp)
    188c:	10c00017 	ldw	r3,0(r2)
    1890:	e13ffe17 	ldw	r4,-8(fp)
    1894:	20800117 	ldw	r2,4(r4)
    1898:	1887ff32 	custom	252,r3,r3,r2
    189c:	e0bfff17 	ldw	r2,-4(fp)
    18a0:	11000117 	ldw	r4,4(r2)
    18a4:	e17ffe17 	ldw	r5,-8(fp)
    18a8:	28800017 	ldw	r2,0(r5)
    18ac:	2085ff32 	custom	252,r2,r4,r2
    18b0:	1885ff72 	custom	253,r2,r3,r2
    18b4:	e0bffd15 	stw	r2,-12(fp)
        tw1 += fstride;
    18b8:	e0bffa17 	ldw	r2,-24(fp)
    18bc:	100490fa 	slli	r2,r2,3
    18c0:	e0fffe17 	ldw	r3,-8(fp)
    18c4:	1885883a 	add	r2,r3,r2
    18c8:	e0bffe15 	stw	r2,-8(fp)
        C_SUB( *Fout2 ,  *Fout , t );
    18cc:	e0bffb17 	ldw	r2,-20(fp)
    18d0:	10c00017 	ldw	r3,0(r2)
    18d4:	e0bffc17 	ldw	r2,-16(fp)
    18d8:	1887ffb2 	custom	254,r3,r3,r2
    18dc:	e0bfff17 	ldw	r2,-4(fp)
    18e0:	10c00015 	stw	r3,0(r2)
    18e4:	e0bffb17 	ldw	r2,-20(fp)
    18e8:	10c00117 	ldw	r3,4(r2)
    18ec:	e0bffd17 	ldw	r2,-12(fp)
    18f0:	1887ffb2 	custom	254,r3,r3,r2
    18f4:	e0bfff17 	ldw	r2,-4(fp)
    18f8:	10c00115 	stw	r3,4(r2)
        C_ADDTO( *Fout ,  t );
    18fc:	e0bffb17 	ldw	r2,-20(fp)
    1900:	10c00017 	ldw	r3,0(r2)
    1904:	e0bffc17 	ldw	r2,-16(fp)
    1908:	1887ff72 	custom	253,r3,r3,r2
    190c:	e0bffb17 	ldw	r2,-20(fp)
    1910:	10c00015 	stw	r3,0(r2)
    1914:	e0bffb17 	ldw	r2,-20(fp)
    1918:	10c00117 	ldw	r3,4(r2)
    191c:	e0bffd17 	ldw	r2,-12(fp)
    1920:	1887ff72 	custom	253,r3,r3,r2
    1924:	e0bffb17 	ldw	r2,-20(fp)
    1928:	10c00115 	stw	r3,4(r2)
        ++Fout2;
    192c:	e0bfff17 	ldw	r2,-4(fp)
    1930:	10800204 	addi	r2,r2,8
    1934:	e0bfff15 	stw	r2,-4(fp)
        ++Fout;
    1938:	e0bffb17 	ldw	r2,-20(fp)
    193c:	10800204 	addi	r2,r2,8
    1940:	e0bffb15 	stw	r2,-20(fp)
    }while (--m);
    1944:	e0bff817 	ldw	r2,-32(fp)
    1948:	10bfffc4 	addi	r2,r2,-1
    194c:	e0bff815 	stw	r2,-32(fp)
    1950:	e0bff817 	ldw	r2,-32(fp)
    1954:	103fc01e 	bne	r2,zero,1858 <kf_bfly2+0x3c>
}
    1958:	0001883a 	nop
    195c:	0001883a 	nop
    1960:	e037883a 	mov	sp,fp
    1964:	df000017 	ldw	fp,0(sp)
    1968:	dec00104 	addi	sp,sp,4
    196c:	f800283a 	ret

00001970 <kf_bfly4>:
        kiss_fft_cpx * Fout,
        const size_t fstride,
        const kiss_fft_cfg st,
        const size_t m
        )
{
    1970:	deffe904 	addi	sp,sp,-92
    1974:	df001615 	stw	fp,88(sp)
    1978:	df001604 	addi	fp,sp,88
    197c:	e13fed15 	stw	r4,-76(fp)
    1980:	e17fec15 	stw	r5,-80(fp)
    1984:	e1bfeb15 	stw	r6,-84(fp)
    1988:	e1ffea15 	stw	r7,-88(fp)
    kiss_fft_cpx *tw1,*tw2,*tw3;
    kiss_fft_cpx scratch[6];
    size_t k=m;
    198c:	e0bfea17 	ldw	r2,-88(fp)
    1990:	e0bffc15 	stw	r2,-16(fp)
    const size_t m2=2*m;
    1994:	e0bfea17 	ldw	r2,-88(fp)
    1998:	1085883a 	add	r2,r2,r2
    199c:	e0bffb15 	stw	r2,-20(fp)
    const size_t m3=3*m;
    19a0:	e0ffea17 	ldw	r3,-88(fp)
    19a4:	1805883a 	mov	r2,r3
    19a8:	1085883a 	add	r2,r2,r2
    19ac:	10c5883a 	add	r2,r2,r3
    19b0:	e0bffa15 	stw	r2,-24(fp)


    tw3 = tw2 = tw1 = st->twiddles;
    19b4:	e0bfeb17 	ldw	r2,-84(fp)
    19b8:	10804204 	addi	r2,r2,264
    19bc:	e0bfff15 	stw	r2,-4(fp)
    19c0:	e0bfff17 	ldw	r2,-4(fp)
    19c4:	e0bffe15 	stw	r2,-8(fp)
    19c8:	e0bffe17 	ldw	r2,-8(fp)
    19cc:	e0bffd15 	stw	r2,-12(fp)

    do {
        C_FIXDIV(*Fout,4); C_FIXDIV(Fout[m],4); C_FIXDIV(Fout[m2],4); C_FIXDIV(Fout[m3],4);

        C_MUL(scratch[0],Fout[m] , *tw1 );
    19d0:	e0bfea17 	ldw	r2,-88(fp)
    19d4:	100490fa 	slli	r2,r2,3
    19d8:	e0ffed17 	ldw	r3,-76(fp)
    19dc:	1885883a 	add	r2,r3,r2
    19e0:	10c00017 	ldw	r3,0(r2)
    19e4:	e13fff17 	ldw	r4,-4(fp)
    19e8:	20800017 	ldw	r2,0(r4)
    19ec:	1887ff32 	custom	252,r3,r3,r2
    19f0:	e0bfea17 	ldw	r2,-88(fp)
    19f4:	100490fa 	slli	r2,r2,3
    19f8:	e13fed17 	ldw	r4,-76(fp)
    19fc:	2085883a 	add	r2,r4,r2
    1a00:	11000117 	ldw	r4,4(r2)
    1a04:	e17fff17 	ldw	r5,-4(fp)
    1a08:	28800117 	ldw	r2,4(r5)
    1a0c:	2085ff32 	custom	252,r2,r4,r2
    1a10:	1885ffb2 	custom	254,r2,r3,r2
    1a14:	e0bfee15 	stw	r2,-72(fp)
    1a18:	e0bfea17 	ldw	r2,-88(fp)
    1a1c:	100490fa 	slli	r2,r2,3
    1a20:	e0ffed17 	ldw	r3,-76(fp)
    1a24:	1885883a 	add	r2,r3,r2
    1a28:	10c00017 	ldw	r3,0(r2)
    1a2c:	e13fff17 	ldw	r4,-4(fp)
    1a30:	20800117 	ldw	r2,4(r4)
    1a34:	1887ff32 	custom	252,r3,r3,r2
    1a38:	e0bfea17 	ldw	r2,-88(fp)
    1a3c:	100490fa 	slli	r2,r2,3
    1a40:	e13fed17 	ldw	r4,-76(fp)
    1a44:	2085883a 	add	r2,r4,r2
    1a48:	11000117 	ldw	r4,4(r2)
    1a4c:	e17fff17 	ldw	r5,-4(fp)
    1a50:	28800017 	ldw	r2,0(r5)
    1a54:	2085ff32 	custom	252,r2,r4,r2
    1a58:	1885ff72 	custom	253,r2,r3,r2
    1a5c:	e0bfef15 	stw	r2,-68(fp)
        C_MUL(scratch[1],Fout[m2] , *tw2 );
    1a60:	e0bffb17 	ldw	r2,-20(fp)
    1a64:	100490fa 	slli	r2,r2,3
    1a68:	e0ffed17 	ldw	r3,-76(fp)
    1a6c:	1885883a 	add	r2,r3,r2
    1a70:	10c00017 	ldw	r3,0(r2)
    1a74:	e13ffe17 	ldw	r4,-8(fp)
    1a78:	20800017 	ldw	r2,0(r4)
    1a7c:	1887ff32 	custom	252,r3,r3,r2
    1a80:	e0bffb17 	ldw	r2,-20(fp)
    1a84:	100490fa 	slli	r2,r2,3
    1a88:	e13fed17 	ldw	r4,-76(fp)
    1a8c:	2085883a 	add	r2,r4,r2
    1a90:	11000117 	ldw	r4,4(r2)
    1a94:	e17ffe17 	ldw	r5,-8(fp)
    1a98:	28800117 	ldw	r2,4(r5)
    1a9c:	2085ff32 	custom	252,r2,r4,r2
    1aa0:	1885ffb2 	custom	254,r2,r3,r2
    1aa4:	e0bff015 	stw	r2,-64(fp)
    1aa8:	e0bffb17 	ldw	r2,-20(fp)
    1aac:	100490fa 	slli	r2,r2,3
    1ab0:	e0ffed17 	ldw	r3,-76(fp)
    1ab4:	1885883a 	add	r2,r3,r2
    1ab8:	10c00017 	ldw	r3,0(r2)
    1abc:	e13ffe17 	ldw	r4,-8(fp)
    1ac0:	20800117 	ldw	r2,4(r4)
    1ac4:	1887ff32 	custom	252,r3,r3,r2
    1ac8:	e0bffb17 	ldw	r2,-20(fp)
    1acc:	100490fa 	slli	r2,r2,3
    1ad0:	e13fed17 	ldw	r4,-76(fp)
    1ad4:	2085883a 	add	r2,r4,r2
    1ad8:	11000117 	ldw	r4,4(r2)
    1adc:	e17ffe17 	ldw	r5,-8(fp)
    1ae0:	28800017 	ldw	r2,0(r5)
    1ae4:	2085ff32 	custom	252,r2,r4,r2
    1ae8:	1885ff72 	custom	253,r2,r3,r2
    1aec:	e0bff115 	stw	r2,-60(fp)
        C_MUL(scratch[2],Fout[m3] , *tw3 );
    1af0:	e0bffa17 	ldw	r2,-24(fp)
    1af4:	100490fa 	slli	r2,r2,3
    1af8:	e0ffed17 	ldw	r3,-76(fp)
    1afc:	1885883a 	add	r2,r3,r2
    1b00:	10c00017 	ldw	r3,0(r2)
    1b04:	e13ffd17 	ldw	r4,-12(fp)
    1b08:	20800017 	ldw	r2,0(r4)
    1b0c:	1887ff32 	custom	252,r3,r3,r2
    1b10:	e0bffa17 	ldw	r2,-24(fp)
    1b14:	100490fa 	slli	r2,r2,3
    1b18:	e13fed17 	ldw	r4,-76(fp)
    1b1c:	2085883a 	add	r2,r4,r2
    1b20:	11000117 	ldw	r4,4(r2)
    1b24:	e17ffd17 	ldw	r5,-12(fp)
    1b28:	28800117 	ldw	r2,4(r5)
    1b2c:	2085ff32 	custom	252,r2,r4,r2
    1b30:	1885ffb2 	custom	254,r2,r3,r2
    1b34:	e0bff215 	stw	r2,-56(fp)
    1b38:	e0bffa17 	ldw	r2,-24(fp)
    1b3c:	100490fa 	slli	r2,r2,3
    1b40:	e0ffed17 	ldw	r3,-76(fp)
    1b44:	1885883a 	add	r2,r3,r2
    1b48:	10c00017 	ldw	r3,0(r2)
    1b4c:	e13ffd17 	ldw	r4,-12(fp)
    1b50:	20800117 	ldw	r2,4(r4)
    1b54:	1887ff32 	custom	252,r3,r3,r2
    1b58:	e0bffa17 	ldw	r2,-24(fp)
    1b5c:	100490fa 	slli	r2,r2,3
    1b60:	e13fed17 	ldw	r4,-76(fp)
    1b64:	2085883a 	add	r2,r4,r2
    1b68:	11000117 	ldw	r4,4(r2)
    1b6c:	e17ffd17 	ldw	r5,-12(fp)
    1b70:	28800017 	ldw	r2,0(r5)
    1b74:	2085ff32 	custom	252,r2,r4,r2
    1b78:	1885ff72 	custom	253,r2,r3,r2
    1b7c:	e0bff315 	stw	r2,-52(fp)

        C_SUB( scratch[5] , *Fout, scratch[1] );
    1b80:	e0bfed17 	ldw	r2,-76(fp)
    1b84:	10c00017 	ldw	r3,0(r2)
    1b88:	e0bff017 	ldw	r2,-64(fp)
    1b8c:	1885ffb2 	custom	254,r2,r3,r2
    1b90:	e0bff815 	stw	r2,-32(fp)
    1b94:	e0bfed17 	ldw	r2,-76(fp)
    1b98:	10c00117 	ldw	r3,4(r2)
    1b9c:	e0bff117 	ldw	r2,-60(fp)
    1ba0:	1885ffb2 	custom	254,r2,r3,r2
    1ba4:	e0bff915 	stw	r2,-28(fp)
        C_ADDTO(*Fout, scratch[1]);
    1ba8:	e0bfed17 	ldw	r2,-76(fp)
    1bac:	10c00017 	ldw	r3,0(r2)
    1bb0:	e0bff017 	ldw	r2,-64(fp)
    1bb4:	1887ff72 	custom	253,r3,r3,r2
    1bb8:	e0bfed17 	ldw	r2,-76(fp)
    1bbc:	10c00015 	stw	r3,0(r2)
    1bc0:	e0bfed17 	ldw	r2,-76(fp)
    1bc4:	10c00117 	ldw	r3,4(r2)
    1bc8:	e0bff117 	ldw	r2,-60(fp)
    1bcc:	1887ff72 	custom	253,r3,r3,r2
    1bd0:	e0bfed17 	ldw	r2,-76(fp)
    1bd4:	10c00115 	stw	r3,4(r2)
        C_ADD( scratch[3] , scratch[0] , scratch[2] );
    1bd8:	e0ffee17 	ldw	r3,-72(fp)
    1bdc:	e0bff217 	ldw	r2,-56(fp)
    1be0:	1885ff72 	custom	253,r2,r3,r2
    1be4:	e0bff415 	stw	r2,-48(fp)
    1be8:	e0ffef17 	ldw	r3,-68(fp)
    1bec:	e0bff317 	ldw	r2,-52(fp)
    1bf0:	1885ff72 	custom	253,r2,r3,r2
    1bf4:	e0bff515 	stw	r2,-44(fp)
        C_SUB( scratch[4] , scratch[0] , scratch[2] );
    1bf8:	e0ffee17 	ldw	r3,-72(fp)
    1bfc:	e0bff217 	ldw	r2,-56(fp)
    1c00:	1885ffb2 	custom	254,r2,r3,r2
    1c04:	e0bff615 	stw	r2,-40(fp)
    1c08:	e0ffef17 	ldw	r3,-68(fp)
    1c0c:	e0bff317 	ldw	r2,-52(fp)
    1c10:	1885ffb2 	custom	254,r2,r3,r2
    1c14:	e0bff715 	stw	r2,-36(fp)
        C_SUB( Fout[m2], *Fout, scratch[3] );
    1c18:	e0bfed17 	ldw	r2,-76(fp)
    1c1c:	11000017 	ldw	r4,0(r2)
    1c20:	e0fff417 	ldw	r3,-48(fp)
    1c24:	e0bffb17 	ldw	r2,-20(fp)
    1c28:	100490fa 	slli	r2,r2,3
    1c2c:	e17fed17 	ldw	r5,-76(fp)
    1c30:	2885883a 	add	r2,r5,r2
    1c34:	20c7ffb2 	custom	254,r3,r4,r3
    1c38:	10c00015 	stw	r3,0(r2)
    1c3c:	e0bfed17 	ldw	r2,-76(fp)
    1c40:	11000117 	ldw	r4,4(r2)
    1c44:	e0fff517 	ldw	r3,-44(fp)
    1c48:	e0bffb17 	ldw	r2,-20(fp)
    1c4c:	100490fa 	slli	r2,r2,3
    1c50:	e17fed17 	ldw	r5,-76(fp)
    1c54:	2885883a 	add	r2,r5,r2
    1c58:	20c7ffb2 	custom	254,r3,r4,r3
    1c5c:	10c00115 	stw	r3,4(r2)
        tw1 += fstride;
    1c60:	e0bfec17 	ldw	r2,-80(fp)
    1c64:	100490fa 	slli	r2,r2,3
    1c68:	e0ffff17 	ldw	r3,-4(fp)
    1c6c:	1885883a 	add	r2,r3,r2
    1c70:	e0bfff15 	stw	r2,-4(fp)
        tw2 += fstride*2;
    1c74:	e0bfec17 	ldw	r2,-80(fp)
    1c78:	1004913a 	slli	r2,r2,4
    1c7c:	e0fffe17 	ldw	r3,-8(fp)
    1c80:	1885883a 	add	r2,r3,r2
    1c84:	e0bffe15 	stw	r2,-8(fp)
        tw3 += fstride*3;
    1c88:	e0ffec17 	ldw	r3,-80(fp)
    1c8c:	1805883a 	mov	r2,r3
    1c90:	1085883a 	add	r2,r2,r2
    1c94:	10c5883a 	add	r2,r2,r3
    1c98:	100490fa 	slli	r2,r2,3
    1c9c:	1007883a 	mov	r3,r2
    1ca0:	e0bffd17 	ldw	r2,-12(fp)
    1ca4:	10c5883a 	add	r2,r2,r3
    1ca8:	e0bffd15 	stw	r2,-12(fp)
        C_ADDTO( *Fout , scratch[3] );
    1cac:	e0bfed17 	ldw	r2,-76(fp)
    1cb0:	10c00017 	ldw	r3,0(r2)
    1cb4:	e0bff417 	ldw	r2,-48(fp)
    1cb8:	1887ff72 	custom	253,r3,r3,r2
    1cbc:	e0bfed17 	ldw	r2,-76(fp)
    1cc0:	10c00015 	stw	r3,0(r2)
    1cc4:	e0bfed17 	ldw	r2,-76(fp)
    1cc8:	10c00117 	ldw	r3,4(r2)
    1ccc:	e0bff517 	ldw	r2,-44(fp)
    1cd0:	1887ff72 	custom	253,r3,r3,r2
    1cd4:	e0bfed17 	ldw	r2,-76(fp)
    1cd8:	10c00115 	stw	r3,4(r2)

        if(st->inverse) {
    1cdc:	e0bfeb17 	ldw	r2,-84(fp)
    1ce0:	10800117 	ldw	r2,4(r2)
    1ce4:	10002126 	beq	r2,zero,1d6c <kf_bfly4+0x3fc>
            Fout[m].r = scratch[5].r - scratch[4].i;
    1ce8:	e13ff817 	ldw	r4,-32(fp)
    1cec:	e0fff717 	ldw	r3,-36(fp)
    1cf0:	e0bfea17 	ldw	r2,-88(fp)
    1cf4:	100490fa 	slli	r2,r2,3
    1cf8:	e17fed17 	ldw	r5,-76(fp)
    1cfc:	2885883a 	add	r2,r5,r2
    1d00:	20c7ffb2 	custom	254,r3,r4,r3
    1d04:	10c00015 	stw	r3,0(r2)
            Fout[m].i = scratch[5].i + scratch[4].r;
    1d08:	e13ff917 	ldw	r4,-28(fp)
    1d0c:	e0fff617 	ldw	r3,-40(fp)
    1d10:	e0bfea17 	ldw	r2,-88(fp)
    1d14:	100490fa 	slli	r2,r2,3
    1d18:	e17fed17 	ldw	r5,-76(fp)
    1d1c:	2885883a 	add	r2,r5,r2
    1d20:	20c7ff72 	custom	253,r3,r4,r3
    1d24:	10c00115 	stw	r3,4(r2)
            Fout[m3].r = scratch[5].r + scratch[4].i;
    1d28:	e13ff817 	ldw	r4,-32(fp)
    1d2c:	e0fff717 	ldw	r3,-36(fp)
    1d30:	e0bffa17 	ldw	r2,-24(fp)
    1d34:	100490fa 	slli	r2,r2,3
    1d38:	e17fed17 	ldw	r5,-76(fp)
    1d3c:	2885883a 	add	r2,r5,r2
    1d40:	20c7ff72 	custom	253,r3,r4,r3
    1d44:	10c00015 	stw	r3,0(r2)
            Fout[m3].i = scratch[5].i - scratch[4].r;
    1d48:	e13ff917 	ldw	r4,-28(fp)
    1d4c:	e0fff617 	ldw	r3,-40(fp)
    1d50:	e0bffa17 	ldw	r2,-24(fp)
    1d54:	100490fa 	slli	r2,r2,3
    1d58:	e17fed17 	ldw	r5,-76(fp)
    1d5c:	2885883a 	add	r2,r5,r2
    1d60:	20c7ffb2 	custom	254,r3,r4,r3
    1d64:	10c00115 	stw	r3,4(r2)
    1d68:	00002006 	br	1dec <kf_bfly4+0x47c>
        }else{
            Fout[m].r = scratch[5].r + scratch[4].i;
    1d6c:	e13ff817 	ldw	r4,-32(fp)
    1d70:	e0fff717 	ldw	r3,-36(fp)
    1d74:	e0bfea17 	ldw	r2,-88(fp)
    1d78:	100490fa 	slli	r2,r2,3
    1d7c:	e17fed17 	ldw	r5,-76(fp)
    1d80:	2885883a 	add	r2,r5,r2
    1d84:	20c7ff72 	custom	253,r3,r4,r3
    1d88:	10c00015 	stw	r3,0(r2)
            Fout[m].i = scratch[5].i - scratch[4].r;
    1d8c:	e13ff917 	ldw	r4,-28(fp)
    1d90:	e0fff617 	ldw	r3,-40(fp)
    1d94:	e0bfea17 	ldw	r2,-88(fp)
    1d98:	100490fa 	slli	r2,r2,3
    1d9c:	e17fed17 	ldw	r5,-76(fp)
    1da0:	2885883a 	add	r2,r5,r2
    1da4:	20c7ffb2 	custom	254,r3,r4,r3
    1da8:	10c00115 	stw	r3,4(r2)
            Fout[m3].r = scratch[5].r - scratch[4].i;
    1dac:	e13ff817 	ldw	r4,-32(fp)
    1db0:	e0fff717 	ldw	r3,-36(fp)
    1db4:	e0bffa17 	ldw	r2,-24(fp)
    1db8:	100490fa 	slli	r2,r2,3
    1dbc:	e17fed17 	ldw	r5,-76(fp)
    1dc0:	2885883a 	add	r2,r5,r2
    1dc4:	20c7ffb2 	custom	254,r3,r4,r3
    1dc8:	10c00015 	stw	r3,0(r2)
            Fout[m3].i = scratch[5].i + scratch[4].r;
    1dcc:	e13ff917 	ldw	r4,-28(fp)
    1dd0:	e0fff617 	ldw	r3,-40(fp)
    1dd4:	e0bffa17 	ldw	r2,-24(fp)
    1dd8:	100490fa 	slli	r2,r2,3
    1ddc:	e17fed17 	ldw	r5,-76(fp)
    1de0:	2885883a 	add	r2,r5,r2
    1de4:	20c7ff72 	custom	253,r3,r4,r3
    1de8:	10c00115 	stw	r3,4(r2)
        }
        ++Fout;
    1dec:	e0bfed17 	ldw	r2,-76(fp)
    1df0:	10800204 	addi	r2,r2,8
    1df4:	e0bfed15 	stw	r2,-76(fp)
    }while(--k);
    1df8:	e0bffc17 	ldw	r2,-16(fp)
    1dfc:	10bfffc4 	addi	r2,r2,-1
    1e00:	e0bffc15 	stw	r2,-16(fp)
    1e04:	e0bffc17 	ldw	r2,-16(fp)
    1e08:	103ef11e 	bne	r2,zero,19d0 <kf_bfly4+0x60>
}
    1e0c:	0001883a 	nop
    1e10:	0001883a 	nop
    1e14:	e037883a 	mov	sp,fp
    1e18:	df000017 	ldw	fp,0(sp)
    1e1c:	dec00104 	addi	sp,sp,4
    1e20:	f800283a 	ret

00001e24 <kf_bfly3>:
         kiss_fft_cpx * Fout,
         const size_t fstride,
         const kiss_fft_cfg st,
         size_t m
         )
{
    1e24:	deffea04 	addi	sp,sp,-88
    1e28:	dfc01515 	stw	ra,84(sp)
    1e2c:	df001415 	stw	fp,80(sp)
    1e30:	df001404 	addi	fp,sp,80
    1e34:	e13fef15 	stw	r4,-68(fp)
    1e38:	e17fee15 	stw	r5,-72(fp)
    1e3c:	e1bfed15 	stw	r6,-76(fp)
    1e40:	e1ffec15 	stw	r7,-80(fp)
     size_t k=m;
    1e44:	e0bfec17 	ldw	r2,-80(fp)
    1e48:	e0bfff15 	stw	r2,-4(fp)
     const size_t m2 = 2*m;
    1e4c:	e0bfec17 	ldw	r2,-80(fp)
    1e50:	1085883a 	add	r2,r2,r2
    1e54:	e0bffc15 	stw	r2,-16(fp)
     kiss_fft_cpx *tw1,*tw2;
     kiss_fft_cpx scratch[5];
     kiss_fft_cpx epi3;
     epi3 = st->twiddles[fstride*m];
    1e58:	e17fec17 	ldw	r5,-80(fp)
    1e5c:	e13fee17 	ldw	r4,-72(fp)
    1e60:	00079b80 	call	79b8 <__mulsi3>
    1e64:	e0ffed17 	ldw	r3,-76(fp)
    1e68:	10800844 	addi	r2,r2,33
    1e6c:	100490fa 	slli	r2,r2,3
    1e70:	1885883a 	add	r2,r3,r2
    1e74:	10c00017 	ldw	r3,0(r2)
    1e78:	e0fff015 	stw	r3,-64(fp)
    1e7c:	10800117 	ldw	r2,4(r2)
    1e80:	e0bff115 	stw	r2,-60(fp)

     tw1=tw2=st->twiddles;
    1e84:	e0bfed17 	ldw	r2,-76(fp)
    1e88:	10804204 	addi	r2,r2,264
    1e8c:	e0bffd15 	stw	r2,-12(fp)
    1e90:	e0bffd17 	ldw	r2,-12(fp)
    1e94:	e0bffe15 	stw	r2,-8(fp)

     do{
         C_FIXDIV(*Fout,3); C_FIXDIV(Fout[m],3); C_FIXDIV(Fout[m2],3);

         C_MUL(scratch[1],Fout[m] , *tw1);
    1e98:	e0bfec17 	ldw	r2,-80(fp)
    1e9c:	100490fa 	slli	r2,r2,3
    1ea0:	e0ffef17 	ldw	r3,-68(fp)
    1ea4:	1885883a 	add	r2,r3,r2
    1ea8:	10c00017 	ldw	r3,0(r2)
    1eac:	e13ffe17 	ldw	r4,-8(fp)
    1eb0:	20800017 	ldw	r2,0(r4)
    1eb4:	1887ff32 	custom	252,r3,r3,r2
    1eb8:	e0bfec17 	ldw	r2,-80(fp)
    1ebc:	100490fa 	slli	r2,r2,3
    1ec0:	e13fef17 	ldw	r4,-68(fp)
    1ec4:	2085883a 	add	r2,r4,r2
    1ec8:	11000117 	ldw	r4,4(r2)
    1ecc:	e17ffe17 	ldw	r5,-8(fp)
    1ed0:	28800117 	ldw	r2,4(r5)
    1ed4:	2085ff32 	custom	252,r2,r4,r2
    1ed8:	1885ffb2 	custom	254,r2,r3,r2
    1edc:	e0bff415 	stw	r2,-48(fp)
    1ee0:	e0bfec17 	ldw	r2,-80(fp)
    1ee4:	100490fa 	slli	r2,r2,3
    1ee8:	e0ffef17 	ldw	r3,-68(fp)
    1eec:	1885883a 	add	r2,r3,r2
    1ef0:	10c00017 	ldw	r3,0(r2)
    1ef4:	e13ffe17 	ldw	r4,-8(fp)
    1ef8:	20800117 	ldw	r2,4(r4)
    1efc:	1887ff32 	custom	252,r3,r3,r2
    1f00:	e0bfec17 	ldw	r2,-80(fp)
    1f04:	100490fa 	slli	r2,r2,3
    1f08:	e13fef17 	ldw	r4,-68(fp)
    1f0c:	2085883a 	add	r2,r4,r2
    1f10:	11000117 	ldw	r4,4(r2)
    1f14:	e17ffe17 	ldw	r5,-8(fp)
    1f18:	28800017 	ldw	r2,0(r5)
    1f1c:	2085ff32 	custom	252,r2,r4,r2
    1f20:	1885ff72 	custom	253,r2,r3,r2
    1f24:	e0bff515 	stw	r2,-44(fp)
         C_MUL(scratch[2],Fout[m2] , *tw2);
    1f28:	e0bffc17 	ldw	r2,-16(fp)
    1f2c:	100490fa 	slli	r2,r2,3
    1f30:	e0ffef17 	ldw	r3,-68(fp)
    1f34:	1885883a 	add	r2,r3,r2
    1f38:	10c00017 	ldw	r3,0(r2)
    1f3c:	e13ffd17 	ldw	r4,-12(fp)
    1f40:	20800017 	ldw	r2,0(r4)
    1f44:	1887ff32 	custom	252,r3,r3,r2
    1f48:	e0bffc17 	ldw	r2,-16(fp)
    1f4c:	100490fa 	slli	r2,r2,3
    1f50:	e13fef17 	ldw	r4,-68(fp)
    1f54:	2085883a 	add	r2,r4,r2
    1f58:	11000117 	ldw	r4,4(r2)
    1f5c:	e17ffd17 	ldw	r5,-12(fp)
    1f60:	28800117 	ldw	r2,4(r5)
    1f64:	2085ff32 	custom	252,r2,r4,r2
    1f68:	1885ffb2 	custom	254,r2,r3,r2
    1f6c:	e0bff615 	stw	r2,-40(fp)
    1f70:	e0bffc17 	ldw	r2,-16(fp)
    1f74:	100490fa 	slli	r2,r2,3
    1f78:	e0ffef17 	ldw	r3,-68(fp)
    1f7c:	1885883a 	add	r2,r3,r2
    1f80:	10c00017 	ldw	r3,0(r2)
    1f84:	e13ffd17 	ldw	r4,-12(fp)
    1f88:	20800117 	ldw	r2,4(r4)
    1f8c:	1887ff32 	custom	252,r3,r3,r2
    1f90:	e0bffc17 	ldw	r2,-16(fp)
    1f94:	100490fa 	slli	r2,r2,3
    1f98:	e13fef17 	ldw	r4,-68(fp)
    1f9c:	2085883a 	add	r2,r4,r2
    1fa0:	11000117 	ldw	r4,4(r2)
    1fa4:	e17ffd17 	ldw	r5,-12(fp)
    1fa8:	28800017 	ldw	r2,0(r5)
    1fac:	2085ff32 	custom	252,r2,r4,r2
    1fb0:	1885ff72 	custom	253,r2,r3,r2
    1fb4:	e0bff715 	stw	r2,-36(fp)

         C_ADD(scratch[3],scratch[1],scratch[2]);
    1fb8:	e0fff417 	ldw	r3,-48(fp)
    1fbc:	e0bff617 	ldw	r2,-40(fp)
    1fc0:	1885ff72 	custom	253,r2,r3,r2
    1fc4:	e0bff815 	stw	r2,-32(fp)
    1fc8:	e0fff517 	ldw	r3,-44(fp)
    1fcc:	e0bff717 	ldw	r2,-36(fp)
    1fd0:	1885ff72 	custom	253,r2,r3,r2
    1fd4:	e0bff915 	stw	r2,-28(fp)
         C_SUB(scratch[0],scratch[1],scratch[2]);
    1fd8:	e0fff417 	ldw	r3,-48(fp)
    1fdc:	e0bff617 	ldw	r2,-40(fp)
    1fe0:	1885ffb2 	custom	254,r2,r3,r2
    1fe4:	e0bff215 	stw	r2,-56(fp)
    1fe8:	e0fff517 	ldw	r3,-44(fp)
    1fec:	e0bff717 	ldw	r2,-36(fp)
    1ff0:	1885ffb2 	custom	254,r2,r3,r2
    1ff4:	e0bff315 	stw	r2,-52(fp)
         tw1 += fstride;
    1ff8:	e0bfee17 	ldw	r2,-72(fp)
    1ffc:	100490fa 	slli	r2,r2,3
    2000:	e0fffe17 	ldw	r3,-8(fp)
    2004:	1885883a 	add	r2,r3,r2
    2008:	e0bffe15 	stw	r2,-8(fp)
         tw2 += fstride*2;
    200c:	e0bfee17 	ldw	r2,-72(fp)
    2010:	1004913a 	slli	r2,r2,4
    2014:	e0fffd17 	ldw	r3,-12(fp)
    2018:	1885883a 	add	r2,r3,r2
    201c:	e0bffd15 	stw	r2,-12(fp)

         Fout[m].r = Fout->r - HALF_OF(scratch[3].r);
    2020:	e0bfef17 	ldw	r2,-68(fp)
    2024:	11000017 	ldw	r4,0(r2)
    2028:	e0fff817 	ldw	r3,-32(fp)
    202c:	008fc034 	movhi	r2,16128
    2030:	1887ff32 	custom	252,r3,r3,r2
    2034:	e0bfec17 	ldw	r2,-80(fp)
    2038:	100490fa 	slli	r2,r2,3
    203c:	e17fef17 	ldw	r5,-68(fp)
    2040:	2885883a 	add	r2,r5,r2
    2044:	20c7ffb2 	custom	254,r3,r4,r3
    2048:	10c00015 	stw	r3,0(r2)
         Fout[m].i = Fout->i - HALF_OF(scratch[3].i);
    204c:	e0bfef17 	ldw	r2,-68(fp)
    2050:	11000117 	ldw	r4,4(r2)
    2054:	e0fff917 	ldw	r3,-28(fp)
    2058:	008fc034 	movhi	r2,16128
    205c:	1887ff32 	custom	252,r3,r3,r2
    2060:	e0bfec17 	ldw	r2,-80(fp)
    2064:	100490fa 	slli	r2,r2,3
    2068:	e17fef17 	ldw	r5,-68(fp)
    206c:	2885883a 	add	r2,r5,r2
    2070:	20c7ffb2 	custom	254,r3,r4,r3
    2074:	10c00115 	stw	r3,4(r2)

         C_MULBYSCALAR( scratch[0] , epi3.i );
    2078:	e0fff217 	ldw	r3,-56(fp)
    207c:	e0bff117 	ldw	r2,-60(fp)
    2080:	1885ff32 	custom	252,r2,r3,r2
    2084:	e0bff215 	stw	r2,-56(fp)
    2088:	e0fff317 	ldw	r3,-52(fp)
    208c:	e0bff117 	ldw	r2,-60(fp)
    2090:	1885ff32 	custom	252,r2,r3,r2
    2094:	e0bff315 	stw	r2,-52(fp)

         C_ADDTO(*Fout,scratch[3]);
    2098:	e0bfef17 	ldw	r2,-68(fp)
    209c:	10c00017 	ldw	r3,0(r2)
    20a0:	e0bff817 	ldw	r2,-32(fp)
    20a4:	1887ff72 	custom	253,r3,r3,r2
    20a8:	e0bfef17 	ldw	r2,-68(fp)
    20ac:	10c00015 	stw	r3,0(r2)
    20b0:	e0bfef17 	ldw	r2,-68(fp)
    20b4:	10c00117 	ldw	r3,4(r2)
    20b8:	e0bff917 	ldw	r2,-28(fp)
    20bc:	1887ff72 	custom	253,r3,r3,r2
    20c0:	e0bfef17 	ldw	r2,-68(fp)
    20c4:	10c00115 	stw	r3,4(r2)

         Fout[m2].r = Fout[m].r + scratch[0].i;
    20c8:	e0bfec17 	ldw	r2,-80(fp)
    20cc:	100490fa 	slli	r2,r2,3
    20d0:	e0ffef17 	ldw	r3,-68(fp)
    20d4:	1885883a 	add	r2,r3,r2
    20d8:	11000017 	ldw	r4,0(r2)
    20dc:	e0fff317 	ldw	r3,-52(fp)
    20e0:	e0bffc17 	ldw	r2,-16(fp)
    20e4:	100490fa 	slli	r2,r2,3
    20e8:	e17fef17 	ldw	r5,-68(fp)
    20ec:	2885883a 	add	r2,r5,r2
    20f0:	20c7ff72 	custom	253,r3,r4,r3
    20f4:	10c00015 	stw	r3,0(r2)
         Fout[m2].i = Fout[m].i - scratch[0].r;
    20f8:	e0bfec17 	ldw	r2,-80(fp)
    20fc:	100490fa 	slli	r2,r2,3
    2100:	e0ffef17 	ldw	r3,-68(fp)
    2104:	1885883a 	add	r2,r3,r2
    2108:	11000117 	ldw	r4,4(r2)
    210c:	e0fff217 	ldw	r3,-56(fp)
    2110:	e0bffc17 	ldw	r2,-16(fp)
    2114:	100490fa 	slli	r2,r2,3
    2118:	e17fef17 	ldw	r5,-68(fp)
    211c:	2885883a 	add	r2,r5,r2
    2120:	20c7ffb2 	custom	254,r3,r4,r3
    2124:	10c00115 	stw	r3,4(r2)

         Fout[m].r -= scratch[0].i;
    2128:	e0bfec17 	ldw	r2,-80(fp)
    212c:	100490fa 	slli	r2,r2,3
    2130:	e0ffef17 	ldw	r3,-68(fp)
    2134:	1885883a 	add	r2,r3,r2
    2138:	11000017 	ldw	r4,0(r2)
    213c:	e0fff317 	ldw	r3,-52(fp)
    2140:	e0bfec17 	ldw	r2,-80(fp)
    2144:	100490fa 	slli	r2,r2,3
    2148:	e17fef17 	ldw	r5,-68(fp)
    214c:	2885883a 	add	r2,r5,r2
    2150:	20c7ffb2 	custom	254,r3,r4,r3
    2154:	10c00015 	stw	r3,0(r2)
         Fout[m].i += scratch[0].r;
    2158:	e0bfec17 	ldw	r2,-80(fp)
    215c:	100490fa 	slli	r2,r2,3
    2160:	e0ffef17 	ldw	r3,-68(fp)
    2164:	1885883a 	add	r2,r3,r2
    2168:	11000117 	ldw	r4,4(r2)
    216c:	e0fff217 	ldw	r3,-56(fp)
    2170:	e0bfec17 	ldw	r2,-80(fp)
    2174:	100490fa 	slli	r2,r2,3
    2178:	e17fef17 	ldw	r5,-68(fp)
    217c:	2885883a 	add	r2,r5,r2
    2180:	20c7ff72 	custom	253,r3,r4,r3
    2184:	10c00115 	stw	r3,4(r2)

         ++Fout;
    2188:	e0bfef17 	ldw	r2,-68(fp)
    218c:	10800204 	addi	r2,r2,8
    2190:	e0bfef15 	stw	r2,-68(fp)
     }while(--k);
    2194:	e0bfff17 	ldw	r2,-4(fp)
    2198:	10bfffc4 	addi	r2,r2,-1
    219c:	e0bfff15 	stw	r2,-4(fp)
    21a0:	e0bfff17 	ldw	r2,-4(fp)
    21a4:	103f3c1e 	bne	r2,zero,1e98 <kf_bfly3+0x74>
}
    21a8:	0001883a 	nop
    21ac:	0001883a 	nop
    21b0:	e037883a 	mov	sp,fp
    21b4:	dfc00117 	ldw	ra,4(sp)
    21b8:	df000017 	ldw	fp,0(sp)
    21bc:	dec00204 	addi	sp,sp,8
    21c0:	f800283a 	ret

000021c4 <kf_bfly5>:
        kiss_fft_cpx * Fout,
        const size_t fstride,
        const kiss_fft_cfg st,
        int m
        )
{
    21c4:	deffd204 	addi	sp,sp,-184
    21c8:	dfc02d15 	stw	ra,180(sp)
    21cc:	df002c15 	stw	fp,176(sp)
    21d0:	dc402b15 	stw	r17,172(sp)
    21d4:	dc002a15 	stw	r16,168(sp)
    21d8:	df002c04 	addi	fp,sp,176
    21dc:	e13fd715 	stw	r4,-164(fp)
    21e0:	e17fd615 	stw	r5,-168(fp)
    21e4:	e1bfd515 	stw	r6,-172(fp)
    21e8:	e1ffd415 	stw	r7,-176(fp)
    kiss_fft_cpx *Fout0,*Fout1,*Fout2,*Fout3,*Fout4;
    int u;
    kiss_fft_cpx scratch[13];
    kiss_fft_cpx * twiddles = st->twiddles;
    21ec:	e0bfd517 	ldw	r2,-172(fp)
    21f0:	10804204 	addi	r2,r2,264
    21f4:	e0bff715 	stw	r2,-36(fp)
    kiss_fft_cpx *tw;
    kiss_fft_cpx ya,yb;
    ya = twiddles[fstride*m];
    21f8:	e0bfd417 	ldw	r2,-176(fp)
    21fc:	e17fd617 	ldw	r5,-168(fp)
    2200:	1009883a 	mov	r4,r2
    2204:	00079b80 	call	79b8 <__mulsi3>
    2208:	100490fa 	slli	r2,r2,3
    220c:	e0fff717 	ldw	r3,-36(fp)
    2210:	1885883a 	add	r2,r3,r2
    2214:	10c00017 	ldw	r3,0(r2)
    2218:	e0ffda15 	stw	r3,-152(fp)
    221c:	10800117 	ldw	r2,4(r2)
    2220:	e0bfdb15 	stw	r2,-148(fp)
    yb = twiddles[fstride*2*m];
    2224:	e0bfd417 	ldw	r2,-176(fp)
    2228:	e17fd617 	ldw	r5,-168(fp)
    222c:	1009883a 	mov	r4,r2
    2230:	00079b80 	call	79b8 <__mulsi3>
    2234:	1004913a 	slli	r2,r2,4
    2238:	e0fff717 	ldw	r3,-36(fp)
    223c:	1885883a 	add	r2,r3,r2
    2240:	10c00017 	ldw	r3,0(r2)
    2244:	e0ffd815 	stw	r3,-160(fp)
    2248:	10800117 	ldw	r2,4(r2)
    224c:	e0bfd915 	stw	r2,-156(fp)

    Fout0=Fout;
    2250:	e0bfd717 	ldw	r2,-164(fp)
    2254:	e0bffd15 	stw	r2,-12(fp)
    Fout1=Fout0+m;
    2258:	e0bfd417 	ldw	r2,-176(fp)
    225c:	100490fa 	slli	r2,r2,3
    2260:	e0fffd17 	ldw	r3,-12(fp)
    2264:	1885883a 	add	r2,r3,r2
    2268:	e0bffc15 	stw	r2,-16(fp)
    Fout2=Fout0+2*m;
    226c:	e0bfd417 	ldw	r2,-176(fp)
    2270:	1004913a 	slli	r2,r2,4
    2274:	e0fffd17 	ldw	r3,-12(fp)
    2278:	1885883a 	add	r2,r3,r2
    227c:	e0bffb15 	stw	r2,-20(fp)
    Fout3=Fout0+3*m;
    2280:	e0ffd417 	ldw	r3,-176(fp)
    2284:	1805883a 	mov	r2,r3
    2288:	1085883a 	add	r2,r2,r2
    228c:	10c5883a 	add	r2,r2,r3
    2290:	100490fa 	slli	r2,r2,3
    2294:	1007883a 	mov	r3,r2
    2298:	e0bffd17 	ldw	r2,-12(fp)
    229c:	10c5883a 	add	r2,r2,r3
    22a0:	e0bffa15 	stw	r2,-24(fp)
    Fout4=Fout0+4*m;
    22a4:	e0bfd417 	ldw	r2,-176(fp)
    22a8:	1004917a 	slli	r2,r2,5
    22ac:	e0fffd17 	ldw	r3,-12(fp)
    22b0:	1885883a 	add	r2,r3,r2
    22b4:	e0bff915 	stw	r2,-28(fp)

    tw=st->twiddles;
    22b8:	e0bfd517 	ldw	r2,-172(fp)
    22bc:	10804204 	addi	r2,r2,264
    22c0:	e0bff615 	stw	r2,-40(fp)
    for ( u=0; u<m; ++u ) {
    22c4:	e03ff815 	stw	zero,-32(fp)
    22c8:	00018c06 	br	28fc <kf_bfly5+0x738>
        C_FIXDIV( *Fout0,5); C_FIXDIV( *Fout1,5); C_FIXDIV( *Fout2,5); C_FIXDIV( *Fout3,5); C_FIXDIV( *Fout4,5);
        scratch[0] = *Fout0;
    22cc:	e0bffd17 	ldw	r2,-12(fp)
    22d0:	10c00017 	ldw	r3,0(r2)
    22d4:	e0ffdc15 	stw	r3,-144(fp)
    22d8:	10800117 	ldw	r2,4(r2)
    22dc:	e0bfdd15 	stw	r2,-140(fp)

        C_MUL(scratch[1] ,*Fout1, tw[u*fstride]);
    22e0:	e0bffc17 	ldw	r2,-16(fp)
    22e4:	14000017 	ldw	r16,0(r2)
    22e8:	e0bff817 	ldw	r2,-32(fp)
    22ec:	e17fd617 	ldw	r5,-168(fp)
    22f0:	1009883a 	mov	r4,r2
    22f4:	00079b80 	call	79b8 <__mulsi3>
    22f8:	100490fa 	slli	r2,r2,3
    22fc:	e0fff617 	ldw	r3,-40(fp)
    2300:	1887883a 	add	r3,r3,r2
    2304:	18800017 	ldw	r2,0(r3)
    2308:	80a1ff32 	custom	252,r16,r16,r2
    230c:	e0bffc17 	ldw	r2,-16(fp)
    2310:	14400117 	ldw	r17,4(r2)
    2314:	e0bff817 	ldw	r2,-32(fp)
    2318:	e17fd617 	ldw	r5,-168(fp)
    231c:	1009883a 	mov	r4,r2
    2320:	00079b80 	call	79b8 <__mulsi3>
    2324:	100490fa 	slli	r2,r2,3
    2328:	e0fff617 	ldw	r3,-40(fp)
    232c:	1887883a 	add	r3,r3,r2
    2330:	18800117 	ldw	r2,4(r3)
    2334:	8885ff32 	custom	252,r2,r17,r2
    2338:	8085ffb2 	custom	254,r2,r16,r2
    233c:	e0bfde15 	stw	r2,-136(fp)
    2340:	e0bffc17 	ldw	r2,-16(fp)
    2344:	14000017 	ldw	r16,0(r2)
    2348:	e0bff817 	ldw	r2,-32(fp)
    234c:	e17fd617 	ldw	r5,-168(fp)
    2350:	1009883a 	mov	r4,r2
    2354:	00079b80 	call	79b8 <__mulsi3>
    2358:	100490fa 	slli	r2,r2,3
    235c:	e0fff617 	ldw	r3,-40(fp)
    2360:	1887883a 	add	r3,r3,r2
    2364:	18800117 	ldw	r2,4(r3)
    2368:	80a1ff32 	custom	252,r16,r16,r2
    236c:	e0bffc17 	ldw	r2,-16(fp)
    2370:	14400117 	ldw	r17,4(r2)
    2374:	e0bff817 	ldw	r2,-32(fp)
    2378:	e17fd617 	ldw	r5,-168(fp)
    237c:	1009883a 	mov	r4,r2
    2380:	00079b80 	call	79b8 <__mulsi3>
    2384:	100490fa 	slli	r2,r2,3
    2388:	e0fff617 	ldw	r3,-40(fp)
    238c:	1887883a 	add	r3,r3,r2
    2390:	18800017 	ldw	r2,0(r3)
    2394:	8885ff32 	custom	252,r2,r17,r2
    2398:	8085ff72 	custom	253,r2,r16,r2
    239c:	e0bfdf15 	stw	r2,-132(fp)
        C_MUL(scratch[2] ,*Fout2, tw[2*u*fstride]);
    23a0:	e0bffb17 	ldw	r2,-20(fp)
    23a4:	14000017 	ldw	r16,0(r2)
    23a8:	e0bff817 	ldw	r2,-32(fp)
    23ac:	e17fd617 	ldw	r5,-168(fp)
    23b0:	1009883a 	mov	r4,r2
    23b4:	00079b80 	call	79b8 <__mulsi3>
    23b8:	1004913a 	slli	r2,r2,4
    23bc:	e0fff617 	ldw	r3,-40(fp)
    23c0:	1887883a 	add	r3,r3,r2
    23c4:	18800017 	ldw	r2,0(r3)
    23c8:	80a1ff32 	custom	252,r16,r16,r2
    23cc:	e0bffb17 	ldw	r2,-20(fp)
    23d0:	14400117 	ldw	r17,4(r2)
    23d4:	e0bff817 	ldw	r2,-32(fp)
    23d8:	e17fd617 	ldw	r5,-168(fp)
    23dc:	1009883a 	mov	r4,r2
    23e0:	00079b80 	call	79b8 <__mulsi3>
    23e4:	1004913a 	slli	r2,r2,4
    23e8:	e0fff617 	ldw	r3,-40(fp)
    23ec:	1887883a 	add	r3,r3,r2
    23f0:	18800117 	ldw	r2,4(r3)
    23f4:	8885ff32 	custom	252,r2,r17,r2
    23f8:	8085ffb2 	custom	254,r2,r16,r2
    23fc:	e0bfe015 	stw	r2,-128(fp)
    2400:	e0bffb17 	ldw	r2,-20(fp)
    2404:	14000017 	ldw	r16,0(r2)
    2408:	e0bff817 	ldw	r2,-32(fp)
    240c:	e17fd617 	ldw	r5,-168(fp)
    2410:	1009883a 	mov	r4,r2
    2414:	00079b80 	call	79b8 <__mulsi3>
    2418:	1004913a 	slli	r2,r2,4
    241c:	e0fff617 	ldw	r3,-40(fp)
    2420:	1887883a 	add	r3,r3,r2
    2424:	18800117 	ldw	r2,4(r3)
    2428:	80a1ff32 	custom	252,r16,r16,r2
    242c:	e0bffb17 	ldw	r2,-20(fp)
    2430:	14400117 	ldw	r17,4(r2)
    2434:	e0bff817 	ldw	r2,-32(fp)
    2438:	e17fd617 	ldw	r5,-168(fp)
    243c:	1009883a 	mov	r4,r2
    2440:	00079b80 	call	79b8 <__mulsi3>
    2444:	1004913a 	slli	r2,r2,4
    2448:	e0fff617 	ldw	r3,-40(fp)
    244c:	1887883a 	add	r3,r3,r2
    2450:	18800017 	ldw	r2,0(r3)
    2454:	8885ff32 	custom	252,r2,r17,r2
    2458:	8085ff72 	custom	253,r2,r16,r2
    245c:	e0bfe115 	stw	r2,-124(fp)
        C_MUL(scratch[3] ,*Fout3, tw[3*u*fstride]);
    2460:	e0bffa17 	ldw	r2,-24(fp)
    2464:	14000017 	ldw	r16,0(r2)
    2468:	e0bff817 	ldw	r2,-32(fp)
    246c:	e17fd617 	ldw	r5,-168(fp)
    2470:	1009883a 	mov	r4,r2
    2474:	00079b80 	call	79b8 <__mulsi3>
    2478:	1007883a 	mov	r3,r2
    247c:	1805883a 	mov	r2,r3
    2480:	1085883a 	add	r2,r2,r2
    2484:	10c5883a 	add	r2,r2,r3
    2488:	100490fa 	slli	r2,r2,3
    248c:	1007883a 	mov	r3,r2
    2490:	e0bff617 	ldw	r2,-40(fp)
    2494:	10c7883a 	add	r3,r2,r3
    2498:	18800017 	ldw	r2,0(r3)
    249c:	80a1ff32 	custom	252,r16,r16,r2
    24a0:	e0bffa17 	ldw	r2,-24(fp)
    24a4:	14400117 	ldw	r17,4(r2)
    24a8:	e0bff817 	ldw	r2,-32(fp)
    24ac:	e17fd617 	ldw	r5,-168(fp)
    24b0:	1009883a 	mov	r4,r2
    24b4:	00079b80 	call	79b8 <__mulsi3>
    24b8:	1007883a 	mov	r3,r2
    24bc:	1805883a 	mov	r2,r3
    24c0:	1085883a 	add	r2,r2,r2
    24c4:	10c5883a 	add	r2,r2,r3
    24c8:	100490fa 	slli	r2,r2,3
    24cc:	1007883a 	mov	r3,r2
    24d0:	e0bff617 	ldw	r2,-40(fp)
    24d4:	10c7883a 	add	r3,r2,r3
    24d8:	18800117 	ldw	r2,4(r3)
    24dc:	8885ff32 	custom	252,r2,r17,r2
    24e0:	8085ffb2 	custom	254,r2,r16,r2
    24e4:	e0bfe215 	stw	r2,-120(fp)
    24e8:	e0bffa17 	ldw	r2,-24(fp)
    24ec:	14000017 	ldw	r16,0(r2)
    24f0:	e0bff817 	ldw	r2,-32(fp)
    24f4:	e17fd617 	ldw	r5,-168(fp)
    24f8:	1009883a 	mov	r4,r2
    24fc:	00079b80 	call	79b8 <__mulsi3>
    2500:	1007883a 	mov	r3,r2
    2504:	1805883a 	mov	r2,r3
    2508:	1085883a 	add	r2,r2,r2
    250c:	10c5883a 	add	r2,r2,r3
    2510:	100490fa 	slli	r2,r2,3
    2514:	1007883a 	mov	r3,r2
    2518:	e0bff617 	ldw	r2,-40(fp)
    251c:	10c7883a 	add	r3,r2,r3
    2520:	18800117 	ldw	r2,4(r3)
    2524:	80a1ff32 	custom	252,r16,r16,r2
    2528:	e0bffa17 	ldw	r2,-24(fp)
    252c:	14400117 	ldw	r17,4(r2)
    2530:	e0bff817 	ldw	r2,-32(fp)
    2534:	e17fd617 	ldw	r5,-168(fp)
    2538:	1009883a 	mov	r4,r2
    253c:	00079b80 	call	79b8 <__mulsi3>
    2540:	1007883a 	mov	r3,r2
    2544:	1805883a 	mov	r2,r3
    2548:	1085883a 	add	r2,r2,r2
    254c:	10c5883a 	add	r2,r2,r3
    2550:	100490fa 	slli	r2,r2,3
    2554:	1007883a 	mov	r3,r2
    2558:	e0bff617 	ldw	r2,-40(fp)
    255c:	10c7883a 	add	r3,r2,r3
    2560:	18800017 	ldw	r2,0(r3)
    2564:	8885ff32 	custom	252,r2,r17,r2
    2568:	8085ff72 	custom	253,r2,r16,r2
    256c:	e0bfe315 	stw	r2,-116(fp)
        C_MUL(scratch[4] ,*Fout4, tw[4*u*fstride]);
    2570:	e0bff917 	ldw	r2,-28(fp)
    2574:	14000017 	ldw	r16,0(r2)
    2578:	e0bff817 	ldw	r2,-32(fp)
    257c:	e17fd617 	ldw	r5,-168(fp)
    2580:	1009883a 	mov	r4,r2
    2584:	00079b80 	call	79b8 <__mulsi3>
    2588:	1004917a 	slli	r2,r2,5
    258c:	e0fff617 	ldw	r3,-40(fp)
    2590:	1887883a 	add	r3,r3,r2
    2594:	18800017 	ldw	r2,0(r3)
    2598:	80a1ff32 	custom	252,r16,r16,r2
    259c:	e0bff917 	ldw	r2,-28(fp)
    25a0:	14400117 	ldw	r17,4(r2)
    25a4:	e0bff817 	ldw	r2,-32(fp)
    25a8:	e17fd617 	ldw	r5,-168(fp)
    25ac:	1009883a 	mov	r4,r2
    25b0:	00079b80 	call	79b8 <__mulsi3>
    25b4:	1004917a 	slli	r2,r2,5
    25b8:	e0fff617 	ldw	r3,-40(fp)
    25bc:	1887883a 	add	r3,r3,r2
    25c0:	18800117 	ldw	r2,4(r3)
    25c4:	8885ff32 	custom	252,r2,r17,r2
    25c8:	8085ffb2 	custom	254,r2,r16,r2
    25cc:	e0bfe415 	stw	r2,-112(fp)
    25d0:	e0bff917 	ldw	r2,-28(fp)
    25d4:	14000017 	ldw	r16,0(r2)
    25d8:	e0bff817 	ldw	r2,-32(fp)
    25dc:	e17fd617 	ldw	r5,-168(fp)
    25e0:	1009883a 	mov	r4,r2
    25e4:	00079b80 	call	79b8 <__mulsi3>
    25e8:	1004917a 	slli	r2,r2,5
    25ec:	e0fff617 	ldw	r3,-40(fp)
    25f0:	1887883a 	add	r3,r3,r2
    25f4:	18800117 	ldw	r2,4(r3)
    25f8:	80a1ff32 	custom	252,r16,r16,r2
    25fc:	e0bff917 	ldw	r2,-28(fp)
    2600:	14400117 	ldw	r17,4(r2)
    2604:	e0bff817 	ldw	r2,-32(fp)
    2608:	e17fd617 	ldw	r5,-168(fp)
    260c:	1009883a 	mov	r4,r2
    2610:	00079b80 	call	79b8 <__mulsi3>
    2614:	1004917a 	slli	r2,r2,5
    2618:	e0fff617 	ldw	r3,-40(fp)
    261c:	1887883a 	add	r3,r3,r2
    2620:	18800017 	ldw	r2,0(r3)
    2624:	8885ff32 	custom	252,r2,r17,r2
    2628:	8085ff72 	custom	253,r2,r16,r2
    262c:	e0bfe515 	stw	r2,-108(fp)

        C_ADD( scratch[7],scratch[1],scratch[4]);
    2630:	e0ffde17 	ldw	r3,-136(fp)
    2634:	e0bfe417 	ldw	r2,-112(fp)
    2638:	1885ff72 	custom	253,r2,r3,r2
    263c:	e0bfea15 	stw	r2,-88(fp)
    2640:	e0ffdf17 	ldw	r3,-132(fp)
    2644:	e0bfe517 	ldw	r2,-108(fp)
    2648:	1885ff72 	custom	253,r2,r3,r2
    264c:	e0bfeb15 	stw	r2,-84(fp)
        C_SUB( scratch[10],scratch[1],scratch[4]);
    2650:	e0ffde17 	ldw	r3,-136(fp)
    2654:	e0bfe417 	ldw	r2,-112(fp)
    2658:	1885ffb2 	custom	254,r2,r3,r2
    265c:	e0bff015 	stw	r2,-64(fp)
    2660:	e0ffdf17 	ldw	r3,-132(fp)
    2664:	e0bfe517 	ldw	r2,-108(fp)
    2668:	1885ffb2 	custom	254,r2,r3,r2
    266c:	e0bff115 	stw	r2,-60(fp)
        C_ADD( scratch[8],scratch[2],scratch[3]);
    2670:	e0ffe017 	ldw	r3,-128(fp)
    2674:	e0bfe217 	ldw	r2,-120(fp)
    2678:	1885ff72 	custom	253,r2,r3,r2
    267c:	e0bfec15 	stw	r2,-80(fp)
    2680:	e0ffe117 	ldw	r3,-124(fp)
    2684:	e0bfe317 	ldw	r2,-116(fp)
    2688:	1885ff72 	custom	253,r2,r3,r2
    268c:	e0bfed15 	stw	r2,-76(fp)
        C_SUB( scratch[9],scratch[2],scratch[3]);
    2690:	e0ffe017 	ldw	r3,-128(fp)
    2694:	e0bfe217 	ldw	r2,-120(fp)
    2698:	1885ffb2 	custom	254,r2,r3,r2
    269c:	e0bfee15 	stw	r2,-72(fp)
    26a0:	e0ffe117 	ldw	r3,-124(fp)
    26a4:	e0bfe317 	ldw	r2,-116(fp)
    26a8:	1885ffb2 	custom	254,r2,r3,r2
    26ac:	e0bfef15 	stw	r2,-68(fp)

        Fout0->r += scratch[7].r + scratch[8].r;
    26b0:	e0bffd17 	ldw	r2,-12(fp)
    26b4:	10c00017 	ldw	r3,0(r2)
    26b8:	e13fea17 	ldw	r4,-88(fp)
    26bc:	e0bfec17 	ldw	r2,-80(fp)
    26c0:	2085ff72 	custom	253,r2,r4,r2
    26c4:	1887ff72 	custom	253,r3,r3,r2
    26c8:	e0bffd17 	ldw	r2,-12(fp)
    26cc:	10c00015 	stw	r3,0(r2)
        Fout0->i += scratch[7].i + scratch[8].i;
    26d0:	e0bffd17 	ldw	r2,-12(fp)
    26d4:	10c00117 	ldw	r3,4(r2)
    26d8:	e13feb17 	ldw	r4,-84(fp)
    26dc:	e0bfed17 	ldw	r2,-76(fp)
    26e0:	2085ff72 	custom	253,r2,r4,r2
    26e4:	1887ff72 	custom	253,r3,r3,r2
    26e8:	e0bffd17 	ldw	r2,-12(fp)
    26ec:	10c00115 	stw	r3,4(r2)

        scratch[5].r = scratch[0].r + S_MUL(scratch[7].r,ya.r) + S_MUL(scratch[8].r,yb.r);
    26f0:	e0ffdc17 	ldw	r3,-144(fp)
    26f4:	e13fea17 	ldw	r4,-88(fp)
    26f8:	e0bfda17 	ldw	r2,-152(fp)
    26fc:	2085ff32 	custom	252,r2,r4,r2
    2700:	1887ff72 	custom	253,r3,r3,r2
    2704:	e13fec17 	ldw	r4,-80(fp)
    2708:	e0bfd817 	ldw	r2,-160(fp)
    270c:	2085ff32 	custom	252,r2,r4,r2
    2710:	1885ff72 	custom	253,r2,r3,r2
    2714:	e0bfe615 	stw	r2,-104(fp)
        scratch[5].i = scratch[0].i + S_MUL(scratch[7].i,ya.r) + S_MUL(scratch[8].i,yb.r);
    2718:	e0ffdd17 	ldw	r3,-140(fp)
    271c:	e13feb17 	ldw	r4,-84(fp)
    2720:	e0bfda17 	ldw	r2,-152(fp)
    2724:	2085ff32 	custom	252,r2,r4,r2
    2728:	1887ff72 	custom	253,r3,r3,r2
    272c:	e13fed17 	ldw	r4,-76(fp)
    2730:	e0bfd817 	ldw	r2,-160(fp)
    2734:	2085ff32 	custom	252,r2,r4,r2
    2738:	1885ff72 	custom	253,r2,r3,r2
    273c:	e0bfe715 	stw	r2,-100(fp)

        scratch[6].r =  S_MUL(scratch[10].i,ya.i) + S_MUL(scratch[9].i,yb.i);
    2740:	e0fff117 	ldw	r3,-60(fp)
    2744:	e0bfdb17 	ldw	r2,-148(fp)
    2748:	1887ff32 	custom	252,r3,r3,r2
    274c:	e13fef17 	ldw	r4,-68(fp)
    2750:	e0bfd917 	ldw	r2,-156(fp)
    2754:	2085ff32 	custom	252,r2,r4,r2
    2758:	1885ff72 	custom	253,r2,r3,r2
    275c:	e0bfe815 	stw	r2,-96(fp)
        scratch[6].i = -S_MUL(scratch[10].r,ya.i) - S_MUL(scratch[9].r,yb.i);
    2760:	e0fff017 	ldw	r3,-64(fp)
    2764:	e0bfdb17 	ldw	r2,-148(fp)
    2768:	1885ff32 	custom	252,r2,r3,r2
    276c:	10e0003c 	xorhi	r3,r2,32768
    2770:	e13fee17 	ldw	r4,-72(fp)
    2774:	e0bfd917 	ldw	r2,-156(fp)
    2778:	2085ff32 	custom	252,r2,r4,r2
    277c:	1885ffb2 	custom	254,r2,r3,r2
    2780:	e0bfe915 	stw	r2,-92(fp)

        C_SUB(*Fout1,scratch[5],scratch[6]);
    2784:	e0ffe617 	ldw	r3,-104(fp)
    2788:	e0bfe817 	ldw	r2,-96(fp)
    278c:	1887ffb2 	custom	254,r3,r3,r2
    2790:	e0bffc17 	ldw	r2,-16(fp)
    2794:	10c00015 	stw	r3,0(r2)
    2798:	e0ffe717 	ldw	r3,-100(fp)
    279c:	e0bfe917 	ldw	r2,-92(fp)
    27a0:	1887ffb2 	custom	254,r3,r3,r2
    27a4:	e0bffc17 	ldw	r2,-16(fp)
    27a8:	10c00115 	stw	r3,4(r2)
        C_ADD(*Fout4,scratch[5],scratch[6]);
    27ac:	e0ffe617 	ldw	r3,-104(fp)
    27b0:	e0bfe817 	ldw	r2,-96(fp)
    27b4:	1887ff72 	custom	253,r3,r3,r2
    27b8:	e0bff917 	ldw	r2,-28(fp)
    27bc:	10c00015 	stw	r3,0(r2)
    27c0:	e0ffe717 	ldw	r3,-100(fp)
    27c4:	e0bfe917 	ldw	r2,-92(fp)
    27c8:	1887ff72 	custom	253,r3,r3,r2
    27cc:	e0bff917 	ldw	r2,-28(fp)
    27d0:	10c00115 	stw	r3,4(r2)

        scratch[11].r = scratch[0].r + S_MUL(scratch[7].r,yb.r) + S_MUL(scratch[8].r,ya.r);
    27d4:	e0ffdc17 	ldw	r3,-144(fp)
    27d8:	e13fea17 	ldw	r4,-88(fp)
    27dc:	e0bfd817 	ldw	r2,-160(fp)
    27e0:	2085ff32 	custom	252,r2,r4,r2
    27e4:	1887ff72 	custom	253,r3,r3,r2
    27e8:	e13fec17 	ldw	r4,-80(fp)
    27ec:	e0bfda17 	ldw	r2,-152(fp)
    27f0:	2085ff32 	custom	252,r2,r4,r2
    27f4:	1885ff72 	custom	253,r2,r3,r2
    27f8:	e0bff215 	stw	r2,-56(fp)
        scratch[11].i = scratch[0].i + S_MUL(scratch[7].i,yb.r) + S_MUL(scratch[8].i,ya.r);
    27fc:	e0ffdd17 	ldw	r3,-140(fp)
    2800:	e13feb17 	ldw	r4,-84(fp)
    2804:	e0bfd817 	ldw	r2,-160(fp)
    2808:	2085ff32 	custom	252,r2,r4,r2
    280c:	1887ff72 	custom	253,r3,r3,r2
    2810:	e13fed17 	ldw	r4,-76(fp)
    2814:	e0bfda17 	ldw	r2,-152(fp)
    2818:	2085ff32 	custom	252,r2,r4,r2
    281c:	1885ff72 	custom	253,r2,r3,r2
    2820:	e0bff315 	stw	r2,-52(fp)
        scratch[12].r = - S_MUL(scratch[10].i,yb.i) + S_MUL(scratch[9].i,ya.i);
    2824:	e0ffef17 	ldw	r3,-68(fp)
    2828:	e0bfdb17 	ldw	r2,-148(fp)
    282c:	1887ff32 	custom	252,r3,r3,r2
    2830:	e13ff117 	ldw	r4,-60(fp)
    2834:	e0bfd917 	ldw	r2,-156(fp)
    2838:	2085ff32 	custom	252,r2,r4,r2
    283c:	1885ffb2 	custom	254,r2,r3,r2
    2840:	e0bff415 	stw	r2,-48(fp)
        scratch[12].i = S_MUL(scratch[10].r,yb.i) - S_MUL(scratch[9].r,ya.i);
    2844:	e0fff017 	ldw	r3,-64(fp)
    2848:	e0bfd917 	ldw	r2,-156(fp)
    284c:	1887ff32 	custom	252,r3,r3,r2
    2850:	e13fee17 	ldw	r4,-72(fp)
    2854:	e0bfdb17 	ldw	r2,-148(fp)
    2858:	2085ff32 	custom	252,r2,r4,r2
    285c:	1885ffb2 	custom	254,r2,r3,r2
    2860:	e0bff515 	stw	r2,-44(fp)

        C_ADD(*Fout2,scratch[11],scratch[12]);
    2864:	e0fff217 	ldw	r3,-56(fp)
    2868:	e0bff417 	ldw	r2,-48(fp)
    286c:	1887ff72 	custom	253,r3,r3,r2
    2870:	e0bffb17 	ldw	r2,-20(fp)
    2874:	10c00015 	stw	r3,0(r2)
    2878:	e0fff317 	ldw	r3,-52(fp)
    287c:	e0bff517 	ldw	r2,-44(fp)
    2880:	1887ff72 	custom	253,r3,r3,r2
    2884:	e0bffb17 	ldw	r2,-20(fp)
    2888:	10c00115 	stw	r3,4(r2)
        C_SUB(*Fout3,scratch[11],scratch[12]);
    288c:	e0fff217 	ldw	r3,-56(fp)
    2890:	e0bff417 	ldw	r2,-48(fp)
    2894:	1887ffb2 	custom	254,r3,r3,r2
    2898:	e0bffa17 	ldw	r2,-24(fp)
    289c:	10c00015 	stw	r3,0(r2)
    28a0:	e0fff317 	ldw	r3,-52(fp)
    28a4:	e0bff517 	ldw	r2,-44(fp)
    28a8:	1887ffb2 	custom	254,r3,r3,r2
    28ac:	e0bffa17 	ldw	r2,-24(fp)
    28b0:	10c00115 	stw	r3,4(r2)

        ++Fout0;++Fout1;++Fout2;++Fout3;++Fout4;
    28b4:	e0bffd17 	ldw	r2,-12(fp)
    28b8:	10800204 	addi	r2,r2,8
    28bc:	e0bffd15 	stw	r2,-12(fp)
    28c0:	e0bffc17 	ldw	r2,-16(fp)
    28c4:	10800204 	addi	r2,r2,8
    28c8:	e0bffc15 	stw	r2,-16(fp)
    28cc:	e0bffb17 	ldw	r2,-20(fp)
    28d0:	10800204 	addi	r2,r2,8
    28d4:	e0bffb15 	stw	r2,-20(fp)
    28d8:	e0bffa17 	ldw	r2,-24(fp)
    28dc:	10800204 	addi	r2,r2,8
    28e0:	e0bffa15 	stw	r2,-24(fp)
    28e4:	e0bff917 	ldw	r2,-28(fp)
    28e8:	10800204 	addi	r2,r2,8
    28ec:	e0bff915 	stw	r2,-28(fp)
    for ( u=0; u<m; ++u ) {
    28f0:	e0bff817 	ldw	r2,-32(fp)
    28f4:	10800044 	addi	r2,r2,1
    28f8:	e0bff815 	stw	r2,-32(fp)
    28fc:	e0fff817 	ldw	r3,-32(fp)
    2900:	e0bfd417 	ldw	r2,-176(fp)
    2904:	18be7116 	blt	r3,r2,22cc <kf_bfly5+0x108>
    }
}
    2908:	0001883a 	nop
    290c:	0001883a 	nop
    2910:	e6fffe04 	addi	sp,fp,-8
    2914:	dfc00317 	ldw	ra,12(sp)
    2918:	df000217 	ldw	fp,8(sp)
    291c:	dc400117 	ldw	r17,4(sp)
    2920:	dc000017 	ldw	r16,0(sp)
    2924:	dec00404 	addi	sp,sp,16
    2928:	f800283a 	ret

0000292c <kf_bfly_generic>:
        const size_t fstride,
        const kiss_fft_cfg st,
        int m,
        int p
        )
{
    292c:	defff004 	addi	sp,sp,-64
    2930:	dfc00f15 	stw	ra,60(sp)
    2934:	df000e15 	stw	fp,56(sp)
    2938:	df000e04 	addi	fp,sp,56
    293c:	e13ff515 	stw	r4,-44(fp)
    2940:	e17ff415 	stw	r5,-48(fp)
    2944:	e1bff315 	stw	r6,-52(fp)
    2948:	e1fff215 	stw	r7,-56(fp)
    int u,k,q1,q;
    kiss_fft_cpx * twiddles = st->twiddles;
    294c:	e0bff317 	ldw	r2,-52(fp)
    2950:	10804204 	addi	r2,r2,264
    2954:	e0bffa15 	stw	r2,-24(fp)
    kiss_fft_cpx t;
    int Norig = st->nfft;
    2958:	e0bff317 	ldw	r2,-52(fp)
    295c:	10800017 	ldw	r2,0(r2)
    2960:	e0bff915 	stw	r2,-28(fp)

    kiss_fft_cpx * scratch = (kiss_fft_cpx*)KISS_FFT_TMP_ALLOC(sizeof(kiss_fft_cpx)*p);
    2964:	e0800217 	ldw	r2,8(fp)
    2968:	100490fa 	slli	r2,r2,3
    296c:	1009883a 	mov	r4,r2
    2970:	000a4d80 	call	a4d8 <malloc>
    2974:	e0bff815 	stw	r2,-32(fp)

    for ( u=0; u<m; ++u ) {
    2978:	e03fff15 	stw	zero,-4(fp)
    297c:	00009506 	br	2bd4 <kf_bfly_generic+0x2a8>
        k=u;
    2980:	e0bfff17 	ldw	r2,-4(fp)
    2984:	e0bffe15 	stw	r2,-8(fp)
        for ( q1=0 ; q1<p ; ++q1 ) {
    2988:	e03ffd15 	stw	zero,-12(fp)
    298c:	00001306 	br	29dc <kf_bfly_generic+0xb0>
            scratch[q1] = Fout[ k  ];
    2990:	e0bffe17 	ldw	r2,-8(fp)
    2994:	100490fa 	slli	r2,r2,3
    2998:	e0fff517 	ldw	r3,-44(fp)
    299c:	1887883a 	add	r3,r3,r2
    29a0:	e0bffd17 	ldw	r2,-12(fp)
    29a4:	100490fa 	slli	r2,r2,3
    29a8:	e13ff817 	ldw	r4,-32(fp)
    29ac:	2085883a 	add	r2,r4,r2
    29b0:	19000017 	ldw	r4,0(r3)
    29b4:	11000015 	stw	r4,0(r2)
    29b8:	18c00117 	ldw	r3,4(r3)
    29bc:	10c00115 	stw	r3,4(r2)
            C_FIXDIV(scratch[q1],p);
            k += m;
    29c0:	e0fffe17 	ldw	r3,-8(fp)
    29c4:	e0bff217 	ldw	r2,-56(fp)
    29c8:	1885883a 	add	r2,r3,r2
    29cc:	e0bffe15 	stw	r2,-8(fp)
        for ( q1=0 ; q1<p ; ++q1 ) {
    29d0:	e0bffd17 	ldw	r2,-12(fp)
    29d4:	10800044 	addi	r2,r2,1
    29d8:	e0bffd15 	stw	r2,-12(fp)
    29dc:	e0fffd17 	ldw	r3,-12(fp)
    29e0:	e0800217 	ldw	r2,8(fp)
    29e4:	18bfea16 	blt	r3,r2,2990 <kf_bfly_generic+0x64>
        }

        k=u;
    29e8:	e0bfff17 	ldw	r2,-4(fp)
    29ec:	e0bffe15 	stw	r2,-8(fp)
        for ( q1=0 ; q1<p ; ++q1 ) {
    29f0:	e03ffd15 	stw	zero,-12(fp)
    29f4:	00007106 	br	2bbc <kf_bfly_generic+0x290>
            int twidx=0;
    29f8:	e03ffb15 	stw	zero,-20(fp)
            Fout[ k ] = scratch[0];
    29fc:	e0bffe17 	ldw	r2,-8(fp)
    2a00:	100490fa 	slli	r2,r2,3
    2a04:	e0fff517 	ldw	r3,-44(fp)
    2a08:	1885883a 	add	r2,r3,r2
    2a0c:	e0fff817 	ldw	r3,-32(fp)
    2a10:	19000017 	ldw	r4,0(r3)
    2a14:	11000015 	stw	r4,0(r2)
    2a18:	18c00117 	ldw	r3,4(r3)
    2a1c:	10c00115 	stw	r3,4(r2)
            for (q=1;q<p;++q ) {
    2a20:	00800044 	movi	r2,1
    2a24:	e0bffc15 	stw	r2,-16(fp)
    2a28:	00005a06 	br	2b94 <kf_bfly_generic+0x268>
                twidx += fstride * k;
    2a2c:	e0bffe17 	ldw	r2,-8(fp)
    2a30:	e17ff417 	ldw	r5,-48(fp)
    2a34:	1009883a 	mov	r4,r2
    2a38:	00079b80 	call	79b8 <__mulsi3>
    2a3c:	1007883a 	mov	r3,r2
    2a40:	e0bffb17 	ldw	r2,-20(fp)
    2a44:	1885883a 	add	r2,r3,r2
    2a48:	e0bffb15 	stw	r2,-20(fp)
                if (twidx>=Norig) twidx-=Norig;
    2a4c:	e0fffb17 	ldw	r3,-20(fp)
    2a50:	e0bff917 	ldw	r2,-28(fp)
    2a54:	18800416 	blt	r3,r2,2a68 <kf_bfly_generic+0x13c>
    2a58:	e0fffb17 	ldw	r3,-20(fp)
    2a5c:	e0bff917 	ldw	r2,-28(fp)
    2a60:	1885c83a 	sub	r2,r3,r2
    2a64:	e0bffb15 	stw	r2,-20(fp)
                C_MUL(t,scratch[q] , twiddles[twidx] );
    2a68:	e0bffc17 	ldw	r2,-16(fp)
    2a6c:	100490fa 	slli	r2,r2,3
    2a70:	e0fff817 	ldw	r3,-32(fp)
    2a74:	1885883a 	add	r2,r3,r2
    2a78:	10c00017 	ldw	r3,0(r2)
    2a7c:	e0bffb17 	ldw	r2,-20(fp)
    2a80:	100490fa 	slli	r2,r2,3
    2a84:	e13ffa17 	ldw	r4,-24(fp)
    2a88:	2089883a 	add	r4,r4,r2
    2a8c:	20800017 	ldw	r2,0(r4)
    2a90:	1887ff32 	custom	252,r3,r3,r2
    2a94:	e0bffc17 	ldw	r2,-16(fp)
    2a98:	100490fa 	slli	r2,r2,3
    2a9c:	e13ff817 	ldw	r4,-32(fp)
    2aa0:	2085883a 	add	r2,r4,r2
    2aa4:	11000117 	ldw	r4,4(r2)
    2aa8:	e0bffb17 	ldw	r2,-20(fp)
    2aac:	100490fa 	slli	r2,r2,3
    2ab0:	e17ffa17 	ldw	r5,-24(fp)
    2ab4:	288b883a 	add	r5,r5,r2
    2ab8:	28800117 	ldw	r2,4(r5)
    2abc:	2085ff32 	custom	252,r2,r4,r2
    2ac0:	1885ffb2 	custom	254,r2,r3,r2
    2ac4:	e0bff615 	stw	r2,-40(fp)
    2ac8:	e0bffc17 	ldw	r2,-16(fp)
    2acc:	100490fa 	slli	r2,r2,3
    2ad0:	e0fff817 	ldw	r3,-32(fp)
    2ad4:	1885883a 	add	r2,r3,r2
    2ad8:	10c00017 	ldw	r3,0(r2)
    2adc:	e0bffb17 	ldw	r2,-20(fp)
    2ae0:	100490fa 	slli	r2,r2,3
    2ae4:	e13ffa17 	ldw	r4,-24(fp)
    2ae8:	2089883a 	add	r4,r4,r2
    2aec:	20800117 	ldw	r2,4(r4)
    2af0:	1887ff32 	custom	252,r3,r3,r2
    2af4:	e0bffc17 	ldw	r2,-16(fp)
    2af8:	100490fa 	slli	r2,r2,3
    2afc:	e13ff817 	ldw	r4,-32(fp)
    2b00:	2085883a 	add	r2,r4,r2
    2b04:	11000117 	ldw	r4,4(r2)
    2b08:	e0bffb17 	ldw	r2,-20(fp)
    2b0c:	100490fa 	slli	r2,r2,3
    2b10:	e17ffa17 	ldw	r5,-24(fp)
    2b14:	288b883a 	add	r5,r5,r2
    2b18:	28800017 	ldw	r2,0(r5)
    2b1c:	2085ff32 	custom	252,r2,r4,r2
    2b20:	1885ff72 	custom	253,r2,r3,r2
    2b24:	e0bff715 	stw	r2,-36(fp)
                C_ADDTO( Fout[ k ] ,t);
    2b28:	e0bffe17 	ldw	r2,-8(fp)
    2b2c:	100490fa 	slli	r2,r2,3
    2b30:	e0fff517 	ldw	r3,-44(fp)
    2b34:	1885883a 	add	r2,r3,r2
    2b38:	11000017 	ldw	r4,0(r2)
    2b3c:	e0fff617 	ldw	r3,-40(fp)
    2b40:	e0bffe17 	ldw	r2,-8(fp)
    2b44:	100490fa 	slli	r2,r2,3
    2b48:	e17ff517 	ldw	r5,-44(fp)
    2b4c:	2885883a 	add	r2,r5,r2
    2b50:	20c7ff72 	custom	253,r3,r4,r3
    2b54:	10c00015 	stw	r3,0(r2)
    2b58:	e0bffe17 	ldw	r2,-8(fp)
    2b5c:	100490fa 	slli	r2,r2,3
    2b60:	e0fff517 	ldw	r3,-44(fp)
    2b64:	1885883a 	add	r2,r3,r2
    2b68:	11000117 	ldw	r4,4(r2)
    2b6c:	e0fff717 	ldw	r3,-36(fp)
    2b70:	e0bffe17 	ldw	r2,-8(fp)
    2b74:	100490fa 	slli	r2,r2,3
    2b78:	e17ff517 	ldw	r5,-44(fp)
    2b7c:	2885883a 	add	r2,r5,r2
    2b80:	20c7ff72 	custom	253,r3,r4,r3
    2b84:	10c00115 	stw	r3,4(r2)
            for (q=1;q<p;++q ) {
    2b88:	e0bffc17 	ldw	r2,-16(fp)
    2b8c:	10800044 	addi	r2,r2,1
    2b90:	e0bffc15 	stw	r2,-16(fp)
    2b94:	e0fffc17 	ldw	r3,-16(fp)
    2b98:	e0800217 	ldw	r2,8(fp)
    2b9c:	18bfa316 	blt	r3,r2,2a2c <kf_bfly_generic+0x100>
            }
            k += m;
    2ba0:	e0fffe17 	ldw	r3,-8(fp)
    2ba4:	e0bff217 	ldw	r2,-56(fp)
    2ba8:	1885883a 	add	r2,r3,r2
    2bac:	e0bffe15 	stw	r2,-8(fp)
        for ( q1=0 ; q1<p ; ++q1 ) {
    2bb0:	e0bffd17 	ldw	r2,-12(fp)
    2bb4:	10800044 	addi	r2,r2,1
    2bb8:	e0bffd15 	stw	r2,-12(fp)
    2bbc:	e0fffd17 	ldw	r3,-12(fp)
    2bc0:	e0800217 	ldw	r2,8(fp)
    2bc4:	18bf8c16 	blt	r3,r2,29f8 <kf_bfly_generic+0xcc>
    for ( u=0; u<m; ++u ) {
    2bc8:	e0bfff17 	ldw	r2,-4(fp)
    2bcc:	10800044 	addi	r2,r2,1
    2bd0:	e0bfff15 	stw	r2,-4(fp)
    2bd4:	e0ffff17 	ldw	r3,-4(fp)
    2bd8:	e0bff217 	ldw	r2,-56(fp)
    2bdc:	18bf6816 	blt	r3,r2,2980 <kf_bfly_generic+0x54>
        }
    }
    KISS_FFT_TMP_FREE(scratch);
    2be0:	e13ff817 	ldw	r4,-32(fp)
    2be4:	000a4e80 	call	a4e8 <free>
}
    2be8:	0001883a 	nop
    2bec:	e037883a 	mov	sp,fp
    2bf0:	dfc00117 	ldw	ra,4(sp)
    2bf4:	df000017 	ldw	fp,0(sp)
    2bf8:	dec00204 	addi	sp,sp,8
    2bfc:	f800283a 	ret

00002c00 <kf_work>:
        const size_t fstride,
        int in_stride,
        int * factors,
        const kiss_fft_cfg st
        )
{
    2c00:	defff404 	addi	sp,sp,-48
    2c04:	dfc00b15 	stw	ra,44(sp)
    2c08:	df000a15 	stw	fp,40(sp)
    2c0c:	df000a04 	addi	fp,sp,40
    2c10:	e13ffb15 	stw	r4,-20(fp)
    2c14:	e17ffa15 	stw	r5,-24(fp)
    2c18:	e1bff915 	stw	r6,-28(fp)
    2c1c:	e1fff815 	stw	r7,-32(fp)
    kiss_fft_cpx * Fout_beg=Fout;
    2c20:	e0bffb17 	ldw	r2,-20(fp)
    2c24:	e0bfff15 	stw	r2,-4(fp)
    const int p=*factors++; /* the radix  */
    2c28:	e0800217 	ldw	r2,8(fp)
    2c2c:	10c00104 	addi	r3,r2,4
    2c30:	e0c00215 	stw	r3,8(fp)
    2c34:	10800017 	ldw	r2,0(r2)
    2c38:	e0bffe15 	stw	r2,-8(fp)
    const int m=*factors++; /* stage's fft length/p */
    2c3c:	e0800217 	ldw	r2,8(fp)
    2c40:	10c00104 	addi	r3,r2,4
    2c44:	e0c00215 	stw	r3,8(fp)
    2c48:	10800017 	ldw	r2,0(r2)
    2c4c:	e0bffd15 	stw	r2,-12(fp)
    const kiss_fft_cpx * Fout_end = Fout + p*m;
    2c50:	e17ffd17 	ldw	r5,-12(fp)
    2c54:	e13ffe17 	ldw	r4,-8(fp)
    2c58:	00079b80 	call	79b8 <__mulsi3>
    2c5c:	100490fa 	slli	r2,r2,3
    2c60:	e0fffb17 	ldw	r3,-20(fp)
    2c64:	1885883a 	add	r2,r3,r2
    2c68:	e0bffc15 	stw	r2,-16(fp)
        }
        return;
    }
#endif

    if (m==1) {
    2c6c:	e0bffd17 	ldw	r2,-12(fp)
    2c70:	10800058 	cmpnei	r2,r2,1
    2c74:	1000151e 	bne	r2,zero,2ccc <kf_work+0xcc>
        do{
            *Fout = *f;
    2c78:	e0bffb17 	ldw	r2,-20(fp)
    2c7c:	e0fffa17 	ldw	r3,-24(fp)
    2c80:	19000017 	ldw	r4,0(r3)
    2c84:	11000015 	stw	r4,0(r2)
    2c88:	18c00117 	ldw	r3,4(r3)
    2c8c:	10c00115 	stw	r3,4(r2)
            f += fstride*in_stride;
    2c90:	e0bff817 	ldw	r2,-32(fp)
    2c94:	e17ff917 	ldw	r5,-28(fp)
    2c98:	1009883a 	mov	r4,r2
    2c9c:	00079b80 	call	79b8 <__mulsi3>
    2ca0:	100490fa 	slli	r2,r2,3
    2ca4:	e0fffa17 	ldw	r3,-24(fp)
    2ca8:	1885883a 	add	r2,r3,r2
    2cac:	e0bffa15 	stw	r2,-24(fp)
        }while(++Fout != Fout_end );
    2cb0:	e0bffb17 	ldw	r2,-20(fp)
    2cb4:	10800204 	addi	r2,r2,8
    2cb8:	e0bffb15 	stw	r2,-20(fp)
    2cbc:	e0fffb17 	ldw	r3,-20(fp)
    2cc0:	e0bffc17 	ldw	r2,-16(fp)
    2cc4:	18bfec1e 	bne	r3,r2,2c78 <kf_work+0x78>
    2cc8:	00001e06 	br	2d44 <kf_work+0x144>
        do{
            // recursive call:
            // DFT of size m*p performed by doing
            // p instances of smaller DFTs of size m, 
            // each one takes a decimated version of the input
            kf_work( Fout , f, fstride*p, in_stride, factors,st);
    2ccc:	e0bffe17 	ldw	r2,-8(fp)
    2cd0:	e17ff917 	ldw	r5,-28(fp)
    2cd4:	1009883a 	mov	r4,r2
    2cd8:	00079b80 	call	79b8 <__mulsi3>
    2cdc:	1007883a 	mov	r3,r2
    2ce0:	e0800317 	ldw	r2,12(fp)
    2ce4:	d8800115 	stw	r2,4(sp)
    2ce8:	e0800217 	ldw	r2,8(fp)
    2cec:	d8800015 	stw	r2,0(sp)
    2cf0:	e1fff817 	ldw	r7,-32(fp)
    2cf4:	180d883a 	mov	r6,r3
    2cf8:	e17ffa17 	ldw	r5,-24(fp)
    2cfc:	e13ffb17 	ldw	r4,-20(fp)
    2d00:	0002c000 	call	2c00 <kf_work>
            f += fstride*in_stride;
    2d04:	e0bff817 	ldw	r2,-32(fp)
    2d08:	e17ff917 	ldw	r5,-28(fp)
    2d0c:	1009883a 	mov	r4,r2
    2d10:	00079b80 	call	79b8 <__mulsi3>
    2d14:	100490fa 	slli	r2,r2,3
    2d18:	e0fffa17 	ldw	r3,-24(fp)
    2d1c:	1885883a 	add	r2,r3,r2
    2d20:	e0bffa15 	stw	r2,-24(fp)
        }while( (Fout += m) != Fout_end );
    2d24:	e0bffd17 	ldw	r2,-12(fp)
    2d28:	100490fa 	slli	r2,r2,3
    2d2c:	e0fffb17 	ldw	r3,-20(fp)
    2d30:	1885883a 	add	r2,r3,r2
    2d34:	e0bffb15 	stw	r2,-20(fp)
    2d38:	e0fffb17 	ldw	r3,-20(fp)
    2d3c:	e0bffc17 	ldw	r2,-16(fp)
    2d40:	18bfe21e 	bne	r3,r2,2ccc <kf_work+0xcc>
    }

    Fout=Fout_beg;
    2d44:	e0bfff17 	ldw	r2,-4(fp)
    2d48:	e0bffb15 	stw	r2,-20(fp)

    // recombine the p smaller DFTs 
    switch (p) {
    2d4c:	e0bffe17 	ldw	r2,-8(fp)
    2d50:	10800160 	cmpeqi	r2,r2,5
    2d54:	1000241e 	bne	r2,zero,2de8 <kf_work+0x1e8>
    2d58:	e0bffe17 	ldw	r2,-8(fp)
    2d5c:	10800188 	cmpgei	r2,r2,6
    2d60:	1000271e 	bne	r2,zero,2e00 <kf_work+0x200>
    2d64:	e0bffe17 	ldw	r2,-8(fp)
    2d68:	10800120 	cmpeqi	r2,r2,4
    2d6c:	1000171e 	bne	r2,zero,2dcc <kf_work+0x1cc>
    2d70:	e0bffe17 	ldw	r2,-8(fp)
    2d74:	10800148 	cmpgei	r2,r2,5
    2d78:	1000211e 	bne	r2,zero,2e00 <kf_work+0x200>
    2d7c:	e0bffe17 	ldw	r2,-8(fp)
    2d80:	108000a0 	cmpeqi	r2,r2,2
    2d84:	1000041e 	bne	r2,zero,2d98 <kf_work+0x198>
    2d88:	e0bffe17 	ldw	r2,-8(fp)
    2d8c:	108000e0 	cmpeqi	r2,r2,3
    2d90:	1000071e 	bne	r2,zero,2db0 <kf_work+0x1b0>
    2d94:	00001a06 	br	2e00 <kf_work+0x200>
        case 2: kf_bfly2(Fout,fstride,st,m); break;
    2d98:	e1fffd17 	ldw	r7,-12(fp)
    2d9c:	e1800317 	ldw	r6,12(fp)
    2da0:	e17ff917 	ldw	r5,-28(fp)
    2da4:	e13ffb17 	ldw	r4,-20(fp)
    2da8:	000181c0 	call	181c <kf_bfly2>
    2dac:	00001c06 	br	2e20 <kf_work+0x220>
        case 3: kf_bfly3(Fout,fstride,st,m); break; 
    2db0:	e0bffd17 	ldw	r2,-12(fp)
    2db4:	100f883a 	mov	r7,r2
    2db8:	e1800317 	ldw	r6,12(fp)
    2dbc:	e17ff917 	ldw	r5,-28(fp)
    2dc0:	e13ffb17 	ldw	r4,-20(fp)
    2dc4:	0001e240 	call	1e24 <kf_bfly3>
    2dc8:	00001506 	br	2e20 <kf_work+0x220>
        case 4: kf_bfly4(Fout,fstride,st,m); break;
    2dcc:	e0bffd17 	ldw	r2,-12(fp)
    2dd0:	100f883a 	mov	r7,r2
    2dd4:	e1800317 	ldw	r6,12(fp)
    2dd8:	e17ff917 	ldw	r5,-28(fp)
    2ddc:	e13ffb17 	ldw	r4,-20(fp)
    2de0:	00019700 	call	1970 <kf_bfly4>
    2de4:	00000e06 	br	2e20 <kf_work+0x220>
        case 5: kf_bfly5(Fout,fstride,st,m); break; 
    2de8:	e1fffd17 	ldw	r7,-12(fp)
    2dec:	e1800317 	ldw	r6,12(fp)
    2df0:	e17ff917 	ldw	r5,-28(fp)
    2df4:	e13ffb17 	ldw	r4,-20(fp)
    2df8:	00021c40 	call	21c4 <kf_bfly5>
    2dfc:	00000806 	br	2e20 <kf_work+0x220>
        default: kf_bfly_generic(Fout,fstride,st,m,p); break;
    2e00:	e0bffe17 	ldw	r2,-8(fp)
    2e04:	d8800015 	stw	r2,0(sp)
    2e08:	e1fffd17 	ldw	r7,-12(fp)
    2e0c:	e1800317 	ldw	r6,12(fp)
    2e10:	e17ff917 	ldw	r5,-28(fp)
    2e14:	e13ffb17 	ldw	r4,-20(fp)
    2e18:	000292c0 	call	292c <kf_bfly_generic>
    2e1c:	0001883a 	nop
    }
}
    2e20:	0001883a 	nop
    2e24:	e037883a 	mov	sp,fp
    2e28:	dfc00117 	ldw	ra,4(sp)
    2e2c:	df000017 	ldw	fp,0(sp)
    2e30:	dec00204 	addi	sp,sp,8
    2e34:	f800283a 	ret

00002e38 <kf_factor>:
    where 
    p[i] * m[i] = m[i-1]
    m0 = n                  */
static 
void kf_factor(int n,int * facbuf)
{
    2e38:	defff904 	addi	sp,sp,-28
    2e3c:	dfc00615 	stw	ra,24(sp)
    2e40:	df000515 	stw	fp,20(sp)
    2e44:	df000504 	addi	fp,sp,20
    2e48:	e13ffc15 	stw	r4,-16(fp)
    2e4c:	e17ffb15 	stw	r5,-20(fp)
    int p=4;
    2e50:	00800104 	movi	r2,4
    2e54:	e0bfff15 	stw	r2,-4(fp)
    double floor_sqrt;
    floor_sqrt = floor( sqrt((double)n) );
    2e58:	e13ffc17 	ldw	r4,-16(fp)
    2e5c:	000a1540 	call	a154 <__floatsidf>
    2e60:	100d883a 	mov	r6,r2
    2e64:	180f883a 	mov	r7,r3
    2e68:	3009883a 	mov	r4,r6
    2e6c:	380b883a 	mov	r5,r7
    2e70:	0003b600 	call	3b60 <sqrt>
    2e74:	100d883a 	mov	r6,r2
    2e78:	180f883a 	mov	r7,r3
    2e7c:	3009883a 	mov	r4,r6
    2e80:	380b883a 	mov	r5,r7
    2e84:	00034740 	call	3474 <floor>
    2e88:	e0bffd15 	stw	r2,-12(fp)
    2e8c:	e0fffe15 	stw	r3,-8(fp)

    /*factor out powers of 4, powers of 2, then any remaining primes */
    do {
        while (n % p) {
    2e90:	00001d06 	br	2f08 <kf_factor+0xd0>
            switch (p) {
    2e94:	e0bfff17 	ldw	r2,-4(fp)
    2e98:	108000a0 	cmpeqi	r2,r2,2
    2e9c:	1000061e 	bne	r2,zero,2eb8 <kf_factor+0x80>
    2ea0:	e0bfff17 	ldw	r2,-4(fp)
    2ea4:	10800118 	cmpnei	r2,r2,4
    2ea8:	1000061e 	bne	r2,zero,2ec4 <kf_factor+0x8c>
                case 4: p = 2; break;
    2eac:	00800084 	movi	r2,2
    2eb0:	e0bfff15 	stw	r2,-4(fp)
    2eb4:	00000706 	br	2ed4 <kf_factor+0x9c>
                case 2: p = 3; break;
    2eb8:	008000c4 	movi	r2,3
    2ebc:	e0bfff15 	stw	r2,-4(fp)
    2ec0:	00000406 	br	2ed4 <kf_factor+0x9c>
                default: p += 2; break;
    2ec4:	e0bfff17 	ldw	r2,-4(fp)
    2ec8:	10800084 	addi	r2,r2,2
    2ecc:	e0bfff15 	stw	r2,-4(fp)
    2ed0:	0001883a 	nop
            }
            if (p > floor_sqrt)
    2ed4:	e13fff17 	ldw	r4,-4(fp)
    2ed8:	000a1540 	call	a154 <__floatsidf>
    2edc:	1009883a 	mov	r4,r2
    2ee0:	180b883a 	mov	r5,r3
    2ee4:	200d883a 	mov	r6,r4
    2ee8:	280f883a 	mov	r7,r5
    2eec:	e13ffd17 	ldw	r4,-12(fp)
    2ef0:	e17ffe17 	ldw	r5,-8(fp)
    2ef4:	0008ee00 	call	8ee0 <__ledf2>
    2ef8:	10000116 	blt	r2,zero,2f00 <kf_factor+0xc8>
    2efc:	00000206 	br	2f08 <kf_factor+0xd0>
                p = n;          /* no more factors, skip to end */
    2f00:	e0bffc17 	ldw	r2,-16(fp)
    2f04:	e0bfff15 	stw	r2,-4(fp)
        while (n % p) {
    2f08:	e0bffc17 	ldw	r2,-16(fp)
    2f0c:	e17fff17 	ldw	r5,-4(fp)
    2f10:	1009883a 	mov	r4,r2
    2f14:	00078840 	call	7884 <__modsi3>
    2f18:	103fde1e 	bne	r2,zero,2e94 <kf_factor+0x5c>
        }
        n /= p;
    2f1c:	e17fff17 	ldw	r5,-4(fp)
    2f20:	e13ffc17 	ldw	r4,-16(fp)
    2f24:	00078040 	call	7804 <__divsi3>
    2f28:	e0bffc15 	stw	r2,-16(fp)
        *facbuf++ = p;
    2f2c:	e0bffb17 	ldw	r2,-20(fp)
    2f30:	10c00104 	addi	r3,r2,4
    2f34:	e0fffb15 	stw	r3,-20(fp)
    2f38:	e0ffff17 	ldw	r3,-4(fp)
    2f3c:	10c00015 	stw	r3,0(r2)
        *facbuf++ = n;
    2f40:	e0bffb17 	ldw	r2,-20(fp)
    2f44:	10c00104 	addi	r3,r2,4
    2f48:	e0fffb15 	stw	r3,-20(fp)
    2f4c:	e0fffc17 	ldw	r3,-16(fp)
    2f50:	10c00015 	stw	r3,0(r2)
    } while (n > 1);
    2f54:	e0bffc17 	ldw	r2,-16(fp)
    2f58:	10800088 	cmpgei	r2,r2,2
    2f5c:	103fea1e 	bne	r2,zero,2f08 <kf_factor+0xd0>
}
    2f60:	0001883a 	nop
    2f64:	0001883a 	nop
    2f68:	e037883a 	mov	sp,fp
    2f6c:	dfc00117 	ldw	ra,4(sp)
    2f70:	df000017 	ldw	fp,0(sp)
    2f74:	dec00204 	addi	sp,sp,8
    2f78:	f800283a 	ret

00002f7c <kiss_fft_alloc>:
 *
 * The return value is a contiguous block of memory, allocated with malloc.  As such,
 * It can be freed with free(), rather than a kiss_fft-specific function.
 * */
kiss_fft_cfg kiss_fft_alloc(int nfft,int inverse_fft,void * mem,size_t * lenmem )
{
    2f7c:	deffef04 	addi	sp,sp,-68
    2f80:	dfc01015 	stw	ra,64(sp)
    2f84:	df000f15 	stw	fp,60(sp)
    2f88:	dcc00e15 	stw	r19,56(sp)
    2f8c:	dc800d15 	stw	r18,52(sp)
    2f90:	dc400c15 	stw	r17,48(sp)
    2f94:	dc000b15 	stw	r16,44(sp)
    2f98:	df000f04 	addi	fp,sp,60
    2f9c:	e13ff415 	stw	r4,-48(fp)
    2fa0:	e17ff315 	stw	r5,-52(fp)
    2fa4:	e1bff215 	stw	r6,-56(fp)
    2fa8:	e1fff115 	stw	r7,-60(fp)
    kiss_fft_cfg st=NULL;
    2fac:	e03ffb15 	stw	zero,-20(fp)
    size_t memneeded = sizeof(struct kiss_fft_state)
        + sizeof(kiss_fft_cpx)*(nfft-1); /* twiddle factors*/
    2fb0:	e0bff417 	ldw	r2,-48(fp)
    2fb4:	10800844 	addi	r2,r2,33
    size_t memneeded = sizeof(struct kiss_fft_state)
    2fb8:	100490fa 	slli	r2,r2,3
    2fbc:	e0bff715 	stw	r2,-36(fp)

    if ( lenmem==NULL ) {
    2fc0:	e0bff117 	ldw	r2,-60(fp)
    2fc4:	1000041e 	bne	r2,zero,2fd8 <kiss_fft_alloc+0x5c>
        st = ( kiss_fft_cfg)KISS_FFT_MALLOC( memneeded );
    2fc8:	e13ff717 	ldw	r4,-36(fp)
    2fcc:	000a4d80 	call	a4d8 <malloc>
    2fd0:	e0bffb15 	stw	r2,-20(fp)
    2fd4:	00000b06 	br	3004 <kiss_fft_alloc+0x88>
    }else{
        if (mem != NULL && *lenmem >= memneeded)
    2fd8:	e0bff217 	ldw	r2,-56(fp)
    2fdc:	10000626 	beq	r2,zero,2ff8 <kiss_fft_alloc+0x7c>
    2fe0:	e0bff117 	ldw	r2,-60(fp)
    2fe4:	10c00017 	ldw	r3,0(r2)
    2fe8:	e0bff717 	ldw	r2,-36(fp)
    2fec:	18800236 	bltu	r3,r2,2ff8 <kiss_fft_alloc+0x7c>
            st = (kiss_fft_cfg)mem;
    2ff0:	e0bff217 	ldw	r2,-56(fp)
    2ff4:	e0bffb15 	stw	r2,-20(fp)
        *lenmem = memneeded;
    2ff8:	e0bff117 	ldw	r2,-60(fp)
    2ffc:	e0fff717 	ldw	r3,-36(fp)
    3000:	10c00015 	stw	r3,0(r2)
    }
    if (st) {
    3004:	e0bffb17 	ldw	r2,-20(fp)
    3008:	10006126 	beq	r2,zero,3190 <kiss_fft_alloc+0x214>
        int i;
        st->nfft=nfft;
    300c:	e0bffb17 	ldw	r2,-20(fp)
    3010:	e0fff417 	ldw	r3,-48(fp)
    3014:	10c00015 	stw	r3,0(r2)
        st->inverse = inverse_fft;
    3018:	e0bffb17 	ldw	r2,-20(fp)
    301c:	e0fff317 	ldw	r3,-52(fp)
    3020:	10c00115 	stw	r3,4(r2)

        for (i=0;i<nfft;++i) {
    3024:	e03ffa15 	stw	zero,-24(fp)
    3028:	00005106 	br	3170 <kiss_fft_alloc+0x1f4>
            const double pi=3.141592653589793238462643383279502884197169399375105820974944;
    302c:	00980034 	movhi	r2,24576
    3030:	e0bff515 	stw	r2,-44(fp)
    3034:	00900274 	movhi	r2,16393
    3038:	10887ec4 	addi	r2,r2,8699
    303c:	e0bff615 	stw	r2,-40(fp)
            double phase = -2*pi*i / nfft;
    3040:	000d883a 	mov	r6,zero
    3044:	01f00034 	movhi	r7,49152
    3048:	e13ff517 	ldw	r4,-44(fp)
    304c:	e17ff617 	ldw	r5,-40(fp)
    3050:	0008fc80 	call	8fc8 <__muldf3>
    3054:	1009883a 	mov	r4,r2
    3058:	180b883a 	mov	r5,r3
    305c:	2025883a 	mov	r18,r4
    3060:	2827883a 	mov	r19,r5
    3064:	e13ffa17 	ldw	r4,-24(fp)
    3068:	000a1540 	call	a154 <__floatsidf>
    306c:	1009883a 	mov	r4,r2
    3070:	180b883a 	mov	r5,r3
    3074:	200d883a 	mov	r6,r4
    3078:	280f883a 	mov	r7,r5
    307c:	9009883a 	mov	r4,r18
    3080:	980b883a 	mov	r5,r19
    3084:	0008fc80 	call	8fc8 <__muldf3>
    3088:	1009883a 	mov	r4,r2
    308c:	180b883a 	mov	r5,r3
    3090:	2025883a 	mov	r18,r4
    3094:	2827883a 	mov	r19,r5
    3098:	e13ff417 	ldw	r4,-48(fp)
    309c:	000a1540 	call	a154 <__floatsidf>
    30a0:	1009883a 	mov	r4,r2
    30a4:	180b883a 	mov	r5,r3
    30a8:	200d883a 	mov	r6,r4
    30ac:	280f883a 	mov	r7,r5
    30b0:	9009883a 	mov	r4,r18
    30b4:	980b883a 	mov	r5,r19
    30b8:	00084640 	call	8464 <__divdf3>
    30bc:	1009883a 	mov	r4,r2
    30c0:	180b883a 	mov	r5,r3
    30c4:	e13ff815 	stw	r4,-32(fp)
    30c8:	e17ff915 	stw	r5,-28(fp)
            if (st->inverse)
    30cc:	e0bffb17 	ldw	r2,-20(fp)
    30d0:	10800117 	ldw	r2,4(r2)
    30d4:	10000526 	beq	r2,zero,30ec <kiss_fft_alloc+0x170>
                phase *= -1;
    30d8:	e43ff817 	ldw	r16,-32(fp)
    30dc:	e0bff917 	ldw	r2,-28(fp)
    30e0:	1460003c 	xorhi	r17,r2,32768
    30e4:	e43ff815 	stw	r16,-32(fp)
    30e8:	e47ff915 	stw	r17,-28(fp)
            kf_cexp(st->twiddles+i, phase );
    30ec:	e13ff817 	ldw	r4,-32(fp)
    30f0:	e17ff917 	ldw	r5,-28(fp)
    30f4:	00033c40 	call	33c4 <cos>
    30f8:	100d883a 	mov	r6,r2
    30fc:	180f883a 	mov	r7,r3
    3100:	e0bffb17 	ldw	r2,-20(fp)
    3104:	10c04204 	addi	r3,r2,264
    3108:	e0bffa17 	ldw	r2,-24(fp)
    310c:	100490fa 	slli	r2,r2,3
    3110:	18a5883a 	add	r18,r3,r2
    3114:	3009883a 	mov	r4,r6
    3118:	380b883a 	mov	r5,r7
    311c:	000a3080 	call	a308 <__truncdfsf2>
    3120:	1007883a 	mov	r3,r2
    3124:	90c00015 	stw	r3,0(r18)
    3128:	e13ff817 	ldw	r4,-32(fp)
    312c:	e17ff917 	ldw	r5,-28(fp)
    3130:	00036580 	call	3658 <sin>
    3134:	100d883a 	mov	r6,r2
    3138:	180f883a 	mov	r7,r3
    313c:	e0bffb17 	ldw	r2,-20(fp)
    3140:	10c04204 	addi	r3,r2,264
    3144:	e0bffa17 	ldw	r2,-24(fp)
    3148:	100490fa 	slli	r2,r2,3
    314c:	18a5883a 	add	r18,r3,r2
    3150:	3009883a 	mov	r4,r6
    3154:	380b883a 	mov	r5,r7
    3158:	000a3080 	call	a308 <__truncdfsf2>
    315c:	1007883a 	mov	r3,r2
    3160:	90c00115 	stw	r3,4(r18)
        for (i=0;i<nfft;++i) {
    3164:	e0bffa17 	ldw	r2,-24(fp)
    3168:	10800044 	addi	r2,r2,1
    316c:	e0bffa15 	stw	r2,-24(fp)
    3170:	e0fffa17 	ldw	r3,-24(fp)
    3174:	e0bff417 	ldw	r2,-48(fp)
    3178:	18bfac16 	blt	r3,r2,302c <kiss_fft_alloc+0xb0>
        }

        kf_factor(nfft,st->factors);
    317c:	e0bffb17 	ldw	r2,-20(fp)
    3180:	10800204 	addi	r2,r2,8
    3184:	100b883a 	mov	r5,r2
    3188:	e13ff417 	ldw	r4,-48(fp)
    318c:	0002e380 	call	2e38 <kf_factor>
    }
    return st;
    3190:	e0bffb17 	ldw	r2,-20(fp)
}
    3194:	e6fffc04 	addi	sp,fp,-16
    3198:	dfc00517 	ldw	ra,20(sp)
    319c:	df000417 	ldw	fp,16(sp)
    31a0:	dcc00317 	ldw	r19,12(sp)
    31a4:	dc800217 	ldw	r18,8(sp)
    31a8:	dc400117 	ldw	r17,4(sp)
    31ac:	dc000017 	ldw	r16,0(sp)
    31b0:	dec00604 	addi	sp,sp,24
    31b4:	f800283a 	ret

000031b8 <kiss_fft_stride>:


void kiss_fft_stride(kiss_fft_cfg st,const kiss_fft_cpx *fin,kiss_fft_cpx *fout,int in_stride)
{
    31b8:	defff704 	addi	sp,sp,-36
    31bc:	dfc00815 	stw	ra,32(sp)
    31c0:	df000715 	stw	fp,28(sp)
    31c4:	df000704 	addi	fp,sp,28
    31c8:	e13ffe15 	stw	r4,-8(fp)
    31cc:	e17ffd15 	stw	r5,-12(fp)
    31d0:	e1bffc15 	stw	r6,-16(fp)
    31d4:	e1fffb15 	stw	r7,-20(fp)
    if (fin == fout) {
    31d8:	e0fffd17 	ldw	r3,-12(fp)
    31dc:	e0bffc17 	ldw	r2,-16(fp)
    31e0:	18801a1e 	bne	r3,r2,324c <kiss_fft_stride+0x94>
        //NOTE: this is not really an in-place FFT algorithm.
        //It just performs an out-of-place FFT into a temp buffer
        kiss_fft_cpx * tmpbuf = (kiss_fft_cpx*)KISS_FFT_TMP_ALLOC( sizeof(kiss_fft_cpx)*st->nfft);
    31e4:	e0bffe17 	ldw	r2,-8(fp)
    31e8:	10800017 	ldw	r2,0(r2)
    31ec:	100490fa 	slli	r2,r2,3
    31f0:	1009883a 	mov	r4,r2
    31f4:	000a4d80 	call	a4d8 <malloc>
    31f8:	e0bfff15 	stw	r2,-4(fp)
        kf_work(tmpbuf,fin,1,in_stride, st->factors,st);
    31fc:	e0bffe17 	ldw	r2,-8(fp)
    3200:	10800204 	addi	r2,r2,8
    3204:	e0fffe17 	ldw	r3,-8(fp)
    3208:	d8c00115 	stw	r3,4(sp)
    320c:	d8800015 	stw	r2,0(sp)
    3210:	e1fffb17 	ldw	r7,-20(fp)
    3214:	01800044 	movi	r6,1
    3218:	e17ffd17 	ldw	r5,-12(fp)
    321c:	e13fff17 	ldw	r4,-4(fp)
    3220:	0002c000 	call	2c00 <kf_work>
        memcpy(fout,tmpbuf,sizeof(kiss_fft_cpx)*st->nfft);
    3224:	e0bffe17 	ldw	r2,-8(fp)
    3228:	10800017 	ldw	r2,0(r2)
    322c:	100490fa 	slli	r2,r2,3
    3230:	100d883a 	mov	r6,r2
    3234:	e17fff17 	ldw	r5,-4(fp)
    3238:	e13ffc17 	ldw	r4,-16(fp)
    323c:	000acd80 	call	acd8 <memcpy>
        KISS_FFT_TMP_FREE(tmpbuf);
    3240:	e13fff17 	ldw	r4,-4(fp)
    3244:	000a4e80 	call	a4e8 <free>
    }else{
        kf_work( fout, fin, 1,in_stride, st->factors,st );
    }
}
    3248:	00000a06 	br	3274 <kiss_fft_stride+0xbc>
        kf_work( fout, fin, 1,in_stride, st->factors,st );
    324c:	e0bffe17 	ldw	r2,-8(fp)
    3250:	10800204 	addi	r2,r2,8
    3254:	e0fffe17 	ldw	r3,-8(fp)
    3258:	d8c00115 	stw	r3,4(sp)
    325c:	d8800015 	stw	r2,0(sp)
    3260:	e1fffb17 	ldw	r7,-20(fp)
    3264:	01800044 	movi	r6,1
    3268:	e17ffd17 	ldw	r5,-12(fp)
    326c:	e13ffc17 	ldw	r4,-16(fp)
    3270:	0002c000 	call	2c00 <kf_work>
}
    3274:	0001883a 	nop
    3278:	e037883a 	mov	sp,fp
    327c:	dfc00117 	ldw	ra,4(sp)
    3280:	df000017 	ldw	fp,0(sp)
    3284:	dec00204 	addi	sp,sp,8
    3288:	f800283a 	ret

0000328c <kiss_fft>:

void kiss_fft(kiss_fft_cfg cfg,const kiss_fft_cpx *fin,kiss_fft_cpx *fout)
{
    328c:	defffb04 	addi	sp,sp,-20
    3290:	dfc00415 	stw	ra,16(sp)
    3294:	df000315 	stw	fp,12(sp)
    3298:	df000304 	addi	fp,sp,12
    329c:	e13fff15 	stw	r4,-4(fp)
    32a0:	e17ffe15 	stw	r5,-8(fp)
    32a4:	e1bffd15 	stw	r6,-12(fp)
    kiss_fft_stride(cfg,fin,fout,1);
    32a8:	01c00044 	movi	r7,1
    32ac:	e1bffd17 	ldw	r6,-12(fp)
    32b0:	e17ffe17 	ldw	r5,-8(fp)
    32b4:	e13fff17 	ldw	r4,-4(fp)
    32b8:	00031b80 	call	31b8 <kiss_fft_stride>
}
    32bc:	0001883a 	nop
    32c0:	e037883a 	mov	sp,fp
    32c4:	dfc00117 	ldw	ra,4(sp)
    32c8:	df000017 	ldw	fp,0(sp)
    32cc:	dec00204 	addi	sp,sp,8
    32d0:	f800283a 	ret

000032d4 <kiss_fft_cleanup>:


void kiss_fft_cleanup(void)
{
    32d4:	deffff04 	addi	sp,sp,-4
    32d8:	df000015 	stw	fp,0(sp)
    32dc:	d839883a 	mov	fp,sp
    // nothing needed any more
}
    32e0:	0001883a 	nop
    32e4:	e037883a 	mov	sp,fp
    32e8:	df000017 	ldw	fp,0(sp)
    32ec:	dec00104 	addi	sp,sp,4
    32f0:	f800283a 	ret

000032f4 <kiss_fft_next_fast_size>:

int kiss_fft_next_fast_size(int n)
{
    32f4:	defffc04 	addi	sp,sp,-16
    32f8:	dfc00315 	stw	ra,12(sp)
    32fc:	df000215 	stw	fp,8(sp)
    3300:	df000204 	addi	fp,sp,8
    3304:	e13ffe15 	stw	r4,-8(fp)
    while(1) {
        int m=n;
    3308:	e0bffe17 	ldw	r2,-8(fp)
    330c:	e0bfff15 	stw	r2,-4(fp)
        while ( (m%2) == 0 ) m/=2;
    3310:	00000506 	br	3328 <kiss_fft_next_fast_size+0x34>
    3314:	e0bfff17 	ldw	r2,-4(fp)
    3318:	1006d7fa 	srli	r3,r2,31
    331c:	1885883a 	add	r2,r3,r2
    3320:	1005d07a 	srai	r2,r2,1
    3324:	e0bfff15 	stw	r2,-4(fp)
    3328:	e0bfff17 	ldw	r2,-4(fp)
    332c:	1080004c 	andi	r2,r2,1
    3330:	103ff826 	beq	r2,zero,3314 <kiss_fft_next_fast_size+0x20>
        while ( (m%3) == 0 ) m/=3;
    3334:	00000506 	br	334c <kiss_fft_next_fast_size+0x58>
    3338:	e0bfff17 	ldw	r2,-4(fp)
    333c:	014000c4 	movi	r5,3
    3340:	1009883a 	mov	r4,r2
    3344:	00078040 	call	7804 <__divsi3>
    3348:	e0bfff15 	stw	r2,-4(fp)
    334c:	e0bfff17 	ldw	r2,-4(fp)
    3350:	014000c4 	movi	r5,3
    3354:	1009883a 	mov	r4,r2
    3358:	00078840 	call	7884 <__modsi3>
    335c:	103ff626 	beq	r2,zero,3338 <kiss_fft_next_fast_size+0x44>
        while ( (m%5) == 0 ) m/=5;
    3360:	00000506 	br	3378 <kiss_fft_next_fast_size+0x84>
    3364:	e0bfff17 	ldw	r2,-4(fp)
    3368:	01400144 	movi	r5,5
    336c:	1009883a 	mov	r4,r2
    3370:	00078040 	call	7804 <__divsi3>
    3374:	e0bfff15 	stw	r2,-4(fp)
    3378:	e0bfff17 	ldw	r2,-4(fp)
    337c:	01400144 	movi	r5,5
    3380:	1009883a 	mov	r4,r2
    3384:	00078840 	call	7884 <__modsi3>
    3388:	103ff626 	beq	r2,zero,3364 <kiss_fft_next_fast_size+0x70>
        if (m<=1)
    338c:	e0bfff17 	ldw	r2,-4(fp)
    3390:	10800088 	cmpgei	r2,r2,2
    3394:	10000426 	beq	r2,zero,33a8 <kiss_fft_next_fast_size+0xb4>
            break; /* n is completely factorable by twos, threes, and fives */
        n++;
    3398:	e0bffe17 	ldw	r2,-8(fp)
    339c:	10800044 	addi	r2,r2,1
    33a0:	e0bffe15 	stw	r2,-8(fp)
    while(1) {
    33a4:	003fd806 	br	3308 <kiss_fft_next_fast_size+0x14>
            break; /* n is completely factorable by twos, threes, and fives */
    33a8:	0001883a 	nop
    }
    return n;
    33ac:	e0bffe17 	ldw	r2,-8(fp)
}
    33b0:	e037883a 	mov	sp,fp
    33b4:	dfc00117 	ldw	ra,4(sp)
    33b8:	df000017 	ldw	fp,0(sp)
    33bc:	dec00204 	addi	sp,sp,8
    33c0:	f800283a 	ret

000033c4 <cos>:
    33c4:	00a00034 	movhi	r2,32768
    33c8:	10bfffc4 	addi	r2,r2,-1
    33cc:	00cffa74 	movhi	r3,16361
    33d0:	2884703a 	and	r2,r5,r2
    33d4:	18c87ec4 	addi	r3,r3,8699
    33d8:	18801a0e 	bge	r3,r2,3444 <cos+0x80>
    33dc:	defffa04 	addi	sp,sp,-24
    33e0:	dfc00515 	stw	ra,20(sp)
    33e4:	00dffc34 	movhi	r3,32752
    33e8:	10c00616 	blt	r2,r3,3404 <cos+0x40>
    33ec:	280f883a 	mov	r7,r5
    33f0:	200d883a 	mov	r6,r4
    33f4:	00097740 	call	9774 <__subdf3>
    33f8:	dfc00517 	ldw	ra,20(sp)
    33fc:	dec00604 	addi	sp,sp,24
    3400:	f800283a 	ret
    3404:	d9800104 	addi	r6,sp,4
    3408:	00055640 	call	5564 <__ieee754_rem_pio2>
    340c:	108000cc 	andi	r2,r2,3
    3410:	10c00060 	cmpeqi	r3,r2,1
    3414:	d9800317 	ldw	r6,12(sp)
    3418:	d9c00417 	ldw	r7,16(sp)
    341c:	d9000117 	ldw	r4,4(sp)
    3420:	d9400217 	ldw	r5,8(sp)
    3424:	18000a1e 	bne	r3,zero,3450 <cos+0x8c>
    3428:	10c000a0 	cmpeqi	r3,r2,2
    342c:	18000e1e 	bne	r3,zero,3468 <cos+0xa4>
    3430:	10000b26 	beq	r2,zero,3460 <cos+0x9c>
    3434:	00800044 	movi	r2,1
    3438:	d8800015 	stw	r2,0(sp)
    343c:	00070dc0 	call	70dc <__kernel_sin>
    3440:	003fed06 	br	33f8 <cos+0x34>
    3444:	000d883a 	mov	r6,zero
    3448:	000f883a 	mov	r7,zero
    344c:	0005f1c1 	jmpi	5f1c <__kernel_cos>
    3450:	d8800015 	stw	r2,0(sp)
    3454:	00070dc0 	call	70dc <__kernel_sin>
    3458:	18e0003c 	xorhi	r3,r3,32768
    345c:	003fe606 	br	33f8 <cos+0x34>
    3460:	0005f1c0 	call	5f1c <__kernel_cos>
    3464:	003fe406 	br	33f8 <cos+0x34>
    3468:	0005f1c0 	call	5f1c <__kernel_cos>
    346c:	18e0003c 	xorhi	r3,r3,32768
    3470:	003fe106 	br	33f8 <cos+0x34>

00003474 <floor>:
    3474:	280fd53a 	srai	r7,r5,20
    3478:	defffb04 	addi	sp,sp,-20
    347c:	dc800215 	stw	r18,8(sp)
    3480:	39c1ffcc 	andi	r7,r7,2047
    3484:	3cbf0044 	addi	r18,r7,-1023
    3488:	dc400115 	stw	r17,4(sp)
    348c:	dc000015 	stw	r16,0(sp)
    3490:	dfc00415 	stw	ra,16(sp)
    3494:	dcc00315 	stw	r19,12(sp)
    3498:	90800508 	cmpgei	r2,r18,20
    349c:	2821883a 	mov	r16,r5
    34a0:	200d883a 	mov	r6,r4
    34a4:	2023883a 	mov	r17,r4
    34a8:	10002b1e 	bne	r2,zero,3558 <floor+0xe4>
    34ac:	90001b16 	blt	r18,zero,351c <floor+0xa8>
    34b0:	00800434 	movhi	r2,16
    34b4:	10bfffc4 	addi	r2,r2,-1
    34b8:	14a7d83a 	sra	r19,r2,r18
    34bc:	2cc4703a 	and	r2,r5,r19
    34c0:	1104b03a 	or	r2,r2,r4
    34c4:	10002826 	beq	r2,zero,3568 <floor+0xf4>
    34c8:	01a20034 	movhi	r6,34816
    34cc:	01df8e34 	movhi	r7,32312
    34d0:	319d6704 	addi	r6,r6,30108
    34d4:	39f90f04 	addi	r7,r7,-7108
    34d8:	0007b740 	call	7b74 <__adddf3>
    34dc:	000d883a 	mov	r6,zero
    34e0:	000f883a 	mov	r7,zero
    34e4:	1009883a 	mov	r4,r2
    34e8:	180b883a 	mov	r5,r3
    34ec:	0008df80 	call	8df8 <__gedf2>
    34f0:	0080070e 	bge	zero,r2,3510 <floor+0x9c>
    34f4:	8000030e 	bge	r16,zero,3504 <floor+0x90>
    34f8:	00800434 	movhi	r2,16
    34fc:	14a5d83a 	sra	r18,r2,r18
    3500:	9421883a 	add	r16,r18,r16
    3504:	04c4303a 	nor	r2,zero,r19
    3508:	80a0703a 	and	r16,r16,r2
    350c:	0023883a 	mov	r17,zero
    3510:	8805883a 	mov	r2,r17
    3514:	8007883a 	mov	r3,r16
    3518:	00001506 	br	3570 <floor+0xfc>
    351c:	01a20034 	movhi	r6,34816
    3520:	01df8e34 	movhi	r7,32312
    3524:	319d6704 	addi	r6,r6,30108
    3528:	39f90f04 	addi	r7,r7,-7108
    352c:	0007b740 	call	7b74 <__adddf3>
    3530:	000d883a 	mov	r6,zero
    3534:	000f883a 	mov	r7,zero
    3538:	1009883a 	mov	r4,r2
    353c:	180b883a 	mov	r5,r3
    3540:	0008df80 	call	8df8 <__gedf2>
    3544:	00bff20e 	bge	zero,r2,3510 <floor+0x9c>
    3548:	80002a16 	blt	r16,zero,35f4 <floor+0x180>
    354c:	0023883a 	mov	r17,zero
    3550:	0021883a 	mov	r16,zero
    3554:	003fee06 	br	3510 <floor+0x9c>
    3558:	90800d10 	cmplti	r2,r18,52
    355c:	10000b1e 	bne	r2,zero,358c <floor+0x118>
    3560:	94810018 	cmpnei	r18,r18,1024
    3564:	90001d26 	beq	r18,zero,35dc <floor+0x168>
    3568:	3005883a 	mov	r2,r6
    356c:	8007883a 	mov	r3,r16
    3570:	dfc00417 	ldw	ra,16(sp)
    3574:	dcc00317 	ldw	r19,12(sp)
    3578:	dc800217 	ldw	r18,8(sp)
    357c:	dc400117 	ldw	r17,4(sp)
    3580:	dc000017 	ldw	r16,0(sp)
    3584:	dec00504 	addi	sp,sp,20
    3588:	f800283a 	ret
    358c:	39fefb44 	addi	r7,r7,-1043
    3590:	04ffffc4 	movi	r19,-1
    3594:	99e6d83a 	srl	r19,r19,r7
    3598:	9904703a 	and	r2,r19,r4
    359c:	10001226 	beq	r2,zero,35e8 <floor+0x174>
    35a0:	01a20034 	movhi	r6,34816
    35a4:	01df8e34 	movhi	r7,32312
    35a8:	319d6704 	addi	r6,r6,30108
    35ac:	39f90f04 	addi	r7,r7,-7108
    35b0:	0007b740 	call	7b74 <__adddf3>
    35b4:	000d883a 	mov	r6,zero
    35b8:	000f883a 	mov	r7,zero
    35bc:	1009883a 	mov	r4,r2
    35c0:	180b883a 	mov	r5,r3
    35c4:	0008df80 	call	8df8 <__gedf2>
    35c8:	00bfd10e 	bge	zero,r2,3510 <floor+0x9c>
    35cc:	80001116 	blt	r16,zero,3614 <floor+0x1a0>
    35d0:	04ce303a 	nor	r7,zero,r19
    35d4:	89e2703a 	and	r17,r17,r7
    35d8:	003fcd06 	br	3510 <floor+0x9c>
    35dc:	280f883a 	mov	r7,r5
    35e0:	0007b740 	call	7b74 <__adddf3>
    35e4:	003fe206 	br	3570 <floor+0xfc>
    35e8:	2807883a 	mov	r3,r5
    35ec:	2005883a 	mov	r2,r4
    35f0:	003fdf06 	br	3570 <floor+0xfc>
    35f4:	00a00034 	movhi	r2,32768
    35f8:	10bfffc4 	addi	r2,r2,-1
    35fc:	8084703a 	and	r2,r16,r2
    3600:	1462b03a 	or	r17,r2,r17
    3604:	88000e26 	beq	r17,zero,3640 <floor+0x1cc>
    3608:	0023883a 	mov	r17,zero
    360c:	042ffc34 	movhi	r16,49136
    3610:	003fbf06 	br	3510 <floor+0x9c>
    3614:	90800518 	cmpnei	r2,r18,20
    3618:	10000b26 	beq	r2,zero,3648 <floor+0x1d4>
    361c:	00800d04 	movi	r2,52
    3620:	14a5c83a 	sub	r18,r2,r18
    3624:	00800044 	movi	r2,1
    3628:	1484983a 	sll	r2,r2,r18
    362c:	1445883a 	add	r2,r2,r17
    3630:	1440072e 	bgeu	r2,r17,3650 <floor+0x1dc>
    3634:	84000044 	addi	r16,r16,1
    3638:	1023883a 	mov	r17,r2
    363c:	003fe406 	br	35d0 <floor+0x15c>
    3640:	0023883a 	mov	r17,zero
    3644:	003fb206 	br	3510 <floor+0x9c>
    3648:	84000044 	addi	r16,r16,1
    364c:	003fe006 	br	35d0 <floor+0x15c>
    3650:	1023883a 	mov	r17,r2
    3654:	003fde06 	br	35d0 <floor+0x15c>

00003658 <sin>:
    3658:	00a00034 	movhi	r2,32768
    365c:	defffa04 	addi	sp,sp,-24
    3660:	10bfffc4 	addi	r2,r2,-1
    3664:	00cffa74 	movhi	r3,16361
    3668:	dfc00515 	stw	ra,20(sp)
    366c:	2884703a 	and	r2,r5,r2
    3670:	18c87ec4 	addi	r3,r3,8699
    3674:	1880170e 	bge	r3,r2,36d4 <sin+0x7c>
    3678:	00dffc34 	movhi	r3,32752
    367c:	10c00616 	blt	r2,r3,3698 <sin+0x40>
    3680:	280f883a 	mov	r7,r5
    3684:	200d883a 	mov	r6,r4
    3688:	00097740 	call	9774 <__subdf3>
    368c:	dfc00517 	ldw	ra,20(sp)
    3690:	dec00604 	addi	sp,sp,24
    3694:	f800283a 	ret
    3698:	d9800104 	addi	r6,sp,4
    369c:	00055640 	call	5564 <__ieee754_rem_pio2>
    36a0:	108000cc 	andi	r2,r2,3
    36a4:	10c00060 	cmpeqi	r3,r2,1
    36a8:	d9800317 	ldw	r6,12(sp)
    36ac:	d9c00417 	ldw	r7,16(sp)
    36b0:	d9000117 	ldw	r4,4(sp)
    36b4:	d9400217 	ldw	r5,8(sp)
    36b8:	18000d1e 	bne	r3,zero,36f0 <sin+0x98>
    36bc:	10c000a0 	cmpeqi	r3,r2,2
    36c0:	1800111e 	bne	r3,zero,3708 <sin+0xb0>
    36c4:	10000c26 	beq	r2,zero,36f8 <sin+0xa0>
    36c8:	0005f1c0 	call	5f1c <__kernel_cos>
    36cc:	18e0003c 	xorhi	r3,r3,32768
    36d0:	003fee06 	br	368c <sin+0x34>
    36d4:	d8000015 	stw	zero,0(sp)
    36d8:	000d883a 	mov	r6,zero
    36dc:	000f883a 	mov	r7,zero
    36e0:	00070dc0 	call	70dc <__kernel_sin>
    36e4:	dfc00517 	ldw	ra,20(sp)
    36e8:	dec00604 	addi	sp,sp,24
    36ec:	f800283a 	ret
    36f0:	0005f1c0 	call	5f1c <__kernel_cos>
    36f4:	003fe506 	br	368c <sin+0x34>
    36f8:	00800044 	movi	r2,1
    36fc:	d8800015 	stw	r2,0(sp)
    3700:	00070dc0 	call	70dc <__kernel_sin>
    3704:	003fe106 	br	368c <sin+0x34>
    3708:	00800044 	movi	r2,1
    370c:	d8800015 	stw	r2,0(sp)
    3710:	00070dc0 	call	70dc <__kernel_sin>
    3714:	18e0003c 	xorhi	r3,r3,32768
    3718:	003fdc06 	br	368c <sin+0x34>

0000371c <log>:
    371c:	defffb04 	addi	sp,sp,-20
    3720:	dcc00315 	stw	r19,12(sp)
    3724:	dc800215 	stw	r18,8(sp)
    3728:	dc400115 	stw	r17,4(sp)
    372c:	dc000015 	stw	r16,0(sp)
    3730:	2023883a 	mov	r17,r4
    3734:	2821883a 	mov	r16,r5
    3738:	dfc00415 	stw	ra,16(sp)
    373c:	0003c0c0 	call	3c0c <__ieee754_log>
    3740:	880d883a 	mov	r6,r17
    3744:	800f883a 	mov	r7,r16
    3748:	8809883a 	mov	r4,r17
    374c:	800b883a 	mov	r5,r16
    3750:	1027883a 	mov	r19,r2
    3754:	1825883a 	mov	r18,r3
    3758:	000a0800 	call	a080 <__unorddf2>
    375c:	1000111e 	bne	r2,zero,37a4 <log+0x88>
    3760:	000d883a 	mov	r6,zero
    3764:	000f883a 	mov	r7,zero
    3768:	8809883a 	mov	r4,r17
    376c:	800b883a 	mov	r5,r16
    3770:	0008df80 	call	8df8 <__gedf2>
    3774:	00800b16 	blt	zero,r2,37a4 <log+0x88>
    3778:	000d883a 	mov	r6,zero
    377c:	000f883a 	mov	r7,zero
    3780:	8809883a 	mov	r4,r17
    3784:	800b883a 	mov	r5,r16
    3788:	0008d780 	call	8d78 <__eqdf2>
    378c:	10000e1e 	bne	r2,zero,37c8 <log+0xac>
    3790:	000a4cc0 	call	a4cc <__errno>
    3794:	00c00884 	movi	r3,34
    3798:	10c00015 	stw	r3,0(r2)
    379c:	0027883a 	mov	r19,zero
    37a0:	04bffc34 	movhi	r18,65520
    37a4:	9805883a 	mov	r2,r19
    37a8:	9007883a 	mov	r3,r18
    37ac:	dfc00417 	ldw	ra,16(sp)
    37b0:	dcc00317 	ldw	r19,12(sp)
    37b4:	dc800217 	ldw	r18,8(sp)
    37b8:	dc400117 	ldw	r17,4(sp)
    37bc:	dc000017 	ldw	r16,0(sp)
    37c0:	dec00504 	addi	sp,sp,20
    37c4:	f800283a 	ret
    37c8:	000a4cc0 	call	a4cc <__errno>
    37cc:	00c00844 	movi	r3,33
    37d0:	10c00015 	stw	r3,0(r2)
    37d4:	0027883a 	mov	r19,zero
    37d8:	049ffe34 	movhi	r18,32760
    37dc:	003ff106 	br	37a4 <log+0x88>

000037e0 <log10>:
    37e0:	defffb04 	addi	sp,sp,-20
    37e4:	dcc00315 	stw	r19,12(sp)
    37e8:	dc800215 	stw	r18,8(sp)
    37ec:	dc400115 	stw	r17,4(sp)
    37f0:	dc000015 	stw	r16,0(sp)
    37f4:	2023883a 	mov	r17,r4
    37f8:	2821883a 	mov	r16,r5
    37fc:	dfc00415 	stw	ra,16(sp)
    3800:	00042980 	call	4298 <__ieee754_log10>
    3804:	880d883a 	mov	r6,r17
    3808:	800f883a 	mov	r7,r16
    380c:	8809883a 	mov	r4,r17
    3810:	800b883a 	mov	r5,r16
    3814:	1027883a 	mov	r19,r2
    3818:	1825883a 	mov	r18,r3
    381c:	000a0800 	call	a080 <__unorddf2>
    3820:	1000111e 	bne	r2,zero,3868 <log10+0x88>
    3824:	000d883a 	mov	r6,zero
    3828:	000f883a 	mov	r7,zero
    382c:	8809883a 	mov	r4,r17
    3830:	800b883a 	mov	r5,r16
    3834:	0008ee00 	call	8ee0 <__ledf2>
    3838:	00800b16 	blt	zero,r2,3868 <log10+0x88>
    383c:	000d883a 	mov	r6,zero
    3840:	000f883a 	mov	r7,zero
    3844:	8809883a 	mov	r4,r17
    3848:	800b883a 	mov	r5,r16
    384c:	0008d780 	call	8d78 <__eqdf2>
    3850:	10000e1e 	bne	r2,zero,388c <log10+0xac>
    3854:	000a4cc0 	call	a4cc <__errno>
    3858:	00c00884 	movi	r3,34
    385c:	10c00015 	stw	r3,0(r2)
    3860:	0027883a 	mov	r19,zero
    3864:	04bffc34 	movhi	r18,65520
    3868:	9805883a 	mov	r2,r19
    386c:	9007883a 	mov	r3,r18
    3870:	dfc00417 	ldw	ra,16(sp)
    3874:	dcc00317 	ldw	r19,12(sp)
    3878:	dc800217 	ldw	r18,8(sp)
    387c:	dc400117 	ldw	r17,4(sp)
    3880:	dc000017 	ldw	r16,0(sp)
    3884:	dec00504 	addi	sp,sp,20
    3888:	f800283a 	ret
    388c:	000a4cc0 	call	a4cc <__errno>
    3890:	00c00844 	movi	r3,33
    3894:	10c00015 	stw	r3,0(r2)
    3898:	0027883a 	mov	r19,zero
    389c:	049ffe34 	movhi	r18,32760
    38a0:	003ff106 	br	3868 <log10+0x88>

000038a4 <pow>:
    38a4:	defff704 	addi	sp,sp,-36
    38a8:	dd800615 	stw	r22,24(sp)
    38ac:	dd000415 	stw	r20,16(sp)
    38b0:	dcc00315 	stw	r19,12(sp)
    38b4:	dc800215 	stw	r18,8(sp)
    38b8:	dc400115 	stw	r17,4(sp)
    38bc:	dc000015 	stw	r16,0(sp)
    38c0:	3823883a 	mov	r17,r7
    38c4:	3021883a 	mov	r16,r6
    38c8:	dfc00815 	stw	ra,32(sp)
    38cc:	ddc00715 	stw	r23,28(sp)
    38d0:	dd400515 	stw	r21,20(sp)
    38d4:	202d883a 	mov	r22,r4
    38d8:	2825883a 	mov	r18,r5
    38dc:	000445c0 	call	445c <__ieee754_pow>
    38e0:	800d883a 	mov	r6,r16
    38e4:	880f883a 	mov	r7,r17
    38e8:	8009883a 	mov	r4,r16
    38ec:	880b883a 	mov	r5,r17
    38f0:	1027883a 	mov	r19,r2
    38f4:	1829883a 	mov	r20,r3
    38f8:	000a0800 	call	a080 <__unorddf2>
    38fc:	10005d1e 	bne	r2,zero,3a74 <pow+0x1d0>
    3900:	000d883a 	mov	r6,zero
    3904:	000f883a 	mov	r7,zero
    3908:	b009883a 	mov	r4,r22
    390c:	900b883a 	mov	r5,r18
    3910:	0008d780 	call	8d78 <__eqdf2>
    3914:	10006426 	beq	r2,zero,3aa8 <pow+0x204>
    3918:	01600034 	movhi	r5,32768
    391c:	297fffc4 	addi	r5,r5,-1
    3920:	a16a703a 	and	r21,r20,r5
    3924:	01dffc34 	movhi	r7,32752
    3928:	01bfffc4 	movi	r6,-1
    392c:	39ffffc4 	addi	r7,r7,-1
    3930:	9809883a 	mov	r4,r19
    3934:	a80b883a 	mov	r5,r21
    3938:	000a0800 	call	a080 <__unorddf2>
    393c:	1000071e 	bne	r2,zero,395c <pow+0xb8>
    3940:	01dffc34 	movhi	r7,32752
    3944:	01bfffc4 	movi	r6,-1
    3948:	39ffffc4 	addi	r7,r7,-1
    394c:	9809883a 	mov	r4,r19
    3950:	a80b883a 	mov	r5,r21
    3954:	0008df80 	call	8df8 <__gedf2>
    3958:	0080200e 	bge	zero,r2,39dc <pow+0x138>
    395c:	05600034 	movhi	r21,32768
    3960:	ad7fffc4 	addi	r21,r21,-1
    3964:	956e703a 	and	r23,r18,r21
    3968:	01dffc34 	movhi	r7,32752
    396c:	01bfffc4 	movi	r6,-1
    3970:	39ffffc4 	addi	r7,r7,-1
    3974:	b009883a 	mov	r4,r22
    3978:	b80b883a 	mov	r5,r23
    397c:	000a0800 	call	a080 <__unorddf2>
    3980:	10003c1e 	bne	r2,zero,3a74 <pow+0x1d0>
    3984:	01dffc34 	movhi	r7,32752
    3988:	01bfffc4 	movi	r6,-1
    398c:	39ffffc4 	addi	r7,r7,-1
    3990:	b009883a 	mov	r4,r22
    3994:	b80b883a 	mov	r5,r23
    3998:	0008df80 	call	8df8 <__gedf2>
    399c:	00803516 	blt	zero,r2,3a74 <pow+0x1d0>
    39a0:	8d6a703a 	and	r21,r17,r21
    39a4:	01dffc34 	movhi	r7,32752
    39a8:	01bfffc4 	movi	r6,-1
    39ac:	39ffffc4 	addi	r7,r7,-1
    39b0:	8009883a 	mov	r4,r16
    39b4:	a80b883a 	mov	r5,r21
    39b8:	000a0800 	call	a080 <__unorddf2>
    39bc:	1000071e 	bne	r2,zero,39dc <pow+0x138>
    39c0:	01dffc34 	movhi	r7,32752
    39c4:	01bfffc4 	movi	r6,-1
    39c8:	39ffffc4 	addi	r7,r7,-1
    39cc:	8009883a 	mov	r4,r16
    39d0:	a80b883a 	mov	r5,r21
    39d4:	0008df80 	call	8df8 <__gedf2>
    39d8:	0080570e 	bge	zero,r2,3b38 <pow+0x294>
    39dc:	000d883a 	mov	r6,zero
    39e0:	000f883a 	mov	r7,zero
    39e4:	9809883a 	mov	r4,r19
    39e8:	a00b883a 	mov	r5,r20
    39ec:	0008d780 	call	8d78 <__eqdf2>
    39f0:	1000201e 	bne	r2,zero,3a74 <pow+0x1d0>
    39f4:	05600034 	movhi	r21,32768
    39f8:	ad7fffc4 	addi	r21,r21,-1
    39fc:	9564703a 	and	r18,r18,r21
    3a00:	01dffc34 	movhi	r7,32752
    3a04:	01bfffc4 	movi	r6,-1
    3a08:	39ffffc4 	addi	r7,r7,-1
    3a0c:	b009883a 	mov	r4,r22
    3a10:	900b883a 	mov	r5,r18
    3a14:	000a0800 	call	a080 <__unorddf2>
    3a18:	1000161e 	bne	r2,zero,3a74 <pow+0x1d0>
    3a1c:	01dffc34 	movhi	r7,32752
    3a20:	01bfffc4 	movi	r6,-1
    3a24:	39ffffc4 	addi	r7,r7,-1
    3a28:	b009883a 	mov	r4,r22
    3a2c:	900b883a 	mov	r5,r18
    3a30:	0008df80 	call	8df8 <__gedf2>
    3a34:	00800f16 	blt	zero,r2,3a74 <pow+0x1d0>
    3a38:	8d62703a 	and	r17,r17,r21
    3a3c:	01dffc34 	movhi	r7,32752
    3a40:	01bfffc4 	movi	r6,-1
    3a44:	39ffffc4 	addi	r7,r7,-1
    3a48:	8009883a 	mov	r4,r16
    3a4c:	880b883a 	mov	r5,r17
    3a50:	000a0800 	call	a080 <__unorddf2>
    3a54:	1000071e 	bne	r2,zero,3a74 <pow+0x1d0>
    3a58:	01dffc34 	movhi	r7,32752
    3a5c:	01bfffc4 	movi	r6,-1
    3a60:	39ffffc4 	addi	r7,r7,-1
    3a64:	8009883a 	mov	r4,r16
    3a68:	880b883a 	mov	r5,r17
    3a6c:	0008df80 	call	8df8 <__gedf2>
    3a70:	00802a0e 	bge	zero,r2,3b1c <pow+0x278>
    3a74:	9805883a 	mov	r2,r19
    3a78:	a007883a 	mov	r3,r20
    3a7c:	dfc00817 	ldw	ra,32(sp)
    3a80:	ddc00717 	ldw	r23,28(sp)
    3a84:	dd800617 	ldw	r22,24(sp)
    3a88:	dd400517 	ldw	r21,20(sp)
    3a8c:	dd000417 	ldw	r20,16(sp)
    3a90:	dcc00317 	ldw	r19,12(sp)
    3a94:	dc800217 	ldw	r18,8(sp)
    3a98:	dc400117 	ldw	r17,4(sp)
    3a9c:	dc000017 	ldw	r16,0(sp)
    3aa0:	dec00904 	addi	sp,sp,36
    3aa4:	f800283a 	ret
    3aa8:	000d883a 	mov	r6,zero
    3aac:	000f883a 	mov	r7,zero
    3ab0:	8009883a 	mov	r4,r16
    3ab4:	880b883a 	mov	r5,r17
    3ab8:	0008d780 	call	8d78 <__eqdf2>
    3abc:	10001b26 	beq	r2,zero,3b2c <pow+0x288>
    3ac0:	01600034 	movhi	r5,32768
    3ac4:	297fffc4 	addi	r5,r5,-1
    3ac8:	8964703a 	and	r18,r17,r5
    3acc:	01dffc34 	movhi	r7,32752
    3ad0:	01bfffc4 	movi	r6,-1
    3ad4:	39ffffc4 	addi	r7,r7,-1
    3ad8:	8009883a 	mov	r4,r16
    3adc:	900b883a 	mov	r5,r18
    3ae0:	000a0800 	call	a080 <__unorddf2>
    3ae4:	103fe31e 	bne	r2,zero,3a74 <pow+0x1d0>
    3ae8:	01dffc34 	movhi	r7,32752
    3aec:	01bfffc4 	movi	r6,-1
    3af0:	39ffffc4 	addi	r7,r7,-1
    3af4:	8009883a 	mov	r4,r16
    3af8:	900b883a 	mov	r5,r18
    3afc:	0008df80 	call	8df8 <__gedf2>
    3b00:	00bfdc16 	blt	zero,r2,3a74 <pow+0x1d0>
    3b04:	000d883a 	mov	r6,zero
    3b08:	000f883a 	mov	r7,zero
    3b0c:	8009883a 	mov	r4,r16
    3b10:	880b883a 	mov	r5,r17
    3b14:	0008ee00 	call	8ee0 <__ledf2>
    3b18:	103fd60e 	bge	r2,zero,3a74 <pow+0x1d0>
    3b1c:	000a4cc0 	call	a4cc <__errno>
    3b20:	00c00884 	movi	r3,34
    3b24:	10c00015 	stw	r3,0(r2)
    3b28:	003fd206 	br	3a74 <pow+0x1d0>
    3b2c:	0027883a 	mov	r19,zero
    3b30:	050ffc34 	movhi	r20,16368
    3b34:	003fcf06 	br	3a74 <pow+0x1d0>
    3b38:	980d883a 	mov	r6,r19
    3b3c:	a00f883a 	mov	r7,r20
    3b40:	9809883a 	mov	r4,r19
    3b44:	a00b883a 	mov	r5,r20
    3b48:	000a0800 	call	a080 <__unorddf2>
    3b4c:	103ff326 	beq	r2,zero,3b1c <pow+0x278>
    3b50:	000a4cc0 	call	a4cc <__errno>
    3b54:	00c00844 	movi	r3,33
    3b58:	10c00015 	stw	r3,0(r2)
    3b5c:	003fc506 	br	3a74 <pow+0x1d0>

00003b60 <sqrt>:
    3b60:	defffb04 	addi	sp,sp,-20
    3b64:	dcc00315 	stw	r19,12(sp)
    3b68:	dc800215 	stw	r18,8(sp)
    3b6c:	dc400115 	stw	r17,4(sp)
    3b70:	dc000015 	stw	r16,0(sp)
    3b74:	2023883a 	mov	r17,r4
    3b78:	2821883a 	mov	r16,r5
    3b7c:	dfc00415 	stw	ra,16(sp)
    3b80:	0005cb00 	call	5cb0 <__ieee754_sqrt>
    3b84:	880d883a 	mov	r6,r17
    3b88:	800f883a 	mov	r7,r16
    3b8c:	8809883a 	mov	r4,r17
    3b90:	800b883a 	mov	r5,r16
    3b94:	1027883a 	mov	r19,r2
    3b98:	1825883a 	mov	r18,r3
    3b9c:	000a0800 	call	a080 <__unorddf2>
    3ba0:	1000061e 	bne	r2,zero,3bbc <sqrt+0x5c>
    3ba4:	000d883a 	mov	r6,zero
    3ba8:	000f883a 	mov	r7,zero
    3bac:	8809883a 	mov	r4,r17
    3bb0:	800b883a 	mov	r5,r16
    3bb4:	0008ee00 	call	8ee0 <__ledf2>
    3bb8:	10000916 	blt	r2,zero,3be0 <sqrt+0x80>
    3bbc:	9805883a 	mov	r2,r19
    3bc0:	9007883a 	mov	r3,r18
    3bc4:	dfc00417 	ldw	ra,16(sp)
    3bc8:	dcc00317 	ldw	r19,12(sp)
    3bcc:	dc800217 	ldw	r18,8(sp)
    3bd0:	dc400117 	ldw	r17,4(sp)
    3bd4:	dc000017 	ldw	r16,0(sp)
    3bd8:	dec00504 	addi	sp,sp,20
    3bdc:	f800283a 	ret
    3be0:	000a4cc0 	call	a4cc <__errno>
    3be4:	00c00844 	movi	r3,33
    3be8:	10c00015 	stw	r3,0(r2)
    3bec:	000d883a 	mov	r6,zero
    3bf0:	000f883a 	mov	r7,zero
    3bf4:	0009883a 	mov	r4,zero
    3bf8:	000b883a 	mov	r5,zero
    3bfc:	00084640 	call	8464 <__divdf3>
    3c00:	1027883a 	mov	r19,r2
    3c04:	1825883a 	mov	r18,r3
    3c08:	003fec06 	br	3bbc <sqrt+0x5c>

00003c0c <__ieee754_log>:
    3c0c:	defff204 	addi	sp,sp,-56
    3c10:	dfc00d15 	stw	ra,52(sp)
    3c14:	df000c15 	stw	fp,48(sp)
    3c18:	ddc00b15 	stw	r23,44(sp)
    3c1c:	dd800a15 	stw	r22,40(sp)
    3c20:	dd400915 	stw	r21,36(sp)
    3c24:	dd000815 	stw	r20,32(sp)
    3c28:	dcc00715 	stw	r19,28(sp)
    3c2c:	dc800615 	stw	r18,24(sp)
    3c30:	dc400515 	stw	r17,20(sp)
    3c34:	dc000415 	stw	r16,16(sp)
    3c38:	01800434 	movhi	r6,16
    3c3c:	2005883a 	mov	r2,r4
    3c40:	280f883a 	mov	r7,r5
    3c44:	2980690e 	bge	r5,r6,3dec <__ieee754_log+0x1e0>
    3c48:	00e00034 	movhi	r3,32768
    3c4c:	18ffffc4 	addi	r3,r3,-1
    3c50:	28c6703a 	and	r3,r5,r3
    3c54:	1906b03a 	or	r3,r3,r4
    3c58:	18011d26 	beq	r3,zero,40d0 <__ieee754_log+0x4c4>
    3c5c:	28015c16 	blt	r5,zero,41d0 <__ieee754_log+0x5c4>
    3c60:	000d883a 	mov	r6,zero
    3c64:	01d0d434 	movhi	r7,17232
    3c68:	0008fc80 	call	8fc8 <__muldf3>
    3c6c:	011ffc34 	movhi	r4,32752
    3c70:	180f883a 	mov	r7,r3
    3c74:	01bff284 	movi	r6,-54
    3c78:	1900600e 	bge	r3,r4,3dfc <__ieee754_log+0x1f0>
    3c7c:	04000434 	movhi	r16,16
    3c80:	843fffc4 	addi	r16,r16,-1
    3c84:	01400274 	movhi	r5,9
    3c88:	1c24703a 	and	r18,r3,r16
    3c8c:	2957d904 	addi	r5,r5,24420
    3c90:	1807d53a 	srai	r3,r3,20
    3c94:	914b883a 	add	r5,r18,r5
    3c98:	2940042c 	andhi	r5,r5,16
    3c9c:	2827d53a 	srai	r19,r5,20
    3ca0:	18ff0044 	addi	r3,r3,-1023
    3ca4:	294ffc3c 	xorhi	r5,r5,16368
    3ca8:	1987883a 	add	r3,r3,r6
    3cac:	2c8ab03a 	or	r5,r5,r18
    3cb0:	000d883a 	mov	r6,zero
    3cb4:	01cffc34 	movhi	r7,16368
    3cb8:	1009883a 	mov	r4,r2
    3cbc:	98e7883a 	add	r19,r19,r3
    3cc0:	00097740 	call	9774 <__subdf3>
    3cc4:	91400084 	addi	r5,r18,2
    3cc8:	2c0a703a 	and	r5,r5,r16
    3ccc:	294000c8 	cmpgei	r5,r5,3
    3cd0:	000d883a 	mov	r6,zero
    3cd4:	1023883a 	mov	r17,r2
    3cd8:	1821883a 	mov	r16,r3
    3cdc:	2800571e 	bne	r5,zero,3e3c <__ieee754_log+0x230>
    3ce0:	000f883a 	mov	r7,zero
    3ce4:	1009883a 	mov	r4,r2
    3ce8:	180b883a 	mov	r5,r3
    3cec:	0008d780 	call	8d78 <__eqdf2>
    3cf0:	1000fd26 	beq	r2,zero,40e8 <__ieee754_log+0x4dc>
    3cf4:	01955574 	movhi	r6,21845
    3cf8:	01cff574 	movhi	r7,16341
    3cfc:	8809883a 	mov	r4,r17
    3d00:	800b883a 	mov	r5,r16
    3d04:	31955544 	addi	r6,r6,21845
    3d08:	39d55544 	addi	r7,r7,21845
    3d0c:	0008fc80 	call	8fc8 <__muldf3>
    3d10:	100d883a 	mov	r6,r2
    3d14:	180f883a 	mov	r7,r3
    3d18:	0009883a 	mov	r4,zero
    3d1c:	014ff834 	movhi	r5,16352
    3d20:	00097740 	call	9774 <__subdf3>
    3d24:	880d883a 	mov	r6,r17
    3d28:	800f883a 	mov	r7,r16
    3d2c:	8809883a 	mov	r4,r17
    3d30:	800b883a 	mov	r5,r16
    3d34:	1029883a 	mov	r20,r2
    3d38:	1825883a 	mov	r18,r3
    3d3c:	0008fc80 	call	8fc8 <__muldf3>
    3d40:	a009883a 	mov	r4,r20
    3d44:	900b883a 	mov	r5,r18
    3d48:	100d883a 	mov	r6,r2
    3d4c:	180f883a 	mov	r7,r3
    3d50:	0008fc80 	call	8fc8 <__muldf3>
    3d54:	1029883a 	mov	r20,r2
    3d58:	1825883a 	mov	r18,r3
    3d5c:	98011626 	beq	r19,zero,41b8 <__ieee754_log+0x5ac>
    3d60:	9809883a 	mov	r4,r19
    3d64:	000a1540 	call	a154 <__floatsidf>
    3d68:	01cff9b4 	movhi	r7,16358
    3d6c:	01bfb834 	movhi	r6,65248
    3d70:	39cb9084 	addi	r7,r7,11842
    3d74:	1009883a 	mov	r4,r2
    3d78:	180b883a 	mov	r5,r3
    3d7c:	102b883a 	mov	r21,r2
    3d80:	1827883a 	mov	r19,r3
    3d84:	0008fc80 	call	8fc8 <__muldf3>
    3d88:	018d5e74 	movhi	r6,13689
    3d8c:	01cf7ab4 	movhi	r7,15850
    3d90:	318f1d84 	addi	r6,r6,15478
    3d94:	39ce7bc4 	addi	r7,r7,14831
    3d98:	a809883a 	mov	r4,r21
    3d9c:	980b883a 	mov	r5,r19
    3da0:	102b883a 	mov	r21,r2
    3da4:	1827883a 	mov	r19,r3
    3da8:	0008fc80 	call	8fc8 <__muldf3>
    3dac:	a009883a 	mov	r4,r20
    3db0:	900b883a 	mov	r5,r18
    3db4:	100d883a 	mov	r6,r2
    3db8:	180f883a 	mov	r7,r3
    3dbc:	00097740 	call	9774 <__subdf3>
    3dc0:	880d883a 	mov	r6,r17
    3dc4:	800f883a 	mov	r7,r16
    3dc8:	1009883a 	mov	r4,r2
    3dcc:	180b883a 	mov	r5,r3
    3dd0:	00097740 	call	9774 <__subdf3>
    3dd4:	100d883a 	mov	r6,r2
    3dd8:	180f883a 	mov	r7,r3
    3ddc:	a809883a 	mov	r4,r21
    3de0:	980b883a 	mov	r5,r19
    3de4:	00097740 	call	9774 <__subdf3>
    3de8:	00000806 	br	3e0c <__ieee754_log+0x200>
    3dec:	2807883a 	mov	r3,r5
    3df0:	011ffc34 	movhi	r4,32752
    3df4:	000d883a 	mov	r6,zero
    3df8:	193fa016 	blt	r3,r4,3c7c <__ieee754_log+0x70>
    3dfc:	100d883a 	mov	r6,r2
    3e00:	1009883a 	mov	r4,r2
    3e04:	380b883a 	mov	r5,r7
    3e08:	0007b740 	call	7b74 <__adddf3>
    3e0c:	dfc00d17 	ldw	ra,52(sp)
    3e10:	df000c17 	ldw	fp,48(sp)
    3e14:	ddc00b17 	ldw	r23,44(sp)
    3e18:	dd800a17 	ldw	r22,40(sp)
    3e1c:	dd400917 	ldw	r21,36(sp)
    3e20:	dd000817 	ldw	r20,32(sp)
    3e24:	dcc00717 	ldw	r19,28(sp)
    3e28:	dc800617 	ldw	r18,24(sp)
    3e2c:	dc400517 	ldw	r17,20(sp)
    3e30:	dc000417 	ldw	r16,16(sp)
    3e34:	dec00e04 	addi	sp,sp,56
    3e38:	f800283a 	ret
    3e3c:	01d00034 	movhi	r7,16384
    3e40:	1009883a 	mov	r4,r2
    3e44:	180b883a 	mov	r5,r3
    3e48:	0007b740 	call	7b74 <__adddf3>
    3e4c:	100d883a 	mov	r6,r2
    3e50:	180f883a 	mov	r7,r3
    3e54:	800b883a 	mov	r5,r16
    3e58:	8809883a 	mov	r4,r17
    3e5c:	00084640 	call	8464 <__divdf3>
    3e60:	9809883a 	mov	r4,r19
    3e64:	102d883a 	mov	r22,r2
    3e68:	182b883a 	mov	r21,r3
    3e6c:	000a1540 	call	a154 <__floatsidf>
    3e70:	b00d883a 	mov	r6,r22
    3e74:	a80f883a 	mov	r7,r21
    3e78:	b009883a 	mov	r4,r22
    3e7c:	a80b883a 	mov	r5,r21
    3e80:	1039883a 	mov	fp,r2
    3e84:	d8c00315 	stw	r3,12(sp)
    3e88:	0008fc80 	call	8fc8 <__muldf3>
    3e8c:	1015883a 	mov	r10,r2
    3e90:	00bffeb4 	movhi	r2,65530
    3e94:	10bae184 	addi	r2,r2,-5242
    3e98:	9097883a 	add	r11,r18,r2
    3e9c:	500d883a 	mov	r6,r10
    3ea0:	5009883a 	mov	r4,r10
    3ea4:	180f883a 	mov	r7,r3
    3ea8:	180b883a 	mov	r5,r3
    3eac:	dac00215 	stw	r11,8(sp)
    3eb0:	da800115 	stw	r10,4(sp)
    3eb4:	d8c00015 	stw	r3,0(sp)
    3eb8:	0008fc80 	call	8fc8 <__muldf3>
    3ebc:	01b7cfb4 	movhi	r6,57150
    3ec0:	01cff0f4 	movhi	r7,16323
    3ec4:	31949104 	addi	r6,r6,21060
    3ec8:	39fc4484 	addi	r7,r7,-3822
    3ecc:	1009883a 	mov	r4,r2
    3ed0:	180b883a 	mov	r5,r3
    3ed4:	1829883a 	mov	r20,r3
    3ed8:	102f883a 	mov	r23,r2
    3edc:	0008fc80 	call	8fc8 <__muldf3>
    3ee0:	01a5b2f4 	movhi	r6,38603
    3ee4:	01cff1f4 	movhi	r7,16327
    3ee8:	3180f784 	addi	r6,r6,990
    3eec:	39d19904 	addi	r7,r7,18020
    3ef0:	1009883a 	mov	r4,r2
    3ef4:	180b883a 	mov	r5,r3
    3ef8:	0007b740 	call	7b74 <__adddf3>
    3efc:	a00f883a 	mov	r7,r20
    3f00:	b80d883a 	mov	r6,r23
    3f04:	1009883a 	mov	r4,r2
    3f08:	180b883a 	mov	r5,r3
    3f0c:	0008fc80 	call	8fc8 <__muldf3>
    3f10:	01a508f4 	movhi	r6,37923
    3f14:	01cff4b4 	movhi	r7,16338
    3f18:	31a4d644 	addi	r6,r6,-27815
    3f1c:	39d24904 	addi	r7,r7,18724
    3f20:	1009883a 	mov	r4,r2
    3f24:	180b883a 	mov	r5,r3
    3f28:	0007b740 	call	7b74 <__adddf3>
    3f2c:	a00f883a 	mov	r7,r20
    3f30:	b80d883a 	mov	r6,r23
    3f34:	1009883a 	mov	r4,r2
    3f38:	180b883a 	mov	r5,r3
    3f3c:	0008fc80 	call	8fc8 <__muldf3>
    3f40:	01955574 	movhi	r6,21845
    3f44:	01cff974 	movhi	r7,16357
    3f48:	319564c4 	addi	r6,r6,21907
    3f4c:	39d55544 	addi	r7,r7,21845
    3f50:	1009883a 	mov	r4,r2
    3f54:	180b883a 	mov	r5,r3
    3f58:	0007b740 	call	7b74 <__adddf3>
    3f5c:	da800117 	ldw	r10,4(sp)
    3f60:	da400017 	ldw	r9,0(sp)
    3f64:	1009883a 	mov	r4,r2
    3f68:	500d883a 	mov	r6,r10
    3f6c:	480f883a 	mov	r7,r9
    3f70:	180b883a 	mov	r5,r3
    3f74:	0008fc80 	call	8fc8 <__muldf3>
    3f78:	01b41e74 	movhi	r6,53369
    3f7c:	01cff134 	movhi	r7,16324
    3f80:	a00b883a 	mov	r5,r20
    3f84:	31b1a7c4 	addi	r6,r6,-14689
    3f88:	39e68244 	addi	r7,r7,-26103
    3f8c:	b809883a 	mov	r4,r23
    3f90:	d8800115 	stw	r2,4(sp)
    3f94:	d8c00015 	stw	r3,0(sp)
    3f98:	0008fc80 	call	8fc8 <__muldf3>
    3f9c:	018763b4 	movhi	r6,7566
    3fa0:	01cff334 	movhi	r7,16332
    3fa4:	319e2bc4 	addi	r6,r6,30895
    3fa8:	39dc7144 	addi	r7,r7,29125
    3fac:	1009883a 	mov	r4,r2
    3fb0:	180b883a 	mov	r5,r3
    3fb4:	0007b740 	call	7b74 <__adddf3>
    3fb8:	a00f883a 	mov	r7,r20
    3fbc:	b80d883a 	mov	r6,r23
    3fc0:	1009883a 	mov	r4,r2
    3fc4:	180b883a 	mov	r5,r3
    3fc8:	0008fc80 	call	8fc8 <__muldf3>
    3fcc:	01a66634 	movhi	r6,39320
    3fd0:	01cff6b4 	movhi	r7,16346
    3fd4:	31be8104 	addi	r6,r6,-1532
    3fd8:	39e66644 	addi	r7,r7,-26215
    3fdc:	1009883a 	mov	r4,r2
    3fe0:	180b883a 	mov	r5,r3
    3fe4:	0007b740 	call	7b74 <__adddf3>
    3fe8:	a00f883a 	mov	r7,r20
    3fec:	b80d883a 	mov	r6,r23
    3ff0:	1009883a 	mov	r4,r2
    3ff4:	180b883a 	mov	r5,r3
    3ff8:	0008fc80 	call	8fc8 <__muldf3>
    3ffc:	da800117 	ldw	r10,4(sp)
    4000:	da400017 	ldw	r9,0(sp)
    4004:	100d883a 	mov	r6,r2
    4008:	180f883a 	mov	r7,r3
    400c:	480b883a 	mov	r5,r9
    4010:	5009883a 	mov	r4,r10
    4014:	0007b740 	call	7b74 <__adddf3>
    4018:	dac00217 	ldw	r11,8(sp)
    401c:	014001f4 	movhi	r5,7
    4020:	296e1444 	addi	r5,r5,-18351
    4024:	2ca5c83a 	sub	r18,r5,r18
    4028:	92e4b03a 	or	r18,r18,r11
    402c:	1829883a 	mov	r20,r3
    4030:	0480470e 	bge	zero,r18,4150 <__ieee754_log+0x544>
    4034:	000d883a 	mov	r6,zero
    4038:	01cff834 	movhi	r7,16352
    403c:	8809883a 	mov	r4,r17
    4040:	800b883a 	mov	r5,r16
    4044:	d8800115 	stw	r2,4(sp)
    4048:	0008fc80 	call	8fc8 <__muldf3>
    404c:	880d883a 	mov	r6,r17
    4050:	800f883a 	mov	r7,r16
    4054:	1009883a 	mov	r4,r2
    4058:	180b883a 	mov	r5,r3
    405c:	0008fc80 	call	8fc8 <__muldf3>
    4060:	da000117 	ldw	r8,4(sp)
    4064:	a00b883a 	mov	r5,r20
    4068:	100d883a 	mov	r6,r2
    406c:	4009883a 	mov	r4,r8
    4070:	180f883a 	mov	r7,r3
    4074:	1825883a 	mov	r18,r3
    4078:	d8800015 	stw	r2,0(sp)
    407c:	0007b740 	call	7b74 <__adddf3>
    4080:	a80f883a 	mov	r7,r21
    4084:	b00d883a 	mov	r6,r22
    4088:	1009883a 	mov	r4,r2
    408c:	180b883a 	mov	r5,r3
    4090:	0008fc80 	call	8fc8 <__muldf3>
    4094:	da400017 	ldw	r9,0(sp)
    4098:	102b883a 	mov	r21,r2
    409c:	1829883a 	mov	r20,r3
    40a0:	9800531e 	bne	r19,zero,41f0 <__ieee754_log+0x5e4>
    40a4:	4809883a 	mov	r4,r9
    40a8:	900b883a 	mov	r5,r18
    40ac:	100d883a 	mov	r6,r2
    40b0:	180f883a 	mov	r7,r3
    40b4:	00097740 	call	9774 <__subdf3>
    40b8:	100d883a 	mov	r6,r2
    40bc:	180f883a 	mov	r7,r3
    40c0:	8809883a 	mov	r4,r17
    40c4:	800b883a 	mov	r5,r16
    40c8:	00097740 	call	9774 <__subdf3>
    40cc:	003f4f06 	br	3e0c <__ieee754_log+0x200>
    40d0:	000d883a 	mov	r6,zero
    40d4:	000f883a 	mov	r7,zero
    40d8:	0009883a 	mov	r4,zero
    40dc:	0170d434 	movhi	r5,50000
    40e0:	00084640 	call	8464 <__divdf3>
    40e4:	003f4906 	br	3e0c <__ieee754_log+0x200>
    40e8:	98006826 	beq	r19,zero,428c <__ieee754_log+0x680>
    40ec:	9809883a 	mov	r4,r19
    40f0:	000a1540 	call	a154 <__floatsidf>
    40f4:	01cff9b4 	movhi	r7,16358
    40f8:	01bfb834 	movhi	r6,65248
    40fc:	39cb9084 	addi	r7,r7,11842
    4100:	1009883a 	mov	r4,r2
    4104:	180b883a 	mov	r5,r3
    4108:	1023883a 	mov	r17,r2
    410c:	1821883a 	mov	r16,r3
    4110:	0008fc80 	call	8fc8 <__muldf3>
    4114:	018d5e74 	movhi	r6,13689
    4118:	01cf7ab4 	movhi	r7,15850
    411c:	8809883a 	mov	r4,r17
    4120:	800b883a 	mov	r5,r16
    4124:	318f1d84 	addi	r6,r6,15478
    4128:	39ce7bc4 	addi	r7,r7,14831
    412c:	1027883a 	mov	r19,r2
    4130:	1825883a 	mov	r18,r3
    4134:	0008fc80 	call	8fc8 <__muldf3>
    4138:	100d883a 	mov	r6,r2
    413c:	180f883a 	mov	r7,r3
    4140:	9809883a 	mov	r4,r19
    4144:	900b883a 	mov	r5,r18
    4148:	0007b740 	call	7b74 <__adddf3>
    414c:	003f2f06 	br	3e0c <__ieee754_log+0x200>
    4150:	100d883a 	mov	r6,r2
    4154:	180f883a 	mov	r7,r3
    4158:	8809883a 	mov	r4,r17
    415c:	800b883a 	mov	r5,r16
    4160:	00097740 	call	9774 <__subdf3>
    4164:	b00d883a 	mov	r6,r22
    4168:	a80f883a 	mov	r7,r21
    416c:	1009883a 	mov	r4,r2
    4170:	180b883a 	mov	r5,r3
    4174:	0008fc80 	call	8fc8 <__muldf3>
    4178:	1029883a 	mov	r20,r2
    417c:	1825883a 	mov	r18,r3
    4180:	98000d26 	beq	r19,zero,41b8 <__ieee754_log+0x5ac>
    4184:	dcc00317 	ldw	r19,12(sp)
    4188:	01cff9b4 	movhi	r7,16358
    418c:	01bfb834 	movhi	r6,65248
    4190:	39cb9084 	addi	r7,r7,11842
    4194:	e009883a 	mov	r4,fp
    4198:	980b883a 	mov	r5,r19
    419c:	0008fc80 	call	8fc8 <__muldf3>
    41a0:	018d5e74 	movhi	r6,13689
    41a4:	01cf7ab4 	movhi	r7,15850
    41a8:	318f1d84 	addi	r6,r6,15478
    41ac:	39ce7bc4 	addi	r7,r7,14831
    41b0:	e009883a 	mov	r4,fp
    41b4:	003ef906 	br	3d9c <__ieee754_log+0x190>
    41b8:	a00d883a 	mov	r6,r20
    41bc:	900f883a 	mov	r7,r18
    41c0:	8809883a 	mov	r4,r17
    41c4:	800b883a 	mov	r5,r16
    41c8:	00097740 	call	9774 <__subdf3>
    41cc:	003f0f06 	br	3e0c <__ieee754_log+0x200>
    41d0:	200d883a 	mov	r6,r4
    41d4:	00097740 	call	9774 <__subdf3>
    41d8:	000d883a 	mov	r6,zero
    41dc:	000f883a 	mov	r7,zero
    41e0:	1009883a 	mov	r4,r2
    41e4:	180b883a 	mov	r5,r3
    41e8:	00084640 	call	8464 <__divdf3>
    41ec:	003f0706 	br	3e0c <__ieee754_log+0x200>
    41f0:	dcc00317 	ldw	r19,12(sp)
    41f4:	01cff9b4 	movhi	r7,16358
    41f8:	e009883a 	mov	r4,fp
    41fc:	980b883a 	mov	r5,r19
    4200:	01bfb834 	movhi	r6,65248
    4204:	39cb9084 	addi	r7,r7,11842
    4208:	da400015 	stw	r9,0(sp)
    420c:	0008fc80 	call	8fc8 <__muldf3>
    4210:	018d5e74 	movhi	r6,13689
    4214:	01cf7ab4 	movhi	r7,15850
    4218:	e009883a 	mov	r4,fp
    421c:	980b883a 	mov	r5,r19
    4220:	318f1d84 	addi	r6,r6,15478
    4224:	39ce7bc4 	addi	r7,r7,14831
    4228:	102d883a 	mov	r22,r2
    422c:	1827883a 	mov	r19,r3
    4230:	0008fc80 	call	8fc8 <__muldf3>
    4234:	a80d883a 	mov	r6,r21
    4238:	a00f883a 	mov	r7,r20
    423c:	1009883a 	mov	r4,r2
    4240:	180b883a 	mov	r5,r3
    4244:	0007b740 	call	7b74 <__adddf3>
    4248:	da400017 	ldw	r9,0(sp)
    424c:	900b883a 	mov	r5,r18
    4250:	100d883a 	mov	r6,r2
    4254:	4809883a 	mov	r4,r9
    4258:	180f883a 	mov	r7,r3
    425c:	00097740 	call	9774 <__subdf3>
    4260:	880d883a 	mov	r6,r17
    4264:	800f883a 	mov	r7,r16
    4268:	1009883a 	mov	r4,r2
    426c:	180b883a 	mov	r5,r3
    4270:	00097740 	call	9774 <__subdf3>
    4274:	100d883a 	mov	r6,r2
    4278:	180f883a 	mov	r7,r3
    427c:	b009883a 	mov	r4,r22
    4280:	980b883a 	mov	r5,r19
    4284:	00097740 	call	9774 <__subdf3>
    4288:	003ee006 	br	3e0c <__ieee754_log+0x200>
    428c:	0005883a 	mov	r2,zero
    4290:	0007883a 	mov	r3,zero
    4294:	003edd06 	br	3e0c <__ieee754_log+0x200>

00004298 <__ieee754_log10>:
    4298:	defff904 	addi	sp,sp,-28
    429c:	dc000015 	stw	r16,0(sp)
    42a0:	dfc00615 	stw	ra,24(sp)
    42a4:	dd400515 	stw	r21,20(sp)
    42a8:	dd000415 	stw	r20,16(sp)
    42ac:	dcc00315 	stw	r19,12(sp)
    42b0:	dc800215 	stw	r18,8(sp)
    42b4:	dc400115 	stw	r17,4(sp)
    42b8:	00c00434 	movhi	r3,16
    42bc:	280f883a 	mov	r7,r5
    42c0:	2021883a 	mov	r16,r4
    42c4:	28c01c0e 	bge	r5,r3,4338 <__ieee754_log10+0xa0>
    42c8:	00a00034 	movhi	r2,32768
    42cc:	10bfffc4 	addi	r2,r2,-1
    42d0:	2884703a 	and	r2,r5,r2
    42d4:	1104b03a 	or	r2,r2,r4
    42d8:	10005226 	beq	r2,zero,4424 <__ieee754_log10+0x18c>
    42dc:	28005716 	blt	r5,zero,443c <__ieee754_log10+0x1a4>
    42e0:	01d0d434 	movhi	r7,17232
    42e4:	000d883a 	mov	r6,zero
    42e8:	0008fc80 	call	8fc8 <__muldf3>
    42ec:	180f883a 	mov	r7,r3
    42f0:	1021883a 	mov	r16,r2
    42f4:	1805883a 	mov	r2,r3
    42f8:	00dffc34 	movhi	r3,32752
    42fc:	017ff284 	movi	r5,-54
    4300:	10c01116 	blt	r2,r3,4348 <__ieee754_log10+0xb0>
    4304:	800d883a 	mov	r6,r16
    4308:	8009883a 	mov	r4,r16
    430c:	380b883a 	mov	r5,r7
    4310:	0007b740 	call	7b74 <__adddf3>
    4314:	dfc00617 	ldw	ra,24(sp)
    4318:	dd400517 	ldw	r21,20(sp)
    431c:	dd000417 	ldw	r20,16(sp)
    4320:	dcc00317 	ldw	r19,12(sp)
    4324:	dc800217 	ldw	r18,8(sp)
    4328:	dc400117 	ldw	r17,4(sp)
    432c:	dc000017 	ldw	r16,0(sp)
    4330:	dec00704 	addi	sp,sp,28
    4334:	f800283a 	ret
    4338:	2805883a 	mov	r2,r5
    433c:	00dffc34 	movhi	r3,32752
    4340:	000b883a 	mov	r5,zero
    4344:	10ffef0e 	bge	r2,r3,4304 <__ieee754_log10+0x6c>
    4348:	1009d53a 	srai	r4,r2,20
    434c:	04400434 	movhi	r17,16
    4350:	8c7fffc4 	addi	r17,r17,-1
    4354:	213f0044 	addi	r4,r4,-1023
    4358:	2149883a 	add	r4,r4,r5
    435c:	2024d7fa 	srli	r18,r4,31
    4360:	1462703a 	and	r17,r2,r17
    4364:	2489883a 	add	r4,r4,r18
    4368:	000a1540 	call	a154 <__floatsidf>
    436c:	0180ffc4 	movi	r6,1023
    4370:	348dc83a 	sub	r6,r6,r18
    4374:	300c953a 	slli	r6,r6,20
    4378:	8009883a 	mov	r4,r16
    437c:	1821883a 	mov	r16,r3
    4380:	344ab03a 	or	r5,r6,r17
    4384:	1023883a 	mov	r17,r2
    4388:	0003c0c0 	call	3c0c <__ieee754_log>
    438c:	01847c74 	movhi	r6,4593
    4390:	01cf56b4 	movhi	r7,15706
    4394:	8809883a 	mov	r4,r17
    4398:	800b883a 	mov	r5,r16
    439c:	318acd84 	addi	r6,r6,11062
    43a0:	39ffbcc4 	addi	r7,r7,-269
    43a4:	102b883a 	mov	r21,r2
    43a8:	1829883a 	mov	r20,r3
    43ac:	0008fc80 	call	8fc8 <__muldf3>
    43b0:	018549f4 	movhi	r6,5415
    43b4:	01cff734 	movhi	r7,16348
    43b8:	a809883a 	mov	r4,r21
    43bc:	a00b883a 	mov	r5,r20
    43c0:	31b94384 	addi	r6,r6,-6898
    43c4:	39f2dec4 	addi	r7,r7,-13445
    43c8:	1027883a 	mov	r19,r2
    43cc:	1825883a 	mov	r18,r3
    43d0:	0008fc80 	call	8fc8 <__muldf3>
    43d4:	9809883a 	mov	r4,r19
    43d8:	900b883a 	mov	r5,r18
    43dc:	100d883a 	mov	r6,r2
    43e0:	180f883a 	mov	r7,r3
    43e4:	0007b740 	call	7b74 <__adddf3>
    43e8:	019427f4 	movhi	r6,20639
    43ec:	01cff4f4 	movhi	r7,16339
    43f0:	8809883a 	mov	r4,r17
    43f4:	800b883a 	mov	r5,r16
    43f8:	31980004 	addi	r6,r6,24576
    43fc:	39d104c4 	addi	r7,r7,17427
    4400:	1027883a 	mov	r19,r2
    4404:	1825883a 	mov	r18,r3
    4408:	0008fc80 	call	8fc8 <__muldf3>
    440c:	100d883a 	mov	r6,r2
    4410:	180f883a 	mov	r7,r3
    4414:	9809883a 	mov	r4,r19
    4418:	900b883a 	mov	r5,r18
    441c:	0007b740 	call	7b74 <__adddf3>
    4420:	003fbc06 	br	4314 <__ieee754_log10+0x7c>
    4424:	000d883a 	mov	r6,zero
    4428:	000f883a 	mov	r7,zero
    442c:	0009883a 	mov	r4,zero
    4430:	0170d434 	movhi	r5,50000
    4434:	00084640 	call	8464 <__divdf3>
    4438:	003fb606 	br	4314 <__ieee754_log10+0x7c>
    443c:	200d883a 	mov	r6,r4
    4440:	00097740 	call	9774 <__subdf3>
    4444:	000d883a 	mov	r6,zero
    4448:	000f883a 	mov	r7,zero
    444c:	1009883a 	mov	r4,r2
    4450:	180b883a 	mov	r5,r3
    4454:	00084640 	call	8464 <__divdf3>
    4458:	003fae06 	br	4314 <__ieee754_log10+0x7c>

0000445c <__ieee754_pow>:
    445c:	00e00034 	movhi	r3,32768
    4460:	deffeb04 	addi	sp,sp,-84
    4464:	18ffffc4 	addi	r3,r3,-1
    4468:	dc000b15 	stw	r16,44(sp)
    446c:	3021883a 	mov	r16,r6
    4470:	38cc703a 	and	r6,r7,r3
    4474:	dd401015 	stw	r21,64(sp)
    4478:	dc400c15 	stw	r17,48(sp)
    447c:	dfc01415 	stw	ra,80(sp)
    4480:	df001315 	stw	fp,76(sp)
    4484:	ddc01215 	stw	r23,72(sp)
    4488:	dd801115 	stw	r22,68(sp)
    448c:	dd000f15 	stw	r20,60(sp)
    4490:	dcc00e15 	stw	r19,56(sp)
    4494:	dc800d15 	stw	r18,52(sp)
    4498:	3404b03a 	or	r2,r6,r16
    449c:	3823883a 	mov	r17,r7
    44a0:	282b883a 	mov	r21,r5
    44a4:	1000191e 	bne	r2,zero,450c <__ieee754_pow+0xb0>
    44a8:	2880023c 	xorhi	r2,r5,8
    44ac:	2006d7fa 	srli	r3,r4,31
    44b0:	1004907a 	slli	r2,r2,1
    44b4:	017ffc34 	movhi	r5,65520
    44b8:	200c907a 	slli	r6,r4,1
    44bc:	1884b03a 	or	r2,r3,r2
    44c0:	2880202e 	bgeu	r5,r2,4544 <__ieee754_pow+0xe8>
    44c4:	800d883a 	mov	r6,r16
    44c8:	880f883a 	mov	r7,r17
    44cc:	a80b883a 	mov	r5,r21
    44d0:	0007b740 	call	7b74 <__adddf3>
    44d4:	102d883a 	mov	r22,r2
    44d8:	b005883a 	mov	r2,r22
    44dc:	dfc01417 	ldw	ra,80(sp)
    44e0:	df001317 	ldw	fp,76(sp)
    44e4:	ddc01217 	ldw	r23,72(sp)
    44e8:	dd801117 	ldw	r22,68(sp)
    44ec:	dd401017 	ldw	r21,64(sp)
    44f0:	dd000f17 	ldw	r20,60(sp)
    44f4:	dcc00e17 	ldw	r19,56(sp)
    44f8:	dc800d17 	ldw	r18,52(sp)
    44fc:	dc400c17 	ldw	r17,48(sp)
    4500:	dc000b17 	ldw	r16,44(sp)
    4504:	dec01504 	addi	sp,sp,84
    4508:	f800283a 	ret
    450c:	28e6703a 	and	r19,r5,r3
    4510:	009ffc34 	movhi	r2,32752
    4514:	14c00f0e 	bge	r2,r19,4554 <__ieee754_pow+0xf8>
    4518:	00b00434 	movhi	r2,49168
    451c:	a885883a 	add	r2,r21,r2
    4520:	1104b03a 	or	r2,r2,r4
    4524:	103fe71e 	bne	r2,zero,44c4 <__ieee754_pow+0x68>
    4528:	8880023c 	xorhi	r2,r17,8
    452c:	8006d7fa 	srli	r3,r16,31
    4530:	1004907a 	slli	r2,r2,1
    4534:	017ffc34 	movhi	r5,65520
    4538:	800c907a 	slli	r6,r16,1
    453c:	1884b03a 	or	r2,r3,r2
    4540:	28bfe036 	bltu	r5,r2,44c4 <__ieee754_pow+0x68>
    4544:	11402726 	beq	r2,r5,45e4 <__ieee754_pow+0x188>
    4548:	002d883a 	mov	r22,zero
    454c:	00cffc34 	movhi	r3,16368
    4550:	003fe106 	br	44d8 <__ieee754_pow+0x7c>
    4554:	98802526 	beq	r19,r2,45ec <__ieee754_pow+0x190>
    4558:	009ffc34 	movhi	r2,32752
    455c:	11bfee16 	blt	r2,r6,4518 <__ieee754_pow+0xbc>
    4560:	30802426 	beq	r6,r2,45f4 <__ieee754_pow+0x198>
    4564:	a8006e16 	blt	r21,zero,4720 <__ieee754_pow+0x2c4>
    4568:	0025883a 	mov	r18,zero
    456c:	80002326 	beq	r16,zero,45fc <__ieee754_pow+0x1a0>
    4570:	00e00034 	movhi	r3,32768
    4574:	18ffffc4 	addi	r3,r3,-1
    4578:	202d883a 	mov	r22,r4
    457c:	a8c6703a 	and	r3,r21,r3
    4580:	20003a26 	beq	r4,zero,466c <__ieee754_pow+0x210>
    4584:	a828d7fa 	srli	r20,r21,31
    4588:	a53fffc4 	addi	r20,r20,-1
    458c:	9504b03a 	or	r2,r18,r20
    4590:	10008026 	beq	r2,zero,4794 <__ieee754_pow+0x338>
    4594:	00907834 	movhi	r2,16864
    4598:	1180810e 	bge	r2,r6,47a0 <__ieee754_pow+0x344>
    459c:	0090fc34 	movhi	r2,17392
    45a0:	11834f0e 	bge	r2,r6,52e0 <__ieee754_pow+0xe84>
    45a4:	008ffc34 	movhi	r2,16368
    45a8:	9880480e 	bge	r19,r2,46cc <__ieee754_pow+0x270>
    45ac:	88004816 	blt	r17,zero,46d0 <__ieee754_pow+0x274>
    45b0:	0009883a 	mov	r4,zero
    45b4:	dfc01417 	ldw	ra,80(sp)
    45b8:	df001317 	ldw	fp,76(sp)
    45bc:	ddc01217 	ldw	r23,72(sp)
    45c0:	dd801117 	ldw	r22,68(sp)
    45c4:	dd401017 	ldw	r21,64(sp)
    45c8:	dd000f17 	ldw	r20,60(sp)
    45cc:	dcc00e17 	ldw	r19,56(sp)
    45d0:	dc800d17 	ldw	r18,52(sp)
    45d4:	dc400c17 	ldw	r17,48(sp)
    45d8:	dc000b17 	ldw	r16,44(sp)
    45dc:	dec01504 	addi	sp,sp,84
    45e0:	000743c1 	jmpi	743c <__math_uflow>
    45e4:	303fd826 	beq	r6,zero,4548 <__ieee754_pow+0xec>
    45e8:	003fb606 	br	44c4 <__ieee754_pow+0x68>
    45ec:	203fb51e 	bne	r4,zero,44c4 <__ieee754_pow+0x68>
    45f0:	003fd906 	br	4558 <__ieee754_pow+0xfc>
    45f4:	803fdb26 	beq	r16,zero,4564 <__ieee754_pow+0x108>
    45f8:	003fc706 	br	4518 <__ieee754_pow+0xbc>
    45fc:	009ffc34 	movhi	r2,32752
    4600:	30805a26 	beq	r6,r2,476c <__ieee754_pow+0x310>
    4604:	008ffc34 	movhi	r2,16368
    4608:	30831026 	beq	r6,r2,524c <__ieee754_pow+0xdf0>
    460c:	00900034 	movhi	r2,16384
    4610:	8883a626 	beq	r17,r2,54ac <__ieee754_pow+0x1050>
    4614:	008ff834 	movhi	r2,16352
    4618:	88bfd51e 	bne	r17,r2,4570 <__ieee754_pow+0x114>
    461c:	a83fd416 	blt	r21,zero,4570 <__ieee754_pow+0x114>
    4620:	a80b883a 	mov	r5,r21
    4624:	dfc01417 	ldw	ra,80(sp)
    4628:	df001317 	ldw	fp,76(sp)
    462c:	ddc01217 	ldw	r23,72(sp)
    4630:	dd801117 	ldw	r22,68(sp)
    4634:	dd401017 	ldw	r21,64(sp)
    4638:	dd000f17 	ldw	r20,60(sp)
    463c:	dcc00e17 	ldw	r19,56(sp)
    4640:	dc800d17 	ldw	r18,52(sp)
    4644:	dc400c17 	ldw	r17,48(sp)
    4648:	dc000b17 	ldw	r16,44(sp)
    464c:	dec01504 	addi	sp,sp,84
    4650:	0005cb01 	jmpi	5cb0 <__ieee754_sqrt>
    4654:	20004f1e 	bne	r4,zero,4794 <__ieee754_pow+0x338>
    4658:	00e00034 	movhi	r3,32768
    465c:	18ffffc4 	addi	r3,r3,-1
    4660:	002d883a 	mov	r22,zero
    4664:	a8c6703a 	and	r3,r21,r3
    4668:	0025883a 	mov	r18,zero
    466c:	98000526 	beq	r19,zero,4684 <__ieee754_pow+0x228>
    4670:	00900034 	movhi	r2,16384
    4674:	10bfffc4 	addi	r2,r2,-1
    4678:	a884703a 	and	r2,r21,r2
    467c:	014ffc34 	movhi	r5,16368
    4680:	117fc01e 	bne	r2,r5,4584 <__ieee754_pow+0x128>
    4684:	88001f16 	blt	r17,zero,4704 <__ieee754_pow+0x2a8>
    4688:	a83f930e 	bge	r21,zero,44d8 <__ieee754_pow+0x7c>
    468c:	00b00434 	movhi	r2,49168
    4690:	9885883a 	add	r2,r19,r2
    4694:	1484b03a 	or	r2,r2,r18
    4698:	10038a1e 	bne	r2,zero,54c4 <__ieee754_pow+0x1068>
    469c:	b00d883a 	mov	r6,r22
    46a0:	180f883a 	mov	r7,r3
    46a4:	3009883a 	mov	r4,r6
    46a8:	380b883a 	mov	r5,r7
    46ac:	00097740 	call	9774 <__subdf3>
    46b0:	100d883a 	mov	r6,r2
    46b4:	180f883a 	mov	r7,r3
    46b8:	1009883a 	mov	r4,r2
    46bc:	180b883a 	mov	r5,r3
    46c0:	00084640 	call	8464 <__divdf3>
    46c4:	102d883a 	mov	r22,r2
    46c8:	003f8306 	br	44d8 <__ieee754_pow+0x7c>
    46cc:	047fb80e 	bge	zero,r17,45b0 <__ieee754_pow+0x154>
    46d0:	0009883a 	mov	r4,zero
    46d4:	dfc01417 	ldw	ra,80(sp)
    46d8:	df001317 	ldw	fp,76(sp)
    46dc:	ddc01217 	ldw	r23,72(sp)
    46e0:	dd801117 	ldw	r22,68(sp)
    46e4:	dd401017 	ldw	r21,64(sp)
    46e8:	dd000f17 	ldw	r20,60(sp)
    46ec:	dcc00e17 	ldw	r19,56(sp)
    46f0:	dc800d17 	ldw	r18,52(sp)
    46f4:	dc400c17 	ldw	r17,48(sp)
    46f8:	dc000b17 	ldw	r16,44(sp)
    46fc:	dec01504 	addi	sp,sp,84
    4700:	00074541 	jmpi	7454 <__math_oflow>
    4704:	180f883a 	mov	r7,r3
    4708:	000d883a 	mov	r6,zero
    470c:	0009883a 	mov	r4,zero
    4710:	014ffc34 	movhi	r5,16368
    4714:	00084640 	call	8464 <__divdf3>
    4718:	102d883a 	mov	r22,r2
    471c:	003fda06 	br	4688 <__ieee754_pow+0x22c>
    4720:	0090d034 	movhi	r2,17216
    4724:	30800e0e 	bge	r6,r2,4760 <__ieee754_pow+0x304>
    4728:	008ffc34 	movhi	r2,16368
    472c:	30800916 	blt	r6,r2,4754 <__ieee754_pow+0x2f8>
    4730:	3005d53a 	srai	r2,r6,20
    4734:	10bf0044 	addi	r2,r2,-1023
    4738:	10c00550 	cmplti	r3,r2,21
    473c:	18034c1e 	bne	r3,zero,5470 <__ieee754_pow+0x1014>
    4740:	00c00d04 	movi	r3,52
    4744:	1885c83a 	sub	r2,r3,r2
    4748:	8086d83a 	srl	r3,r16,r2
    474c:	1884983a 	sll	r2,r3,r2
    4750:	14037926 	beq	r2,r16,5538 <__ieee754_pow+0x10dc>
    4754:	0025883a 	mov	r18,zero
    4758:	803faa26 	beq	r16,zero,4604 <__ieee754_pow+0x1a8>
    475c:	003f8406 	br	4570 <__ieee754_pow+0x114>
    4760:	04800084 	movi	r18,2
    4764:	803f821e 	bne	r16,zero,4570 <__ieee754_pow+0x114>
    4768:	003fa406 	br	45fc <__ieee754_pow+0x1a0>
    476c:	00b00434 	movhi	r2,49168
    4770:	9885883a 	add	r2,r19,r2
    4774:	1104b03a 	or	r2,r2,r4
    4778:	103f7326 	beq	r2,zero,4548 <__ieee754_pow+0xec>
    477c:	008ffc34 	movhi	r2,16368
    4780:	002d883a 	mov	r22,zero
    4784:	98833716 	blt	r19,r2,5464 <__ieee754_pow+0x1008>
    4788:	88033416 	blt	r17,zero,545c <__ieee754_pow+0x1000>
    478c:	8807883a 	mov	r3,r17
    4790:	003f5106 	br	44d8 <__ieee754_pow+0x7c>
    4794:	200d883a 	mov	r6,r4
    4798:	a80f883a 	mov	r7,r21
    479c:	003fc106 	br	46a4 <__ieee754_pow+0x248>
    47a0:	ad5ffc2c 	andhi	r21,r21,32752
    47a4:	a802cc1e 	bne	r21,zero,52d8 <__ieee754_pow+0xe7c>
    47a8:	180b883a 	mov	r5,r3
    47ac:	000d883a 	mov	r6,zero
    47b0:	01d0d034 	movhi	r7,17216
    47b4:	0008fc80 	call	8fc8 <__muldf3>
    47b8:	102d883a 	mov	r22,r2
    47bc:	1827883a 	mov	r19,r3
    47c0:	017ff2c4 	movi	r5,-53
    47c4:	9809d53a 	srai	r4,r19,20
    47c8:	00800434 	movhi	r2,16
    47cc:	10bfffc4 	addi	r2,r2,-1
    47d0:	00c00134 	movhi	r3,4
    47d4:	213f0044 	addi	r4,r4,-1023
    47d8:	9884703a 	and	r2,r19,r2
    47dc:	18e62384 	addi	r3,r3,-26482
    47e0:	2159883a 	add	r12,r4,r5
    47e4:	170ffc34 	orhi	fp,r2,16368
    47e8:	1880060e 	bge	r3,r2,4804 <__ieee754_pow+0x3a8>
    47ec:	00c00334 	movhi	r3,12
    47f0:	18ed9e44 	addi	r3,r3,-18823
    47f4:	1883370e 	bge	r3,r2,54d4 <__ieee754_pow+0x1078>
    47f8:	00bffc34 	movhi	r2,65520
    47fc:	63000044 	addi	r12,r12,1
    4800:	e0b9883a 	add	fp,fp,r2
    4804:	d8000015 	stw	zero,0(sp)
    4808:	d8000115 	stw	zero,4(sp)
    480c:	d8000a15 	stw	zero,40(sp)
    4810:	001f883a 	mov	r15,zero
    4814:	002f883a 	mov	r23,zero
    4818:	034ffc34 	movhi	r13,16368
    481c:	680f883a 	mov	r7,r13
    4820:	b009883a 	mov	r4,r22
    4824:	e00b883a 	mov	r5,fp
    4828:	000d883a 	mov	r6,zero
    482c:	dbc00915 	stw	r15,36(sp)
    4830:	db000815 	stw	r12,32(sp)
    4834:	db400215 	stw	r13,8(sp)
    4838:	00097740 	call	9774 <__subdf3>
    483c:	db400217 	ldw	r13,8(sp)
    4840:	b009883a 	mov	r4,r22
    4844:	e00b883a 	mov	r5,fp
    4848:	680f883a 	mov	r7,r13
    484c:	000d883a 	mov	r6,zero
    4850:	db400615 	stw	r13,24(sp)
    4854:	d8800315 	stw	r2,12(sp)
    4858:	d8c00215 	stw	r3,8(sp)
    485c:	0007b740 	call	7b74 <__adddf3>
    4860:	100d883a 	mov	r6,r2
    4864:	180f883a 	mov	r7,r3
    4868:	0009883a 	mov	r4,zero
    486c:	014ffc34 	movhi	r5,16368
    4870:	00084640 	call	8464 <__divdf3>
    4874:	dac00217 	ldw	r11,8(sp)
    4878:	da400317 	ldw	r9,12(sp)
    487c:	100d883a 	mov	r6,r2
    4880:	580b883a 	mov	r5,r11
    4884:	4809883a 	mov	r4,r9
    4888:	180f883a 	mov	r7,r3
    488c:	d8800515 	stw	r2,20(sp)
    4890:	d8c00415 	stw	r3,16(sp)
    4894:	0008fc80 	call	8fc8 <__muldf3>
    4898:	e009d07a 	srai	r4,fp,1
    489c:	01400234 	movhi	r5,8
    48a0:	000d883a 	mov	r6,zero
    48a4:	21080034 	orhi	r4,r4,8192
    48a8:	2149883a 	add	r4,r4,r5
    48ac:	25ef883a 	add	r23,r4,r23
    48b0:	b80f883a 	mov	r7,r23
    48b4:	0009883a 	mov	r4,zero
    48b8:	180b883a 	mov	r5,r3
    48bc:	1827883a 	mov	r19,r3
    48c0:	102b883a 	mov	r21,r2
    48c4:	0008fc80 	call	8fc8 <__muldf3>
    48c8:	da400317 	ldw	r9,12(sp)
    48cc:	dac00217 	ldw	r11,8(sp)
    48d0:	100d883a 	mov	r6,r2
    48d4:	4809883a 	mov	r4,r9
    48d8:	580b883a 	mov	r5,r11
    48dc:	180f883a 	mov	r7,r3
    48e0:	00097740 	call	9774 <__subdf3>
    48e4:	db400617 	ldw	r13,24(sp)
    48e8:	b80b883a 	mov	r5,r23
    48ec:	000d883a 	mov	r6,zero
    48f0:	680f883a 	mov	r7,r13
    48f4:	0009883a 	mov	r4,zero
    48f8:	182f883a 	mov	r23,r3
    48fc:	d8800215 	stw	r2,8(sp)
    4900:	00097740 	call	9774 <__subdf3>
    4904:	b009883a 	mov	r4,r22
    4908:	e00b883a 	mov	r5,fp
    490c:	100d883a 	mov	r6,r2
    4910:	180f883a 	mov	r7,r3
    4914:	00097740 	call	9774 <__subdf3>
    4918:	980f883a 	mov	r7,r19
    491c:	000d883a 	mov	r6,zero
    4920:	1009883a 	mov	r4,r2
    4924:	180b883a 	mov	r5,r3
    4928:	0008fc80 	call	8fc8 <__muldf3>
    492c:	dac00217 	ldw	r11,8(sp)
    4930:	b80b883a 	mov	r5,r23
    4934:	100d883a 	mov	r6,r2
    4938:	5809883a 	mov	r4,r11
    493c:	180f883a 	mov	r7,r3
    4940:	00097740 	call	9774 <__subdf3>
    4944:	da000417 	ldw	r8,16(sp)
    4948:	da800517 	ldw	r10,20(sp)
    494c:	1009883a 	mov	r4,r2
    4950:	400f883a 	mov	r7,r8
    4954:	500d883a 	mov	r6,r10
    4958:	180b883a 	mov	r5,r3
    495c:	0008fc80 	call	8fc8 <__muldf3>
    4960:	a80d883a 	mov	r6,r21
    4964:	980f883a 	mov	r7,r19
    4968:	a809883a 	mov	r4,r21
    496c:	980b883a 	mov	r5,r19
    4970:	d8800415 	stw	r2,16(sp)
    4974:	d8c00315 	stw	r3,12(sp)
    4978:	0008fc80 	call	8fc8 <__muldf3>
    497c:	01929174 	movhi	r6,19013
    4980:	01cff2b4 	movhi	r7,16330
    4984:	3193bbc4 	addi	r6,r6,20207
    4988:	39df8a04 	addi	r7,r7,32296
    498c:	1009883a 	mov	r4,r2
    4990:	180b883a 	mov	r5,r3
    4994:	102f883a 	mov	r23,r2
    4998:	182d883a 	mov	r22,r3
    499c:	0008fc80 	call	8fc8 <__muldf3>
    49a0:	01a4f2b4 	movhi	r6,37834
    49a4:	01cff3b4 	movhi	r7,16334
    49a8:	31b6d944 	addi	r6,r6,-9371
    49ac:	39e19284 	addi	r7,r7,-31158
    49b0:	1009883a 	mov	r4,r2
    49b4:	180b883a 	mov	r5,r3
    49b8:	0007b740 	call	7b74 <__adddf3>
    49bc:	b80d883a 	mov	r6,r23
    49c0:	b00f883a 	mov	r7,r22
    49c4:	1009883a 	mov	r4,r2
    49c8:	180b883a 	mov	r5,r3
    49cc:	0008fc80 	call	8fc8 <__muldf3>
    49d0:	01aa4774 	movhi	r6,43293
    49d4:	01cff474 	movhi	r7,16337
    49d8:	31904044 	addi	r6,r6,16641
    49dc:	39dd1804 	addi	r7,r7,29792
    49e0:	1009883a 	mov	r4,r2
    49e4:	180b883a 	mov	r5,r3
    49e8:	0007b740 	call	7b74 <__adddf3>
    49ec:	b80d883a 	mov	r6,r23
    49f0:	b00f883a 	mov	r7,r22
    49f4:	1009883a 	mov	r4,r2
    49f8:	180b883a 	mov	r5,r3
    49fc:	0008fc80 	call	8fc8 <__muldf3>
    4a00:	019463f4 	movhi	r6,20879
    4a04:	01cff574 	movhi	r7,16341
    4a08:	31899344 	addi	r6,r6,9805
    4a0c:	39d55544 	addi	r7,r7,21845
    4a10:	1009883a 	mov	r4,r2
    4a14:	180b883a 	mov	r5,r3
    4a18:	0007b740 	call	7b74 <__adddf3>
    4a1c:	b80d883a 	mov	r6,r23
    4a20:	b00f883a 	mov	r7,r22
    4a24:	1009883a 	mov	r4,r2
    4a28:	180b883a 	mov	r5,r3
    4a2c:	0008fc80 	call	8fc8 <__muldf3>
    4a30:	01b6dc34 	movhi	r6,56176
    4a34:	01cff6f4 	movhi	r7,16347
    4a38:	31aaffc4 	addi	r6,r6,-21505
    4a3c:	39db6d84 	addi	r7,r7,28086
    4a40:	1009883a 	mov	r4,r2
    4a44:	180b883a 	mov	r5,r3
    4a48:	0007b740 	call	7b74 <__adddf3>
    4a4c:	b80d883a 	mov	r6,r23
    4a50:	b00f883a 	mov	r7,r22
    4a54:	1009883a 	mov	r4,r2
    4a58:	180b883a 	mov	r5,r3
    4a5c:	0008fc80 	call	8fc8 <__muldf3>
    4a60:	018cccf4 	movhi	r6,13107
    4a64:	01cff8f4 	movhi	r7,16355
    4a68:	318cc0c4 	addi	r6,r6,13059
    4a6c:	39ccccc4 	addi	r7,r7,13107
    4a70:	1009883a 	mov	r4,r2
    4a74:	180b883a 	mov	r5,r3
    4a78:	0007b740 	call	7b74 <__adddf3>
    4a7c:	b80d883a 	mov	r6,r23
    4a80:	b00f883a 	mov	r7,r22
    4a84:	b809883a 	mov	r4,r23
    4a88:	b00b883a 	mov	r5,r22
    4a8c:	1839883a 	mov	fp,r3
    4a90:	d8800215 	stw	r2,8(sp)
    4a94:	0008fc80 	call	8fc8 <__muldf3>
    4a98:	dac00217 	ldw	r11,8(sp)
    4a9c:	e00b883a 	mov	r5,fp
    4aa0:	100d883a 	mov	r6,r2
    4aa4:	5809883a 	mov	r4,r11
    4aa8:	180f883a 	mov	r7,r3
    4aac:	0008fc80 	call	8fc8 <__muldf3>
    4ab0:	980f883a 	mov	r7,r19
    4ab4:	a809883a 	mov	r4,r21
    4ab8:	980b883a 	mov	r5,r19
    4abc:	000d883a 	mov	r6,zero
    4ac0:	102f883a 	mov	r23,r2
    4ac4:	182d883a 	mov	r22,r3
    4ac8:	0007b740 	call	7b74 <__adddf3>
    4acc:	da800417 	ldw	r10,16(sp)
    4ad0:	da400317 	ldw	r9,12(sp)
    4ad4:	1009883a 	mov	r4,r2
    4ad8:	500d883a 	mov	r6,r10
    4adc:	480f883a 	mov	r7,r9
    4ae0:	180b883a 	mov	r5,r3
    4ae4:	da800715 	stw	r10,28(sp)
    4ae8:	da400615 	stw	r9,24(sp)
    4aec:	0008fc80 	call	8fc8 <__muldf3>
    4af0:	b80d883a 	mov	r6,r23
    4af4:	b00f883a 	mov	r7,r22
    4af8:	1009883a 	mov	r4,r2
    4afc:	180b883a 	mov	r5,r3
    4b00:	0007b740 	call	7b74 <__adddf3>
    4b04:	980f883a 	mov	r7,r19
    4b08:	980b883a 	mov	r5,r19
    4b0c:	000d883a 	mov	r6,zero
    4b10:	0009883a 	mov	r4,zero
    4b14:	d8800315 	stw	r2,12(sp)
    4b18:	d8c00215 	stw	r3,8(sp)
    4b1c:	0008fc80 	call	8fc8 <__muldf3>
    4b20:	000d883a 	mov	r6,zero
    4b24:	01d00234 	movhi	r7,16392
    4b28:	1009883a 	mov	r4,r2
    4b2c:	180b883a 	mov	r5,r3
    4b30:	d8800515 	stw	r2,20(sp)
    4b34:	d8c00415 	stw	r3,16(sp)
    4b38:	0007b740 	call	7b74 <__adddf3>
    4b3c:	da000317 	ldw	r8,12(sp)
    4b40:	dac00217 	ldw	r11,8(sp)
    4b44:	1009883a 	mov	r4,r2
    4b48:	400d883a 	mov	r6,r8
    4b4c:	580f883a 	mov	r7,r11
    4b50:	180b883a 	mov	r5,r3
    4b54:	0007b740 	call	7b74 <__adddf3>
    4b58:	980b883a 	mov	r5,r19
    4b5c:	000d883a 	mov	r6,zero
    4b60:	180f883a 	mov	r7,r3
    4b64:	0009883a 	mov	r4,zero
    4b68:	182d883a 	mov	r22,r3
    4b6c:	0008fc80 	call	8fc8 <__muldf3>
    4b70:	b00b883a 	mov	r5,r22
    4b74:	000d883a 	mov	r6,zero
    4b78:	01d00234 	movhi	r7,16392
    4b7c:	0009883a 	mov	r4,zero
    4b80:	1039883a 	mov	fp,r2
    4b84:	182f883a 	mov	r23,r3
    4b88:	00097740 	call	9774 <__subdf3>
    4b8c:	db800517 	ldw	r14,20(sp)
    4b90:	db400417 	ldw	r13,16(sp)
    4b94:	1009883a 	mov	r4,r2
    4b98:	700d883a 	mov	r6,r14
    4b9c:	680f883a 	mov	r7,r13
    4ba0:	180b883a 	mov	r5,r3
    4ba4:	00097740 	call	9774 <__subdf3>
    4ba8:	da000317 	ldw	r8,12(sp)
    4bac:	dac00217 	ldw	r11,8(sp)
    4bb0:	100d883a 	mov	r6,r2
    4bb4:	4009883a 	mov	r4,r8
    4bb8:	580b883a 	mov	r5,r11
    4bbc:	180f883a 	mov	r7,r3
    4bc0:	00097740 	call	9774 <__subdf3>
    4bc4:	a80d883a 	mov	r6,r21
    4bc8:	980f883a 	mov	r7,r19
    4bcc:	1009883a 	mov	r4,r2
    4bd0:	180b883a 	mov	r5,r3
    4bd4:	0008fc80 	call	8fc8 <__muldf3>
    4bd8:	da800717 	ldw	r10,28(sp)
    4bdc:	da400617 	ldw	r9,24(sp)
    4be0:	b00f883a 	mov	r7,r22
    4be4:	5009883a 	mov	r4,r10
    4be8:	480b883a 	mov	r5,r9
    4bec:	000d883a 	mov	r6,zero
    4bf0:	102b883a 	mov	r21,r2
    4bf4:	1827883a 	mov	r19,r3
    4bf8:	0008fc80 	call	8fc8 <__muldf3>
    4bfc:	a809883a 	mov	r4,r21
    4c00:	980b883a 	mov	r5,r19
    4c04:	100d883a 	mov	r6,r2
    4c08:	180f883a 	mov	r7,r3
    4c0c:	0007b740 	call	7b74 <__adddf3>
    4c10:	e009883a 	mov	r4,fp
    4c14:	b80b883a 	mov	r5,r23
    4c18:	100d883a 	mov	r6,r2
    4c1c:	180f883a 	mov	r7,r3
    4c20:	102d883a 	mov	r22,r2
    4c24:	182b883a 	mov	r21,r3
    4c28:	0007b740 	call	7b74 <__adddf3>
    4c2c:	01cffbf4 	movhi	r7,16367
    4c30:	01b80034 	movhi	r6,57344
    4c34:	39f1c244 	addi	r7,r7,-14583
    4c38:	0009883a 	mov	r4,zero
    4c3c:	180b883a 	mov	r5,r3
    4c40:	1827883a 	mov	r19,r3
    4c44:	0008fc80 	call	8fc8 <__muldf3>
    4c48:	e00d883a 	mov	r6,fp
    4c4c:	b80f883a 	mov	r7,r23
    4c50:	980b883a 	mov	r5,r19
    4c54:	0009883a 	mov	r4,zero
    4c58:	1039883a 	mov	fp,r2
    4c5c:	182f883a 	mov	r23,r3
    4c60:	00097740 	call	9774 <__subdf3>
    4c64:	b009883a 	mov	r4,r22
    4c68:	a80b883a 	mov	r5,r21
    4c6c:	100d883a 	mov	r6,r2
    4c70:	180f883a 	mov	r7,r3
    4c74:	00097740 	call	9774 <__subdf3>
    4c78:	01b70eb4 	movhi	r6,56378
    4c7c:	01cffbf4 	movhi	r7,16367
    4c80:	3180ff44 	addi	r6,r6,1021
    4c84:	39f1c244 	addi	r7,r7,-14583
    4c88:	1009883a 	mov	r4,r2
    4c8c:	180b883a 	mov	r5,r3
    4c90:	0008fc80 	call	8fc8 <__muldf3>
    4c94:	018516f4 	movhi	r6,5211
    4c98:	01ef8fb4 	movhi	r7,48702
    4c9c:	980b883a 	mov	r5,r19
    4ca0:	31807d44 	addi	r6,r6,501
    4ca4:	39cbf804 	addi	r7,r7,12256
    4ca8:	0009883a 	mov	r4,zero
    4cac:	102d883a 	mov	r22,r2
    4cb0:	182b883a 	mov	r21,r3
    4cb4:	0008fc80 	call	8fc8 <__muldf3>
    4cb8:	b009883a 	mov	r4,r22
    4cbc:	a80b883a 	mov	r5,r21
    4cc0:	100d883a 	mov	r6,r2
    4cc4:	180f883a 	mov	r7,r3
    4cc8:	0007b740 	call	7b74 <__adddf3>
    4ccc:	dbc00917 	ldw	r15,36(sp)
    4cd0:	d9800a17 	ldw	r6,40(sp)
    4cd4:	180b883a 	mov	r5,r3
    4cd8:	780f883a 	mov	r7,r15
    4cdc:	1009883a 	mov	r4,r2
    4ce0:	0007b740 	call	7b74 <__adddf3>
    4ce4:	db000817 	ldw	r12,32(sp)
    4ce8:	102d883a 	mov	r22,r2
    4cec:	182b883a 	mov	r21,r3
    4cf0:	6009883a 	mov	r4,r12
    4cf4:	000a1540 	call	a154 <__floatsidf>
    4cf8:	b00d883a 	mov	r6,r22
    4cfc:	a80f883a 	mov	r7,r21
    4d00:	e009883a 	mov	r4,fp
    4d04:	b80b883a 	mov	r5,r23
    4d08:	d8800315 	stw	r2,12(sp)
    4d0c:	d8c00215 	stw	r3,8(sp)
    4d10:	0007b740 	call	7b74 <__adddf3>
    4d14:	d9800017 	ldw	r6,0(sp)
    4d18:	d9c00117 	ldw	r7,4(sp)
    4d1c:	1009883a 	mov	r4,r2
    4d20:	180b883a 	mov	r5,r3
    4d24:	0007b740 	call	7b74 <__adddf3>
    4d28:	da800317 	ldw	r10,12(sp)
    4d2c:	da400217 	ldw	r9,8(sp)
    4d30:	1009883a 	mov	r4,r2
    4d34:	500d883a 	mov	r6,r10
    4d38:	480f883a 	mov	r7,r9
    4d3c:	180b883a 	mov	r5,r3
    4d40:	0007b740 	call	7b74 <__adddf3>
    4d44:	da800317 	ldw	r10,12(sp)
    4d48:	da400217 	ldw	r9,8(sp)
    4d4c:	0009883a 	mov	r4,zero
    4d50:	500d883a 	mov	r6,r10
    4d54:	480f883a 	mov	r7,r9
    4d58:	180b883a 	mov	r5,r3
    4d5c:	1827883a 	mov	r19,r3
    4d60:	00097740 	call	9774 <__subdf3>
    4d64:	d9800017 	ldw	r6,0(sp)
    4d68:	d9c00117 	ldw	r7,4(sp)
    4d6c:	1009883a 	mov	r4,r2
    4d70:	180b883a 	mov	r5,r3
    4d74:	00097740 	call	9774 <__subdf3>
    4d78:	e00d883a 	mov	r6,fp
    4d7c:	b80f883a 	mov	r7,r23
    4d80:	1009883a 	mov	r4,r2
    4d84:	180b883a 	mov	r5,r3
    4d88:	00097740 	call	9774 <__subdf3>
    4d8c:	b009883a 	mov	r4,r22
    4d90:	100d883a 	mov	r6,r2
    4d94:	180f883a 	mov	r7,r3
    4d98:	a80b883a 	mov	r5,r21
    4d9c:	94bfffc4 	addi	r18,r18,-1
    4da0:	00097740 	call	9774 <__subdf3>
    4da4:	9528b03a 	or	r20,r18,r20
    4da8:	102f883a 	mov	r23,r2
    4dac:	182d883a 	mov	r22,r3
    4db0:	a001471e 	bne	r20,zero,52d0 <__ieee754_pow+0xe74>
    4db4:	052ffc34 	movhi	r20,49136
    4db8:	880f883a 	mov	r7,r17
    4dbc:	8009883a 	mov	r4,r16
    4dc0:	880b883a 	mov	r5,r17
    4dc4:	000d883a 	mov	r6,zero
    4dc8:	00097740 	call	9774 <__subdf3>
    4dcc:	980f883a 	mov	r7,r19
    4dd0:	000d883a 	mov	r6,zero
    4dd4:	1009883a 	mov	r4,r2
    4dd8:	180b883a 	mov	r5,r3
    4ddc:	0008fc80 	call	8fc8 <__muldf3>
    4de0:	800d883a 	mov	r6,r16
    4de4:	880f883a 	mov	r7,r17
    4de8:	b809883a 	mov	r4,r23
    4dec:	b00b883a 	mov	r5,r22
    4df0:	102b883a 	mov	r21,r2
    4df4:	1825883a 	mov	r18,r3
    4df8:	0008fc80 	call	8fc8 <__muldf3>
    4dfc:	a809883a 	mov	r4,r21
    4e00:	900b883a 	mov	r5,r18
    4e04:	100d883a 	mov	r6,r2
    4e08:	180f883a 	mov	r7,r3
    4e0c:	0007b740 	call	7b74 <__adddf3>
    4e10:	880f883a 	mov	r7,r17
    4e14:	980b883a 	mov	r5,r19
    4e18:	000d883a 	mov	r6,zero
    4e1c:	0009883a 	mov	r4,zero
    4e20:	1027883a 	mov	r19,r2
    4e24:	182b883a 	mov	r21,r3
    4e28:	0008fc80 	call	8fc8 <__muldf3>
    4e2c:	a80b883a 	mov	r5,r21
    4e30:	100d883a 	mov	r6,r2
    4e34:	180f883a 	mov	r7,r3
    4e38:	9809883a 	mov	r4,r19
    4e3c:	1023883a 	mov	r17,r2
    4e40:	1825883a 	mov	r18,r3
    4e44:	0007b740 	call	7b74 <__adddf3>
    4e48:	01502434 	movhi	r5,16528
    4e4c:	1821883a 	mov	r16,r3
    4e50:	8817883a 	mov	r11,r17
    4e54:	902f883a 	mov	r23,r18
    4e58:	102d883a 	mov	r22,r2
    4e5c:	1839883a 	mov	fp,r3
    4e60:	1940fe16 	blt	r3,r5,525c <__ieee754_pow+0xe00>
    4e64:	1947c83a 	sub	r3,r3,r5
    4e68:	1d86b03a 	or	r3,r3,r22
    4e6c:	1801ab1e 	bne	r3,zero,551c <__ieee754_pow+0x10c0>
    4e70:	01994b34 	movhi	r6,25900
    4e74:	01cf25f4 	movhi	r7,15511
    4e78:	31a0bf84 	addi	r6,r6,-32002
    4e7c:	39c551c4 	addi	r7,r7,5447
    4e80:	9809883a 	mov	r4,r19
    4e84:	a80b883a 	mov	r5,r21
    4e88:	0007b740 	call	7b74 <__adddf3>
    4e8c:	880d883a 	mov	r6,r17
    4e90:	900f883a 	mov	r7,r18
    4e94:	b009883a 	mov	r4,r22
    4e98:	800b883a 	mov	r5,r16
    4e9c:	1039883a 	mov	fp,r2
    4ea0:	182f883a 	mov	r23,r3
    4ea4:	00097740 	call	9774 <__subdf3>
    4ea8:	100d883a 	mov	r6,r2
    4eac:	180f883a 	mov	r7,r3
    4eb0:	e009883a 	mov	r4,fp
    4eb4:	b80b883a 	mov	r5,r23
    4eb8:	0008df80 	call	8df8 <__gedf2>
    4ebc:	00819716 	blt	zero,r2,551c <__ieee754_pow+0x10c0>
    4ec0:	8009d53a 	srai	r4,r16,20
    4ec4:	2101ffcc 	andi	r4,r4,2047
    4ec8:	00c00434 	movhi	r3,16
    4ecc:	213f0084 	addi	r4,r4,-1022
    4ed0:	1909d83a 	sra	r4,r3,r4
    4ed4:	00800434 	movhi	r2,16
    4ed8:	10bfffc4 	addi	r2,r2,-1
    4edc:	2407883a 	add	r3,r4,r16
    4ee0:	1809d53a 	srai	r4,r3,20
    4ee4:	18ac703a 	and	r22,r3,r2
    4ee8:	b5800434 	orhi	r22,r22,16
    4eec:	2101ffcc 	andi	r4,r4,2047
    4ef0:	213f0044 	addi	r4,r4,-1023
    4ef4:	110fd83a 	sra	r7,r2,r4
    4ef8:	00800504 	movi	r2,20
    4efc:	1109c83a 	sub	r4,r2,r4
    4f00:	b105d83a 	sra	r2,r22,r4
    4f04:	01ce303a 	nor	r7,zero,r7
    4f08:	38ce703a 	and	r7,r7,r3
    4f0c:	d8800215 	stw	r2,8(sp)
    4f10:	8000020e 	bge	r16,zero,4f1c <__ieee754_pow+0xac0>
    4f14:	0085c83a 	sub	r2,zero,r2
    4f18:	d8800215 	stw	r2,8(sp)
    4f1c:	000d883a 	mov	r6,zero
    4f20:	8809883a 	mov	r4,r17
    4f24:	900b883a 	mov	r5,r18
    4f28:	00097740 	call	9774 <__subdf3>
    4f2c:	100d883a 	mov	r6,r2
    4f30:	180f883a 	mov	r7,r3
    4f34:	9809883a 	mov	r4,r19
    4f38:	a80b883a 	mov	r5,r21
    4f3c:	182f883a 	mov	r23,r3
    4f40:	d8800015 	stw	r2,0(sp)
    4f44:	0007b740 	call	7b74 <__adddf3>
    4f48:	d8800217 	ldw	r2,8(sp)
    4f4c:	dac00017 	ldw	r11,0(sp)
    4f50:	1839883a 	mov	fp,r3
    4f54:	1004953a 	slli	r2,r2,20
    4f58:	d8800115 	stw	r2,4(sp)
    4f5c:	01cff9b4 	movhi	r7,16358
    4f60:	e00b883a 	mov	r5,fp
    4f64:	000d883a 	mov	r6,zero
    4f68:	39cb90c4 	addi	r7,r7,11843
    4f6c:	0009883a 	mov	r4,zero
    4f70:	dac00015 	stw	r11,0(sp)
    4f74:	0008fc80 	call	8fc8 <__muldf3>
    4f78:	dac00017 	ldw	r11,0(sp)
    4f7c:	b80f883a 	mov	r7,r23
    4f80:	e00b883a 	mov	r5,fp
    4f84:	580d883a 	mov	r6,r11
    4f88:	0009883a 	mov	r4,zero
    4f8c:	182f883a 	mov	r23,r3
    4f90:	102d883a 	mov	r22,r2
    4f94:	00097740 	call	9774 <__subdf3>
    4f98:	9809883a 	mov	r4,r19
    4f9c:	a80b883a 	mov	r5,r21
    4fa0:	100d883a 	mov	r6,r2
    4fa4:	180f883a 	mov	r7,r3
    4fa8:	00097740 	call	9774 <__subdf3>
    4fac:	01bfbeb4 	movhi	r6,65274
    4fb0:	01cff9b4 	movhi	r7,16358
    4fb4:	318e7bc4 	addi	r6,r6,14831
    4fb8:	39cb9084 	addi	r7,r7,11842
    4fbc:	1009883a 	mov	r4,r2
    4fc0:	180b883a 	mov	r5,r3
    4fc4:	0008fc80 	call	8fc8 <__muldf3>
    4fc8:	01832a34 	movhi	r6,3240
    4fcc:	01ef8834 	movhi	r7,48672
    4fd0:	e00b883a 	mov	r5,fp
    4fd4:	319b0e44 	addi	r6,r6,27705
    4fd8:	39d71844 	addi	r7,r7,23649
    4fdc:	0009883a 	mov	r4,zero
    4fe0:	1023883a 	mov	r17,r2
    4fe4:	1821883a 	mov	r16,r3
    4fe8:	0008fc80 	call	8fc8 <__muldf3>
    4fec:	8809883a 	mov	r4,r17
    4ff0:	800b883a 	mov	r5,r16
    4ff4:	100d883a 	mov	r6,r2
    4ff8:	180f883a 	mov	r7,r3
    4ffc:	0007b740 	call	7b74 <__adddf3>
    5000:	b80b883a 	mov	r5,r23
    5004:	100d883a 	mov	r6,r2
    5008:	180f883a 	mov	r7,r3
    500c:	b009883a 	mov	r4,r22
    5010:	1027883a 	mov	r19,r2
    5014:	1825883a 	mov	r18,r3
    5018:	0007b740 	call	7b74 <__adddf3>
    501c:	b80f883a 	mov	r7,r23
    5020:	b00d883a 	mov	r6,r22
    5024:	1009883a 	mov	r4,r2
    5028:	180b883a 	mov	r5,r3
    502c:	1023883a 	mov	r17,r2
    5030:	1821883a 	mov	r16,r3
    5034:	00097740 	call	9774 <__subdf3>
    5038:	9809883a 	mov	r4,r19
    503c:	900b883a 	mov	r5,r18
    5040:	100d883a 	mov	r6,r2
    5044:	180f883a 	mov	r7,r3
    5048:	00097740 	call	9774 <__subdf3>
    504c:	880d883a 	mov	r6,r17
    5050:	800f883a 	mov	r7,r16
    5054:	8809883a 	mov	r4,r17
    5058:	800b883a 	mov	r5,r16
    505c:	1039883a 	mov	fp,r2
    5060:	182b883a 	mov	r21,r3
    5064:	0008fc80 	call	8fc8 <__muldf3>
    5068:	019caff4 	movhi	r6,29375
    506c:	01cf99b4 	movhi	r7,15974
    5070:	31a93404 	addi	r6,r6,-23344
    5074:	39cdda44 	addi	r7,r7,14185
    5078:	1009883a 	mov	r4,r2
    507c:	180b883a 	mov	r5,r3
    5080:	1027883a 	mov	r19,r2
    5084:	1825883a 	mov	r18,r3
    5088:	0008fc80 	call	8fc8 <__muldf3>
    508c:	01b174b4 	movhi	r6,50642
    5090:	01cfaf34 	movhi	r7,16060
    5094:	319afc44 	addi	r6,r6,27633
    5098:	39ef5044 	addi	r7,r7,-17087
    509c:	1009883a 	mov	r4,r2
    50a0:	180b883a 	mov	r5,r3
    50a4:	00097740 	call	9774 <__subdf3>
    50a8:	980d883a 	mov	r6,r19
    50ac:	900f883a 	mov	r7,r18
    50b0:	1009883a 	mov	r4,r2
    50b4:	180b883a 	mov	r5,r3
    50b8:	0008fc80 	call	8fc8 <__muldf3>
    50bc:	01abc9b4 	movhi	r6,44838
    50c0:	01cfc474 	movhi	r7,16145
    50c4:	31b78b04 	addi	r6,r6,-8660
    50c8:	39d59a84 	addi	r7,r7,22122
    50cc:	1009883a 	mov	r4,r2
    50d0:	180b883a 	mov	r5,r3
    50d4:	0007b740 	call	7b74 <__adddf3>
    50d8:	980d883a 	mov	r6,r19
    50dc:	900f883a 	mov	r7,r18
    50e0:	1009883a 	mov	r4,r2
    50e4:	180b883a 	mov	r5,r3
    50e8:	0008fc80 	call	8fc8 <__muldf3>
    50ec:	0185aff4 	movhi	r6,5823
    50f0:	01cfd9f4 	movhi	r7,16231
    50f4:	31af64c4 	addi	r6,r6,-17005
    50f8:	39f05b04 	addi	r7,r7,-16020
    50fc:	1009883a 	mov	r4,r2
    5100:	180b883a 	mov	r5,r3
    5104:	00097740 	call	9774 <__subdf3>
    5108:	980d883a 	mov	r6,r19
    510c:	900f883a 	mov	r7,r18
    5110:	1009883a 	mov	r4,r2
    5114:	180b883a 	mov	r5,r3
    5118:	0008fc80 	call	8fc8 <__muldf3>
    511c:	01955574 	movhi	r6,21845
    5120:	01cff174 	movhi	r7,16325
    5124:	31954f84 	addi	r6,r6,21822
    5128:	39d55544 	addi	r7,r7,21845
    512c:	1009883a 	mov	r4,r2
    5130:	180b883a 	mov	r5,r3
    5134:	0007b740 	call	7b74 <__adddf3>
    5138:	980d883a 	mov	r6,r19
    513c:	900f883a 	mov	r7,r18
    5140:	1009883a 	mov	r4,r2
    5144:	180b883a 	mov	r5,r3
    5148:	0008fc80 	call	8fc8 <__muldf3>
    514c:	100d883a 	mov	r6,r2
    5150:	180f883a 	mov	r7,r3
    5154:	8809883a 	mov	r4,r17
    5158:	800b883a 	mov	r5,r16
    515c:	00097740 	call	9774 <__subdf3>
    5160:	100d883a 	mov	r6,r2
    5164:	180f883a 	mov	r7,r3
    5168:	8809883a 	mov	r4,r17
    516c:	800b883a 	mov	r5,r16
    5170:	1027883a 	mov	r19,r2
    5174:	1825883a 	mov	r18,r3
    5178:	0008fc80 	call	8fc8 <__muldf3>
    517c:	9809883a 	mov	r4,r19
    5180:	900b883a 	mov	r5,r18
    5184:	000d883a 	mov	r6,zero
    5188:	01d00034 	movhi	r7,16384
    518c:	182f883a 	mov	r23,r3
    5190:	d8800015 	stw	r2,0(sp)
    5194:	00097740 	call	9774 <__subdf3>
    5198:	da400017 	ldw	r9,0(sp)
    519c:	100d883a 	mov	r6,r2
    51a0:	180f883a 	mov	r7,r3
    51a4:	4809883a 	mov	r4,r9
    51a8:	b80b883a 	mov	r5,r23
    51ac:	00084640 	call	8464 <__divdf3>
    51b0:	e00d883a 	mov	r6,fp
    51b4:	a80f883a 	mov	r7,r21
    51b8:	8809883a 	mov	r4,r17
    51bc:	800b883a 	mov	r5,r16
    51c0:	1027883a 	mov	r19,r2
    51c4:	1825883a 	mov	r18,r3
    51c8:	0008fc80 	call	8fc8 <__muldf3>
    51cc:	e00d883a 	mov	r6,fp
    51d0:	a80f883a 	mov	r7,r21
    51d4:	1009883a 	mov	r4,r2
    51d8:	180b883a 	mov	r5,r3
    51dc:	0007b740 	call	7b74 <__adddf3>
    51e0:	100d883a 	mov	r6,r2
    51e4:	180f883a 	mov	r7,r3
    51e8:	9809883a 	mov	r4,r19
    51ec:	900b883a 	mov	r5,r18
    51f0:	00097740 	call	9774 <__subdf3>
    51f4:	880d883a 	mov	r6,r17
    51f8:	800f883a 	mov	r7,r16
    51fc:	1009883a 	mov	r4,r2
    5200:	180b883a 	mov	r5,r3
    5204:	00097740 	call	9774 <__subdf3>
    5208:	100d883a 	mov	r6,r2
    520c:	0009883a 	mov	r4,zero
    5210:	014ffc34 	movhi	r5,16368
    5214:	180f883a 	mov	r7,r3
    5218:	00097740 	call	9774 <__subdf3>
    521c:	180b883a 	mov	r5,r3
    5220:	d8c00117 	ldw	r3,4(sp)
    5224:	1009883a 	mov	r4,r2
    5228:	194d883a 	add	r6,r3,r5
    522c:	3007d53a 	srai	r3,r6,20
    5230:	00c0b50e 	bge	zero,r3,5508 <__ieee754_pow+0x10ac>
    5234:	300b883a 	mov	r5,r6
    5238:	000d883a 	mov	r6,zero
    523c:	a00f883a 	mov	r7,r20
    5240:	0008fc80 	call	8fc8 <__muldf3>
    5244:	102d883a 	mov	r22,r2
    5248:	003ca306 	br	44d8 <__ieee754_pow+0x7c>
    524c:	88009016 	blt	r17,zero,5490 <__ieee754_pow+0x1034>
    5250:	202d883a 	mov	r22,r4
    5254:	a807883a 	mov	r3,r21
    5258:	003c9f06 	br	44d8 <__ieee754_pow+0x7c>
    525c:	01200034 	movhi	r4,32768
    5260:	213fffc4 	addi	r4,r4,-1
    5264:	00902474 	movhi	r2,16529
    5268:	1908703a 	and	r4,r3,r4
    526c:	10b2ffc4 	addi	r2,r2,-13313
    5270:	1100750e 	bge	r2,r4,5448 <__ieee754_pow+0xfec>
    5274:	008fdbf4 	movhi	r2,16239
    5278:	108d0004 	addi	r2,r2,13312
    527c:	1885883a 	add	r2,r3,r2
    5280:	1584b03a 	or	r2,r2,r22
    5284:	10000b1e 	bne	r2,zero,52b4 <__ieee754_pow+0xe58>
    5288:	880d883a 	mov	r6,r17
    528c:	900f883a 	mov	r7,r18
    5290:	b009883a 	mov	r4,r22
    5294:	180b883a 	mov	r5,r3
    5298:	00097740 	call	9774 <__subdf3>
    529c:	980d883a 	mov	r6,r19
    52a0:	a80f883a 	mov	r7,r21
    52a4:	1009883a 	mov	r4,r2
    52a8:	180b883a 	mov	r5,r3
    52ac:	0008df80 	call	8df8 <__gedf2>
    52b0:	103f0316 	blt	r2,zero,4ec0 <__ieee754_pow+0xa64>
    52b4:	0009883a 	mov	r4,zero
    52b8:	000d883a 	mov	r6,zero
    52bc:	000f883a 	mov	r7,zero
    52c0:	a00b883a 	mov	r5,r20
    52c4:	0008ee00 	call	8ee0 <__ledf2>
    52c8:	1008803a 	cmplt	r4,r2,zero
    52cc:	003cb906 	br	45b4 <__ieee754_pow+0x158>
    52d0:	050ffc34 	movhi	r20,16368
    52d4:	003eb806 	br	4db8 <__ieee754_pow+0x95c>
    52d8:	000b883a 	mov	r5,zero
    52dc:	003d3906 	br	47c4 <__ieee754_pow+0x368>
    52e0:	008ffc34 	movhi	r2,16368
    52e4:	10bfff84 	addi	r2,r2,-2
    52e8:	14fcb00e 	bge	r2,r19,45ac <__ieee754_pow+0x150>
    52ec:	008ffc34 	movhi	r2,16368
    52f0:	14fcf616 	blt	r2,r19,46cc <__ieee754_pow+0x270>
    52f4:	000d883a 	mov	r6,zero
    52f8:	01cffc34 	movhi	r7,16368
    52fc:	180b883a 	mov	r5,r3
    5300:	00097740 	call	9774 <__subdf3>
    5304:	01cffdf4 	movhi	r7,16375
    5308:	01980034 	movhi	r6,24576
    530c:	39c551c4 	addi	r7,r7,5447
    5310:	1009883a 	mov	r4,r2
    5314:	180b883a 	mov	r5,r3
    5318:	102b883a 	mov	r21,r2
    531c:	1827883a 	mov	r19,r3
    5320:	0008fc80 	call	8fc8 <__muldf3>
    5324:	01be17b4 	movhi	r6,63582
    5328:	01cf9574 	movhi	r7,15957
    532c:	a809883a 	mov	r4,r21
    5330:	980b883a 	mov	r5,r19
    5334:	31b7d104 	addi	r6,r6,-8380
    5338:	39eb82c4 	addi	r7,r7,-20981
    533c:	1039883a 	mov	fp,r2
    5340:	182f883a 	mov	r23,r3
    5344:	0008fc80 	call	8fc8 <__muldf3>
    5348:	a809883a 	mov	r4,r21
    534c:	980b883a 	mov	r5,r19
    5350:	000d883a 	mov	r6,zero
    5354:	01cff434 	movhi	r7,16336
    5358:	182d883a 	mov	r22,r3
    535c:	d8800215 	stw	r2,8(sp)
    5360:	0008fc80 	call	8fc8 <__muldf3>
    5364:	01155574 	movhi	r4,21845
    5368:	014ff574 	movhi	r5,16341
    536c:	100d883a 	mov	r6,r2
    5370:	180f883a 	mov	r7,r3
    5374:	21155544 	addi	r4,r4,21845
    5378:	29555544 	addi	r5,r5,21845
    537c:	00097740 	call	9774 <__subdf3>
    5380:	a80d883a 	mov	r6,r21
    5384:	980f883a 	mov	r7,r19
    5388:	1009883a 	mov	r4,r2
    538c:	180b883a 	mov	r5,r3
    5390:	0008fc80 	call	8fc8 <__muldf3>
    5394:	100d883a 	mov	r6,r2
    5398:	180f883a 	mov	r7,r3
    539c:	0009883a 	mov	r4,zero
    53a0:	014ff834 	movhi	r5,16352
    53a4:	00097740 	call	9774 <__subdf3>
    53a8:	a80d883a 	mov	r6,r21
    53ac:	980f883a 	mov	r7,r19
    53b0:	a809883a 	mov	r4,r21
    53b4:	980b883a 	mov	r5,r19
    53b8:	d8800115 	stw	r2,4(sp)
    53bc:	d8c00015 	stw	r3,0(sp)
    53c0:	0008fc80 	call	8fc8 <__muldf3>
    53c4:	da800117 	ldw	r10,4(sp)
    53c8:	da400017 	ldw	r9,0(sp)
    53cc:	100d883a 	mov	r6,r2
    53d0:	5009883a 	mov	r4,r10
    53d4:	480b883a 	mov	r5,r9
    53d8:	180f883a 	mov	r7,r3
    53dc:	0008fc80 	call	8fc8 <__muldf3>
    53e0:	01994b34 	movhi	r6,25900
    53e4:	01cffdf4 	movhi	r7,16375
    53e8:	31a0bf84 	addi	r6,r6,-32002
    53ec:	39c551c4 	addi	r7,r7,5447
    53f0:	1009883a 	mov	r4,r2
    53f4:	180b883a 	mov	r5,r3
    53f8:	0008fc80 	call	8fc8 <__muldf3>
    53fc:	da000217 	ldw	r8,8(sp)
    5400:	b00b883a 	mov	r5,r22
    5404:	100d883a 	mov	r6,r2
    5408:	4009883a 	mov	r4,r8
    540c:	180f883a 	mov	r7,r3
    5410:	00097740 	call	9774 <__subdf3>
    5414:	100d883a 	mov	r6,r2
    5418:	180f883a 	mov	r7,r3
    541c:	e009883a 	mov	r4,fp
    5420:	b80b883a 	mov	r5,r23
    5424:	102d883a 	mov	r22,r2
    5428:	182b883a 	mov	r21,r3
    542c:	0007b740 	call	7b74 <__adddf3>
    5430:	1827883a 	mov	r19,r3
    5434:	e00d883a 	mov	r6,fp
    5438:	b80f883a 	mov	r7,r23
    543c:	0009883a 	mov	r4,zero
    5440:	180b883a 	mov	r5,r3
    5444:	003e5006 	br	4d88 <__ieee754_pow+0x92c>
    5448:	008ff834 	movhi	r2,16352
    544c:	11004316 	blt	r2,r4,555c <__ieee754_pow+0x1100>
    5450:	d8000115 	stw	zero,4(sp)
    5454:	d8000215 	stw	zero,8(sp)
    5458:	003ec006 	br	4f5c <__ieee754_pow+0xb00>
    545c:	0007883a 	mov	r3,zero
    5460:	003c1d06 	br	44d8 <__ieee754_pow+0x7c>
    5464:	883ffd0e 	bge	r17,zero,545c <__ieee754_pow+0x1000>
    5468:	88e0003c 	xorhi	r3,r17,32768
    546c:	003c1a06 	br	44d8 <__ieee754_pow+0x7c>
    5470:	803c781e 	bne	r16,zero,4654 <__ieee754_pow+0x1f8>
    5474:	00c00504 	movi	r3,20
    5478:	1885c83a 	sub	r2,r3,r2
    547c:	3087d83a 	sra	r3,r6,r2
    5480:	1884983a 	sll	r2,r3,r2
    5484:	11803126 	beq	r2,r6,554c <__ieee754_pow+0x10f0>
    5488:	0025883a 	mov	r18,zero
    548c:	003c5d06 	br	4604 <__ieee754_pow+0x1a8>
    5490:	200d883a 	mov	r6,r4
    5494:	a80f883a 	mov	r7,r21
    5498:	0009883a 	mov	r4,zero
    549c:	014ffc34 	movhi	r5,16368
    54a0:	00084640 	call	8464 <__divdf3>
    54a4:	102d883a 	mov	r22,r2
    54a8:	003c0b06 	br	44d8 <__ieee754_pow+0x7c>
    54ac:	200d883a 	mov	r6,r4
    54b0:	a80f883a 	mov	r7,r21
    54b4:	a80b883a 	mov	r5,r21
    54b8:	0008fc80 	call	8fc8 <__muldf3>
    54bc:	102d883a 	mov	r22,r2
    54c0:	003c0506 	br	44d8 <__ieee754_pow+0x7c>
    54c4:	94800058 	cmpnei	r18,r18,1
    54c8:	903c031e 	bne	r18,zero,44d8 <__ieee754_pow+0x7c>
    54cc:	18e0003c 	xorhi	r3,r3,32768
    54d0:	003c0106 	br	44d8 <__ieee754_pow+0x7c>
    54d4:	008ff8f4 	movhi	r2,16355
    54d8:	10ae00c4 	addi	r2,r2,-18429
    54dc:	00d0f434 	movhi	r3,17360
    54e0:	03cf9374 	movhi	r15,15949
    54e4:	01100034 	movhi	r4,16384
    54e8:	d8800115 	stw	r2,4(sp)
    54ec:	18b40184 	addi	r2,r3,-12282
    54f0:	d9000015 	stw	r4,0(sp)
    54f4:	d8800a15 	stw	r2,40(sp)
    54f8:	7bff7ac4 	addi	r15,r15,-533
    54fc:	05c00134 	movhi	r23,4
    5500:	034ffe34 	movhi	r13,16376
    5504:	003cc506 	br	481c <__ieee754_pow+0x3c0>
    5508:	d9800217 	ldw	r6,8(sp)
    550c:	00076440 	call	7644 <scalbn>
    5510:	1009883a 	mov	r4,r2
    5514:	180b883a 	mov	r5,r3
    5518:	003f4706 	br	5238 <__ieee754_pow+0xddc>
    551c:	0009883a 	mov	r4,zero
    5520:	000d883a 	mov	r6,zero
    5524:	000f883a 	mov	r7,zero
    5528:	a00b883a 	mov	r5,r20
    552c:	0008ee00 	call	8ee0 <__ledf2>
    5530:	1008803a 	cmplt	r4,r2,zero
    5534:	003c6706 	br	46d4 <__ieee754_pow+0x278>
    5538:	18c0004c 	andi	r3,r3,1
    553c:	04800084 	movi	r18,2
    5540:	90e5c83a 	sub	r18,r18,r3
    5544:	803c2f26 	beq	r16,zero,4604 <__ieee754_pow+0x1a8>
    5548:	003c0906 	br	4570 <__ieee754_pow+0x114>
    554c:	18c0004c 	andi	r3,r3,1
    5550:	04800084 	movi	r18,2
    5554:	90e5c83a 	sub	r18,r18,r3
    5558:	003c2a06 	br	4604 <__ieee754_pow+0x1a8>
    555c:	2009d53a 	srai	r4,r4,20
    5560:	003e5906 	br	4ec8 <__ieee754_pow+0xa6c>

00005564 <__ieee754_rem_pio2>:
    5564:	deffea04 	addi	sp,sp,-88
    5568:	dc000c15 	stw	r16,48(sp)
    556c:	04200034 	movhi	r16,32768
    5570:	843fffc4 	addi	r16,r16,-1
    5574:	008ffa74 	movhi	r2,16361
    5578:	dcc00f15 	stw	r19,60(sp)
    557c:	dc800e15 	stw	r18,56(sp)
    5580:	dc400d15 	stw	r17,52(sp)
    5584:	dfc01515 	stw	ra,84(sp)
    5588:	df001415 	stw	fp,80(sp)
    558c:	ddc01315 	stw	r23,76(sp)
    5590:	dd801215 	stw	r22,72(sp)
    5594:	dd401115 	stw	r21,68(sp)
    5598:	dd001015 	stw	r20,64(sp)
    559c:	2c20703a 	and	r16,r5,r16
    55a0:	10887ec4 	addi	r2,r2,8699
    55a4:	2825883a 	mov	r18,r5
    55a8:	2027883a 	mov	r19,r4
    55ac:	3023883a 	mov	r17,r6
    55b0:	14008b0e 	bge	r2,r16,57e0 <__ieee754_rem_pio2+0x27c>
    55b4:	009000f4 	movhi	r2,16387
    55b8:	10b65ec4 	addi	r2,r2,-9861
    55bc:	14002f16 	blt	r2,r16,567c <__ieee754_rem_pio2+0x118>
    55c0:	01cffe74 	movhi	r7,16377
    55c4:	01951034 	movhi	r6,21568
    55c8:	39c87ec4 	addi	r7,r7,8699
    55cc:	01417e0e 	bge	zero,r5,5bc8 <__ieee754_rem_pio2+0x664>
    55d0:	00097740 	call	9774 <__subdf3>
    55d4:	018ffe74 	movhi	r6,16377
    55d8:	31887ec4 	addi	r6,r6,8699
    55dc:	1009883a 	mov	r4,r2
    55e0:	180b883a 	mov	r5,r3
    55e4:	8180cb26 	beq	r16,r6,5914 <__ieee754_rem_pio2+0x3b0>
    55e8:	018698b4 	movhi	r6,6754
    55ec:	01cf7474 	movhi	r7,15825
    55f0:	3198cc44 	addi	r6,r6,25393
    55f4:	39ed1844 	addi	r7,r7,-19359
    55f8:	d8800315 	stw	r2,12(sp)
    55fc:	d8c00215 	stw	r3,8(sp)
    5600:	00097740 	call	9774 <__subdf3>
    5604:	d9000317 	ldw	r4,12(sp)
    5608:	d9400217 	ldw	r5,8(sp)
    560c:	100d883a 	mov	r6,r2
    5610:	180f883a 	mov	r7,r3
    5614:	88800015 	stw	r2,0(r17)
    5618:	88c00115 	stw	r3,4(r17)
    561c:	00097740 	call	9774 <__subdf3>
    5620:	018698b4 	movhi	r6,6754
    5624:	01cf7474 	movhi	r7,15825
    5628:	3198cc44 	addi	r6,r6,25393
    562c:	39ed1844 	addi	r7,r7,-19359
    5630:	1009883a 	mov	r4,r2
    5634:	180b883a 	mov	r5,r3
    5638:	00097740 	call	9774 <__subdf3>
    563c:	88800215 	stw	r2,8(r17)
    5640:	88c00315 	stw	r3,12(r17)
    5644:	05000044 	movi	r20,1
    5648:	a005883a 	mov	r2,r20
    564c:	dfc01517 	ldw	ra,84(sp)
    5650:	df001417 	ldw	fp,80(sp)
    5654:	ddc01317 	ldw	r23,76(sp)
    5658:	dd801217 	ldw	r22,72(sp)
    565c:	dd401117 	ldw	r21,68(sp)
    5660:	dd001017 	ldw	r20,64(sp)
    5664:	dcc00f17 	ldw	r19,60(sp)
    5668:	dc800e17 	ldw	r18,56(sp)
    566c:	dc400d17 	ldw	r17,52(sp)
    5670:	dc000c17 	ldw	r16,48(sp)
    5674:	dec01604 	addi	sp,sp,88
    5678:	f800283a 	ret
    567c:	00904e74 	movhi	r2,16697
    5680:	10887ec4 	addi	r2,r2,8699
    5684:	14005c16 	blt	r2,r16,57f8 <__ieee754_rem_pio2+0x294>
    5688:	019b72b4 	movhi	r6,28106
    568c:	01cff934 	movhi	r7,16356
    5690:	31b220c4 	addi	r6,r6,-14205
    5694:	39d7cc04 	addi	r7,r7,24368
    5698:	800b883a 	mov	r5,r16
    569c:	0008fc80 	call	8fc8 <__muldf3>
    56a0:	000d883a 	mov	r6,zero
    56a4:	01cff834 	movhi	r7,16352
    56a8:	1009883a 	mov	r4,r2
    56ac:	180b883a 	mov	r5,r3
    56b0:	0007b740 	call	7b74 <__adddf3>
    56b4:	180b883a 	mov	r5,r3
    56b8:	1009883a 	mov	r4,r2
    56bc:	000a0d40 	call	a0d4 <__fixdfsi>
    56c0:	1009883a 	mov	r4,r2
    56c4:	1029883a 	mov	r20,r2
    56c8:	000a1540 	call	a154 <__floatsidf>
    56cc:	01cffe74 	movhi	r7,16377
    56d0:	01951034 	movhi	r6,21568
    56d4:	39c87ec4 	addi	r7,r7,8699
    56d8:	1009883a 	mov	r4,r2
    56dc:	180b883a 	mov	r5,r3
    56e0:	102d883a 	mov	r22,r2
    56e4:	182b883a 	mov	r21,r3
    56e8:	0008fc80 	call	8fc8 <__muldf3>
    56ec:	9809883a 	mov	r4,r19
    56f0:	100d883a 	mov	r6,r2
    56f4:	180f883a 	mov	r7,r3
    56f8:	800b883a 	mov	r5,r16
    56fc:	00097740 	call	9774 <__subdf3>
    5700:	018698b4 	movhi	r6,6754
    5704:	01cf7474 	movhi	r7,15825
    5708:	3198cc44 	addi	r6,r6,25393
    570c:	39ed1844 	addi	r7,r7,-19359
    5710:	b009883a 	mov	r4,r22
    5714:	a80b883a 	mov	r5,r21
    5718:	1039883a 	mov	fp,r2
    571c:	d8c00215 	stw	r3,8(sp)
    5720:	0008fc80 	call	8fc8 <__muldf3>
    5724:	db000217 	ldw	r12,8(sp)
    5728:	e009883a 	mov	r4,fp
    572c:	100d883a 	mov	r6,r2
    5730:	600b883a 	mov	r5,r12
    5734:	180f883a 	mov	r7,r3
    5738:	db000315 	stw	r12,12(sp)
    573c:	102f883a 	mov	r23,r2
    5740:	1827883a 	mov	r19,r3
    5744:	df000415 	stw	fp,16(sp)
    5748:	00097740 	call	9774 <__subdf3>
    574c:	a1000808 	cmpgei	r4,r20,32
    5750:	db000317 	ldw	r12,12(sp)
    5754:	1017883a 	mov	r11,r2
    5758:	1815883a 	mov	r10,r3
    575c:	e01b883a 	mov	r13,fp
    5760:	2000851e 	bne	r4,zero,5978 <__ieee754_rem_pio2+0x414>
    5764:	a00a90ba 	slli	r5,r20,2
    5768:	01000074 	movhi	r4,1
    576c:	2909883a 	add	r4,r5,r4
    5770:	211f5417 	ldw	r4,32080(r4)
    5774:	24008026 	beq	r4,r16,5978 <__ieee754_rem_pio2+0x414>
    5778:	88800015 	stw	r2,0(r17)
    577c:	88c00115 	stw	r3,4(r17)
    5780:	580d883a 	mov	r6,r11
    5784:	500f883a 	mov	r7,r10
    5788:	6809883a 	mov	r4,r13
    578c:	600b883a 	mov	r5,r12
    5790:	dac00315 	stw	r11,12(sp)
    5794:	da800215 	stw	r10,8(sp)
    5798:	00097740 	call	9774 <__subdf3>
    579c:	b80d883a 	mov	r6,r23
    57a0:	980f883a 	mov	r7,r19
    57a4:	1009883a 	mov	r4,r2
    57a8:	180b883a 	mov	r5,r3
    57ac:	00097740 	call	9774 <__subdf3>
    57b0:	88800215 	stw	r2,8(r17)
    57b4:	88c00315 	stw	r3,12(r17)
    57b8:	903fa30e 	bge	r18,zero,5648 <__ieee754_rem_pio2+0xe4>
    57bc:	da800217 	ldw	r10,8(sp)
    57c0:	dac00317 	ldw	r11,12(sp)
    57c4:	18e0003c 	xorhi	r3,r3,32768
    57c8:	52a0003c 	xorhi	r10,r10,32768
    57cc:	8ac00015 	stw	r11,0(r17)
    57d0:	8a800115 	stw	r10,4(r17)
    57d4:	88c00315 	stw	r3,12(r17)
    57d8:	0529c83a 	sub	r20,zero,r20
    57dc:	003f9a06 	br	5648 <__ieee754_rem_pio2+0xe4>
    57e0:	89000015 	stw	r4,0(r17)
    57e4:	89400115 	stw	r5,4(r17)
    57e8:	30000215 	stw	zero,8(r6)
    57ec:	30000315 	stw	zero,12(r6)
    57f0:	0029883a 	mov	r20,zero
    57f4:	003f9406 	br	5648 <__ieee754_rem_pio2+0xe4>
    57f8:	009ffc34 	movhi	r2,32752
    57fc:	8080670e 	bge	r16,r2,599c <__ieee754_rem_pio2+0x438>
    5800:	8029d53a 	srai	r20,r16,20
    5804:	a53efa84 	addi	r20,r20,-1046
    5808:	a00a953a 	slli	r5,r20,20
    580c:	8161c83a 	sub	r16,r16,r5
    5810:	800b883a 	mov	r5,r16
    5814:	000a0d40 	call	a0d4 <__fixdfsi>
    5818:	1009883a 	mov	r4,r2
    581c:	000a1540 	call	a154 <__floatsidf>
    5820:	9809883a 	mov	r4,r19
    5824:	800b883a 	mov	r5,r16
    5828:	100d883a 	mov	r6,r2
    582c:	180f883a 	mov	r7,r3
    5830:	d8800615 	stw	r2,24(sp)
    5834:	d8c00715 	stw	r3,28(sp)
    5838:	00097740 	call	9774 <__subdf3>
    583c:	000d883a 	mov	r6,zero
    5840:	01d05c34 	movhi	r7,16752
    5844:	1009883a 	mov	r4,r2
    5848:	180b883a 	mov	r5,r3
    584c:	0008fc80 	call	8fc8 <__muldf3>
    5850:	180b883a 	mov	r5,r3
    5854:	1009883a 	mov	r4,r2
    5858:	1821883a 	mov	r16,r3
    585c:	1027883a 	mov	r19,r2
    5860:	000a0d40 	call	a0d4 <__fixdfsi>
    5864:	1009883a 	mov	r4,r2
    5868:	102b883a 	mov	r21,r2
    586c:	000a1540 	call	a154 <__floatsidf>
    5870:	100d883a 	mov	r6,r2
    5874:	180f883a 	mov	r7,r3
    5878:	9809883a 	mov	r4,r19
    587c:	800b883a 	mov	r5,r16
    5880:	d8800815 	stw	r2,32(sp)
    5884:	d8c00915 	stw	r3,36(sp)
    5888:	00097740 	call	9774 <__subdf3>
    588c:	000d883a 	mov	r6,zero
    5890:	01d05c34 	movhi	r7,16752
    5894:	1009883a 	mov	r4,r2
    5898:	180b883a 	mov	r5,r3
    589c:	0008fc80 	call	8fc8 <__muldf3>
    58a0:	1009883a 	mov	r4,r2
    58a4:	180b883a 	mov	r5,r3
    58a8:	000d883a 	mov	r6,zero
    58ac:	000f883a 	mov	r7,zero
    58b0:	d8800a15 	stw	r2,40(sp)
    58b4:	d8c00b15 	stw	r3,44(sp)
    58b8:	0008d780 	call	8d78 <__eqdf2>
    58bc:	1000c01e 	bne	r2,zero,5bc0 <__ieee754_rem_pio2+0x65c>
    58c0:	a800bd1e 	bne	r21,zero,5bb8 <__ieee754_rem_pio2+0x654>
    58c4:	01c00044 	movi	r7,1
    58c8:	00800074 	movhi	r2,1
    58cc:	109f7504 	addi	r2,r2,32212
    58d0:	d8800115 	stw	r2,4(sp)
    58d4:	00800084 	movi	r2,2
    58d8:	a00d883a 	mov	r6,r20
    58dc:	d8800015 	stw	r2,0(sp)
    58e0:	880b883a 	mov	r5,r17
    58e4:	d9000604 	addi	r4,sp,24
    58e8:	00063c80 	call	63c8 <__kernel_rem_pio2>
    58ec:	1029883a 	mov	r20,r2
    58f0:	903f550e 	bge	r18,zero,5648 <__ieee754_rem_pio2+0xe4>
    58f4:	88c00117 	ldw	r3,4(r17)
    58f8:	88800317 	ldw	r2,12(r17)
    58fc:	0529c83a 	sub	r20,zero,r20
    5900:	18e0003c 	xorhi	r3,r3,32768
    5904:	10a0003c 	xorhi	r2,r2,32768
    5908:	88c00115 	stw	r3,4(r17)
    590c:	88800315 	stw	r2,12(r17)
    5910:	003f4d06 	br	5648 <__ieee754_rem_pio2+0xe4>
    5914:	01cf7474 	movhi	r7,15825
    5918:	01869834 	movhi	r6,6752
    591c:	39ed1844 	addi	r7,r7,-19359
    5920:	00097740 	call	9774 <__subdf3>
    5924:	018b80f4 	movhi	r6,11779
    5928:	01cee8f4 	movhi	r7,15267
    592c:	319c1cc4 	addi	r6,r6,28787
    5930:	39c66284 	addi	r7,r7,6538
    5934:	1009883a 	mov	r4,r2
    5938:	180b883a 	mov	r5,r3
    593c:	1025883a 	mov	r18,r2
    5940:	1821883a 	mov	r16,r3
    5944:	00097740 	call	9774 <__subdf3>
    5948:	100d883a 	mov	r6,r2
    594c:	180f883a 	mov	r7,r3
    5950:	9009883a 	mov	r4,r18
    5954:	800b883a 	mov	r5,r16
    5958:	88800015 	stw	r2,0(r17)
    595c:	88c00115 	stw	r3,4(r17)
    5960:	00097740 	call	9774 <__subdf3>
    5964:	018b80f4 	movhi	r6,11779
    5968:	01cee8f4 	movhi	r7,15267
    596c:	319c1cc4 	addi	r6,r6,28787
    5970:	39c66284 	addi	r7,r7,6538
    5974:	003f2e06 	br	5630 <__ieee754_rem_pio2+0xcc>
    5978:	1812d53a 	srli	r9,r3,20
    597c:	8021d53a 	srai	r16,r16,20
    5980:	4a41ffcc 	andi	r9,r9,2047
    5984:	8253c83a 	sub	r9,r16,r9
    5988:	4a400448 	cmpgei	r9,r9,17
    598c:	48000c1e 	bne	r9,zero,59c0 <__ieee754_rem_pio2+0x45c>
    5990:	88800015 	stw	r2,0(r17)
    5994:	88c00115 	stw	r3,4(r17)
    5998:	003f7906 	br	5780 <__ieee754_rem_pio2+0x21c>
    599c:	200d883a 	mov	r6,r4
    59a0:	280f883a 	mov	r7,r5
    59a4:	00097740 	call	9774 <__subdf3>
    59a8:	88800215 	stw	r2,8(r17)
    59ac:	88c00315 	stw	r3,12(r17)
    59b0:	88800015 	stw	r2,0(r17)
    59b4:	88c00115 	stw	r3,4(r17)
    59b8:	0029883a 	mov	r20,zero
    59bc:	003f2206 	br	5648 <__ieee754_rem_pio2+0xe4>
    59c0:	01cf7474 	movhi	r7,15825
    59c4:	01869834 	movhi	r6,6752
    59c8:	39ed1844 	addi	r7,r7,-19359
    59cc:	b009883a 	mov	r4,r22
    59d0:	a80b883a 	mov	r5,r21
    59d4:	0008fc80 	call	8fc8 <__muldf3>
    59d8:	d9400217 	ldw	r5,8(sp)
    59dc:	100d883a 	mov	r6,r2
    59e0:	180f883a 	mov	r7,r3
    59e4:	e009883a 	mov	r4,fp
    59e8:	102f883a 	mov	r23,r2
    59ec:	1827883a 	mov	r19,r3
    59f0:	00097740 	call	9774 <__subdf3>
    59f4:	d9400217 	ldw	r5,8(sp)
    59f8:	100d883a 	mov	r6,r2
    59fc:	180f883a 	mov	r7,r3
    5a00:	e009883a 	mov	r4,fp
    5a04:	d8800315 	stw	r2,12(sp)
    5a08:	d8c00415 	stw	r3,16(sp)
    5a0c:	00097740 	call	9774 <__subdf3>
    5a10:	b80d883a 	mov	r6,r23
    5a14:	980f883a 	mov	r7,r19
    5a18:	1009883a 	mov	r4,r2
    5a1c:	180b883a 	mov	r5,r3
    5a20:	00097740 	call	9774 <__subdf3>
    5a24:	018b80f4 	movhi	r6,11779
    5a28:	01cee8f4 	movhi	r7,15267
    5a2c:	319c1cc4 	addi	r6,r6,28787
    5a30:	39c66284 	addi	r7,r7,6538
    5a34:	b009883a 	mov	r4,r22
    5a38:	a80b883a 	mov	r5,r21
    5a3c:	102f883a 	mov	r23,r2
    5a40:	1827883a 	mov	r19,r3
    5a44:	0008fc80 	call	8fc8 <__muldf3>
    5a48:	b80d883a 	mov	r6,r23
    5a4c:	980f883a 	mov	r7,r19
    5a50:	1009883a 	mov	r4,r2
    5a54:	180b883a 	mov	r5,r3
    5a58:	00097740 	call	9774 <__subdf3>
    5a5c:	da400417 	ldw	r9,16(sp)
    5a60:	db800317 	ldw	r14,12(sp)
    5a64:	100d883a 	mov	r6,r2
    5a68:	480b883a 	mov	r5,r9
    5a6c:	7009883a 	mov	r4,r14
    5a70:	180f883a 	mov	r7,r3
    5a74:	da400215 	stw	r9,8(sp)
    5a78:	102f883a 	mov	r23,r2
    5a7c:	1827883a 	mov	r19,r3
    5a80:	00097740 	call	9774 <__subdf3>
    5a84:	1815883a 	mov	r10,r3
    5a88:	1806d53a 	srli	r3,r3,20
    5a8c:	da400217 	ldw	r9,8(sp)
    5a90:	db800317 	ldw	r14,12(sp)
    5a94:	18c1ffcc 	andi	r3,r3,2047
    5a98:	80e1c83a 	sub	r16,r16,r3
    5a9c:	84000c88 	cmpgei	r16,r16,50
    5aa0:	1017883a 	mov	r11,r2
    5aa4:	80003f26 	beq	r16,zero,5ba4 <__ieee754_rem_pio2+0x640>
    5aa8:	01cee8f4 	movhi	r7,15267
    5aac:	018b8034 	movhi	r6,11776
    5ab0:	39c66284 	addi	r7,r7,6538
    5ab4:	b009883a 	mov	r4,r22
    5ab8:	a80b883a 	mov	r5,r21
    5abc:	da400315 	stw	r9,12(sp)
    5ac0:	db800215 	stw	r14,8(sp)
    5ac4:	0008fc80 	call	8fc8 <__muldf3>
    5ac8:	db800217 	ldw	r14,8(sp)
    5acc:	da400317 	ldw	r9,12(sp)
    5ad0:	100d883a 	mov	r6,r2
    5ad4:	7009883a 	mov	r4,r14
    5ad8:	480b883a 	mov	r5,r9
    5adc:	180f883a 	mov	r7,r3
    5ae0:	1027883a 	mov	r19,r2
    5ae4:	1821883a 	mov	r16,r3
    5ae8:	db800515 	stw	r14,20(sp)
    5aec:	da400415 	stw	r9,16(sp)
    5af0:	00097740 	call	9774 <__subdf3>
    5af4:	db800517 	ldw	r14,20(sp)
    5af8:	da400417 	ldw	r9,16(sp)
    5afc:	100d883a 	mov	r6,r2
    5b00:	7009883a 	mov	r4,r14
    5b04:	480b883a 	mov	r5,r9
    5b08:	180f883a 	mov	r7,r3
    5b0c:	d8800315 	stw	r2,12(sp)
    5b10:	d8c00215 	stw	r3,8(sp)
    5b14:	00097740 	call	9774 <__subdf3>
    5b18:	980d883a 	mov	r6,r19
    5b1c:	800f883a 	mov	r7,r16
    5b20:	1009883a 	mov	r4,r2
    5b24:	180b883a 	mov	r5,r3
    5b28:	00097740 	call	9774 <__subdf3>
    5b2c:	01894834 	movhi	r6,9504
    5b30:	01ce5f34 	movhi	r7,14716
    5b34:	31927044 	addi	r6,r6,18881
    5b38:	39e0e684 	addi	r7,r7,-31846
    5b3c:	b009883a 	mov	r4,r22
    5b40:	a80b883a 	mov	r5,r21
    5b44:	1027883a 	mov	r19,r2
    5b48:	1821883a 	mov	r16,r3
    5b4c:	0008fc80 	call	8fc8 <__muldf3>
    5b50:	980d883a 	mov	r6,r19
    5b54:	800f883a 	mov	r7,r16
    5b58:	1009883a 	mov	r4,r2
    5b5c:	180b883a 	mov	r5,r3
    5b60:	00097740 	call	9774 <__subdf3>
    5b64:	db400317 	ldw	r13,12(sp)
    5b68:	db000217 	ldw	r12,8(sp)
    5b6c:	100d883a 	mov	r6,r2
    5b70:	6809883a 	mov	r4,r13
    5b74:	600b883a 	mov	r5,r12
    5b78:	180f883a 	mov	r7,r3
    5b7c:	102f883a 	mov	r23,r2
    5b80:	1827883a 	mov	r19,r3
    5b84:	00097740 	call	9774 <__subdf3>
    5b88:	db400317 	ldw	r13,12(sp)
    5b8c:	db000217 	ldw	r12,8(sp)
    5b90:	1017883a 	mov	r11,r2
    5b94:	1815883a 	mov	r10,r3
    5b98:	88800015 	stw	r2,0(r17)
    5b9c:	88c00115 	stw	r3,4(r17)
    5ba0:	003ef706 	br	5780 <__ieee754_rem_pio2+0x21c>
    5ba4:	88800015 	stw	r2,0(r17)
    5ba8:	8a800115 	stw	r10,4(r17)
    5bac:	701b883a 	mov	r13,r14
    5bb0:	4819883a 	mov	r12,r9
    5bb4:	003ef206 	br	5780 <__ieee754_rem_pio2+0x21c>
    5bb8:	01c00084 	movi	r7,2
    5bbc:	003f4206 	br	58c8 <__ieee754_rem_pio2+0x364>
    5bc0:	01c000c4 	movi	r7,3
    5bc4:	003f4006 	br	58c8 <__ieee754_rem_pio2+0x364>
    5bc8:	0007b740 	call	7b74 <__adddf3>
    5bcc:	010ffe74 	movhi	r4,16377
    5bd0:	21087ec4 	addi	r4,r4,8699
    5bd4:	1027883a 	mov	r19,r2
    5bd8:	1825883a 	mov	r18,r3
    5bdc:	81001926 	beq	r16,r4,5c44 <__ieee754_rem_pio2+0x6e0>
    5be0:	018698b4 	movhi	r6,6754
    5be4:	01cf7474 	movhi	r7,15825
    5be8:	3198cc44 	addi	r6,r6,25393
    5bec:	39ed1844 	addi	r7,r7,-19359
    5bf0:	1009883a 	mov	r4,r2
    5bf4:	180b883a 	mov	r5,r3
    5bf8:	0007b740 	call	7b74 <__adddf3>
    5bfc:	100d883a 	mov	r6,r2
    5c00:	180f883a 	mov	r7,r3
    5c04:	9809883a 	mov	r4,r19
    5c08:	900b883a 	mov	r5,r18
    5c0c:	88800015 	stw	r2,0(r17)
    5c10:	88c00115 	stw	r3,4(r17)
    5c14:	00097740 	call	9774 <__subdf3>
    5c18:	018698b4 	movhi	r6,6754
    5c1c:	01cf7474 	movhi	r7,15825
    5c20:	3198cc44 	addi	r6,r6,25393
    5c24:	39ed1844 	addi	r7,r7,-19359
    5c28:	1009883a 	mov	r4,r2
    5c2c:	180b883a 	mov	r5,r3
    5c30:	0007b740 	call	7b74 <__adddf3>
    5c34:	88800215 	stw	r2,8(r17)
    5c38:	88c00315 	stw	r3,12(r17)
    5c3c:	053fffc4 	movi	r20,-1
    5c40:	003e8106 	br	5648 <__ieee754_rem_pio2+0xe4>
    5c44:	01cf7474 	movhi	r7,15825
    5c48:	01869834 	movhi	r6,6752
    5c4c:	39ed1844 	addi	r7,r7,-19359
    5c50:	1009883a 	mov	r4,r2
    5c54:	180b883a 	mov	r5,r3
    5c58:	0007b740 	call	7b74 <__adddf3>
    5c5c:	018b80f4 	movhi	r6,11779
    5c60:	01cee8f4 	movhi	r7,15267
    5c64:	319c1cc4 	addi	r6,r6,28787
    5c68:	39c66284 	addi	r7,r7,6538
    5c6c:	1009883a 	mov	r4,r2
    5c70:	180b883a 	mov	r5,r3
    5c74:	1025883a 	mov	r18,r2
    5c78:	1821883a 	mov	r16,r3
    5c7c:	0007b740 	call	7b74 <__adddf3>
    5c80:	100d883a 	mov	r6,r2
    5c84:	180f883a 	mov	r7,r3
    5c88:	9009883a 	mov	r4,r18
    5c8c:	800b883a 	mov	r5,r16
    5c90:	88800015 	stw	r2,0(r17)
    5c94:	88c00115 	stw	r3,4(r17)
    5c98:	00097740 	call	9774 <__subdf3>
    5c9c:	018b80f4 	movhi	r6,11779
    5ca0:	01cee8f4 	movhi	r7,15267
    5ca4:	319c1cc4 	addi	r6,r6,28787
    5ca8:	39c66284 	addi	r7,r7,6538
    5cac:	003fde06 	br	5c28 <__ieee754_rem_pio2+0x6c4>

00005cb0 <__ieee754_sqrt>:
    5cb0:	defffd04 	addi	sp,sp,-12
    5cb4:	dc400115 	stw	r17,4(sp)
    5cb8:	dc000015 	stw	r16,0(sp)
    5cbc:	dfc00215 	stw	ra,8(sp)
    5cc0:	28dffc2c 	andhi	r3,r5,32752
    5cc4:	009ffc34 	movhi	r2,32752
    5cc8:	2821883a 	mov	r16,r5
    5ccc:	2023883a 	mov	r17,r4
    5cd0:	18807726 	beq	r3,r2,5eb0 <__ieee754_sqrt+0x200>
    5cd4:	2011883a 	mov	r8,r4
    5cd8:	01403a0e 	bge	zero,r5,5dc4 <__ieee754_sqrt+0x114>
    5cdc:	2807d53a 	srai	r3,r5,20
    5ce0:	18004626 	beq	r3,zero,5dfc <__ieee754_sqrt+0x14c>
    5ce4:	00800434 	movhi	r2,16
    5ce8:	1aff0044 	addi	r11,r3,-1023
    5cec:	10bfffc4 	addi	r2,r2,-1
    5cf0:	8084703a 	and	r2,r16,r2
    5cf4:	5900004c 	andi	r4,r11,1
    5cf8:	10c00434 	orhi	r3,r2,16
    5cfc:	20000426 	beq	r4,zero,5d10 <__ieee754_sqrt+0x60>
    5d00:	4004d7fa 	srli	r2,r8,31
    5d04:	18c7883a 	add	r3,r3,r3
    5d08:	4211883a 	add	r8,r8,r8
    5d0c:	10c7883a 	add	r3,r2,r3
    5d10:	4004d7fa 	srli	r2,r8,31
    5d14:	5817d07a 	srai	r11,r11,1
    5d18:	18c7883a 	add	r3,r3,r3
    5d1c:	1887883a 	add	r3,r3,r2
    5d20:	4209883a 	add	r4,r8,r8
    5d24:	01c00584 	movi	r7,22
    5d28:	0019883a 	mov	r12,zero
    5d2c:	000b883a 	mov	r5,zero
    5d30:	00800834 	movhi	r2,32
    5d34:	288d883a 	add	r6,r5,r2
    5d38:	2010d7fa 	srli	r8,r4,31
    5d3c:	39ffffc4 	addi	r7,r7,-1
    5d40:	19800316 	blt	r3,r6,5d50 <__ieee754_sqrt+0xa0>
    5d44:	1987c83a 	sub	r3,r3,r6
    5d48:	308b883a 	add	r5,r6,r2
    5d4c:	6099883a 	add	r12,r12,r2
    5d50:	18c7883a 	add	r3,r3,r3
    5d54:	1004d07a 	srli	r2,r2,1
    5d58:	40c7883a 	add	r3,r8,r3
    5d5c:	2109883a 	add	r4,r4,r4
    5d60:	383ff41e 	bne	r7,zero,5d34 <__ieee754_sqrt+0x84>
    5d64:	0013883a 	mov	r9,zero
    5d68:	00800804 	movi	r2,32
    5d6c:	01a00034 	movhi	r6,32768
    5d70:	00000806 	br	5d94 <__ieee754_sqrt+0xe4>
    5d74:	19403326 	beq	r3,r5,5e44 <__ieee754_sqrt+0x194>
    5d78:	2010d7fa 	srli	r8,r4,31
    5d7c:	18c7883a 	add	r3,r3,r3
    5d80:	10bfffc4 	addi	r2,r2,-1
    5d84:	300cd07a 	srli	r6,r6,1
    5d88:	1a07883a 	add	r3,r3,r8
    5d8c:	2109883a 	add	r4,r4,r4
    5d90:	10003226 	beq	r2,zero,5e5c <__ieee754_sqrt+0x1ac>
    5d94:	31d1883a 	add	r8,r6,r7
    5d98:	28fff60e 	bge	r5,r3,5d74 <__ieee754_sqrt+0xc4>
    5d9c:	418f883a 	add	r7,r8,r6
    5da0:	40002516 	blt	r8,zero,5e38 <__ieee754_sqrt+0x188>
    5da4:	2815883a 	mov	r10,r5
    5da8:	1947c83a 	sub	r3,r3,r5
    5dac:	2200012e 	bgeu	r4,r8,5db4 <__ieee754_sqrt+0x104>
    5db0:	18ffffc4 	addi	r3,r3,-1
    5db4:	2209c83a 	sub	r4,r4,r8
    5db8:	4993883a 	add	r9,r9,r6
    5dbc:	500b883a 	mov	r5,r10
    5dc0:	003fed06 	br	5d78 <__ieee754_sqrt+0xc8>
    5dc4:	00a00034 	movhi	r2,32768
    5dc8:	10bfffc4 	addi	r2,r2,-1
    5dcc:	2884703a 	and	r2,r5,r2
    5dd0:	1104b03a 	or	r2,r2,r4
    5dd4:	10004826 	beq	r2,zero,5ef8 <__ieee754_sqrt+0x248>
    5dd8:	28003e1e 	bne	r5,zero,5ed4 <__ieee754_sqrt+0x224>
    5ddc:	0007883a 	mov	r3,zero
    5de0:	4004d2fa 	srli	r2,r8,11
    5de4:	18fffac4 	addi	r3,r3,-21
    5de8:	4010957a 	slli	r8,r8,21
    5dec:	1021883a 	mov	r16,r2
    5df0:	103ffb26 	beq	r2,zero,5de0 <__ieee754_sqrt+0x130>
    5df4:	1100042c 	andhi	r4,r2,16
    5df8:	2000441e 	bne	r4,zero,5f0c <__ieee754_sqrt+0x25c>
    5dfc:	0005883a 	mov	r2,zero
    5e00:	8421883a 	add	r16,r16,r16
    5e04:	8140042c 	andhi	r5,r16,16
    5e08:	1009883a 	mov	r4,r2
    5e0c:	10800044 	addi	r2,r2,1
    5e10:	283ffb26 	beq	r5,zero,5e00 <__ieee754_sqrt+0x150>
    5e14:	01800804 	movi	r6,32
    5e18:	400b883a 	mov	r5,r8
    5e1c:	308dc83a 	sub	r6,r6,r2
    5e20:	4090983a 	sll	r8,r8,r2
    5e24:	8005883a 	mov	r2,r16
    5e28:	298ed83a 	srl	r7,r5,r6
    5e2c:	1907c83a 	sub	r3,r3,r4
    5e30:	38a0b03a 	or	r16,r7,r2
    5e34:	003fab06 	br	5ce4 <__ieee754_sqrt+0x34>
    5e38:	383fda16 	blt	r7,zero,5da4 <__ieee754_sqrt+0xf4>
    5e3c:	2a800044 	addi	r10,r5,1
    5e40:	003fd906 	br	5da8 <__ieee754_sqrt+0xf8>
    5e44:	223fcc36 	bltu	r4,r8,5d78 <__ieee754_sqrt+0xc8>
    5e48:	418f883a 	add	r7,r8,r6
    5e4c:	403ffa16 	blt	r8,zero,5e38 <__ieee754_sqrt+0x188>
    5e50:	1815883a 	mov	r10,r3
    5e54:	0007883a 	mov	r3,zero
    5e58:	003fd606 	br	5db4 <__ieee754_sqrt+0x104>
    5e5c:	1906b03a 	or	r3,r3,r4
    5e60:	18000e1e 	bne	r3,zero,5e9c <__ieee754_sqrt+0x1ec>
    5e64:	4804d07a 	srli	r2,r9,1
    5e68:	6007d07a 	srai	r3,r12,1
    5e6c:	01cff834 	movhi	r7,16352
    5e70:	6300004c 	andi	r12,r12,1
    5e74:	19cf883a 	add	r7,r3,r7
    5e78:	60000126 	beq	r12,zero,5e80 <__ieee754_sqrt+0x1d0>
    5e7c:	10a00034 	orhi	r2,r2,32768
    5e80:	5806953a 	slli	r3,r11,20
    5e84:	19c7883a 	add	r3,r3,r7
    5e88:	dfc00217 	ldw	ra,8(sp)
    5e8c:	dc400117 	ldw	r17,4(sp)
    5e90:	dc000017 	ldw	r16,0(sp)
    5e94:	dec00304 	addi	sp,sp,12
    5e98:	f800283a 	ret
    5e9c:	48ffffd8 	cmpnei	r3,r9,-1
    5ea0:	18001826 	beq	r3,zero,5f04 <__ieee754_sqrt+0x254>
    5ea4:	48800044 	addi	r2,r9,1
    5ea8:	1004d07a 	srli	r2,r2,1
    5eac:	003fee06 	br	5e68 <__ieee754_sqrt+0x1b8>
    5eb0:	200d883a 	mov	r6,r4
    5eb4:	280f883a 	mov	r7,r5
    5eb8:	0008fc80 	call	8fc8 <__muldf3>
    5ebc:	880d883a 	mov	r6,r17
    5ec0:	800f883a 	mov	r7,r16
    5ec4:	1009883a 	mov	r4,r2
    5ec8:	180b883a 	mov	r5,r3
    5ecc:	0007b740 	call	7b74 <__adddf3>
    5ed0:	003fed06 	br	5e88 <__ieee754_sqrt+0x1d8>
    5ed4:	200d883a 	mov	r6,r4
    5ed8:	280f883a 	mov	r7,r5
    5edc:	00097740 	call	9774 <__subdf3>
    5ee0:	100d883a 	mov	r6,r2
    5ee4:	180f883a 	mov	r7,r3
    5ee8:	1009883a 	mov	r4,r2
    5eec:	180b883a 	mov	r5,r3
    5ef0:	00084640 	call	8464 <__divdf3>
    5ef4:	003fe406 	br	5e88 <__ieee754_sqrt+0x1d8>
    5ef8:	2005883a 	mov	r2,r4
    5efc:	2807883a 	mov	r3,r5
    5f00:	003fe106 	br	5e88 <__ieee754_sqrt+0x1d8>
    5f04:	63000044 	addi	r12,r12,1
    5f08:	003fd706 	br	5e68 <__ieee754_sqrt+0x1b8>
    5f0c:	400b883a 	mov	r5,r8
    5f10:	01800804 	movi	r6,32
    5f14:	013fffc4 	movi	r4,-1
    5f18:	003fc306 	br	5e28 <__ieee754_sqrt+0x178>

00005f1c <__kernel_cos>:
    5f1c:	defff204 	addi	sp,sp,-56
    5f20:	dc000415 	stw	r16,16(sp)
    5f24:	04200034 	movhi	r16,32768
    5f28:	843fffc4 	addi	r16,r16,-1
    5f2c:	df000c15 	stw	fp,48(sp)
    5f30:	ddc00b15 	stw	r23,44(sp)
    5f34:	dd800a15 	stw	r22,40(sp)
    5f38:	dd400915 	stw	r21,36(sp)
    5f3c:	dc800615 	stw	r18,24(sp)
    5f40:	dfc00d15 	stw	ra,52(sp)
    5f44:	dd000815 	stw	r20,32(sp)
    5f48:	dcc00715 	stw	r19,28(sp)
    5f4c:	dc400515 	stw	r17,20(sp)
    5f50:	2c24703a 	and	r18,r5,r16
    5f54:	008f9034 	movhi	r2,15936
    5f58:	2839883a 	mov	fp,r5
    5f5c:	202b883a 	mov	r21,r4
    5f60:	302d883a 	mov	r22,r6
    5f64:	382f883a 	mov	r23,r7
    5f68:	9080750e 	bge	r18,r2,6140 <__kernel_cos+0x224>
    5f6c:	000a0d40 	call	a0d4 <__fixdfsi>
    5f70:	10011226 	beq	r2,zero,63bc <__kernel_cos+0x4a0>
    5f74:	a80d883a 	mov	r6,r21
    5f78:	e00f883a 	mov	r7,fp
    5f7c:	a809883a 	mov	r4,r21
    5f80:	e00b883a 	mov	r5,fp
    5f84:	0008fc80 	call	8fc8 <__muldf3>
    5f88:	01afa234 	movhi	r6,48776
    5f8c:	01ef6a74 	movhi	r7,48553
    5f90:	318e3504 	addi	r6,r6,14548
    5f94:	39feba44 	addi	r7,r7,-1303
    5f98:	1009883a 	mov	r4,r2
    5f9c:	180b883a 	mov	r5,r3
    5fa0:	1023883a 	mov	r17,r2
    5fa4:	1821883a 	mov	r16,r3
    5fa8:	0008fc80 	call	8fc8 <__muldf3>
    5fac:	01af6d74 	movhi	r6,48565
    5fb0:	01cf88b4 	movhi	r7,15906
    5fb4:	31ac7104 	addi	r6,r6,-20028
    5fb8:	39fba784 	addi	r7,r7,-4450
    5fbc:	1009883a 	mov	r4,r2
    5fc0:	180b883a 	mov	r5,r3
    5fc4:	0007b740 	call	7b74 <__adddf3>
    5fc8:	880d883a 	mov	r6,r17
    5fcc:	800f883a 	mov	r7,r16
    5fd0:	1009883a 	mov	r4,r2
    5fd4:	180b883a 	mov	r5,r3
    5fd8:	0008fc80 	call	8fc8 <__muldf3>
    5fdc:	01a02734 	movhi	r6,32924
    5fe0:	01cfa4b4 	movhi	r7,16018
    5fe4:	3194ab44 	addi	r6,r6,21165
    5fe8:	39df93c4 	addi	r7,r7,32335
    5fec:	1009883a 	mov	r4,r2
    5ff0:	180b883a 	mov	r5,r3
    5ff4:	00097740 	call	9774 <__subdf3>
    5ff8:	880d883a 	mov	r6,r17
    5ffc:	800f883a 	mov	r7,r16
    6000:	1009883a 	mov	r4,r2
    6004:	180b883a 	mov	r5,r3
    6008:	0008fc80 	call	8fc8 <__muldf3>
    600c:	018672f4 	movhi	r6,6603
    6010:	01cfbeb4 	movhi	r7,16122
    6014:	31856404 	addi	r6,r6,5520
    6018:	39c06804 	addi	r7,r7,416
    601c:	1009883a 	mov	r4,r2
    6020:	180b883a 	mov	r5,r3
    6024:	0007b740 	call	7b74 <__adddf3>
    6028:	880d883a 	mov	r6,r17
    602c:	800f883a 	mov	r7,r16
    6030:	1009883a 	mov	r4,r2
    6034:	180b883a 	mov	r5,r3
    6038:	0008fc80 	call	8fc8 <__muldf3>
    603c:	0185b074 	movhi	r6,5825
    6040:	01cfd5f4 	movhi	r7,16215
    6044:	31945dc4 	addi	r6,r6,20855
    6048:	39f05b04 	addi	r7,r7,-16020
    604c:	1009883a 	mov	r4,r2
    6050:	180b883a 	mov	r5,r3
    6054:	00097740 	call	9774 <__subdf3>
    6058:	880d883a 	mov	r6,r17
    605c:	800f883a 	mov	r7,r16
    6060:	1009883a 	mov	r4,r2
    6064:	180b883a 	mov	r5,r3
    6068:	0008fc80 	call	8fc8 <__muldf3>
    606c:	01955574 	movhi	r6,21845
    6070:	01cfe974 	movhi	r7,16293
    6074:	31955304 	addi	r6,r6,21836
    6078:	39d55544 	addi	r7,r7,21845
    607c:	1009883a 	mov	r4,r2
    6080:	180b883a 	mov	r5,r3
    6084:	0007b740 	call	7b74 <__adddf3>
    6088:	880d883a 	mov	r6,r17
    608c:	800f883a 	mov	r7,r16
    6090:	1009883a 	mov	r4,r2
    6094:	180b883a 	mov	r5,r3
    6098:	0008fc80 	call	8fc8 <__muldf3>
    609c:	1017883a 	mov	r11,r2
    60a0:	1815883a 	mov	r10,r3
    60a4:	8809883a 	mov	r4,r17
    60a8:	800b883a 	mov	r5,r16
    60ac:	000d883a 	mov	r6,zero
    60b0:	01cff834 	movhi	r7,16352
    60b4:	da800115 	stw	r10,4(sp)
    60b8:	dac00015 	stw	r11,0(sp)
    60bc:	0008fc80 	call	8fc8 <__muldf3>
    60c0:	dac00017 	ldw	r11,0(sp)
    60c4:	da800117 	ldw	r10,4(sp)
    60c8:	8809883a 	mov	r4,r17
    60cc:	580d883a 	mov	r6,r11
    60d0:	500f883a 	mov	r7,r10
    60d4:	800b883a 	mov	r5,r16
    60d8:	1023883a 	mov	r17,r2
    60dc:	1821883a 	mov	r16,r3
    60e0:	0008fc80 	call	8fc8 <__muldf3>
    60e4:	b00d883a 	mov	r6,r22
    60e8:	b80f883a 	mov	r7,r23
    60ec:	a809883a 	mov	r4,r21
    60f0:	e00b883a 	mov	r5,fp
    60f4:	1027883a 	mov	r19,r2
    60f8:	1825883a 	mov	r18,r3
    60fc:	0008fc80 	call	8fc8 <__muldf3>
    6100:	9809883a 	mov	r4,r19
    6104:	900b883a 	mov	r5,r18
    6108:	100d883a 	mov	r6,r2
    610c:	180f883a 	mov	r7,r3
    6110:	00097740 	call	9774 <__subdf3>
    6114:	8809883a 	mov	r4,r17
    6118:	800b883a 	mov	r5,r16
    611c:	100d883a 	mov	r6,r2
    6120:	180f883a 	mov	r7,r3
    6124:	00097740 	call	9774 <__subdf3>
    6128:	100d883a 	mov	r6,r2
    612c:	180f883a 	mov	r7,r3
    6130:	0009883a 	mov	r4,zero
    6134:	014ffc34 	movhi	r5,16368
    6138:	00097740 	call	9774 <__subdf3>
    613c:	00008f06 	br	637c <__kernel_cos+0x460>
    6140:	200d883a 	mov	r6,r4
    6144:	280f883a 	mov	r7,r5
    6148:	0008fc80 	call	8fc8 <__muldf3>
    614c:	01afa234 	movhi	r6,48776
    6150:	01ef6a74 	movhi	r7,48553
    6154:	318e3504 	addi	r6,r6,14548
    6158:	39feba44 	addi	r7,r7,-1303
    615c:	1009883a 	mov	r4,r2
    6160:	180b883a 	mov	r5,r3
    6164:	1029883a 	mov	r20,r2
    6168:	1827883a 	mov	r19,r3
    616c:	0008fc80 	call	8fc8 <__muldf3>
    6170:	01af6d74 	movhi	r6,48565
    6174:	01cf88b4 	movhi	r7,15906
    6178:	31ac7104 	addi	r6,r6,-20028
    617c:	39fba784 	addi	r7,r7,-4450
    6180:	1009883a 	mov	r4,r2
    6184:	180b883a 	mov	r5,r3
    6188:	0007b740 	call	7b74 <__adddf3>
    618c:	a00d883a 	mov	r6,r20
    6190:	980f883a 	mov	r7,r19
    6194:	1009883a 	mov	r4,r2
    6198:	180b883a 	mov	r5,r3
    619c:	0008fc80 	call	8fc8 <__muldf3>
    61a0:	01a02734 	movhi	r6,32924
    61a4:	01cfa4b4 	movhi	r7,16018
    61a8:	3194ab44 	addi	r6,r6,21165
    61ac:	39df93c4 	addi	r7,r7,32335
    61b0:	1009883a 	mov	r4,r2
    61b4:	180b883a 	mov	r5,r3
    61b8:	00097740 	call	9774 <__subdf3>
    61bc:	a00d883a 	mov	r6,r20
    61c0:	980f883a 	mov	r7,r19
    61c4:	1009883a 	mov	r4,r2
    61c8:	180b883a 	mov	r5,r3
    61cc:	0008fc80 	call	8fc8 <__muldf3>
    61d0:	018672f4 	movhi	r6,6603
    61d4:	01cfbeb4 	movhi	r7,16122
    61d8:	31856404 	addi	r6,r6,5520
    61dc:	39c06804 	addi	r7,r7,416
    61e0:	1009883a 	mov	r4,r2
    61e4:	180b883a 	mov	r5,r3
    61e8:	0007b740 	call	7b74 <__adddf3>
    61ec:	a00d883a 	mov	r6,r20
    61f0:	980f883a 	mov	r7,r19
    61f4:	1009883a 	mov	r4,r2
    61f8:	180b883a 	mov	r5,r3
    61fc:	0008fc80 	call	8fc8 <__muldf3>
    6200:	0185b074 	movhi	r6,5825
    6204:	01cfd5f4 	movhi	r7,16215
    6208:	31945dc4 	addi	r6,r6,20855
    620c:	39f05b04 	addi	r7,r7,-16020
    6210:	1009883a 	mov	r4,r2
    6214:	180b883a 	mov	r5,r3
    6218:	00097740 	call	9774 <__subdf3>
    621c:	a00d883a 	mov	r6,r20
    6220:	980f883a 	mov	r7,r19
    6224:	1009883a 	mov	r4,r2
    6228:	180b883a 	mov	r5,r3
    622c:	0008fc80 	call	8fc8 <__muldf3>
    6230:	01955574 	movhi	r6,21845
    6234:	01cfe974 	movhi	r7,16293
    6238:	31955304 	addi	r6,r6,21836
    623c:	39d55544 	addi	r7,r7,21845
    6240:	1009883a 	mov	r4,r2
    6244:	180b883a 	mov	r5,r3
    6248:	0007b740 	call	7b74 <__adddf3>
    624c:	1009883a 	mov	r4,r2
    6250:	a00d883a 	mov	r6,r20
    6254:	980f883a 	mov	r7,r19
    6258:	180b883a 	mov	r5,r3
    625c:	0008fc80 	call	8fc8 <__muldf3>
    6260:	010ff4f4 	movhi	r4,16339
    6264:	210ccc84 	addi	r4,r4,13106
    6268:	1013883a 	mov	r9,r2
    626c:	1811883a 	mov	r8,r3
    6270:	a023883a 	mov	r17,r20
    6274:	9821883a 	mov	r16,r19
    6278:	1017883a 	mov	r11,r2
    627c:	1815883a 	mov	r10,r3
    6280:	24bf880e 	bge	r4,r18,60a4 <__kernel_cos+0x188>
    6284:	008ffa74 	movhi	r2,16361
    6288:	14804816 	blt	r2,r18,63ac <__kernel_cos+0x490>
    628c:	043ff834 	movhi	r16,65504
    6290:	9421883a 	add	r16,r18,r16
    6294:	000d883a 	mov	r6,zero
    6298:	800f883a 	mov	r7,r16
    629c:	0009883a 	mov	r4,zero
    62a0:	014ffc34 	movhi	r5,16368
    62a4:	da400015 	stw	r9,0(sp)
    62a8:	d8c00115 	stw	r3,4(sp)
    62ac:	00097740 	call	9774 <__subdf3>
    62b0:	da400017 	ldw	r9,0(sp)
    62b4:	da000117 	ldw	r8,4(sp)
    62b8:	1017883a 	mov	r11,r2
    62bc:	1815883a 	mov	r10,r3
    62c0:	980b883a 	mov	r5,r19
    62c4:	000d883a 	mov	r6,zero
    62c8:	01cff834 	movhi	r7,16352
    62cc:	a009883a 	mov	r4,r20
    62d0:	da800115 	stw	r10,4(sp)
    62d4:	dac00015 	stw	r11,0(sp)
    62d8:	da000315 	stw	r8,12(sp)
    62dc:	da400215 	stw	r9,8(sp)
    62e0:	0008fc80 	call	8fc8 <__muldf3>
    62e4:	800f883a 	mov	r7,r16
    62e8:	000d883a 	mov	r6,zero
    62ec:	1009883a 	mov	r4,r2
    62f0:	180b883a 	mov	r5,r3
    62f4:	00097740 	call	9774 <__subdf3>
    62f8:	da400217 	ldw	r9,8(sp)
    62fc:	da000317 	ldw	r8,12(sp)
    6300:	980b883a 	mov	r5,r19
    6304:	480d883a 	mov	r6,r9
    6308:	400f883a 	mov	r7,r8
    630c:	a009883a 	mov	r4,r20
    6310:	1023883a 	mov	r17,r2
    6314:	1821883a 	mov	r16,r3
    6318:	0008fc80 	call	8fc8 <__muldf3>
    631c:	b00d883a 	mov	r6,r22
    6320:	b80f883a 	mov	r7,r23
    6324:	a809883a 	mov	r4,r21
    6328:	e00b883a 	mov	r5,fp
    632c:	1027883a 	mov	r19,r2
    6330:	1825883a 	mov	r18,r3
    6334:	0008fc80 	call	8fc8 <__muldf3>
    6338:	100d883a 	mov	r6,r2
    633c:	180f883a 	mov	r7,r3
    6340:	9809883a 	mov	r4,r19
    6344:	900b883a 	mov	r5,r18
    6348:	00097740 	call	9774 <__subdf3>
    634c:	100d883a 	mov	r6,r2
    6350:	180f883a 	mov	r7,r3
    6354:	8809883a 	mov	r4,r17
    6358:	800b883a 	mov	r5,r16
    635c:	00097740 	call	9774 <__subdf3>
    6360:	dac00017 	ldw	r11,0(sp)
    6364:	da800117 	ldw	r10,4(sp)
    6368:	100d883a 	mov	r6,r2
    636c:	180f883a 	mov	r7,r3
    6370:	5809883a 	mov	r4,r11
    6374:	500b883a 	mov	r5,r10
    6378:	00097740 	call	9774 <__subdf3>
    637c:	dfc00d17 	ldw	ra,52(sp)
    6380:	df000c17 	ldw	fp,48(sp)
    6384:	ddc00b17 	ldw	r23,44(sp)
    6388:	dd800a17 	ldw	r22,40(sp)
    638c:	dd400917 	ldw	r21,36(sp)
    6390:	dd000817 	ldw	r20,32(sp)
    6394:	dcc00717 	ldw	r19,28(sp)
    6398:	dc800617 	ldw	r18,24(sp)
    639c:	dc400517 	ldw	r17,20(sp)
    63a0:	dc000417 	ldw	r16,16(sp)
    63a4:	dec00e04 	addi	sp,sp,56
    63a8:	f800283a 	ret
    63ac:	0017883a 	mov	r11,zero
    63b0:	028ff9f4 	movhi	r10,16359
    63b4:	040ff4b4 	movhi	r16,16338
    63b8:	003fc106 	br	62c0 <__kernel_cos+0x3a4>
    63bc:	0005883a 	mov	r2,zero
    63c0:	00cffc34 	movhi	r3,16368
    63c4:	003fed06 	br	637c <__kernel_cos+0x460>

000063c8 <__kernel_rem_pio2>:
    63c8:	deff5f04 	addi	sp,sp,-644
    63cc:	d880a117 	ldw	r2,644(sp)
    63d0:	dc009715 	stw	r16,604(sp)
    63d4:	dfc0a015 	stw	ra,640(sp)
    63d8:	100690ba 	slli	r3,r2,2
    63dc:	00800074 	movhi	r2,1
    63e0:	df009f15 	stw	fp,636(sp)
    63e4:	1885883a 	add	r2,r3,r2
    63e8:	109fc717 	ldw	r2,32540(r2)
    63ec:	ddc09e15 	stw	r23,632(sp)
    63f0:	dd809d15 	stw	r22,628(sp)
    63f4:	d8800515 	stw	r2,20(sp)
    63f8:	38bfffc4 	addi	r2,r7,-1
    63fc:	dd409c15 	stw	r21,624(sp)
    6400:	dd009b15 	stw	r20,620(sp)
    6404:	dcc09a15 	stw	r19,616(sp)
    6408:	dc809915 	stw	r18,612(sp)
    640c:	dc409815 	stw	r17,608(sp)
    6410:	d9c00715 	stw	r7,28(sp)
    6414:	30fffb10 	cmplti	r3,r6,-20
    6418:	d9000215 	stw	r4,8(sp)
    641c:	d9400915 	stw	r5,36(sp)
    6420:	d8800115 	stw	r2,4(sp)
    6424:	3021883a 	mov	r16,r6
    6428:	18028c1e 	bne	r3,zero,6e5c <__kernel_rem_pio2+0xa94>
    642c:	01400604 	movi	r5,24
    6430:	313fff44 	addi	r4,r6,-3
    6434:	00078040 	call	7804 <__divsi3>
    6438:	d8800615 	stw	r2,24(sp)
    643c:	10800044 	addi	r2,r2,1
    6440:	100690ba 	slli	r3,r2,2
    6444:	10c5c83a 	sub	r2,r2,r3
    6448:	100690fa 	slli	r3,r2,3
    644c:	d9000117 	ldw	r4,4(sp)
    6450:	80c7883a 	add	r3,r16,r3
    6454:	d8800517 	ldw	r2,20(sp)
    6458:	d8c00315 	stw	r3,12(sp)
    645c:	d8c00617 	ldw	r3,24(sp)
    6460:	1105883a 	add	r2,r2,r4
    6464:	1925c83a 	sub	r18,r3,r4
    6468:	10000f16 	blt	r2,zero,64a8 <__kernel_rem_pio2+0xe0>
    646c:	902290ba 	slli	r17,r18,2
    6470:	d8c0a217 	ldw	r3,648(sp)
    6474:	10800044 	addi	r2,r2,1
    6478:	dc001f04 	addi	r16,sp,124
    647c:	1c63883a 	add	r17,r3,r17
    6480:	14a7883a 	add	r19,r2,r18
    6484:	90016016 	blt	r18,zero,6a08 <__kernel_rem_pio2+0x640>
    6488:	89000017 	ldw	r4,0(r17)
    648c:	000a1540 	call	a154 <__floatsidf>
    6490:	80800015 	stw	r2,0(r16)
    6494:	80c00115 	stw	r3,4(r16)
    6498:	94800044 	addi	r18,r18,1
    649c:	84000204 	addi	r16,r16,8
    64a0:	8c400104 	addi	r17,r17,4
    64a4:	94fff71e 	bne	r18,r19,6484 <__kernel_rem_pio2+0xbc>
    64a8:	d8800517 	ldw	r2,20(sp)
    64ac:	10002516 	blt	r2,zero,6544 <__kernel_rem_pio2+0x17c>
    64b0:	dcc00117 	ldw	r19,4(sp)
    64b4:	d8c01f04 	addi	r3,sp,124
    64b8:	dc406f04 	addi	r17,sp,444
    64bc:	982490fa 	slli	r18,r19,3
    64c0:	94000204 	addi	r16,r18,8
    64c4:	1ca5883a 	add	r18,r3,r18
    64c8:	d8c00717 	ldw	r3,28(sp)
    64cc:	10ef883a 	add	r23,r2,r3
    64d0:	d8800217 	ldw	r2,8(sp)
    64d4:	80a1883a 	add	r16,r16,r2
    64d8:	d8800117 	ldw	r2,4(sp)
    64dc:	10015f16 	blt	r2,zero,6a5c <__kernel_rem_pio2+0x694>
    64e0:	dd000217 	ldw	r20,8(sp)
    64e4:	902d883a 	mov	r22,r18
    64e8:	0039883a 	mov	fp,zero
    64ec:	002b883a 	mov	r21,zero
    64f0:	b1800017 	ldw	r6,0(r22)
    64f4:	b1c00117 	ldw	r7,4(r22)
    64f8:	a1000017 	ldw	r4,0(r20)
    64fc:	a1400117 	ldw	r5,4(r20)
    6500:	a5000204 	addi	r20,r20,8
    6504:	b5bffe04 	addi	r22,r22,-8
    6508:	0008fc80 	call	8fc8 <__muldf3>
    650c:	e009883a 	mov	r4,fp
    6510:	a80b883a 	mov	r5,r21
    6514:	100d883a 	mov	r6,r2
    6518:	180f883a 	mov	r7,r3
    651c:	0007b740 	call	7b74 <__adddf3>
    6520:	1039883a 	mov	fp,r2
    6524:	182b883a 	mov	r21,r3
    6528:	a43ff11e 	bne	r20,r16,64f0 <__kernel_rem_pio2+0x128>
    652c:	8f000015 	stw	fp,0(r17)
    6530:	8d400115 	stw	r21,4(r17)
    6534:	9cc00044 	addi	r19,r19,1
    6538:	8c400204 	addi	r17,r17,8
    653c:	94800204 	addi	r18,r18,8
    6540:	9dffe51e 	bne	r19,r23,64d8 <__kernel_rem_pio2+0x110>
    6544:	dc400517 	ldw	r17,20(sp)
    6548:	d8c00717 	ldw	r3,28(sp)
    654c:	d9000217 	ldw	r4,8(sp)
    6550:	88bfffc4 	addi	r2,r17,-1
    6554:	180690fa 	slli	r3,r3,3
    6558:	883890ba 	slli	fp,r17,2
    655c:	100490ba 	slli	r2,r2,2
    6560:	243ffe04 	addi	r16,r4,-8
    6564:	80e1883a 	add	r16,r16,r3
    6568:	e1000b04 	addi	r4,fp,44
    656c:	10808c04 	addi	r2,r2,560
    6570:	d8c00b04 	addi	r3,sp,44
    6574:	26c9883a 	add	r4,r4,sp
    6578:	10c5883a 	add	r2,r2,r3
    657c:	d9000415 	stw	r4,16(sp)
    6580:	d8800815 	stw	r2,32(sp)
    6584:	883890fa 	slli	fp,r17,3
    6588:	d8c00b04 	addi	r3,sp,44
    658c:	e0808c04 	addi	r2,fp,560
    6590:	10c5883a 	add	r2,r2,r3
    6594:	157fd817 	ldw	r21,-160(r2)
    6598:	153fd917 	ldw	r20,-156(r2)
    659c:	0440280e 	bge	zero,r17,6640 <__kernel_rem_pio2+0x278>
    65a0:	d8806f04 	addi	r2,sp,444
    65a4:	1725883a 	add	r18,r2,fp
    65a8:	1827883a 	mov	r19,r3
    65ac:	000d883a 	mov	r6,zero
    65b0:	01cf9c34 	movhi	r7,15984
    65b4:	a809883a 	mov	r4,r21
    65b8:	a00b883a 	mov	r5,r20
    65bc:	0008fc80 	call	8fc8 <__muldf3>
    65c0:	180b883a 	mov	r5,r3
    65c4:	1009883a 	mov	r4,r2
    65c8:	000a0d40 	call	a0d4 <__fixdfsi>
    65cc:	1009883a 	mov	r4,r2
    65d0:	000a1540 	call	a154 <__floatsidf>
    65d4:	000d883a 	mov	r6,zero
    65d8:	01d05c34 	movhi	r7,16752
    65dc:	1009883a 	mov	r4,r2
    65e0:	180b883a 	mov	r5,r3
    65e4:	102f883a 	mov	r23,r2
    65e8:	182d883a 	mov	r22,r3
    65ec:	0008fc80 	call	8fc8 <__muldf3>
    65f0:	100d883a 	mov	r6,r2
    65f4:	180f883a 	mov	r7,r3
    65f8:	a809883a 	mov	r4,r21
    65fc:	a00b883a 	mov	r5,r20
    6600:	00097740 	call	9774 <__subdf3>
    6604:	180b883a 	mov	r5,r3
    6608:	1009883a 	mov	r4,r2
    660c:	000a0d40 	call	a0d4 <__fixdfsi>
    6610:	91bffe17 	ldw	r6,-8(r18)
    6614:	91ffff17 	ldw	r7,-4(r18)
    6618:	98800015 	stw	r2,0(r19)
    661c:	b809883a 	mov	r4,r23
    6620:	b00b883a 	mov	r5,r22
    6624:	0007b740 	call	7b74 <__adddf3>
    6628:	102b883a 	mov	r21,r2
    662c:	94bffe04 	addi	r18,r18,-8
    6630:	d8806f04 	addi	r2,sp,444
    6634:	1829883a 	mov	r20,r3
    6638:	9cc00104 	addi	r19,r19,4
    663c:	14bfdb1e 	bne	r2,r18,65ac <__kernel_rem_pio2+0x1e4>
    6640:	dd800317 	ldw	r22,12(sp)
    6644:	a809883a 	mov	r4,r21
    6648:	a00b883a 	mov	r5,r20
    664c:	b00d883a 	mov	r6,r22
    6650:	00076440 	call	7644 <scalbn>
    6654:	000d883a 	mov	r6,zero
    6658:	01cff034 	movhi	r7,16320
    665c:	1009883a 	mov	r4,r2
    6660:	180b883a 	mov	r5,r3
    6664:	1029883a 	mov	r20,r2
    6668:	1827883a 	mov	r19,r3
    666c:	0008fc80 	call	8fc8 <__muldf3>
    6670:	1009883a 	mov	r4,r2
    6674:	180b883a 	mov	r5,r3
    6678:	00034740 	call	3474 <floor>
    667c:	000d883a 	mov	r6,zero
    6680:	01d00834 	movhi	r7,16416
    6684:	1009883a 	mov	r4,r2
    6688:	180b883a 	mov	r5,r3
    668c:	0008fc80 	call	8fc8 <__muldf3>
    6690:	100d883a 	mov	r6,r2
    6694:	180f883a 	mov	r7,r3
    6698:	a009883a 	mov	r4,r20
    669c:	980b883a 	mov	r5,r19
    66a0:	00097740 	call	9774 <__subdf3>
    66a4:	180b883a 	mov	r5,r3
    66a8:	1009883a 	mov	r4,r2
    66ac:	1827883a 	mov	r19,r3
    66b0:	102b883a 	mov	r21,r2
    66b4:	000a0d40 	call	a0d4 <__fixdfsi>
    66b8:	1009883a 	mov	r4,r2
    66bc:	1029883a 	mov	r20,r2
    66c0:	000a1540 	call	a154 <__floatsidf>
    66c4:	980b883a 	mov	r5,r19
    66c8:	100d883a 	mov	r6,r2
    66cc:	180f883a 	mov	r7,r3
    66d0:	a809883a 	mov	r4,r21
    66d4:	00097740 	call	9774 <__subdf3>
    66d8:	1025883a 	mov	r18,r2
    66dc:	1027883a 	mov	r19,r2
    66e0:	1813883a 	mov	r9,r3
    66e4:	0580670e 	bge	zero,r22,6884 <__kernel_rem_pio2+0x4bc>
    66e8:	88bfffc4 	addi	r2,r17,-1
    66ec:	100490ba 	slli	r2,r2,2
    66f0:	d9400b04 	addi	r5,sp,44
    66f4:	01000604 	movi	r4,24
    66f8:	10808c04 	addi	r2,r2,560
    66fc:	1145883a 	add	r2,r2,r5
    6700:	117f7417 	ldw	r5,-560(r2)
    6704:	2589c83a 	sub	r4,r4,r22
    6708:	054005c4 	movi	r21,23
    670c:	290dd83a 	sra	r6,r5,r4
    6710:	adabc83a 	sub	r21,r21,r22
    6714:	3108983a 	sll	r4,r6,r4
    6718:	a1a9883a 	add	r20,r20,r6
    671c:	2909c83a 	sub	r4,r5,r4
    6720:	256bd83a 	sra	r21,r4,r21
    6724:	113f7415 	stw	r4,-560(r2)
    6728:	05406016 	blt	zero,r21,68ac <__kernel_rem_pio2+0x4e4>
    672c:	480b883a 	mov	r5,r9
    6730:	000d883a 	mov	r6,zero
    6734:	000f883a 	mov	r7,zero
    6738:	9809883a 	mov	r4,r19
    673c:	da400015 	stw	r9,0(sp)
    6740:	0008d780 	call	8d78 <__eqdf2>
    6744:	da400017 	ldw	r9,0(sp)
    6748:	1001d21e 	bne	r2,zero,6e94 <__kernel_rem_pio2+0xacc>
    674c:	d8800517 	ldw	r2,20(sp)
    6750:	8cffffc4 	addi	r19,r17,-1
    6754:	98800a16 	blt	r19,r2,6780 <__kernel_rem_pio2+0x3b8>
    6758:	880490ba 	slli	r2,r17,2
    675c:	d9400417 	ldw	r5,16(sp)
    6760:	0007883a 	mov	r3,zero
    6764:	10800b04 	addi	r2,r2,44
    6768:	16c5883a 	add	r2,r2,sp
    676c:	113fff17 	ldw	r4,-4(r2)
    6770:	10bfff04 	addi	r2,r2,-4
    6774:	1906b03a 	or	r3,r3,r4
    6778:	117ffc1e 	bne	r2,r5,676c <__kernel_rem_pio2+0x3a4>
    677c:	1800ba1e 	bne	r3,zero,6a68 <__kernel_rem_pio2+0x6a0>
    6780:	d8800817 	ldw	r2,32(sp)
    6784:	10bf7417 	ldw	r2,-560(r2)
    6788:	1000b11e 	bne	r2,zero,6a50 <__kernel_rem_pio2+0x688>
    678c:	d8800417 	ldw	r2,16(sp)
    6790:	05000044 	movi	r20,1
    6794:	10fffe17 	ldw	r3,-8(r2)
    6798:	a5000044 	addi	r20,r20,1
    679c:	10bfff04 	addi	r2,r2,-4
    67a0:	183ffc26 	beq	r3,zero,6794 <__kernel_rem_pio2+0x3cc>
    67a4:	8d05883a 	add	r2,r17,r20
    67a8:	8d400044 	addi	r21,r17,1
    67ac:	d8800015 	stw	r2,0(sp)
    67b0:	d8800617 	ldw	r2,24(sp)
    67b4:	88a7883a 	add	r19,r17,r2
    67b8:	d8800717 	ldw	r2,28(sp)
    67bc:	982690ba 	slli	r19,r19,2
    67c0:	1463883a 	add	r17,r2,r17
    67c4:	d880a217 	ldw	r2,648(sp)
    67c8:	882290fa 	slli	r17,r17,3
    67cc:	14e7883a 	add	r19,r2,r19
    67d0:	d8801f04 	addi	r2,sp,124
    67d4:	1463883a 	add	r17,r2,r17
    67d8:	d8806f04 	addi	r2,sp,444
    67dc:	1725883a 	add	r18,r2,fp
    67e0:	99000117 	ldw	r4,4(r19)
    67e4:	000a1540 	call	a154 <__floatsidf>
    67e8:	1009883a 	mov	r4,r2
    67ec:	88800015 	stw	r2,0(r17)
    67f0:	d8800117 	ldw	r2,4(sp)
    67f4:	88c00115 	stw	r3,4(r17)
    67f8:	180b883a 	mov	r5,r3
    67fc:	10001e16 	blt	r2,zero,6878 <__kernel_rem_pio2+0x4b0>
    6800:	dd000217 	ldw	r20,8(sp)
    6804:	882f883a 	mov	r23,r17
    6808:	002d883a 	mov	r22,zero
    680c:	0039883a 	mov	fp,zero
    6810:	00000306 	br	6820 <__kernel_rem_pio2+0x458>
    6814:	b9000017 	ldw	r4,0(r23)
    6818:	b9400117 	ldw	r5,4(r23)
    681c:	a5000204 	addi	r20,r20,8
    6820:	a1800017 	ldw	r6,0(r20)
    6824:	a1c00117 	ldw	r7,4(r20)
    6828:	bdfffe04 	addi	r23,r23,-8
    682c:	0008fc80 	call	8fc8 <__muldf3>
    6830:	b009883a 	mov	r4,r22
    6834:	e00b883a 	mov	r5,fp
    6838:	100d883a 	mov	r6,r2
    683c:	180f883a 	mov	r7,r3
    6840:	0007b740 	call	7b74 <__adddf3>
    6844:	102d883a 	mov	r22,r2
    6848:	1839883a 	mov	fp,r3
    684c:	a43ff11e 	bne	r20,r16,6814 <__kernel_rem_pio2+0x44c>
    6850:	d8800017 	ldw	r2,0(sp)
    6854:	95800215 	stw	r22,8(r18)
    6858:	97000315 	stw	fp,12(r18)
    685c:	ad400044 	addi	r21,r21,1
    6860:	9cc00104 	addi	r19,r19,4
    6864:	8c400204 	addi	r17,r17,8
    6868:	94800204 	addi	r18,r18,8
    686c:	157fdc0e 	bge	r2,r21,67e0 <__kernel_rem_pio2+0x418>
    6870:	1023883a 	mov	r17,r2
    6874:	003f4306 	br	6584 <__kernel_rem_pio2+0x1bc>
    6878:	002d883a 	mov	r22,zero
    687c:	0039883a 	mov	fp,zero
    6880:	003ff306 	br	6850 <__kernel_rem_pio2+0x488>
    6884:	d8800317 	ldw	r2,12(sp)
    6888:	1000651e 	bne	r2,zero,6a20 <__kernel_rem_pio2+0x658>
    688c:	88bfffc4 	addi	r2,r17,-1
    6890:	100490ba 	slli	r2,r2,2
    6894:	d9000b04 	addi	r4,sp,44
    6898:	10808c04 	addi	r2,r2,560
    689c:	1105883a 	add	r2,r2,r4
    68a0:	157f7417 	ldw	r21,-560(r2)
    68a4:	a82bd5fa 	srai	r21,r21,23
    68a8:	057fa00e 	bge	zero,r21,672c <__kernel_rem_pio2+0x364>
    68ac:	a5000044 	addi	r20,r20,1
    68b0:	0441ac0e 	bge	zero,r17,6f64 <__kernel_rem_pio2+0xb9c>
    68b4:	da800b17 	ldw	r10,44(sp)
    68b8:	5000561e 	bne	r10,zero,6a14 <__kernel_rem_pio2+0x64c>
    68bc:	88800060 	cmpeqi	r2,r17,1
    68c0:	1000271e 	bne	r2,zero,6960 <__kernel_rem_pio2+0x598>
    68c4:	da800c17 	ldw	r10,48(sp)
    68c8:	d9400c04 	addi	r5,sp,48
    68cc:	00800044 	movi	r2,1
    68d0:	11000044 	addi	r4,r2,1
    68d4:	29400104 	addi	r5,r5,4
    68d8:	5000061e 	bne	r10,zero,68f4 <__kernel_rem_pio2+0x52c>
    68dc:	89002026 	beq	r17,r4,6960 <__kernel_rem_pio2+0x598>
    68e0:	2a800017 	ldw	r10,0(r5)
    68e4:	2005883a 	mov	r2,r4
    68e8:	11000044 	addi	r4,r2,1
    68ec:	29400104 	addi	r5,r5,4
    68f0:	503ffa26 	beq	r10,zero,68dc <__kernel_rem_pio2+0x514>
    68f4:	100490ba 	slli	r2,r2,2
    68f8:	01404034 	movhi	r5,256
    68fc:	2a95c83a 	sub	r10,r5,r10
    6900:	10808c04 	addi	r2,r2,560
    6904:	d9400b04 	addi	r5,sp,44
    6908:	1145883a 	add	r2,r2,r5
    690c:	12bf7415 	stw	r10,-560(r2)
    6910:	2440120e 	bge	r4,r17,695c <__kernel_rem_pio2+0x594>
    6914:	200890ba 	slli	r4,r4,2
    6918:	880490ba 	slli	r2,r17,2
    691c:	d9c00b04 	addi	r7,sp,44
    6920:	21408c04 	addi	r5,r4,560
    6924:	01804034 	movhi	r6,256
    6928:	29cb883a 	add	r5,r5,r7
    692c:	21000b04 	addi	r4,r4,44
    6930:	10800b04 	addi	r2,r2,44
    6934:	297f7417 	ldw	r5,-560(r5)
    6938:	26c9883a 	add	r4,r4,sp
    693c:	16c5883a 	add	r2,r2,sp
    6940:	31bfffc4 	addi	r6,r6,-1
    6944:	00000106 	br	694c <__kernel_rem_pio2+0x584>
    6948:	21400017 	ldw	r5,0(r4)
    694c:	314bc83a 	sub	r5,r6,r5
    6950:	21400015 	stw	r5,0(r4)
    6954:	21000104 	addi	r4,r4,4
    6958:	20bffb1e 	bne	r4,r2,6948 <__kernel_rem_pio2+0x580>
    695c:	02800044 	movi	r10,1
    6960:	d9000317 	ldw	r4,12(sp)
    6964:	01000e0e 	bge	zero,r4,69a0 <__kernel_rem_pio2+0x5d8>
    6968:	20800060 	cmpeqi	r2,r4,1
    696c:	1001371e 	bne	r2,zero,6e4c <__kernel_rem_pio2+0xa84>
    6970:	208000a0 	cmpeqi	r2,r4,2
    6974:	10000a26 	beq	r2,zero,69a0 <__kernel_rem_pio2+0x5d8>
    6978:	88bfffc4 	addi	r2,r17,-1
    697c:	100490ba 	slli	r2,r2,2
    6980:	01401034 	movhi	r5,64
    6984:	d9000b04 	addi	r4,sp,44
    6988:	10808c04 	addi	r2,r2,560
    698c:	1105883a 	add	r2,r2,r4
    6990:	113f7417 	ldw	r4,-560(r2)
    6994:	297fffc4 	addi	r5,r5,-1
    6998:	2148703a 	and	r4,r4,r5
    699c:	113f7415 	stw	r4,-560(r2)
    69a0:	a8800098 	cmpnei	r2,r21,2
    69a4:	103f611e 	bne	r2,zero,672c <__kernel_rem_pio2+0x364>
    69a8:	900d883a 	mov	r6,r18
    69ac:	180f883a 	mov	r7,r3
    69b0:	0009883a 	mov	r4,zero
    69b4:	014ffc34 	movhi	r5,16368
    69b8:	da800015 	stw	r10,0(sp)
    69bc:	00097740 	call	9774 <__subdf3>
    69c0:	da800017 	ldw	r10,0(sp)
    69c4:	1027883a 	mov	r19,r2
    69c8:	1813883a 	mov	r9,r3
    69cc:	503f5726 	beq	r10,zero,672c <__kernel_rem_pio2+0x364>
    69d0:	d9800317 	ldw	r6,12(sp)
    69d4:	0009883a 	mov	r4,zero
    69d8:	014ffc34 	movhi	r5,16368
    69dc:	d8c00015 	stw	r3,0(sp)
    69e0:	00076440 	call	7644 <scalbn>
    69e4:	da400017 	ldw	r9,0(sp)
    69e8:	9809883a 	mov	r4,r19
    69ec:	100d883a 	mov	r6,r2
    69f0:	480b883a 	mov	r5,r9
    69f4:	180f883a 	mov	r7,r3
    69f8:	00097740 	call	9774 <__subdf3>
    69fc:	1027883a 	mov	r19,r2
    6a00:	1813883a 	mov	r9,r3
    6a04:	003f4906 	br	672c <__kernel_rem_pio2+0x364>
    6a08:	0005883a 	mov	r2,zero
    6a0c:	0007883a 	mov	r3,zero
    6a10:	003e9f06 	br	6490 <__kernel_rem_pio2+0xc8>
    6a14:	01000044 	movi	r4,1
    6a18:	0005883a 	mov	r2,zero
    6a1c:	003fb506 	br	68f4 <__kernel_rem_pio2+0x52c>
    6a20:	180b883a 	mov	r5,r3
    6a24:	000d883a 	mov	r6,zero
    6a28:	01cff834 	movhi	r7,16352
    6a2c:	9009883a 	mov	r4,r18
    6a30:	d8c00a15 	stw	r3,40(sp)
    6a34:	d8c00015 	stw	r3,0(sp)
    6a38:	0008df80 	call	8df8 <__gedf2>
    6a3c:	da400017 	ldw	r9,0(sp)
    6a40:	d8c00a17 	ldw	r3,40(sp)
    6a44:	1001080e 	bge	r2,zero,6e68 <__kernel_rem_pio2+0xaa0>
    6a48:	002b883a 	mov	r21,zero
    6a4c:	003f3706 	br	672c <__kernel_rem_pio2+0x364>
    6a50:	8d400044 	addi	r21,r17,1
    6a54:	dd400015 	stw	r21,0(sp)
    6a58:	003f5506 	br	67b0 <__kernel_rem_pio2+0x3e8>
    6a5c:	0039883a 	mov	fp,zero
    6a60:	002b883a 	mov	r21,zero
    6a64:	003eb106 	br	652c <__kernel_rem_pio2+0x164>
    6a68:	d8c00317 	ldw	r3,12(sp)
    6a6c:	980490ba 	slli	r2,r19,2
    6a70:	d9400b04 	addi	r5,sp,44
    6a74:	193ffa04 	addi	r4,r3,-24
    6a78:	10c08c04 	addi	r3,r2,560
    6a7c:	1947883a 	add	r3,r3,r5
    6a80:	18ff7417 	ldw	r3,-560(r3)
    6a84:	dd400215 	stw	r21,8(sp)
    6a88:	d9000315 	stw	r4,12(sp)
    6a8c:	1800091e 	bne	r3,zero,6ab4 <__kernel_rem_pio2+0x6ec>
    6a90:	10800b04 	addi	r2,r2,44
    6a94:	16c5883a 	add	r2,r2,sp
    6a98:	2007883a 	mov	r3,r4
    6a9c:	113fff17 	ldw	r4,-4(r2)
    6aa0:	9cffffc4 	addi	r19,r19,-1
    6aa4:	10bfff04 	addi	r2,r2,-4
    6aa8:	18fffa04 	addi	r3,r3,-24
    6aac:	203ffb26 	beq	r4,zero,6a9c <__kernel_rem_pio2+0x6d4>
    6ab0:	d8c00315 	stw	r3,12(sp)
    6ab4:	d9800317 	ldw	r6,12(sp)
    6ab8:	0009883a 	mov	r4,zero
    6abc:	014ffc34 	movhi	r5,16368
    6ac0:	00076440 	call	7644 <scalbn>
    6ac4:	1021883a 	mov	r16,r2
    6ac8:	1823883a 	mov	r17,r3
    6acc:	98017116 	blt	r19,zero,7094 <__kernel_rem_pio2+0xccc>
    6ad0:	980490fa 	slli	r2,r19,3
    6ad4:	982c90ba 	slli	r22,r19,2
    6ad8:	d8c06f04 	addi	r3,sp,444
    6adc:	18b9883a 	add	fp,r3,r2
    6ae0:	d8800315 	stw	r2,12(sp)
    6ae4:	b0800b04 	addi	r2,r22,44
    6ae8:	df000115 	stw	fp,4(sp)
    6aec:	16ed883a 	add	r22,r2,sp
    6af0:	b1000017 	ldw	r4,0(r22)
    6af4:	e73ffe04 	addi	fp,fp,-8
    6af8:	000a1540 	call	a154 <__floatsidf>
    6afc:	800d883a 	mov	r6,r16
    6b00:	880f883a 	mov	r7,r17
    6b04:	1009883a 	mov	r4,r2
    6b08:	180b883a 	mov	r5,r3
    6b0c:	0008fc80 	call	8fc8 <__muldf3>
    6b10:	8009883a 	mov	r4,r16
    6b14:	880b883a 	mov	r5,r17
    6b18:	000d883a 	mov	r6,zero
    6b1c:	01cf9c34 	movhi	r7,15984
    6b20:	e0800215 	stw	r2,8(fp)
    6b24:	e0c00315 	stw	r3,12(fp)
    6b28:	0008fc80 	call	8fc8 <__muldf3>
    6b2c:	b009883a 	mov	r4,r22
    6b30:	1021883a 	mov	r16,r2
    6b34:	d8800b04 	addi	r2,sp,44
    6b38:	1823883a 	mov	r17,r3
    6b3c:	b5bfff04 	addi	r22,r22,-4
    6b40:	113feb1e 	bne	r2,r4,6af0 <__kernel_rem_pio2+0x728>
    6b44:	05cffe74 	movhi	r23,16377
    6b48:	dc800517 	ldw	r18,20(sp)
    6b4c:	bdc87ec4 	addi	r23,r23,8699
    6b50:	dd800117 	ldw	r22,4(sp)
    6b54:	d8804704 	addi	r2,sp,284
    6b58:	dd000415 	stw	r20,16(sp)
    6b5c:	dcc00015 	stw	r19,0(sp)
    6b60:	ddc00115 	stw	r23,4(sp)
    6b64:	0021883a 	mov	r16,zero
    6b68:	102b883a 	mov	r21,r2
    6b6c:	90002316 	blt	r18,zero,6bfc <__kernel_rem_pio2+0x834>
    6b70:	04c00074 	movhi	r19,1
    6b74:	d9400117 	ldw	r5,4(sp)
    6b78:	9cdfb704 	addi	r19,r19,32476
    6b7c:	b02f883a 	mov	r23,r22
    6b80:	01100034 	movhi	r4,16384
    6b84:	0039883a 	mov	fp,zero
    6b88:	0023883a 	mov	r17,zero
    6b8c:	0029883a 	mov	r20,zero
    6b90:	00000506 	br	6ba8 <__kernel_rem_pio2+0x7e0>
    6b94:	9cc00204 	addi	r19,r19,8
    6b98:	bdc00204 	addi	r23,r23,8
    6b9c:	85000e16 	blt	r16,r20,6bd8 <__kernel_rem_pio2+0x810>
    6ba0:	99000017 	ldw	r4,0(r19)
    6ba4:	99400117 	ldw	r5,4(r19)
    6ba8:	b9800017 	ldw	r6,0(r23)
    6bac:	b9c00117 	ldw	r7,4(r23)
    6bb0:	a5000044 	addi	r20,r20,1
    6bb4:	0008fc80 	call	8fc8 <__muldf3>
    6bb8:	e009883a 	mov	r4,fp
    6bbc:	880b883a 	mov	r5,r17
    6bc0:	100d883a 	mov	r6,r2
    6bc4:	180f883a 	mov	r7,r3
    6bc8:	0007b740 	call	7b74 <__adddf3>
    6bcc:	1039883a 	mov	fp,r2
    6bd0:	1823883a 	mov	r17,r3
    6bd4:	953fef0e 	bge	r18,r20,6b94 <__kernel_rem_pio2+0x7cc>
    6bd8:	d8c00017 	ldw	r3,0(sp)
    6bdc:	af000015 	stw	fp,0(r21)
    6be0:	ac400115 	stw	r17,4(r21)
    6be4:	80800044 	addi	r2,r16,1
    6be8:	ad400204 	addi	r21,r21,8
    6bec:	b5bffe04 	addi	r22,r22,-8
    6bf0:	1c000526 	beq	r3,r16,6c08 <__kernel_rem_pio2+0x840>
    6bf4:	1021883a 	mov	r16,r2
    6bf8:	903fdd0e 	bge	r18,zero,6b70 <__kernel_rem_pio2+0x7a8>
    6bfc:	0039883a 	mov	fp,zero
    6c00:	0023883a 	mov	r17,zero
    6c04:	003ff406 	br	6bd8 <__kernel_rem_pio2+0x810>
    6c08:	d880a117 	ldw	r2,644(sp)
    6c0c:	dd000417 	ldw	r20,16(sp)
    6c10:	dcc00017 	ldw	r19,0(sp)
    6c14:	108000c8 	cmpgei	r2,r2,3
    6c18:	1000241e 	bne	r2,zero,6cac <__kernel_rem_pio2+0x8e4>
    6c1c:	d880a117 	ldw	r2,644(sp)
    6c20:	0080d216 	blt	zero,r2,6f6c <__kernel_rem_pio2+0xba4>
    6c24:	1000141e 	bne	r2,zero,6c78 <__kernel_rem_pio2+0x8b0>
    6c28:	d8c00317 	ldw	r3,12(sp)
    6c2c:	d8804704 	addi	r2,sp,284
    6c30:	0009883a 	mov	r4,zero
    6c34:	10eb883a 	add	r21,r2,r3
    6c38:	000b883a 	mov	r5,zero
    6c3c:	a9800017 	ldw	r6,0(r21)
    6c40:	a9c00117 	ldw	r7,4(r21)
    6c44:	0007b740 	call	7b74 <__adddf3>
    6c48:	a80d883a 	mov	r6,r21
    6c4c:	1009883a 	mov	r4,r2
    6c50:	d8804704 	addi	r2,sp,284
    6c54:	180b883a 	mov	r5,r3
    6c58:	ad7ffe04 	addi	r21,r21,-8
    6c5c:	11bff71e 	bne	r2,r6,6c3c <__kernel_rem_pio2+0x874>
    6c60:	d8800217 	ldw	r2,8(sp)
    6c64:	10000126 	beq	r2,zero,6c6c <__kernel_rem_pio2+0x8a4>
    6c68:	2960003c 	xorhi	r5,r5,32768
    6c6c:	d8800917 	ldw	r2,36(sp)
    6c70:	11000015 	stw	r4,0(r2)
    6c74:	11400115 	stw	r5,4(r2)
    6c78:	a08001cc 	andi	r2,r20,7
    6c7c:	dfc0a017 	ldw	ra,640(sp)
    6c80:	df009f17 	ldw	fp,636(sp)
    6c84:	ddc09e17 	ldw	r23,632(sp)
    6c88:	dd809d17 	ldw	r22,628(sp)
    6c8c:	dd409c17 	ldw	r21,624(sp)
    6c90:	dd009b17 	ldw	r20,620(sp)
    6c94:	dcc09a17 	ldw	r19,616(sp)
    6c98:	dc809917 	ldw	r18,612(sp)
    6c9c:	dc409817 	ldw	r17,608(sp)
    6ca0:	dc009717 	ldw	r16,604(sp)
    6ca4:	dec0a104 	addi	sp,sp,644
    6ca8:	f800283a 	ret
    6cac:	d880a117 	ldw	r2,644(sp)
    6cb0:	108000e0 	cmpeqi	r2,r2,3
    6cb4:	103ff026 	beq	r2,zero,6c78 <__kernel_rem_pio2+0x8b0>
    6cb8:	98010226 	beq	r19,zero,70c4 <__kernel_rem_pio2+0xcfc>
    6cbc:	d8c00317 	ldw	r3,12(sp)
    6cc0:	d9000b04 	addi	r4,sp,44
    6cc4:	18808c04 	addi	r2,r3,560
    6cc8:	1105883a 	add	r2,r2,r4
    6ccc:	14bfb017 	ldw	r18,-320(r2)
    6cd0:	147fb117 	ldw	r17,-316(r2)
    6cd4:	d8804704 	addi	r2,sp,284
    6cd8:	10e1883a 	add	r16,r2,r3
    6cdc:	85bffe17 	ldw	r22,-8(r16)
    6ce0:	857fff17 	ldw	r21,-4(r16)
    6ce4:	9009883a 	mov	r4,r18
    6ce8:	880b883a 	mov	r5,r17
    6cec:	b00d883a 	mov	r6,r22
    6cf0:	a80f883a 	mov	r7,r21
    6cf4:	0007b740 	call	7b74 <__adddf3>
    6cf8:	100d883a 	mov	r6,r2
    6cfc:	180f883a 	mov	r7,r3
    6d00:	b009883a 	mov	r4,r22
    6d04:	a80b883a 	mov	r5,r21
    6d08:	9039883a 	mov	fp,r18
    6d0c:	882f883a 	mov	r23,r17
    6d10:	1025883a 	mov	r18,r2
    6d14:	1823883a 	mov	r17,r3
    6d18:	00097740 	call	9774 <__subdf3>
    6d1c:	e00d883a 	mov	r6,fp
    6d20:	b80f883a 	mov	r7,r23
    6d24:	1009883a 	mov	r4,r2
    6d28:	180b883a 	mov	r5,r3
    6d2c:	0007b740 	call	7b74 <__adddf3>
    6d30:	80800015 	stw	r2,0(r16)
    6d34:	80c00115 	stw	r3,4(r16)
    6d38:	84bffe15 	stw	r18,-8(r16)
    6d3c:	847fff15 	stw	r17,-4(r16)
    6d40:	d8804704 	addi	r2,sp,284
    6d44:	843ffe04 	addi	r16,r16,-8
    6d48:	143fe41e 	bne	r2,r16,6cdc <__kernel_rem_pio2+0x914>
    6d4c:	9cc00088 	cmpgei	r19,r19,2
    6d50:	9800dc26 	beq	r19,zero,70c4 <__kernel_rem_pio2+0xcfc>
    6d54:	d8c00317 	ldw	r3,12(sp)
    6d58:	d9000b04 	addi	r4,sp,44
    6d5c:	dc404904 	addi	r17,sp,292
    6d60:	18808c04 	addi	r2,r3,560
    6d64:	1105883a 	add	r2,r2,r4
    6d68:	14ffb017 	ldw	r19,-320(r2)
    6d6c:	14bfb117 	ldw	r18,-316(r2)
    6d70:	d8804704 	addi	r2,sp,284
    6d74:	10eb883a 	add	r21,r2,r3
    6d78:	a821883a 	mov	r16,r21
    6d7c:	dd000015 	stw	r20,0(sp)
    6d80:	85fffe17 	ldw	r23,-8(r16)
    6d84:	85bfff17 	ldw	r22,-4(r16)
    6d88:	9809883a 	mov	r4,r19
    6d8c:	900b883a 	mov	r5,r18
    6d90:	b80d883a 	mov	r6,r23
    6d94:	b00f883a 	mov	r7,r22
    6d98:	0007b740 	call	7b74 <__adddf3>
    6d9c:	100d883a 	mov	r6,r2
    6da0:	180f883a 	mov	r7,r3
    6da4:	b809883a 	mov	r4,r23
    6da8:	b00b883a 	mov	r5,r22
    6dac:	9829883a 	mov	r20,r19
    6db0:	9039883a 	mov	fp,r18
    6db4:	1027883a 	mov	r19,r2
    6db8:	1825883a 	mov	r18,r3
    6dbc:	00097740 	call	9774 <__subdf3>
    6dc0:	a00d883a 	mov	r6,r20
    6dc4:	e00f883a 	mov	r7,fp
    6dc8:	1009883a 	mov	r4,r2
    6dcc:	180b883a 	mov	r5,r3
    6dd0:	0007b740 	call	7b74 <__adddf3>
    6dd4:	80800015 	stw	r2,0(r16)
    6dd8:	80c00115 	stw	r3,4(r16)
    6ddc:	84fffe15 	stw	r19,-8(r16)
    6de0:	84bfff15 	stw	r18,-4(r16)
    6de4:	843ffe04 	addi	r16,r16,-8
    6de8:	8c3fe51e 	bne	r17,r16,6d80 <__kernel_rem_pio2+0x9b8>
    6dec:	dd000017 	ldw	r20,0(sp)
    6df0:	0009883a 	mov	r4,zero
    6df4:	000b883a 	mov	r5,zero
    6df8:	a9800017 	ldw	r6,0(r21)
    6dfc:	a9c00117 	ldw	r7,4(r21)
    6e00:	ad7ffe04 	addi	r21,r21,-8
    6e04:	0007b740 	call	7b74 <__adddf3>
    6e08:	1009883a 	mov	r4,r2
    6e0c:	180b883a 	mov	r5,r3
    6e10:	8d7ff91e 	bne	r17,r21,6df8 <__kernel_rem_pio2+0xa30>
    6e14:	da000217 	ldw	r8,8(sp)
    6e18:	d9c04717 	ldw	r7,284(sp)
    6e1c:	d8c04817 	ldw	r3,288(sp)
    6e20:	d9804917 	ldw	r6,292(sp)
    6e24:	d8804a17 	ldw	r2,296(sp)
    6e28:	4000891e 	bne	r8,zero,7050 <__kernel_rem_pio2+0xc88>
    6e2c:	da000917 	ldw	r8,36(sp)
    6e30:	41c00015 	stw	r7,0(r8)
    6e34:	40c00115 	stw	r3,4(r8)
    6e38:	41800215 	stw	r6,8(r8)
    6e3c:	40800315 	stw	r2,12(r8)
    6e40:	41000415 	stw	r4,16(r8)
    6e44:	41400515 	stw	r5,20(r8)
    6e48:	003f8b06 	br	6c78 <__kernel_rem_pio2+0x8b0>
    6e4c:	88bfffc4 	addi	r2,r17,-1
    6e50:	100490ba 	slli	r2,r2,2
    6e54:	01402034 	movhi	r5,128
    6e58:	003eca06 	br	6984 <__kernel_rem_pio2+0x5bc>
    6e5c:	00fffa04 	movi	r3,-24
    6e60:	d8000615 	stw	zero,24(sp)
    6e64:	003d7906 	br	644c <__kernel_rem_pio2+0x84>
    6e68:	a5000044 	addi	r20,r20,1
    6e6c:	05400084 	movi	r21,2
    6e70:	047e9016 	blt	zero,r17,68b4 <__kernel_rem_pio2+0x4ec>
    6e74:	480f883a 	mov	r7,r9
    6e78:	900d883a 	mov	r6,r18
    6e7c:	0009883a 	mov	r4,zero
    6e80:	014ffc34 	movhi	r5,16368
    6e84:	00097740 	call	9774 <__subdf3>
    6e88:	1027883a 	mov	r19,r2
    6e8c:	1813883a 	mov	r9,r3
    6e90:	003e2606 	br	672c <__kernel_rem_pio2+0x364>
    6e94:	ddc00317 	ldw	r23,12(sp)
    6e98:	9809883a 	mov	r4,r19
    6e9c:	480b883a 	mov	r5,r9
    6ea0:	05cdc83a 	sub	r6,zero,r23
    6ea4:	dd400215 	stw	r21,8(sp)
    6ea8:	00076440 	call	7644 <scalbn>
    6eac:	000d883a 	mov	r6,zero
    6eb0:	01d05c34 	movhi	r7,16752
    6eb4:	1009883a 	mov	r4,r2
    6eb8:	180b883a 	mov	r5,r3
    6ebc:	1025883a 	mov	r18,r2
    6ec0:	1821883a 	mov	r16,r3
    6ec4:	0008df80 	call	8df8 <__gedf2>
    6ec8:	10005716 	blt	r2,zero,7028 <__kernel_rem_pio2+0xc60>
    6ecc:	000d883a 	mov	r6,zero
    6ed0:	01cf9c34 	movhi	r7,15984
    6ed4:	9009883a 	mov	r4,r18
    6ed8:	800b883a 	mov	r5,r16
    6edc:	0008fc80 	call	8fc8 <__muldf3>
    6ee0:	882c90ba 	slli	r22,r17,2
    6ee4:	180b883a 	mov	r5,r3
    6ee8:	1009883a 	mov	r4,r2
    6eec:	000a0d40 	call	a0d4 <__fixdfsi>
    6ef0:	1009883a 	mov	r4,r2
    6ef4:	102b883a 	mov	r21,r2
    6ef8:	d8c00b04 	addi	r3,sp,44
    6efc:	b0808c04 	addi	r2,r22,560
    6f00:	10ed883a 	add	r22,r2,r3
    6f04:	000a1540 	call	a154 <__floatsidf>
    6f08:	000d883a 	mov	r6,zero
    6f0c:	01d05c34 	movhi	r7,16752
    6f10:	1009883a 	mov	r4,r2
    6f14:	180b883a 	mov	r5,r3
    6f18:	0008fc80 	call	8fc8 <__muldf3>
    6f1c:	100d883a 	mov	r6,r2
    6f20:	180f883a 	mov	r7,r3
    6f24:	9009883a 	mov	r4,r18
    6f28:	800b883a 	mov	r5,r16
    6f2c:	00097740 	call	9774 <__subdf3>
    6f30:	180b883a 	mov	r5,r3
    6f34:	1009883a 	mov	r4,r2
    6f38:	000a0d40 	call	a0d4 <__fixdfsi>
    6f3c:	8cc00044 	addi	r19,r17,1
    6f40:	980690ba 	slli	r3,r19,2
    6f44:	b0bf7415 	stw	r2,-560(r22)
    6f48:	b8800604 	addi	r2,r23,24
    6f4c:	d8800315 	stw	r2,12(sp)
    6f50:	18808c04 	addi	r2,r3,560
    6f54:	d8c00b04 	addi	r3,sp,44
    6f58:	10c7883a 	add	r3,r2,r3
    6f5c:	1d7f7415 	stw	r21,-560(r3)
    6f60:	003ed406 	br	6ab4 <__kernel_rem_pio2+0x6ec>
    6f64:	0015883a 	mov	r10,zero
    6f68:	003e7d06 	br	6960 <__kernel_rem_pio2+0x598>
    6f6c:	d8c00317 	ldw	r3,12(sp)
    6f70:	d8804704 	addi	r2,sp,284
    6f74:	10eb883a 	add	r21,r2,r3
    6f78:	0005883a 	mov	r2,zero
    6f7c:	0007883a 	mov	r3,zero
    6f80:	1009883a 	mov	r4,r2
    6f84:	180b883a 	mov	r5,r3
    6f88:	a9800017 	ldw	r6,0(r21)
    6f8c:	a9c00117 	ldw	r7,4(r21)
    6f90:	0007b740 	call	7b74 <__adddf3>
    6f94:	a80d883a 	mov	r6,r21
    6f98:	1009883a 	mov	r4,r2
    6f9c:	d8804704 	addi	r2,sp,284
    6fa0:	180b883a 	mov	r5,r3
    6fa4:	ad7ffe04 	addi	r21,r21,-8
    6fa8:	11bff71e 	bne	r2,r6,6f88 <__kernel_rem_pio2+0xbc0>
    6fac:	2005883a 	mov	r2,r4
    6fb0:	d9000217 	ldw	r4,8(sp)
    6fb4:	20002a1e 	bne	r4,zero,7060 <__kernel_rem_pio2+0xc98>
    6fb8:	d9800917 	ldw	r6,36(sp)
    6fbc:	d9004717 	ldw	r4,284(sp)
    6fc0:	d9404817 	ldw	r5,288(sp)
    6fc4:	30800015 	stw	r2,0(r6)
    6fc8:	30c00115 	stw	r3,4(r6)
    6fcc:	180f883a 	mov	r7,r3
    6fd0:	100d883a 	mov	r6,r2
    6fd4:	00097740 	call	9774 <__subdf3>
    6fd8:	1009883a 	mov	r4,r2
    6fdc:	180b883a 	mov	r5,r3
    6fe0:	04c00d0e 	bge	zero,r19,7018 <__kernel_rem_pio2+0xc50>
    6fe4:	dc004904 	addi	r16,sp,292
    6fe8:	04400044 	movi	r17,1
    6fec:	81800017 	ldw	r6,0(r16)
    6ff0:	81c00117 	ldw	r7,4(r16)
    6ff4:	8c400044 	addi	r17,r17,1
    6ff8:	84000204 	addi	r16,r16,8
    6ffc:	0007b740 	call	7b74 <__adddf3>
    7000:	1009883a 	mov	r4,r2
    7004:	180b883a 	mov	r5,r3
    7008:	9c7ff80e 	bge	r19,r17,6fec <__kernel_rem_pio2+0xc24>
    700c:	d8800217 	ldw	r2,8(sp)
    7010:	10000126 	beq	r2,zero,7018 <__kernel_rem_pio2+0xc50>
    7014:	2960003c 	xorhi	r5,r5,32768
    7018:	d8800917 	ldw	r2,36(sp)
    701c:	11000215 	stw	r4,8(r2)
    7020:	11400315 	stw	r5,12(r2)
    7024:	003f1406 	br	6c78 <__kernel_rem_pio2+0x8b0>
    7028:	880490ba 	slli	r2,r17,2
    702c:	800b883a 	mov	r5,r16
    7030:	d8c00b04 	addi	r3,sp,44
    7034:	10808c04 	addi	r2,r2,560
    7038:	9009883a 	mov	r4,r18
    703c:	10e1883a 	add	r16,r2,r3
    7040:	000a0d40 	call	a0d4 <__fixdfsi>
    7044:	80bf7415 	stw	r2,-560(r16)
    7048:	8827883a 	mov	r19,r17
    704c:	003e9906 	br	6ab4 <__kernel_rem_pio2+0x6ec>
    7050:	18e0003c 	xorhi	r3,r3,32768
    7054:	10a0003c 	xorhi	r2,r2,32768
    7058:	2960003c 	xorhi	r5,r5,32768
    705c:	003f7306 	br	6e2c <__kernel_rem_pio2+0xa64>
    7060:	d9c00917 	ldw	r7,36(sp)
    7064:	d9004717 	ldw	r4,284(sp)
    7068:	d9404817 	ldw	r5,288(sp)
    706c:	19a0003c 	xorhi	r6,r3,32768
    7070:	39800115 	stw	r6,4(r7)
    7074:	38800015 	stw	r2,0(r7)
    7078:	100d883a 	mov	r6,r2
    707c:	180f883a 	mov	r7,r3
    7080:	00097740 	call	9774 <__subdf3>
    7084:	1009883a 	mov	r4,r2
    7088:	180b883a 	mov	r5,r3
    708c:	04ffd516 	blt	zero,r19,6fe4 <__kernel_rem_pio2+0xc1c>
    7090:	003fe006 	br	7014 <__kernel_rem_pio2+0xc4c>
    7094:	d880a117 	ldw	r2,644(sp)
    7098:	108000c8 	cmpgei	r2,r2,3
    709c:	1000061e 	bne	r2,zero,70b8 <__kernel_rem_pio2+0xcf0>
    70a0:	d880a117 	ldw	r2,644(sp)
    70a4:	00800a16 	blt	zero,r2,70d0 <__kernel_rem_pio2+0xd08>
    70a8:	103ef31e 	bne	r2,zero,6c78 <__kernel_rem_pio2+0x8b0>
    70ac:	0009883a 	mov	r4,zero
    70b0:	000b883a 	mov	r5,zero
    70b4:	003eea06 	br	6c60 <__kernel_rem_pio2+0x898>
    70b8:	d880a117 	ldw	r2,644(sp)
    70bc:	108000e0 	cmpeqi	r2,r2,3
    70c0:	103eed26 	beq	r2,zero,6c78 <__kernel_rem_pio2+0x8b0>
    70c4:	0009883a 	mov	r4,zero
    70c8:	000b883a 	mov	r5,zero
    70cc:	003f5106 	br	6e14 <__kernel_rem_pio2+0xa4c>
    70d0:	0005883a 	mov	r2,zero
    70d4:	0007883a 	mov	r3,zero
    70d8:	003fb506 	br	6fb0 <__kernel_rem_pio2+0xbe8>

000070dc <__kernel_sin>:
    70dc:	02200034 	movhi	r8,32768
    70e0:	defff304 	addi	sp,sp,-52
    70e4:	423fffc4 	addi	r8,r8,-1
    70e8:	dd400815 	stw	r21,32(sp)
    70ec:	dd000715 	stw	r20,28(sp)
    70f0:	dc400415 	stw	r17,16(sp)
    70f4:	dc000315 	stw	r16,12(sp)
    70f8:	dfc00c15 	stw	ra,48(sp)
    70fc:	df000b15 	stw	fp,44(sp)
    7100:	ddc00a15 	stw	r23,40(sp)
    7104:	dd800915 	stw	r22,36(sp)
    7108:	dcc00615 	stw	r19,24(sp)
    710c:	dc800515 	stw	r18,20(sp)
    7110:	2a10703a 	and	r8,r5,r8
    7114:	00cf9034 	movhi	r3,15936
    7118:	2821883a 	mov	r16,r5
    711c:	2023883a 	mov	r17,r4
    7120:	302b883a 	mov	r21,r6
    7124:	3829883a 	mov	r20,r7
    7128:	40c0020e 	bge	r8,r3,7134 <__kernel_sin+0x58>
    712c:	000a0d40 	call	a0d4 <__fixdfsi>
    7130:	10009926 	beq	r2,zero,7398 <__kernel_sin+0x2bc>
    7134:	880d883a 	mov	r6,r17
    7138:	800f883a 	mov	r7,r16
    713c:	8809883a 	mov	r4,r17
    7140:	800b883a 	mov	r5,r16
    7144:	0008fc80 	call	8fc8 <__muldf3>
    7148:	100d883a 	mov	r6,r2
    714c:	180f883a 	mov	r7,r3
    7150:	8809883a 	mov	r4,r17
    7154:	800b883a 	mov	r5,r16
    7158:	1027883a 	mov	r19,r2
    715c:	1825883a 	mov	r18,r3
    7160:	0008fc80 	call	8fc8 <__muldf3>
    7164:	0196b434 	movhi	r6,23248
    7168:	01cf79b4 	movhi	r7,15846
    716c:	31b55f04 	addi	r6,r6,-10884
    7170:	39f64e84 	addi	r7,r7,-9926
    7174:	9809883a 	mov	r4,r19
    7178:	900b883a 	mov	r5,r18
    717c:	102f883a 	mov	r23,r2
    7180:	182d883a 	mov	r22,r3
    7184:	0008fc80 	call	8fc8 <__muldf3>
    7188:	01a28b34 	movhi	r6,35372
    718c:	01cf96f4 	movhi	r7,15963
    7190:	31a73ac4 	addi	r6,r6,-25365
    7194:	39f97984 	addi	r7,r7,-6682
    7198:	1009883a 	mov	r4,r2
    719c:	180b883a 	mov	r5,r3
    71a0:	00097740 	call	9774 <__subdf3>
    71a4:	980d883a 	mov	r6,r19
    71a8:	900f883a 	mov	r7,r18
    71ac:	1009883a 	mov	r4,r2
    71b0:	180b883a 	mov	r5,r3
    71b4:	0008fc80 	call	8fc8 <__muldf3>
    71b8:	0195ecb4 	movhi	r6,22450
    71bc:	01cfb1f4 	movhi	r7,16071
    71c0:	31bf9f44 	addi	r6,r6,-387
    71c4:	39c778c4 	addi	r7,r7,7651
    71c8:	1009883a 	mov	r4,r2
    71cc:	180b883a 	mov	r5,r3
    71d0:	0007b740 	call	7b74 <__adddf3>
    71d4:	980d883a 	mov	r6,r19
    71d8:	900f883a 	mov	r7,r18
    71dc:	1009883a 	mov	r4,r2
    71e0:	180b883a 	mov	r5,r3
    71e4:	0008fc80 	call	8fc8 <__muldf3>
    71e8:	01867074 	movhi	r6,6593
    71ec:	01cfcab4 	movhi	r7,16170
    71f0:	31987544 	addi	r6,r6,25045
    71f4:	39c06804 	addi	r7,r7,416
    71f8:	1009883a 	mov	r4,r2
    71fc:	180b883a 	mov	r5,r3
    7200:	00097740 	call	9774 <__subdf3>
    7204:	980d883a 	mov	r6,r19
    7208:	900f883a 	mov	r7,r18
    720c:	1009883a 	mov	r4,r2
    7210:	180b883a 	mov	r5,r3
    7214:	0008fc80 	call	8fc8 <__muldf3>
    7218:	01844474 	movhi	r6,4369
    721c:	01cfe074 	movhi	r7,16257
    7220:	31be2984 	addi	r6,r6,-1882
    7224:	39c44444 	addi	r7,r7,4369
    7228:	1009883a 	mov	r4,r2
    722c:	180b883a 	mov	r5,r3
    7230:	0007b740 	call	7b74 <__adddf3>
    7234:	1011883a 	mov	r8,r2
    7238:	d8800d17 	ldw	r2,52(sp)
    723c:	1839883a 	mov	fp,r3
    7240:	10003e26 	beq	r2,zero,733c <__kernel_sin+0x260>
    7244:	000d883a 	mov	r6,zero
    7248:	01cff834 	movhi	r7,16352
    724c:	a809883a 	mov	r4,r21
    7250:	a00b883a 	mov	r5,r20
    7254:	da000215 	stw	r8,8(sp)
    7258:	0008fc80 	call	8fc8 <__muldf3>
    725c:	da000217 	ldw	r8,8(sp)
    7260:	e00f883a 	mov	r7,fp
    7264:	b809883a 	mov	r4,r23
    7268:	400d883a 	mov	r6,r8
    726c:	b00b883a 	mov	r5,r22
    7270:	d8800115 	stw	r2,4(sp)
    7274:	d8c00015 	stw	r3,0(sp)
    7278:	0008fc80 	call	8fc8 <__muldf3>
    727c:	da800117 	ldw	r10,4(sp)
    7280:	da400017 	ldw	r9,0(sp)
    7284:	100d883a 	mov	r6,r2
    7288:	5009883a 	mov	r4,r10
    728c:	480b883a 	mov	r5,r9
    7290:	180f883a 	mov	r7,r3
    7294:	00097740 	call	9774 <__subdf3>
    7298:	980d883a 	mov	r6,r19
    729c:	900f883a 	mov	r7,r18
    72a0:	1009883a 	mov	r4,r2
    72a4:	180b883a 	mov	r5,r3
    72a8:	0008fc80 	call	8fc8 <__muldf3>
    72ac:	a80d883a 	mov	r6,r21
    72b0:	a00f883a 	mov	r7,r20
    72b4:	1009883a 	mov	r4,r2
    72b8:	180b883a 	mov	r5,r3
    72bc:	00097740 	call	9774 <__subdf3>
    72c0:	01955574 	movhi	r6,21845
    72c4:	01cff174 	movhi	r7,16325
    72c8:	31955244 	addi	r6,r6,21833
    72cc:	39d55544 	addi	r7,r7,21845
    72d0:	b809883a 	mov	r4,r23
    72d4:	b00b883a 	mov	r5,r22
    72d8:	1027883a 	mov	r19,r2
    72dc:	1825883a 	mov	r18,r3
    72e0:	0008fc80 	call	8fc8 <__muldf3>
    72e4:	100d883a 	mov	r6,r2
    72e8:	180f883a 	mov	r7,r3
    72ec:	9809883a 	mov	r4,r19
    72f0:	900b883a 	mov	r5,r18
    72f4:	0007b740 	call	7b74 <__adddf3>
    72f8:	100d883a 	mov	r6,r2
    72fc:	180f883a 	mov	r7,r3
    7300:	8809883a 	mov	r4,r17
    7304:	800b883a 	mov	r5,r16
    7308:	00097740 	call	9774 <__subdf3>
    730c:	dfc00c17 	ldw	ra,48(sp)
    7310:	df000b17 	ldw	fp,44(sp)
    7314:	ddc00a17 	ldw	r23,40(sp)
    7318:	dd800917 	ldw	r22,36(sp)
    731c:	dd400817 	ldw	r21,32(sp)
    7320:	dd000717 	ldw	r20,28(sp)
    7324:	dcc00617 	ldw	r19,24(sp)
    7328:	dc800517 	ldw	r18,20(sp)
    732c:	dc400417 	ldw	r17,16(sp)
    7330:	dc000317 	ldw	r16,12(sp)
    7334:	dec00d04 	addi	sp,sp,52
    7338:	f800283a 	ret
    733c:	400d883a 	mov	r6,r8
    7340:	9809883a 	mov	r4,r19
    7344:	900b883a 	mov	r5,r18
    7348:	180f883a 	mov	r7,r3
    734c:	0008fc80 	call	8fc8 <__muldf3>
    7350:	01955574 	movhi	r6,21845
    7354:	01cff174 	movhi	r7,16325
    7358:	31955244 	addi	r6,r6,21833
    735c:	39d55544 	addi	r7,r7,21845
    7360:	1009883a 	mov	r4,r2
    7364:	180b883a 	mov	r5,r3
    7368:	00097740 	call	9774 <__subdf3>
    736c:	b80d883a 	mov	r6,r23
    7370:	b00f883a 	mov	r7,r22
    7374:	1009883a 	mov	r4,r2
    7378:	180b883a 	mov	r5,r3
    737c:	0008fc80 	call	8fc8 <__muldf3>
    7380:	880d883a 	mov	r6,r17
    7384:	800f883a 	mov	r7,r16
    7388:	1009883a 	mov	r4,r2
    738c:	180b883a 	mov	r5,r3
    7390:	0007b740 	call	7b74 <__adddf3>
    7394:	003fdd06 	br	730c <__kernel_sin+0x230>
    7398:	8805883a 	mov	r2,r17
    739c:	8007883a 	mov	r3,r16
    73a0:	003fda06 	br	730c <__kernel_sin+0x230>

000073a4 <with_errno>:
    73a4:	defffc04 	addi	sp,sp,-16
    73a8:	dc800215 	stw	r18,8(sp)
    73ac:	dc400115 	stw	r17,4(sp)
    73b0:	dc000015 	stw	r16,0(sp)
    73b4:	dfc00315 	stw	ra,12(sp)
    73b8:	2023883a 	mov	r17,r4
    73bc:	2821883a 	mov	r16,r5
    73c0:	3025883a 	mov	r18,r6
    73c4:	000a4cc0 	call	a4cc <__errno>
    73c8:	14800015 	stw	r18,0(r2)
    73cc:	8007883a 	mov	r3,r16
    73d0:	8805883a 	mov	r2,r17
    73d4:	dfc00317 	ldw	ra,12(sp)
    73d8:	dc800217 	ldw	r18,8(sp)
    73dc:	dc400117 	ldw	r17,4(sp)
    73e0:	dc000017 	ldw	r16,0(sp)
    73e4:	dec00404 	addi	sp,sp,16
    73e8:	f800283a 	ret

000073ec <xflow>:
    73ec:	defffd04 	addi	sp,sp,-12
    73f0:	2005883a 	mov	r2,r4
    73f4:	dfc00215 	stw	ra,8(sp)
    73f8:	2809883a 	mov	r4,r5
    73fc:	300b883a 	mov	r5,r6
    7400:	10000c26 	beq	r2,zero,7434 <xflow+0x48>
    7404:	30a0003c 	xorhi	r2,r6,32768
    7408:	d9000015 	stw	r4,0(sp)
    740c:	d8800115 	stw	r2,4(sp)
    7410:	d9800017 	ldw	r6,0(sp)
    7414:	d9c00117 	ldw	r7,4(sp)
    7418:	0008fc80 	call	8fc8 <__muldf3>
    741c:	01800884 	movi	r6,34
    7420:	1009883a 	mov	r4,r2
    7424:	180b883a 	mov	r5,r3
    7428:	dfc00217 	ldw	ra,8(sp)
    742c:	dec00304 	addi	sp,sp,12
    7430:	00073a41 	jmpi	73a4 <with_errno>
    7434:	3005883a 	mov	r2,r6
    7438:	003ff306 	br	7408 <xflow+0x1c>

0000743c <__math_uflow>:
    743c:	000b883a 	mov	r5,zero
    7440:	01840034 	movhi	r6,4096
    7444:	00073ec1 	jmpi	73ec <xflow>

00007448 <__math_may_uflow>:
    7448:	000b883a 	mov	r5,zero
    744c:	01879634 	movhi	r6,7768
    7450:	00073ec1 	jmpi	73ec <xflow>

00007454 <__math_oflow>:
    7454:	000b883a 	mov	r5,zero
    7458:	019c0034 	movhi	r6,28672
    745c:	00073ec1 	jmpi	73ec <xflow>

00007460 <__math_divzero>:
    7460:	defffd04 	addi	sp,sp,-12
    7464:	dfc00215 	stw	ra,8(sp)
    7468:	20000e1e 	bne	r4,zero,74a4 <__math_divzero+0x44>
    746c:	008ffc34 	movhi	r2,16368
    7470:	d8000015 	stw	zero,0(sp)
    7474:	d8800115 	stw	r2,4(sp)
    7478:	d9000017 	ldw	r4,0(sp)
    747c:	d9400117 	ldw	r5,4(sp)
    7480:	000d883a 	mov	r6,zero
    7484:	000f883a 	mov	r7,zero
    7488:	00084640 	call	8464 <__divdf3>
    748c:	01800884 	movi	r6,34
    7490:	1009883a 	mov	r4,r2
    7494:	180b883a 	mov	r5,r3
    7498:	dfc00217 	ldw	ra,8(sp)
    749c:	dec00304 	addi	sp,sp,12
    74a0:	00073a41 	jmpi	73a4 <with_errno>
    74a4:	00affc34 	movhi	r2,49136
    74a8:	003ff106 	br	7470 <__math_divzero+0x10>

000074ac <__math_invalid>:
    74ac:	defffd04 	addi	sp,sp,-12
    74b0:	200d883a 	mov	r6,r4
    74b4:	280f883a 	mov	r7,r5
    74b8:	dfc00215 	stw	ra,8(sp)
    74bc:	dc400115 	stw	r17,4(sp)
    74c0:	dc000015 	stw	r16,0(sp)
    74c4:	2023883a 	mov	r17,r4
    74c8:	2821883a 	mov	r16,r5
    74cc:	00097740 	call	9774 <__subdf3>
    74d0:	100d883a 	mov	r6,r2
    74d4:	180f883a 	mov	r7,r3
    74d8:	1009883a 	mov	r4,r2
    74dc:	180b883a 	mov	r5,r3
    74e0:	00084640 	call	8464 <__divdf3>
    74e4:	880d883a 	mov	r6,r17
    74e8:	800f883a 	mov	r7,r16
    74ec:	8809883a 	mov	r4,r17
    74f0:	800b883a 	mov	r5,r16
    74f4:	1023883a 	mov	r17,r2
    74f8:	1821883a 	mov	r16,r3
    74fc:	000a0800 	call	a080 <__unorddf2>
    7500:	1000081e 	bne	r2,zero,7524 <__math_invalid+0x78>
    7504:	01800844 	movi	r6,33
    7508:	8809883a 	mov	r4,r17
    750c:	800b883a 	mov	r5,r16
    7510:	dfc00217 	ldw	ra,8(sp)
    7514:	dc400117 	ldw	r17,4(sp)
    7518:	dc000017 	ldw	r16,0(sp)
    751c:	dec00304 	addi	sp,sp,12
    7520:	00073a41 	jmpi	73a4 <with_errno>
    7524:	8805883a 	mov	r2,r17
    7528:	8007883a 	mov	r3,r16
    752c:	dfc00217 	ldw	ra,8(sp)
    7530:	dc400117 	ldw	r17,4(sp)
    7534:	dc000017 	ldw	r16,0(sp)
    7538:	dec00304 	addi	sp,sp,12
    753c:	f800283a 	ret

00007540 <__math_check_uflow>:
    7540:	defffd04 	addi	sp,sp,-12
    7544:	000d883a 	mov	r6,zero
    7548:	000f883a 	mov	r7,zero
    754c:	dc400115 	stw	r17,4(sp)
    7550:	dc000015 	stw	r16,0(sp)
    7554:	dfc00215 	stw	ra,8(sp)
    7558:	2023883a 	mov	r17,r4
    755c:	2821883a 	mov	r16,r5
    7560:	0008d780 	call	8d78 <__eqdf2>
    7564:	10000726 	beq	r2,zero,7584 <__math_check_uflow+0x44>
    7568:	8805883a 	mov	r2,r17
    756c:	8007883a 	mov	r3,r16
    7570:	dfc00217 	ldw	ra,8(sp)
    7574:	dc400117 	ldw	r17,4(sp)
    7578:	dc000017 	ldw	r16,0(sp)
    757c:	dec00304 	addi	sp,sp,12
    7580:	f800283a 	ret
    7584:	01800884 	movi	r6,34
    7588:	8809883a 	mov	r4,r17
    758c:	800b883a 	mov	r5,r16
    7590:	dfc00217 	ldw	ra,8(sp)
    7594:	dc400117 	ldw	r17,4(sp)
    7598:	dc000017 	ldw	r16,0(sp)
    759c:	dec00304 	addi	sp,sp,12
    75a0:	00073a41 	jmpi	73a4 <with_errno>

000075a4 <__math_check_oflow>:
    75a4:	00a00034 	movhi	r2,32768
    75a8:	defffc04 	addi	sp,sp,-16
    75ac:	10bfffc4 	addi	r2,r2,-1
    75b0:	dc000015 	stw	r16,0(sp)
    75b4:	01dffc34 	movhi	r7,32752
    75b8:	28a0703a 	and	r16,r5,r2
    75bc:	dc400115 	stw	r17,4(sp)
    75c0:	01bfffc4 	movi	r6,-1
    75c4:	2823883a 	mov	r17,r5
    75c8:	39ffffc4 	addi	r7,r7,-1
    75cc:	800b883a 	mov	r5,r16
    75d0:	dc800215 	stw	r18,8(sp)
    75d4:	dfc00315 	stw	ra,12(sp)
    75d8:	2025883a 	mov	r18,r4
    75dc:	000a0800 	call	a080 <__unorddf2>
    75e0:	1000071e 	bne	r2,zero,7600 <__math_check_oflow+0x5c>
    75e4:	01dffc34 	movhi	r7,32752
    75e8:	01bfffc4 	movi	r6,-1
    75ec:	39ffffc4 	addi	r7,r7,-1
    75f0:	9009883a 	mov	r4,r18
    75f4:	800b883a 	mov	r5,r16
    75f8:	0008ee00 	call	8ee0 <__ledf2>
    75fc:	00800816 	blt	zero,r2,7620 <__math_check_oflow+0x7c>
    7600:	9005883a 	mov	r2,r18
    7604:	8807883a 	mov	r3,r17
    7608:	dfc00317 	ldw	ra,12(sp)
    760c:	dc800217 	ldw	r18,8(sp)
    7610:	dc400117 	ldw	r17,4(sp)
    7614:	dc000017 	ldw	r16,0(sp)
    7618:	dec00404 	addi	sp,sp,16
    761c:	f800283a 	ret
    7620:	01800884 	movi	r6,34
    7624:	9009883a 	mov	r4,r18
    7628:	880b883a 	mov	r5,r17
    762c:	dfc00317 	ldw	ra,12(sp)
    7630:	dc800217 	ldw	r18,8(sp)
    7634:	dc400117 	ldw	r17,4(sp)
    7638:	dc000017 	ldw	r16,0(sp)
    763c:	dec00404 	addi	sp,sp,16
    7640:	00073a41 	jmpi	73a4 <with_errno>

00007644 <scalbn>:
    7644:	2807d53a 	srai	r3,r5,20
    7648:	defffe04 	addi	sp,sp,-8
    764c:	dc000015 	stw	r16,0(sp)
    7650:	dfc00115 	stw	ra,4(sp)
    7654:	18c1ffcc 	andi	r3,r3,2047
    7658:	280f883a 	mov	r7,r5
    765c:	2005883a 	mov	r2,r4
    7660:	3021883a 	mov	r16,r6
    7664:	1800241e 	bne	r3,zero,76f8 <scalbn+0xb4>
    7668:	00e00034 	movhi	r3,32768
    766c:	18ffffc4 	addi	r3,r3,-1
    7670:	28c6703a 	and	r3,r5,r3
    7674:	1906b03a 	or	r3,r3,r4
    7678:	18003626 	beq	r3,zero,7754 <scalbn+0x110>
    767c:	000d883a 	mov	r6,zero
    7680:	01d0d434 	movhi	r7,17232
    7684:	0008fc80 	call	8fc8 <__muldf3>
    7688:	01bffff4 	movhi	r6,65535
    768c:	318f2c04 	addi	r6,r6,15536
    7690:	1009883a 	mov	r4,r2
    7694:	180f883a 	mov	r7,r3
    7698:	81804d16 	blt	r16,r6,77d0 <scalbn+0x18c>
    769c:	1807d53a 	srai	r3,r3,20
    76a0:	3811883a 	mov	r8,r7
    76a4:	18c1ffcc 	andi	r3,r3,2047
    76a8:	18fff284 	addi	r3,r3,-54
    76ac:	80c7883a 	add	r3,r16,r3
    76b0:	1901ffd0 	cmplti	r4,r3,2047
    76b4:	20001926 	beq	r4,zero,771c <scalbn+0xd8>
    76b8:	00c03c16 	blt	zero,r3,77ac <scalbn+0x168>
    76bc:	193ff2c8 	cmpgei	r4,r3,-53
    76c0:	20002c1e 	bne	r4,zero,7774 <scalbn+0x130>
    76c4:	00b0d414 	movui	r2,50000
    76c8:	14001416 	blt	r2,r16,771c <scalbn+0xd8>
    76cc:	0130be74 	movhi	r4,49913
    76d0:	01406974 	movhi	r5,421
    76d4:	213cd644 	addi	r4,r4,-3239
    76d8:	295b87c4 	addi	r5,r5,28191
    76dc:	38004616 	blt	r7,zero,77f8 <scalbn+0x1b4>
    76e0:	01b0be74 	movhi	r6,49913
    76e4:	01c06974 	movhi	r7,421
    76e8:	31bcd644 	addi	r6,r6,-3239
    76ec:	39db87c4 	addi	r7,r7,28191
    76f0:	0008fc80 	call	8fc8 <__muldf3>
    76f4:	00001306 	br	7744 <scalbn+0x100>
    76f8:	1981ffd8 	cmpnei	r6,r3,2047
    76fc:	2811883a 	mov	r8,r5
    7700:	303fea1e 	bne	r6,zero,76ac <scalbn+0x68>
    7704:	200d883a 	mov	r6,r4
    7708:	0007b740 	call	7b74 <__adddf3>
    770c:	dfc00117 	ldw	ra,4(sp)
    7710:	dc000017 	ldw	r16,0(sp)
    7714:	dec00204 	addi	sp,sp,8
    7718:	f800283a 	ret
    771c:	01220034 	movhi	r4,34816
    7720:	015f8e34 	movhi	r5,32312
    7724:	211d6704 	addi	r4,r4,30108
    7728:	29790f04 	addi	r5,r5,-7108
    772c:	38000e16 	blt	r7,zero,7768 <scalbn+0x124>
    7730:	01a20034 	movhi	r6,34816
    7734:	01df8e34 	movhi	r7,32312
    7738:	319d6704 	addi	r6,r6,30108
    773c:	39f90f04 	addi	r7,r7,-7108
    7740:	0008fc80 	call	8fc8 <__muldf3>
    7744:	dfc00117 	ldw	ra,4(sp)
    7748:	dc000017 	ldw	r16,0(sp)
    774c:	dec00204 	addi	sp,sp,8
    7750:	f800283a 	ret
    7754:	2807883a 	mov	r3,r5
    7758:	dfc00117 	ldw	ra,4(sp)
    775c:	dc000017 	ldw	r16,0(sp)
    7760:	dec00204 	addi	sp,sp,8
    7764:	f800283a 	ret
    7768:	017f8e34 	movhi	r5,65080
    776c:	29790f04 	addi	r5,r5,-7108
    7770:	003fef06 	br	7730 <scalbn+0xec>
    7774:	18c00d84 	addi	r3,r3,54
    7778:	1806953a 	slli	r3,r3,20
    777c:	01600434 	movhi	r5,32784
    7780:	297fffc4 	addi	r5,r5,-1
    7784:	414a703a 	and	r5,r8,r5
    7788:	000d883a 	mov	r6,zero
    778c:	01cf2434 	movhi	r7,15504
    7790:	1009883a 	mov	r4,r2
    7794:	194ab03a 	or	r5,r3,r5
    7798:	0008fc80 	call	8fc8 <__muldf3>
    779c:	dfc00117 	ldw	ra,4(sp)
    77a0:	dc000017 	ldw	r16,0(sp)
    77a4:	dec00204 	addi	sp,sp,8
    77a8:	f800283a 	ret
    77ac:	1806953a 	slli	r3,r3,20
    77b0:	01e00434 	movhi	r7,32784
    77b4:	39ffffc4 	addi	r7,r7,-1
    77b8:	41ce703a 	and	r7,r8,r7
    77bc:	38c6b03a 	or	r3,r7,r3
    77c0:	dfc00117 	ldw	ra,4(sp)
    77c4:	dc000017 	ldw	r16,0(sp)
    77c8:	dec00204 	addi	sp,sp,8
    77cc:	f800283a 	ret
    77d0:	01b0be74 	movhi	r6,49913
    77d4:	01c06974 	movhi	r7,421
    77d8:	31bcd644 	addi	r6,r6,-3239
    77dc:	39db87c4 	addi	r7,r7,28191
    77e0:	180b883a 	mov	r5,r3
    77e4:	0008fc80 	call	8fc8 <__muldf3>
    77e8:	dfc00117 	ldw	ra,4(sp)
    77ec:	dc000017 	ldw	r16,0(sp)
    77f0:	dec00204 	addi	sp,sp,8
    77f4:	f800283a 	ret
    77f8:	01606974 	movhi	r5,33189
    77fc:	295b87c4 	addi	r5,r5,28191
    7800:	003fb706 	br	76e0 <scalbn+0x9c>

00007804 <__divsi3>:
    7804:	20001a16 	blt	r4,zero,7870 <__divsi3+0x6c>
    7808:	000f883a 	mov	r7,zero
    780c:	2800020e 	bge	r5,zero,7818 <__divsi3+0x14>
    7810:	014bc83a 	sub	r5,zero,r5
    7814:	39c0005c 	xori	r7,r7,1
    7818:	200d883a 	mov	r6,r4
    781c:	00c00044 	movi	r3,1
    7820:	2900092e 	bgeu	r5,r4,7848 <__divsi3+0x44>
    7824:	00800804 	movi	r2,32
    7828:	00c00044 	movi	r3,1
    782c:	00000106 	br	7834 <__divsi3+0x30>
    7830:	10001226 	beq	r2,zero,787c <__divsi3+0x78>
    7834:	294b883a 	add	r5,r5,r5
    7838:	10bfffc4 	addi	r2,r2,-1
    783c:	18c7883a 	add	r3,r3,r3
    7840:	293ffb36 	bltu	r5,r4,7830 <__divsi3+0x2c>
    7844:	18000d26 	beq	r3,zero,787c <__divsi3+0x78>
    7848:	0005883a 	mov	r2,zero
    784c:	31400236 	bltu	r6,r5,7858 <__divsi3+0x54>
    7850:	314dc83a 	sub	r6,r6,r5
    7854:	10c4b03a 	or	r2,r2,r3
    7858:	1806d07a 	srli	r3,r3,1
    785c:	280ad07a 	srli	r5,r5,1
    7860:	183ffa1e 	bne	r3,zero,784c <__divsi3+0x48>
    7864:	38000126 	beq	r7,zero,786c <__divsi3+0x68>
    7868:	0085c83a 	sub	r2,zero,r2
    786c:	f800283a 	ret
    7870:	0109c83a 	sub	r4,zero,r4
    7874:	01c00044 	movi	r7,1
    7878:	003fe406 	br	780c <__divsi3+0x8>
    787c:	0005883a 	mov	r2,zero
    7880:	003ff806 	br	7864 <__divsi3+0x60>

00007884 <__modsi3>:
    7884:	20001916 	blt	r4,zero,78ec <__modsi3+0x68>
    7888:	000f883a 	mov	r7,zero
    788c:	2005883a 	mov	r2,r4
    7890:	2800010e 	bge	r5,zero,7898 <__modsi3+0x14>
    7894:	014bc83a 	sub	r5,zero,r5
    7898:	00c00044 	movi	r3,1
    789c:	2900092e 	bgeu	r5,r4,78c4 <__modsi3+0x40>
    78a0:	01800804 	movi	r6,32
    78a4:	00c00044 	movi	r3,1
    78a8:	00000106 	br	78b0 <__modsi3+0x2c>
    78ac:	30000d26 	beq	r6,zero,78e4 <__modsi3+0x60>
    78b0:	294b883a 	add	r5,r5,r5
    78b4:	31bfffc4 	addi	r6,r6,-1
    78b8:	18c7883a 	add	r3,r3,r3
    78bc:	293ffb36 	bltu	r5,r4,78ac <__modsi3+0x28>
    78c0:	18000826 	beq	r3,zero,78e4 <__modsi3+0x60>
    78c4:	1806d07a 	srli	r3,r3,1
    78c8:	11400136 	bltu	r2,r5,78d0 <__modsi3+0x4c>
    78cc:	1145c83a 	sub	r2,r2,r5
    78d0:	280ad07a 	srli	r5,r5,1
    78d4:	183ffb1e 	bne	r3,zero,78c4 <__modsi3+0x40>
    78d8:	38000126 	beq	r7,zero,78e0 <__modsi3+0x5c>
    78dc:	0085c83a 	sub	r2,zero,r2
    78e0:	f800283a 	ret
    78e4:	2005883a 	mov	r2,r4
    78e8:	003ffb06 	br	78d8 <__modsi3+0x54>
    78ec:	0109c83a 	sub	r4,zero,r4
    78f0:	01c00044 	movi	r7,1
    78f4:	003fe506 	br	788c <__modsi3+0x8>

000078f8 <__udivsi3>:
    78f8:	200d883a 	mov	r6,r4
    78fc:	2900152e 	bgeu	r5,r4,7954 <__udivsi3+0x5c>
    7900:	28001416 	blt	r5,zero,7954 <__udivsi3+0x5c>
    7904:	00800804 	movi	r2,32
    7908:	00c00044 	movi	r3,1
    790c:	00000206 	br	7918 <__udivsi3+0x20>
    7910:	10000e26 	beq	r2,zero,794c <__udivsi3+0x54>
    7914:	28000516 	blt	r5,zero,792c <__udivsi3+0x34>
    7918:	294b883a 	add	r5,r5,r5
    791c:	10bfffc4 	addi	r2,r2,-1
    7920:	18c7883a 	add	r3,r3,r3
    7924:	293ffa36 	bltu	r5,r4,7910 <__udivsi3+0x18>
    7928:	18000826 	beq	r3,zero,794c <__udivsi3+0x54>
    792c:	0005883a 	mov	r2,zero
    7930:	31400236 	bltu	r6,r5,793c <__udivsi3+0x44>
    7934:	314dc83a 	sub	r6,r6,r5
    7938:	10c4b03a 	or	r2,r2,r3
    793c:	1806d07a 	srli	r3,r3,1
    7940:	280ad07a 	srli	r5,r5,1
    7944:	183ffa1e 	bne	r3,zero,7930 <__udivsi3+0x38>
    7948:	f800283a 	ret
    794c:	0005883a 	mov	r2,zero
    7950:	f800283a 	ret
    7954:	00c00044 	movi	r3,1
    7958:	003ff406 	br	792c <__udivsi3+0x34>

0000795c <__umodsi3>:
    795c:	2005883a 	mov	r2,r4
    7960:	2900132e 	bgeu	r5,r4,79b0 <__umodsi3+0x54>
    7964:	28001216 	blt	r5,zero,79b0 <__umodsi3+0x54>
    7968:	01800804 	movi	r6,32
    796c:	00c00044 	movi	r3,1
    7970:	00000206 	br	797c <__umodsi3+0x20>
    7974:	30000c26 	beq	r6,zero,79a8 <__umodsi3+0x4c>
    7978:	28000516 	blt	r5,zero,7990 <__umodsi3+0x34>
    797c:	294b883a 	add	r5,r5,r5
    7980:	31bfffc4 	addi	r6,r6,-1
    7984:	18c7883a 	add	r3,r3,r3
    7988:	293ffa36 	bltu	r5,r4,7974 <__umodsi3+0x18>
    798c:	18000626 	beq	r3,zero,79a8 <__umodsi3+0x4c>
    7990:	1806d07a 	srli	r3,r3,1
    7994:	11400136 	bltu	r2,r5,799c <__umodsi3+0x40>
    7998:	1145c83a 	sub	r2,r2,r5
    799c:	280ad07a 	srli	r5,r5,1
    79a0:	183ffb1e 	bne	r3,zero,7990 <__umodsi3+0x34>
    79a4:	f800283a 	ret
    79a8:	2005883a 	mov	r2,r4
    79ac:	f800283a 	ret
    79b0:	00c00044 	movi	r3,1
    79b4:	003ff606 	br	7990 <__umodsi3+0x34>

000079b8 <__mulsi3>:
    79b8:	0005883a 	mov	r2,zero
    79bc:	20000726 	beq	r4,zero,79dc <__mulsi3+0x24>
    79c0:	20c0004c 	andi	r3,r4,1
    79c4:	2008d07a 	srli	r4,r4,1
    79c8:	18000126 	beq	r3,zero,79d0 <__mulsi3+0x18>
    79cc:	1145883a 	add	r2,r2,r5
    79d0:	294b883a 	add	r5,r5,r5
    79d4:	203ffa1e 	bne	r4,zero,79c0 <__mulsi3+0x8>
    79d8:	f800283a 	ret
    79dc:	f800283a 	ret

000079e0 <__fixsfsi>:
    79e0:	200ad5fa 	srli	r5,r4,23
    79e4:	00c02034 	movhi	r3,128
    79e8:	18ffffc4 	addi	r3,r3,-1
    79ec:	29403fcc 	andi	r5,r5,255
    79f0:	29801fd0 	cmplti	r6,r5,127
    79f4:	200ed7fa 	srli	r7,r4,31
    79f8:	1906703a 	and	r3,r3,r4
    79fc:	3000061e 	bne	r6,zero,7a18 <__fixsfsi+0x38>
    7a00:	28802790 	cmplti	r2,r5,158
    7a04:	1000061e 	bne	r2,zero,7a20 <__fixsfsi+0x40>
    7a08:	00a00034 	movhi	r2,32768
    7a0c:	10bfffc4 	addi	r2,r2,-1
    7a10:	3885883a 	add	r2,r7,r2
    7a14:	f800283a 	ret
    7a18:	0005883a 	mov	r2,zero
    7a1c:	f800283a 	ret
    7a20:	28802590 	cmplti	r2,r5,150
    7a24:	18c02034 	orhi	r3,r3,128
    7a28:	1000051e 	bne	r2,zero,7a40 <__fixsfsi+0x60>
    7a2c:	28bfda84 	addi	r2,r5,-150
    7a30:	1884983a 	sll	r2,r3,r2
    7a34:	383ff926 	beq	r7,zero,7a1c <__fixsfsi+0x3c>
    7a38:	0085c83a 	sub	r2,zero,r2
    7a3c:	f800283a 	ret
    7a40:	00802584 	movi	r2,150
    7a44:	1145c83a 	sub	r2,r2,r5
    7a48:	1884d83a 	srl	r2,r3,r2
    7a4c:	003ff906 	br	7a34 <__fixsfsi+0x54>

00007a50 <__floatsisf>:
    7a50:	defffd04 	addi	sp,sp,-12
    7a54:	dfc00215 	stw	ra,8(sp)
    7a58:	dc400115 	stw	r17,4(sp)
    7a5c:	dc000015 	stw	r16,0(sp)
    7a60:	20001226 	beq	r4,zero,7aac <__floatsisf+0x5c>
    7a64:	2022d7fa 	srli	r17,r4,31
    7a68:	2021883a 	mov	r16,r4
    7a6c:	20003816 	blt	r4,zero,7b50 <__floatsisf+0x100>
    7a70:	8009883a 	mov	r4,r16
    7a74:	000a4780 	call	a478 <__clzsi2>
    7a78:	1009883a 	mov	r4,r2
    7a7c:	00802784 	movi	r2,158
    7a80:	1105c83a 	sub	r2,r2,r4
    7a84:	10c025c8 	cmpgei	r3,r2,151
    7a88:	1800151e 	bne	r3,zero,7ae0 <__floatsisf+0x90>
    7a8c:	20c00248 	cmpgei	r3,r4,9
    7a90:	18003126 	beq	r3,zero,7b58 <__floatsisf+0x108>
    7a94:	213ffe04 	addi	r4,r4,-8
    7a98:	8120983a 	sll	r16,r16,r4
    7a9c:	00c02034 	movhi	r3,128
    7aa0:	18ffffc4 	addi	r3,r3,-1
    7aa4:	80e0703a 	and	r16,r16,r3
    7aa8:	00000306 	br	7ab8 <__floatsisf+0x68>
    7aac:	0023883a 	mov	r17,zero
    7ab0:	0005883a 	mov	r2,zero
    7ab4:	0021883a 	mov	r16,zero
    7ab8:	10803fcc 	andi	r2,r2,255
    7abc:	100495fa 	slli	r2,r2,23
    7ac0:	882297fa 	slli	r17,r17,31
    7ac4:	1404b03a 	or	r2,r2,r16
    7ac8:	1444b03a 	or	r2,r2,r17
    7acc:	dfc00217 	ldw	ra,8(sp)
    7ad0:	dc400117 	ldw	r17,4(sp)
    7ad4:	dc000017 	ldw	r16,0(sp)
    7ad8:	dec00304 	addi	sp,sp,12
    7adc:	f800283a 	ret
    7ae0:	10c02690 	cmplti	r3,r2,154
    7ae4:	1800071e 	bne	r3,zero,7b04 <__floatsisf+0xb4>
    7ae8:	20c006c4 	addi	r3,r4,27
    7aec:	01400144 	movi	r5,5
    7af0:	80c6983a 	sll	r3,r16,r3
    7af4:	290bc83a 	sub	r5,r5,r4
    7af8:	814ad83a 	srl	r5,r16,r5
    7afc:	1806c03a 	cmpne	r3,r3,zero
    7b00:	28e0b03a 	or	r16,r5,r3
    7b04:	20c00188 	cmpgei	r3,r4,6
    7b08:	1800171e 	bne	r3,zero,7b68 <__floatsisf+0x118>
    7b0c:	00ff0034 	movhi	r3,64512
    7b10:	18ffffc4 	addi	r3,r3,-1
    7b14:	818001cc 	andi	r6,r16,7
    7b18:	80ca703a 	and	r5,r16,r3
    7b1c:	30000926 	beq	r6,zero,7b44 <__floatsisf+0xf4>
    7b20:	818003cc 	andi	r6,r16,15
    7b24:	31800120 	cmpeqi	r6,r6,4
    7b28:	3000061e 	bne	r6,zero,7b44 <__floatsisf+0xf4>
    7b2c:	29400104 	addi	r5,r5,4
    7b30:	2981002c 	andhi	r6,r5,1024
    7b34:	30000326 	beq	r6,zero,7b44 <__floatsisf+0xf4>
    7b38:	28ca703a 	and	r5,r5,r3
    7b3c:	00c027c4 	movi	r3,159
    7b40:	1905c83a 	sub	r2,r3,r4
    7b44:	282091ba 	slli	r16,r5,6
    7b48:	8020d27a 	srli	r16,r16,9
    7b4c:	003fda06 	br	7ab8 <__floatsisf+0x68>
    7b50:	0121c83a 	sub	r16,zero,r4
    7b54:	003fc606 	br	7a70 <__floatsisf+0x20>
    7b58:	01002034 	movhi	r4,128
    7b5c:	213fffc4 	addi	r4,r4,-1
    7b60:	8120703a 	and	r16,r16,r4
    7b64:	003fd406 	br	7ab8 <__floatsisf+0x68>
    7b68:	20fffec4 	addi	r3,r4,-5
    7b6c:	80e0983a 	sll	r16,r16,r3
    7b70:	003fe606 	br	7b0c <__floatsisf+0xbc>

00007b74 <__adddf3>:
    7b74:	02000434 	movhi	r8,16
    7b78:	423fffc4 	addi	r8,r8,-1
    7b7c:	2806d53a 	srli	r3,r5,20
    7b80:	3804d53a 	srli	r2,r7,20
    7b84:	2a14703a 	and	r10,r5,r8
    7b88:	3a12703a 	and	r9,r7,r8
    7b8c:	280ad7fa 	srli	r5,r5,31
    7b90:	501490fa 	slli	r10,r10,3
    7b94:	2018d77a 	srli	r12,r4,29
    7b98:	481290fa 	slli	r9,r9,3
    7b9c:	3016d77a 	srli	r11,r6,29
    7ba0:	380ed7fa 	srli	r7,r7,31
    7ba4:	defffb04 	addi	sp,sp,-20
    7ba8:	dc800215 	stw	r18,8(sp)
    7bac:	dc000015 	stw	r16,0(sp)
    7bb0:	1c81ffcc 	andi	r18,r3,2047
    7bb4:	1081ffcc 	andi	r2,r2,2047
    7bb8:	dfc00415 	stw	ra,16(sp)
    7bbc:	dcc00315 	stw	r19,12(sp)
    7bc0:	dc400115 	stw	r17,4(sp)
    7bc4:	201c90fa 	slli	r14,r4,3
    7bc8:	301a90fa 	slli	r13,r6,3
    7bcc:	2821883a 	mov	r16,r5
    7bd0:	6294b03a 	or	r10,r12,r10
    7bd4:	5a52b03a 	or	r9,r11,r9
    7bd8:	9087c83a 	sub	r3,r18,r2
    7bdc:	29c06126 	beq	r5,r7,7d64 <__adddf3+0x1f0>
    7be0:	00c0550e 	bge	zero,r3,7d38 <__adddf3+0x1c4>
    7be4:	10007326 	beq	r2,zero,7db4 <__adddf3+0x240>
    7be8:	9081ffd8 	cmpnei	r2,r18,2047
    7bec:	1000b826 	beq	r2,zero,7ed0 <__adddf3+0x35c>
    7bf0:	4a402034 	orhi	r9,r9,128
    7bf4:	18800e48 	cmpgei	r2,r3,57
    7bf8:	1000ee1e 	bne	r2,zero,7fb4 <__adddf3+0x440>
    7bfc:	18800808 	cmpgei	r2,r3,32
    7c00:	10012d1e 	bne	r2,zero,80b8 <__adddf3+0x544>
    7c04:	00800804 	movi	r2,32
    7c08:	10c5c83a 	sub	r2,r2,r3
    7c0c:	68c8d83a 	srl	r4,r13,r3
    7c10:	48a2983a 	sll	r17,r9,r2
    7c14:	689a983a 	sll	r13,r13,r2
    7c18:	48c6d83a 	srl	r3,r9,r3
    7c1c:	8922b03a 	or	r17,r17,r4
    7c20:	681ac03a 	cmpne	r13,r13,zero
    7c24:	8b62b03a 	or	r17,r17,r13
    7c28:	50d5c83a 	sub	r10,r10,r3
    7c2c:	7463c83a 	sub	r17,r14,r17
    7c30:	7451803a 	cmpltu	r8,r14,r17
    7c34:	5211c83a 	sub	r8,r10,r8
    7c38:	4080202c 	andhi	r2,r8,128
    7c3c:	10008826 	beq	r2,zero,7e60 <__adddf3+0x2ec>
    7c40:	02402034 	movhi	r9,128
    7c44:	4a7fffc4 	addi	r9,r9,-1
    7c48:	4266703a 	and	r19,r8,r9
    7c4c:	9800ae26 	beq	r19,zero,7f08 <__adddf3+0x394>
    7c50:	9809883a 	mov	r4,r19
    7c54:	000a4780 	call	a478 <__clzsi2>
    7c58:	10fffe04 	addi	r3,r2,-8
    7c5c:	02000804 	movi	r8,32
    7c60:	40d1c83a 	sub	r8,r8,r3
    7c64:	8a10d83a 	srl	r8,r17,r8
    7c68:	98d2983a 	sll	r9,r19,r3
    7c6c:	88e2983a 	sll	r17,r17,r3
    7c70:	4250b03a 	or	r8,r8,r9
    7c74:	1c80ad16 	blt	r3,r18,7f2c <__adddf3+0x3b8>
    7c78:	1c87c83a 	sub	r3,r3,r18
    7c7c:	19000044 	addi	r4,r3,1
    7c80:	20800808 	cmpgei	r2,r4,32
    7c84:	10006a1e 	bne	r2,zero,7e30 <__adddf3+0x2bc>
    7c88:	00800804 	movi	r2,32
    7c8c:	1105c83a 	sub	r2,r2,r4
    7c90:	8906d83a 	srl	r3,r17,r4
    7c94:	88a2983a 	sll	r17,r17,r2
    7c98:	4084983a 	sll	r2,r8,r2
    7c9c:	4110d83a 	srl	r8,r8,r4
    7ca0:	8822c03a 	cmpne	r17,r17,zero
    7ca4:	10c4b03a 	or	r2,r2,r3
    7ca8:	1462b03a 	or	r17,r2,r17
    7cac:	0025883a 	mov	r18,zero
    7cb0:	888001cc 	andi	r2,r17,7
    7cb4:	10000726 	beq	r2,zero,7cd4 <__adddf3+0x160>
    7cb8:	888003cc 	andi	r2,r17,15
    7cbc:	10800120 	cmpeqi	r2,r2,4
    7cc0:	1000041e 	bne	r2,zero,7cd4 <__adddf3+0x160>
    7cc4:	88c00104 	addi	r3,r17,4
    7cc8:	1c63803a 	cmpltu	r17,r3,r17
    7ccc:	4451883a 	add	r8,r8,r17
    7cd0:	1823883a 	mov	r17,r3
    7cd4:	4080202c 	andhi	r2,r8,128
    7cd8:	10006326 	beq	r2,zero,7e68 <__adddf3+0x2f4>
    7cdc:	90c00044 	addi	r3,r18,1
    7ce0:	1881ffe0 	cmpeqi	r2,r3,2047
    7ce4:	18c1ffcc 	andi	r3,r3,2047
    7ce8:	1000751e 	bne	r2,zero,7ec0 <__adddf3+0x34c>
    7cec:	00bfe034 	movhi	r2,65408
    7cf0:	10bfffc4 	addi	r2,r2,-1
    7cf4:	4090703a 	and	r8,r8,r2
    7cf8:	4004977a 	slli	r2,r8,29
    7cfc:	4010927a 	slli	r8,r8,9
    7d00:	8822d0fa 	srli	r17,r17,3
    7d04:	4010d33a 	srli	r8,r8,12
    7d08:	1444b03a 	or	r2,r2,r17
    7d0c:	1806953a 	slli	r3,r3,20
    7d10:	802097fa 	slli	r16,r16,31
    7d14:	1a06b03a 	or	r3,r3,r8
    7d18:	1c06b03a 	or	r3,r3,r16
    7d1c:	dfc00417 	ldw	ra,16(sp)
    7d20:	dcc00317 	ldw	r19,12(sp)
    7d24:	dc800217 	ldw	r18,8(sp)
    7d28:	dc400117 	ldw	r17,4(sp)
    7d2c:	dc000017 	ldw	r16,0(sp)
    7d30:	dec00504 	addi	sp,sp,20
    7d34:	f800283a 	ret
    7d38:	18002626 	beq	r3,zero,7dd4 <__adddf3+0x260>
    7d3c:	1487c83a 	sub	r3,r2,r18
    7d40:	9000b51e 	bne	r18,zero,8018 <__adddf3+0x4a4>
    7d44:	5388b03a 	or	r4,r10,r14
    7d48:	20010f26 	beq	r4,zero,8188 <__adddf3+0x614>
    7d4c:	193fffc4 	addi	r4,r3,-1
    7d50:	20016126 	beq	r4,zero,82d8 <__adddf3+0x764>
    7d54:	18c1ffd8 	cmpnei	r3,r3,2047
    7d58:	18012e26 	beq	r3,zero,8214 <__adddf3+0x6a0>
    7d5c:	2007883a 	mov	r3,r4
    7d60:	0000b006 	br	8024 <__adddf3+0x4b0>
    7d64:	00c0760e 	bge	zero,r3,7f40 <__adddf3+0x3cc>
    7d68:	10002926 	beq	r2,zero,7e10 <__adddf3+0x29c>
    7d6c:	9081ffd8 	cmpnei	r2,r18,2047
    7d70:	10012126 	beq	r2,zero,81f8 <__adddf3+0x684>
    7d74:	4a402034 	orhi	r9,r9,128
    7d78:	18800e48 	cmpgei	r2,r3,57
    7d7c:	1000461e 	bne	r2,zero,7e98 <__adddf3+0x324>
    7d80:	18800808 	cmpgei	r2,r3,32
    7d84:	1000e326 	beq	r2,zero,8114 <__adddf3+0x5a0>
    7d88:	1c7ff804 	addi	r17,r3,-32
    7d8c:	19000820 	cmpeqi	r4,r3,32
    7d90:	4c44d83a 	srl	r2,r9,r17
    7d94:	2000041e 	bne	r4,zero,7da8 <__adddf3+0x234>
    7d98:	01001004 	movi	r4,64
    7d9c:	20c7c83a 	sub	r3,r4,r3
    7da0:	48d2983a 	sll	r9,r9,r3
    7da4:	6a5ab03a 	or	r13,r13,r9
    7da8:	6822c03a 	cmpne	r17,r13,zero
    7dac:	88a2b03a 	or	r17,r17,r2
    7db0:	00003b06 	br	7ea0 <__adddf3+0x32c>
    7db4:	4b44b03a 	or	r2,r9,r13
    7db8:	10008126 	beq	r2,zero,7fc0 <__adddf3+0x44c>
    7dbc:	18bfffc4 	addi	r2,r3,-1
    7dc0:	10010726 	beq	r2,zero,81e0 <__adddf3+0x66c>
    7dc4:	18c1ffd8 	cmpnei	r3,r3,2047
    7dc8:	18004126 	beq	r3,zero,7ed0 <__adddf3+0x35c>
    7dcc:	1007883a 	mov	r3,r2
    7dd0:	003f8806 	br	7bf4 <__adddf3+0x80>
    7dd4:	90800044 	addi	r2,r18,1
    7dd8:	1081ff8c 	andi	r2,r2,2046
    7ddc:	1000a01e 	bne	r2,zero,8060 <__adddf3+0x4ec>
    7de0:	538ab03a 	or	r5,r10,r14
    7de4:	4b44b03a 	or	r2,r9,r13
    7de8:	9000ef1e 	bne	r18,zero,81a8 <__adddf3+0x634>
    7dec:	28014126 	beq	r5,zero,82f4 <__adddf3+0x780>
    7df0:	1001491e 	bne	r2,zero,8318 <__adddf3+0x7a4>
    7df4:	500a977a 	slli	r5,r10,29
    7df8:	00880034 	movhi	r2,8192
    7dfc:	10bfffc4 	addi	r2,r2,-1
    7e00:	2084703a 	and	r2,r4,r2
    7e04:	5014d0fa 	srli	r10,r10,3
    7e08:	1144b03a 	or	r2,r2,r5
    7e0c:	00001d06 	br	7e84 <__adddf3+0x310>
    7e10:	4b44b03a 	or	r2,r9,r13
    7e14:	10006a26 	beq	r2,zero,7fc0 <__adddf3+0x44c>
    7e18:	18bfffc4 	addi	r2,r3,-1
    7e1c:	1000e826 	beq	r2,zero,81c0 <__adddf3+0x64c>
    7e20:	18c1ffd8 	cmpnei	r3,r3,2047
    7e24:	1800f426 	beq	r3,zero,81f8 <__adddf3+0x684>
    7e28:	1007883a 	mov	r3,r2
    7e2c:	003fd206 	br	7d78 <__adddf3+0x204>
    7e30:	18fff844 	addi	r3,r3,-31
    7e34:	20800820 	cmpeqi	r2,r4,32
    7e38:	40c6d83a 	srl	r3,r8,r3
    7e3c:	1000041e 	bne	r2,zero,7e50 <__adddf3+0x2dc>
    7e40:	00801004 	movi	r2,64
    7e44:	1109c83a 	sub	r4,r2,r4
    7e48:	4110983a 	sll	r8,r8,r4
    7e4c:	8a22b03a 	or	r17,r17,r8
    7e50:	8822c03a 	cmpne	r17,r17,zero
    7e54:	88e2b03a 	or	r17,r17,r3
    7e58:	0011883a 	mov	r8,zero
    7e5c:	0025883a 	mov	r18,zero
    7e60:	888001cc 	andi	r2,r17,7
    7e64:	103f941e 	bne	r2,zero,7cb8 <__adddf3+0x144>
    7e68:	8822d0fa 	srli	r17,r17,3
    7e6c:	4004977a 	slli	r2,r8,29
    7e70:	4014d0fa 	srli	r10,r8,3
    7e74:	9007883a 	mov	r3,r18
    7e78:	8884b03a 	or	r2,r17,r2
    7e7c:	1901ffe0 	cmpeqi	r4,r3,2047
    7e80:	2000191e 	bne	r4,zero,7ee8 <__adddf3+0x374>
    7e84:	02000434 	movhi	r8,16
    7e88:	423fffc4 	addi	r8,r8,-1
    7e8c:	5210703a 	and	r8,r10,r8
    7e90:	18c1ffcc 	andi	r3,r3,2047
    7e94:	003f9d06 	br	7d0c <__adddf3+0x198>
    7e98:	4b62b03a 	or	r17,r9,r13
    7e9c:	8822c03a 	cmpne	r17,r17,zero
    7ea0:	8ba3883a 	add	r17,r17,r14
    7ea4:	8b91803a 	cmpltu	r8,r17,r14
    7ea8:	4291883a 	add	r8,r8,r10
    7eac:	4080202c 	andhi	r2,r8,128
    7eb0:	103feb26 	beq	r2,zero,7e60 <__adddf3+0x2ec>
    7eb4:	94800044 	addi	r18,r18,1
    7eb8:	9081ffe0 	cmpeqi	r2,r18,2047
    7ebc:	10007426 	beq	r2,zero,8090 <__adddf3+0x51c>
    7ec0:	00c1ffc4 	movi	r3,2047
    7ec4:	0011883a 	mov	r8,zero
    7ec8:	0005883a 	mov	r2,zero
    7ecc:	003f8f06 	br	7d0c <__adddf3+0x198>
    7ed0:	500a977a 	slli	r5,r10,29
    7ed4:	00c80034 	movhi	r3,8192
    7ed8:	18ffffc4 	addi	r3,r3,-1
    7edc:	5014d0fa 	srli	r10,r10,3
    7ee0:	20c4703a 	and	r2,r4,r3
    7ee4:	1144b03a 	or	r2,r2,r5
    7ee8:	1286b03a 	or	r3,r2,r10
    7eec:	18015926 	beq	r3,zero,8454 <__adddf3+0x8e0>
    7ef0:	00c00434 	movhi	r3,16
    7ef4:	18ffffc4 	addi	r3,r3,-1
    7ef8:	52000234 	orhi	r8,r10,8
    7efc:	40d0703a 	and	r8,r8,r3
    7f00:	00c1ffc4 	movi	r3,2047
    7f04:	003f8106 	br	7d0c <__adddf3+0x198>
    7f08:	8809883a 	mov	r4,r17
    7f0c:	000a4780 	call	a478 <__clzsi2>
    7f10:	10c00604 	addi	r3,r2,24
    7f14:	19000808 	cmpgei	r4,r3,32
    7f18:	203f5026 	beq	r4,zero,7c5c <__adddf3+0xe8>
    7f1c:	123ffe04 	addi	r8,r2,-8
    7f20:	8a10983a 	sll	r8,r17,r8
    7f24:	0023883a 	mov	r17,zero
    7f28:	1cbf530e 	bge	r3,r18,7c78 <__adddf3+0x104>
    7f2c:	00bfe034 	movhi	r2,65408
    7f30:	10bfffc4 	addi	r2,r2,-1
    7f34:	90e5c83a 	sub	r18,r18,r3
    7f38:	4090703a 	and	r8,r8,r2
    7f3c:	003f5c06 	br	7cb0 <__adddf3+0x13c>
    7f40:	18002626 	beq	r3,zero,7fdc <__adddf3+0x468>
    7f44:	1487c83a 	sub	r3,r2,r18
    7f48:	90006e1e 	bne	r18,zero,8104 <__adddf3+0x590>
    7f4c:	5388b03a 	or	r4,r10,r14
    7f50:	2000fd26 	beq	r4,zero,8348 <__adddf3+0x7d4>
    7f54:	193fffc4 	addi	r4,r3,-1
    7f58:	20013626 	beq	r4,zero,8434 <__adddf3+0x8c0>
    7f5c:	18c1ffd8 	cmpnei	r3,r3,2047
    7f60:	1800b426 	beq	r3,zero,8234 <__adddf3+0x6c0>
    7f64:	2007883a 	mov	r3,r4
    7f68:	19000e48 	cmpgei	r4,r3,57
    7f6c:	2000b81e 	bne	r4,zero,8250 <__adddf3+0x6dc>
    7f70:	19000808 	cmpgei	r4,r3,32
    7f74:	2001241e 	bne	r4,zero,8408 <__adddf3+0x894>
    7f78:	01000804 	movi	r4,32
    7f7c:	20c9c83a 	sub	r4,r4,r3
    7f80:	5122983a 	sll	r17,r10,r4
    7f84:	70cad83a 	srl	r5,r14,r3
    7f88:	7108983a 	sll	r4,r14,r4
    7f8c:	50d4d83a 	srl	r10,r10,r3
    7f90:	8962b03a 	or	r17,r17,r5
    7f94:	2008c03a 	cmpne	r4,r4,zero
    7f98:	8922b03a 	or	r17,r17,r4
    7f9c:	4a93883a 	add	r9,r9,r10
    7fa0:	8b63883a 	add	r17,r17,r13
    7fa4:	8b51803a 	cmpltu	r8,r17,r13
    7fa8:	4251883a 	add	r8,r8,r9
    7fac:	1025883a 	mov	r18,r2
    7fb0:	003fbe06 	br	7eac <__adddf3+0x338>
    7fb4:	4b62b03a 	or	r17,r9,r13
    7fb8:	8822c03a 	cmpne	r17,r17,zero
    7fbc:	003f1b06 	br	7c2c <__adddf3+0xb8>
    7fc0:	500c977a 	slli	r6,r10,29
    7fc4:	01480034 	movhi	r5,8192
    7fc8:	297fffc4 	addi	r5,r5,-1
    7fcc:	2144703a 	and	r2,r4,r5
    7fd0:	5014d0fa 	srli	r10,r10,3
    7fd4:	3084b03a 	or	r2,r6,r2
    7fd8:	003fa806 	br	7e7c <__adddf3+0x308>
    7fdc:	90800044 	addi	r2,r18,1
    7fe0:	1141ff8c 	andi	r5,r2,2046
    7fe4:	2800561e 	bne	r5,zero,8140 <__adddf3+0x5cc>
    7fe8:	5384b03a 	or	r2,r10,r14
    7fec:	9000a61e 	bne	r18,zero,8288 <__adddf3+0x714>
    7ff0:	1000ee26 	beq	r2,zero,83ac <__adddf3+0x838>
    7ff4:	4b44b03a 	or	r2,r9,r13
    7ff8:	1000f31e 	bne	r2,zero,83c8 <__adddf3+0x854>
    7ffc:	5004977a 	slli	r2,r10,29
    8000:	01480034 	movhi	r5,8192
    8004:	297fffc4 	addi	r5,r5,-1
    8008:	2148703a 	and	r4,r4,r5
    800c:	5014d0fa 	srli	r10,r10,3
    8010:	1104b03a 	or	r2,r2,r4
    8014:	003f9b06 	br	7e84 <__adddf3+0x310>
    8018:	1101ffd8 	cmpnei	r4,r2,2047
    801c:	20007d26 	beq	r4,zero,8214 <__adddf3+0x6a0>
    8020:	52802034 	orhi	r10,r10,128
    8024:	19000e48 	cmpgei	r4,r3,57
    8028:	20002e1e 	bne	r4,zero,80e4 <__adddf3+0x570>
    802c:	19000808 	cmpgei	r4,r3,32
    8030:	20008a1e 	bne	r4,zero,825c <__adddf3+0x6e8>
    8034:	01000804 	movi	r4,32
    8038:	20c9c83a 	sub	r4,r4,r3
    803c:	5122983a 	sll	r17,r10,r4
    8040:	70cad83a 	srl	r5,r14,r3
    8044:	711c983a 	sll	r14,r14,r4
    8048:	50d4d83a 	srl	r10,r10,r3
    804c:	8962b03a 	or	r17,r17,r5
    8050:	701cc03a 	cmpne	r14,r14,zero
    8054:	8ba2b03a 	or	r17,r17,r14
    8058:	4a93c83a 	sub	r9,r9,r10
    805c:	00002306 	br	80ec <__adddf3+0x578>
    8060:	7363c83a 	sub	r17,r14,r13
    8064:	5267c83a 	sub	r19,r10,r9
    8068:	7451803a 	cmpltu	r8,r14,r17
    806c:	9a27c83a 	sub	r19,r19,r8
    8070:	9880202c 	andhi	r2,r19,128
    8074:	10003e1e 	bne	r2,zero,8170 <__adddf3+0x5fc>
    8078:	8cc4b03a 	or	r2,r17,r19
    807c:	103ef31e 	bne	r2,zero,7c4c <__adddf3+0xd8>
    8080:	0015883a 	mov	r10,zero
    8084:	0021883a 	mov	r16,zero
    8088:	003f7e06 	br	7e84 <__adddf3+0x310>
    808c:	04800084 	movi	r18,2
    8090:	00bfe034 	movhi	r2,65408
    8094:	10bfffc4 	addi	r2,r2,-1
    8098:	8806d07a 	srli	r3,r17,1
    809c:	4090703a 	and	r8,r8,r2
    80a0:	400497fa 	slli	r2,r8,31
    80a4:	8c40004c 	andi	r17,r17,1
    80a8:	1c62b03a 	or	r17,r3,r17
    80ac:	4010d07a 	srli	r8,r8,1
    80b0:	1462b03a 	or	r17,r2,r17
    80b4:	003efe06 	br	7cb0 <__adddf3+0x13c>
    80b8:	1c7ff804 	addi	r17,r3,-32
    80bc:	19000820 	cmpeqi	r4,r3,32
    80c0:	4c44d83a 	srl	r2,r9,r17
    80c4:	2000041e 	bne	r4,zero,80d8 <__adddf3+0x564>
    80c8:	01001004 	movi	r4,64
    80cc:	20c7c83a 	sub	r3,r4,r3
    80d0:	48d2983a 	sll	r9,r9,r3
    80d4:	6a5ab03a 	or	r13,r13,r9
    80d8:	6822c03a 	cmpne	r17,r13,zero
    80dc:	88a2b03a 	or	r17,r17,r2
    80e0:	003ed206 	br	7c2c <__adddf3+0xb8>
    80e4:	5394b03a 	or	r10,r10,r14
    80e8:	5022c03a 	cmpne	r17,r10,zero
    80ec:	6c63c83a 	sub	r17,r13,r17
    80f0:	6c51803a 	cmpltu	r8,r13,r17
    80f4:	4a11c83a 	sub	r8,r9,r8
    80f8:	3821883a 	mov	r16,r7
    80fc:	1025883a 	mov	r18,r2
    8100:	003ecd06 	br	7c38 <__adddf3+0xc4>
    8104:	1101ffd8 	cmpnei	r4,r2,2047
    8108:	20004a26 	beq	r4,zero,8234 <__adddf3+0x6c0>
    810c:	52802034 	orhi	r10,r10,128
    8110:	003f9506 	br	7f68 <__adddf3+0x3f4>
    8114:	00800804 	movi	r2,32
    8118:	10c5c83a 	sub	r2,r2,r3
    811c:	68c8d83a 	srl	r4,r13,r3
    8120:	48a2983a 	sll	r17,r9,r2
    8124:	689a983a 	sll	r13,r13,r2
    8128:	48c6d83a 	srl	r3,r9,r3
    812c:	8922b03a 	or	r17,r17,r4
    8130:	681ac03a 	cmpne	r13,r13,zero
    8134:	8b62b03a 	or	r17,r17,r13
    8138:	50d5883a 	add	r10,r10,r3
    813c:	003f5806 	br	7ea0 <__adddf3+0x32c>
    8140:	10c1ffe0 	cmpeqi	r3,r2,2047
    8144:	183f5e1e 	bne	r3,zero,7ec0 <__adddf3+0x34c>
    8148:	7351883a 	add	r8,r14,r13
    814c:	4387803a 	cmpltu	r3,r8,r14
    8150:	5255883a 	add	r10,r10,r9
    8154:	50c7883a 	add	r3,r10,r3
    8158:	401ad07a 	srli	r13,r8,1
    815c:	182297fa 	slli	r17,r3,31
    8160:	1810d07a 	srli	r8,r3,1
    8164:	1025883a 	mov	r18,r2
    8168:	8b62b03a 	or	r17,r17,r13
    816c:	003f3c06 	br	7e60 <__adddf3+0x2ec>
    8170:	6ba3c83a 	sub	r17,r13,r14
    8174:	4a93c83a 	sub	r9,r9,r10
    8178:	6c51803a 	cmpltu	r8,r13,r17
    817c:	4a27c83a 	sub	r19,r9,r8
    8180:	3821883a 	mov	r16,r7
    8184:	003eb106 	br	7c4c <__adddf3+0xd8>
    8188:	480a977a 	slli	r5,r9,29
    818c:	01080034 	movhi	r4,8192
    8190:	213fffc4 	addi	r4,r4,-1
    8194:	3104703a 	and	r2,r6,r4
    8198:	4814d0fa 	srli	r10,r9,3
    819c:	1144b03a 	or	r2,r2,r5
    81a0:	3821883a 	mov	r16,r7
    81a4:	003f3506 	br	7e7c <__adddf3+0x308>
    81a8:	28006e1e 	bne	r5,zero,8364 <__adddf3+0x7f0>
    81ac:	1000191e 	bne	r2,zero,8214 <__adddf3+0x6a0>
    81b0:	0021883a 	mov	r16,zero
    81b4:	4015883a 	mov	r10,r8
    81b8:	00bfffc4 	movi	r2,-1
    81bc:	003f4c06 	br	7ef0 <__adddf3+0x37c>
    81c0:	7363883a 	add	r17,r14,r13
    81c4:	5255883a 	add	r10,r10,r9
    81c8:	8b91803a 	cmpltu	r8,r17,r14
    81cc:	5211883a 	add	r8,r10,r8
    81d0:	4080202c 	andhi	r2,r8,128
    81d4:	103fad1e 	bne	r2,zero,808c <__adddf3+0x518>
    81d8:	04800044 	movi	r18,1
    81dc:	003f2006 	br	7e60 <__adddf3+0x2ec>
    81e0:	7363c83a 	sub	r17,r14,r13
    81e4:	5255c83a 	sub	r10,r10,r9
    81e8:	7451803a 	cmpltu	r8,r14,r17
    81ec:	5211c83a 	sub	r8,r10,r8
    81f0:	04800044 	movi	r18,1
    81f4:	003e9006 	br	7c38 <__adddf3+0xc4>
    81f8:	5004977a 	slli	r2,r10,29
    81fc:	00c80034 	movhi	r3,8192
    8200:	18ffffc4 	addi	r3,r3,-1
    8204:	20c8703a 	and	r4,r4,r3
    8208:	5014d0fa 	srli	r10,r10,3
    820c:	1104b03a 	or	r2,r2,r4
    8210:	003f3506 	br	7ee8 <__adddf3+0x374>
    8214:	4806977a 	slli	r3,r9,29
    8218:	00880034 	movhi	r2,8192
    821c:	10bfffc4 	addi	r2,r2,-1
    8220:	3084703a 	and	r2,r6,r2
    8224:	4814d0fa 	srli	r10,r9,3
    8228:	10c4b03a 	or	r2,r2,r3
    822c:	3821883a 	mov	r16,r7
    8230:	003f2d06 	br	7ee8 <__adddf3+0x374>
    8234:	4804977a 	slli	r2,r9,29
    8238:	00c80034 	movhi	r3,8192
    823c:	18ffffc4 	addi	r3,r3,-1
    8240:	30cc703a 	and	r6,r6,r3
    8244:	4814d0fa 	srli	r10,r9,3
    8248:	1184b03a 	or	r2,r2,r6
    824c:	003f2606 	br	7ee8 <__adddf3+0x374>
    8250:	5394b03a 	or	r10,r10,r14
    8254:	5022c03a 	cmpne	r17,r10,zero
    8258:	003f5106 	br	7fa0 <__adddf3+0x42c>
    825c:	1c7ff804 	addi	r17,r3,-32
    8260:	19400820 	cmpeqi	r5,r3,32
    8264:	5448d83a 	srl	r4,r10,r17
    8268:	2800041e 	bne	r5,zero,827c <__adddf3+0x708>
    826c:	01401004 	movi	r5,64
    8270:	28c7c83a 	sub	r3,r5,r3
    8274:	50d4983a 	sll	r10,r10,r3
    8278:	729cb03a 	or	r14,r14,r10
    827c:	7022c03a 	cmpne	r17,r14,zero
    8280:	8922b03a 	or	r17,r17,r4
    8284:	003f9906 	br	80ec <__adddf3+0x578>
    8288:	103fea26 	beq	r2,zero,8234 <__adddf3+0x6c0>
    828c:	4b50b03a 	or	r8,r9,r13
    8290:	500a977a 	slli	r5,r10,29
    8294:	5014d0fa 	srli	r10,r10,3
    8298:	40005626 	beq	r8,zero,83f4 <__adddf3+0x880>
    829c:	00c80034 	movhi	r3,8192
    82a0:	18ffffc4 	addi	r3,r3,-1
    82a4:	20c4703a 	and	r2,r4,r3
    82a8:	5100022c 	andhi	r4,r10,8
    82ac:	1144b03a 	or	r2,r2,r5
    82b0:	203f0d26 	beq	r4,zero,7ee8 <__adddf3+0x374>
    82b4:	4808d0fa 	srli	r4,r9,3
    82b8:	2140022c 	andhi	r5,r4,8
    82bc:	283f0a1e 	bne	r5,zero,7ee8 <__adddf3+0x374>
    82c0:	4804977a 	slli	r2,r9,29
    82c4:	30cc703a 	and	r6,r6,r3
    82c8:	3821883a 	mov	r16,r7
    82cc:	3084b03a 	or	r2,r6,r2
    82d0:	2015883a 	mov	r10,r4
    82d4:	003f0406 	br	7ee8 <__adddf3+0x374>
    82d8:	6ba3c83a 	sub	r17,r13,r14
    82dc:	4a95c83a 	sub	r10,r9,r10
    82e0:	6c51803a 	cmpltu	r8,r13,r17
    82e4:	5211c83a 	sub	r8,r10,r8
    82e8:	3821883a 	mov	r16,r7
    82ec:	04800044 	movi	r18,1
    82f0:	003e5106 	br	7c38 <__adddf3+0xc4>
    82f4:	103f6226 	beq	r2,zero,8080 <__adddf3+0x50c>
    82f8:	4808977a 	slli	r4,r9,29
    82fc:	00880034 	movhi	r2,8192
    8300:	10bfffc4 	addi	r2,r2,-1
    8304:	3084703a 	and	r2,r6,r2
    8308:	4814d0fa 	srli	r10,r9,3
    830c:	1104b03a 	or	r2,r2,r4
    8310:	3821883a 	mov	r16,r7
    8314:	003edb06 	br	7e84 <__adddf3+0x310>
    8318:	7363c83a 	sub	r17,r14,r13
    831c:	7445803a 	cmpltu	r2,r14,r17
    8320:	5251c83a 	sub	r8,r10,r9
    8324:	4091c83a 	sub	r8,r8,r2
    8328:	4080202c 	andhi	r2,r8,128
    832c:	10004626 	beq	r2,zero,8448 <__adddf3+0x8d4>
    8330:	6ba3c83a 	sub	r17,r13,r14
    8334:	4a95c83a 	sub	r10,r9,r10
    8338:	6c51803a 	cmpltu	r8,r13,r17
    833c:	5211c83a 	sub	r8,r10,r8
    8340:	3821883a 	mov	r16,r7
    8344:	003e5a06 	br	7cb0 <__adddf3+0x13c>
    8348:	4804977a 	slli	r2,r9,29
    834c:	01080034 	movhi	r4,8192
    8350:	213fffc4 	addi	r4,r4,-1
    8354:	310c703a 	and	r6,r6,r4
    8358:	4814d0fa 	srli	r10,r9,3
    835c:	1184b03a 	or	r2,r2,r6
    8360:	003ec606 	br	7e7c <__adddf3+0x308>
    8364:	500a977a 	slli	r5,r10,29
    8368:	5014d0fa 	srli	r10,r10,3
    836c:	10002126 	beq	r2,zero,83f4 <__adddf3+0x880>
    8370:	00c80034 	movhi	r3,8192
    8374:	18ffffc4 	addi	r3,r3,-1
    8378:	20c4703a 	and	r2,r4,r3
    837c:	5100022c 	andhi	r4,r10,8
    8380:	1144b03a 	or	r2,r2,r5
    8384:	203ed826 	beq	r4,zero,7ee8 <__adddf3+0x374>
    8388:	4808d0fa 	srli	r4,r9,3
    838c:	2140022c 	andhi	r5,r4,8
    8390:	283ed51e 	bne	r5,zero,7ee8 <__adddf3+0x374>
    8394:	4812977a 	slli	r9,r9,29
    8398:	30c4703a 	and	r2,r6,r3
    839c:	3821883a 	mov	r16,r7
    83a0:	1244b03a 	or	r2,r2,r9
    83a4:	2015883a 	mov	r10,r4
    83a8:	003ecf06 	br	7ee8 <__adddf3+0x374>
    83ac:	4804977a 	slli	r2,r9,29
    83b0:	01080034 	movhi	r4,8192
    83b4:	213fffc4 	addi	r4,r4,-1
    83b8:	310c703a 	and	r6,r6,r4
    83bc:	4814d0fa 	srli	r10,r9,3
    83c0:	1184b03a 	or	r2,r2,r6
    83c4:	003eaf06 	br	7e84 <__adddf3+0x310>
    83c8:	7363883a 	add	r17,r14,r13
    83cc:	5255883a 	add	r10,r10,r9
    83d0:	8b91803a 	cmpltu	r8,r17,r14
    83d4:	5211883a 	add	r8,r10,r8
    83d8:	4080202c 	andhi	r2,r8,128
    83dc:	103ea026 	beq	r2,zero,7e60 <__adddf3+0x2ec>
    83e0:	00bfe034 	movhi	r2,65408
    83e4:	10bfffc4 	addi	r2,r2,-1
    83e8:	4090703a 	and	r8,r8,r2
    83ec:	04800044 	movi	r18,1
    83f0:	003e9b06 	br	7e60 <__adddf3+0x2ec>
    83f4:	00880034 	movhi	r2,8192
    83f8:	10bfffc4 	addi	r2,r2,-1
    83fc:	2084703a 	and	r2,r4,r2
    8400:	1144b03a 	or	r2,r2,r5
    8404:	003eb806 	br	7ee8 <__adddf3+0x374>
    8408:	193ff804 	addi	r4,r3,-32
    840c:	19400820 	cmpeqi	r5,r3,32
    8410:	5108d83a 	srl	r4,r10,r4
    8414:	2800041e 	bne	r5,zero,8428 <__adddf3+0x8b4>
    8418:	01401004 	movi	r5,64
    841c:	28c7c83a 	sub	r3,r5,r3
    8420:	50d4983a 	sll	r10,r10,r3
    8424:	729cb03a 	or	r14,r14,r10
    8428:	7022c03a 	cmpne	r17,r14,zero
    842c:	8922b03a 	or	r17,r17,r4
    8430:	003edb06 	br	7fa0 <__adddf3+0x42c>
    8434:	7363883a 	add	r17,r14,r13
    8438:	5255883a 	add	r10,r10,r9
    843c:	8b51803a 	cmpltu	r8,r17,r13
    8440:	5211883a 	add	r8,r10,r8
    8444:	003f6206 	br	81d0 <__adddf3+0x65c>
    8448:	8a04b03a 	or	r2,r17,r8
    844c:	103f0c26 	beq	r2,zero,8080 <__adddf3+0x50c>
    8450:	003e8306 	br	7e60 <__adddf3+0x2ec>
    8454:	0005883a 	mov	r2,zero
    8458:	00c1ffc4 	movi	r3,2047
    845c:	0011883a 	mov	r8,zero
    8460:	003e2a06 	br	7d0c <__adddf3+0x198>

00008464 <__divdf3>:
    8464:	2810d53a 	srli	r8,r5,20
    8468:	defff004 	addi	sp,sp,-64
    846c:	dc000615 	stw	r16,24(sp)
    8470:	04000434 	movhi	r16,16
    8474:	ddc00d15 	stw	r23,52(sp)
    8478:	dd800c15 	stw	r22,48(sp)
    847c:	dd400b15 	stw	r21,44(sp)
    8480:	dd000a15 	stw	r20,40(sp)
    8484:	843fffc4 	addi	r16,r16,-1
    8488:	dfc00f15 	stw	ra,60(sp)
    848c:	df000e15 	stw	fp,56(sp)
    8490:	dcc00915 	stw	r19,36(sp)
    8494:	dc800815 	stw	r18,32(sp)
    8498:	dc400715 	stw	r17,28(sp)
    849c:	4201ffcc 	andi	r8,r8,2047
    84a0:	282cd7fa 	srli	r22,r5,31
    84a4:	302f883a 	mov	r23,r6
    84a8:	382b883a 	mov	r21,r7
    84ac:	2029883a 	mov	r20,r4
    84b0:	2c20703a 	and	r16,r5,r16
    84b4:	40014426 	beq	r8,zero,89c8 <__divdf3+0x564>
    84b8:	4081ffe0 	cmpeqi	r2,r8,2047
    84bc:	1001551e 	bne	r2,zero,8a14 <__divdf3+0x5b0>
    84c0:	2024d77a 	srli	r18,r4,29
    84c4:	800a90fa 	slli	r5,r16,3
    84c8:	202890fa 	slli	r20,r4,3
    84cc:	447f0044 	addi	r17,r8,-1023
    84d0:	914ab03a 	or	r5,r18,r5
    84d4:	2c802034 	orhi	r18,r5,128
    84d8:	0021883a 	mov	r16,zero
    84dc:	0039883a 	mov	fp,zero
    84e0:	a810d53a 	srli	r8,r21,20
    84e4:	00c00434 	movhi	r3,16
    84e8:	18ffffc4 	addi	r3,r3,-1
    84ec:	4201ffcc 	andi	r8,r8,2047
    84f0:	a826d7fa 	srli	r19,r21,31
    84f4:	a8ea703a 	and	r21,r21,r3
    84f8:	40012226 	beq	r8,zero,8984 <__divdf3+0x520>
    84fc:	4081ffe0 	cmpeqi	r2,r8,2047
    8500:	10014b1e 	bne	r2,zero,8a30 <__divdf3+0x5cc>
    8504:	a80690fa 	slli	r3,r21,3
    8508:	b804d77a 	srli	r2,r23,29
    850c:	b81290fa 	slli	r9,r23,3
    8510:	423f0044 	addi	r8,r8,-1023
    8514:	10c6b03a 	or	r3,r2,r3
    8518:	1d402034 	orhi	r21,r3,128
    851c:	8a23c83a 	sub	r17,r17,r8
    8520:	0007883a 	mov	r3,zero
    8524:	80800428 	cmpgeui	r2,r16,16
    8528:	b4cef03a 	xor	r7,r22,r19
    852c:	1000391e 	bne	r2,zero,8614 <__divdf3+0x1b0>
    8530:	800c90ba 	slli	r6,r16,2
    8534:	00800074 	movhi	r2,1
    8538:	3085883a 	add	r2,r6,r2
    853c:	10a15117 	ldw	r2,-31420(r2)
    8540:	1000683a 	jmp	r2
    8544:	00008614 	movui	zero,536
    8548:	000085f0 	cmpltui	zero,zero,535
    854c:	000085a0 	cmpeqi	zero,zero,534
    8550:	00008600 	call	860 <denormalize_audio+0x64>
    8554:	000085a0 	cmpeqi	zero,zero,534
    8558:	00008a94 	movui	zero,554
    855c:	000085a0 	cmpeqi	zero,zero,534
    8560:	00008600 	call	860 <denormalize_audio+0x64>
    8564:	000085f0 	cmpltui	zero,zero,535
    8568:	000085f0 	cmpltui	zero,zero,535
    856c:	00008a94 	movui	zero,554
    8570:	00008600 	call	860 <denormalize_audio+0x64>
    8574:	00008584 	movi	zero,534
    8578:	00008584 	movi	zero,534
    857c:	00008584 	movi	zero,534
    8580:	00008b24 	muli	zero,zero,556
    8584:	b00f883a 	mov	r7,r22
    8588:	e08000a0 	cmpeqi	r2,fp,2
    858c:	1000181e 	bne	r2,zero,85f0 <__divdf3+0x18c>
    8590:	e08000e0 	cmpeqi	r2,fp,3
    8594:	1001ef1e 	bne	r2,zero,8d54 <__divdf3+0x8f0>
    8598:	e0800060 	cmpeqi	r2,fp,1
    859c:	1000e626 	beq	r2,zero,8938 <__divdf3+0x4d4>
    85a0:	0007883a 	mov	r3,zero
    85a4:	000b883a 	mov	r5,zero
    85a8:	0029883a 	mov	r20,zero
    85ac:	1806953a 	slli	r3,r3,20
    85b0:	380e97fa 	slli	r7,r7,31
    85b4:	a005883a 	mov	r2,r20
    85b8:	1946b03a 	or	r3,r3,r5
    85bc:	19c6b03a 	or	r3,r3,r7
    85c0:	dfc00f17 	ldw	ra,60(sp)
    85c4:	df000e17 	ldw	fp,56(sp)
    85c8:	ddc00d17 	ldw	r23,52(sp)
    85cc:	dd800c17 	ldw	r22,48(sp)
    85d0:	dd400b17 	ldw	r21,44(sp)
    85d4:	dd000a17 	ldw	r20,40(sp)
    85d8:	dcc00917 	ldw	r19,36(sp)
    85dc:	dc800817 	ldw	r18,32(sp)
    85e0:	dc400717 	ldw	r17,28(sp)
    85e4:	dc000617 	ldw	r16,24(sp)
    85e8:	dec01004 	addi	sp,sp,64
    85ec:	f800283a 	ret
    85f0:	00c1ffc4 	movi	r3,2047
    85f4:	000b883a 	mov	r5,zero
    85f8:	0029883a 	mov	r20,zero
    85fc:	003feb06 	br	85ac <__divdf3+0x148>
    8600:	980f883a 	mov	r7,r19
    8604:	a825883a 	mov	r18,r21
    8608:	4829883a 	mov	r20,r9
    860c:	1839883a 	mov	fp,r3
    8610:	003fdd06 	br	8588 <__divdf3+0x124>
    8614:	ac815d36 	bltu	r21,r18,8b8c <__divdf3+0x728>
    8618:	ac815b26 	beq	r21,r18,8b88 <__divdf3+0x724>
    861c:	8c7fffc4 	addi	r17,r17,-1
    8620:	a039883a 	mov	fp,r20
    8624:	9021883a 	mov	r16,r18
    8628:	002d883a 	mov	r22,zero
    862c:	a806923a 	slli	r3,r21,8
    8630:	482ad63a 	srli	r21,r9,24
    8634:	8009883a 	mov	r4,r16
    8638:	182ed43a 	srli	r23,r3,16
    863c:	a8eab03a 	or	r21,r21,r3
    8640:	d9c00015 	stw	r7,0(sp)
    8644:	b80b883a 	mov	r5,r23
    8648:	4826923a 	slli	r19,r9,8
    864c:	ad3fffcc 	andi	r20,r21,65535
    8650:	00078f80 	call	78f8 <__udivsi3>
    8654:	100b883a 	mov	r5,r2
    8658:	a009883a 	mov	r4,r20
    865c:	1025883a 	mov	r18,r2
    8660:	00079b80 	call	79b8 <__mulsi3>
    8664:	8009883a 	mov	r4,r16
    8668:	b80b883a 	mov	r5,r23
    866c:	1021883a 	mov	r16,r2
    8670:	000795c0 	call	795c <__umodsi3>
    8674:	1004943a 	slli	r2,r2,16
    8678:	e008d43a 	srli	r4,fp,16
    867c:	d9c00017 	ldw	r7,0(sp)
    8680:	2088b03a 	or	r4,r4,r2
    8684:	2400042e 	bgeu	r4,r16,8698 <__divdf3+0x234>
    8688:	2549883a 	add	r4,r4,r21
    868c:	90bfffc4 	addi	r2,r18,-1
    8690:	25416e2e 	bgeu	r4,r21,8c4c <__divdf3+0x7e8>
    8694:	1025883a 	mov	r18,r2
    8698:	2421c83a 	sub	r16,r4,r16
    869c:	b80b883a 	mov	r5,r23
    86a0:	8009883a 	mov	r4,r16
    86a4:	d9c00215 	stw	r7,8(sp)
    86a8:	00078f80 	call	78f8 <__udivsi3>
    86ac:	100b883a 	mov	r5,r2
    86b0:	a009883a 	mov	r4,r20
    86b4:	d8800115 	stw	r2,4(sp)
    86b8:	00079b80 	call	79b8 <__mulsi3>
    86bc:	b80b883a 	mov	r5,r23
    86c0:	8009883a 	mov	r4,r16
    86c4:	d8800015 	stw	r2,0(sp)
    86c8:	000795c0 	call	795c <__umodsi3>
    86cc:	100c943a 	slli	r6,r2,16
    86d0:	da000017 	ldw	r8,0(sp)
    86d4:	e73fffcc 	andi	fp,fp,65535
    86d8:	e18cb03a 	or	r6,fp,r6
    86dc:	d8c00117 	ldw	r3,4(sp)
    86e0:	d9c00217 	ldw	r7,8(sp)
    86e4:	3200042e 	bgeu	r6,r8,86f8 <__divdf3+0x294>
    86e8:	354d883a 	add	r6,r6,r21
    86ec:	18bfffc4 	addi	r2,r3,-1
    86f0:	3541522e 	bgeu	r6,r21,8c3c <__divdf3+0x7d8>
    86f4:	1007883a 	mov	r3,r2
    86f8:	9024943a 	slli	r18,r18,16
    86fc:	9f3fffcc 	andi	fp,r19,65535
    8700:	320dc83a 	sub	r6,r6,r8
    8704:	90e4b03a 	or	r18,r18,r3
    8708:	9012d43a 	srli	r9,r18,16
    870c:	92ffffcc 	andi	r11,r18,65535
    8710:	5809883a 	mov	r4,r11
    8714:	e00b883a 	mov	r5,fp
    8718:	d9c00515 	stw	r7,20(sp)
    871c:	d9800315 	stw	r6,12(sp)
    8720:	dac00415 	stw	r11,16(sp)
    8724:	da400015 	stw	r9,0(sp)
    8728:	00079b80 	call	79b8 <__mulsi3>
    872c:	da400017 	ldw	r9,0(sp)
    8730:	e00b883a 	mov	r5,fp
    8734:	d8800215 	stw	r2,8(sp)
    8738:	4809883a 	mov	r4,r9
    873c:	00079b80 	call	79b8 <__mulsi3>
    8740:	da400017 	ldw	r9,0(sp)
    8744:	9820d43a 	srli	r16,r19,16
    8748:	d8800115 	stw	r2,4(sp)
    874c:	4809883a 	mov	r4,r9
    8750:	800b883a 	mov	r5,r16
    8754:	00079b80 	call	79b8 <__mulsi3>
    8758:	dac00417 	ldw	r11,16(sp)
    875c:	8009883a 	mov	r4,r16
    8760:	d8800015 	stw	r2,0(sp)
    8764:	580b883a 	mov	r5,r11
    8768:	00079b80 	call	79b8 <__mulsi3>
    876c:	da000217 	ldw	r8,8(sp)
    8770:	da400117 	ldw	r9,4(sp)
    8774:	da800017 	ldw	r10,0(sp)
    8778:	4008d43a 	srli	r4,r8,16
    877c:	1247883a 	add	r3,r2,r9
    8780:	d9800317 	ldw	r6,12(sp)
    8784:	20c7883a 	add	r3,r4,r3
    8788:	d9c00517 	ldw	r7,20(sp)
    878c:	1a40022e 	bgeu	r3,r9,8798 <__divdf3+0x334>
    8790:	00800074 	movhi	r2,1
    8794:	5095883a 	add	r10,r10,r2
    8798:	1808d43a 	srli	r4,r3,16
    879c:	1806943a 	slli	r3,r3,16
    87a0:	423fffcc 	andi	r8,r8,65535
    87a4:	2285883a 	add	r2,r4,r10
    87a8:	1a07883a 	add	r3,r3,r8
    87ac:	30800236 	bltu	r6,r2,87b8 <__divdf3+0x354>
    87b0:	30800a1e 	bne	r6,r2,87dc <__divdf3+0x378>
    87b4:	b0c0092e 	bgeu	r22,r3,87dc <__divdf3+0x378>
    87b8:	b4ed883a 	add	r22,r22,r19
    87bc:	b4c9803a 	cmpltu	r4,r22,r19
    87c0:	2549883a 	add	r4,r4,r21
    87c4:	310d883a 	add	r6,r6,r4
    87c8:	913fffc4 	addi	r4,r18,-1
    87cc:	a981182e 	bgeu	r21,r6,8c30 <__divdf3+0x7cc>
    87d0:	30814a36 	bltu	r6,r2,8cfc <__divdf3+0x898>
    87d4:	11814826 	beq	r2,r6,8cf8 <__divdf3+0x894>
    87d8:	2025883a 	mov	r18,r4
    87dc:	b0c7c83a 	sub	r3,r22,r3
    87e0:	3085c83a 	sub	r2,r6,r2
    87e4:	b0ed803a 	cmpltu	r22,r22,r3
    87e8:	15adc83a 	sub	r22,r2,r22
    87ec:	ad813026 	beq	r21,r22,8cb0 <__divdf3+0x84c>
    87f0:	b009883a 	mov	r4,r22
    87f4:	b80b883a 	mov	r5,r23
    87f8:	d8c00215 	stw	r3,8(sp)
    87fc:	d9c00115 	stw	r7,4(sp)
    8800:	00078f80 	call	78f8 <__udivsi3>
    8804:	100b883a 	mov	r5,r2
    8808:	a009883a 	mov	r4,r20
    880c:	d8800015 	stw	r2,0(sp)
    8810:	00079b80 	call	79b8 <__mulsi3>
    8814:	b009883a 	mov	r4,r22
    8818:	b80b883a 	mov	r5,r23
    881c:	102d883a 	mov	r22,r2
    8820:	000795c0 	call	795c <__umodsi3>
    8824:	d8c00217 	ldw	r3,8(sp)
    8828:	1004943a 	slli	r2,r2,16
    882c:	d9800017 	ldw	r6,0(sp)
    8830:	1808d43a 	srli	r4,r3,16
    8834:	d9c00117 	ldw	r7,4(sp)
    8838:	2088b03a 	or	r4,r4,r2
    883c:	2580f536 	bltu	r4,r22,8c14 <__divdf3+0x7b0>
    8840:	25adc83a 	sub	r22,r4,r22
    8844:	b009883a 	mov	r4,r22
    8848:	b80b883a 	mov	r5,r23
    884c:	d8c00315 	stw	r3,12(sp)
    8850:	d9c00215 	stw	r7,8(sp)
    8854:	d9800115 	stw	r6,4(sp)
    8858:	00078f80 	call	78f8 <__udivsi3>
    885c:	100b883a 	mov	r5,r2
    8860:	a009883a 	mov	r4,r20
    8864:	d8800015 	stw	r2,0(sp)
    8868:	00079b80 	call	79b8 <__mulsi3>
    886c:	b009883a 	mov	r4,r22
    8870:	b80b883a 	mov	r5,r23
    8874:	102d883a 	mov	r22,r2
    8878:	000795c0 	call	795c <__umodsi3>
    887c:	d8c00317 	ldw	r3,12(sp)
    8880:	1004943a 	slli	r2,r2,16
    8884:	da000017 	ldw	r8,0(sp)
    8888:	18ffffcc 	andi	r3,r3,65535
    888c:	1886b03a 	or	r3,r3,r2
    8890:	d9800117 	ldw	r6,4(sp)
    8894:	d9c00217 	ldw	r7,8(sp)
    8898:	1d80d736 	bltu	r3,r22,8bf8 <__divdf3+0x794>
    889c:	3028943a 	slli	r20,r6,16
    88a0:	e009883a 	mov	r4,fp
    88a4:	d9c00215 	stw	r7,8(sp)
    88a8:	a228b03a 	or	r20,r20,r8
    88ac:	a1bfffcc 	andi	r6,r20,65535
    88b0:	a02ed43a 	srli	r23,r20,16
    88b4:	300b883a 	mov	r5,r6
    88b8:	1dadc83a 	sub	r22,r3,r22
    88bc:	d9800115 	stw	r6,4(sp)
    88c0:	00079b80 	call	79b8 <__mulsi3>
    88c4:	e00b883a 	mov	r5,fp
    88c8:	b809883a 	mov	r4,r23
    88cc:	d8800015 	stw	r2,0(sp)
    88d0:	00079b80 	call	79b8 <__mulsi3>
    88d4:	8009883a 	mov	r4,r16
    88d8:	b80b883a 	mov	r5,r23
    88dc:	1039883a 	mov	fp,r2
    88e0:	00079b80 	call	79b8 <__mulsi3>
    88e4:	d9800117 	ldw	r6,4(sp)
    88e8:	8009883a 	mov	r4,r16
    88ec:	1021883a 	mov	r16,r2
    88f0:	300b883a 	mov	r5,r6
    88f4:	00079b80 	call	79b8 <__mulsi3>
    88f8:	da000017 	ldw	r8,0(sp)
    88fc:	1705883a 	add	r2,r2,fp
    8900:	d9c00217 	ldw	r7,8(sp)
    8904:	4006d43a 	srli	r3,r8,16
    8908:	1887883a 	add	r3,r3,r2
    890c:	1f00022e 	bgeu	r3,fp,8918 <__divdf3+0x4b4>
    8910:	00800074 	movhi	r2,1
    8914:	80a1883a 	add	r16,r16,r2
    8918:	1808d43a 	srli	r4,r3,16
    891c:	1806943a 	slli	r3,r3,16
    8920:	45ffffcc 	andi	r23,r8,65535
    8924:	2409883a 	add	r4,r4,r16
    8928:	1dc7883a 	add	r3,r3,r23
    892c:	b1008f36 	bltu	r22,r4,8b6c <__divdf3+0x708>
    8930:	b1008d26 	beq	r22,r4,8b68 <__divdf3+0x704>
    8934:	a5000054 	ori	r20,r20,1
    8938:	8980ffc4 	addi	r6,r17,1023
    893c:	01805c0e 	bge	zero,r6,8ab0 <__divdf3+0x64c>
    8940:	a08001cc 	andi	r2,r20,7
    8944:	1000e01e 	bne	r2,zero,8cc8 <__divdf3+0x864>
    8948:	a008d0fa 	srli	r4,r20,3
    894c:	9080402c 	andhi	r2,r18,256
    8950:	10000426 	beq	r2,zero,8964 <__divdf3+0x500>
    8954:	00bfc034 	movhi	r2,65280
    8958:	10bfffc4 	addi	r2,r2,-1
    895c:	90a4703a 	and	r18,r18,r2
    8960:	89810004 	addi	r6,r17,1024
    8964:	3081ffc8 	cmpgei	r2,r6,2047
    8968:	103f211e 	bne	r2,zero,85f0 <__divdf3+0x18c>
    896c:	9028977a 	slli	r20,r18,29
    8970:	900a927a 	slli	r5,r18,9
    8974:	30c1ffcc 	andi	r3,r6,2047
    8978:	a128b03a 	or	r20,r20,r4
    897c:	280ad33a 	srli	r5,r5,12
    8980:	003f0a06 	br	85ac <__divdf3+0x148>
    8984:	add2b03a 	or	r9,r21,r23
    8988:	48003e26 	beq	r9,zero,8a84 <__divdf3+0x620>
    898c:	a8008f26 	beq	r21,zero,8bcc <__divdf3+0x768>
    8990:	a809883a 	mov	r4,r21
    8994:	000a4780 	call	a478 <__clzsi2>
    8998:	117ffd44 	addi	r5,r2,-11
    899c:	01000744 	movi	r4,29
    89a0:	127ffe04 	addi	r9,r2,-8
    89a4:	2149c83a 	sub	r4,r4,r5
    89a8:	aa46983a 	sll	r3,r21,r9
    89ac:	b908d83a 	srl	r4,r23,r4
    89b0:	ba52983a 	sll	r9,r23,r9
    89b4:	20eab03a 	or	r21,r4,r3
    89b8:	1451883a 	add	r8,r2,r17
    89bc:	4440fcc4 	addi	r17,r8,1011
    89c0:	0007883a 	mov	r3,zero
    89c4:	003ed706 	br	8524 <__divdf3+0xc0>
    89c8:	8124b03a 	or	r18,r16,r4
    89cc:	2027883a 	mov	r19,r4
    89d0:	90002726 	beq	r18,zero,8a70 <__divdf3+0x60c>
    89d4:	80007326 	beq	r16,zero,8ba4 <__divdf3+0x740>
    89d8:	8009883a 	mov	r4,r16
    89dc:	000a4780 	call	a478 <__clzsi2>
    89e0:	113ffd44 	addi	r4,r2,-11
    89e4:	00c00744 	movi	r3,29
    89e8:	14bffe04 	addi	r18,r2,-8
    89ec:	1907c83a 	sub	r3,r3,r4
    89f0:	848a983a 	sll	r5,r16,r18
    89f4:	98c6d83a 	srl	r3,r19,r3
    89f8:	9ca8983a 	sll	r20,r19,r18
    89fc:	1964b03a 	or	r18,r3,r5
    8a00:	023f0344 	movi	r8,-1011
    8a04:	40a3c83a 	sub	r17,r8,r2
    8a08:	0021883a 	mov	r16,zero
    8a0c:	0039883a 	mov	fp,zero
    8a10:	003eb306 	br	84e0 <__divdf3+0x7c>
    8a14:	8124b03a 	or	r18,r16,r4
    8a18:	9000101e 	bne	r18,zero,8a5c <__divdf3+0x5f8>
    8a1c:	0029883a 	mov	r20,zero
    8a20:	04000204 	movi	r16,8
    8a24:	0441ffc4 	movi	r17,2047
    8a28:	07000084 	movi	fp,2
    8a2c:	003eac06 	br	84e0 <__divdf3+0x7c>
    8a30:	add2b03a 	or	r9,r21,r23
    8a34:	8c7e0044 	addi	r17,r17,-2047
    8a38:	4800041e 	bne	r9,zero,8a4c <__divdf3+0x5e8>
    8a3c:	84000094 	ori	r16,r16,2
    8a40:	002b883a 	mov	r21,zero
    8a44:	00c00084 	movi	r3,2
    8a48:	003eb606 	br	8524 <__divdf3+0xc0>
    8a4c:	840000d4 	ori	r16,r16,3
    8a50:	b813883a 	mov	r9,r23
    8a54:	00c000c4 	movi	r3,3
    8a58:	003eb206 	br	8524 <__divdf3+0xc0>
    8a5c:	8025883a 	mov	r18,r16
    8a60:	0441ffc4 	movi	r17,2047
    8a64:	04000304 	movi	r16,12
    8a68:	070000c4 	movi	fp,3
    8a6c:	003e9c06 	br	84e0 <__divdf3+0x7c>
    8a70:	0029883a 	mov	r20,zero
    8a74:	04000104 	movi	r16,4
    8a78:	0023883a 	mov	r17,zero
    8a7c:	07000044 	movi	fp,1
    8a80:	003e9706 	br	84e0 <__divdf3+0x7c>
    8a84:	84000054 	ori	r16,r16,1
    8a88:	002b883a 	mov	r21,zero
    8a8c:	00c00044 	movi	r3,1
    8a90:	003ea406 	br	8524 <__divdf3+0xc0>
    8a94:	01400434 	movhi	r5,16
    8a98:	000f883a 	mov	r7,zero
    8a9c:	297fffc4 	addi	r5,r5,-1
    8aa0:	053fffc4 	movi	r20,-1
    8aa4:	00c1ffc4 	movi	r3,2047
    8aa8:	003ec006 	br	85ac <__divdf3+0x148>
    8aac:	053fffc4 	movi	r20,-1
    8ab0:	01400044 	movi	r5,1
    8ab4:	298bc83a 	sub	r5,r5,r6
    8ab8:	28800e48 	cmpgei	r2,r5,57
    8abc:	103eb81e 	bne	r2,zero,85a0 <__divdf3+0x13c>
    8ac0:	28800808 	cmpgei	r2,r5,32
    8ac4:	1000651e 	bne	r2,zero,8c5c <__divdf3+0x7f8>
    8ac8:	8a010784 	addi	r8,r17,1054
    8acc:	9204983a 	sll	r2,r18,r8
    8ad0:	a146d83a 	srl	r3,r20,r5
    8ad4:	a210983a 	sll	r8,r20,r8
    8ad8:	914ad83a 	srl	r5,r18,r5
    8adc:	10e8b03a 	or	r20,r2,r3
    8ae0:	4010c03a 	cmpne	r8,r8,zero
    8ae4:	a228b03a 	or	r20,r20,r8
    8ae8:	a08001cc 	andi	r2,r20,7
    8aec:	10000726 	beq	r2,zero,8b0c <__divdf3+0x6a8>
    8af0:	a08003cc 	andi	r2,r20,15
    8af4:	10800120 	cmpeqi	r2,r2,4
    8af8:	1000041e 	bne	r2,zero,8b0c <__divdf3+0x6a8>
    8afc:	a0800104 	addi	r2,r20,4
    8b00:	1529803a 	cmpltu	r20,r2,r20
    8b04:	2d0b883a 	add	r5,r5,r20
    8b08:	1029883a 	mov	r20,r2
    8b0c:	2880202c 	andhi	r2,r5,128
    8b10:	10008c26 	beq	r2,zero,8d44 <__divdf3+0x8e0>
    8b14:	00c00044 	movi	r3,1
    8b18:	000b883a 	mov	r5,zero
    8b1c:	0029883a 	mov	r20,zero
    8b20:	003ea206 	br	85ac <__divdf3+0x148>
    8b24:	9080022c 	andhi	r2,r18,8
    8b28:	10000926 	beq	r2,zero,8b50 <__divdf3+0x6ec>
    8b2c:	a880022c 	andhi	r2,r21,8
    8b30:	1000071e 	bne	r2,zero,8b50 <__divdf3+0x6ec>
    8b34:	00800434 	movhi	r2,16
    8b38:	a9400234 	orhi	r5,r21,8
    8b3c:	10bfffc4 	addi	r2,r2,-1
    8b40:	288a703a 	and	r5,r5,r2
    8b44:	980f883a 	mov	r7,r19
    8b48:	4829883a 	mov	r20,r9
    8b4c:	003fd506 	br	8aa4 <__divdf3+0x640>
    8b50:	00800434 	movhi	r2,16
    8b54:	91400234 	orhi	r5,r18,8
    8b58:	10bfffc4 	addi	r2,r2,-1
    8b5c:	288a703a 	and	r5,r5,r2
    8b60:	b00f883a 	mov	r7,r22
    8b64:	003fcf06 	br	8aa4 <__divdf3+0x640>
    8b68:	183f7326 	beq	r3,zero,8938 <__divdf3+0x4d4>
    8b6c:	adad883a 	add	r22,r21,r22
    8b70:	a0bfffc4 	addi	r2,r20,-1
    8b74:	b5404a36 	bltu	r22,r21,8ca0 <__divdf3+0x83c>
    8b78:	b1006636 	bltu	r22,r4,8d14 <__divdf3+0x8b0>
    8b7c:	b1007a26 	beq	r22,r4,8d68 <__divdf3+0x904>
    8b80:	1029883a 	mov	r20,r2
    8b84:	003f6b06 	br	8934 <__divdf3+0x4d0>
    8b88:	a27ea436 	bltu	r20,r9,861c <__divdf3+0x1b8>
    8b8c:	903897fa 	slli	fp,r18,31
    8b90:	a004d07a 	srli	r2,r20,1
    8b94:	9020d07a 	srli	r16,r18,1
    8b98:	a02c97fa 	slli	r22,r20,31
    8b9c:	e0b8b03a 	or	fp,fp,r2
    8ba0:	003ea206 	br	862c <__divdf3+0x1c8>
    8ba4:	000a4780 	call	a478 <__clzsi2>
    8ba8:	11000544 	addi	r4,r2,21
    8bac:	20c00748 	cmpgei	r3,r4,29
    8bb0:	100b883a 	mov	r5,r2
    8bb4:	10800804 	addi	r2,r2,32
    8bb8:	183f8a26 	beq	r3,zero,89e4 <__divdf3+0x580>
    8bbc:	297ffe04 	addi	r5,r5,-8
    8bc0:	a164983a 	sll	r18,r20,r5
    8bc4:	0029883a 	mov	r20,zero
    8bc8:	003f8d06 	br	8a00 <__divdf3+0x59c>
    8bcc:	b809883a 	mov	r4,r23
    8bd0:	000a4780 	call	a478 <__clzsi2>
    8bd4:	11400544 	addi	r5,r2,21
    8bd8:	29000748 	cmpgei	r4,r5,29
    8bdc:	1007883a 	mov	r3,r2
    8be0:	10800804 	addi	r2,r2,32
    8be4:	203f6d26 	beq	r4,zero,899c <__divdf3+0x538>
    8be8:	18fffe04 	addi	r3,r3,-8
    8bec:	b8ea983a 	sll	r21,r23,r3
    8bf0:	0013883a 	mov	r9,zero
    8bf4:	003f7006 	br	89b8 <__divdf3+0x554>
    8bf8:	1d47883a 	add	r3,r3,r21
    8bfc:	40bfffc4 	addi	r2,r8,-1
    8c00:	1d403936 	bltu	r3,r21,8ce8 <__divdf3+0x884>
    8c04:	1d80382e 	bgeu	r3,r22,8ce8 <__divdf3+0x884>
    8c08:	423fff84 	addi	r8,r8,-2
    8c0c:	1d47883a 	add	r3,r3,r21
    8c10:	003f2206 	br	889c <__divdf3+0x438>
    8c14:	2549883a 	add	r4,r4,r21
    8c18:	30bfffc4 	addi	r2,r6,-1
    8c1c:	25403436 	bltu	r4,r21,8cf0 <__divdf3+0x88c>
    8c20:	2580332e 	bgeu	r4,r22,8cf0 <__divdf3+0x88c>
    8c24:	31bfff84 	addi	r6,r6,-2
    8c28:	2549883a 	add	r4,r4,r21
    8c2c:	003f0406 	br	8840 <__divdf3+0x3dc>
    8c30:	a9bee91e 	bne	r21,r6,87d8 <__divdf3+0x374>
    8c34:	b4fee836 	bltu	r22,r19,87d8 <__divdf3+0x374>
    8c38:	003ee506 	br	87d0 <__divdf3+0x36c>
    8c3c:	323ead2e 	bgeu	r6,r8,86f4 <__divdf3+0x290>
    8c40:	18ffff84 	addi	r3,r3,-2
    8c44:	354d883a 	add	r6,r6,r21
    8c48:	003eab06 	br	86f8 <__divdf3+0x294>
    8c4c:	243e912e 	bgeu	r4,r16,8694 <__divdf3+0x230>
    8c50:	94bfff84 	addi	r18,r18,-2
    8c54:	2549883a 	add	r4,r4,r21
    8c58:	003e8f06 	br	8698 <__divdf3+0x234>
    8c5c:	00fff844 	movi	r3,-31
    8c60:	1987c83a 	sub	r3,r3,r6
    8c64:	29400820 	cmpeqi	r5,r5,32
    8c68:	90c6d83a 	srl	r3,r18,r3
    8c6c:	2800031e 	bne	r5,zero,8c7c <__divdf3+0x818>
    8c70:	89410f84 	addi	r5,r17,1086
    8c74:	914a983a 	sll	r5,r18,r5
    8c78:	a168b03a 	or	r20,r20,r5
    8c7c:	a028c03a 	cmpne	r20,r20,zero
    8c80:	a0e8b03a 	or	r20,r20,r3
    8c84:	a48001cc 	andi	r18,r20,7
    8c88:	90002a1e 	bne	r18,zero,8d34 <__divdf3+0x8d0>
    8c8c:	000b883a 	mov	r5,zero
    8c90:	a028d0fa 	srli	r20,r20,3
    8c94:	0007883a 	mov	r3,zero
    8c98:	a4a8b03a 	or	r20,r20,r18
    8c9c:	003e4306 	br	85ac <__divdf3+0x148>
    8ca0:	1029883a 	mov	r20,r2
    8ca4:	b13f231e 	bne	r22,r4,8934 <__divdf3+0x4d0>
    8ca8:	1cff221e 	bne	r3,r19,8934 <__divdf3+0x4d0>
    8cac:	003f2206 	br	8938 <__divdf3+0x4d4>
    8cb0:	8980ffc4 	addi	r6,r17,1023
    8cb4:	01bf7d0e 	bge	zero,r6,8aac <__divdf3+0x648>
    8cb8:	0009883a 	mov	r4,zero
    8cbc:	05000044 	movi	r20,1
    8cc0:	9525883a 	add	r18,r18,r20
    8cc4:	003f2106 	br	894c <__divdf3+0x4e8>
    8cc8:	a08003cc 	andi	r2,r20,15
    8ccc:	10800118 	cmpnei	r2,r2,4
    8cd0:	103f1d26 	beq	r2,zero,8948 <__divdf3+0x4e4>
    8cd4:	a1000104 	addi	r4,r20,4
    8cd8:	00bffec4 	movi	r2,-5
    8cdc:	2008d0fa 	srli	r4,r4,3
    8ce0:	1529803a 	cmpltu	r20,r2,r20
    8ce4:	003ff606 	br	8cc0 <__divdf3+0x85c>
    8ce8:	1011883a 	mov	r8,r2
    8cec:	003eeb06 	br	889c <__divdf3+0x438>
    8cf0:	100d883a 	mov	r6,r2
    8cf4:	003ed206 	br	8840 <__divdf3+0x3dc>
    8cf8:	b0feb72e 	bgeu	r22,r3,87d8 <__divdf3+0x374>
    8cfc:	b4ed883a 	add	r22,r22,r19
    8d00:	b4c9803a 	cmpltu	r4,r22,r19
    8d04:	2549883a 	add	r4,r4,r21
    8d08:	94bfff84 	addi	r18,r18,-2
    8d0c:	310d883a 	add	r6,r6,r4
    8d10:	003eb206 	br	87dc <__divdf3+0x378>
    8d14:	9cc5883a 	add	r2,r19,r19
    8d18:	14e7803a 	cmpltu	r19,r2,r19
    8d1c:	9d6b883a 	add	r21,r19,r21
    8d20:	b56d883a 	add	r22,r22,r21
    8d24:	a53fff84 	addi	r20,r20,-2
    8d28:	1027883a 	mov	r19,r2
    8d2c:	b13fde26 	beq	r22,r4,8ca8 <__divdf3+0x844>
    8d30:	003f0006 	br	8934 <__divdf3+0x4d0>
    8d34:	a08003cc 	andi	r2,r20,15
    8d38:	10800118 	cmpnei	r2,r2,4
    8d3c:	000b883a 	mov	r5,zero
    8d40:	103f6e1e 	bne	r2,zero,8afc <__divdf3+0x698>
    8d44:	2804927a 	slli	r2,r5,9
    8d48:	2824977a 	slli	r18,r5,29
    8d4c:	100ad33a 	srli	r5,r2,12
    8d50:	003fcf06 	br	8c90 <__divdf3+0x82c>
    8d54:	00800434 	movhi	r2,16
    8d58:	91400234 	orhi	r5,r18,8
    8d5c:	10bfffc4 	addi	r2,r2,-1
    8d60:	288a703a 	and	r5,r5,r2
    8d64:	003f4f06 	br	8aa4 <__divdf3+0x640>
    8d68:	98ffea36 	bltu	r19,r3,8d14 <__divdf3+0x8b0>
    8d6c:	1029883a 	mov	r20,r2
    8d70:	1cfef01e 	bne	r3,r19,8934 <__divdf3+0x4d0>
    8d74:	003ef006 	br	8938 <__divdf3+0x4d4>

00008d78 <__eqdf2>:
    8d78:	2810d53a 	srli	r8,r5,20
    8d7c:	3806d53a 	srli	r3,r7,20
    8d80:	00800434 	movhi	r2,16
    8d84:	4201ffcc 	andi	r8,r8,2047
    8d88:	10bfffc4 	addi	r2,r2,-1
    8d8c:	4241ffd8 	cmpnei	r9,r8,2047
    8d90:	2814d7fa 	srli	r10,r5,31
    8d94:	3816d7fa 	srli	r11,r7,31
    8d98:	288a703a 	and	r5,r5,r2
    8d9c:	388e703a 	and	r7,r7,r2
    8da0:	1881ffcc 	andi	r2,r3,2047
    8da4:	48000626 	beq	r9,zero,8dc0 <__eqdf2+0x48>
    8da8:	10c1ffe0 	cmpeqi	r3,r2,2047
    8dac:	1800021e 	bne	r3,zero,8db8 <__eqdf2+0x40>
    8db0:	4080011e 	bne	r8,r2,8db8 <__eqdf2+0x40>
    8db4:	29c00826 	beq	r5,r7,8dd8 <__eqdf2+0x60>
    8db8:	00800044 	movi	r2,1
    8dbc:	f800283a 	ret
    8dc0:	2906b03a 	or	r3,r5,r4
    8dc4:	183ffc1e 	bne	r3,zero,8db8 <__eqdf2+0x40>
    8dc8:	1081ffd8 	cmpnei	r2,r2,2047
    8dcc:	103ffa1e 	bne	r2,zero,8db8 <__eqdf2+0x40>
    8dd0:	398eb03a 	or	r7,r7,r6
    8dd4:	383ff81e 	bne	r7,zero,8db8 <__eqdf2+0x40>
    8dd8:	21bff71e 	bne	r4,r6,8db8 <__eqdf2+0x40>
    8ddc:	52c00426 	beq	r10,r11,8df0 <__eqdf2+0x78>
    8de0:	403ff51e 	bne	r8,zero,8db8 <__eqdf2+0x40>
    8de4:	290ab03a 	or	r5,r5,r4
    8de8:	2804c03a 	cmpne	r2,r5,zero
    8dec:	f800283a 	ret
    8df0:	0005883a 	mov	r2,zero
    8df4:	f800283a 	ret

00008df8 <__gedf2>:
    8df8:	2810d53a 	srli	r8,r5,20
    8dfc:	3812d53a 	srli	r9,r7,20
    8e00:	00c00434 	movhi	r3,16
    8e04:	4201ffcc 	andi	r8,r8,2047
    8e08:	18ffffc4 	addi	r3,r3,-1
    8e0c:	4281ffd8 	cmpnei	r10,r8,2047
    8e10:	2816d7fa 	srli	r11,r5,31
    8e14:	3804d7fa 	srli	r2,r7,31
    8e18:	28ca703a 	and	r5,r5,r3
    8e1c:	38ce703a 	and	r7,r7,r3
    8e20:	48c1ffcc 	andi	r3,r9,2047
    8e24:	50000a26 	beq	r10,zero,8e50 <__gedf2+0x58>
    8e28:	1a41ffd8 	cmpnei	r9,r3,2047
    8e2c:	48000c26 	beq	r9,zero,8e60 <__gedf2+0x68>
    8e30:	4000171e 	bne	r8,zero,8e90 <__gedf2+0x98>
    8e34:	2912b03a 	or	r9,r5,r4
    8e38:	1800121e 	bne	r3,zero,8e84 <__gedf2+0x8c>
    8e3c:	3994b03a 	or	r10,r7,r6
    8e40:	5000101e 	bne	r10,zero,8e84 <__gedf2+0x8c>
    8e44:	48000a1e 	bne	r9,zero,8e70 <__gedf2+0x78>
    8e48:	0005883a 	mov	r2,zero
    8e4c:	f800283a 	ret
    8e50:	2912b03a 	or	r9,r5,r4
    8e54:	48001d1e 	bne	r9,zero,8ecc <__gedf2+0xd4>
    8e58:	1a41ffe0 	cmpeqi	r9,r3,2047
    8e5c:	48000c26 	beq	r9,zero,8e90 <__gedf2+0x98>
    8e60:	3992b03a 	or	r9,r7,r6
    8e64:	4800191e 	bne	r9,zero,8ecc <__gedf2+0xd4>
    8e68:	40000526 	beq	r8,zero,8e80 <__gedf2+0x88>
    8e6c:	58800c26 	beq	r11,r2,8ea0 <__gedf2+0xa8>
    8e70:	00800044 	movi	r2,1
    8e74:	58000526 	beq	r11,zero,8e8c <__gedf2+0x94>
    8e78:	00bfffc4 	movi	r2,-1
    8e7c:	f800283a 	ret
    8e80:	2912b03a 	or	r9,r5,r4
    8e84:	483ff91e 	bne	r9,zero,8e6c <__gedf2+0x74>
    8e88:	103ffb26 	beq	r2,zero,8e78 <__gedf2+0x80>
    8e8c:	f800283a 	ret
    8e90:	183ff61e 	bne	r3,zero,8e6c <__gedf2+0x74>
    8e94:	3992b03a 	or	r9,r7,r6
    8e98:	483ff41e 	bne	r9,zero,8e6c <__gedf2+0x74>
    8e9c:	003ff406 	br	8e70 <__gedf2+0x78>
    8ea0:	1a000716 	blt	r3,r8,8ec0 <__gedf2+0xc8>
    8ea4:	40fff816 	blt	r8,r3,8e88 <__gedf2+0x90>
    8ea8:	397ff136 	bltu	r7,r5,8e70 <__gedf2+0x78>
    8eac:	29c00926 	beq	r5,r7,8ed4 <__gedf2+0xdc>
    8eb0:	29ffe52e 	bgeu	r5,r7,8e48 <__gedf2+0x50>
    8eb4:	583ff026 	beq	r11,zero,8e78 <__gedf2+0x80>
    8eb8:	5805883a 	mov	r2,r11
    8ebc:	f800283a 	ret
    8ec0:	103fed1e 	bne	r2,zero,8e78 <__gedf2+0x80>
    8ec4:	00800044 	movi	r2,1
    8ec8:	f800283a 	ret
    8ecc:	00bfff84 	movi	r2,-2
    8ed0:	f800283a 	ret
    8ed4:	313fe636 	bltu	r6,r4,8e70 <__gedf2+0x78>
    8ed8:	21bfdb2e 	bgeu	r4,r6,8e48 <__gedf2+0x50>
    8edc:	003ff506 	br	8eb4 <__gedf2+0xbc>

00008ee0 <__ledf2>:
    8ee0:	2810d53a 	srli	r8,r5,20
    8ee4:	3812d53a 	srli	r9,r7,20
    8ee8:	00c00434 	movhi	r3,16
    8eec:	4201ffcc 	andi	r8,r8,2047
    8ef0:	18ffffc4 	addi	r3,r3,-1
    8ef4:	4281ffd8 	cmpnei	r10,r8,2047
    8ef8:	2816d7fa 	srli	r11,r5,31
    8efc:	3804d7fa 	srli	r2,r7,31
    8f00:	28ca703a 	and	r5,r5,r3
    8f04:	38ce703a 	and	r7,r7,r3
    8f08:	48c1ffcc 	andi	r3,r9,2047
    8f0c:	50000a26 	beq	r10,zero,8f38 <__ledf2+0x58>
    8f10:	1a41ffd8 	cmpnei	r9,r3,2047
    8f14:	48000c26 	beq	r9,zero,8f48 <__ledf2+0x68>
    8f18:	4000191e 	bne	r8,zero,8f80 <__ledf2+0xa0>
    8f1c:	2912b03a 	or	r9,r5,r4
    8f20:	18000d1e 	bne	r3,zero,8f58 <__ledf2+0x78>
    8f24:	3994b03a 	or	r10,r7,r6
    8f28:	50000b1e 	bne	r10,zero,8f58 <__ledf2+0x78>
    8f2c:	48000c1e 	bne	r9,zero,8f60 <__ledf2+0x80>
    8f30:	0005883a 	mov	r2,zero
    8f34:	f800283a 	ret
    8f38:	2912b03a 	or	r9,r5,r4
    8f3c:	48000c1e 	bne	r9,zero,8f70 <__ledf2+0x90>
    8f40:	1a41ffe0 	cmpeqi	r9,r3,2047
    8f44:	48000e26 	beq	r9,zero,8f80 <__ledf2+0xa0>
    8f48:	3992b03a 	or	r9,r7,r6
    8f4c:	4800081e 	bne	r9,zero,8f70 <__ledf2+0x90>
    8f50:	4000021e 	bne	r8,zero,8f5c <__ledf2+0x7c>
    8f54:	2912b03a 	or	r9,r5,r4
    8f58:	48000726 	beq	r9,zero,8f78 <__ledf2+0x98>
    8f5c:	58800c26 	beq	r11,r2,8f90 <__ledf2+0xb0>
    8f60:	00800044 	movi	r2,1
    8f64:	58000526 	beq	r11,zero,8f7c <__ledf2+0x9c>
    8f68:	00bfffc4 	movi	r2,-1
    8f6c:	f800283a 	ret
    8f70:	00800084 	movi	r2,2
    8f74:	f800283a 	ret
    8f78:	103ffb26 	beq	r2,zero,8f68 <__ledf2+0x88>
    8f7c:	f800283a 	ret
    8f80:	183ff61e 	bne	r3,zero,8f5c <__ledf2+0x7c>
    8f84:	3992b03a 	or	r9,r7,r6
    8f88:	483ff41e 	bne	r9,zero,8f5c <__ledf2+0x7c>
    8f8c:	003ff406 	br	8f60 <__ledf2+0x80>
    8f90:	1a00030e 	bge	r3,r8,8fa0 <__ledf2+0xc0>
    8f94:	103ff41e 	bne	r2,zero,8f68 <__ledf2+0x88>
    8f98:	00800044 	movi	r2,1
    8f9c:	f800283a 	ret
    8fa0:	40fff516 	blt	r8,r3,8f78 <__ledf2+0x98>
    8fa4:	397fee36 	bltu	r7,r5,8f60 <__ledf2+0x80>
    8fa8:	29c00426 	beq	r5,r7,8fbc <__ledf2+0xdc>
    8fac:	29ffe02e 	bgeu	r5,r7,8f30 <__ledf2+0x50>
    8fb0:	583fed26 	beq	r11,zero,8f68 <__ledf2+0x88>
    8fb4:	5805883a 	mov	r2,r11
    8fb8:	f800283a 	ret
    8fbc:	313fe836 	bltu	r6,r4,8f60 <__ledf2+0x80>
    8fc0:	21bfdb2e 	bgeu	r4,r6,8f30 <__ledf2+0x50>
    8fc4:	003ffa06 	br	8fb0 <__ledf2+0xd0>

00008fc8 <__muldf3>:
    8fc8:	2810d53a 	srli	r8,r5,20
    8fcc:	defff004 	addi	sp,sp,-64
    8fd0:	00800434 	movhi	r2,16
    8fd4:	df000e15 	stw	fp,56(sp)
    8fd8:	dd000a15 	stw	r20,40(sp)
    8fdc:	dcc00915 	stw	r19,36(sp)
    8fe0:	dc400715 	stw	r17,28(sp)
    8fe4:	10bfffc4 	addi	r2,r2,-1
    8fe8:	dfc00f15 	stw	ra,60(sp)
    8fec:	ddc00d15 	stw	r23,52(sp)
    8ff0:	dd800c15 	stw	r22,48(sp)
    8ff4:	dd400b15 	stw	r21,44(sp)
    8ff8:	dc800815 	stw	r18,32(sp)
    8ffc:	dc000615 	stw	r16,24(sp)
    9000:	4201ffcc 	andi	r8,r8,2047
    9004:	2828d7fa 	srli	r20,r5,31
    9008:	2023883a 	mov	r17,r4
    900c:	3039883a 	mov	fp,r6
    9010:	28a6703a 	and	r19,r5,r2
    9014:	40013426 	beq	r8,zero,94e8 <__muldf3+0x520>
    9018:	4081ffe0 	cmpeqi	r2,r8,2047
    901c:	1001461e 	bne	r2,zero,9538 <__muldf3+0x570>
    9020:	980a90fa 	slli	r5,r19,3
    9024:	2026d77a 	srli	r19,r4,29
    9028:	202490fa 	slli	r18,r4,3
    902c:	423f0044 	addi	r8,r8,-1023
    9030:	9966b03a 	or	r19,r19,r5
    9034:	9cc02034 	orhi	r19,r19,128
    9038:	002b883a 	mov	r21,zero
    903c:	002d883a 	mov	r22,zero
    9040:	3804d53a 	srli	r2,r7,20
    9044:	00c00434 	movhi	r3,16
    9048:	18ffffc4 	addi	r3,r3,-1
    904c:	1081ffcc 	andi	r2,r2,2047
    9050:	382ed7fa 	srli	r23,r7,31
    9054:	38e0703a 	and	r16,r7,r3
    9058:	10011026 	beq	r2,zero,949c <__muldf3+0x4d4>
    905c:	10c1ffe0 	cmpeqi	r3,r2,2047
    9060:	18013c1e 	bne	r3,zero,9554 <__muldf3+0x58c>
    9064:	e008d77a 	srli	r4,fp,29
    9068:	802090fa 	slli	r16,r16,3
    906c:	e02290fa 	slli	r17,fp,3
    9070:	10bf0044 	addi	r2,r2,-1023
    9074:	2420b03a 	or	r16,r4,r16
    9078:	84002034 	orhi	r16,r16,128
    907c:	4091883a 	add	r8,r8,r2
    9080:	0009883a 	mov	r4,zero
    9084:	a8800428 	cmpgeui	r2,r21,16
    9088:	a5ccf03a 	xor	r6,r20,r23
    908c:	41c00044 	addi	r7,r8,1
    9090:	1000371e 	bne	r2,zero,9170 <__muldf3+0x1a8>
    9094:	a80490ba 	slli	r2,r21,2
    9098:	00c00074 	movhi	r3,1
    909c:	10c7883a 	add	r3,r2,r3
    90a0:	18a42a17 	ldw	r2,-28504(r3)
    90a4:	1000683a 	jmp	r2
    90a8:	00009170 	cmpltui	zero,zero,581
    90ac:	000090ec 	andhi	zero,zero,579
    90b0:	000090ec 	andhi	zero,zero,579
    90b4:	000090e8 	cmpgeui	zero,zero,579
    90b8:	000090f8 	rdprs	zero,zero,579
    90bc:	000090f8 	rdprs	zero,zero,579
    90c0:	000095c8 	cmpgei	zero,zero,599
    90c4:	000090e8 	cmpgeui	zero,zero,579
    90c8:	000090f8 	rdprs	zero,zero,579
    90cc:	000095c8 	cmpgei	zero,zero,599
    90d0:	000090f8 	rdprs	zero,zero,579
    90d4:	000090e8 	cmpgeui	zero,zero,579
    90d8:	00009570 	cmpltui	zero,zero,597
    90dc:	00009570 	cmpltui	zero,zero,597
    90e0:	00009570 	cmpltui	zero,zero,597
    90e4:	00009654 	movui	zero,601
    90e8:	b80d883a 	mov	r6,r23
    90ec:	8027883a 	mov	r19,r16
    90f0:	8825883a 	mov	r18,r17
    90f4:	202d883a 	mov	r22,r4
    90f8:	b08000a0 	cmpeqi	r2,r22,2
    90fc:	1000181e 	bne	r2,zero,9160 <__muldf3+0x198>
    9100:	b08000e0 	cmpeqi	r2,r22,3
    9104:	1001961e 	bne	r2,zero,9760 <__muldf3+0x798>
    9108:	b0800060 	cmpeqi	r2,r22,1
    910c:	1000c926 	beq	r2,zero,9434 <__muldf3+0x46c>
    9110:	0007883a 	mov	r3,zero
    9114:	0027883a 	mov	r19,zero
    9118:	0025883a 	mov	r18,zero
    911c:	1806953a 	slli	r3,r3,20
    9120:	300c97fa 	slli	r6,r6,31
    9124:	9005883a 	mov	r2,r18
    9128:	1cc6b03a 	or	r3,r3,r19
    912c:	1986b03a 	or	r3,r3,r6
    9130:	dfc00f17 	ldw	ra,60(sp)
    9134:	df000e17 	ldw	fp,56(sp)
    9138:	ddc00d17 	ldw	r23,52(sp)
    913c:	dd800c17 	ldw	r22,48(sp)
    9140:	dd400b17 	ldw	r21,44(sp)
    9144:	dd000a17 	ldw	r20,40(sp)
    9148:	dcc00917 	ldw	r19,36(sp)
    914c:	dc800817 	ldw	r18,32(sp)
    9150:	dc400717 	ldw	r17,28(sp)
    9154:	dc000617 	ldw	r16,24(sp)
    9158:	dec01004 	addi	sp,sp,64
    915c:	f800283a 	ret
    9160:	00c1ffc4 	movi	r3,2047
    9164:	0027883a 	mov	r19,zero
    9168:	0025883a 	mov	r18,zero
    916c:	003feb06 	br	911c <__muldf3+0x154>
    9170:	9028d43a 	srli	r20,r18,16
    9174:	8f3fffcc 	andi	fp,r17,65535
    9178:	957fffcc 	andi	r21,r18,65535
    917c:	a80b883a 	mov	r5,r21
    9180:	e009883a 	mov	r4,fp
    9184:	d9800315 	stw	r6,12(sp)
    9188:	da000215 	stw	r8,8(sp)
    918c:	d9c00115 	stw	r7,4(sp)
    9190:	8822d43a 	srli	r17,r17,16
    9194:	00079b80 	call	79b8 <__mulsi3>
    9198:	e00b883a 	mov	r5,fp
    919c:	a009883a 	mov	r4,r20
    91a0:	102d883a 	mov	r22,r2
    91a4:	00079b80 	call	79b8 <__mulsi3>
    91a8:	880b883a 	mov	r5,r17
    91ac:	a009883a 	mov	r4,r20
    91b0:	102f883a 	mov	r23,r2
    91b4:	00079b80 	call	79b8 <__mulsi3>
    91b8:	a80b883a 	mov	r5,r21
    91bc:	8809883a 	mov	r4,r17
    91c0:	d8800015 	stw	r2,0(sp)
    91c4:	00079b80 	call	79b8 <__mulsi3>
    91c8:	b006d43a 	srli	r3,r22,16
    91cc:	15e5883a 	add	r18,r2,r23
    91d0:	d9c00117 	ldw	r7,4(sp)
    91d4:	1c87883a 	add	r3,r3,r18
    91d8:	da000217 	ldw	r8,8(sp)
    91dc:	d9800317 	ldw	r6,12(sp)
    91e0:	1dc0042e 	bgeu	r3,r23,91f4 <__muldf3+0x22c>
    91e4:	d9000017 	ldw	r4,0(sp)
    91e8:	00800074 	movhi	r2,1
    91ec:	2085883a 	add	r2,r4,r2
    91f0:	d8800015 	stw	r2,0(sp)
    91f4:	1804943a 	slli	r2,r3,16
    91f8:	85ffffcc 	andi	r23,r16,65535
    91fc:	b5bfffcc 	andi	r22,r22,65535
    9200:	1585883a 	add	r2,r2,r22
    9204:	a80b883a 	mov	r5,r21
    9208:	b809883a 	mov	r4,r23
    920c:	1824d43a 	srli	r18,r3,16
    9210:	d9800515 	stw	r6,20(sp)
    9214:	da000415 	stw	r8,16(sp)
    9218:	d9c00315 	stw	r7,12(sp)
    921c:	8020d43a 	srli	r16,r16,16
    9220:	d8800115 	stw	r2,4(sp)
    9224:	00079b80 	call	79b8 <__mulsi3>
    9228:	a009883a 	mov	r4,r20
    922c:	b80b883a 	mov	r5,r23
    9230:	d8800215 	stw	r2,8(sp)
    9234:	00079b80 	call	79b8 <__mulsi3>
    9238:	a009883a 	mov	r4,r20
    923c:	800b883a 	mov	r5,r16
    9240:	102d883a 	mov	r22,r2
    9244:	00079b80 	call	79b8 <__mulsi3>
    9248:	a80b883a 	mov	r5,r21
    924c:	8009883a 	mov	r4,r16
    9250:	1029883a 	mov	r20,r2
    9254:	00079b80 	call	79b8 <__mulsi3>
    9258:	da800217 	ldw	r10,8(sp)
    925c:	1585883a 	add	r2,r2,r22
    9260:	d9c00317 	ldw	r7,12(sp)
    9264:	5006d43a 	srli	r3,r10,16
    9268:	da000417 	ldw	r8,16(sp)
    926c:	d9800517 	ldw	r6,20(sp)
    9270:	1887883a 	add	r3,r3,r2
    9274:	1d80022e 	bgeu	r3,r22,9280 <__muldf3+0x2b8>
    9278:	00800074 	movhi	r2,1
    927c:	a0a9883a 	add	r20,r20,r2
    9280:	1804d43a 	srli	r2,r3,16
    9284:	1806943a 	slli	r3,r3,16
    9288:	982cd43a 	srli	r22,r19,16
    928c:	9d7fffcc 	andi	r21,r19,65535
    9290:	e009883a 	mov	r4,fp
    9294:	54ffffcc 	andi	r19,r10,65535
    9298:	a80b883a 	mov	r5,r21
    929c:	1ce7883a 	add	r19,r3,r19
    92a0:	d9800515 	stw	r6,20(sp)
    92a4:	da000415 	stw	r8,16(sp)
    92a8:	d9c00315 	stw	r7,12(sp)
    92ac:	1529883a 	add	r20,r2,r20
    92b0:	00079b80 	call	79b8 <__mulsi3>
    92b4:	e00b883a 	mov	r5,fp
    92b8:	b009883a 	mov	r4,r22
    92bc:	d8800215 	stw	r2,8(sp)
    92c0:	00079b80 	call	79b8 <__mulsi3>
    92c4:	8809883a 	mov	r4,r17
    92c8:	b00b883a 	mov	r5,r22
    92cc:	1039883a 	mov	fp,r2
    92d0:	00079b80 	call	79b8 <__mulsi3>
    92d4:	8809883a 	mov	r4,r17
    92d8:	a80b883a 	mov	r5,r21
    92dc:	1023883a 	mov	r17,r2
    92e0:	00079b80 	call	79b8 <__mulsi3>
    92e4:	d8c00217 	ldw	r3,8(sp)
    92e8:	1705883a 	add	r2,r2,fp
    92ec:	d9c00317 	ldw	r7,12(sp)
    92f0:	1808d43a 	srli	r4,r3,16
    92f4:	da000417 	ldw	r8,16(sp)
    92f8:	d9800517 	ldw	r6,20(sp)
    92fc:	2089883a 	add	r4,r4,r2
    9300:	94e5883a 	add	r18,r18,r19
    9304:	2700022e 	bgeu	r4,fp,9310 <__muldf3+0x348>
    9308:	00800074 	movhi	r2,1
    930c:	88a3883a 	add	r17,r17,r2
    9310:	2004d43a 	srli	r2,r4,16
    9314:	2038943a 	slli	fp,r4,16
    9318:	18ffffcc 	andi	r3,r3,65535
    931c:	b809883a 	mov	r4,r23
    9320:	a80b883a 	mov	r5,r21
    9324:	d9800415 	stw	r6,16(sp)
    9328:	da000315 	stw	r8,12(sp)
    932c:	d9c00215 	stw	r7,8(sp)
    9330:	e0f9883a 	add	fp,fp,r3
    9334:	1463883a 	add	r17,r2,r17
    9338:	00079b80 	call	79b8 <__mulsi3>
    933c:	b80b883a 	mov	r5,r23
    9340:	b009883a 	mov	r4,r22
    9344:	102f883a 	mov	r23,r2
    9348:	00079b80 	call	79b8 <__mulsi3>
    934c:	b00b883a 	mov	r5,r22
    9350:	8009883a 	mov	r4,r16
    9354:	102d883a 	mov	r22,r2
    9358:	00079b80 	call	79b8 <__mulsi3>
    935c:	a80b883a 	mov	r5,r21
    9360:	8009883a 	mov	r4,r16
    9364:	1021883a 	mov	r16,r2
    9368:	00079b80 	call	79b8 <__mulsi3>
    936c:	b80ad43a 	srli	r5,r23,16
    9370:	1585883a 	add	r2,r2,r22
    9374:	d9c00217 	ldw	r7,8(sp)
    9378:	288b883a 	add	r5,r5,r2
    937c:	da000317 	ldw	r8,12(sp)
    9380:	d9800417 	ldw	r6,16(sp)
    9384:	2d80022e 	bgeu	r5,r22,9390 <__muldf3+0x3c8>
    9388:	00800074 	movhi	r2,1
    938c:	80a1883a 	add	r16,r16,r2
    9390:	2806943a 	slli	r3,r5,16
    9394:	d8800017 	ldw	r2,0(sp)
    9398:	bdffffcc 	andi	r23,r23,65535
    939c:	1dc7883a 	add	r3,r3,r23
    93a0:	90ab883a 	add	r21,r18,r2
    93a4:	acd5803a 	cmpltu	r10,r21,r19
    93a8:	1d07883a 	add	r3,r3,r20
    93ac:	af2b883a 	add	r21,r21,fp
    93b0:	1a97883a 	add	r11,r3,r10
    93b4:	af09803a 	cmpltu	r4,r21,fp
    93b8:	2826d43a 	srli	r19,r5,16
    93bc:	5c53883a 	add	r9,r11,r17
    93c0:	4905883a 	add	r2,r9,r4
    93c4:	1d07803a 	cmpltu	r3,r3,r20
    93c8:	5a95803a 	cmpltu	r10,r11,r10
    93cc:	1a86b03a 	or	r3,r3,r10
    93d0:	1109803a 	cmpltu	r4,r2,r4
    93d4:	4c53803a 	cmpltu	r9,r9,r17
    93d8:	1ce7883a 	add	r19,r3,r19
    93dc:	4908b03a 	or	r4,r9,r4
    93e0:	a824927a 	slli	r18,r21,9
    93e4:	d8c00117 	ldw	r3,4(sp)
    93e8:	9927883a 	add	r19,r19,r4
    93ec:	9c27883a 	add	r19,r19,r16
    93f0:	9826927a 	slli	r19,r19,9
    93f4:	a82ad5fa 	srli	r21,r21,23
    93f8:	100ad5fa 	srli	r5,r2,23
    93fc:	90e4b03a 	or	r18,r18,r3
    9400:	1004927a 	slli	r2,r2,9
    9404:	9024c03a 	cmpne	r18,r18,zero
    9408:	9564b03a 	or	r18,r18,r21
    940c:	98c0402c 	andhi	r3,r19,256
    9410:	90a4b03a 	or	r18,r18,r2
    9414:	9966b03a 	or	r19,r19,r5
    9418:	1800b626 	beq	r3,zero,96f4 <__muldf3+0x72c>
    941c:	9006d07a 	srli	r3,r18,1
    9420:	980497fa 	slli	r2,r19,31
    9424:	9480004c 	andi	r18,r18,1
    9428:	9826d07a 	srli	r19,r19,1
    942c:	1c86b03a 	or	r3,r3,r18
    9430:	18a4b03a 	or	r18,r3,r2
    9434:	3900ffc4 	addi	r4,r7,1023
    9438:	0100690e 	bge	zero,r4,95e0 <__muldf3+0x618>
    943c:	908001cc 	andi	r2,r18,7
    9440:	10000726 	beq	r2,zero,9460 <__muldf3+0x498>
    9444:	908003cc 	andi	r2,r18,15
    9448:	10800120 	cmpeqi	r2,r2,4
    944c:	1000041e 	bne	r2,zero,9460 <__muldf3+0x498>
    9450:	90800104 	addi	r2,r18,4
    9454:	14a5803a 	cmpltu	r18,r2,r18
    9458:	9ca7883a 	add	r19,r19,r18
    945c:	1025883a 	mov	r18,r2
    9460:	9880402c 	andhi	r2,r19,256
    9464:	10000426 	beq	r2,zero,9478 <__muldf3+0x4b0>
    9468:	00bfc034 	movhi	r2,65280
    946c:	10bfffc4 	addi	r2,r2,-1
    9470:	98a6703a 	and	r19,r19,r2
    9474:	39010004 	addi	r4,r7,1024
    9478:	2081ffc8 	cmpgei	r2,r4,2047
    947c:	103f381e 	bne	r2,zero,9160 <__muldf3+0x198>
    9480:	9804977a 	slli	r2,r19,29
    9484:	9024d0fa 	srli	r18,r18,3
    9488:	9826927a 	slli	r19,r19,9
    948c:	20c1ffcc 	andi	r3,r4,2047
    9490:	14a4b03a 	or	r18,r2,r18
    9494:	9826d33a 	srli	r19,r19,12
    9498:	003f2006 	br	911c <__muldf3+0x154>
    949c:	8722b03a 	or	r17,r16,fp
    94a0:	88004526 	beq	r17,zero,95b8 <__muldf3+0x5f0>
    94a4:	da000015 	stw	r8,0(sp)
    94a8:	80008626 	beq	r16,zero,96c4 <__muldf3+0x6fc>
    94ac:	8009883a 	mov	r4,r16
    94b0:	000a4780 	call	a478 <__clzsi2>
    94b4:	da000017 	ldw	r8,0(sp)
    94b8:	117ffd44 	addi	r5,r2,-11
    94bc:	01000744 	movi	r4,29
    94c0:	147ffe04 	addi	r17,r2,-8
    94c4:	2149c83a 	sub	r4,r4,r5
    94c8:	8460983a 	sll	r16,r16,r17
    94cc:	e108d83a 	srl	r4,fp,r4
    94d0:	e462983a 	sll	r17,fp,r17
    94d4:	2420b03a 	or	r16,r4,r16
    94d8:	4091c83a 	sub	r8,r8,r2
    94dc:	423f0344 	addi	r8,r8,-1011
    94e0:	0009883a 	mov	r4,zero
    94e4:	003ee706 	br	9084 <__muldf3+0xbc>
    94e8:	9924b03a 	or	r18,r19,r4
    94ec:	90002d26 	beq	r18,zero,95a4 <__muldf3+0x5dc>
    94f0:	d9c00015 	stw	r7,0(sp)
    94f4:	98006826 	beq	r19,zero,9698 <__muldf3+0x6d0>
    94f8:	9809883a 	mov	r4,r19
    94fc:	000a4780 	call	a478 <__clzsi2>
    9500:	d9c00017 	ldw	r7,0(sp)
    9504:	113ffd44 	addi	r4,r2,-11
    9508:	00c00744 	movi	r3,29
    950c:	14bffe04 	addi	r18,r2,-8
    9510:	1907c83a 	sub	r3,r3,r4
    9514:	9ca6983a 	sll	r19,r19,r18
    9518:	88c6d83a 	srl	r3,r17,r3
    951c:	8ca4983a 	sll	r18,r17,r18
    9520:	1ce6b03a 	or	r19,r3,r19
    9524:	023f0344 	movi	r8,-1011
    9528:	4091c83a 	sub	r8,r8,r2
    952c:	002b883a 	mov	r21,zero
    9530:	002d883a 	mov	r22,zero
    9534:	003ec206 	br	9040 <__muldf3+0x78>
    9538:	9924b03a 	or	r18,r19,r4
    953c:	9000141e 	bne	r18,zero,9590 <__muldf3+0x5c8>
    9540:	0027883a 	mov	r19,zero
    9544:	05400204 	movi	r21,8
    9548:	0201ffc4 	movi	r8,2047
    954c:	05800084 	movi	r22,2
    9550:	003ebb06 	br	9040 <__muldf3+0x78>
    9554:	8722b03a 	or	r17,r16,fp
    9558:	4201ffc4 	addi	r8,r8,2047
    955c:	8800081e 	bne	r17,zero,9580 <__muldf3+0x5b8>
    9560:	ad400094 	ori	r21,r21,2
    9564:	0021883a 	mov	r16,zero
    9568:	01000084 	movi	r4,2
    956c:	003ec506 	br	9084 <__muldf3+0xbc>
    9570:	b08000a0 	cmpeqi	r2,r22,2
    9574:	a00d883a 	mov	r6,r20
    9578:	103ee126 	beq	r2,zero,9100 <__muldf3+0x138>
    957c:	003ef806 	br	9160 <__muldf3+0x198>
    9580:	ad4000d4 	ori	r21,r21,3
    9584:	e023883a 	mov	r17,fp
    9588:	010000c4 	movi	r4,3
    958c:	003ebd06 	br	9084 <__muldf3+0xbc>
    9590:	2025883a 	mov	r18,r4
    9594:	05400304 	movi	r21,12
    9598:	0201ffc4 	movi	r8,2047
    959c:	058000c4 	movi	r22,3
    95a0:	003ea706 	br	9040 <__muldf3+0x78>
    95a4:	0027883a 	mov	r19,zero
    95a8:	05400104 	movi	r21,4
    95ac:	0011883a 	mov	r8,zero
    95b0:	05800044 	movi	r22,1
    95b4:	003ea206 	br	9040 <__muldf3+0x78>
    95b8:	ad400054 	ori	r21,r21,1
    95bc:	0021883a 	mov	r16,zero
    95c0:	01000044 	movi	r4,1
    95c4:	003eaf06 	br	9084 <__muldf3+0xbc>
    95c8:	04c00434 	movhi	r19,16
    95cc:	000d883a 	mov	r6,zero
    95d0:	9cffffc4 	addi	r19,r19,-1
    95d4:	04bfffc4 	movi	r18,-1
    95d8:	00c1ffc4 	movi	r3,2047
    95dc:	003ecf06 	br	911c <__muldf3+0x154>
    95e0:	00800044 	movi	r2,1
    95e4:	1105c83a 	sub	r2,r2,r4
    95e8:	10c00e48 	cmpgei	r3,r2,57
    95ec:	183ec81e 	bne	r3,zero,9110 <__muldf3+0x148>
    95f0:	10c00808 	cmpgei	r3,r2,32
    95f4:	1800411e 	bne	r3,zero,96fc <__muldf3+0x734>
    95f8:	39c10784 	addi	r7,r7,1054
    95fc:	99c6983a 	sll	r3,r19,r7
    9600:	9088d83a 	srl	r4,r18,r2
    9604:	91ce983a 	sll	r7,r18,r7
    9608:	98a6d83a 	srl	r19,r19,r2
    960c:	1904b03a 	or	r2,r3,r4
    9610:	3824c03a 	cmpne	r18,r7,zero
    9614:	1484b03a 	or	r2,r2,r18
    9618:	10c001cc 	andi	r3,r2,7
    961c:	18000726 	beq	r3,zero,963c <__muldf3+0x674>
    9620:	10c003cc 	andi	r3,r2,15
    9624:	18c00120 	cmpeqi	r3,r3,4
    9628:	1800041e 	bne	r3,zero,963c <__muldf3+0x674>
    962c:	10c00104 	addi	r3,r2,4
    9630:	1885803a 	cmpltu	r2,r3,r2
    9634:	98a7883a 	add	r19,r19,r2
    9638:	1805883a 	mov	r2,r3
    963c:	98c0202c 	andhi	r3,r19,128
    9640:	18004326 	beq	r3,zero,9750 <__muldf3+0x788>
    9644:	00c00044 	movi	r3,1
    9648:	0027883a 	mov	r19,zero
    964c:	0025883a 	mov	r18,zero
    9650:	003eb206 	br	911c <__muldf3+0x154>
    9654:	9880022c 	andhi	r2,r19,8
    9658:	10000926 	beq	r2,zero,9680 <__muldf3+0x6b8>
    965c:	8080022c 	andhi	r2,r16,8
    9660:	1000071e 	bne	r2,zero,9680 <__muldf3+0x6b8>
    9664:	00800434 	movhi	r2,16
    9668:	84c00234 	orhi	r19,r16,8
    966c:	10bfffc4 	addi	r2,r2,-1
    9670:	98a6703a 	and	r19,r19,r2
    9674:	b80d883a 	mov	r6,r23
    9678:	8825883a 	mov	r18,r17
    967c:	003fd606 	br	95d8 <__muldf3+0x610>
    9680:	00800434 	movhi	r2,16
    9684:	9cc00234 	orhi	r19,r19,8
    9688:	10bfffc4 	addi	r2,r2,-1
    968c:	98a6703a 	and	r19,r19,r2
    9690:	a00d883a 	mov	r6,r20
    9694:	003fd006 	br	95d8 <__muldf3+0x610>
    9698:	000a4780 	call	a478 <__clzsi2>
    969c:	11000544 	addi	r4,r2,21
    96a0:	21400748 	cmpgei	r5,r4,29
    96a4:	1007883a 	mov	r3,r2
    96a8:	d9c00017 	ldw	r7,0(sp)
    96ac:	10800804 	addi	r2,r2,32
    96b0:	283f9526 	beq	r5,zero,9508 <__muldf3+0x540>
    96b4:	18fffe04 	addi	r3,r3,-8
    96b8:	88e6983a 	sll	r19,r17,r3
    96bc:	0025883a 	mov	r18,zero
    96c0:	003f9806 	br	9524 <__muldf3+0x55c>
    96c4:	e009883a 	mov	r4,fp
    96c8:	000a4780 	call	a478 <__clzsi2>
    96cc:	11400544 	addi	r5,r2,21
    96d0:	29000748 	cmpgei	r4,r5,29
    96d4:	1007883a 	mov	r3,r2
    96d8:	da000017 	ldw	r8,0(sp)
    96dc:	10800804 	addi	r2,r2,32
    96e0:	203f7626 	beq	r4,zero,94bc <__muldf3+0x4f4>
    96e4:	1c3ffe04 	addi	r16,r3,-8
    96e8:	e420983a 	sll	r16,fp,r16
    96ec:	0023883a 	mov	r17,zero
    96f0:	003f7906 	br	94d8 <__muldf3+0x510>
    96f4:	400f883a 	mov	r7,r8
    96f8:	003f4e06 	br	9434 <__muldf3+0x46c>
    96fc:	00fff844 	movi	r3,-31
    9700:	1907c83a 	sub	r3,r3,r4
    9704:	10800820 	cmpeqi	r2,r2,32
    9708:	98c6d83a 	srl	r3,r19,r3
    970c:	1000031e 	bne	r2,zero,971c <__muldf3+0x754>
    9710:	39c10f84 	addi	r7,r7,1086
    9714:	99e6983a 	sll	r19,r19,r7
    9718:	94e4b03a 	or	r18,r18,r19
    971c:	9024c03a 	cmpne	r18,r18,zero
    9720:	90c4b03a 	or	r2,r18,r3
    9724:	148001cc 	andi	r18,r2,7
    9728:	9000051e 	bne	r18,zero,9740 <__muldf3+0x778>
    972c:	0027883a 	mov	r19,zero
    9730:	1004d0fa 	srli	r2,r2,3
    9734:	0007883a 	mov	r3,zero
    9738:	14a4b03a 	or	r18,r2,r18
    973c:	003e7706 	br	911c <__muldf3+0x154>
    9740:	10c003cc 	andi	r3,r2,15
    9744:	18c00118 	cmpnei	r3,r3,4
    9748:	0027883a 	mov	r19,zero
    974c:	183fb71e 	bne	r3,zero,962c <__muldf3+0x664>
    9750:	9806927a 	slli	r3,r19,9
    9754:	9824977a 	slli	r18,r19,29
    9758:	1826d33a 	srli	r19,r3,12
    975c:	003ff406 	br	9730 <__muldf3+0x768>
    9760:	00800434 	movhi	r2,16
    9764:	9cc00234 	orhi	r19,r19,8
    9768:	10bfffc4 	addi	r2,r2,-1
    976c:	98a6703a 	and	r19,r19,r2
    9770:	003f9906 	br	95d8 <__muldf3+0x610>

00009774 <__subdf3>:
    9774:	00800434 	movhi	r2,16
    9778:	defffb04 	addi	sp,sp,-20
    977c:	3812d53a 	srli	r9,r7,20
    9780:	10bfffc4 	addi	r2,r2,-1
    9784:	2886703a 	and	r3,r5,r2
    9788:	dc000015 	stw	r16,0(sp)
    978c:	3884703a 	and	r2,r7,r2
    9790:	2820d53a 	srli	r16,r5,20
    9794:	3014d77a 	srli	r10,r6,29
    9798:	280ad7fa 	srli	r5,r5,31
    979c:	180690fa 	slli	r3,r3,3
    97a0:	2016d77a 	srli	r11,r4,29
    97a4:	100490fa 	slli	r2,r2,3
    97a8:	4a41ffcc 	andi	r9,r9,2047
    97ac:	dc800215 	stw	r18,8(sp)
    97b0:	8401ffcc 	andi	r16,r16,2047
    97b4:	dfc00415 	stw	ra,16(sp)
    97b8:	dcc00315 	stw	r19,12(sp)
    97bc:	dc400115 	stw	r17,4(sp)
    97c0:	4b01ffd8 	cmpnei	r12,r9,2047
    97c4:	3810d7fa 	srli	r8,r7,31
    97c8:	2825883a 	mov	r18,r5
    97cc:	5084b03a 	or	r2,r10,r2
    97d0:	201c90fa 	slli	r14,r4,3
    97d4:	301a90fa 	slli	r13,r6,3
    97d8:	29403fcc 	andi	r5,r5,255
    97dc:	58ceb03a 	or	r7,r11,r3
    97e0:	8255c83a 	sub	r10,r16,r9
    97e4:	60006826 	beq	r12,zero,9988 <__subdf3+0x214>
    97e8:	42c0005c 	xori	r11,r8,1
    97ec:	2ac07326 	beq	r5,r11,99bc <__subdf3+0x248>
    97f0:	0280590e 	bge	zero,r10,9958 <__subdf3+0x1e4>
    97f4:	4800691e 	bne	r9,zero,999c <__subdf3+0x228>
    97f8:	1346b03a 	or	r3,r2,r13
    97fc:	1800e826 	beq	r3,zero,9ba0 <__subdf3+0x42c>
    9800:	50ffffc4 	addi	r3,r10,-1
    9804:	18018126 	beq	r3,zero,9e0c <__subdf3+0x698>
    9808:	5281ffd8 	cmpnei	r10,r10,2047
    980c:	5000eb26 	beq	r10,zero,9bbc <__subdf3+0x448>
    9810:	1815883a 	mov	r10,r3
    9814:	50c00e48 	cmpgei	r3,r10,57
    9818:	1800651e 	bne	r3,zero,99b0 <__subdf3+0x23c>
    981c:	50c00808 	cmpgei	r3,r10,32
    9820:	18012a1e 	bne	r3,zero,9ccc <__subdf3+0x558>
    9824:	00c00804 	movi	r3,32
    9828:	1a87c83a 	sub	r3,r3,r10
    982c:	10e2983a 	sll	r17,r2,r3
    9830:	6a88d83a 	srl	r4,r13,r10
    9834:	68da983a 	sll	r13,r13,r3
    9838:	1284d83a 	srl	r2,r2,r10
    983c:	8922b03a 	or	r17,r17,r4
    9840:	681ac03a 	cmpne	r13,r13,zero
    9844:	8b62b03a 	or	r17,r17,r13
    9848:	388fc83a 	sub	r7,r7,r2
    984c:	7463c83a 	sub	r17,r14,r17
    9850:	7445803a 	cmpltu	r2,r14,r17
    9854:	3889c83a 	sub	r4,r7,r2
    9858:	2080202c 	andhi	r2,r4,128
    985c:	10008e26 	beq	r2,zero,9a98 <__subdf3+0x324>
    9860:	04c02034 	movhi	r19,128
    9864:	9cffffc4 	addi	r19,r19,-1
    9868:	24e6703a 	and	r19,r4,r19
    986c:	9800a626 	beq	r19,zero,9b08 <__subdf3+0x394>
    9870:	9809883a 	mov	r4,r19
    9874:	000a4780 	call	a478 <__clzsi2>
    9878:	117ffe04 	addi	r5,r2,-8
    987c:	01000804 	movi	r4,32
    9880:	2149c83a 	sub	r4,r4,r5
    9884:	8908d83a 	srl	r4,r17,r4
    9888:	9944983a 	sll	r2,r19,r5
    988c:	8962983a 	sll	r17,r17,r5
    9890:	2084b03a 	or	r2,r4,r2
    9894:	2c00a516 	blt	r5,r16,9b2c <__subdf3+0x3b8>
    9898:	2c0bc83a 	sub	r5,r5,r16
    989c:	29000044 	addi	r4,r5,1
    98a0:	20c00808 	cmpgei	r3,r4,32
    98a4:	1800701e 	bne	r3,zero,9a68 <__subdf3+0x2f4>
    98a8:	00c00804 	movi	r3,32
    98ac:	1907c83a 	sub	r3,r3,r4
    98b0:	890ad83a 	srl	r5,r17,r4
    98b4:	88e2983a 	sll	r17,r17,r3
    98b8:	10c6983a 	sll	r3,r2,r3
    98bc:	1108d83a 	srl	r4,r2,r4
    98c0:	8822c03a 	cmpne	r17,r17,zero
    98c4:	1946b03a 	or	r3,r3,r5
    98c8:	1c62b03a 	or	r17,r3,r17
    98cc:	0021883a 	mov	r16,zero
    98d0:	888001cc 	andi	r2,r17,7
    98d4:	10000726 	beq	r2,zero,98f4 <__subdf3+0x180>
    98d8:	888003cc 	andi	r2,r17,15
    98dc:	10800120 	cmpeqi	r2,r2,4
    98e0:	1000041e 	bne	r2,zero,98f4 <__subdf3+0x180>
    98e4:	88800104 	addi	r2,r17,4
    98e8:	1463803a 	cmpltu	r17,r2,r17
    98ec:	2449883a 	add	r4,r4,r17
    98f0:	1023883a 	mov	r17,r2
    98f4:	2080202c 	andhi	r2,r4,128
    98f8:	10006926 	beq	r2,zero,9aa0 <__subdf3+0x32c>
    98fc:	84000044 	addi	r16,r16,1
    9900:	8081ffe0 	cmpeqi	r2,r16,2047
    9904:	8401ffcc 	andi	r16,r16,2047
    9908:	10007b1e 	bne	r2,zero,9af8 <__subdf3+0x384>
    990c:	00bfe034 	movhi	r2,65408
    9910:	10bfffc4 	addi	r2,r2,-1
    9914:	2084703a 	and	r2,r4,r2
    9918:	1006927a 	slli	r3,r2,9
    991c:	8822d0fa 	srli	r17,r17,3
    9920:	1008977a 	slli	r4,r2,29
    9924:	1806d33a 	srli	r3,r3,12
    9928:	2444b03a 	or	r2,r4,r17
    992c:	8020953a 	slli	r16,r16,20
    9930:	902497fa 	slli	r18,r18,31
    9934:	80c6b03a 	or	r3,r16,r3
    9938:	1c86b03a 	or	r3,r3,r18
    993c:	dfc00417 	ldw	ra,16(sp)
    9940:	dcc00317 	ldw	r19,12(sp)
    9944:	dc800217 	ldw	r18,8(sp)
    9948:	dc400117 	ldw	r17,4(sp)
    994c:	dc000017 	ldw	r16,0(sp)
    9950:	dec00504 	addi	sp,sp,20
    9954:	f800283a 	ret
    9958:	50002c26 	beq	r10,zero,9a0c <__subdf3+0x298>
    995c:	4c15c83a 	sub	r10,r9,r16
    9960:	5825883a 	mov	r18,r11
    9964:	8000b21e 	bne	r16,zero,9c30 <__subdf3+0x4bc>
    9968:	3b86b03a 	or	r3,r7,r14
    996c:	18010826 	beq	r3,zero,9d90 <__subdf3+0x61c>
    9970:	50ffffc4 	addi	r3,r10,-1
    9974:	18015a26 	beq	r3,zero,9ee0 <__subdf3+0x76c>
    9978:	5401ffd8 	cmpnei	r16,r10,2047
    997c:	80012926 	beq	r16,zero,9e24 <__subdf3+0x6b0>
    9980:	1815883a 	mov	r10,r3
    9984:	0000ac06 	br	9c38 <__subdf3+0x4c4>
    9988:	1346b03a 	or	r3,r2,r13
    998c:	183f9626 	beq	r3,zero,97e8 <__subdf3+0x74>
    9990:	42c03fcc 	andi	r11,r8,255
    9994:	2a006a26 	beq	r5,r8,9b40 <__subdf3+0x3cc>
    9998:	02bfef0e 	bge	zero,r10,9958 <__subdf3+0x1e4>
    999c:	80c1ffd8 	cmpnei	r3,r16,2047
    99a0:	18008626 	beq	r3,zero,9bbc <__subdf3+0x448>
    99a4:	50c00e48 	cmpgei	r3,r10,57
    99a8:	10802034 	orhi	r2,r2,128
    99ac:	183f9b26 	beq	r3,zero,981c <__subdf3+0xa8>
    99b0:	1344b03a 	or	r2,r2,r13
    99b4:	1022c03a 	cmpne	r17,r2,zero
    99b8:	003fa406 	br	984c <__subdf3+0xd8>
    99bc:	0280600e 	bge	zero,r10,9b40 <__subdf3+0x3cc>
    99c0:	48002126 	beq	r9,zero,9a48 <__subdf3+0x2d4>
    99c4:	80c1ffd8 	cmpnei	r3,r16,2047
    99c8:	18011d26 	beq	r3,zero,9e40 <__subdf3+0x6cc>
    99cc:	10802034 	orhi	r2,r2,128
    99d0:	50c00e48 	cmpgei	r3,r10,57
    99d4:	18003e1e 	bne	r3,zero,9ad0 <__subdf3+0x35c>
    99d8:	50c00808 	cmpgei	r3,r10,32
    99dc:	1800d526 	beq	r3,zero,9d34 <__subdf3+0x5c0>
    99e0:	547ff804 	addi	r17,r10,-32
    99e4:	51000820 	cmpeqi	r4,r10,32
    99e8:	1446d83a 	srl	r3,r2,r17
    99ec:	2000041e 	bne	r4,zero,9a00 <__subdf3+0x28c>
    99f0:	01001004 	movi	r4,64
    99f4:	2295c83a 	sub	r10,r4,r10
    99f8:	1284983a 	sll	r2,r2,r10
    99fc:	689ab03a 	or	r13,r13,r2
    9a00:	6822c03a 	cmpne	r17,r13,zero
    9a04:	88e2b03a 	or	r17,r17,r3
    9a08:	00003306 	br	9ad8 <__subdf3+0x364>
    9a0c:	80c00044 	addi	r3,r16,1
    9a10:	18c1ff8c 	andi	r3,r3,2046
    9a14:	1800971e 	bne	r3,zero,9c74 <__subdf3+0x500>
    9a18:	1350b03a 	or	r8,r2,r13
    9a1c:	3b86b03a 	or	r3,r7,r14
    9a20:	8000e21e 	bne	r16,zero,9dac <__subdf3+0x638>
    9a24:	18012526 	beq	r3,zero,9ebc <__subdf3+0x748>
    9a28:	4001411e 	bne	r8,zero,9f30 <__subdf3+0x7bc>
    9a2c:	3806977a 	slli	r3,r7,29
    9a30:	00880034 	movhi	r2,8192
    9a34:	10bfffc4 	addi	r2,r2,-1
    9a38:	208a703a 	and	r5,r4,r2
    9a3c:	3810d0fa 	srli	r8,r7,3
    9a40:	28c4b03a 	or	r2,r5,r3
    9a44:	00001d06 	br	9abc <__subdf3+0x348>
    9a48:	1346b03a 	or	r3,r2,r13
    9a4c:	18005426 	beq	r3,zero,9ba0 <__subdf3+0x42c>
    9a50:	50ffffc4 	addi	r3,r10,-1
    9a54:	1800e526 	beq	r3,zero,9dec <__subdf3+0x678>
    9a58:	5281ffd8 	cmpnei	r10,r10,2047
    9a5c:	50012d26 	beq	r10,zero,9f14 <__subdf3+0x7a0>
    9a60:	1815883a 	mov	r10,r3
    9a64:	003fda06 	br	99d0 <__subdf3+0x25c>
    9a68:	297ff844 	addi	r5,r5,-31
    9a6c:	20c00820 	cmpeqi	r3,r4,32
    9a70:	114ad83a 	srl	r5,r2,r5
    9a74:	1800041e 	bne	r3,zero,9a88 <__subdf3+0x314>
    9a78:	00c01004 	movi	r3,64
    9a7c:	1909c83a 	sub	r4,r3,r4
    9a80:	1104983a 	sll	r2,r2,r4
    9a84:	88a2b03a 	or	r17,r17,r2
    9a88:	8822c03a 	cmpne	r17,r17,zero
    9a8c:	8962b03a 	or	r17,r17,r5
    9a90:	0009883a 	mov	r4,zero
    9a94:	0021883a 	mov	r16,zero
    9a98:	888001cc 	andi	r2,r17,7
    9a9c:	103f8e1e 	bne	r2,zero,98d8 <__subdf3+0x164>
    9aa0:	8822d0fa 	srli	r17,r17,3
    9aa4:	2004977a 	slli	r2,r4,29
    9aa8:	2010d0fa 	srli	r8,r4,3
    9aac:	8015883a 	mov	r10,r16
    9ab0:	8884b03a 	or	r2,r17,r2
    9ab4:	50c1ffe0 	cmpeqi	r3,r10,2047
    9ab8:	18016f1e 	bne	r3,zero,a078 <__subdf3+0x904>
    9abc:	00c00434 	movhi	r3,16
    9ac0:	18ffffc4 	addi	r3,r3,-1
    9ac4:	40c6703a 	and	r3,r8,r3
    9ac8:	5401ffcc 	andi	r16,r10,2047
    9acc:	003f9706 	br	992c <__subdf3+0x1b8>
    9ad0:	1344b03a 	or	r2,r2,r13
    9ad4:	1022c03a 	cmpne	r17,r2,zero
    9ad8:	8ba3883a 	add	r17,r17,r14
    9adc:	8b85803a 	cmpltu	r2,r17,r14
    9ae0:	11c9883a 	add	r4,r2,r7
    9ae4:	2080202c 	andhi	r2,r4,128
    9ae8:	103feb26 	beq	r2,zero,9a98 <__subdf3+0x324>
    9aec:	84000044 	addi	r16,r16,1
    9af0:	8081ffe0 	cmpeqi	r2,r16,2047
    9af4:	10006b26 	beq	r2,zero,9ca4 <__subdf3+0x530>
    9af8:	0401ffc4 	movi	r16,2047
    9afc:	0007883a 	mov	r3,zero
    9b00:	0005883a 	mov	r2,zero
    9b04:	003f8906 	br	992c <__subdf3+0x1b8>
    9b08:	8809883a 	mov	r4,r17
    9b0c:	000a4780 	call	a478 <__clzsi2>
    9b10:	11400604 	addi	r5,r2,24
    9b14:	28c00808 	cmpgei	r3,r5,32
    9b18:	183f5826 	beq	r3,zero,987c <__subdf3+0x108>
    9b1c:	10bffe04 	addi	r2,r2,-8
    9b20:	8884983a 	sll	r2,r17,r2
    9b24:	0023883a 	mov	r17,zero
    9b28:	2c3f5b0e 	bge	r5,r16,9898 <__subdf3+0x124>
    9b2c:	013fe034 	movhi	r4,65408
    9b30:	213fffc4 	addi	r4,r4,-1
    9b34:	8161c83a 	sub	r16,r16,r5
    9b38:	1108703a 	and	r4,r2,r4
    9b3c:	003f6406 	br	98d0 <__subdf3+0x15c>
    9b40:	50002c26 	beq	r10,zero,9bf4 <__subdf3+0x480>
    9b44:	4c15c83a 	sub	r10,r9,r16
    9b48:	80007226 	beq	r16,zero,9d14 <__subdf3+0x5a0>
    9b4c:	6000ea26 	beq	r12,zero,9ef8 <__subdf3+0x784>
    9b50:	39c02034 	orhi	r7,r7,128
    9b54:	50c00e48 	cmpgei	r3,r10,57
    9b58:	1800c01e 	bne	r3,zero,9e5c <__subdf3+0x6e8>
    9b5c:	50c00808 	cmpgei	r3,r10,32
    9b60:	1801261e 	bne	r3,zero,9ffc <__subdf3+0x888>
    9b64:	00c00804 	movi	r3,32
    9b68:	1a87c83a 	sub	r3,r3,r10
    9b6c:	38e2983a 	sll	r17,r7,r3
    9b70:	7288d83a 	srl	r4,r14,r10
    9b74:	70c6983a 	sll	r3,r14,r3
    9b78:	3a8ed83a 	srl	r7,r7,r10
    9b7c:	8922b03a 	or	r17,r17,r4
    9b80:	1806c03a 	cmpne	r3,r3,zero
    9b84:	88e2b03a 	or	r17,r17,r3
    9b88:	11c5883a 	add	r2,r2,r7
    9b8c:	8b63883a 	add	r17,r17,r13
    9b90:	8b49803a 	cmpltu	r4,r17,r13
    9b94:	2089883a 	add	r4,r4,r2
    9b98:	4821883a 	mov	r16,r9
    9b9c:	003fd106 	br	9ae4 <__subdf3+0x370>
    9ba0:	380c977a 	slli	r6,r7,29
    9ba4:	00880034 	movhi	r2,8192
    9ba8:	10bfffc4 	addi	r2,r2,-1
    9bac:	2088703a 	and	r4,r4,r2
    9bb0:	3810d0fa 	srli	r8,r7,3
    9bb4:	2184b03a 	or	r2,r4,r6
    9bb8:	003fbe06 	br	9ab4 <__subdf3+0x340>
    9bbc:	380c977a 	slli	r6,r7,29
    9bc0:	00880034 	movhi	r2,8192
    9bc4:	10bfffc4 	addi	r2,r2,-1
    9bc8:	380ed0fa 	srli	r7,r7,3
    9bcc:	2084703a 	and	r2,r4,r2
    9bd0:	1184b03a 	or	r2,r2,r6
    9bd4:	3886b03a 	or	r3,r7,r2
    9bd8:	18012326 	beq	r3,zero,a068 <__subdf3+0x8f4>
    9bdc:	01000434 	movhi	r4,16
    9be0:	38c00234 	orhi	r3,r7,8
    9be4:	213fffc4 	addi	r4,r4,-1
    9be8:	1906703a 	and	r3,r3,r4
    9bec:	0401ffc4 	movi	r16,2047
    9bf0:	003f4e06 	br	992c <__subdf3+0x1b8>
    9bf4:	80c00044 	addi	r3,r16,1
    9bf8:	1941ff8c 	andi	r5,r3,2046
    9bfc:	2800581e 	bne	r5,zero,9d60 <__subdf3+0x5ec>
    9c00:	3b86b03a 	or	r3,r7,r14
    9c04:	8000a31e 	bne	r16,zero,9e94 <__subdf3+0x720>
    9c08:	1800ea26 	beq	r3,zero,9fb4 <__subdf3+0x840>
    9c0c:	1346b03a 	or	r3,r2,r13
    9c10:	1800ef1e 	bne	r3,zero,9fd0 <__subdf3+0x85c>
    9c14:	380a977a 	slli	r5,r7,29
    9c18:	00880034 	movhi	r2,8192
    9c1c:	10bfffc4 	addi	r2,r2,-1
    9c20:	2084703a 	and	r2,r4,r2
    9c24:	3810d0fa 	srli	r8,r7,3
    9c28:	2884b03a 	or	r2,r5,r2
    9c2c:	003fa306 	br	9abc <__subdf3+0x348>
    9c30:	60007c26 	beq	r12,zero,9e24 <__subdf3+0x6b0>
    9c34:	39c02034 	orhi	r7,r7,128
    9c38:	50c00e48 	cmpgei	r3,r10,57
    9c3c:	18002e1e 	bne	r3,zero,9cf8 <__subdf3+0x584>
    9c40:	50c00808 	cmpgei	r3,r10,32
    9c44:	1800881e 	bne	r3,zero,9e68 <__subdf3+0x6f4>
    9c48:	00c00804 	movi	r3,32
    9c4c:	1a87c83a 	sub	r3,r3,r10
    9c50:	7288d83a 	srl	r4,r14,r10
    9c54:	38e2983a 	sll	r17,r7,r3
    9c58:	70dc983a 	sll	r14,r14,r3
    9c5c:	3aa0d83a 	srl	r16,r7,r10
    9c60:	8922b03a 	or	r17,r17,r4
    9c64:	701cc03a 	cmpne	r14,r14,zero
    9c68:	8ba2b03a 	or	r17,r17,r14
    9c6c:	1405c83a 	sub	r2,r2,r16
    9c70:	00002306 	br	9d00 <__subdf3+0x58c>
    9c74:	7363c83a 	sub	r17,r14,r13
    9c78:	3889c83a 	sub	r4,r7,r2
    9c7c:	7467803a 	cmpltu	r19,r14,r17
    9c80:	24e7c83a 	sub	r19,r4,r19
    9c84:	98c0202c 	andhi	r3,r19,128
    9c88:	1800521e 	bne	r3,zero,9dd4 <__subdf3+0x660>
    9c8c:	8cc4b03a 	or	r2,r17,r19
    9c90:	103ef61e 	bne	r2,zero,986c <__subdf3+0xf8>
    9c94:	0011883a 	mov	r8,zero
    9c98:	0025883a 	mov	r18,zero
    9c9c:	003f8706 	br	9abc <__subdf3+0x348>
    9ca0:	04000084 	movi	r16,2
    9ca4:	00bfe034 	movhi	r2,65408
    9ca8:	10bfffc4 	addi	r2,r2,-1
    9cac:	8806d07a 	srli	r3,r17,1
    9cb0:	2084703a 	and	r2,r4,r2
    9cb4:	100a97fa 	slli	r5,r2,31
    9cb8:	8c40004c 	andi	r17,r17,1
    9cbc:	1c62b03a 	or	r17,r3,r17
    9cc0:	1008d07a 	srli	r4,r2,1
    9cc4:	2c62b03a 	or	r17,r5,r17
    9cc8:	003f0106 	br	98d0 <__subdf3+0x15c>
    9ccc:	547ff804 	addi	r17,r10,-32
    9cd0:	51000820 	cmpeqi	r4,r10,32
    9cd4:	1446d83a 	srl	r3,r2,r17
    9cd8:	2000041e 	bne	r4,zero,9cec <__subdf3+0x578>
    9cdc:	01001004 	movi	r4,64
    9ce0:	2295c83a 	sub	r10,r4,r10
    9ce4:	1284983a 	sll	r2,r2,r10
    9ce8:	689ab03a 	or	r13,r13,r2
    9cec:	6822c03a 	cmpne	r17,r13,zero
    9cf0:	88e2b03a 	or	r17,r17,r3
    9cf4:	003ed506 	br	984c <__subdf3+0xd8>
    9cf8:	3ba2b03a 	or	r17,r7,r14
    9cfc:	8822c03a 	cmpne	r17,r17,zero
    9d00:	6c63c83a 	sub	r17,r13,r17
    9d04:	6c49803a 	cmpltu	r4,r13,r17
    9d08:	1109c83a 	sub	r4,r2,r4
    9d0c:	4821883a 	mov	r16,r9
    9d10:	003ed106 	br	9858 <__subdf3+0xe4>
    9d14:	3b86b03a 	or	r3,r7,r14
    9d18:	18001d26 	beq	r3,zero,9d90 <__subdf3+0x61c>
    9d1c:	50ffffc4 	addi	r3,r10,-1
    9d20:	1800c126 	beq	r3,zero,a028 <__subdf3+0x8b4>
    9d24:	5281ffd8 	cmpnei	r10,r10,2047
    9d28:	50003e26 	beq	r10,zero,9e24 <__subdf3+0x6b0>
    9d2c:	1815883a 	mov	r10,r3
    9d30:	003f8806 	br	9b54 <__subdf3+0x3e0>
    9d34:	00c00804 	movi	r3,32
    9d38:	1a87c83a 	sub	r3,r3,r10
    9d3c:	10e2983a 	sll	r17,r2,r3
    9d40:	6a88d83a 	srl	r4,r13,r10
    9d44:	68da983a 	sll	r13,r13,r3
    9d48:	1284d83a 	srl	r2,r2,r10
    9d4c:	8922b03a 	or	r17,r17,r4
    9d50:	681ac03a 	cmpne	r13,r13,zero
    9d54:	8b62b03a 	or	r17,r17,r13
    9d58:	388f883a 	add	r7,r7,r2
    9d5c:	003f5e06 	br	9ad8 <__subdf3+0x364>
    9d60:	1901ffe0 	cmpeqi	r4,r3,2047
    9d64:	203f641e 	bne	r4,zero,9af8 <__subdf3+0x384>
    9d68:	735b883a 	add	r13,r14,r13
    9d6c:	6b89803a 	cmpltu	r4,r13,r14
    9d70:	3885883a 	add	r2,r7,r2
    9d74:	1105883a 	add	r2,r2,r4
    9d78:	102297fa 	slli	r17,r2,31
    9d7c:	681ad07a 	srli	r13,r13,1
    9d80:	1008d07a 	srli	r4,r2,1
    9d84:	1821883a 	mov	r16,r3
    9d88:	8b62b03a 	or	r17,r17,r13
    9d8c:	003f4206 	br	9a98 <__subdf3+0x324>
    9d90:	1008977a 	slli	r4,r2,29
    9d94:	00c80034 	movhi	r3,8192
    9d98:	18ffffc4 	addi	r3,r3,-1
    9d9c:	30cc703a 	and	r6,r6,r3
    9da0:	1010d0fa 	srli	r8,r2,3
    9da4:	3104b03a 	or	r2,r6,r4
    9da8:	003f4206 	br	9ab4 <__subdf3+0x340>
    9dac:	18006c1e 	bne	r3,zero,9f60 <__subdf3+0x7ec>
    9db0:	4000a826 	beq	r8,zero,a054 <__subdf3+0x8e0>
    9db4:	1008977a 	slli	r4,r2,29
    9db8:	00c80034 	movhi	r3,8192
    9dbc:	18ffffc4 	addi	r3,r3,-1
    9dc0:	30c6703a 	and	r3,r6,r3
    9dc4:	100ed0fa 	srli	r7,r2,3
    9dc8:	5825883a 	mov	r18,r11
    9dcc:	1904b03a 	or	r2,r3,r4
    9dd0:	003f8006 	br	9bd4 <__subdf3+0x460>
    9dd4:	6ba3c83a 	sub	r17,r13,r14
    9dd8:	11c5c83a 	sub	r2,r2,r7
    9ddc:	6c49803a 	cmpltu	r4,r13,r17
    9de0:	1127c83a 	sub	r19,r2,r4
    9de4:	5825883a 	mov	r18,r11
    9de8:	003ea006 	br	986c <__subdf3+0xf8>
    9dec:	7363883a 	add	r17,r14,r13
    9df0:	3885883a 	add	r2,r7,r2
    9df4:	8b9d803a 	cmpltu	r14,r17,r14
    9df8:	1389883a 	add	r4,r2,r14
    9dfc:	2080202c 	andhi	r2,r4,128
    9e00:	103fa71e 	bne	r2,zero,9ca0 <__subdf3+0x52c>
    9e04:	04000044 	movi	r16,1
    9e08:	003f2306 	br	9a98 <__subdf3+0x324>
    9e0c:	7363c83a 	sub	r17,r14,r13
    9e10:	3885c83a 	sub	r2,r7,r2
    9e14:	745d803a 	cmpltu	r14,r14,r17
    9e18:	1389c83a 	sub	r4,r2,r14
    9e1c:	04000044 	movi	r16,1
    9e20:	003e8d06 	br	9858 <__subdf3+0xe4>
    9e24:	1008977a 	slli	r4,r2,29
    9e28:	00c80034 	movhi	r3,8192
    9e2c:	18ffffc4 	addi	r3,r3,-1
    9e30:	30c6703a 	and	r3,r6,r3
    9e34:	100ed0fa 	srli	r7,r2,3
    9e38:	1904b03a 	or	r2,r3,r4
    9e3c:	003f6506 	br	9bd4 <__subdf3+0x460>
    9e40:	380c977a 	slli	r6,r7,29
    9e44:	00880034 	movhi	r2,8192
    9e48:	10bfffc4 	addi	r2,r2,-1
    9e4c:	2088703a 	and	r4,r4,r2
    9e50:	380ed0fa 	srli	r7,r7,3
    9e54:	2184b03a 	or	r2,r4,r6
    9e58:	003f5e06 	br	9bd4 <__subdf3+0x460>
    9e5c:	3ba2b03a 	or	r17,r7,r14
    9e60:	8822c03a 	cmpne	r17,r17,zero
    9e64:	003f4906 	br	9b8c <__subdf3+0x418>
    9e68:	547ff804 	addi	r17,r10,-32
    9e6c:	51000820 	cmpeqi	r4,r10,32
    9e70:	3c46d83a 	srl	r3,r7,r17
    9e74:	2000041e 	bne	r4,zero,9e88 <__subdf3+0x714>
    9e78:	01001004 	movi	r4,64
    9e7c:	2295c83a 	sub	r10,r4,r10
    9e80:	3a8e983a 	sll	r7,r7,r10
    9e84:	71dcb03a 	or	r14,r14,r7
    9e88:	7022c03a 	cmpne	r17,r14,zero
    9e8c:	88e2b03a 	or	r17,r17,r3
    9e90:	003f9b06 	br	9d00 <__subdf3+0x58c>
    9e94:	18001826 	beq	r3,zero,9ef8 <__subdf3+0x784>
    9e98:	135ab03a 	or	r13,r2,r13
    9e9c:	380a977a 	slli	r5,r7,29
    9ea0:	380ed0fa 	srli	r7,r7,3
    9ea4:	6800311e 	bne	r13,zero,9f6c <__subdf3+0x7f8>
    9ea8:	00880034 	movhi	r2,8192
    9eac:	10bfffc4 	addi	r2,r2,-1
    9eb0:	2084703a 	and	r2,r4,r2
    9eb4:	1144b03a 	or	r2,r2,r5
    9eb8:	003f4606 	br	9bd4 <__subdf3+0x460>
    9ebc:	40005f26 	beq	r8,zero,a03c <__subdf3+0x8c8>
    9ec0:	1008977a 	slli	r4,r2,29
    9ec4:	00c80034 	movhi	r3,8192
    9ec8:	18ffffc4 	addi	r3,r3,-1
    9ecc:	30cc703a 	and	r6,r6,r3
    9ed0:	1010d0fa 	srli	r8,r2,3
    9ed4:	5825883a 	mov	r18,r11
    9ed8:	3104b03a 	or	r2,r6,r4
    9edc:	003ef706 	br	9abc <__subdf3+0x348>
    9ee0:	6ba3c83a 	sub	r17,r13,r14
    9ee4:	11c5c83a 	sub	r2,r2,r7
    9ee8:	6c5b803a 	cmpltu	r13,r13,r17
    9eec:	1349c83a 	sub	r4,r2,r13
    9ef0:	04000044 	movi	r16,1
    9ef4:	003e5806 	br	9858 <__subdf3+0xe4>
    9ef8:	1006977a 	slli	r3,r2,29
    9efc:	01080034 	movhi	r4,8192
    9f00:	213fffc4 	addi	r4,r4,-1
    9f04:	3108703a 	and	r4,r6,r4
    9f08:	100ed0fa 	srli	r7,r2,3
    9f0c:	1904b03a 	or	r2,r3,r4
    9f10:	003f3006 	br	9bd4 <__subdf3+0x460>
    9f14:	3806977a 	slli	r3,r7,29
    9f18:	00880034 	movhi	r2,8192
    9f1c:	10bfffc4 	addi	r2,r2,-1
    9f20:	2084703a 	and	r2,r4,r2
    9f24:	380ed0fa 	srli	r7,r7,3
    9f28:	10c4b03a 	or	r2,r2,r3
    9f2c:	003f2906 	br	9bd4 <__subdf3+0x460>
    9f30:	7363c83a 	sub	r17,r14,r13
    9f34:	7447803a 	cmpltu	r3,r14,r17
    9f38:	3889c83a 	sub	r4,r7,r2
    9f3c:	20c9c83a 	sub	r4,r4,r3
    9f40:	20c0202c 	andhi	r3,r4,128
    9f44:	18004026 	beq	r3,zero,a048 <__subdf3+0x8d4>
    9f48:	6ba3c83a 	sub	r17,r13,r14
    9f4c:	11c5c83a 	sub	r2,r2,r7
    9f50:	6c5b803a 	cmpltu	r13,r13,r17
    9f54:	1349c83a 	sub	r4,r2,r13
    9f58:	5825883a 	mov	r18,r11
    9f5c:	003e5c06 	br	98d0 <__subdf3+0x15c>
    9f60:	380a977a 	slli	r5,r7,29
    9f64:	380ed0fa 	srli	r7,r7,3
    9f68:	403fcf26 	beq	r8,zero,9ea8 <__subdf3+0x734>
    9f6c:	00c80034 	movhi	r3,8192
    9f70:	18ffffc4 	addi	r3,r3,-1
    9f74:	20c8703a 	and	r4,r4,r3
    9f78:	3a00022c 	andhi	r8,r7,8
    9f7c:	2148b03a 	or	r4,r4,r5
    9f80:	40000826 	beq	r8,zero,9fa4 <__subdf3+0x830>
    9f84:	100ad0fa 	srli	r5,r2,3
    9f88:	2a00022c 	andhi	r8,r5,8
    9f8c:	4000051e 	bne	r8,zero,9fa4 <__subdf3+0x830>
    9f90:	1004977a 	slli	r2,r2,29
    9f94:	30c6703a 	and	r3,r6,r3
    9f98:	5825883a 	mov	r18,r11
    9f9c:	1888b03a 	or	r4,r3,r2
    9fa0:	280f883a 	mov	r7,r5
    9fa4:	380e90fa 	slli	r7,r7,3
    9fa8:	2005883a 	mov	r2,r4
    9fac:	380ed0fa 	srli	r7,r7,3
    9fb0:	003f0806 	br	9bd4 <__subdf3+0x460>
    9fb4:	100a977a 	slli	r5,r2,29
    9fb8:	00c80034 	movhi	r3,8192
    9fbc:	18ffffc4 	addi	r3,r3,-1
    9fc0:	30c6703a 	and	r3,r6,r3
    9fc4:	1010d0fa 	srli	r8,r2,3
    9fc8:	28c4b03a 	or	r2,r5,r3
    9fcc:	003ebb06 	br	9abc <__subdf3+0x348>
    9fd0:	7363883a 	add	r17,r14,r13
    9fd4:	3885883a 	add	r2,r7,r2
    9fd8:	8b9d803a 	cmpltu	r14,r17,r14
    9fdc:	1389883a 	add	r4,r2,r14
    9fe0:	2080202c 	andhi	r2,r4,128
    9fe4:	103eac26 	beq	r2,zero,9a98 <__subdf3+0x324>
    9fe8:	00bfe034 	movhi	r2,65408
    9fec:	10bfffc4 	addi	r2,r2,-1
    9ff0:	2088703a 	and	r4,r4,r2
    9ff4:	04000044 	movi	r16,1
    9ff8:	003ea706 	br	9a98 <__subdf3+0x324>
    9ffc:	50fff804 	addi	r3,r10,-32
    a000:	51000820 	cmpeqi	r4,r10,32
    a004:	38c6d83a 	srl	r3,r7,r3
    a008:	2000041e 	bne	r4,zero,a01c <__subdf3+0x8a8>
    a00c:	01001004 	movi	r4,64
    a010:	2295c83a 	sub	r10,r4,r10
    a014:	3a8e983a 	sll	r7,r7,r10
    a018:	71dcb03a 	or	r14,r14,r7
    a01c:	7022c03a 	cmpne	r17,r14,zero
    a020:	88e2b03a 	or	r17,r17,r3
    a024:	003ed906 	br	9b8c <__subdf3+0x418>
    a028:	7363883a 	add	r17,r14,r13
    a02c:	3885883a 	add	r2,r7,r2
    a030:	8b5b803a 	cmpltu	r13,r17,r13
    a034:	1349883a 	add	r4,r2,r13
    a038:	003f7006 	br	9dfc <__subdf3+0x688>
    a03c:	0005883a 	mov	r2,zero
    a040:	0025883a 	mov	r18,zero
    a044:	003e9d06 	br	9abc <__subdf3+0x348>
    a048:	8904b03a 	or	r2,r17,r4
    a04c:	103f1126 	beq	r2,zero,9c94 <__subdf3+0x520>
    a050:	003e9106 	br	9a98 <__subdf3+0x324>
    a054:	01c00434 	movhi	r7,16
    a058:	00bfffc4 	movi	r2,-1
    a05c:	39ffffc4 	addi	r7,r7,-1
    a060:	0025883a 	mov	r18,zero
    a064:	003edd06 	br	9bdc <__subdf3+0x468>
    a068:	0005883a 	mov	r2,zero
    a06c:	0401ffc4 	movi	r16,2047
    a070:	0007883a 	mov	r3,zero
    a074:	003e2d06 	br	992c <__subdf3+0x1b8>
    a078:	400f883a 	mov	r7,r8
    a07c:	003ed506 	br	9bd4 <__subdf3+0x460>

0000a080 <__unorddf2>:
    a080:	2806d53a 	srli	r3,r5,20
    a084:	3810d53a 	srli	r8,r7,20
    a088:	02400434 	movhi	r9,16
    a08c:	18c1ffcc 	andi	r3,r3,2047
    a090:	4a7fffc4 	addi	r9,r9,-1
    a094:	18c1ffd8 	cmpnei	r3,r3,2047
    a098:	2a4a703a 	and	r5,r5,r9
    a09c:	3a4e703a 	and	r7,r7,r9
    a0a0:	4201ffcc 	andi	r8,r8,2047
    a0a4:	18000426 	beq	r3,zero,a0b8 <__unorddf2+0x38>
    a0a8:	4201ffd8 	cmpnei	r8,r8,2047
    a0ac:	40000626 	beq	r8,zero,a0c8 <__unorddf2+0x48>
    a0b0:	0005883a 	mov	r2,zero
    a0b4:	f800283a 	ret
    a0b8:	290ab03a 	or	r5,r5,r4
    a0bc:	283ffa26 	beq	r5,zero,a0a8 <__unorddf2+0x28>
    a0c0:	00800044 	movi	r2,1
    a0c4:	f800283a 	ret
    a0c8:	398eb03a 	or	r7,r7,r6
    a0cc:	3804c03a 	cmpne	r2,r7,zero
    a0d0:	f800283a 	ret

0000a0d4 <__fixdfsi>:
    a0d4:	2806d53a 	srli	r3,r5,20
    a0d8:	01800434 	movhi	r6,16
    a0dc:	31bfffc4 	addi	r6,r6,-1
    a0e0:	18c1ffcc 	andi	r3,r3,2047
    a0e4:	19c0ffd0 	cmplti	r7,r3,1023
    a0e8:	2810d7fa 	srli	r8,r5,31
    a0ec:	298a703a 	and	r5,r5,r6
    a0f0:	3800061e 	bne	r7,zero,a10c <__fixdfsi+0x38>
    a0f4:	18810790 	cmplti	r2,r3,1054
    a0f8:	1000061e 	bne	r2,zero,a114 <__fixdfsi+0x40>
    a0fc:	00a00034 	movhi	r2,32768
    a100:	10bfffc4 	addi	r2,r2,-1
    a104:	4085883a 	add	r2,r8,r2
    a108:	f800283a 	ret
    a10c:	0005883a 	mov	r2,zero
    a110:	f800283a 	ret
    a114:	01810cc4 	movi	r6,1075
    a118:	30cdc83a 	sub	r6,r6,r3
    a11c:	30800808 	cmpgei	r2,r6,32
    a120:	29400434 	orhi	r5,r5,16
    a124:	1000071e 	bne	r2,zero,a144 <__fixdfsi+0x70>
    a128:	18befb44 	addi	r2,r3,-1043
    a12c:	2884983a 	sll	r2,r5,r2
    a130:	2188d83a 	srl	r4,r4,r6
    a134:	1104b03a 	or	r2,r2,r4
    a138:	403ff526 	beq	r8,zero,a110 <__fixdfsi+0x3c>
    a13c:	0085c83a 	sub	r2,zero,r2
    a140:	f800283a 	ret
    a144:	008104c4 	movi	r2,1043
    a148:	10c5c83a 	sub	r2,r2,r3
    a14c:	2884d83a 	srl	r2,r5,r2
    a150:	003ff906 	br	a138 <__fixdfsi+0x64>

0000a154 <__floatsidf>:
    a154:	defffd04 	addi	sp,sp,-12
    a158:	dfc00215 	stw	ra,8(sp)
    a15c:	dc400115 	stw	r17,4(sp)
    a160:	dc000015 	stw	r16,0(sp)
    a164:	20001326 	beq	r4,zero,a1b4 <__floatsidf+0x60>
    a168:	2022d7fa 	srli	r17,r4,31
    a16c:	2021883a 	mov	r16,r4
    a170:	20002416 	blt	r4,zero,a204 <__floatsidf+0xb0>
    a174:	8009883a 	mov	r4,r16
    a178:	000a4780 	call	a478 <__clzsi2>
    a17c:	01010784 	movi	r4,1054
    a180:	2089c83a 	sub	r4,r4,r2
    a184:	114002c8 	cmpgei	r5,r2,11
    a188:	20c1ffcc 	andi	r3,r4,2047
    a18c:	2800161e 	bne	r5,zero,a1e8 <__floatsidf+0x94>
    a190:	010002c4 	movi	r4,11
    a194:	2089c83a 	sub	r4,r4,r2
    a198:	810ad83a 	srl	r5,r16,r4
    a19c:	01000434 	movhi	r4,16
    a1a0:	10800544 	addi	r2,r2,21
    a1a4:	213fffc4 	addi	r4,r4,-1
    a1a8:	8084983a 	sll	r2,r16,r2
    a1ac:	290a703a 	and	r5,r5,r4
    a1b0:	00000406 	br	a1c4 <__floatsidf+0x70>
    a1b4:	0023883a 	mov	r17,zero
    a1b8:	0007883a 	mov	r3,zero
    a1bc:	000b883a 	mov	r5,zero
    a1c0:	0005883a 	mov	r2,zero
    a1c4:	1808953a 	slli	r4,r3,20
    a1c8:	880697fa 	slli	r3,r17,31
    a1cc:	2148b03a 	or	r4,r4,r5
    a1d0:	20c6b03a 	or	r3,r4,r3
    a1d4:	dfc00217 	ldw	ra,8(sp)
    a1d8:	dc400117 	ldw	r17,4(sp)
    a1dc:	dc000017 	ldw	r16,0(sp)
    a1e0:	dec00304 	addi	sp,sp,12
    a1e4:	f800283a 	ret
    a1e8:	10bffd44 	addi	r2,r2,-11
    a1ec:	808a983a 	sll	r5,r16,r2
    a1f0:	00800434 	movhi	r2,16
    a1f4:	10bfffc4 	addi	r2,r2,-1
    a1f8:	288a703a 	and	r5,r5,r2
    a1fc:	0005883a 	mov	r2,zero
    a200:	003ff006 	br	a1c4 <__floatsidf+0x70>
    a204:	0121c83a 	sub	r16,zero,r4
    a208:	003fda06 	br	a174 <__floatsidf+0x20>

0000a20c <__extendsfdf2>:
    a20c:	200ad5fa 	srli	r5,r4,23
    a210:	defffd04 	addi	sp,sp,-12
    a214:	dc000015 	stw	r16,0(sp)
    a218:	29403fcc 	andi	r5,r5,255
    a21c:	04002034 	movhi	r16,128
    a220:	28800044 	addi	r2,r5,1
    a224:	dc400115 	stw	r17,4(sp)
    a228:	843fffc4 	addi	r16,r16,-1
    a22c:	dfc00215 	stw	ra,8(sp)
    a230:	10803f8c 	andi	r2,r2,254
    a234:	2022d7fa 	srli	r17,r4,31
    a238:	8120703a 	and	r16,r16,r4
    a23c:	10000d26 	beq	r2,zero,a274 <__extendsfdf2+0x68>
    a240:	8008d0fa 	srli	r4,r16,3
    a244:	8020977a 	slli	r16,r16,29
    a248:	28c0e004 	addi	r3,r5,896
    a24c:	180a953a 	slli	r5,r3,20
    a250:	880697fa 	slli	r3,r17,31
    a254:	8005883a 	mov	r2,r16
    a258:	290ab03a 	or	r5,r5,r4
    a25c:	28c6b03a 	or	r3,r5,r3
    a260:	dfc00217 	ldw	ra,8(sp)
    a264:	dc400117 	ldw	r17,4(sp)
    a268:	dc000017 	ldw	r16,0(sp)
    a26c:	dec00304 	addi	sp,sp,12
    a270:	f800283a 	ret
    a274:	2800111e 	bne	r5,zero,a2bc <__extendsfdf2+0xb0>
    a278:	80001926 	beq	r16,zero,a2e0 <__extendsfdf2+0xd4>
    a27c:	8009883a 	mov	r4,r16
    a280:	000a4780 	call	a478 <__clzsi2>
    a284:	10c002c8 	cmpgei	r3,r2,11
    a288:	18001b1e 	bne	r3,zero,a2f8 <__extendsfdf2+0xec>
    a28c:	010002c4 	movi	r4,11
    a290:	2089c83a 	sub	r4,r4,r2
    a294:	10c00544 	addi	r3,r2,21
    a298:	810ad83a 	srl	r5,r16,r4
    a29c:	80e0983a 	sll	r16,r16,r3
    a2a0:	01000434 	movhi	r4,16
    a2a4:	00c0e244 	movi	r3,905
    a2a8:	213fffc4 	addi	r4,r4,-1
    a2ac:	1887c83a 	sub	r3,r3,r2
    a2b0:	2908703a 	and	r4,r5,r4
    a2b4:	18c1ffcc 	andi	r3,r3,2047
    a2b8:	003fe406 	br	a24c <__extendsfdf2+0x40>
    a2bc:	80000b26 	beq	r16,zero,a2ec <__extendsfdf2+0xe0>
    a2c0:	800ad0fa 	srli	r5,r16,3
    a2c4:	00800434 	movhi	r2,16
    a2c8:	10bfffc4 	addi	r2,r2,-1
    a2cc:	29000234 	orhi	r4,r5,8
    a2d0:	8020977a 	slli	r16,r16,29
    a2d4:	2088703a 	and	r4,r4,r2
    a2d8:	00c1ffc4 	movi	r3,2047
    a2dc:	003fdb06 	br	a24c <__extendsfdf2+0x40>
    a2e0:	0007883a 	mov	r3,zero
    a2e4:	0009883a 	mov	r4,zero
    a2e8:	003fd806 	br	a24c <__extendsfdf2+0x40>
    a2ec:	00c1ffc4 	movi	r3,2047
    a2f0:	0009883a 	mov	r4,zero
    a2f4:	003fd506 	br	a24c <__extendsfdf2+0x40>
    a2f8:	113ffd44 	addi	r4,r2,-11
    a2fc:	810a983a 	sll	r5,r16,r4
    a300:	0021883a 	mov	r16,zero
    a304:	003fe606 	br	a2a0 <__extendsfdf2+0x94>

0000a308 <__truncdfsf2>:
    a308:	2804d53a 	srli	r2,r5,20
    a30c:	00c00434 	movhi	r3,16
    a310:	18ffffc4 	addi	r3,r3,-1
    a314:	28c6703a 	and	r3,r5,r3
    a318:	180c90fa 	slli	r6,r3,3
    a31c:	1081ffcc 	andi	r2,r2,2047
    a320:	2006d77a 	srli	r3,r4,29
    a324:	11c00044 	addi	r7,r2,1
    a328:	39c1ff8c 	andi	r7,r7,2046
    a32c:	280ad7fa 	srli	r5,r5,31
    a330:	201090fa 	slli	r8,r4,3
    a334:	1986b03a 	or	r3,r3,r6
    a338:	38000b26 	beq	r7,zero,a368 <__truncdfsf2+0x60>
    a33c:	11bf2004 	addi	r6,r2,-896
    a340:	31c03fc8 	cmpgei	r7,r6,255
    a344:	38001226 	beq	r7,zero,a390 <__truncdfsf2+0x88>
    a348:	00bfffc4 	movi	r2,-1
    a34c:	0007883a 	mov	r3,zero
    a350:	10803fcc 	andi	r2,r2,255
    a354:	100495fa 	slli	r2,r2,23
    a358:	280a97fa 	slli	r5,r5,31
    a35c:	10c4b03a 	or	r2,r2,r3
    a360:	1144b03a 	or	r2,r2,r5
    a364:	f800283a 	ret
    a368:	1a10b03a 	or	r8,r3,r8
    a36c:	1000041e 	bne	r2,zero,a380 <__truncdfsf2+0x78>
    a370:	40001d1e 	bne	r8,zero,a3e8 <__truncdfsf2+0xe0>
    a374:	0005883a 	mov	r2,zero
    a378:	0007883a 	mov	r3,zero
    a37c:	003ff406 	br	a350 <__truncdfsf2+0x48>
    a380:	403ff126 	beq	r8,zero,a348 <__truncdfsf2+0x40>
    a384:	18c01034 	orhi	r3,r3,64
    a388:	00bfffc4 	movi	r2,-1
    a38c:	003ff006 	br	a350 <__truncdfsf2+0x48>
    a390:	0180170e 	bge	zero,r6,a3f0 <__truncdfsf2+0xe8>
    a394:	200891ba 	slli	r4,r4,6
    a398:	180690fa 	slli	r3,r3,3
    a39c:	4010d77a 	srli	r8,r8,29
    a3a0:	2008c03a 	cmpne	r4,r4,zero
    a3a4:	20c6b03a 	or	r3,r4,r3
    a3a8:	1a06b03a 	or	r3,r3,r8
    a3ac:	188001cc 	andi	r2,r3,7
    a3b0:	10002f26 	beq	r2,zero,a470 <__truncdfsf2+0x168>
    a3b4:	188003cc 	andi	r2,r3,15
    a3b8:	10800118 	cmpnei	r2,r2,4
    a3bc:	10000126 	beq	r2,zero,a3c4 <__truncdfsf2+0xbc>
    a3c0:	18c00104 	addi	r3,r3,4
    a3c4:	1881002c 	andhi	r2,r3,1024
    a3c8:	10002926 	beq	r2,zero,a470 <__truncdfsf2+0x168>
    a3cc:	30800044 	addi	r2,r6,1
    a3d0:	11003fe0 	cmpeqi	r4,r2,255
    a3d4:	203fdc1e 	bne	r4,zero,a348 <__truncdfsf2+0x40>
    a3d8:	180691ba 	slli	r3,r3,6
    a3dc:	1806d27a 	srli	r3,r3,9
    a3e0:	003fdb06 	br	a350 <__truncdfsf2+0x48>
    a3e4:	0005883a 	mov	r2,zero
    a3e8:	00c00144 	movi	r3,5
    a3ec:	003ffa06 	br	a3d8 <__truncdfsf2+0xd0>
    a3f0:	313ffa50 	cmplti	r4,r6,-23
    a3f4:	203ffb1e 	bne	r4,zero,a3e4 <__truncdfsf2+0xdc>
    a3f8:	01c00784 	movi	r7,30
    a3fc:	398fc83a 	sub	r7,r7,r6
    a400:	3a400808 	cmpgei	r9,r7,32
    a404:	19002034 	orhi	r4,r3,128
    a408:	48001126 	beq	r9,zero,a450 <__truncdfsf2+0x148>
    a40c:	00ffff84 	movi	r3,-2
    a410:	198dc83a 	sub	r6,r3,r6
    a414:	39c00820 	cmpeqi	r7,r7,32
    a418:	218cd83a 	srl	r6,r4,r6
    a41c:	3800031e 	bne	r7,zero,a42c <__truncdfsf2+0x124>
    a420:	10ff2884 	addi	r3,r2,-862
    a424:	20c8983a 	sll	r4,r4,r3
    a428:	4110b03a 	or	r8,r8,r4
    a42c:	4006c03a 	cmpne	r3,r8,zero
    a430:	1986b03a 	or	r3,r3,r6
    a434:	188001cc 	andi	r2,r3,7
    a438:	000d883a 	mov	r6,zero
    a43c:	103fdd1e 	bne	r2,zero,a3b4 <__truncdfsf2+0xac>
    a440:	1881002c 	andhi	r2,r3,1024
    a444:	103fe426 	beq	r2,zero,a3d8 <__truncdfsf2+0xd0>
    a448:	00800044 	movi	r2,1
    a44c:	003fe206 	br	a3d8 <__truncdfsf2+0xd0>
    a450:	10ff2084 	addi	r3,r2,-894
    a454:	40c4983a 	sll	r2,r8,r3
    a458:	20c8983a 	sll	r4,r4,r3
    a45c:	41c6d83a 	srl	r3,r8,r7
    a460:	1004c03a 	cmpne	r2,r2,zero
    a464:	1108b03a 	or	r4,r2,r4
    a468:	1906b03a 	or	r3,r3,r4
    a46c:	003ff106 	br	a434 <__truncdfsf2+0x12c>
    a470:	3005883a 	mov	r2,r6
    a474:	003fd806 	br	a3d8 <__truncdfsf2+0xd0>

0000a478 <__clzsi2>:
    a478:	00bfffd4 	movui	r2,65535
    a47c:	11000436 	bltu	r2,r4,a490 <__clzsi2+0x18>
    a480:	20804030 	cmpltui	r2,r4,256
    a484:	10000e26 	beq	r2,zero,a4c0 <__clzsi2+0x48>
    a488:	01400804 	movi	r5,32
    a48c:	00000406 	br	a4a0 <__clzsi2+0x28>
    a490:	00804034 	movhi	r2,256
    a494:	20800736 	bltu	r4,r2,a4b4 <__clzsi2+0x3c>
    a498:	2008d63a 	srli	r4,r4,24
    a49c:	01400204 	movi	r5,8
    a4a0:	00c00074 	movhi	r3,1
    a4a4:	20c7883a 	add	r3,r4,r3
    a4a8:	189fcb03 	ldbu	r2,32556(r3)
    a4ac:	2885c83a 	sub	r2,r5,r2
    a4b0:	f800283a 	ret
    a4b4:	2008d43a 	srli	r4,r4,16
    a4b8:	01400404 	movi	r5,16
    a4bc:	003ff806 	br	a4a0 <__clzsi2+0x28>
    a4c0:	2008d23a 	srli	r4,r4,8
    a4c4:	01400604 	movi	r5,24
    a4c8:	003ff506 	br	a4a0 <__clzsi2+0x28>

0000a4cc <__errno>:
    a4cc:	008000b4 	movhi	r2,2
    a4d0:	10a88b17 	ldw	r2,-24020(r2)
    a4d4:	f800283a 	ret

0000a4d8 <malloc>:
    a4d8:	008000b4 	movhi	r2,2
    a4dc:	200b883a 	mov	r5,r4
    a4e0:	11288b17 	ldw	r4,-24020(r2)
    a4e4:	000a4f81 	jmpi	a4f8 <_malloc_r>

0000a4e8 <free>:
    a4e8:	008000b4 	movhi	r2,2
    a4ec:	200b883a 	mov	r5,r4
    a4f0:	11288b17 	ldw	r4,-24020(r2)
    a4f4:	000f3a01 	jmpi	f3a0 <_free_r>

0000a4f8 <_malloc_r>:
    a4f8:	defff604 	addi	sp,sp,-40
    a4fc:	dc400115 	stw	r17,4(sp)
    a500:	2c4002c4 	addi	r17,r5,11
    a504:	dc800215 	stw	r18,8(sp)
    a508:	dfc00915 	stw	ra,36(sp)
    a50c:	df000815 	stw	fp,32(sp)
    a510:	ddc00715 	stw	r23,28(sp)
    a514:	dd800615 	stw	r22,24(sp)
    a518:	dd400515 	stw	r21,20(sp)
    a51c:	dd000415 	stw	r20,16(sp)
    a520:	dcc00315 	stw	r19,12(sp)
    a524:	dc000015 	stw	r16,0(sp)
    a528:	888005e8 	cmpgeui	r2,r17,23
    a52c:	2025883a 	mov	r18,r4
    a530:	10001b1e 	bne	r2,zero,a5a0 <_malloc_r+0xa8>
    a534:	29400468 	cmpgeui	r5,r5,17
    a538:	2800821e 	bne	r5,zero,a744 <_malloc_r+0x24c>
    a53c:	00154500 	call	15450 <__malloc_lock>
    a540:	04400404 	movi	r17,16
    a544:	00800604 	movi	r2,24
    a548:	01c00084 	movi	r7,2
    a54c:	04c000b4 	movhi	r19,2
    a550:	9ce27d04 	addi	r19,r19,-30220
    a554:	9885883a 	add	r2,r19,r2
    a558:	14000117 	ldw	r16,4(r2)
    a55c:	10fffe04 	addi	r3,r2,-8
    a560:	80c08b26 	beq	r16,r3,a790 <_malloc_r+0x298>
    a564:	80800117 	ldw	r2,4(r16)
    a568:	81000317 	ldw	r4,12(r16)
    a56c:	00ffff04 	movi	r3,-4
    a570:	10c4703a 	and	r2,r2,r3
    a574:	81400217 	ldw	r5,8(r16)
    a578:	8085883a 	add	r2,r16,r2
    a57c:	10c00117 	ldw	r3,4(r2)
    a580:	29000315 	stw	r4,12(r5)
    a584:	21400215 	stw	r5,8(r4)
    a588:	18c00054 	ori	r3,r3,1
    a58c:	10c00115 	stw	r3,4(r2)
    a590:	9009883a 	mov	r4,r18
    a594:	00154740 	call	15474 <__malloc_unlock>
    a598:	80800204 	addi	r2,r16,8
    a59c:	00006c06 	br	a750 <_malloc_r+0x258>
    a5a0:	00bffe04 	movi	r2,-8
    a5a4:	88a2703a 	and	r17,r17,r2
    a5a8:	88006616 	blt	r17,zero,a744 <_malloc_r+0x24c>
    a5ac:	89406536 	bltu	r17,r5,a744 <_malloc_r+0x24c>
    a5b0:	00154500 	call	15450 <__malloc_lock>
    a5b4:	88807e28 	cmpgeui	r2,r17,504
    a5b8:	10012226 	beq	r2,zero,aa44 <_malloc_r+0x54c>
    a5bc:	8804d27a 	srli	r2,r17,9
    a5c0:	10006f26 	beq	r2,zero,a780 <_malloc_r+0x288>
    a5c4:	10c00168 	cmpgeui	r3,r2,5
    a5c8:	1800fe1e 	bne	r3,zero,a9c4 <_malloc_r+0x4cc>
    a5cc:	8804d1ba 	srli	r2,r17,6
    a5d0:	11c00e44 	addi	r7,r2,57
    a5d4:	380890fa 	slli	r4,r7,3
    a5d8:	12000e04 	addi	r8,r2,56
    a5dc:	04c000b4 	movhi	r19,2
    a5e0:	9ce27d04 	addi	r19,r19,-30220
    a5e4:	9909883a 	add	r4,r19,r4
    a5e8:	24000117 	ldw	r16,4(r4)
    a5ec:	213ffe04 	addi	r4,r4,-8
    a5f0:	24000b26 	beq	r4,r16,a620 <_malloc_r+0x128>
    a5f4:	01bfff04 	movi	r6,-4
    a5f8:	00000306 	br	a608 <_malloc_r+0x110>
    a5fc:	1800d60e 	bge	r3,zero,a958 <_malloc_r+0x460>
    a600:	84000317 	ldw	r16,12(r16)
    a604:	24000626 	beq	r4,r16,a620 <_malloc_r+0x128>
    a608:	80800117 	ldw	r2,4(r16)
    a60c:	1184703a 	and	r2,r2,r6
    a610:	1447c83a 	sub	r3,r2,r17
    a614:	19400408 	cmpgei	r5,r3,16
    a618:	283ff826 	beq	r5,zero,a5fc <_malloc_r+0x104>
    a61c:	400f883a 	mov	r7,r8
    a620:	9c000417 	ldw	r16,16(r19)
    a624:	024000b4 	movhi	r9,2
    a628:	4a627f04 	addi	r9,r9,-30212
    a62c:	82405f26 	beq	r16,r9,a7ac <_malloc_r+0x2b4>
    a630:	80c00117 	ldw	r3,4(r16)
    a634:	00bfff04 	movi	r2,-4
    a638:	1884703a 	and	r2,r3,r2
    a63c:	1447c83a 	sub	r3,r2,r17
    a640:	19000410 	cmplti	r4,r3,16
    a644:	20010a26 	beq	r4,zero,aa70 <_malloc_r+0x578>
    a648:	9a400515 	stw	r9,20(r19)
    a64c:	9a400415 	stw	r9,16(r19)
    a650:	1800ff0e 	bge	r3,zero,aa50 <_malloc_r+0x558>
    a654:	10c08028 	cmpgeui	r3,r2,512
    a658:	1800c11e 	bne	r3,zero,a960 <_malloc_r+0x468>
    a65c:	1006d0fa 	srli	r3,r2,3
    a660:	1008d17a 	srli	r4,r2,5
    a664:	00800044 	movi	r2,1
    a668:	18c00044 	addi	r3,r3,1
    a66c:	180690fa 	slli	r3,r3,3
    a670:	99400117 	ldw	r5,4(r19)
    a674:	1104983a 	sll	r2,r2,r4
    a678:	98c7883a 	add	r3,r19,r3
    a67c:	19000017 	ldw	r4,0(r3)
    a680:	1144b03a 	or	r2,r2,r5
    a684:	197ffe04 	addi	r5,r3,-8
    a688:	81400315 	stw	r5,12(r16)
    a68c:	81000215 	stw	r4,8(r16)
    a690:	98800115 	stw	r2,4(r19)
    a694:	1c000015 	stw	r16,0(r3)
    a698:	24000315 	stw	r16,12(r4)
    a69c:	3807d0ba 	srai	r3,r7,2
    a6a0:	01000044 	movi	r4,1
    a6a4:	20c8983a 	sll	r4,r4,r3
    a6a8:	11004536 	bltu	r2,r4,a7c0 <_malloc_r+0x2c8>
    a6ac:	2086703a 	and	r3,r4,r2
    a6b0:	18000a1e 	bne	r3,zero,a6dc <_malloc_r+0x1e4>
    a6b4:	00ffff04 	movi	r3,-4
    a6b8:	2109883a 	add	r4,r4,r4
    a6bc:	38ce703a 	and	r7,r7,r3
    a6c0:	2086703a 	and	r3,r4,r2
    a6c4:	39c00104 	addi	r7,r7,4
    a6c8:	1800041e 	bne	r3,zero,a6dc <_malloc_r+0x1e4>
    a6cc:	2109883a 	add	r4,r4,r4
    a6d0:	2086703a 	and	r3,r4,r2
    a6d4:	39c00104 	addi	r7,r7,4
    a6d8:	183ffc26 	beq	r3,zero,a6cc <_malloc_r+0x1d4>
    a6dc:	02bfff04 	movi	r10,-4
    a6e0:	381690fa 	slli	r11,r7,3
    a6e4:	3819883a 	mov	r12,r7
    a6e8:	9ad7883a 	add	r11,r19,r11
    a6ec:	5811883a 	mov	r8,r11
    a6f0:	40800317 	ldw	r2,12(r8)
    a6f4:	4080bc26 	beq	r8,r2,a9e8 <_malloc_r+0x4f0>
    a6f8:	10c00117 	ldw	r3,4(r2)
    a6fc:	1021883a 	mov	r16,r2
    a700:	10800317 	ldw	r2,12(r2)
    a704:	1a86703a 	and	r3,r3,r10
    a708:	1c4bc83a 	sub	r5,r3,r17
    a70c:	29800410 	cmplti	r6,r5,16
    a710:	3000ba26 	beq	r6,zero,a9fc <_malloc_r+0x504>
    a714:	283ff716 	blt	r5,zero,a6f4 <_malloc_r+0x1fc>
    a718:	80c7883a 	add	r3,r16,r3
    a71c:	19400117 	ldw	r5,4(r3)
    a720:	81800217 	ldw	r6,8(r16)
    a724:	9009883a 	mov	r4,r18
    a728:	29400054 	ori	r5,r5,1
    a72c:	19400115 	stw	r5,4(r3)
    a730:	30800315 	stw	r2,12(r6)
    a734:	11800215 	stw	r6,8(r2)
    a738:	00154740 	call	15474 <__malloc_unlock>
    a73c:	80800204 	addi	r2,r16,8
    a740:	00000306 	br	a750 <_malloc_r+0x258>
    a744:	00800304 	movi	r2,12
    a748:	90800015 	stw	r2,0(r18)
    a74c:	0005883a 	mov	r2,zero
    a750:	dfc00917 	ldw	ra,36(sp)
    a754:	df000817 	ldw	fp,32(sp)
    a758:	ddc00717 	ldw	r23,28(sp)
    a75c:	dd800617 	ldw	r22,24(sp)
    a760:	dd400517 	ldw	r21,20(sp)
    a764:	dd000417 	ldw	r20,16(sp)
    a768:	dcc00317 	ldw	r19,12(sp)
    a76c:	dc800217 	ldw	r18,8(sp)
    a770:	dc400117 	ldw	r17,4(sp)
    a774:	dc000017 	ldw	r16,0(sp)
    a778:	dec00a04 	addi	sp,sp,40
    a77c:	f800283a 	ret
    a780:	01008004 	movi	r4,512
    a784:	01c01004 	movi	r7,64
    a788:	02000fc4 	movi	r8,63
    a78c:	003f9306 	br	a5dc <_malloc_r+0xe4>
    a790:	14000317 	ldw	r16,12(r2)
    a794:	39c00084 	addi	r7,r7,2
    a798:	143f721e 	bne	r2,r16,a564 <_malloc_r+0x6c>
    a79c:	9c000417 	ldw	r16,16(r19)
    a7a0:	024000b4 	movhi	r9,2
    a7a4:	4a627f04 	addi	r9,r9,-30212
    a7a8:	827fa11e 	bne	r16,r9,a630 <_malloc_r+0x138>
    a7ac:	3807d0ba 	srai	r3,r7,2
    a7b0:	01000044 	movi	r4,1
    a7b4:	98800117 	ldw	r2,4(r19)
    a7b8:	20c8983a 	sll	r4,r4,r3
    a7bc:	113fbb2e 	bgeu	r2,r4,a6ac <_malloc_r+0x1b4>
    a7c0:	9c000217 	ldw	r16,8(r19)
    a7c4:	00bfff04 	movi	r2,-4
    a7c8:	85400117 	ldw	r21,4(r16)
    a7cc:	a8ac703a 	and	r22,r21,r2
    a7d0:	b4400336 	bltu	r22,r17,a7e0 <_malloc_r+0x2e8>
    a7d4:	b445c83a 	sub	r2,r22,r17
    a7d8:	10c00408 	cmpgei	r3,r2,16
    a7dc:	1800541e 	bne	r3,zero,a930 <_malloc_r+0x438>
    a7e0:	008000b4 	movhi	r2,2
    a7e4:	10a88c17 	ldw	r2,-24016(r2)
    a7e8:	00c000b4 	movhi	r3,2
    a7ec:	1d6fbe17 	ldw	r21,-16648(r3)
    a7f0:	10bfffd8 	cmpnei	r2,r2,-1
    a7f4:	85b9883a 	add	fp,r16,r22
    a7f8:	8d6b883a 	add	r21,r17,r21
    a7fc:	1000d626 	beq	r2,zero,ab58 <_malloc_r+0x660>
    a800:	ad4403c4 	addi	r21,r21,4111
    a804:	00bc0004 	movi	r2,-4096
    a808:	a8aa703a 	and	r21,r21,r2
    a80c:	a80b883a 	mov	r5,r21
    a810:	9009883a 	mov	r4,r18
    a814:	000af1c0 	call	af1c <_sbrk_r>
    a818:	102f883a 	mov	r23,r2
    a81c:	10bfffd8 	cmpnei	r2,r2,-1
    a820:	1000a826 	beq	r2,zero,aac4 <_malloc_r+0x5cc>
    a824:	bf00a636 	bltu	r23,fp,aac0 <_malloc_r+0x5c8>
    a828:	008000b4 	movhi	r2,2
    a82c:	152fc917 	ldw	r20,-16604(r2)
    a830:	ad29883a 	add	r20,r21,r20
    a834:	152fc915 	stw	r20,-16604(r2)
    a838:	a007883a 	mov	r3,r20
    a83c:	e5c0ec26 	beq	fp,r23,abf0 <_malloc_r+0x6f8>
    a840:	008000b4 	movhi	r2,2
    a844:	10a88c17 	ldw	r2,-24016(r2)
    a848:	10bfffd8 	cmpnei	r2,r2,-1
    a84c:	1000ef26 	beq	r2,zero,ac0c <_malloc_r+0x714>
    a850:	bf39c83a 	sub	fp,r23,fp
    a854:	e0c7883a 	add	r3,fp,r3
    a858:	008000b4 	movhi	r2,2
    a85c:	10efc915 	stw	r3,-16604(r2)
    a860:	bf0001cc 	andi	fp,r23,7
    a864:	e000c526 	beq	fp,zero,ab7c <_malloc_r+0x684>
    a868:	bf2fc83a 	sub	r23,r23,fp
    a86c:	bdc00204 	addi	r23,r23,8
    a870:	05040204 	movi	r20,4104
    a874:	a729c83a 	sub	r20,r20,fp
    a878:	bd6b883a 	add	r21,r23,r21
    a87c:	a569c83a 	sub	r20,r20,r21
    a880:	a503ffcc 	andi	r20,r20,4095
    a884:	a00b883a 	mov	r5,r20
    a888:	9009883a 	mov	r4,r18
    a88c:	000af1c0 	call	af1c <_sbrk_r>
    a890:	10ffffe0 	cmpeqi	r3,r2,-1
    a894:	1800f31e 	bne	r3,zero,ac64 <_malloc_r+0x76c>
    a898:	15c5c83a 	sub	r2,r2,r23
    a89c:	152b883a 	add	r21,r2,r20
    a8a0:	008000b4 	movhi	r2,2
    a8a4:	116fc917 	ldw	r5,-16604(r2)
    a8a8:	9dc00215 	stw	r23,8(r19)
    a8ac:	ad400054 	ori	r21,r21,1
    a8b0:	a169883a 	add	r20,r20,r5
    a8b4:	152fc915 	stw	r20,-16604(r2)
    a8b8:	bd400115 	stw	r21,4(r23)
    a8bc:	84c0d626 	beq	r16,r19,ac18 <_malloc_r+0x720>
    a8c0:	b0800428 	cmpgeui	r2,r22,16
    a8c4:	1000d626 	beq	r2,zero,ac20 <_malloc_r+0x728>
    a8c8:	80c00117 	ldw	r3,4(r16)
    a8cc:	013ffe04 	movi	r4,-8
    a8d0:	b0bffd04 	addi	r2,r22,-12
    a8d4:	1104703a 	and	r2,r2,r4
    a8d8:	18c0004c 	andi	r3,r3,1
    a8dc:	1886b03a 	or	r3,r3,r2
    a8e0:	80c00115 	stw	r3,4(r16)
    a8e4:	01000144 	movi	r4,5
    a8e8:	8087883a 	add	r3,r16,r2
    a8ec:	19000115 	stw	r4,4(r3)
    a8f0:	19000215 	stw	r4,8(r3)
    a8f4:	10800428 	cmpgeui	r2,r2,16
    a8f8:	1000df1e 	bne	r2,zero,ac78 <_malloc_r+0x780>
    a8fc:	bd400117 	ldw	r21,4(r23)
    a900:	b821883a 	mov	r16,r23
    a904:	008000b4 	movhi	r2,2
    a908:	10afbd17 	ldw	r2,-16652(r2)
    a90c:	1500022e 	bgeu	r2,r20,a918 <_malloc_r+0x420>
    a910:	008000b4 	movhi	r2,2
    a914:	152fbd15 	stw	r20,-16652(r2)
    a918:	008000b4 	movhi	r2,2
    a91c:	10afbc17 	ldw	r2,-16656(r2)
    a920:	15006a2e 	bgeu	r2,r20,aacc <_malloc_r+0x5d4>
    a924:	008000b4 	movhi	r2,2
    a928:	152fbc15 	stw	r20,-16656(r2)
    a92c:	00006706 	br	aacc <_malloc_r+0x5d4>
    a930:	88c00054 	ori	r3,r17,1
    a934:	80c00115 	stw	r3,4(r16)
    a938:	8463883a 	add	r17,r16,r17
    a93c:	10800054 	ori	r2,r2,1
    a940:	9c400215 	stw	r17,8(r19)
    a944:	88800115 	stw	r2,4(r17)
    a948:	9009883a 	mov	r4,r18
    a94c:	00154740 	call	15474 <__malloc_unlock>
    a950:	80800204 	addi	r2,r16,8
    a954:	003f7e06 	br	a750 <_malloc_r+0x258>
    a958:	81000317 	ldw	r4,12(r16)
    a95c:	003f0506 	br	a574 <_malloc_r+0x7c>
    a960:	1006d27a 	srli	r3,r2,9
    a964:	19000168 	cmpgeui	r4,r3,5
    a968:	20005026 	beq	r4,zero,aaac <_malloc_r+0x5b4>
    a96c:	19000568 	cmpgeui	r4,r3,21
    a970:	20008c1e 	bne	r4,zero,aba4 <_malloc_r+0x6ac>
    a974:	19401704 	addi	r5,r3,92
    a978:	280a90fa 	slli	r5,r5,3
    a97c:	190016c4 	addi	r4,r3,91
    a980:	994b883a 	add	r5,r19,r5
    a984:	28c00017 	ldw	r3,0(r5)
    a988:	297ffe04 	addi	r5,r5,-8
    a98c:	28c07426 	beq	r5,r3,ab60 <_malloc_r+0x668>
    a990:	01bfff04 	movi	r6,-4
    a994:	19000117 	ldw	r4,4(r3)
    a998:	2188703a 	and	r4,r4,r6
    a99c:	1100022e 	bgeu	r2,r4,a9a8 <_malloc_r+0x4b0>
    a9a0:	18c00217 	ldw	r3,8(r3)
    a9a4:	28fffb1e 	bne	r5,r3,a994 <_malloc_r+0x49c>
    a9a8:	19400317 	ldw	r5,12(r3)
    a9ac:	98800117 	ldw	r2,4(r19)
    a9b0:	81400315 	stw	r5,12(r16)
    a9b4:	80c00215 	stw	r3,8(r16)
    a9b8:	2c000215 	stw	r16,8(r5)
    a9bc:	1c000315 	stw	r16,12(r3)
    a9c0:	003f3606 	br	a69c <_malloc_r+0x1a4>
    a9c4:	10c00568 	cmpgeui	r3,r2,21
    a9c8:	18004a26 	beq	r3,zero,aaf4 <_malloc_r+0x5fc>
    a9cc:	10c01568 	cmpgeui	r3,r2,85
    a9d0:	18007b1e 	bne	r3,zero,abc0 <_malloc_r+0x6c8>
    a9d4:	8804d33a 	srli	r2,r17,12
    a9d8:	11c01bc4 	addi	r7,r2,111
    a9dc:	380890fa 	slli	r4,r7,3
    a9e0:	12001b84 	addi	r8,r2,110
    a9e4:	003efd06 	br	a5dc <_malloc_r+0xe4>
    a9e8:	63000044 	addi	r12,r12,1
    a9ec:	608000cc 	andi	r2,r12,3
    a9f0:	42000204 	addi	r8,r8,8
    a9f4:	103f3e1e 	bne	r2,zero,a6f0 <_malloc_r+0x1f8>
    a9f8:	00004506 	br	ab10 <_malloc_r+0x618>
    a9fc:	81000217 	ldw	r4,8(r16)
    aa00:	89800054 	ori	r6,r17,1
    aa04:	81800115 	stw	r6,4(r16)
    aa08:	20800315 	stw	r2,12(r4)
    aa0c:	11000215 	stw	r4,8(r2)
    aa10:	8463883a 	add	r17,r16,r17
    aa14:	9c400515 	stw	r17,20(r19)
    aa18:	9c400415 	stw	r17,16(r19)
    aa1c:	28800054 	ori	r2,r5,1
    aa20:	88800115 	stw	r2,4(r17)
    aa24:	8a400315 	stw	r9,12(r17)
    aa28:	8a400215 	stw	r9,8(r17)
    aa2c:	80c7883a 	add	r3,r16,r3
    aa30:	19400015 	stw	r5,0(r3)
    aa34:	9009883a 	mov	r4,r18
    aa38:	00154740 	call	15474 <__malloc_unlock>
    aa3c:	80800204 	addi	r2,r16,8
    aa40:	003f4306 	br	a750 <_malloc_r+0x258>
    aa44:	880ed0fa 	srli	r7,r17,3
    aa48:	88800204 	addi	r2,r17,8
    aa4c:	003ebf06 	br	a54c <_malloc_r+0x54>
    aa50:	8085883a 	add	r2,r16,r2
    aa54:	10c00117 	ldw	r3,4(r2)
    aa58:	9009883a 	mov	r4,r18
    aa5c:	18c00054 	ori	r3,r3,1
    aa60:	10c00115 	stw	r3,4(r2)
    aa64:	00154740 	call	15474 <__malloc_unlock>
    aa68:	80800204 	addi	r2,r16,8
    aa6c:	003f3806 	br	a750 <_malloc_r+0x258>
    aa70:	89000054 	ori	r4,r17,1
    aa74:	81000115 	stw	r4,4(r16)
    aa78:	8463883a 	add	r17,r16,r17
    aa7c:	9c400515 	stw	r17,20(r19)
    aa80:	9c400415 	stw	r17,16(r19)
    aa84:	19000054 	ori	r4,r3,1
    aa88:	89000115 	stw	r4,4(r17)
    aa8c:	8085883a 	add	r2,r16,r2
    aa90:	8a400315 	stw	r9,12(r17)
    aa94:	8a400215 	stw	r9,8(r17)
    aa98:	10c00015 	stw	r3,0(r2)
    aa9c:	9009883a 	mov	r4,r18
    aaa0:	00154740 	call	15474 <__malloc_unlock>
    aaa4:	80800204 	addi	r2,r16,8
    aaa8:	003f2906 	br	a750 <_malloc_r+0x258>
    aaac:	1006d1ba 	srli	r3,r2,6
    aab0:	19400e44 	addi	r5,r3,57
    aab4:	280a90fa 	slli	r5,r5,3
    aab8:	19000e04 	addi	r4,r3,56
    aabc:	003fb006 	br	a980 <_malloc_r+0x488>
    aac0:	84c04626 	beq	r16,r19,abdc <_malloc_r+0x6e4>
    aac4:	9c000217 	ldw	r16,8(r19)
    aac8:	85400117 	ldw	r21,4(r16)
    aacc:	00bfff04 	movi	r2,-4
    aad0:	a8aa703a 	and	r21,r21,r2
    aad4:	ac45c83a 	sub	r2,r21,r17
    aad8:	ac400236 	bltu	r21,r17,aae4 <_malloc_r+0x5ec>
    aadc:	10c00408 	cmpgei	r3,r2,16
    aae0:	183f931e 	bne	r3,zero,a930 <_malloc_r+0x438>
    aae4:	9009883a 	mov	r4,r18
    aae8:	00154740 	call	15474 <__malloc_unlock>
    aaec:	0005883a 	mov	r2,zero
    aaf0:	003f1706 	br	a750 <_malloc_r+0x258>
    aaf4:	11c01704 	addi	r7,r2,92
    aaf8:	380890fa 	slli	r4,r7,3
    aafc:	120016c4 	addi	r8,r2,91
    ab00:	003eb606 	br	a5dc <_malloc_r+0xe4>
    ab04:	58800217 	ldw	r2,8(r11)
    ab08:	39ffffc4 	addi	r7,r7,-1
    ab0c:	12c0701e 	bne	r2,r11,acd0 <_malloc_r+0x7d8>
    ab10:	388000cc 	andi	r2,r7,3
    ab14:	5afffe04 	addi	r11,r11,-8
    ab18:	103ffa1e 	bne	r2,zero,ab04 <_malloc_r+0x60c>
    ab1c:	98c00117 	ldw	r3,4(r19)
    ab20:	0104303a 	nor	r2,zero,r4
    ab24:	10c4703a 	and	r2,r2,r3
    ab28:	98800115 	stw	r2,4(r19)
    ab2c:	2109883a 	add	r4,r4,r4
    ab30:	113f2336 	bltu	r2,r4,a7c0 <_malloc_r+0x2c8>
    ab34:	203f2226 	beq	r4,zero,a7c0 <_malloc_r+0x2c8>
    ab38:	2086703a 	and	r3,r4,r2
    ab3c:	1800041e 	bne	r3,zero,ab50 <_malloc_r+0x658>
    ab40:	2109883a 	add	r4,r4,r4
    ab44:	2086703a 	and	r3,r4,r2
    ab48:	63000104 	addi	r12,r12,4
    ab4c:	183ffc26 	beq	r3,zero,ab40 <_malloc_r+0x648>
    ab50:	600f883a 	mov	r7,r12
    ab54:	003ee206 	br	a6e0 <_malloc_r+0x1e8>
    ab58:	ad400404 	addi	r21,r21,16
    ab5c:	003f2b06 	br	a80c <_malloc_r+0x314>
    ab60:	2009d0ba 	srai	r4,r4,2
    ab64:	00800044 	movi	r2,1
    ab68:	99800117 	ldw	r6,4(r19)
    ab6c:	1104983a 	sll	r2,r2,r4
    ab70:	1184b03a 	or	r2,r2,r6
    ab74:	98800115 	stw	r2,4(r19)
    ab78:	003f8d06 	br	a9b0 <_malloc_r+0x4b8>
    ab7c:	bd69883a 	add	r20,r23,r21
    ab80:	0529c83a 	sub	r20,zero,r20
    ab84:	a503ffcc 	andi	r20,r20,4095
    ab88:	a00b883a 	mov	r5,r20
    ab8c:	9009883a 	mov	r4,r18
    ab90:	000af1c0 	call	af1c <_sbrk_r>
    ab94:	10ffffe0 	cmpeqi	r3,r2,-1
    ab98:	183f3f26 	beq	r3,zero,a898 <_malloc_r+0x3a0>
    ab9c:	0029883a 	mov	r20,zero
    aba0:	003f3f06 	br	a8a0 <_malloc_r+0x3a8>
    aba4:	19001568 	cmpgeui	r4,r3,85
    aba8:	2000201e 	bne	r4,zero,ac2c <_malloc_r+0x734>
    abac:	1006d33a 	srli	r3,r2,12
    abb0:	19401bc4 	addi	r5,r3,111
    abb4:	280a90fa 	slli	r5,r5,3
    abb8:	19001b84 	addi	r4,r3,110
    abbc:	003f7006 	br	a980 <_malloc_r+0x488>
    abc0:	10c05568 	cmpgeui	r3,r2,341
    abc4:	1800201e 	bne	r3,zero,ac48 <_malloc_r+0x750>
    abc8:	8804d3fa 	srli	r2,r17,15
    abcc:	11c01e04 	addi	r7,r2,120
    abd0:	380890fa 	slli	r4,r7,3
    abd4:	12001dc4 	addi	r8,r2,119
    abd8:	003e8006 	br	a5dc <_malloc_r+0xe4>
    abdc:	008000b4 	movhi	r2,2
    abe0:	10efc917 	ldw	r3,-16604(r2)
    abe4:	a8c7883a 	add	r3,r21,r3
    abe8:	10efc915 	stw	r3,-16604(r2)
    abec:	003f1406 	br	a840 <_malloc_r+0x348>
    abf0:	e083ffcc 	andi	r2,fp,4095
    abf4:	103f121e 	bne	r2,zero,a840 <_malloc_r+0x348>
    abf8:	9c000217 	ldw	r16,8(r19)
    abfc:	b56b883a 	add	r21,r22,r21
    ac00:	ad400054 	ori	r21,r21,1
    ac04:	85400115 	stw	r21,4(r16)
    ac08:	003f3e06 	br	a904 <_malloc_r+0x40c>
    ac0c:	008000b4 	movhi	r2,2
    ac10:	15e88c15 	stw	r23,-24016(r2)
    ac14:	003f1206 	br	a860 <_malloc_r+0x368>
    ac18:	b821883a 	mov	r16,r23
    ac1c:	003f3906 	br	a904 <_malloc_r+0x40c>
    ac20:	00800044 	movi	r2,1
    ac24:	b8800115 	stw	r2,4(r23)
    ac28:	003fae06 	br	aae4 <_malloc_r+0x5ec>
    ac2c:	19005568 	cmpgeui	r4,r3,341
    ac30:	2000191e 	bne	r4,zero,ac98 <_malloc_r+0x7a0>
    ac34:	1006d3fa 	srli	r3,r2,15
    ac38:	19401e04 	addi	r5,r3,120
    ac3c:	280a90fa 	slli	r5,r5,3
    ac40:	19001dc4 	addi	r4,r3,119
    ac44:	003f4e06 	br	a980 <_malloc_r+0x488>
    ac48:	10815568 	cmpgeui	r2,r2,1365
    ac4c:	1000191e 	bne	r2,zero,acb4 <_malloc_r+0x7bc>
    ac50:	8804d4ba 	srli	r2,r17,18
    ac54:	11c01f44 	addi	r7,r2,125
    ac58:	380890fa 	slli	r4,r7,3
    ac5c:	12001f04 	addi	r8,r2,124
    ac60:	003e5e06 	br	a5dc <_malloc_r+0xe4>
    ac64:	e73ffe04 	addi	fp,fp,-8
    ac68:	af2b883a 	add	r21,r21,fp
    ac6c:	adebc83a 	sub	r21,r21,r23
    ac70:	0029883a 	mov	r20,zero
    ac74:	003f0a06 	br	a8a0 <_malloc_r+0x3a8>
    ac78:	81400204 	addi	r5,r16,8
    ac7c:	9009883a 	mov	r4,r18
    ac80:	000f3a00 	call	f3a0 <_free_r>
    ac84:	9c000217 	ldw	r16,8(r19)
    ac88:	008000b4 	movhi	r2,2
    ac8c:	152fc917 	ldw	r20,-16604(r2)
    ac90:	85400117 	ldw	r21,4(r16)
    ac94:	003f1b06 	br	a904 <_malloc_r+0x40c>
    ac98:	18c15568 	cmpgeui	r3,r3,1365
    ac9c:	1800091e 	bne	r3,zero,acc4 <_malloc_r+0x7cc>
    aca0:	1006d4ba 	srli	r3,r2,18
    aca4:	19401f44 	addi	r5,r3,125
    aca8:	280a90fa 	slli	r5,r5,3
    acac:	19001f04 	addi	r4,r3,124
    acb0:	003f3306 	br	a980 <_malloc_r+0x488>
    acb4:	0100fe04 	movi	r4,1016
    acb8:	01c01fc4 	movi	r7,127
    acbc:	02001f84 	movi	r8,126
    acc0:	003e4606 	br	a5dc <_malloc_r+0xe4>
    acc4:	0140fe04 	movi	r5,1016
    acc8:	01001f84 	movi	r4,126
    accc:	003f2c06 	br	a980 <_malloc_r+0x488>
    acd0:	98800117 	ldw	r2,4(r19)
    acd4:	003f9506 	br	ab2c <_malloc_r+0x634>

0000acd8 <memcpy>:
    acd8:	30c00430 	cmpltui	r3,r6,16
    acdc:	2005883a 	mov	r2,r4
    ace0:	18002d1e 	bne	r3,zero,ad98 <memcpy+0xc0>
    ace4:	2906b03a 	or	r3,r5,r4
    ace8:	18c000cc 	andi	r3,r3,3
    acec:	1800351e 	bne	r3,zero,adc4 <memcpy+0xec>
    acf0:	32fffc04 	addi	r11,r6,-16
    acf4:	5816d13a 	srli	r11,r11,4
    acf8:	280f883a 	mov	r7,r5
    acfc:	2007883a 	mov	r3,r4
    ad00:	5ac00044 	addi	r11,r11,1
    ad04:	5816913a 	slli	r11,r11,4
    ad08:	22d5883a 	add	r10,r4,r11
    ad0c:	39000117 	ldw	r4,4(r7)
    ad10:	3a400017 	ldw	r9,0(r7)
    ad14:	3a000217 	ldw	r8,8(r7)
    ad18:	19000115 	stw	r4,4(r3)
    ad1c:	39000317 	ldw	r4,12(r7)
    ad20:	1a400015 	stw	r9,0(r3)
    ad24:	1a000215 	stw	r8,8(r3)
    ad28:	19000315 	stw	r4,12(r3)
    ad2c:	18c00404 	addi	r3,r3,16
    ad30:	39c00404 	addi	r7,r7,16
    ad34:	50fff51e 	bne	r10,r3,ad0c <memcpy+0x34>
    ad38:	3100030c 	andi	r4,r6,12
    ad3c:	2acb883a 	add	r5,r5,r11
    ad40:	320003cc 	andi	r8,r6,15
    ad44:	20002226 	beq	r4,zero,add0 <memcpy+0xf8>
    ad48:	280f883a 	mov	r7,r5
    ad4c:	1813883a 	mov	r9,r3
    ad50:	39c00104 	addi	r7,r7,4
    ad54:	3abfff17 	ldw	r10,-4(r7)
    ad58:	41c9c83a 	sub	r4,r8,r7
    ad5c:	2909883a 	add	r4,r5,r4
    ad60:	4a800015 	stw	r10,0(r9)
    ad64:	21000128 	cmpgeui	r4,r4,4
    ad68:	4a400104 	addi	r9,r9,4
    ad6c:	203ff81e 	bne	r4,zero,ad50 <memcpy+0x78>
    ad70:	413fff04 	addi	r4,r8,-4
    ad74:	2008d0ba 	srli	r4,r4,2
    ad78:	318000cc 	andi	r6,r6,3
    ad7c:	31ffffc4 	addi	r7,r6,-1
    ad80:	21000044 	addi	r4,r4,1
    ad84:	200890ba 	slli	r4,r4,2
    ad88:	1907883a 	add	r3,r3,r4
    ad8c:	290b883a 	add	r5,r5,r4
    ad90:	3000041e 	bne	r6,zero,ada4 <memcpy+0xcc>
    ad94:	f800283a 	ret
    ad98:	2007883a 	mov	r3,r4
    ad9c:	31ffffc4 	addi	r7,r6,-1
    ada0:	303ffc26 	beq	r6,zero,ad94 <memcpy+0xbc>
    ada4:	39c00044 	addi	r7,r7,1
    ada8:	19cf883a 	add	r7,r3,r7
    adac:	29800003 	ldbu	r6,0(r5)
    adb0:	18c00044 	addi	r3,r3,1
    adb4:	29400044 	addi	r5,r5,1
    adb8:	19bfffc5 	stb	r6,-1(r3)
    adbc:	38fffb1e 	bne	r7,r3,adac <memcpy+0xd4>
    adc0:	f800283a 	ret
    adc4:	31ffffc4 	addi	r7,r6,-1
    adc8:	2007883a 	mov	r3,r4
    adcc:	003ff506 	br	ada4 <memcpy+0xcc>
    add0:	400d883a 	mov	r6,r8
    add4:	003ff106 	br	ad9c <memcpy+0xc4>

0000add8 <_printf_r>:
    add8:	defffd04 	addi	sp,sp,-12
    addc:	2805883a 	mov	r2,r5
    ade0:	dfc00015 	stw	ra,0(sp)
    ade4:	d9800115 	stw	r6,4(sp)
    ade8:	d9c00215 	stw	r7,8(sp)
    adec:	21400217 	ldw	r5,8(r4)
    adf0:	d9c00104 	addi	r7,sp,4
    adf4:	100d883a 	mov	r6,r2
    adf8:	000b00c0 	call	b00c <___vfprintf_internal_r>
    adfc:	dfc00017 	ldw	ra,0(sp)
    ae00:	dec00304 	addi	sp,sp,12
    ae04:	f800283a 	ret

0000ae08 <printf>:
    ae08:	defffc04 	addi	sp,sp,-16
    ae0c:	dfc00015 	stw	ra,0(sp)
    ae10:	d9400115 	stw	r5,4(sp)
    ae14:	d9800215 	stw	r6,8(sp)
    ae18:	d9c00315 	stw	r7,12(sp)
    ae1c:	008000b4 	movhi	r2,2
    ae20:	10a88b17 	ldw	r2,-24020(r2)
    ae24:	200b883a 	mov	r5,r4
    ae28:	d9800104 	addi	r6,sp,4
    ae2c:	11000217 	ldw	r4,8(r2)
    ae30:	000d0240 	call	d024 <__vfprintf_internal>
    ae34:	dfc00017 	ldw	ra,0(sp)
    ae38:	dec00404 	addi	sp,sp,16
    ae3c:	f800283a 	ret

0000ae40 <_puts_r>:
    ae40:	defff504 	addi	sp,sp,-44
    ae44:	dc000815 	stw	r16,32(sp)
    ae48:	2021883a 	mov	r16,r4
    ae4c:	2809883a 	mov	r4,r5
    ae50:	dc400915 	stw	r17,36(sp)
    ae54:	dfc00a15 	stw	ra,40(sp)
    ae58:	2823883a 	mov	r17,r5
    ae5c:	000af740 	call	af74 <strlen>
    ae60:	11000044 	addi	r4,r2,1
    ae64:	d8800515 	stw	r2,20(sp)
    ae68:	00800044 	movi	r2,1
    ae6c:	00c000b4 	movhi	r3,2
    ae70:	d8800715 	stw	r2,28(sp)
    ae74:	d8800404 	addi	r2,sp,16
    ae78:	18e00b04 	addi	r3,r3,-32724
    ae7c:	d8800115 	stw	r2,4(sp)
    ae80:	00800084 	movi	r2,2
    ae84:	dc400415 	stw	r17,16(sp)
    ae88:	d8c00615 	stw	r3,24(sp)
    ae8c:	d9000315 	stw	r4,12(sp)
    ae90:	d8800215 	stw	r2,8(sp)
    ae94:	81400217 	ldw	r5,8(r16)
    ae98:	80000226 	beq	r16,zero,aea4 <_puts_r+0x64>
    ae9c:	80800e17 	ldw	r2,56(r16)
    aea0:	10001326 	beq	r2,zero,aef0 <_puts_r+0xb0>
    aea4:	2880030b 	ldhu	r2,12(r5)
    aea8:	10c8000c 	andi	r3,r2,8192
    aeac:	1800061e 	bne	r3,zero,aec8 <_puts_r+0x88>
    aeb0:	28c01917 	ldw	r3,100(r5)
    aeb4:	0137ffc4 	movi	r4,-8193
    aeb8:	10880014 	ori	r2,r2,8192
    aebc:	1906703a 	and	r3,r3,r4
    aec0:	2880030d 	sth	r2,12(r5)
    aec4:	28c01915 	stw	r3,100(r5)
    aec8:	d9800104 	addi	r6,sp,4
    aecc:	8009883a 	mov	r4,r16
    aed0:	000f69c0 	call	f69c <__sfvwrite_r>
    aed4:	10000b1e 	bne	r2,zero,af04 <_puts_r+0xc4>
    aed8:	00800284 	movi	r2,10
    aedc:	dfc00a17 	ldw	ra,40(sp)
    aee0:	dc400917 	ldw	r17,36(sp)
    aee4:	dc000817 	ldw	r16,32(sp)
    aee8:	dec00b04 	addi	sp,sp,44
    aeec:	f800283a 	ret
    aef0:	8009883a 	mov	r4,r16
    aef4:	d9400015 	stw	r5,0(sp)
    aef8:	000f23c0 	call	f23c <__sinit>
    aefc:	d9400017 	ldw	r5,0(sp)
    af00:	003fe806 	br	aea4 <_puts_r+0x64>
    af04:	00bfffc4 	movi	r2,-1
    af08:	003ff406 	br	aedc <_puts_r+0x9c>

0000af0c <puts>:
    af0c:	008000b4 	movhi	r2,2
    af10:	200b883a 	mov	r5,r4
    af14:	11288b17 	ldw	r4,-24020(r2)
    af18:	000ae401 	jmpi	ae40 <_puts_r>

0000af1c <_sbrk_r>:
    af1c:	defffe04 	addi	sp,sp,-8
    af20:	dc000015 	stw	r16,0(sp)
    af24:	008000b4 	movhi	r2,2
    af28:	2021883a 	mov	r16,r4
    af2c:	2809883a 	mov	r4,r5
    af30:	dfc00115 	stw	ra,4(sp)
    af34:	102fbf15 	stw	zero,-16644(r2)
    af38:	001564c0 	call	1564c <sbrk>
    af3c:	10ffffd8 	cmpnei	r3,r2,-1
    af40:	18000426 	beq	r3,zero,af54 <_sbrk_r+0x38>
    af44:	dfc00117 	ldw	ra,4(sp)
    af48:	dc000017 	ldw	r16,0(sp)
    af4c:	dec00204 	addi	sp,sp,8
    af50:	f800283a 	ret
    af54:	00c000b4 	movhi	r3,2
    af58:	18efbf17 	ldw	r3,-16644(r3)
    af5c:	183ff926 	beq	r3,zero,af44 <_sbrk_r+0x28>
    af60:	80c00015 	stw	r3,0(r16)
    af64:	dfc00117 	ldw	ra,4(sp)
    af68:	dc000017 	ldw	r16,0(sp)
    af6c:	dec00204 	addi	sp,sp,8
    af70:	f800283a 	ret

0000af74 <strlen>:
    af74:	208000cc 	andi	r2,r4,3
    af78:	10000926 	beq	r2,zero,afa0 <strlen+0x2c>
    af7c:	2005883a 	mov	r2,r4
    af80:	00000306 	br	af90 <strlen+0x1c>
    af84:	10800044 	addi	r2,r2,1
    af88:	10c000cc 	andi	r3,r2,3
    af8c:	18000526 	beq	r3,zero,afa4 <strlen+0x30>
    af90:	10c00007 	ldb	r3,0(r2)
    af94:	183ffb1e 	bne	r3,zero,af84 <strlen+0x10>
    af98:	1105c83a 	sub	r2,r2,r4
    af9c:	f800283a 	ret
    afa0:	2005883a 	mov	r2,r4
    afa4:	11400017 	ldw	r5,0(r2)
    afa8:	01ffbff4 	movhi	r7,65279
    afac:	39ffbfc4 	addi	r7,r7,-257
    afb0:	29c7883a 	add	r3,r5,r7
    afb4:	01a02074 	movhi	r6,32897
    afb8:	014a303a 	nor	r5,zero,r5
    afbc:	1946703a 	and	r3,r3,r5
    afc0:	31a02004 	addi	r6,r6,-32640
    afc4:	1986703a 	and	r3,r3,r6
    afc8:	1800071e 	bne	r3,zero,afe8 <strlen+0x74>
    afcc:	11400117 	ldw	r5,4(r2)
    afd0:	10800104 	addi	r2,r2,4
    afd4:	29c7883a 	add	r3,r5,r7
    afd8:	014a303a 	nor	r5,zero,r5
    afdc:	1946703a 	and	r3,r3,r5
    afe0:	1986703a 	and	r3,r3,r6
    afe4:	183ff926 	beq	r3,zero,afcc <strlen+0x58>
    afe8:	10c00007 	ldb	r3,0(r2)
    afec:	183fea26 	beq	r3,zero,af98 <strlen+0x24>
    aff0:	10c00047 	ldb	r3,1(r2)
    aff4:	10800044 	addi	r2,r2,1
    aff8:	183fe726 	beq	r3,zero,af98 <strlen+0x24>
    affc:	10c00047 	ldb	r3,1(r2)
    b000:	10800044 	addi	r2,r2,1
    b004:	183ffa1e 	bne	r3,zero,aff0 <strlen+0x7c>
    b008:	003fe306 	br	af98 <strlen+0x24>

0000b00c <___vfprintf_internal_r>:
    b00c:	deffbf04 	addi	sp,sp,-260
    b010:	dfc04015 	stw	ra,256(sp)
    b014:	dd803d15 	stw	r22,244(sp)
    b018:	dcc03a15 	stw	r19,232(sp)
    b01c:	dc803915 	stw	r18,228(sp)
    b020:	2027883a 	mov	r19,r4
    b024:	2825883a 	mov	r18,r5
    b028:	302d883a 	mov	r22,r6
    b02c:	d9c00615 	stw	r7,24(sp)
    b030:	df003f15 	stw	fp,252(sp)
    b034:	ddc03e15 	stw	r23,248(sp)
    b038:	dd403c15 	stw	r21,240(sp)
    b03c:	dd003b15 	stw	r20,236(sp)
    b040:	dc403815 	stw	r17,224(sp)
    b044:	dc003715 	stw	r16,220(sp)
    b048:	000fc780 	call	fc78 <_localeconv_r>
    b04c:	10800017 	ldw	r2,0(r2)
    b050:	1009883a 	mov	r4,r2
    b054:	d8800d15 	stw	r2,52(sp)
    b058:	000af740 	call	af74 <strlen>
    b05c:	d8800b15 	stw	r2,44(sp)
    b060:	98000226 	beq	r19,zero,b06c <___vfprintf_internal_r+0x60>
    b064:	98800e17 	ldw	r2,56(r19)
    b068:	1001e026 	beq	r2,zero,b7ec <___vfprintf_internal_r+0x7e0>
    b06c:	9080030b 	ldhu	r2,12(r18)
    b070:	10c8000c 	andi	r3,r2,8192
    b074:	1800061e 	bne	r3,zero,b090 <___vfprintf_internal_r+0x84>
    b078:	90c01917 	ldw	r3,100(r18)
    b07c:	0137ffc4 	movi	r4,-8193
    b080:	10880014 	ori	r2,r2,8192
    b084:	1906703a 	and	r3,r3,r4
    b088:	9080030d 	sth	r2,12(r18)
    b08c:	90c01915 	stw	r3,100(r18)
    b090:	10c0020c 	andi	r3,r2,8
    b094:	1800fc26 	beq	r3,zero,b488 <___vfprintf_internal_r+0x47c>
    b098:	90c00417 	ldw	r3,16(r18)
    b09c:	1800fa26 	beq	r3,zero,b488 <___vfprintf_internal_r+0x47c>
    b0a0:	1080068c 	andi	r2,r2,26
    b0a4:	10800298 	cmpnei	r2,r2,10
    b0a8:	1000ff26 	beq	r2,zero,b4a8 <___vfprintf_internal_r+0x49c>
    b0ac:	d8802704 	addi	r2,sp,156
    b0b0:	b02f883a 	mov	r23,r22
    b0b4:	d8801a15 	stw	r2,104(sp)
    b0b8:	d8001c15 	stw	zero,112(sp)
    b0bc:	d8001b15 	stw	zero,108(sp)
    b0c0:	d8000815 	stw	zero,32(sp)
    b0c4:	d8000915 	stw	zero,36(sp)
    b0c8:	d8000a15 	stw	zero,40(sp)
    b0cc:	d8000c15 	stw	zero,48(sp)
    b0d0:	d8001015 	stw	zero,64(sp)
    b0d4:	d8000515 	stw	zero,20(sp)
    b0d8:	102d883a 	mov	r22,r2
    b0dc:	b8800007 	ldb	r2,0(r23)
    b0e0:	1000d726 	beq	r2,zero,b440 <___vfprintf_internal_r+0x434>
    b0e4:	b821883a 	mov	r16,r23
    b0e8:	00000306 	br	b0f8 <___vfprintf_internal_r+0xec>
    b0ec:	80800047 	ldb	r2,1(r16)
    b0f0:	84000044 	addi	r16,r16,1
    b0f4:	10012226 	beq	r2,zero,b580 <___vfprintf_internal_r+0x574>
    b0f8:	10800958 	cmpnei	r2,r2,37
    b0fc:	103ffb1e 	bne	r2,zero,b0ec <___vfprintf_internal_r+0xe0>
    b100:	85e3c83a 	sub	r17,r16,r23
    b104:	85c1201e 	bne	r16,r23,b588 <___vfprintf_internal_r+0x57c>
    b108:	80800003 	ldbu	r2,0(r16)
    b10c:	10803fcc 	andi	r2,r2,255
    b110:	1080201c 	xori	r2,r2,128
    b114:	10bfe004 	addi	r2,r2,-128
    b118:	1000c926 	beq	r2,zero,b440 <___vfprintf_internal_r+0x434>
    b11c:	82c00047 	ldb	r11,1(r16)
    b120:	85c00044 	addi	r23,r16,1
    b124:	d8001345 	stb	zero,77(sp)
    b128:	0009883a 	mov	r4,zero
    b12c:	000b883a 	mov	r5,zero
    b130:	023fffc4 	movi	r8,-1
    b134:	0021883a 	mov	r16,zero
    b138:	0019883a 	mov	r12,zero
    b13c:	bdc00044 	addi	r23,r23,1
    b140:	5839883a 	mov	fp,r11
    b144:	e0bff804 	addi	r2,fp,-32
    b148:	10c01668 	cmpgeui	r3,r2,89
    b14c:	18006c1e 	bne	r3,zero,b300 <___vfprintf_internal_r+0x2f4>
    b150:	100490ba 	slli	r2,r2,2
    b154:	00c00074 	movhi	r3,1
    b158:	10c7883a 	add	r3,r2,r3
    b15c:	18ac5917 	ldw	r2,-20124(r3)
    b160:	1000683a 	jmp	r2
    b164:	0000ba18 	cmpnei	zero,zero,744
    b168:	0000b300 	call	b30 <hamming_window+0xe8>
    b16c:	0000b300 	call	b30 <hamming_window+0xe8>
    b170:	0000ba0c 	andi	zero,zero,744
    b174:	0000b300 	call	b30 <hamming_window+0xe8>
    b178:	0000b300 	call	b30 <hamming_window+0xe8>
    b17c:	0000b300 	call	b30 <hamming_window+0xe8>
    b180:	0000b300 	call	b30 <hamming_window+0xe8>
    b184:	0000b300 	call	b30 <hamming_window+0xe8>
    b188:	0000b300 	call	b30 <hamming_window+0xe8>
    b18c:	0000b890 	cmplti	zero,zero,738
    b190:	0000b9fc 	xorhi	zero,zero,743
    b194:	0000b300 	call	b30 <hamming_window+0xe8>
    b198:	0000b8a8 	cmpgeui	zero,zero,738
    b19c:	0000b8b4 	movhi	zero,738
    b1a0:	0000b300 	call	b30 <hamming_window+0xe8>
    b1a4:	0000b9f0 	cmpltui	zero,zero,743
    b1a8:	0000b2c8 	cmpgei	zero,zero,715
    b1ac:	0000b2c8 	cmpgei	zero,zero,715
    b1b0:	0000b2c8 	cmpgei	zero,zero,715
    b1b4:	0000b2c8 	cmpgei	zero,zero,715
    b1b8:	0000b2c8 	cmpgei	zero,zero,715
    b1bc:	0000b2c8 	cmpgei	zero,zero,715
    b1c0:	0000b2c8 	cmpgei	zero,zero,715
    b1c4:	0000b2c8 	cmpgei	zero,zero,715
    b1c8:	0000b2c8 	cmpgei	zero,zero,715
    b1cc:	0000b300 	call	b30 <hamming_window+0xe8>
    b1d0:	0000b300 	call	b30 <hamming_window+0xe8>
    b1d4:	0000b300 	call	b30 <hamming_window+0xe8>
    b1d8:	0000b300 	call	b30 <hamming_window+0xe8>
    b1dc:	0000b300 	call	b30 <hamming_window+0xe8>
    b1e0:	0000b300 	call	b30 <hamming_window+0xe8>
    b1e4:	0000b300 	call	b30 <hamming_window+0xe8>
    b1e8:	0000b300 	call	b30 <hamming_window+0xe8>
    b1ec:	0000b300 	call	b30 <hamming_window+0xe8>
    b1f0:	0000b300 	call	b30 <hamming_window+0xe8>
    b1f4:	0000b900 	call	b90 <hamming_window+0x148>
    b1f8:	0000b5e4 	muli	zero,zero,727
    b1fc:	0000b300 	call	b30 <hamming_window+0xe8>
    b200:	0000b5e4 	muli	zero,zero,727
    b204:	0000b300 	call	b30 <hamming_window+0xe8>
    b208:	0000b300 	call	b30 <hamming_window+0xe8>
    b20c:	0000b300 	call	b30 <hamming_window+0xe8>
    b210:	0000b300 	call	b30 <hamming_window+0xe8>
    b214:	0000bb98 	cmpnei	zero,zero,750
    b218:	0000b300 	call	b30 <hamming_window+0xe8>
    b21c:	0000b300 	call	b30 <hamming_window+0xe8>
    b220:	0000b518 	cmpnei	zero,zero,724
    b224:	0000b300 	call	b30 <hamming_window+0xe8>
    b228:	0000b300 	call	b30 <hamming_window+0xe8>
    b22c:	0000b300 	call	b30 <hamming_window+0xe8>
    b230:	0000b300 	call	b30 <hamming_window+0xe8>
    b234:	0000b300 	call	b30 <hamming_window+0xe8>
    b238:	0000b4f0 	cmpltui	zero,zero,723
    b23c:	0000b300 	call	b30 <hamming_window+0xe8>
    b240:	0000b300 	call	b30 <hamming_window+0xe8>
    b244:	0000bbd8 	cmpnei	zero,zero,751
    b248:	0000b300 	call	b30 <hamming_window+0xe8>
    b24c:	0000b300 	call	b30 <hamming_window+0xe8>
    b250:	0000b300 	call	b30 <hamming_window+0xe8>
    b254:	0000b300 	call	b30 <hamming_window+0xe8>
    b258:	0000b300 	call	b30 <hamming_window+0xe8>
    b25c:	0000b300 	call	b30 <hamming_window+0xe8>
    b260:	0000b300 	call	b30 <hamming_window+0xe8>
    b264:	0000b300 	call	b30 <hamming_window+0xe8>
    b268:	0000b300 	call	b30 <hamming_window+0xe8>
    b26c:	0000b300 	call	b30 <hamming_window+0xe8>
    b270:	0000bbb0 	cmpltui	zero,zero,750
    b274:	0000b7f8 	rdprs	zero,zero,735
    b278:	0000b5e4 	muli	zero,zero,727
    b27c:	0000b5e4 	muli	zero,zero,727
    b280:	0000b5e4 	muli	zero,zero,727
    b284:	0000bba4 	muli	zero,zero,750
    b288:	0000b7f8 	rdprs	zero,zero,735
    b28c:	0000b300 	call	b30 <hamming_window+0xe8>
    b290:	0000b300 	call	b30 <hamming_window+0xe8>
    b294:	0000ba44 	movi	zero,745
    b298:	0000b300 	call	b30 <hamming_window+0xe8>
    b29c:	0000bb58 	cmpnei	zero,zero,749
    b2a0:	0000b51c 	xori	zero,zero,724
    b2a4:	0000bb18 	cmpnei	zero,zero,748
    b2a8:	0000bb0c 	andi	zero,zero,748
    b2ac:	0000b300 	call	b30 <hamming_window+0xe8>
    b2b0:	0000bab4 	movhi	zero,746
    b2b4:	0000b300 	call	b30 <hamming_window+0xe8>
    b2b8:	0000b4f4 	movhi	zero,723
    b2bc:	0000b300 	call	b30 <hamming_window+0xe8>
    b2c0:	0000b300 	call	b30 <hamming_window+0xe8>
    b2c4:	0000ba6c 	andhi	zero,zero,745
    b2c8:	0021883a 	mov	r16,zero
    b2cc:	e0fff404 	addi	r3,fp,-48
    b2d0:	800490ba 	slli	r2,r16,2
    b2d4:	bf000007 	ldb	fp,0(r23)
    b2d8:	bdc00044 	addi	r23,r23,1
    b2dc:	1421883a 	add	r16,r2,r16
    b2e0:	8421883a 	add	r16,r16,r16
    b2e4:	1c21883a 	add	r16,r3,r16
    b2e8:	e0fff404 	addi	r3,fp,-48
    b2ec:	188002b0 	cmpltui	r2,r3,10
    b2f0:	103ff71e 	bne	r2,zero,b2d0 <___vfprintf_internal_r+0x2c4>
    b2f4:	e0bff804 	addi	r2,fp,-32
    b2f8:	10c01668 	cmpgeui	r3,r2,89
    b2fc:	183f9426 	beq	r3,zero,b150 <___vfprintf_internal_r+0x144>
    b300:	21003fcc 	andi	r4,r4,255
    b304:	2006541e 	bne	r4,zero,cc58 <___vfprintf_internal_r+0x1c4c>
    b308:	e0004d26 	beq	fp,zero,b440 <___vfprintf_internal_r+0x434>
    b30c:	df001d05 	stb	fp,116(sp)
    b310:	d8001345 	stb	zero,77(sp)
    b314:	05000044 	movi	r20,1
    b318:	05400044 	movi	r21,1
    b31c:	dc401d04 	addi	r17,sp,116
    b320:	db000415 	stw	r12,16(sp)
    b324:	0011883a 	mov	r8,zero
    b328:	d8000715 	stw	zero,28(sp)
    b32c:	d8800417 	ldw	r2,16(sp)
    b330:	1380008c 	andi	r14,r2,2
    b334:	70000126 	beq	r14,zero,b33c <___vfprintf_internal_r+0x330>
    b338:	a5000084 	addi	r20,r20,2
    b33c:	d8800417 	ldw	r2,16(sp)
    b340:	d8c01c17 	ldw	r3,112(sp)
    b344:	1340210c 	andi	r13,r2,132
    b348:	6800021e 	bne	r13,zero,b354 <___vfprintf_internal_r+0x348>
    b34c:	850fc83a 	sub	r7,r16,r20
    b350:	01c36b16 	blt	zero,r7,c100 <___vfprintf_internal_r+0x10f4>
    b354:	d8801347 	ldb	r2,77(sp)
    b358:	10000c26 	beq	r2,zero,b38c <___vfprintf_internal_r+0x380>
    b35c:	d8801b17 	ldw	r2,108(sp)
    b360:	d9001344 	addi	r4,sp,77
    b364:	18c00044 	addi	r3,r3,1
    b368:	10800044 	addi	r2,r2,1
    b36c:	b1000015 	stw	r4,0(r22)
    b370:	01000044 	movi	r4,1
    b374:	d8801b15 	stw	r2,108(sp)
    b378:	b1000115 	stw	r4,4(r22)
    b37c:	d8c01c15 	stw	r3,112(sp)
    b380:	10800208 	cmpgei	r2,r2,8
    b384:	10039f1e 	bne	r2,zero,c204 <___vfprintf_internal_r+0x11f8>
    b388:	b5800204 	addi	r22,r22,8
    b38c:	70000c26 	beq	r14,zero,b3c0 <___vfprintf_internal_r+0x3b4>
    b390:	d8801b17 	ldw	r2,108(sp)
    b394:	d9001384 	addi	r4,sp,78
    b398:	18c00084 	addi	r3,r3,2
    b39c:	10800044 	addi	r2,r2,1
    b3a0:	b1000015 	stw	r4,0(r22)
    b3a4:	01000084 	movi	r4,2
    b3a8:	d8801b15 	stw	r2,108(sp)
    b3ac:	b1000115 	stw	r4,4(r22)
    b3b0:	d8c01c15 	stw	r3,112(sp)
    b3b4:	10800208 	cmpgei	r2,r2,8
    b3b8:	1003a01e 	bne	r2,zero,c23c <___vfprintf_internal_r+0x1230>
    b3bc:	b5800204 	addi	r22,r22,8
    b3c0:	6b402018 	cmpnei	r13,r13,128
    b3c4:	68025c26 	beq	r13,zero,bd38 <___vfprintf_internal_r+0xd2c>
    b3c8:	4551c83a 	sub	r8,r8,r21
    b3cc:	02029416 	blt	zero,r8,be20 <___vfprintf_internal_r+0xe14>
    b3d0:	d8800417 	ldw	r2,16(sp)
    b3d4:	1080400c 	andi	r2,r2,256
    b3d8:	1002111e 	bne	r2,zero,bc20 <___vfprintf_internal_r+0xc14>
    b3dc:	d8801b17 	ldw	r2,108(sp)
    b3e0:	1d47883a 	add	r3,r3,r21
    b3e4:	b4400015 	stw	r17,0(r22)
    b3e8:	10800044 	addi	r2,r2,1
    b3ec:	b5400115 	stw	r21,4(r22)
    b3f0:	d8801b15 	stw	r2,108(sp)
    b3f4:	d8c01c15 	stw	r3,112(sp)
    b3f8:	10800208 	cmpgei	r2,r2,8
    b3fc:	1002fd1e 	bne	r2,zero,bff4 <___vfprintf_internal_r+0xfe8>
    b400:	b5800204 	addi	r22,r22,8
    b404:	d8800417 	ldw	r2,16(sp)
    b408:	1440010c 	andi	r17,r2,4
    b40c:	88000226 	beq	r17,zero,b418 <___vfprintf_internal_r+0x40c>
    b410:	8523c83a 	sub	r17,r16,r20
    b414:	0440c616 	blt	zero,r17,b730 <___vfprintf_internal_r+0x724>
    b418:	8500010e 	bge	r16,r20,b420 <___vfprintf_internal_r+0x414>
    b41c:	a021883a 	mov	r16,r20
    b420:	d8800517 	ldw	r2,20(sp)
    b424:	1405883a 	add	r2,r2,r16
    b428:	d8800515 	stw	r2,20(sp)
    b42c:	1802c31e 	bne	r3,zero,bf3c <___vfprintf_internal_r+0xf30>
    b430:	b8800007 	ldb	r2,0(r23)
    b434:	d8001b15 	stw	zero,108(sp)
    b438:	dd802704 	addi	r22,sp,156
    b43c:	103f291e 	bne	r2,zero,b0e4 <___vfprintf_internal_r+0xd8>
    b440:	d8801c17 	ldw	r2,112(sp)
    b444:	1005ff1e 	bne	r2,zero,cc44 <___vfprintf_internal_r+0x1c38>
    b448:	9080030b 	ldhu	r2,12(r18)
    b44c:	1080100c 	andi	r2,r2,64
    b450:	1006ab1e 	bne	r2,zero,cf00 <___vfprintf_internal_r+0x1ef4>
    b454:	d8800517 	ldw	r2,20(sp)
    b458:	dfc04017 	ldw	ra,256(sp)
    b45c:	df003f17 	ldw	fp,252(sp)
    b460:	ddc03e17 	ldw	r23,248(sp)
    b464:	dd803d17 	ldw	r22,244(sp)
    b468:	dd403c17 	ldw	r21,240(sp)
    b46c:	dd003b17 	ldw	r20,236(sp)
    b470:	dcc03a17 	ldw	r19,232(sp)
    b474:	dc803917 	ldw	r18,228(sp)
    b478:	dc403817 	ldw	r17,224(sp)
    b47c:	dc003717 	ldw	r16,220(sp)
    b480:	dec04104 	addi	sp,sp,260
    b484:	f800283a 	ret
    b488:	900b883a 	mov	r5,r18
    b48c:	9809883a 	mov	r4,r19
    b490:	000d1000 	call	d100 <__swsetup_r>
    b494:	10069a1e 	bne	r2,zero,cf00 <___vfprintf_internal_r+0x1ef4>
    b498:	9080030b 	ldhu	r2,12(r18)
    b49c:	1080068c 	andi	r2,r2,26
    b4a0:	10800298 	cmpnei	r2,r2,10
    b4a4:	103f011e 	bne	r2,zero,b0ac <___vfprintf_internal_r+0xa0>
    b4a8:	9080038f 	ldh	r2,14(r18)
    b4ac:	103eff16 	blt	r2,zero,b0ac <___vfprintf_internal_r+0xa0>
    b4b0:	d9c00617 	ldw	r7,24(sp)
    b4b4:	b00d883a 	mov	r6,r22
    b4b8:	900b883a 	mov	r5,r18
    b4bc:	9809883a 	mov	r4,r19
    b4c0:	dfc04017 	ldw	ra,256(sp)
    b4c4:	df003f17 	ldw	fp,252(sp)
    b4c8:	ddc03e17 	ldw	r23,248(sp)
    b4cc:	dd803d17 	ldw	r22,244(sp)
    b4d0:	dd403c17 	ldw	r21,240(sp)
    b4d4:	dd003b17 	ldw	r20,236(sp)
    b4d8:	dcc03a17 	ldw	r19,232(sp)
    b4dc:	dc803917 	ldw	r18,228(sp)
    b4e0:	dc403817 	ldw	r17,224(sp)
    b4e4:	dc003717 	ldw	r16,220(sp)
    b4e8:	dec04104 	addi	sp,sp,260
    b4ec:	000d0401 	jmpi	d040 <__sbprintf>
    b4f0:	63000414 	ori	r12,r12,16
    b4f4:	6080080c 	andi	r2,r12,32
    b4f8:	10008126 	beq	r2,zero,b700 <___vfprintf_internal_r+0x6f4>
    b4fc:	d8c00617 	ldw	r3,24(sp)
    b500:	00800044 	movi	r2,1
    b504:	1d000017 	ldw	r20,0(r3)
    b508:	1d400117 	ldw	r21,4(r3)
    b50c:	18c00204 	addi	r3,r3,8
    b510:	d8c00615 	stw	r3,24(sp)
    b514:	00000906 	br	b53c <___vfprintf_internal_r+0x530>
    b518:	63000414 	ori	r12,r12,16
    b51c:	6080080c 	andi	r2,r12,32
    b520:	10006b26 	beq	r2,zero,b6d0 <___vfprintf_internal_r+0x6c4>
    b524:	d8c00617 	ldw	r3,24(sp)
    b528:	0005883a 	mov	r2,zero
    b52c:	1d000017 	ldw	r20,0(r3)
    b530:	1d400117 	ldw	r21,4(r3)
    b534:	18c00204 	addi	r3,r3,8
    b538:	d8c00615 	stw	r3,24(sp)
    b53c:	d8001345 	stb	zero,77(sp)
    b540:	40ffffe0 	cmpeqi	r3,r8,-1
    b544:	001b883a 	mov	r13,zero
    b548:	18010a1e 	bne	r3,zero,b974 <___vfprintf_internal_r+0x968>
    b54c:	047fdfc4 	movi	r17,-129
    b550:	6448703a 	and	r4,r12,r17
    b554:	a546b03a 	or	r3,r20,r21
    b558:	d9000415 	stw	r4,16(sp)
    b55c:	1802e61e 	bne	r3,zero,c0f8 <___vfprintf_internal_r+0x10ec>
    b560:	4002601e 	bne	r8,zero,bee4 <___vfprintf_internal_r+0xed8>
    b564:	1003ae1e 	bne	r2,zero,c420 <___vfprintf_internal_r+0x1414>
    b568:	6540004c 	andi	r21,r12,1
    b56c:	a803e426 	beq	r21,zero,c500 <___vfprintf_internal_r+0x14f4>
    b570:	00800c04 	movi	r2,48
    b574:	d88026c5 	stb	r2,155(sp)
    b578:	dc4026c4 	addi	r17,sp,155
    b57c:	0000ba06 	br	b868 <___vfprintf_internal_r+0x85c>
    b580:	85e3c83a 	sub	r17,r16,r23
    b584:	85ffae26 	beq	r16,r23,b440 <___vfprintf_internal_r+0x434>
    b588:	d8c01c17 	ldw	r3,112(sp)
    b58c:	d8801b17 	ldw	r2,108(sp)
    b590:	b5c00015 	stw	r23,0(r22)
    b594:	1c47883a 	add	r3,r3,r17
    b598:	10800044 	addi	r2,r2,1
    b59c:	d8801b15 	stw	r2,108(sp)
    b5a0:	b4400115 	stw	r17,4(r22)
    b5a4:	d8c01c15 	stw	r3,112(sp)
    b5a8:	10800208 	cmpgei	r2,r2,8
    b5ac:	1000061e 	bne	r2,zero,b5c8 <___vfprintf_internal_r+0x5bc>
    b5b0:	b5800204 	addi	r22,r22,8
    b5b4:	d8c00517 	ldw	r3,20(sp)
    b5b8:	80800003 	ldbu	r2,0(r16)
    b5bc:	1c47883a 	add	r3,r3,r17
    b5c0:	d8c00515 	stw	r3,20(sp)
    b5c4:	003ed106 	br	b10c <___vfprintf_internal_r+0x100>
    b5c8:	d9801a04 	addi	r6,sp,104
    b5cc:	900b883a 	mov	r5,r18
    b5d0:	9809883a 	mov	r4,r19
    b5d4:	0011b240 	call	11b24 <__sprint_r>
    b5d8:	103f9b1e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    b5dc:	dd802704 	addi	r22,sp,156
    b5e0:	003ff406 	br	b5b4 <___vfprintf_internal_r+0x5a8>
    b5e4:	21003fcc 	andi	r4,r4,255
    b5e8:	2006291e 	bne	r4,zero,ce90 <___vfprintf_internal_r+0x1e84>
    b5ec:	d8c00617 	ldw	r3,24(sp)
    b5f0:	6080020c 	andi	r2,r12,8
    b5f4:	19000204 	addi	r4,r3,8
    b5f8:	d9000e15 	stw	r4,56(sp)
    b5fc:	1003c21e 	bne	r2,zero,c508 <___vfprintf_internal_r+0x14fc>
    b600:	d8800617 	ldw	r2,24(sp)
    b604:	10c00017 	ldw	r3,0(r2)
    b608:	10800117 	ldw	r2,4(r2)
    b60c:	d8c00915 	stw	r3,36(sp)
    b610:	d8800a15 	stw	r2,40(sp)
    b614:	dd400a17 	ldw	r21,40(sp)
    b618:	dd000917 	ldw	r20,36(sp)
    b61c:	00a00034 	movhi	r2,32768
    b620:	10bfffc4 	addi	r2,r2,-1
    b624:	a8a2703a 	and	r17,r21,r2
    b628:	01dffc34 	movhi	r7,32752
    b62c:	01bfffc4 	movi	r6,-1
    b630:	39ffffc4 	addi	r7,r7,-1
    b634:	a009883a 	mov	r4,r20
    b638:	880b883a 	mov	r5,r17
    b63c:	da000615 	stw	r8,24(sp)
    b640:	db000415 	stw	r12,16(sp)
    b644:	000a0800 	call	a080 <__unorddf2>
    b648:	db000417 	ldw	r12,16(sp)
    b64c:	da000617 	ldw	r8,24(sp)
    b650:	10044d1e 	bne	r2,zero,c788 <___vfprintf_internal_r+0x177c>
    b654:	01dffc34 	movhi	r7,32752
    b658:	01bfffc4 	movi	r6,-1
    b65c:	39ffffc4 	addi	r7,r7,-1
    b660:	a009883a 	mov	r4,r20
    b664:	880b883a 	mov	r5,r17
    b668:	0008ee00 	call	8ee0 <__ledf2>
    b66c:	db000417 	ldw	r12,16(sp)
    b670:	da000617 	ldw	r8,24(sp)
    b674:	0084440e 	bge	zero,r2,c788 <___vfprintf_internal_r+0x177c>
    b678:	000d883a 	mov	r6,zero
    b67c:	000f883a 	mov	r7,zero
    b680:	a009883a 	mov	r4,r20
    b684:	a80b883a 	mov	r5,r21
    b688:	0008ee00 	call	8ee0 <__ledf2>
    b68c:	db000417 	ldw	r12,16(sp)
    b690:	10055916 	blt	r2,zero,cbf8 <___vfprintf_internal_r+0x1bec>
    b694:	db401343 	ldbu	r13,77(sp)
    b698:	e0801210 	cmplti	r2,fp,72
    b69c:	1005471e 	bne	r2,zero,cbbc <___vfprintf_internal_r+0x1bb0>
    b6a0:	044000b4 	movhi	r17,2
    b6a4:	8c600d04 	addi	r17,r17,-32716
    b6a8:	00bfdfc4 	movi	r2,-129
    b6ac:	6084703a 	and	r2,r12,r2
    b6b0:	d8800415 	stw	r2,16(sp)
    b6b4:	d8800e17 	ldw	r2,56(sp)
    b6b8:	050000c4 	movi	r20,3
    b6bc:	054000c4 	movi	r21,3
    b6c0:	d8800615 	stw	r2,24(sp)
    b6c4:	0011883a 	mov	r8,zero
    b6c8:	d8000715 	stw	zero,28(sp)
    b6cc:	00006a06 	br	b878 <___vfprintf_internal_r+0x86c>
    b6d0:	d8c00617 	ldw	r3,24(sp)
    b6d4:	6080040c 	andi	r2,r12,16
    b6d8:	1d000017 	ldw	r20,0(r3)
    b6dc:	18c00104 	addi	r3,r3,4
    b6e0:	d8c00615 	stw	r3,24(sp)
    b6e4:	1000031e 	bne	r2,zero,b6f4 <___vfprintf_internal_r+0x6e8>
    b6e8:	6080100c 	andi	r2,r12,64
    b6ec:	10000126 	beq	r2,zero,b6f4 <___vfprintf_internal_r+0x6e8>
    b6f0:	a53fffcc 	andi	r20,r20,65535
    b6f4:	002b883a 	mov	r21,zero
    b6f8:	0005883a 	mov	r2,zero
    b6fc:	003f8f06 	br	b53c <___vfprintf_internal_r+0x530>
    b700:	d8c00617 	ldw	r3,24(sp)
    b704:	6080040c 	andi	r2,r12,16
    b708:	1d000017 	ldw	r20,0(r3)
    b70c:	18c00104 	addi	r3,r3,4
    b710:	d8c00615 	stw	r3,24(sp)
    b714:	1000031e 	bne	r2,zero,b724 <___vfprintf_internal_r+0x718>
    b718:	6080100c 	andi	r2,r12,64
    b71c:	10000126 	beq	r2,zero,b724 <___vfprintf_internal_r+0x718>
    b720:	a53fffcc 	andi	r20,r20,65535
    b724:	002b883a 	mov	r21,zero
    b728:	00800044 	movi	r2,1
    b72c:	003f8306 	br	b53c <___vfprintf_internal_r+0x530>
    b730:	030000b4 	movhi	r12,2
    b734:	89000450 	cmplti	r4,r17,17
    b738:	d8801b17 	ldw	r2,108(sp)
    b73c:	63202104 	addi	r12,r12,-32636
    b740:	20001b1e 	bne	r4,zero,b7b0 <___vfprintf_internal_r+0x7a4>
    b744:	05400404 	movi	r21,16
    b748:	6039883a 	mov	fp,r12
    b74c:	00000406 	br	b760 <___vfprintf_internal_r+0x754>
    b750:	8c7ffc04 	addi	r17,r17,-16
    b754:	89000448 	cmpgei	r4,r17,17
    b758:	b5800204 	addi	r22,r22,8
    b75c:	20001326 	beq	r4,zero,b7ac <___vfprintf_internal_r+0x7a0>
    b760:	10800044 	addi	r2,r2,1
    b764:	18c00404 	addi	r3,r3,16
    b768:	b7000015 	stw	fp,0(r22)
    b76c:	b5400115 	stw	r21,4(r22)
    b770:	d8c01c15 	stw	r3,112(sp)
    b774:	d8801b15 	stw	r2,108(sp)
    b778:	11000208 	cmpgei	r4,r2,8
    b77c:	203ff426 	beq	r4,zero,b750 <___vfprintf_internal_r+0x744>
    b780:	d9801a04 	addi	r6,sp,104
    b784:	900b883a 	mov	r5,r18
    b788:	9809883a 	mov	r4,r19
    b78c:	0011b240 	call	11b24 <__sprint_r>
    b790:	103f2d1e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    b794:	8c7ffc04 	addi	r17,r17,-16
    b798:	89000448 	cmpgei	r4,r17,17
    b79c:	d8c01c17 	ldw	r3,112(sp)
    b7a0:	d8801b17 	ldw	r2,108(sp)
    b7a4:	dd802704 	addi	r22,sp,156
    b7a8:	203fed1e 	bne	r4,zero,b760 <___vfprintf_internal_r+0x754>
    b7ac:	e019883a 	mov	r12,fp
    b7b0:	10800044 	addi	r2,r2,1
    b7b4:	1c47883a 	add	r3,r3,r17
    b7b8:	d8801b15 	stw	r2,108(sp)
    b7bc:	b3000015 	stw	r12,0(r22)
    b7c0:	b4400115 	stw	r17,4(r22)
    b7c4:	d8c01c15 	stw	r3,112(sp)
    b7c8:	10800210 	cmplti	r2,r2,8
    b7cc:	103f121e 	bne	r2,zero,b418 <___vfprintf_internal_r+0x40c>
    b7d0:	d9801a04 	addi	r6,sp,104
    b7d4:	900b883a 	mov	r5,r18
    b7d8:	9809883a 	mov	r4,r19
    b7dc:	0011b240 	call	11b24 <__sprint_r>
    b7e0:	103f191e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    b7e4:	d8c01c17 	ldw	r3,112(sp)
    b7e8:	003f0b06 	br	b418 <___vfprintf_internal_r+0x40c>
    b7ec:	9809883a 	mov	r4,r19
    b7f0:	000f23c0 	call	f23c <__sinit>
    b7f4:	003e1d06 	br	b06c <___vfprintf_internal_r+0x60>
    b7f8:	21003fcc 	andi	r4,r4,255
    b7fc:	2005a61e 	bne	r4,zero,ce98 <___vfprintf_internal_r+0x1e8c>
    b800:	6080080c 	andi	r2,r12,32
    b804:	10004326 	beq	r2,zero,b914 <___vfprintf_internal_r+0x908>
    b808:	d8c00617 	ldw	r3,24(sp)
    b80c:	18800117 	ldw	r2,4(r3)
    b810:	1d000017 	ldw	r20,0(r3)
    b814:	18c00204 	addi	r3,r3,8
    b818:	d8c00615 	stw	r3,24(sp)
    b81c:	102b883a 	mov	r21,r2
    b820:	10004a16 	blt	r2,zero,b94c <___vfprintf_internal_r+0x940>
    b824:	40bfffd8 	cmpnei	r2,r8,-1
    b828:	db401343 	ldbu	r13,77(sp)
    b82c:	10000626 	beq	r2,zero,b848 <___vfprintf_internal_r+0x83c>
    b830:	047fdfc4 	movi	r17,-129
    b834:	6446703a 	and	r3,r12,r17
    b838:	a544b03a 	or	r2,r20,r21
    b83c:	d8c00415 	stw	r3,16(sp)
    b840:	1002f626 	beq	r2,zero,c41c <___vfprintf_internal_r+0x1410>
    b844:	db000417 	ldw	r12,16(sp)
    b848:	a8037f1e 	bne	r21,zero,c648 <___vfprintf_internal_r+0x163c>
    b84c:	a08002a8 	cmpgeui	r2,r20,10
    b850:	10037d1e 	bne	r2,zero,c648 <___vfprintf_internal_r+0x163c>
    b854:	a5000c04 	addi	r20,r20,48
    b858:	dd0026c5 	stb	r20,155(sp)
    b85c:	db000415 	stw	r12,16(sp)
    b860:	05400044 	movi	r21,1
    b864:	dc4026c4 	addi	r17,sp,155
    b868:	4029883a 	mov	r20,r8
    b86c:	4540010e 	bge	r8,r21,b874 <___vfprintf_internal_r+0x868>
    b870:	a829883a 	mov	r20,r21
    b874:	d8000715 	stw	zero,28(sp)
    b878:	6b403fcc 	andi	r13,r13,255
    b87c:	6b40201c 	xori	r13,r13,128
    b880:	6b7fe004 	addi	r13,r13,-128
    b884:	683ea926 	beq	r13,zero,b32c <___vfprintf_internal_r+0x320>
    b888:	a5000044 	addi	r20,r20,1
    b88c:	003ea706 	br	b32c <___vfprintf_internal_r+0x320>
    b890:	d8800617 	ldw	r2,24(sp)
    b894:	14000017 	ldw	r16,0(r2)
    b898:	10800104 	addi	r2,r2,4
    b89c:	8003150e 	bge	r16,zero,c4f4 <___vfprintf_internal_r+0x14e8>
    b8a0:	0421c83a 	sub	r16,zero,r16
    b8a4:	d8800615 	stw	r2,24(sp)
    b8a8:	bac00007 	ldb	r11,0(r23)
    b8ac:	63000114 	ori	r12,r12,4
    b8b0:	003e2206 	br	b13c <___vfprintf_internal_r+0x130>
    b8b4:	bf000007 	ldb	fp,0(r23)
    b8b8:	b8800044 	addi	r2,r23,1
    b8bc:	e0c00aa0 	cmpeqi	r3,fp,42
    b8c0:	1805c91e 	bne	r3,zero,cfe8 <___vfprintf_internal_r+0x1fdc>
    b8c4:	e0fff404 	addi	r3,fp,-48
    b8c8:	198002b0 	cmpltui	r6,r3,10
    b8cc:	102f883a 	mov	r23,r2
    b8d0:	0011883a 	mov	r8,zero
    b8d4:	303e1b26 	beq	r6,zero,b144 <___vfprintf_internal_r+0x138>
    b8d8:	400490ba 	slli	r2,r8,2
    b8dc:	bf000007 	ldb	fp,0(r23)
    b8e0:	bdc00044 	addi	r23,r23,1
    b8e4:	1211883a 	add	r8,r2,r8
    b8e8:	4211883a 	add	r8,r8,r8
    b8ec:	40d1883a 	add	r8,r8,r3
    b8f0:	e0fff404 	addi	r3,fp,-48
    b8f4:	188002b0 	cmpltui	r2,r3,10
    b8f8:	103ff71e 	bne	r2,zero,b8d8 <___vfprintf_internal_r+0x8cc>
    b8fc:	003e1106 	br	b144 <___vfprintf_internal_r+0x138>
    b900:	21003fcc 	andi	r4,r4,255
    b904:	20055e1e 	bne	r4,zero,ce80 <___vfprintf_internal_r+0x1e74>
    b908:	63000414 	ori	r12,r12,16
    b90c:	6080080c 	andi	r2,r12,32
    b910:	103fbd1e 	bne	r2,zero,b808 <___vfprintf_internal_r+0x7fc>
    b914:	d8c00617 	ldw	r3,24(sp)
    b918:	6080040c 	andi	r2,r12,16
    b91c:	1d000017 	ldw	r20,0(r3)
    b920:	18c00104 	addi	r3,r3,4
    b924:	d8c00615 	stw	r3,24(sp)
    b928:	1002e91e 	bne	r2,zero,c4d0 <___vfprintf_internal_r+0x14c4>
    b92c:	6080100c 	andi	r2,r12,64
    b930:	1002e726 	beq	r2,zero,c4d0 <___vfprintf_internal_r+0x14c4>
    b934:	a53fffcc 	andi	r20,r20,65535
    b938:	a520001c 	xori	r20,r20,32768
    b93c:	a5200004 	addi	r20,r20,-32768
    b940:	a02bd7fa 	srai	r21,r20,31
    b944:	a805883a 	mov	r2,r21
    b948:	103fb60e 	bge	r2,zero,b824 <___vfprintf_internal_r+0x818>
    b94c:	a004c03a 	cmpne	r2,r20,zero
    b950:	056bc83a 	sub	r21,zero,r21
    b954:	a8abc83a 	sub	r21,r21,r2
    b958:	00800b44 	movi	r2,45
    b95c:	d8801345 	stb	r2,77(sp)
    b960:	40ffffe0 	cmpeqi	r3,r8,-1
    b964:	0529c83a 	sub	r20,zero,r20
    b968:	03400b44 	movi	r13,45
    b96c:	00800044 	movi	r2,1
    b970:	183ef626 	beq	r3,zero,b54c <___vfprintf_internal_r+0x540>
    b974:	10c00060 	cmpeqi	r3,r2,1
    b978:	183fb31e 	bne	r3,zero,b848 <___vfprintf_internal_r+0x83c>
    b97c:	108000a0 	cmpeqi	r2,r2,2
    b980:	10015d1e 	bne	r2,zero,bef8 <___vfprintf_internal_r+0xeec>
    b984:	dc402704 	addi	r17,sp,156
    b988:	a006d0fa 	srli	r3,r20,3
    b98c:	a808977a 	slli	r4,r21,29
    b990:	a82ad0fa 	srli	r21,r21,3
    b994:	a50001cc 	andi	r20,r20,7
    b998:	a0800c04 	addi	r2,r20,48
    b99c:	20e8b03a 	or	r20,r4,r3
    b9a0:	88bfffc5 	stb	r2,-1(r17)
    b9a4:	a546b03a 	or	r3,r20,r21
    b9a8:	880b883a 	mov	r5,r17
    b9ac:	8c7fffc4 	addi	r17,r17,-1
    b9b0:	183ff51e 	bne	r3,zero,b988 <___vfprintf_internal_r+0x97c>
    b9b4:	60c0004c 	andi	r3,r12,1
    b9b8:	18015c26 	beq	r3,zero,bf2c <___vfprintf_internal_r+0xf20>
    b9bc:	10803fcc 	andi	r2,r2,255
    b9c0:	1080201c 	xori	r2,r2,128
    b9c4:	10bfe004 	addi	r2,r2,-128
    b9c8:	10800c18 	cmpnei	r2,r2,48
    b9cc:	10015726 	beq	r2,zero,bf2c <___vfprintf_internal_r+0xf20>
    b9d0:	00800c04 	movi	r2,48
    b9d4:	297fff84 	addi	r5,r5,-2
    b9d8:	88bfffc5 	stb	r2,-1(r17)
    b9dc:	d8802704 	addi	r2,sp,156
    b9e0:	116bc83a 	sub	r21,r2,r5
    b9e4:	db000415 	stw	r12,16(sp)
    b9e8:	2823883a 	mov	r17,r5
    b9ec:	003f9e06 	br	b868 <___vfprintf_internal_r+0x85c>
    b9f0:	bac00007 	ldb	r11,0(r23)
    b9f4:	63002014 	ori	r12,r12,128
    b9f8:	003dd006 	br	b13c <___vfprintf_internal_r+0x130>
    b9fc:	bac00007 	ldb	r11,0(r23)
    ba00:	01000044 	movi	r4,1
    ba04:	01400ac4 	movi	r5,43
    ba08:	003dcc06 	br	b13c <___vfprintf_internal_r+0x130>
    ba0c:	bac00007 	ldb	r11,0(r23)
    ba10:	63000054 	ori	r12,r12,1
    ba14:	003dc906 	br	b13c <___vfprintf_internal_r+0x130>
    ba18:	28803fcc 	andi	r2,r5,255
    ba1c:	1080201c 	xori	r2,r2,128
    ba20:	10bfe004 	addi	r2,r2,-128
    ba24:	bf000003 	ldbu	fp,0(r23)
    ba28:	10000c1e 	bne	r2,zero,ba5c <___vfprintf_internal_r+0xa50>
    ba2c:	e2c03fcc 	andi	r11,fp,255
    ba30:	5ac0201c 	xori	r11,r11,128
    ba34:	01000044 	movi	r4,1
    ba38:	01400804 	movi	r5,32
    ba3c:	5affe004 	addi	r11,r11,-128
    ba40:	003dbe06 	br	b13c <___vfprintf_internal_r+0x130>
    ba44:	bac00007 	ldb	r11,0(r23)
    ba48:	58801b18 	cmpnei	r2,r11,108
    ba4c:	1002a71e 	bne	r2,zero,c4ec <___vfprintf_internal_r+0x14e0>
    ba50:	bf000043 	ldbu	fp,1(r23)
    ba54:	63000814 	ori	r12,r12,32
    ba58:	bdc00044 	addi	r23,r23,1
    ba5c:	e2c03fcc 	andi	r11,fp,255
    ba60:	5ac0201c 	xori	r11,r11,128
    ba64:	5affe004 	addi	r11,r11,-128
    ba68:	003db406 	br	b13c <___vfprintf_internal_r+0x130>
    ba6c:	21003fcc 	andi	r4,r4,255
    ba70:	20050b1e 	bne	r4,zero,cea0 <___vfprintf_internal_r+0x1e94>
    ba74:	008000b4 	movhi	r2,2
    ba78:	10a01004 	addi	r2,r2,-32704
    ba7c:	d8800c15 	stw	r2,48(sp)
    ba80:	6080080c 	andi	r2,r12,32
    ba84:	10005b26 	beq	r2,zero,bbf4 <___vfprintf_internal_r+0xbe8>
    ba88:	d8800617 	ldw	r2,24(sp)
    ba8c:	15000017 	ldw	r20,0(r2)
    ba90:	15400117 	ldw	r21,4(r2)
    ba94:	10800204 	addi	r2,r2,8
    ba98:	d8800615 	stw	r2,24(sp)
    ba9c:	6080004c 	andi	r2,r12,1
    baa0:	10000226 	beq	r2,zero,baac <___vfprintf_internal_r+0xaa0>
    baa4:	a544b03a 	or	r2,r20,r21
    baa8:	10029c1e 	bne	r2,zero,c51c <___vfprintf_internal_r+0x1510>
    baac:	00800084 	movi	r2,2
    bab0:	003ea206 	br	b53c <___vfprintf_internal_r+0x530>
    bab4:	d8800617 	ldw	r2,24(sp)
    bab8:	d8001345 	stb	zero,77(sp)
    babc:	14400017 	ldw	r17,0(r2)
    bac0:	10c00104 	addi	r3,r2,4
    bac4:	8802ba26 	beq	r17,zero,c5b0 <___vfprintf_internal_r+0x15a4>
    bac8:	40bfffe0 	cmpeqi	r2,r8,-1
    bacc:	1003c61e 	bne	r2,zero,c9e8 <___vfprintf_internal_r+0x19dc>
    bad0:	400d883a 	mov	r6,r8
    bad4:	000b883a 	mov	r5,zero
    bad8:	8809883a 	mov	r4,r17
    badc:	d8c00715 	stw	r3,28(sp)
    bae0:	db000615 	stw	r12,24(sp)
    bae4:	da000415 	stw	r8,16(sp)
    bae8:	000fed80 	call	fed8 <memchr>
    baec:	da000417 	ldw	r8,16(sp)
    baf0:	db000617 	ldw	r12,24(sp)
    baf4:	d8c00717 	ldw	r3,28(sp)
    baf8:	1004d126 	beq	r2,zero,ce40 <___vfprintf_internal_r+0x1e34>
    bafc:	146bc83a 	sub	r21,r2,r17
    bb00:	a829883a 	mov	r20,r21
    bb04:	d8c00615 	stw	r3,24(sp)
    bb08:	003e0506 	br	b320 <___vfprintf_internal_r+0x314>
    bb0c:	bac00007 	ldb	r11,0(r23)
    bb10:	63000814 	ori	r12,r12,32
    bb14:	003d8906 	br	b13c <___vfprintf_internal_r+0x130>
    bb18:	d8c00617 	ldw	r3,24(sp)
    bb1c:	00800c04 	movi	r2,48
    bb20:	d8801385 	stb	r2,78(sp)
    bb24:	00801e04 	movi	r2,120
    bb28:	010000b4 	movhi	r4,2
    bb2c:	d88013c5 	stb	r2,79(sp)
    bb30:	18800104 	addi	r2,r3,4
    bb34:	d8800615 	stw	r2,24(sp)
    bb38:	20a01004 	addi	r2,r4,-32704
    bb3c:	d8800c15 	stw	r2,48(sp)
    bb40:	1d000017 	ldw	r20,0(r3)
    bb44:	002b883a 	mov	r21,zero
    bb48:	63000094 	ori	r12,r12,2
    bb4c:	00800084 	movi	r2,2
    bb50:	07001e04 	movi	fp,120
    bb54:	003e7906 	br	b53c <___vfprintf_internal_r+0x530>
    bb58:	21003fcc 	andi	r4,r4,255
    bb5c:	2004ca1e 	bne	r4,zero,ce88 <___vfprintf_internal_r+0x1e7c>
    bb60:	d9000617 	ldw	r4,24(sp)
    bb64:	6080080c 	andi	r2,r12,32
    bb68:	20c00104 	addi	r3,r4,4
    bb6c:	1002711e 	bne	r2,zero,c534 <___vfprintf_internal_r+0x1528>
    bb70:	6080040c 	andi	r2,r12,16
    bb74:	1002dc1e 	bne	r2,zero,c6e8 <___vfprintf_internal_r+0x16dc>
    bb78:	6300100c 	andi	r12,r12,64
    bb7c:	6002da26 	beq	r12,zero,c6e8 <___vfprintf_internal_r+0x16dc>
    bb80:	d8800617 	ldw	r2,24(sp)
    bb84:	d8c00615 	stw	r3,24(sp)
    bb88:	d8c00517 	ldw	r3,20(sp)
    bb8c:	10800017 	ldw	r2,0(r2)
    bb90:	10c0000d 	sth	r3,0(r2)
    bb94:	003d5106 	br	b0dc <___vfprintf_internal_r+0xd0>
    bb98:	bac00007 	ldb	r11,0(r23)
    bb9c:	63000214 	ori	r12,r12,8
    bba0:	003d6606 	br	b13c <___vfprintf_internal_r+0x130>
    bba4:	bac00007 	ldb	r11,0(r23)
    bba8:	63001014 	ori	r12,r12,64
    bbac:	003d6306 	br	b13c <___vfprintf_internal_r+0x130>
    bbb0:	d8c00617 	ldw	r3,24(sp)
    bbb4:	d8001345 	stb	zero,77(sp)
    bbb8:	05000044 	movi	r20,1
    bbbc:	18800017 	ldw	r2,0(r3)
    bbc0:	18c00104 	addi	r3,r3,4
    bbc4:	d8c00615 	stw	r3,24(sp)
    bbc8:	d8801d05 	stb	r2,116(sp)
    bbcc:	05400044 	movi	r21,1
    bbd0:	dc401d04 	addi	r17,sp,116
    bbd4:	003dd206 	br	b320 <___vfprintf_internal_r+0x314>
    bbd8:	21003fcc 	andi	r4,r4,255
    bbdc:	2004b21e 	bne	r4,zero,cea8 <___vfprintf_internal_r+0x1e9c>
    bbe0:	008000b4 	movhi	r2,2
    bbe4:	10a01504 	addi	r2,r2,-32684
    bbe8:	d8800c15 	stw	r2,48(sp)
    bbec:	6080080c 	andi	r2,r12,32
    bbf0:	103fa51e 	bne	r2,zero,ba88 <___vfprintf_internal_r+0xa7c>
    bbf4:	d8c00617 	ldw	r3,24(sp)
    bbf8:	6080040c 	andi	r2,r12,16
    bbfc:	1d000017 	ldw	r20,0(r3)
    bc00:	18c00104 	addi	r3,r3,4
    bc04:	d8c00615 	stw	r3,24(sp)
    bc08:	10022f1e 	bne	r2,zero,c4c8 <___vfprintf_internal_r+0x14bc>
    bc0c:	6080100c 	andi	r2,r12,64
    bc10:	10022d26 	beq	r2,zero,c4c8 <___vfprintf_internal_r+0x14bc>
    bc14:	a53fffcc 	andi	r20,r20,65535
    bc18:	002b883a 	mov	r21,zero
    bc1c:	003f9f06 	br	ba9c <___vfprintf_internal_r+0xa90>
    bc20:	e2c01990 	cmplti	r11,fp,102
    bc24:	5800fb1e 	bne	r11,zero,c014 <___vfprintf_internal_r+0x1008>
    bc28:	d9000917 	ldw	r4,36(sp)
    bc2c:	d9400a17 	ldw	r5,40(sp)
    bc30:	000d883a 	mov	r6,zero
    bc34:	000f883a 	mov	r7,zero
    bc38:	d8c00e15 	stw	r3,56(sp)
    bc3c:	0008d780 	call	8d78 <__eqdf2>
    bc40:	d8c00e17 	ldw	r3,56(sp)
    bc44:	1001891e 	bne	r2,zero,c26c <___vfprintf_internal_r+0x1260>
    bc48:	d8801b17 	ldw	r2,108(sp)
    bc4c:	010000b4 	movhi	r4,2
    bc50:	21201c04 	addi	r4,r4,-32656
    bc54:	10800044 	addi	r2,r2,1
    bc58:	18c00044 	addi	r3,r3,1
    bc5c:	b1000015 	stw	r4,0(r22)
    bc60:	01000044 	movi	r4,1
    bc64:	d8801b15 	stw	r2,108(sp)
    bc68:	b1000115 	stw	r4,4(r22)
    bc6c:	d8c01c15 	stw	r3,112(sp)
    bc70:	10800208 	cmpgei	r2,r2,8
    bc74:	10034a1e 	bne	r2,zero,c9a0 <___vfprintf_internal_r+0x1994>
    bc78:	b5800204 	addi	r22,r22,8
    bc7c:	d8801417 	ldw	r2,80(sp)
    bc80:	d9000817 	ldw	r4,32(sp)
    bc84:	1102150e 	bge	r2,r4,c4dc <___vfprintf_internal_r+0x14d0>
    bc88:	d8800d17 	ldw	r2,52(sp)
    bc8c:	d9000b17 	ldw	r4,44(sp)
    bc90:	b0800015 	stw	r2,0(r22)
    bc94:	d8801b17 	ldw	r2,108(sp)
    bc98:	1907883a 	add	r3,r3,r4
    bc9c:	b1000115 	stw	r4,4(r22)
    bca0:	10800044 	addi	r2,r2,1
    bca4:	d8801b15 	stw	r2,108(sp)
    bca8:	d8c01c15 	stw	r3,112(sp)
    bcac:	10800208 	cmpgei	r2,r2,8
    bcb0:	1002371e 	bne	r2,zero,c590 <___vfprintf_internal_r+0x1584>
    bcb4:	b5800204 	addi	r22,r22,8
    bcb8:	d8800817 	ldw	r2,32(sp)
    bcbc:	157fffc4 	addi	r21,r2,-1
    bcc0:	057dd00e 	bge	zero,r21,b404 <___vfprintf_internal_r+0x3f8>
    bcc4:	01c000b4 	movhi	r7,2
    bcc8:	a9000450 	cmplti	r4,r21,17
    bccc:	d8801b17 	ldw	r2,108(sp)
    bcd0:	39e01d04 	addi	r7,r7,-32652
    bcd4:	20032e1e 	bne	r4,zero,c990 <___vfprintf_internal_r+0x1984>
    bcd8:	07000404 	movi	fp,16
    bcdc:	3823883a 	mov	r17,r7
    bce0:	00000406 	br	bcf4 <___vfprintf_internal_r+0xce8>
    bce4:	b5800204 	addi	r22,r22,8
    bce8:	ad7ffc04 	addi	r21,r21,-16
    bcec:	a9000448 	cmpgei	r4,r21,17
    bcf0:	20032626 	beq	r4,zero,c98c <___vfprintf_internal_r+0x1980>
    bcf4:	10800044 	addi	r2,r2,1
    bcf8:	18c00404 	addi	r3,r3,16
    bcfc:	b4400015 	stw	r17,0(r22)
    bd00:	b7000115 	stw	fp,4(r22)
    bd04:	d8c01c15 	stw	r3,112(sp)
    bd08:	d8801b15 	stw	r2,108(sp)
    bd0c:	11000208 	cmpgei	r4,r2,8
    bd10:	203ff426 	beq	r4,zero,bce4 <___vfprintf_internal_r+0xcd8>
    bd14:	d9801a04 	addi	r6,sp,104
    bd18:	900b883a 	mov	r5,r18
    bd1c:	9809883a 	mov	r4,r19
    bd20:	0011b240 	call	11b24 <__sprint_r>
    bd24:	103dc81e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    bd28:	d8c01c17 	ldw	r3,112(sp)
    bd2c:	d8801b17 	ldw	r2,108(sp)
    bd30:	dd802704 	addi	r22,sp,156
    bd34:	003fec06 	br	bce8 <___vfprintf_internal_r+0xcdc>
    bd38:	8519c83a 	sub	r12,r16,r20
    bd3c:	033da20e 	bge	zero,r12,b3c8 <___vfprintf_internal_r+0x3bc>
    bd40:	01c000b4 	movhi	r7,2
    bd44:	61000450 	cmplti	r4,r12,17
    bd48:	d8801b17 	ldw	r2,108(sp)
    bd4c:	39e01d04 	addi	r7,r7,-32652
    bd50:	2000281e 	bne	r4,zero,bdf4 <___vfprintf_internal_r+0xde8>
    bd54:	dc400e15 	stw	r17,56(sp)
    bd58:	dc000f15 	stw	r16,60(sp)
    bd5c:	b009883a 	mov	r4,r22
    bd60:	03400404 	movi	r13,16
    bd64:	a02d883a 	mov	r22,r20
    bd68:	6021883a 	mov	r16,r12
    bd6c:	4029883a 	mov	r20,r8
    bd70:	3823883a 	mov	r17,r7
    bd74:	00000406 	br	bd88 <___vfprintf_internal_r+0xd7c>
    bd78:	843ffc04 	addi	r16,r16,-16
    bd7c:	81400448 	cmpgei	r5,r16,17
    bd80:	21000204 	addi	r4,r4,8
    bd84:	28001426 	beq	r5,zero,bdd8 <___vfprintf_internal_r+0xdcc>
    bd88:	10800044 	addi	r2,r2,1
    bd8c:	18c00404 	addi	r3,r3,16
    bd90:	24400015 	stw	r17,0(r4)
    bd94:	23400115 	stw	r13,4(r4)
    bd98:	d8c01c15 	stw	r3,112(sp)
    bd9c:	d8801b15 	stw	r2,108(sp)
    bda0:	11400208 	cmpgei	r5,r2,8
    bda4:	283ff426 	beq	r5,zero,bd78 <___vfprintf_internal_r+0xd6c>
    bda8:	d9801a04 	addi	r6,sp,104
    bdac:	900b883a 	mov	r5,r18
    bdb0:	9809883a 	mov	r4,r19
    bdb4:	0011b240 	call	11b24 <__sprint_r>
    bdb8:	103da31e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    bdbc:	843ffc04 	addi	r16,r16,-16
    bdc0:	81400448 	cmpgei	r5,r16,17
    bdc4:	d8c01c17 	ldw	r3,112(sp)
    bdc8:	d8801b17 	ldw	r2,108(sp)
    bdcc:	d9002704 	addi	r4,sp,156
    bdd0:	03400404 	movi	r13,16
    bdd4:	283fec1e 	bne	r5,zero,bd88 <___vfprintf_internal_r+0xd7c>
    bdd8:	8019883a 	mov	r12,r16
    bddc:	880f883a 	mov	r7,r17
    bde0:	dc000f17 	ldw	r16,60(sp)
    bde4:	dc400e17 	ldw	r17,56(sp)
    bde8:	a011883a 	mov	r8,r20
    bdec:	b029883a 	mov	r20,r22
    bdf0:	202d883a 	mov	r22,r4
    bdf4:	10800044 	addi	r2,r2,1
    bdf8:	1b07883a 	add	r3,r3,r12
    bdfc:	d8801b15 	stw	r2,108(sp)
    be00:	b1c00015 	stw	r7,0(r22)
    be04:	b3000115 	stw	r12,4(r22)
    be08:	d8c01c15 	stw	r3,112(sp)
    be0c:	10800208 	cmpgei	r2,r2,8
    be10:	1002eb1e 	bne	r2,zero,c9c0 <___vfprintf_internal_r+0x19b4>
    be14:	4551c83a 	sub	r8,r8,r21
    be18:	b5800204 	addi	r22,r22,8
    be1c:	023d6c0e 	bge	zero,r8,b3d0 <___vfprintf_internal_r+0x3c4>
    be20:	01c000b4 	movhi	r7,2
    be24:	41000450 	cmplti	r4,r8,17
    be28:	d8801b17 	ldw	r2,108(sp)
    be2c:	39e01d04 	addi	r7,r7,-32652
    be30:	2000221e 	bne	r4,zero,bebc <___vfprintf_internal_r+0xeb0>
    be34:	dc400e15 	stw	r17,56(sp)
    be38:	dc000f15 	stw	r16,60(sp)
    be3c:	03000404 	movi	r12,16
    be40:	4021883a 	mov	r16,r8
    be44:	3823883a 	mov	r17,r7
    be48:	00000406 	br	be5c <___vfprintf_internal_r+0xe50>
    be4c:	843ffc04 	addi	r16,r16,-16
    be50:	81000448 	cmpgei	r4,r16,17
    be54:	b5800204 	addi	r22,r22,8
    be58:	20001426 	beq	r4,zero,beac <___vfprintf_internal_r+0xea0>
    be5c:	10800044 	addi	r2,r2,1
    be60:	18c00404 	addi	r3,r3,16
    be64:	b4400015 	stw	r17,0(r22)
    be68:	b3000115 	stw	r12,4(r22)
    be6c:	d8c01c15 	stw	r3,112(sp)
    be70:	d8801b15 	stw	r2,108(sp)
    be74:	11000208 	cmpgei	r4,r2,8
    be78:	203ff426 	beq	r4,zero,be4c <___vfprintf_internal_r+0xe40>
    be7c:	d9801a04 	addi	r6,sp,104
    be80:	900b883a 	mov	r5,r18
    be84:	9809883a 	mov	r4,r19
    be88:	0011b240 	call	11b24 <__sprint_r>
    be8c:	103d6e1e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    be90:	843ffc04 	addi	r16,r16,-16
    be94:	81000448 	cmpgei	r4,r16,17
    be98:	d8c01c17 	ldw	r3,112(sp)
    be9c:	d8801b17 	ldw	r2,108(sp)
    bea0:	dd802704 	addi	r22,sp,156
    bea4:	03000404 	movi	r12,16
    bea8:	203fec1e 	bne	r4,zero,be5c <___vfprintf_internal_r+0xe50>
    beac:	8011883a 	mov	r8,r16
    beb0:	880f883a 	mov	r7,r17
    beb4:	dc000f17 	ldw	r16,60(sp)
    beb8:	dc400e17 	ldw	r17,56(sp)
    bebc:	10800044 	addi	r2,r2,1
    bec0:	1a07883a 	add	r3,r3,r8
    bec4:	d8801b15 	stw	r2,108(sp)
    bec8:	b1c00015 	stw	r7,0(r22)
    becc:	b2000115 	stw	r8,4(r22)
    bed0:	d8c01c15 	stw	r3,112(sp)
    bed4:	10800208 	cmpgei	r2,r2,8
    bed8:	1001731e 	bne	r2,zero,c4a8 <___vfprintf_internal_r+0x149c>
    bedc:	b5800204 	addi	r22,r22,8
    bee0:	003d3b06 	br	b3d0 <___vfprintf_internal_r+0x3c4>
    bee4:	10c00060 	cmpeqi	r3,r2,1
    bee8:	1803831e 	bne	r3,zero,ccf8 <___vfprintf_internal_r+0x1cec>
    beec:	108000a0 	cmpeqi	r2,r2,2
    bef0:	db000417 	ldw	r12,16(sp)
    bef4:	103ea326 	beq	r2,zero,b984 <___vfprintf_internal_r+0x978>
    bef8:	d9000c17 	ldw	r4,48(sp)
    befc:	dc402704 	addi	r17,sp,156
    bf00:	a08003cc 	andi	r2,r20,15
    bf04:	a806973a 	slli	r3,r21,28
    bf08:	a028d13a 	srli	r20,r20,4
    bf0c:	2085883a 	add	r2,r4,r2
    bf10:	10800003 	ldbu	r2,0(r2)
    bf14:	a82ad13a 	srli	r21,r21,4
    bf18:	1d28b03a 	or	r20,r3,r20
    bf1c:	88bfffc5 	stb	r2,-1(r17)
    bf20:	a544b03a 	or	r2,r20,r21
    bf24:	8c7fffc4 	addi	r17,r17,-1
    bf28:	103ff51e 	bne	r2,zero,bf00 <___vfprintf_internal_r+0xef4>
    bf2c:	d8802704 	addi	r2,sp,156
    bf30:	146bc83a 	sub	r21,r2,r17
    bf34:	db000415 	stw	r12,16(sp)
    bf38:	003e4b06 	br	b868 <___vfprintf_internal_r+0x85c>
    bf3c:	d9801a04 	addi	r6,sp,104
    bf40:	900b883a 	mov	r5,r18
    bf44:	9809883a 	mov	r4,r19
    bf48:	0011b240 	call	11b24 <__sprint_r>
    bf4c:	103d3826 	beq	r2,zero,b430 <___vfprintf_internal_r+0x424>
    bf50:	003d3d06 	br	b448 <___vfprintf_internal_r+0x43c>
    bf54:	d8801b17 	ldw	r2,108(sp)
    bf58:	010000b4 	movhi	r4,2
    bf5c:	21201c04 	addi	r4,r4,-32656
    bf60:	10800044 	addi	r2,r2,1
    bf64:	18c00044 	addi	r3,r3,1
    bf68:	b1000015 	stw	r4,0(r22)
    bf6c:	01000044 	movi	r4,1
    bf70:	d8801b15 	stw	r2,108(sp)
    bf74:	b1000115 	stw	r4,4(r22)
    bf78:	d8c01c15 	stw	r3,112(sp)
    bf7c:	10800208 	cmpgei	r2,r2,8
    bf80:	1003211e 	bne	r2,zero,cc08 <___vfprintf_internal_r+0x1bfc>
    bf84:	b5800204 	addi	r22,r22,8
    bf88:	2802a51e 	bne	r5,zero,ca20 <___vfprintf_internal_r+0x1a14>
    bf8c:	d8800417 	ldw	r2,16(sp)
    bf90:	d9000817 	ldw	r4,32(sp)
    bf94:	1080004c 	andi	r2,r2,1
    bf98:	1104b03a 	or	r2,r2,r4
    bf9c:	103d1926 	beq	r2,zero,b404 <___vfprintf_internal_r+0x3f8>
    bfa0:	d8800d17 	ldw	r2,52(sp)
    bfa4:	d9000b17 	ldw	r4,44(sp)
    bfa8:	b0800015 	stw	r2,0(r22)
    bfac:	d8801b17 	ldw	r2,108(sp)
    bfb0:	20c7883a 	add	r3,r4,r3
    bfb4:	b1000115 	stw	r4,4(r22)
    bfb8:	10800044 	addi	r2,r2,1
    bfbc:	d8c01c15 	stw	r3,112(sp)
    bfc0:	d8801b15 	stw	r2,108(sp)
    bfc4:	11000208 	cmpgei	r4,r2,8
    bfc8:	2003381e 	bne	r4,zero,ccac <___vfprintf_internal_r+0x1ca0>
    bfcc:	b5800204 	addi	r22,r22,8
    bfd0:	d9000817 	ldw	r4,32(sp)
    bfd4:	10800044 	addi	r2,r2,1
    bfd8:	d8801b15 	stw	r2,108(sp)
    bfdc:	20c7883a 	add	r3,r4,r3
    bfe0:	b4400015 	stw	r17,0(r22)
    bfe4:	b1000115 	stw	r4,4(r22)
    bfe8:	d8c01c15 	stw	r3,112(sp)
    bfec:	10800208 	cmpgei	r2,r2,8
    bff0:	103d0326 	beq	r2,zero,b400 <___vfprintf_internal_r+0x3f4>
    bff4:	d9801a04 	addi	r6,sp,104
    bff8:	900b883a 	mov	r5,r18
    bffc:	9809883a 	mov	r4,r19
    c000:	0011b240 	call	11b24 <__sprint_r>
    c004:	103d101e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    c008:	d8c01c17 	ldw	r3,112(sp)
    c00c:	dd802704 	addi	r22,sp,156
    c010:	003cfc06 	br	b404 <___vfprintf_internal_r+0x3f8>
    c014:	d8800817 	ldw	r2,32(sp)
    c018:	dd401b17 	ldw	r21,108(sp)
    c01c:	18c00044 	addi	r3,r3,1
    c020:	10800088 	cmpgei	r2,r2,2
    c024:	ad400044 	addi	r21,r21,1
    c028:	b7000204 	addi	fp,r22,8
    c02c:	1000e826 	beq	r2,zero,c3d0 <___vfprintf_internal_r+0x13c4>
    c030:	00800044 	movi	r2,1
    c034:	b0800115 	stw	r2,4(r22)
    c038:	b4400015 	stw	r17,0(r22)
    c03c:	d8c01c15 	stw	r3,112(sp)
    c040:	dd401b15 	stw	r21,108(sp)
    c044:	a8800210 	cmplti	r2,r21,8
    c048:	1001ad26 	beq	r2,zero,c700 <___vfprintf_internal_r+0x16f4>
    c04c:	d8800b17 	ldw	r2,44(sp)
    c050:	d9000d17 	ldw	r4,52(sp)
    c054:	ad400044 	addi	r21,r21,1
    c058:	1887883a 	add	r3,r3,r2
    c05c:	e0800115 	stw	r2,4(fp)
    c060:	e1000015 	stw	r4,0(fp)
    c064:	d8c01c15 	stw	r3,112(sp)
    c068:	dd401b15 	stw	r21,108(sp)
    c06c:	a8800208 	cmpgei	r2,r21,8
    c070:	1001ac1e 	bne	r2,zero,c724 <___vfprintf_internal_r+0x1718>
    c074:	e7000204 	addi	fp,fp,8
    c078:	d9000917 	ldw	r4,36(sp)
    c07c:	d9400a17 	ldw	r5,40(sp)
    c080:	000d883a 	mov	r6,zero
    c084:	000f883a 	mov	r7,zero
    c088:	d8c00715 	stw	r3,28(sp)
    c08c:	0008d780 	call	8d78 <__eqdf2>
    c090:	d8c00817 	ldw	r3,32(sp)
    c094:	1dbfffc4 	addi	r22,r3,-1
    c098:	d8c00717 	ldw	r3,28(sp)
    c09c:	1000e426 	beq	r2,zero,c430 <___vfprintf_internal_r+0x1424>
    c0a0:	8a400044 	addi	r9,r17,1
    c0a4:	ad400044 	addi	r21,r21,1
    c0a8:	1d87883a 	add	r3,r3,r22
    c0ac:	e2400015 	stw	r9,0(fp)
    c0b0:	e5800115 	stw	r22,4(fp)
    c0b4:	d8c01c15 	stw	r3,112(sp)
    c0b8:	dd401b15 	stw	r21,108(sp)
    c0bc:	a8800208 	cmpgei	r2,r21,8
    c0c0:	1000cd1e 	bne	r2,zero,c3f8 <___vfprintf_internal_r+0x13ec>
    c0c4:	e7000204 	addi	fp,fp,8
    c0c8:	d9001017 	ldw	r4,64(sp)
    c0cc:	ad400044 	addi	r21,r21,1
    c0d0:	d8801644 	addi	r2,sp,89
    c0d4:	20c7883a 	add	r3,r4,r3
    c0d8:	dd401b15 	stw	r21,108(sp)
    c0dc:	e0800015 	stw	r2,0(fp)
    c0e0:	e1000115 	stw	r4,4(fp)
    c0e4:	d8c01c15 	stw	r3,112(sp)
    c0e8:	ad400208 	cmpgei	r21,r21,8
    c0ec:	a83fc11e 	bne	r21,zero,bff4 <___vfprintf_internal_r+0xfe8>
    c0f0:	e5800204 	addi	r22,fp,8
    c0f4:	003cc306 	br	b404 <___vfprintf_internal_r+0x3f8>
    c0f8:	db000417 	ldw	r12,16(sp)
    c0fc:	003e1d06 	br	b974 <___vfprintf_internal_r+0x968>
    c100:	030000b4 	movhi	r12,2
    c104:	39000450 	cmplti	r4,r7,17
    c108:	d8801b17 	ldw	r2,108(sp)
    c10c:	63202104 	addi	r12,r12,-32636
    c110:	2000321e 	bne	r4,zero,c1dc <___vfprintf_internal_r+0x11d0>
    c114:	dc401115 	stw	r17,68(sp)
    c118:	b009883a 	mov	r4,r22
    c11c:	9023883a 	mov	r17,r18
    c120:	a82d883a 	mov	r22,r21
    c124:	ddc01215 	stw	r23,72(sp)
    c128:	03c00404 	movi	r15,16
    c12c:	a02f883a 	mov	r23,r20
    c130:	db800e15 	stw	r14,56(sp)
    c134:	8029883a 	mov	r20,r16
    c138:	db400f15 	stw	r13,60(sp)
    c13c:	402b883a 	mov	r21,r8
    c140:	3821883a 	mov	r16,r7
    c144:	6025883a 	mov	r18,r12
    c148:	00000406 	br	c15c <___vfprintf_internal_r+0x1150>
    c14c:	843ffc04 	addi	r16,r16,-16
    c150:	81800448 	cmpgei	r6,r16,17
    c154:	21000204 	addi	r4,r4,8
    c158:	30001426 	beq	r6,zero,c1ac <___vfprintf_internal_r+0x11a0>
    c15c:	10800044 	addi	r2,r2,1
    c160:	18c00404 	addi	r3,r3,16
    c164:	24800015 	stw	r18,0(r4)
    c168:	23c00115 	stw	r15,4(r4)
    c16c:	d8c01c15 	stw	r3,112(sp)
    c170:	d8801b15 	stw	r2,108(sp)
    c174:	11800208 	cmpgei	r6,r2,8
    c178:	303ff426 	beq	r6,zero,c14c <___vfprintf_internal_r+0x1140>
    c17c:	d9801a04 	addi	r6,sp,104
    c180:	880b883a 	mov	r5,r17
    c184:	9809883a 	mov	r4,r19
    c188:	0011b240 	call	11b24 <__sprint_r>
    c18c:	10017c1e 	bne	r2,zero,c780 <___vfprintf_internal_r+0x1774>
    c190:	843ffc04 	addi	r16,r16,-16
    c194:	81800448 	cmpgei	r6,r16,17
    c198:	d8c01c17 	ldw	r3,112(sp)
    c19c:	d8801b17 	ldw	r2,108(sp)
    c1a0:	d9002704 	addi	r4,sp,156
    c1a4:	03c00404 	movi	r15,16
    c1a8:	303fec1e 	bne	r6,zero,c15c <___vfprintf_internal_r+0x1150>
    c1ac:	800f883a 	mov	r7,r16
    c1b0:	9019883a 	mov	r12,r18
    c1b4:	a021883a 	mov	r16,r20
    c1b8:	8825883a 	mov	r18,r17
    c1bc:	b829883a 	mov	r20,r23
    c1c0:	db800e17 	ldw	r14,56(sp)
    c1c4:	db400f17 	ldw	r13,60(sp)
    c1c8:	ddc01217 	ldw	r23,72(sp)
    c1cc:	dc401117 	ldw	r17,68(sp)
    c1d0:	a811883a 	mov	r8,r21
    c1d4:	b02b883a 	mov	r21,r22
    c1d8:	202d883a 	mov	r22,r4
    c1dc:	10800044 	addi	r2,r2,1
    c1e0:	19c7883a 	add	r3,r3,r7
    c1e4:	d8801b15 	stw	r2,108(sp)
    c1e8:	b3000015 	stw	r12,0(r22)
    c1ec:	b1c00115 	stw	r7,4(r22)
    c1f0:	d8c01c15 	stw	r3,112(sp)
    c1f4:	10800208 	cmpgei	r2,r2,8
    c1f8:	1001531e 	bne	r2,zero,c748 <___vfprintf_internal_r+0x173c>
    c1fc:	b5800204 	addi	r22,r22,8
    c200:	003c5406 	br	b354 <___vfprintf_internal_r+0x348>
    c204:	d9801a04 	addi	r6,sp,104
    c208:	900b883a 	mov	r5,r18
    c20c:	9809883a 	mov	r4,r19
    c210:	da001115 	stw	r8,68(sp)
    c214:	db400f15 	stw	r13,60(sp)
    c218:	db800e15 	stw	r14,56(sp)
    c21c:	0011b240 	call	11b24 <__sprint_r>
    c220:	103c891e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    c224:	d8c01c17 	ldw	r3,112(sp)
    c228:	da001117 	ldw	r8,68(sp)
    c22c:	db400f17 	ldw	r13,60(sp)
    c230:	db800e17 	ldw	r14,56(sp)
    c234:	dd802704 	addi	r22,sp,156
    c238:	003c5406 	br	b38c <___vfprintf_internal_r+0x380>
    c23c:	d9801a04 	addi	r6,sp,104
    c240:	900b883a 	mov	r5,r18
    c244:	9809883a 	mov	r4,r19
    c248:	da000f15 	stw	r8,60(sp)
    c24c:	db400e15 	stw	r13,56(sp)
    c250:	0011b240 	call	11b24 <__sprint_r>
    c254:	103c7c1e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    c258:	d8c01c17 	ldw	r3,112(sp)
    c25c:	da000f17 	ldw	r8,60(sp)
    c260:	db400e17 	ldw	r13,56(sp)
    c264:	dd802704 	addi	r22,sp,156
    c268:	003c5506 	br	b3c0 <___vfprintf_internal_r+0x3b4>
    c26c:	d9401417 	ldw	r5,80(sp)
    c270:	017f380e 	bge	zero,r5,bf54 <___vfprintf_internal_r+0xf48>
    c274:	d8800717 	ldw	r2,28(sp)
    c278:	d9000817 	ldw	r4,32(sp)
    c27c:	102b883a 	mov	r21,r2
    c280:	2080b316 	blt	r4,r2,c550 <___vfprintf_internal_r+0x1544>
    c284:	05400a0e 	bge	zero,r21,c2b0 <___vfprintf_internal_r+0x12a4>
    c288:	d8801b17 	ldw	r2,108(sp)
    c28c:	1d47883a 	add	r3,r3,r21
    c290:	b4400015 	stw	r17,0(r22)
    c294:	10800044 	addi	r2,r2,1
    c298:	d8801b15 	stw	r2,108(sp)
    c29c:	b5400115 	stw	r21,4(r22)
    c2a0:	d8c01c15 	stw	r3,112(sp)
    c2a4:	10800208 	cmpgei	r2,r2,8
    c2a8:	1002cf1e 	bne	r2,zero,cde8 <___vfprintf_internal_r+0x1ddc>
    c2ac:	b5800204 	addi	r22,r22,8
    c2b0:	a800b516 	blt	r21,zero,c588 <___vfprintf_internal_r+0x157c>
    c2b4:	d8800717 	ldw	r2,28(sp)
    c2b8:	156bc83a 	sub	r21,r2,r21
    c2bc:	0540c416 	blt	zero,r21,c5d0 <___vfprintf_internal_r+0x15c4>
    c2c0:	dd401417 	ldw	r21,80(sp)
    c2c4:	d8800817 	ldw	r2,32(sp)
    c2c8:	a880a40e 	bge	r21,r2,c55c <___vfprintf_internal_r+0x1550>
    c2cc:	d8800d17 	ldw	r2,52(sp)
    c2d0:	d9000b17 	ldw	r4,44(sp)
    c2d4:	b0800015 	stw	r2,0(r22)
    c2d8:	d8801b17 	ldw	r2,108(sp)
    c2dc:	1907883a 	add	r3,r3,r4
    c2e0:	b1000115 	stw	r4,4(r22)
    c2e4:	10800044 	addi	r2,r2,1
    c2e8:	d8801b15 	stw	r2,108(sp)
    c2ec:	d8c01c15 	stw	r3,112(sp)
    c2f0:	10800208 	cmpgei	r2,r2,8
    c2f4:	1002b31e 	bne	r2,zero,cdc4 <___vfprintf_internal_r+0x1db8>
    c2f8:	b5800204 	addi	r22,r22,8
    c2fc:	d9000817 	ldw	r4,32(sp)
    c300:	d9400717 	ldw	r5,28(sp)
    c304:	2545c83a 	sub	r2,r4,r21
    c308:	2149c83a 	sub	r4,r4,r5
    c30c:	102b883a 	mov	r21,r2
    c310:	2080010e 	bge	r4,r2,c318 <___vfprintf_internal_r+0x130c>
    c314:	202b883a 	mov	r21,r4
    c318:	05400c0e 	bge	zero,r21,c34c <___vfprintf_internal_r+0x1340>
    c31c:	d9000717 	ldw	r4,28(sp)
    c320:	1d47883a 	add	r3,r3,r21
    c324:	b5400115 	stw	r21,4(r22)
    c328:	8913883a 	add	r9,r17,r4
    c32c:	d9001b17 	ldw	r4,108(sp)
    c330:	b2400015 	stw	r9,0(r22)
    c334:	d8c01c15 	stw	r3,112(sp)
    c338:	21000044 	addi	r4,r4,1
    c33c:	d9001b15 	stw	r4,108(sp)
    c340:	21000208 	cmpgei	r4,r4,8
    c344:	2002b31e 	bne	r4,zero,ce14 <___vfprintf_internal_r+0x1e08>
    c348:	b5800204 	addi	r22,r22,8
    c34c:	a800010e 	bge	r21,zero,c354 <___vfprintf_internal_r+0x1348>
    c350:	002b883a 	mov	r21,zero
    c354:	156bc83a 	sub	r21,r2,r21
    c358:	057c2a0e 	bge	zero,r21,b404 <___vfprintf_internal_r+0x3f8>
    c35c:	01c000b4 	movhi	r7,2
    c360:	a9000450 	cmplti	r4,r21,17
    c364:	d8801b17 	ldw	r2,108(sp)
    c368:	39e01d04 	addi	r7,r7,-32652
    c36c:	2001881e 	bne	r4,zero,c990 <___vfprintf_internal_r+0x1984>
    c370:	07000404 	movi	fp,16
    c374:	3823883a 	mov	r17,r7
    c378:	00000406 	br	c38c <___vfprintf_internal_r+0x1380>
    c37c:	b5800204 	addi	r22,r22,8
    c380:	ad7ffc04 	addi	r21,r21,-16
    c384:	a9000448 	cmpgei	r4,r21,17
    c388:	20018026 	beq	r4,zero,c98c <___vfprintf_internal_r+0x1980>
    c38c:	10800044 	addi	r2,r2,1
    c390:	18c00404 	addi	r3,r3,16
    c394:	b4400015 	stw	r17,0(r22)
    c398:	b7000115 	stw	fp,4(r22)
    c39c:	d8c01c15 	stw	r3,112(sp)
    c3a0:	d8801b15 	stw	r2,108(sp)
    c3a4:	11000208 	cmpgei	r4,r2,8
    c3a8:	203ff426 	beq	r4,zero,c37c <___vfprintf_internal_r+0x1370>
    c3ac:	d9801a04 	addi	r6,sp,104
    c3b0:	900b883a 	mov	r5,r18
    c3b4:	9809883a 	mov	r4,r19
    c3b8:	0011b240 	call	11b24 <__sprint_r>
    c3bc:	103c221e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    c3c0:	d8c01c17 	ldw	r3,112(sp)
    c3c4:	d8801b17 	ldw	r2,108(sp)
    c3c8:	dd802704 	addi	r22,sp,156
    c3cc:	003fec06 	br	c380 <___vfprintf_internal_r+0x1374>
    c3d0:	d8800417 	ldw	r2,16(sp)
    c3d4:	1080004c 	andi	r2,r2,1
    c3d8:	103f151e 	bne	r2,zero,c030 <___vfprintf_internal_r+0x1024>
    c3dc:	00800044 	movi	r2,1
    c3e0:	b0800115 	stw	r2,4(r22)
    c3e4:	b4400015 	stw	r17,0(r22)
    c3e8:	d8c01c15 	stw	r3,112(sp)
    c3ec:	dd401b15 	stw	r21,108(sp)
    c3f0:	a8800210 	cmplti	r2,r21,8
    c3f4:	103f341e 	bne	r2,zero,c0c8 <___vfprintf_internal_r+0x10bc>
    c3f8:	d9801a04 	addi	r6,sp,104
    c3fc:	900b883a 	mov	r5,r18
    c400:	9809883a 	mov	r4,r19
    c404:	0011b240 	call	11b24 <__sprint_r>
    c408:	103c0f1e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    c40c:	d8c01c17 	ldw	r3,112(sp)
    c410:	dd401b17 	ldw	r21,108(sp)
    c414:	df002704 	addi	fp,sp,156
    c418:	003f2b06 	br	c0c8 <___vfprintf_internal_r+0x10bc>
    c41c:	4002361e 	bne	r8,zero,ccf8 <___vfprintf_internal_r+0x1cec>
    c420:	0011883a 	mov	r8,zero
    c424:	002b883a 	mov	r21,zero
    c428:	dc402704 	addi	r17,sp,156
    c42c:	003d0e06 	br	b868 <___vfprintf_internal_r+0x85c>
    c430:	05bf250e 	bge	zero,r22,c0c8 <___vfprintf_internal_r+0x10bc>
    c434:	01c000b4 	movhi	r7,2
    c438:	b0800450 	cmplti	r2,r22,17
    c43c:	39e01d04 	addi	r7,r7,-32652
    c440:	1001731e 	bne	r2,zero,ca10 <___vfprintf_internal_r+0x1a04>
    c444:	dc000715 	stw	r16,28(sp)
    c448:	04400404 	movi	r17,16
    c44c:	3821883a 	mov	r16,r7
    c450:	00000406 	br	c464 <___vfprintf_internal_r+0x1458>
    c454:	e7000204 	addi	fp,fp,8
    c458:	b5bffc04 	addi	r22,r22,-16
    c45c:	b0800448 	cmpgei	r2,r22,17
    c460:	10016926 	beq	r2,zero,ca08 <___vfprintf_internal_r+0x19fc>
    c464:	ad400044 	addi	r21,r21,1
    c468:	18c00404 	addi	r3,r3,16
    c46c:	e4000015 	stw	r16,0(fp)
    c470:	e4400115 	stw	r17,4(fp)
    c474:	d8c01c15 	stw	r3,112(sp)
    c478:	dd401b15 	stw	r21,108(sp)
    c47c:	a8800208 	cmpgei	r2,r21,8
    c480:	103ff426 	beq	r2,zero,c454 <___vfprintf_internal_r+0x1448>
    c484:	d9801a04 	addi	r6,sp,104
    c488:	900b883a 	mov	r5,r18
    c48c:	9809883a 	mov	r4,r19
    c490:	0011b240 	call	11b24 <__sprint_r>
    c494:	103bec1e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    c498:	d8c01c17 	ldw	r3,112(sp)
    c49c:	dd401b17 	ldw	r21,108(sp)
    c4a0:	df002704 	addi	fp,sp,156
    c4a4:	003fec06 	br	c458 <___vfprintf_internal_r+0x144c>
    c4a8:	d9801a04 	addi	r6,sp,104
    c4ac:	900b883a 	mov	r5,r18
    c4b0:	9809883a 	mov	r4,r19
    c4b4:	0011b240 	call	11b24 <__sprint_r>
    c4b8:	103be31e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    c4bc:	d8c01c17 	ldw	r3,112(sp)
    c4c0:	dd802704 	addi	r22,sp,156
    c4c4:	003bc206 	br	b3d0 <___vfprintf_internal_r+0x3c4>
    c4c8:	002b883a 	mov	r21,zero
    c4cc:	003d7306 	br	ba9c <___vfprintf_internal_r+0xa90>
    c4d0:	a02bd7fa 	srai	r21,r20,31
    c4d4:	a805883a 	mov	r2,r21
    c4d8:	003cd106 	br	b820 <___vfprintf_internal_r+0x814>
    c4dc:	d8800417 	ldw	r2,16(sp)
    c4e0:	1080004c 	andi	r2,r2,1
    c4e4:	103bc726 	beq	r2,zero,b404 <___vfprintf_internal_r+0x3f8>
    c4e8:	003de706 	br	bc88 <___vfprintf_internal_r+0xc7c>
    c4ec:	63000414 	ori	r12,r12,16
    c4f0:	003b1206 	br	b13c <___vfprintf_internal_r+0x130>
    c4f4:	bac00007 	ldb	r11,0(r23)
    c4f8:	d8800615 	stw	r2,24(sp)
    c4fc:	003b0f06 	br	b13c <___vfprintf_internal_r+0x130>
    c500:	dc402704 	addi	r17,sp,156
    c504:	003cd806 	br	b868 <___vfprintf_internal_r+0x85c>
    c508:	18800017 	ldw	r2,0(r3)
    c50c:	d8800915 	stw	r2,36(sp)
    c510:	18800117 	ldw	r2,4(r3)
    c514:	d8800a15 	stw	r2,40(sp)
    c518:	003c3e06 	br	b614 <___vfprintf_internal_r+0x608>
    c51c:	00800c04 	movi	r2,48
    c520:	d8801385 	stb	r2,78(sp)
    c524:	df0013c5 	stb	fp,79(sp)
    c528:	63000094 	ori	r12,r12,2
    c52c:	00800084 	movi	r2,2
    c530:	003c0206 	br	b53c <___vfprintf_internal_r+0x530>
    c534:	d9400517 	ldw	r5,20(sp)
    c538:	20800017 	ldw	r2,0(r4)
    c53c:	d8c00615 	stw	r3,24(sp)
    c540:	2809d7fa 	srai	r4,r5,31
    c544:	11400015 	stw	r5,0(r2)
    c548:	11000115 	stw	r4,4(r2)
    c54c:	003ae306 	br	b0dc <___vfprintf_internal_r+0xd0>
    c550:	202b883a 	mov	r21,r4
    c554:	057f4c16 	blt	zero,r21,c288 <___vfprintf_internal_r+0x127c>
    c558:	003f5506 	br	c2b0 <___vfprintf_internal_r+0x12a4>
    c55c:	d8800417 	ldw	r2,16(sp)
    c560:	1080004c 	andi	r2,r2,1
    c564:	103f591e 	bne	r2,zero,c2cc <___vfprintf_internal_r+0x12c0>
    c568:	d9000817 	ldw	r4,32(sp)
    c56c:	d9400717 	ldw	r5,28(sp)
    c570:	2545c83a 	sub	r2,r4,r21
    c574:	2179c83a 	sub	fp,r4,r5
    c578:	102b883a 	mov	r21,r2
    c57c:	e0bf730e 	bge	fp,r2,c34c <___vfprintf_internal_r+0x1340>
    c580:	e02b883a 	mov	r21,fp
    c584:	003f7106 	br	c34c <___vfprintf_internal_r+0x1340>
    c588:	002b883a 	mov	r21,zero
    c58c:	003f4906 	br	c2b4 <___vfprintf_internal_r+0x12a8>
    c590:	d9801a04 	addi	r6,sp,104
    c594:	900b883a 	mov	r5,r18
    c598:	9809883a 	mov	r4,r19
    c59c:	0011b240 	call	11b24 <__sprint_r>
    c5a0:	103ba91e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    c5a4:	d8c01c17 	ldw	r3,112(sp)
    c5a8:	dd802704 	addi	r22,sp,156
    c5ac:	003dc206 	br	bcb8 <___vfprintf_internal_r+0xcac>
    c5b0:	408001f0 	cmpltui	r2,r8,7
    c5b4:	402b883a 	mov	r21,r8
    c5b8:	1001a026 	beq	r2,zero,cc3c <___vfprintf_internal_r+0x1c30>
    c5bc:	044000b4 	movhi	r17,2
    c5c0:	a829883a 	mov	r20,r21
    c5c4:	d8c00615 	stw	r3,24(sp)
    c5c8:	8c601a04 	addi	r17,r17,-32664
    c5cc:	003b5406 	br	b320 <___vfprintf_internal_r+0x314>
    c5d0:	01c000b4 	movhi	r7,2
    c5d4:	a9000450 	cmplti	r4,r21,17
    c5d8:	d8801b17 	ldw	r2,108(sp)
    c5dc:	39e01d04 	addi	r7,r7,-32652
    c5e0:	20017b1e 	bne	r4,zero,cbd0 <___vfprintf_internal_r+0x1bc4>
    c5e4:	dc000e15 	stw	r16,56(sp)
    c5e8:	07000404 	movi	fp,16
    c5ec:	3821883a 	mov	r16,r7
    c5f0:	00000406 	br	c604 <___vfprintf_internal_r+0x15f8>
    c5f4:	b5800204 	addi	r22,r22,8
    c5f8:	ad7ffc04 	addi	r21,r21,-16
    c5fc:	a9000448 	cmpgei	r4,r21,17
    c600:	20017126 	beq	r4,zero,cbc8 <___vfprintf_internal_r+0x1bbc>
    c604:	10800044 	addi	r2,r2,1
    c608:	18c00404 	addi	r3,r3,16
    c60c:	b4000015 	stw	r16,0(r22)
    c610:	b7000115 	stw	fp,4(r22)
    c614:	d8c01c15 	stw	r3,112(sp)
    c618:	d8801b15 	stw	r2,108(sp)
    c61c:	11000208 	cmpgei	r4,r2,8
    c620:	203ff426 	beq	r4,zero,c5f4 <___vfprintf_internal_r+0x15e8>
    c624:	d9801a04 	addi	r6,sp,104
    c628:	900b883a 	mov	r5,r18
    c62c:	9809883a 	mov	r4,r19
    c630:	0011b240 	call	11b24 <__sprint_r>
    c634:	103b841e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    c638:	d8c01c17 	ldw	r3,112(sp)
    c63c:	d8801b17 	ldw	r2,108(sp)
    c640:	dd802704 	addi	r22,sp,156
    c644:	003fec06 	br	c5f8 <___vfprintf_internal_r+0x15ec>
    c648:	dc402704 	addi	r17,sp,156
    c64c:	a805883a 	mov	r2,r21
    c650:	dc000715 	stw	r16,28(sp)
    c654:	902b883a 	mov	r21,r18
    c658:	8821883a 	mov	r16,r17
    c65c:	db000415 	stw	r12,16(sp)
    c660:	a023883a 	mov	r17,r20
    c664:	da000e15 	stw	r8,56(sp)
    c668:	9829883a 	mov	r20,r19
    c66c:	1025883a 	mov	r18,r2
    c670:	6827883a 	mov	r19,r13
    c674:	8809883a 	mov	r4,r17
    c678:	900b883a 	mov	r5,r18
    c67c:	01800284 	movi	r6,10
    c680:	000f883a 	mov	r7,zero
    c684:	00146900 	call	14690 <__umoddi3>
    c688:	10800c04 	addi	r2,r2,48
    c68c:	8809883a 	mov	r4,r17
    c690:	900b883a 	mov	r5,r18
    c694:	01800284 	movi	r6,10
    c698:	000f883a 	mov	r7,zero
    c69c:	80bfffc5 	stb	r2,-1(r16)
    c6a0:	00140700 	call	14070 <__udivdi3>
    c6a4:	900d883a 	mov	r6,r18
    c6a8:	880f883a 	mov	r7,r17
    c6ac:	843fffc4 	addi	r16,r16,-1
    c6b0:	1023883a 	mov	r17,r2
    c6b4:	1825883a 	mov	r18,r3
    c6b8:	303fee1e 	bne	r6,zero,c674 <___vfprintf_internal_r+0x1668>
    c6bc:	39c002a8 	cmpgeui	r7,r7,10
    c6c0:	383fec1e 	bne	r7,zero,c674 <___vfprintf_internal_r+0x1668>
    c6c4:	8023883a 	mov	r17,r16
    c6c8:	d8802704 	addi	r2,sp,156
    c6cc:	981b883a 	mov	r13,r19
    c6d0:	a825883a 	mov	r18,r21
    c6d4:	dc000717 	ldw	r16,28(sp)
    c6d8:	da000e17 	ldw	r8,56(sp)
    c6dc:	a027883a 	mov	r19,r20
    c6e0:	146bc83a 	sub	r21,r2,r17
    c6e4:	003c6006 	br	b868 <___vfprintf_internal_r+0x85c>
    c6e8:	d8800617 	ldw	r2,24(sp)
    c6ec:	10800017 	ldw	r2,0(r2)
    c6f0:	d8c00615 	stw	r3,24(sp)
    c6f4:	d8c00517 	ldw	r3,20(sp)
    c6f8:	10c00015 	stw	r3,0(r2)
    c6fc:	003a7706 	br	b0dc <___vfprintf_internal_r+0xd0>
    c700:	d9801a04 	addi	r6,sp,104
    c704:	900b883a 	mov	r5,r18
    c708:	9809883a 	mov	r4,r19
    c70c:	0011b240 	call	11b24 <__sprint_r>
    c710:	103b4d1e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    c714:	d8c01c17 	ldw	r3,112(sp)
    c718:	dd401b17 	ldw	r21,108(sp)
    c71c:	df002704 	addi	fp,sp,156
    c720:	003e4a06 	br	c04c <___vfprintf_internal_r+0x1040>
    c724:	d9801a04 	addi	r6,sp,104
    c728:	900b883a 	mov	r5,r18
    c72c:	9809883a 	mov	r4,r19
    c730:	0011b240 	call	11b24 <__sprint_r>
    c734:	103b441e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    c738:	d8c01c17 	ldw	r3,112(sp)
    c73c:	dd401b17 	ldw	r21,108(sp)
    c740:	df002704 	addi	fp,sp,156
    c744:	003e4c06 	br	c078 <___vfprintf_internal_r+0x106c>
    c748:	d9801a04 	addi	r6,sp,104
    c74c:	900b883a 	mov	r5,r18
    c750:	9809883a 	mov	r4,r19
    c754:	da001115 	stw	r8,68(sp)
    c758:	db400f15 	stw	r13,60(sp)
    c75c:	db800e15 	stw	r14,56(sp)
    c760:	0011b240 	call	11b24 <__sprint_r>
    c764:	103b381e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    c768:	d8c01c17 	ldw	r3,112(sp)
    c76c:	da001117 	ldw	r8,68(sp)
    c770:	db400f17 	ldw	r13,60(sp)
    c774:	db800e17 	ldw	r14,56(sp)
    c778:	dd802704 	addi	r22,sp,156
    c77c:	003af506 	br	b354 <___vfprintf_internal_r+0x348>
    c780:	8825883a 	mov	r18,r17
    c784:	003b3006 	br	b448 <___vfprintf_internal_r+0x43c>
    c788:	d9000917 	ldw	r4,36(sp)
    c78c:	d9400a17 	ldw	r5,40(sp)
    c790:	da000615 	stw	r8,24(sp)
    c794:	200d883a 	mov	r6,r4
    c798:	280f883a 	mov	r7,r5
    c79c:	db000415 	stw	r12,16(sp)
    c7a0:	000a0800 	call	a080 <__unorddf2>
    c7a4:	db000417 	ldw	r12,16(sp)
    c7a8:	da000617 	ldw	r8,24(sp)
    c7ac:	1001f51e 	bne	r2,zero,cf84 <___vfprintf_internal_r+0x1f78>
    c7b0:	057ff7c4 	movi	r21,-33
    c7b4:	40bfffe0 	cmpeqi	r2,r8,-1
    c7b8:	e56a703a 	and	r21,fp,r21
    c7bc:	1001931e 	bne	r2,zero,ce0c <___vfprintf_internal_r+0x1e00>
    c7c0:	a88011d8 	cmpnei	r2,r21,71
    c7c4:	10013626 	beq	r2,zero,cca0 <___vfprintf_internal_r+0x1c94>
    c7c8:	60804014 	ori	r2,r12,256
    c7cc:	d8800415 	stw	r2,16(sp)
    c7d0:	d8800a17 	ldw	r2,40(sp)
    c7d4:	10011516 	blt	r2,zero,cc2c <___vfprintf_internal_r+0x1c20>
    c7d8:	dd000a17 	ldw	r20,40(sp)
    c7dc:	d8000605 	stb	zero,24(sp)
    c7e0:	e08019a0 	cmpeqi	r2,fp,102
    c7e4:	d8800f15 	stw	r2,60(sp)
    c7e8:	1000b91e 	bne	r2,zero,cad0 <___vfprintf_internal_r+0x1ac4>
    c7ec:	e08011a0 	cmpeqi	r2,fp,70
    c7f0:	1000b71e 	bne	r2,zero,cad0 <___vfprintf_internal_r+0x1ac4>
    c7f4:	a8801158 	cmpnei	r2,r21,69
    c7f8:	10014126 	beq	r2,zero,cd00 <___vfprintf_internal_r+0x1cf4>
    c7fc:	d8801804 	addi	r2,sp,96
    c800:	d8800315 	stw	r2,12(sp)
    c804:	d9400917 	ldw	r5,36(sp)
    c808:	d8801504 	addi	r2,sp,84
    c80c:	d8800215 	stw	r2,8(sp)
    c810:	d8801404 	addi	r2,sp,80
    c814:	da000015 	stw	r8,0(sp)
    c818:	9809883a 	mov	r4,r19
    c81c:	d8800115 	stw	r2,4(sp)
    c820:	01c00084 	movi	r7,2
    c824:	a00d883a 	mov	r6,r20
    c828:	db000815 	stw	r12,32(sp)
    c82c:	da000715 	stw	r8,28(sp)
    c830:	000d4840 	call	d484 <_dtoa_r>
    c834:	da000717 	ldw	r8,28(sp)
    c838:	e10019d8 	cmpnei	r4,fp,103
    c83c:	db000817 	ldw	r12,32(sp)
    c840:	1023883a 	mov	r17,r2
    c844:	4007883a 	mov	r3,r8
    c848:	2001411e 	bne	r4,zero,cd50 <___vfprintf_internal_r+0x1d44>
    c84c:	6080004c 	andi	r2,r12,1
    c850:	1001411e 	bne	r2,zero,cd58 <___vfprintf_internal_r+0x1d4c>
    c854:	d8801417 	ldw	r2,80(sp)
    c858:	ad4011e0 	cmpeqi	r21,r21,71
    c85c:	d8800715 	stw	r2,28(sp)
    c860:	d8801817 	ldw	r2,96(sp)
    c864:	1445c83a 	sub	r2,r2,r17
    c868:	d8800815 	stw	r2,32(sp)
    c86c:	a8000526 	beq	r21,zero,c884 <___vfprintf_internal_r+0x1878>
    c870:	d8c00717 	ldw	r3,28(sp)
    c874:	18bfff50 	cmplti	r2,r3,-3
    c878:	1000011e 	bne	r2,zero,c880 <___vfprintf_internal_r+0x1874>
    c87c:	40c1460e 	bge	r8,r3,cd98 <___vfprintf_internal_r+0x1d8c>
    c880:	e73fff84 	addi	fp,fp,-2
    c884:	d8800717 	ldw	r2,28(sp)
    c888:	df001645 	stb	fp,89(sp)
    c88c:	157fffc4 	addi	r21,r2,-1
    c890:	dd401415 	stw	r21,80(sp)
    c894:	a801ab16 	blt	r21,zero,cf44 <___vfprintf_internal_r+0x1f38>
    c898:	00800ac4 	movi	r2,43
    c89c:	d8801685 	stb	r2,90(sp)
    c8a0:	a8800290 	cmplti	r2,r21,10
    c8a4:	1001a01e 	bne	r2,zero,cf28 <___vfprintf_internal_r+0x1f1c>
    c8a8:	d98019c4 	addi	r6,sp,103
    c8ac:	9029883a 	mov	r20,r18
    c8b0:	dc400715 	stw	r17,28(sp)
    c8b4:	8025883a 	mov	r18,r16
    c8b8:	db000f15 	stw	r12,60(sp)
    c8bc:	3021883a 	mov	r16,r6
    c8c0:	a809883a 	mov	r4,r21
    c8c4:	01400284 	movi	r5,10
    c8c8:	00078840 	call	7884 <__modsi3>
    c8cc:	10800c04 	addi	r2,r2,48
    c8d0:	a809883a 	mov	r4,r21
    c8d4:	80bfffc5 	stb	r2,-1(r16)
    c8d8:	01400284 	movi	r5,10
    c8dc:	00078040 	call	7804 <__divsi3>
    c8e0:	a9001908 	cmpgei	r4,r21,100
    c8e4:	8023883a 	mov	r17,r16
    c8e8:	102b883a 	mov	r21,r2
    c8ec:	843fffc4 	addi	r16,r16,-1
    c8f0:	203ff31e 	bne	r4,zero,c8c0 <___vfprintf_internal_r+0x18b4>
    c8f4:	800d883a 	mov	r6,r16
    c8f8:	11000c04 	addi	r4,r2,48
    c8fc:	9021883a 	mov	r16,r18
    c900:	a025883a 	mov	r18,r20
    c904:	8829883a 	mov	r20,r17
    c908:	a0bfff84 	addi	r2,r20,-2
    c90c:	313fffc5 	stb	r4,-1(r6)
    c910:	d8c019c4 	addi	r3,sp,103
    c914:	db000f17 	ldw	r12,60(sp)
    c918:	dc400717 	ldw	r17,28(sp)
    c91c:	10c1be2e 	bgeu	r2,r3,d018 <___vfprintf_internal_r+0x200c>
    c920:	d8c016c4 	addi	r3,sp,91
    c924:	00000106 	br	c92c <___vfprintf_internal_r+0x1920>
    c928:	11000003 	ldbu	r4,0(r2)
    c92c:	19000005 	stb	r4,0(r3)
    c930:	10800044 	addi	r2,r2,1
    c934:	d90019c4 	addi	r4,sp,103
    c938:	18c00044 	addi	r3,r3,1
    c93c:	113ffa1e 	bne	r2,r4,c928 <___vfprintf_internal_r+0x191c>
    c940:	d8801a44 	addi	r2,sp,105
    c944:	d8c016c4 	addi	r3,sp,91
    c948:	1505c83a 	sub	r2,r2,r20
    c94c:	1885883a 	add	r2,r3,r2
    c950:	d8c01644 	addi	r3,sp,89
    c954:	10c5c83a 	sub	r2,r2,r3
    c958:	d8801015 	stw	r2,64(sp)
    c95c:	d8c00817 	ldw	r3,32(sp)
    c960:	d9001017 	ldw	r4,64(sp)
    c964:	18800088 	cmpgei	r2,r3,2
    c968:	192b883a 	add	r21,r3,r4
    c96c:	10018126 	beq	r2,zero,cf74 <___vfprintf_internal_r+0x1f68>
    c970:	d8800b17 	ldw	r2,44(sp)
    c974:	a8ab883a 	add	r21,r21,r2
    c978:	a829883a 	mov	r20,r21
    c97c:	a800010e 	bge	r21,zero,c984 <___vfprintf_internal_r+0x1978>
    c980:	0029883a 	mov	r20,zero
    c984:	d8000715 	stw	zero,28(sp)
    c988:	00008406 	br	cb9c <___vfprintf_internal_r+0x1b90>
    c98c:	880f883a 	mov	r7,r17
    c990:	10800044 	addi	r2,r2,1
    c994:	1d47883a 	add	r3,r3,r21
    c998:	b1c00015 	stw	r7,0(r22)
    c99c:	003a9306 	br	b3ec <___vfprintf_internal_r+0x3e0>
    c9a0:	d9801a04 	addi	r6,sp,104
    c9a4:	900b883a 	mov	r5,r18
    c9a8:	9809883a 	mov	r4,r19
    c9ac:	0011b240 	call	11b24 <__sprint_r>
    c9b0:	103aa51e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    c9b4:	d8c01c17 	ldw	r3,112(sp)
    c9b8:	dd802704 	addi	r22,sp,156
    c9bc:	003caf06 	br	bc7c <___vfprintf_internal_r+0xc70>
    c9c0:	d9801a04 	addi	r6,sp,104
    c9c4:	900b883a 	mov	r5,r18
    c9c8:	9809883a 	mov	r4,r19
    c9cc:	da000e15 	stw	r8,56(sp)
    c9d0:	0011b240 	call	11b24 <__sprint_r>
    c9d4:	103a9c1e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    c9d8:	d8c01c17 	ldw	r3,112(sp)
    c9dc:	da000e17 	ldw	r8,56(sp)
    c9e0:	dd802704 	addi	r22,sp,156
    c9e4:	003a7806 	br	b3c8 <___vfprintf_internal_r+0x3bc>
    c9e8:	8809883a 	mov	r4,r17
    c9ec:	db000415 	stw	r12,16(sp)
    c9f0:	d8c00615 	stw	r3,24(sp)
    c9f4:	000af740 	call	af74 <strlen>
    c9f8:	db000417 	ldw	r12,16(sp)
    c9fc:	102b883a 	mov	r21,r2
    ca00:	1029883a 	mov	r20,r2
    ca04:	003a4606 	br	b320 <___vfprintf_internal_r+0x314>
    ca08:	800f883a 	mov	r7,r16
    ca0c:	dc000717 	ldw	r16,28(sp)
    ca10:	ad400044 	addi	r21,r21,1
    ca14:	1d87883a 	add	r3,r3,r22
    ca18:	e1c00015 	stw	r7,0(fp)
    ca1c:	003da406 	br	c0b0 <___vfprintf_internal_r+0x10a4>
    ca20:	d8800d17 	ldw	r2,52(sp)
    ca24:	d9000b17 	ldw	r4,44(sp)
    ca28:	b0800015 	stw	r2,0(r22)
    ca2c:	d8801b17 	ldw	r2,108(sp)
    ca30:	20c7883a 	add	r3,r4,r3
    ca34:	b1000115 	stw	r4,4(r22)
    ca38:	10800044 	addi	r2,r2,1
    ca3c:	d8c01c15 	stw	r3,112(sp)
    ca40:	d8801b15 	stw	r2,108(sp)
    ca44:	11000208 	cmpgei	r4,r2,8
    ca48:	2000981e 	bne	r4,zero,ccac <___vfprintf_internal_r+0x1ca0>
    ca4c:	b5800204 	addi	r22,r22,8
    ca50:	283d5f0e 	bge	r5,zero,bfd0 <___vfprintf_internal_r+0xfc4>
    ca54:	01c000b4 	movhi	r7,2
    ca58:	293ffc08 	cmpgei	r4,r5,-16
    ca5c:	39e01d04 	addi	r7,r7,-32652
    ca60:	0179c83a 	sub	fp,zero,r5
    ca64:	2001151e 	bne	r4,zero,cebc <___vfprintf_internal_r+0x1eb0>
    ca68:	dc000715 	stw	r16,28(sp)
    ca6c:	05400404 	movi	r21,16
    ca70:	9021883a 	mov	r16,r18
    ca74:	3825883a 	mov	r18,r7
    ca78:	00000406 	br	ca8c <___vfprintf_internal_r+0x1a80>
    ca7c:	b5800204 	addi	r22,r22,8
    ca80:	e73ffc04 	addi	fp,fp,-16
    ca84:	e1800448 	cmpgei	r6,fp,17
    ca88:	30010926 	beq	r6,zero,ceb0 <___vfprintf_internal_r+0x1ea4>
    ca8c:	10800044 	addi	r2,r2,1
    ca90:	18c00404 	addi	r3,r3,16
    ca94:	b4800015 	stw	r18,0(r22)
    ca98:	b5400115 	stw	r21,4(r22)
    ca9c:	d8c01c15 	stw	r3,112(sp)
    caa0:	d8801b15 	stw	r2,108(sp)
    caa4:	11800208 	cmpgei	r6,r2,8
    caa8:	303ff426 	beq	r6,zero,ca7c <___vfprintf_internal_r+0x1a70>
    caac:	d9801a04 	addi	r6,sp,104
    cab0:	800b883a 	mov	r5,r16
    cab4:	9809883a 	mov	r4,r19
    cab8:	0011b240 	call	11b24 <__sprint_r>
    cabc:	1001411e 	bne	r2,zero,cfc4 <___vfprintf_internal_r+0x1fb8>
    cac0:	d8c01c17 	ldw	r3,112(sp)
    cac4:	d8801b17 	ldw	r2,108(sp)
    cac8:	dd802704 	addi	r22,sp,156
    cacc:	003fec06 	br	ca80 <___vfprintf_internal_r+0x1a74>
    cad0:	d8801804 	addi	r2,sp,96
    cad4:	d8800315 	stw	r2,12(sp)
    cad8:	d9400917 	ldw	r5,36(sp)
    cadc:	d8801504 	addi	r2,sp,84
    cae0:	d8800215 	stw	r2,8(sp)
    cae4:	d8801404 	addi	r2,sp,80
    cae8:	da000015 	stw	r8,0(sp)
    caec:	d8800115 	stw	r2,4(sp)
    caf0:	01c000c4 	movi	r7,3
    caf4:	a00d883a 	mov	r6,r20
    caf8:	9809883a 	mov	r4,r19
    cafc:	db000815 	stw	r12,32(sp)
    cb00:	da000715 	stw	r8,28(sp)
    cb04:	000d4840 	call	d484 <_dtoa_r>
    cb08:	da000717 	ldw	r8,28(sp)
    cb0c:	1023883a 	mov	r17,r2
    cb10:	db000817 	ldw	r12,32(sp)
    cb14:	1207883a 	add	r3,r2,r8
    cb18:	88800007 	ldb	r2,0(r17)
    cb1c:	10800c20 	cmpeqi	r2,r2,48
    cb20:	10004f1e 	bne	r2,zero,cc60 <___vfprintf_internal_r+0x1c54>
    cb24:	d8801417 	ldw	r2,80(sp)
    cb28:	1893883a 	add	r9,r3,r2
    cb2c:	d9000917 	ldw	r4,36(sp)
    cb30:	000d883a 	mov	r6,zero
    cb34:	000f883a 	mov	r7,zero
    cb38:	a00b883a 	mov	r5,r20
    cb3c:	da401115 	stw	r9,68(sp)
    cb40:	da000815 	stw	r8,32(sp)
    cb44:	db000715 	stw	r12,28(sp)
    cb48:	0008d780 	call	8d78 <__eqdf2>
    cb4c:	db000717 	ldw	r12,28(sp)
    cb50:	da000817 	ldw	r8,32(sp)
    cb54:	da401117 	ldw	r9,68(sp)
    cb58:	1000811e 	bne	r2,zero,cd60 <___vfprintf_internal_r+0x1d54>
    cb5c:	4805883a 	mov	r2,r9
    cb60:	d8c01417 	ldw	r3,80(sp)
    cb64:	1445c83a 	sub	r2,r2,r17
    cb68:	ad4011d8 	cmpnei	r21,r21,71
    cb6c:	d8c00715 	stw	r3,28(sp)
    cb70:	d8800815 	stw	r2,32(sp)
    cb74:	a83f3e26 	beq	r21,zero,c870 <___vfprintf_internal_r+0x1864>
    cb78:	d8800f17 	ldw	r2,60(sp)
    cb7c:	103f4126 	beq	r2,zero,c884 <___vfprintf_internal_r+0x1878>
    cb80:	d8c00717 	ldw	r3,28(sp)
    cb84:	6080004c 	andi	r2,r12,1
    cb88:	1204b03a 	or	r2,r2,r8
    cb8c:	00c1050e 	bge	zero,r3,cfa4 <___vfprintf_internal_r+0x1f98>
    cb90:	1000f11e 	bne	r2,zero,cf58 <___vfprintf_internal_r+0x1f4c>
    cb94:	dd400717 	ldw	r21,28(sp)
    cb98:	a829883a 	mov	r20,r21
    cb9c:	d8800607 	ldb	r2,24(sp)
    cba0:	10007826 	beq	r2,zero,cd84 <___vfprintf_internal_r+0x1d78>
    cba4:	00800b44 	movi	r2,45
    cba8:	d8801345 	stb	r2,77(sp)
    cbac:	d8800e17 	ldw	r2,56(sp)
    cbb0:	0011883a 	mov	r8,zero
    cbb4:	d8800615 	stw	r2,24(sp)
    cbb8:	003b3306 	br	b888 <___vfprintf_internal_r+0x87c>
    cbbc:	044000b4 	movhi	r17,2
    cbc0:	8c600c04 	addi	r17,r17,-32720
    cbc4:	003ab806 	br	b6a8 <___vfprintf_internal_r+0x69c>
    cbc8:	800f883a 	mov	r7,r16
    cbcc:	dc000e17 	ldw	r16,56(sp)
    cbd0:	10800044 	addi	r2,r2,1
    cbd4:	1d47883a 	add	r3,r3,r21
    cbd8:	d8801b15 	stw	r2,108(sp)
    cbdc:	b1c00015 	stw	r7,0(r22)
    cbe0:	b5400115 	stw	r21,4(r22)
    cbe4:	d8c01c15 	stw	r3,112(sp)
    cbe8:	10800208 	cmpgei	r2,r2,8
    cbec:	10003a1e 	bne	r2,zero,ccd8 <___vfprintf_internal_r+0x1ccc>
    cbf0:	b5800204 	addi	r22,r22,8
    cbf4:	003db206 	br	c2c0 <___vfprintf_internal_r+0x12b4>
    cbf8:	00800b44 	movi	r2,45
    cbfc:	d8801345 	stb	r2,77(sp)
    cc00:	03400b44 	movi	r13,45
    cc04:	003aa406 	br	b698 <___vfprintf_internal_r+0x68c>
    cc08:	d9801a04 	addi	r6,sp,104
    cc0c:	900b883a 	mov	r5,r18
    cc10:	9809883a 	mov	r4,r19
    cc14:	0011b240 	call	11b24 <__sprint_r>
    cc18:	103a0b1e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    cc1c:	d9401417 	ldw	r5,80(sp)
    cc20:	d8c01c17 	ldw	r3,112(sp)
    cc24:	dd802704 	addi	r22,sp,156
    cc28:	003cd706 	br	bf88 <___vfprintf_internal_r+0xf7c>
    cc2c:	1520003c 	xorhi	r20,r2,32768
    cc30:	00800b44 	movi	r2,45
    cc34:	d8800605 	stb	r2,24(sp)
    cc38:	003ee906 	br	c7e0 <___vfprintf_internal_r+0x17d4>
    cc3c:	05400184 	movi	r21,6
    cc40:	003e5e06 	br	c5bc <___vfprintf_internal_r+0x15b0>
    cc44:	d9801a04 	addi	r6,sp,104
    cc48:	900b883a 	mov	r5,r18
    cc4c:	9809883a 	mov	r4,r19
    cc50:	0011b240 	call	11b24 <__sprint_r>
    cc54:	0039fc06 	br	b448 <___vfprintf_internal_r+0x43c>
    cc58:	d9401345 	stb	r5,77(sp)
    cc5c:	0039aa06 	br	b308 <___vfprintf_internal_r+0x2fc>
    cc60:	d9000917 	ldw	r4,36(sp)
    cc64:	000d883a 	mov	r6,zero
    cc68:	000f883a 	mov	r7,zero
    cc6c:	a00b883a 	mov	r5,r20
    cc70:	d8c01115 	stw	r3,68(sp)
    cc74:	da000815 	stw	r8,32(sp)
    cc78:	db000715 	stw	r12,28(sp)
    cc7c:	0008d780 	call	8d78 <__eqdf2>
    cc80:	db000717 	ldw	r12,28(sp)
    cc84:	da000817 	ldw	r8,32(sp)
    cc88:	d8c01117 	ldw	r3,68(sp)
    cc8c:	103fa526 	beq	r2,zero,cb24 <___vfprintf_internal_r+0x1b18>
    cc90:	00800044 	movi	r2,1
    cc94:	1205c83a 	sub	r2,r2,r8
    cc98:	d8801415 	stw	r2,80(sp)
    cc9c:	003fa206 	br	cb28 <___vfprintf_internal_r+0x1b1c>
    cca0:	403ec91e 	bne	r8,zero,c7c8 <___vfprintf_internal_r+0x17bc>
    cca4:	02000044 	movi	r8,1
    cca8:	003ec706 	br	c7c8 <___vfprintf_internal_r+0x17bc>
    ccac:	d9801a04 	addi	r6,sp,104
    ccb0:	900b883a 	mov	r5,r18
    ccb4:	9809883a 	mov	r4,r19
    ccb8:	0011b240 	call	11b24 <__sprint_r>
    ccbc:	1039e21e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    ccc0:	d9401417 	ldw	r5,80(sp)
    ccc4:	d8c01c17 	ldw	r3,112(sp)
    ccc8:	d8801b17 	ldw	r2,108(sp)
    cccc:	dd802704 	addi	r22,sp,156
    ccd0:	283cbf0e 	bge	r5,zero,bfd0 <___vfprintf_internal_r+0xfc4>
    ccd4:	003f5f06 	br	ca54 <___vfprintf_internal_r+0x1a48>
    ccd8:	d9801a04 	addi	r6,sp,104
    ccdc:	900b883a 	mov	r5,r18
    cce0:	9809883a 	mov	r4,r19
    cce4:	0011b240 	call	11b24 <__sprint_r>
    cce8:	1039d71e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    ccec:	d8c01c17 	ldw	r3,112(sp)
    ccf0:	dd802704 	addi	r22,sp,156
    ccf4:	003d7206 	br	c2c0 <___vfprintf_internal_r+0x12b4>
    ccf8:	db000417 	ldw	r12,16(sp)
    ccfc:	003ad506 	br	b854 <___vfprintf_internal_r+0x848>
    cd00:	d8801804 	addi	r2,sp,96
    cd04:	d8800315 	stw	r2,12(sp)
    cd08:	d9400917 	ldw	r5,36(sp)
    cd0c:	d8801504 	addi	r2,sp,84
    cd10:	40c00044 	addi	r3,r8,1
    cd14:	d8800215 	stw	r2,8(sp)
    cd18:	d8801404 	addi	r2,sp,80
    cd1c:	d8c00015 	stw	r3,0(sp)
    cd20:	d8800115 	stw	r2,4(sp)
    cd24:	01c00084 	movi	r7,2
    cd28:	a00d883a 	mov	r6,r20
    cd2c:	9809883a 	mov	r4,r19
    cd30:	db001115 	stw	r12,68(sp)
    cd34:	da000815 	stw	r8,32(sp)
    cd38:	d8c00715 	stw	r3,28(sp)
    cd3c:	000d4840 	call	d484 <_dtoa_r>
    cd40:	d8c00717 	ldw	r3,28(sp)
    cd44:	da000817 	ldw	r8,32(sp)
    cd48:	db001117 	ldw	r12,68(sp)
    cd4c:	1023883a 	mov	r17,r2
    cd50:	e08011d8 	cmpnei	r2,fp,71
    cd54:	103ebd26 	beq	r2,zero,c84c <___vfprintf_internal_r+0x1840>
    cd58:	88d3883a 	add	r9,r17,r3
    cd5c:	003f7306 	br	cb2c <___vfprintf_internal_r+0x1b20>
    cd60:	d8801817 	ldw	r2,96(sp)
    cd64:	127f7e2e 	bgeu	r2,r9,cb60 <___vfprintf_internal_r+0x1b54>
    cd68:	01000c04 	movi	r4,48
    cd6c:	10c00044 	addi	r3,r2,1
    cd70:	d8c01815 	stw	r3,96(sp)
    cd74:	11000005 	stb	r4,0(r2)
    cd78:	d8801817 	ldw	r2,96(sp)
    cd7c:	127ffb36 	bltu	r2,r9,cd6c <___vfprintf_internal_r+0x1d60>
    cd80:	003f7706 	br	cb60 <___vfprintf_internal_r+0x1b54>
    cd84:	d8800e17 	ldw	r2,56(sp)
    cd88:	db401343 	ldbu	r13,77(sp)
    cd8c:	0011883a 	mov	r8,zero
    cd90:	d8800615 	stw	r2,24(sp)
    cd94:	003ab806 	br	b878 <___vfprintf_internal_r+0x86c>
    cd98:	d8800717 	ldw	r2,28(sp)
    cd9c:	d8c00817 	ldw	r3,32(sp)
    cda0:	10c02b16 	blt	r2,r3,ce50 <___vfprintf_internal_r+0x1e44>
    cda4:	6300004c 	andi	r12,r12,1
    cda8:	6000581e 	bne	r12,zero,cf0c <___vfprintf_internal_r+0x1f00>
    cdac:	1029883a 	mov	r20,r2
    cdb0:	1000010e 	bge	r2,zero,cdb8 <___vfprintf_internal_r+0x1dac>
    cdb4:	0029883a 	mov	r20,zero
    cdb8:	dd400717 	ldw	r21,28(sp)
    cdbc:	070019c4 	movi	fp,103
    cdc0:	003f7606 	br	cb9c <___vfprintf_internal_r+0x1b90>
    cdc4:	d9801a04 	addi	r6,sp,104
    cdc8:	900b883a 	mov	r5,r18
    cdcc:	9809883a 	mov	r4,r19
    cdd0:	0011b240 	call	11b24 <__sprint_r>
    cdd4:	10399c1e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    cdd8:	dd401417 	ldw	r21,80(sp)
    cddc:	d8c01c17 	ldw	r3,112(sp)
    cde0:	dd802704 	addi	r22,sp,156
    cde4:	003d4506 	br	c2fc <___vfprintf_internal_r+0x12f0>
    cde8:	d9801a04 	addi	r6,sp,104
    cdec:	900b883a 	mov	r5,r18
    cdf0:	9809883a 	mov	r4,r19
    cdf4:	0011b240 	call	11b24 <__sprint_r>
    cdf8:	1039931e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    cdfc:	d8c01c17 	ldw	r3,112(sp)
    ce00:	dd802704 	addi	r22,sp,156
    ce04:	a83d2b0e 	bge	r21,zero,c2b4 <___vfprintf_internal_r+0x12a8>
    ce08:	003ddf06 	br	c588 <___vfprintf_internal_r+0x157c>
    ce0c:	02000184 	movi	r8,6
    ce10:	003e6d06 	br	c7c8 <___vfprintf_internal_r+0x17bc>
    ce14:	d9801a04 	addi	r6,sp,104
    ce18:	900b883a 	mov	r5,r18
    ce1c:	9809883a 	mov	r4,r19
    ce20:	0011b240 	call	11b24 <__sprint_r>
    ce24:	1039881e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    ce28:	d8801417 	ldw	r2,80(sp)
    ce2c:	d9000817 	ldw	r4,32(sp)
    ce30:	d8c01c17 	ldw	r3,112(sp)
    ce34:	dd802704 	addi	r22,sp,156
    ce38:	2085c83a 	sub	r2,r4,r2
    ce3c:	003d4306 	br	c34c <___vfprintf_internal_r+0x1340>
    ce40:	4029883a 	mov	r20,r8
    ce44:	d8c00615 	stw	r3,24(sp)
    ce48:	402b883a 	mov	r21,r8
    ce4c:	00393406 	br	b320 <___vfprintf_internal_r+0x314>
    ce50:	d8800817 	ldw	r2,32(sp)
    ce54:	d8c00b17 	ldw	r3,44(sp)
    ce58:	10eb883a 	add	r21,r2,r3
    ce5c:	d8800717 	ldw	r2,28(sp)
    ce60:	00800316 	blt	zero,r2,ce70 <___vfprintf_internal_r+0x1e64>
    ce64:	d8800717 	ldw	r2,28(sp)
    ce68:	a8abc83a 	sub	r21,r21,r2
    ce6c:	ad400044 	addi	r21,r21,1
    ce70:	a829883a 	mov	r20,r21
    ce74:	a8002a16 	blt	r21,zero,cf20 <___vfprintf_internal_r+0x1f14>
    ce78:	070019c4 	movi	fp,103
    ce7c:	003f4706 	br	cb9c <___vfprintf_internal_r+0x1b90>
    ce80:	d9401345 	stb	r5,77(sp)
    ce84:	003aa006 	br	b908 <___vfprintf_internal_r+0x8fc>
    ce88:	d9401345 	stb	r5,77(sp)
    ce8c:	003b3406 	br	bb60 <___vfprintf_internal_r+0xb54>
    ce90:	d9401345 	stb	r5,77(sp)
    ce94:	0039d506 	br	b5ec <___vfprintf_internal_r+0x5e0>
    ce98:	d9401345 	stb	r5,77(sp)
    ce9c:	003a5806 	br	b800 <___vfprintf_internal_r+0x7f4>
    cea0:	d9401345 	stb	r5,77(sp)
    cea4:	003af306 	br	ba74 <___vfprintf_internal_r+0xa68>
    cea8:	d9401345 	stb	r5,77(sp)
    ceac:	003b4c06 	br	bbe0 <___vfprintf_internal_r+0xbd4>
    ceb0:	900f883a 	mov	r7,r18
    ceb4:	8025883a 	mov	r18,r16
    ceb8:	dc000717 	ldw	r16,28(sp)
    cebc:	10800044 	addi	r2,r2,1
    cec0:	1f07883a 	add	r3,r3,fp
    cec4:	b1c00015 	stw	r7,0(r22)
    cec8:	b7000115 	stw	fp,4(r22)
    cecc:	d8c01c15 	stw	r3,112(sp)
    ced0:	d8801b15 	stw	r2,108(sp)
    ced4:	11000208 	cmpgei	r4,r2,8
    ced8:	203c3c26 	beq	r4,zero,bfcc <___vfprintf_internal_r+0xfc0>
    cedc:	d9801a04 	addi	r6,sp,104
    cee0:	900b883a 	mov	r5,r18
    cee4:	9809883a 	mov	r4,r19
    cee8:	0011b240 	call	11b24 <__sprint_r>
    ceec:	1039561e 	bne	r2,zero,b448 <___vfprintf_internal_r+0x43c>
    cef0:	d8c01c17 	ldw	r3,112(sp)
    cef4:	d8801b17 	ldw	r2,108(sp)
    cef8:	dd802704 	addi	r22,sp,156
    cefc:	003c3406 	br	bfd0 <___vfprintf_internal_r+0xfc4>
    cf00:	00bfffc4 	movi	r2,-1
    cf04:	d8800515 	stw	r2,20(sp)
    cf08:	00395206 	br	b454 <___vfprintf_internal_r+0x448>
    cf0c:	d8800717 	ldw	r2,28(sp)
    cf10:	d8c00b17 	ldw	r3,44(sp)
    cf14:	10eb883a 	add	r21,r2,r3
    cf18:	a829883a 	mov	r20,r21
    cf1c:	a83fd60e 	bge	r21,zero,ce78 <___vfprintf_internal_r+0x1e6c>
    cf20:	0029883a 	mov	r20,zero
    cf24:	003fd406 	br	ce78 <___vfprintf_internal_r+0x1e6c>
    cf28:	00800c04 	movi	r2,48
    cf2c:	ad400c04 	addi	r21,r21,48
    cf30:	d88016c5 	stb	r2,91(sp)
    cf34:	00800104 	movi	r2,4
    cf38:	dd401705 	stb	r21,92(sp)
    cf3c:	d8801015 	stw	r2,64(sp)
    cf40:	003e8606 	br	c95c <___vfprintf_internal_r+0x1950>
    cf44:	05400044 	movi	r21,1
    cf48:	a8abc83a 	sub	r21,r21,r2
    cf4c:	00800b44 	movi	r2,45
    cf50:	d8801685 	stb	r2,90(sp)
    cf54:	003e5206 	br	c8a0 <___vfprintf_internal_r+0x1894>
    cf58:	d8800b17 	ldw	r2,44(sp)
    cf5c:	18ab883a 	add	r21,r3,r2
    cf60:	aa2b883a 	add	r21,r21,r8
    cf64:	a829883a 	mov	r20,r21
    cf68:	a83f0c0e 	bge	r21,zero,cb9c <___vfprintf_internal_r+0x1b90>
    cf6c:	0029883a 	mov	r20,zero
    cf70:	003f0a06 	br	cb9c <___vfprintf_internal_r+0x1b90>
    cf74:	6080004c 	andi	r2,r12,1
    cf78:	d8800715 	stw	r2,28(sp)
    cf7c:	103e7c1e 	bne	r2,zero,c970 <___vfprintf_internal_r+0x1964>
    cf80:	003ff806 	br	cf64 <___vfprintf_internal_r+0x1f58>
    cf84:	d8800a17 	ldw	r2,40(sp)
    cf88:	10001316 	blt	r2,zero,cfd8 <___vfprintf_internal_r+0x1fcc>
    cf8c:	db401343 	ldbu	r13,77(sp)
    cf90:	e0801210 	cmplti	r2,fp,72
    cf94:	10000d1e 	bne	r2,zero,cfcc <___vfprintf_internal_r+0x1fc0>
    cf98:	044000b4 	movhi	r17,2
    cf9c:	8c600f04 	addi	r17,r17,-32708
    cfa0:	0039c106 	br	b6a8 <___vfprintf_internal_r+0x69c>
    cfa4:	1000031e 	bne	r2,zero,cfb4 <___vfprintf_internal_r+0x1fa8>
    cfa8:	05000044 	movi	r20,1
    cfac:	05400044 	movi	r21,1
    cfb0:	003efa06 	br	cb9c <___vfprintf_internal_r+0x1b90>
    cfb4:	d8800b17 	ldw	r2,44(sp)
    cfb8:	15400044 	addi	r21,r2,1
    cfbc:	aa2b883a 	add	r21,r21,r8
    cfc0:	003fe806 	br	cf64 <___vfprintf_internal_r+0x1f58>
    cfc4:	8025883a 	mov	r18,r16
    cfc8:	00391f06 	br	b448 <___vfprintf_internal_r+0x43c>
    cfcc:	044000b4 	movhi	r17,2
    cfd0:	8c600e04 	addi	r17,r17,-32712
    cfd4:	0039b406 	br	b6a8 <___vfprintf_internal_r+0x69c>
    cfd8:	00800b44 	movi	r2,45
    cfdc:	d8801345 	stb	r2,77(sp)
    cfe0:	03400b44 	movi	r13,45
    cfe4:	003fea06 	br	cf90 <___vfprintf_internal_r+0x1f84>
    cfe8:	d8c00617 	ldw	r3,24(sp)
    cfec:	1a000017 	ldw	r8,0(r3)
    cff0:	18c00104 	addi	r3,r3,4
    cff4:	4000010e 	bge	r8,zero,cffc <___vfprintf_internal_r+0x1ff0>
    cff8:	023fffc4 	movi	r8,-1
    cffc:	bf000043 	ldbu	fp,1(r23)
    d000:	d8c00615 	stw	r3,24(sp)
    d004:	102f883a 	mov	r23,r2
    d008:	e2c03fcc 	andi	r11,fp,255
    d00c:	5ac0201c 	xori	r11,r11,128
    d010:	5affe004 	addi	r11,r11,-128
    d014:	00384906 	br	b13c <___vfprintf_internal_r+0x130>
    d018:	00800084 	movi	r2,2
    d01c:	d8801015 	stw	r2,64(sp)
    d020:	003e4e06 	br	c95c <___vfprintf_internal_r+0x1950>

0000d024 <__vfprintf_internal>:
    d024:	00c000b4 	movhi	r3,2
    d028:	2005883a 	mov	r2,r4
    d02c:	19288b17 	ldw	r4,-24020(r3)
    d030:	300f883a 	mov	r7,r6
    d034:	280d883a 	mov	r6,r5
    d038:	100b883a 	mov	r5,r2
    d03c:	000b00c1 	jmpi	b00c <___vfprintf_internal_r>

0000d040 <__sbprintf>:
    d040:	2880030b 	ldhu	r2,12(r5)
    d044:	2b001917 	ldw	r12,100(r5)
    d048:	2ac0038b 	ldhu	r11,14(r5)
    d04c:	2a800717 	ldw	r10,28(r5)
    d050:	2a400917 	ldw	r9,36(r5)
    d054:	defee204 	addi	sp,sp,-1144
    d058:	da001a04 	addi	r8,sp,104
    d05c:	00c10004 	movi	r3,1024
    d060:	dc011a15 	stw	r16,1128(sp)
    d064:	10bfff4c 	andi	r2,r2,65533
    d068:	2821883a 	mov	r16,r5
    d06c:	d80b883a 	mov	r5,sp
    d070:	dc811c15 	stw	r18,1136(sp)
    d074:	dc411b15 	stw	r17,1132(sp)
    d078:	dfc11d15 	stw	ra,1140(sp)
    d07c:	2025883a 	mov	r18,r4
    d080:	d880030d 	sth	r2,12(sp)
    d084:	db001915 	stw	r12,100(sp)
    d088:	dac0038d 	sth	r11,14(sp)
    d08c:	da800715 	stw	r10,28(sp)
    d090:	da400915 	stw	r9,36(sp)
    d094:	da000015 	stw	r8,0(sp)
    d098:	da000415 	stw	r8,16(sp)
    d09c:	d8c00215 	stw	r3,8(sp)
    d0a0:	d8c00515 	stw	r3,20(sp)
    d0a4:	d8000615 	stw	zero,24(sp)
    d0a8:	000b00c0 	call	b00c <___vfprintf_internal_r>
    d0ac:	1023883a 	mov	r17,r2
    d0b0:	10000d0e 	bge	r2,zero,d0e8 <__sbprintf+0xa8>
    d0b4:	d880030b 	ldhu	r2,12(sp)
    d0b8:	1080100c 	andi	r2,r2,64
    d0bc:	10000326 	beq	r2,zero,d0cc <__sbprintf+0x8c>
    d0c0:	8080030b 	ldhu	r2,12(r16)
    d0c4:	10801014 	ori	r2,r2,64
    d0c8:	8080030d 	sth	r2,12(r16)
    d0cc:	8805883a 	mov	r2,r17
    d0d0:	dfc11d17 	ldw	ra,1140(sp)
    d0d4:	dc811c17 	ldw	r18,1136(sp)
    d0d8:	dc411b17 	ldw	r17,1132(sp)
    d0dc:	dc011a17 	ldw	r16,1128(sp)
    d0e0:	dec11e04 	addi	sp,sp,1144
    d0e4:	f800283a 	ret
    d0e8:	d80b883a 	mov	r5,sp
    d0ec:	9009883a 	mov	r4,r18
    d0f0:	000edf40 	call	edf4 <_fflush_r>
    d0f4:	103fef26 	beq	r2,zero,d0b4 <__sbprintf+0x74>
    d0f8:	047fffc4 	movi	r17,-1
    d0fc:	003fed06 	br	d0b4 <__sbprintf+0x74>

0000d100 <__swsetup_r>:
    d100:	008000b4 	movhi	r2,2
    d104:	10a88b17 	ldw	r2,-24020(r2)
    d108:	defffd04 	addi	sp,sp,-12
    d10c:	dc400115 	stw	r17,4(sp)
    d110:	dc000015 	stw	r16,0(sp)
    d114:	dfc00215 	stw	ra,8(sp)
    d118:	2023883a 	mov	r17,r4
    d11c:	2821883a 	mov	r16,r5
    d120:	10000226 	beq	r2,zero,d12c <__swsetup_r+0x2c>
    d124:	10c00e17 	ldw	r3,56(r2)
    d128:	18001f26 	beq	r3,zero,d1a8 <__swsetup_r+0xa8>
    d12c:	8180030b 	ldhu	r6,12(r16)
    d130:	30c0020c 	andi	r3,r6,8
    d134:	3005883a 	mov	r2,r6
    d138:	18002126 	beq	r3,zero,d1c0 <__swsetup_r+0xc0>
    d13c:	80c00417 	ldw	r3,16(r16)
    d140:	18002826 	beq	r3,zero,d1e4 <__swsetup_r+0xe4>
    d144:	1100004c 	andi	r4,r2,1
    d148:	20000b1e 	bne	r4,zero,d178 <__swsetup_r+0x78>
    d14c:	1100008c 	andi	r4,r2,2
    d150:	20002e1e 	bne	r4,zero,d20c <__swsetup_r+0x10c>
    d154:	81000517 	ldw	r4,20(r16)
    d158:	81000215 	stw	r4,8(r16)
    d15c:	18000b26 	beq	r3,zero,d18c <__swsetup_r+0x8c>
    d160:	0005883a 	mov	r2,zero
    d164:	dfc00217 	ldw	ra,8(sp)
    d168:	dc400117 	ldw	r17,4(sp)
    d16c:	dc000017 	ldw	r16,0(sp)
    d170:	dec00304 	addi	sp,sp,12
    d174:	f800283a 	ret
    d178:	81000517 	ldw	r4,20(r16)
    d17c:	80000215 	stw	zero,8(r16)
    d180:	0109c83a 	sub	r4,zero,r4
    d184:	81000615 	stw	r4,24(r16)
    d188:	183ff51e 	bne	r3,zero,d160 <__swsetup_r+0x60>
    d18c:	10c0200c 	andi	r3,r2,128
    d190:	0005883a 	mov	r2,zero
    d194:	183ff326 	beq	r3,zero,d164 <__swsetup_r+0x64>
    d198:	31801014 	ori	r6,r6,64
    d19c:	8180030d 	sth	r6,12(r16)
    d1a0:	00bfffc4 	movi	r2,-1
    d1a4:	003fef06 	br	d164 <__swsetup_r+0x64>
    d1a8:	1009883a 	mov	r4,r2
    d1ac:	000f23c0 	call	f23c <__sinit>
    d1b0:	8180030b 	ldhu	r6,12(r16)
    d1b4:	30c0020c 	andi	r3,r6,8
    d1b8:	3005883a 	mov	r2,r6
    d1bc:	183fdf1e 	bne	r3,zero,d13c <__swsetup_r+0x3c>
    d1c0:	3080040c 	andi	r2,r6,16
    d1c4:	10002126 	beq	r2,zero,d24c <__swsetup_r+0x14c>
    d1c8:	3080010c 	andi	r2,r6,4
    d1cc:	1000111e 	bne	r2,zero,d214 <__swsetup_r+0x114>
    d1d0:	80c00417 	ldw	r3,16(r16)
    d1d4:	30800214 	ori	r2,r6,8
    d1d8:	8080030d 	sth	r2,12(r16)
    d1dc:	100d883a 	mov	r6,r2
    d1e0:	183fd81e 	bne	r3,zero,d144 <__swsetup_r+0x44>
    d1e4:	1100a00c 	andi	r4,r2,640
    d1e8:	21008020 	cmpeqi	r4,r4,512
    d1ec:	203fd51e 	bne	r4,zero,d144 <__swsetup_r+0x44>
    d1f0:	800b883a 	mov	r5,r16
    d1f4:	8809883a 	mov	r4,r17
    d1f8:	000fc900 	call	fc90 <__smakebuf_r>
    d1fc:	8180030b 	ldhu	r6,12(r16)
    d200:	80c00417 	ldw	r3,16(r16)
    d204:	3005883a 	mov	r2,r6
    d208:	003fce06 	br	d144 <__swsetup_r+0x44>
    d20c:	0009883a 	mov	r4,zero
    d210:	003fd106 	br	d158 <__swsetup_r+0x58>
    d214:	81400c17 	ldw	r5,48(r16)
    d218:	28000626 	beq	r5,zero,d234 <__swsetup_r+0x134>
    d21c:	80801004 	addi	r2,r16,64
    d220:	28800326 	beq	r5,r2,d230 <__swsetup_r+0x130>
    d224:	8809883a 	mov	r4,r17
    d228:	000f3a00 	call	f3a0 <_free_r>
    d22c:	8180030b 	ldhu	r6,12(r16)
    d230:	80000c15 	stw	zero,48(r16)
    d234:	80c00417 	ldw	r3,16(r16)
    d238:	00bff6c4 	movi	r2,-37
    d23c:	118c703a 	and	r6,r2,r6
    d240:	80000115 	stw	zero,4(r16)
    d244:	80c00015 	stw	r3,0(r16)
    d248:	003fe206 	br	d1d4 <__swsetup_r+0xd4>
    d24c:	00800244 	movi	r2,9
    d250:	88800015 	stw	r2,0(r17)
    d254:	31801014 	ori	r6,r6,64
    d258:	8180030d 	sth	r6,12(r16)
    d25c:	00bfffc4 	movi	r2,-1
    d260:	003fc006 	br	d164 <__swsetup_r+0x64>

0000d264 <quorem>:
    d264:	defff204 	addi	sp,sp,-56
    d268:	dc400515 	stw	r17,20(sp)
    d26c:	20800417 	ldw	r2,16(r4)
    d270:	2c400417 	ldw	r17,16(r5)
    d274:	dfc00d15 	stw	ra,52(sp)
    d278:	df000c15 	stw	fp,48(sp)
    d27c:	ddc00b15 	stw	r23,44(sp)
    d280:	dd800a15 	stw	r22,40(sp)
    d284:	dd400915 	stw	r21,36(sp)
    d288:	dd000815 	stw	r20,32(sp)
    d28c:	dcc00715 	stw	r19,28(sp)
    d290:	dc800615 	stw	r18,24(sp)
    d294:	dc000415 	stw	r16,16(sp)
    d298:	d9000115 	stw	r4,4(sp)
    d29c:	d9400215 	stw	r5,8(sp)
    d2a0:	14407616 	blt	r2,r17,d47c <quorem+0x218>
    d2a4:	8c7fffc4 	addi	r17,r17,-1
    d2a8:	882a90ba 	slli	r21,r17,2
    d2ac:	2f000504 	addi	fp,r5,20
    d2b0:	25800504 	addi	r22,r4,20
    d2b4:	e565883a 	add	r18,fp,r21
    d2b8:	b545883a 	add	r2,r22,r21
    d2bc:	95c00017 	ldw	r23,0(r18)
    d2c0:	15000017 	ldw	r20,0(r2)
    d2c4:	dd800015 	stw	r22,0(sp)
    d2c8:	bdc00044 	addi	r23,r23,1
    d2cc:	b80b883a 	mov	r5,r23
    d2d0:	a009883a 	mov	r4,r20
    d2d4:	d8800315 	stw	r2,12(sp)
    d2d8:	00078f80 	call	78f8 <__udivsi3>
    d2dc:	1021883a 	mov	r16,r2
    d2e0:	a5c02f36 	bltu	r20,r23,d3a0 <quorem+0x13c>
    d2e4:	e029883a 	mov	r20,fp
    d2e8:	002b883a 	mov	r21,zero
    d2ec:	002f883a 	mov	r23,zero
    d2f0:	a4c00017 	ldw	r19,0(r20)
    d2f4:	800b883a 	mov	r5,r16
    d2f8:	b5800104 	addi	r22,r22,4
    d2fc:	993fffcc 	andi	r4,r19,65535
    d300:	00079b80 	call	79b8 <__mulsi3>
    d304:	9808d43a 	srli	r4,r19,16
    d308:	800b883a 	mov	r5,r16
    d30c:	156b883a 	add	r21,r2,r21
    d310:	00079b80 	call	79b8 <__mulsi3>
    d314:	b0ffff17 	ldw	r3,-4(r22)
    d318:	a80ad43a 	srli	r5,r21,16
    d31c:	a93fffcc 	andi	r4,r21,65535
    d320:	19bfffcc 	andi	r6,r3,65535
    d324:	b909c83a 	sub	r4,r23,r4
    d328:	2189883a 	add	r4,r4,r6
    d32c:	1806d43a 	srli	r3,r3,16
    d330:	1145883a 	add	r2,r2,r5
    d334:	200bd43a 	srai	r5,r4,16
    d338:	11bfffcc 	andi	r6,r2,65535
    d33c:	1987c83a 	sub	r3,r3,r6
    d340:	1947883a 	add	r3,r3,r5
    d344:	180a943a 	slli	r5,r3,16
    d348:	213fffcc 	andi	r4,r4,65535
    d34c:	a5000104 	addi	r20,r20,4
    d350:	2908b03a 	or	r4,r5,r4
    d354:	b13fff15 	stw	r4,-4(r22)
    d358:	102ad43a 	srli	r21,r2,16
    d35c:	182fd43a 	srai	r23,r3,16
    d360:	953fe32e 	bgeu	r18,r20,d2f0 <quorem+0x8c>
    d364:	d8c00317 	ldw	r3,12(sp)
    d368:	18800017 	ldw	r2,0(r3)
    d36c:	10000c1e 	bne	r2,zero,d3a0 <quorem+0x13c>
    d370:	d8800017 	ldw	r2,0(sp)
    d374:	1d7fff04 	addi	r21,r3,-4
    d378:	15400436 	bltu	r2,r21,d38c <quorem+0x128>
    d37c:	00000606 	br	d398 <quorem+0x134>
    d380:	d8800017 	ldw	r2,0(sp)
    d384:	8c7fffc4 	addi	r17,r17,-1
    d388:	1540032e 	bgeu	r2,r21,d398 <quorem+0x134>
    d38c:	a8800017 	ldw	r2,0(r21)
    d390:	ad7fff04 	addi	r21,r21,-4
    d394:	103ffa26 	beq	r2,zero,d380 <quorem+0x11c>
    d398:	d8800117 	ldw	r2,4(sp)
    d39c:	14400415 	stw	r17,16(r2)
    d3a0:	d9400217 	ldw	r5,8(sp)
    d3a4:	d9000117 	ldw	r4,4(sp)
    d3a8:	0010c780 	call	10c78 <__mcmp>
    d3ac:	10002616 	blt	r2,zero,d448 <quorem+0x1e4>
    d3b0:	d9400017 	ldw	r5,0(sp)
    d3b4:	84000044 	addi	r16,r16,1
    d3b8:	0007883a 	mov	r3,zero
    d3bc:	e1000017 	ldw	r4,0(fp)
    d3c0:	29800017 	ldw	r6,0(r5)
    d3c4:	29400104 	addi	r5,r5,4
    d3c8:	20bfffcc 	andi	r2,r4,65535
    d3cc:	1887c83a 	sub	r3,r3,r2
    d3d0:	30bfffcc 	andi	r2,r6,65535
    d3d4:	1885883a 	add	r2,r3,r2
    d3d8:	2008d43a 	srli	r4,r4,16
    d3dc:	3006d43a 	srli	r3,r6,16
    d3e0:	100fd43a 	srai	r7,r2,16
    d3e4:	11bfffcc 	andi	r6,r2,65535
    d3e8:	1907c83a 	sub	r3,r3,r4
    d3ec:	19c7883a 	add	r3,r3,r7
    d3f0:	1804943a 	slli	r2,r3,16
    d3f4:	e7000104 	addi	fp,fp,4
    d3f8:	1807d43a 	srai	r3,r3,16
    d3fc:	1184b03a 	or	r2,r2,r6
    d400:	28bfff15 	stw	r2,-4(r5)
    d404:	973fed2e 	bgeu	r18,fp,d3bc <quorem+0x158>
    d408:	880490ba 	slli	r2,r17,2
    d40c:	d9000017 	ldw	r4,0(sp)
    d410:	2085883a 	add	r2,r4,r2
    d414:	10c00017 	ldw	r3,0(r2)
    d418:	18000b1e 	bne	r3,zero,d448 <quorem+0x1e4>
    d41c:	10bfff04 	addi	r2,r2,-4
    d420:	20800436 	bltu	r4,r2,d434 <quorem+0x1d0>
    d424:	00000606 	br	d440 <quorem+0x1dc>
    d428:	d8c00017 	ldw	r3,0(sp)
    d42c:	8c7fffc4 	addi	r17,r17,-1
    d430:	1880032e 	bgeu	r3,r2,d440 <quorem+0x1dc>
    d434:	10c00017 	ldw	r3,0(r2)
    d438:	10bfff04 	addi	r2,r2,-4
    d43c:	183ffa26 	beq	r3,zero,d428 <quorem+0x1c4>
    d440:	d8800117 	ldw	r2,4(sp)
    d444:	14400415 	stw	r17,16(r2)
    d448:	8005883a 	mov	r2,r16
    d44c:	dfc00d17 	ldw	ra,52(sp)
    d450:	df000c17 	ldw	fp,48(sp)
    d454:	ddc00b17 	ldw	r23,44(sp)
    d458:	dd800a17 	ldw	r22,40(sp)
    d45c:	dd400917 	ldw	r21,36(sp)
    d460:	dd000817 	ldw	r20,32(sp)
    d464:	dcc00717 	ldw	r19,28(sp)
    d468:	dc800617 	ldw	r18,24(sp)
    d46c:	dc400517 	ldw	r17,20(sp)
    d470:	dc000417 	ldw	r16,16(sp)
    d474:	dec00e04 	addi	sp,sp,56
    d478:	f800283a 	ret
    d47c:	0005883a 	mov	r2,zero
    d480:	003ff206 	br	d44c <quorem+0x1e8>

0000d484 <_dtoa_r>:
    d484:	20801017 	ldw	r2,64(r4)
    d488:	deffe304 	addi	sp,sp,-116
    d48c:	df001b15 	stw	fp,108(sp)
    d490:	dcc01615 	stw	r19,88(sp)
    d494:	dc801515 	stw	r18,84(sp)
    d498:	dc401415 	stw	r17,80(sp)
    d49c:	dc001315 	stw	r16,76(sp)
    d4a0:	dfc01c15 	stw	ra,112(sp)
    d4a4:	ddc01a15 	stw	r23,104(sp)
    d4a8:	dd801915 	stw	r22,100(sp)
    d4ac:	dd401815 	stw	r21,96(sp)
    d4b0:	dd001715 	stw	r20,92(sp)
    d4b4:	d9c00215 	stw	r7,8(sp)
    d4b8:	dc001f17 	ldw	r16,124(sp)
    d4bc:	2039883a 	mov	fp,r4
    d4c0:	3025883a 	mov	r18,r6
    d4c4:	2827883a 	mov	r19,r5
    d4c8:	3023883a 	mov	r17,r6
    d4cc:	10000826 	beq	r2,zero,d4f0 <_dtoa_r+0x6c>
    d4d0:	21801117 	ldw	r6,68(r4)
    d4d4:	00c00044 	movi	r3,1
    d4d8:	100b883a 	mov	r5,r2
    d4dc:	1986983a 	sll	r3,r3,r6
    d4e0:	11800115 	stw	r6,4(r2)
    d4e4:	10c00215 	stw	r3,8(r2)
    d4e8:	00102680 	call	10268 <_Bfree>
    d4ec:	e0001015 	stw	zero,64(fp)
    d4f0:	90018916 	blt	r18,zero,db18 <_dtoa_r+0x694>
    d4f4:	80000015 	stw	zero,0(r16)
    d4f8:	909ffc2c 	andhi	r2,r18,32752
    d4fc:	00dffc34 	movhi	r3,32752
    d500:	10c18e26 	beq	r2,r3,db3c <_dtoa_r+0x6b8>
    d504:	000d883a 	mov	r6,zero
    d508:	000f883a 	mov	r7,zero
    d50c:	9809883a 	mov	r4,r19
    d510:	880b883a 	mov	r5,r17
    d514:	0008d780 	call	8d78 <__eqdf2>
    d518:	1000191e 	bne	r2,zero,d580 <_dtoa_r+0xfc>
    d51c:	d8c01e17 	ldw	r3,120(sp)
    d520:	00800044 	movi	r2,1
    d524:	18800015 	stw	r2,0(r3)
    d528:	d8802017 	ldw	r2,128(sp)
    d52c:	1002ff26 	beq	r2,zero,e12c <_dtoa_r+0xca8>
    d530:	d9002017 	ldw	r4,128(sp)
    d534:	008000b4 	movhi	r2,2
    d538:	10a01c44 	addi	r2,r2,-32655
    d53c:	00c000b4 	movhi	r3,2
    d540:	20800015 	stw	r2,0(r4)
    d544:	18a01c04 	addi	r2,r3,-32656
    d548:	d8800115 	stw	r2,4(sp)
    d54c:	d8800117 	ldw	r2,4(sp)
    d550:	dfc01c17 	ldw	ra,112(sp)
    d554:	df001b17 	ldw	fp,108(sp)
    d558:	ddc01a17 	ldw	r23,104(sp)
    d55c:	dd801917 	ldw	r22,100(sp)
    d560:	dd401817 	ldw	r21,96(sp)
    d564:	dd001717 	ldw	r20,92(sp)
    d568:	dcc01617 	ldw	r19,88(sp)
    d56c:	dc801517 	ldw	r18,84(sp)
    d570:	dc401417 	ldw	r17,80(sp)
    d574:	dc001317 	ldw	r16,76(sp)
    d578:	dec01d04 	addi	sp,sp,116
    d57c:	f800283a 	ret
    d580:	d8801104 	addi	r2,sp,68
    d584:	9020d53a 	srli	r16,r18,20
    d588:	d8800015 	stw	r2,0(sp)
    d58c:	d9c01204 	addi	r7,sp,72
    d590:	980b883a 	mov	r5,r19
    d594:	880d883a 	mov	r6,r17
    d598:	e009883a 	mov	r4,fp
    d59c:	00110600 	call	11060 <__d2b>
    d5a0:	102f883a 	mov	r23,r2
    d5a4:	8001781e 	bne	r16,zero,db88 <_dtoa_r+0x704>
    d5a8:	dd001117 	ldw	r20,68(sp)
    d5ac:	dc001217 	ldw	r16,72(sp)
    d5b0:	a421883a 	add	r16,r20,r16
    d5b4:	80810c84 	addi	r2,r16,1074
    d5b8:	10c00850 	cmplti	r3,r2,33
    d5bc:	1802eb1e 	bne	r3,zero,e16c <_dtoa_r+0xce8>
    d5c0:	01001004 	movi	r4,64
    d5c4:	2085c83a 	sub	r2,r4,r2
    d5c8:	81010484 	addi	r4,r16,1042
    d5cc:	90a4983a 	sll	r18,r18,r2
    d5d0:	9908d83a 	srl	r4,r19,r4
    d5d4:	9108b03a 	or	r4,r18,r4
    d5d8:	0014c540 	call	14c54 <__floatunsidf>
    d5dc:	1009883a 	mov	r4,r2
    d5e0:	017f8434 	movhi	r5,65040
    d5e4:	00800044 	movi	r2,1
    d5e8:	194b883a 	add	r5,r3,r5
    d5ec:	843fffc4 	addi	r16,r16,-1
    d5f0:	d8800915 	stw	r2,36(sp)
    d5f4:	000d883a 	mov	r6,zero
    d5f8:	01cffe34 	movhi	r7,16376
    d5fc:	00097740 	call	9774 <__subdf3>
    d600:	0198dbf4 	movhi	r6,25455
    d604:	01cff4f4 	movhi	r7,16339
    d608:	3190d844 	addi	r6,r6,17249
    d60c:	39e1e9c4 	addi	r7,r7,-30809
    d610:	1009883a 	mov	r4,r2
    d614:	180b883a 	mov	r5,r3
    d618:	0008fc80 	call	8fc8 <__muldf3>
    d61c:	01a2d874 	movhi	r6,35681
    d620:	01cff1f4 	movhi	r7,16327
    d624:	31b22cc4 	addi	r6,r6,-14157
    d628:	39e28a04 	addi	r7,r7,-30168
    d62c:	180b883a 	mov	r5,r3
    d630:	1009883a 	mov	r4,r2
    d634:	0007b740 	call	7b74 <__adddf3>
    d638:	8009883a 	mov	r4,r16
    d63c:	102b883a 	mov	r21,r2
    d640:	1825883a 	mov	r18,r3
    d644:	000a1540 	call	a154 <__floatsidf>
    d648:	019427f4 	movhi	r6,20639
    d64c:	01cff4f4 	movhi	r7,16339
    d650:	319e7ec4 	addi	r6,r6,31227
    d654:	39d104c4 	addi	r7,r7,17427
    d658:	1009883a 	mov	r4,r2
    d65c:	180b883a 	mov	r5,r3
    d660:	0008fc80 	call	8fc8 <__muldf3>
    d664:	100d883a 	mov	r6,r2
    d668:	180f883a 	mov	r7,r3
    d66c:	a809883a 	mov	r4,r21
    d670:	900b883a 	mov	r5,r18
    d674:	0007b740 	call	7b74 <__adddf3>
    d678:	1009883a 	mov	r4,r2
    d67c:	180b883a 	mov	r5,r3
    d680:	1025883a 	mov	r18,r2
    d684:	182d883a 	mov	r22,r3
    d688:	000a0d40 	call	a0d4 <__fixdfsi>
    d68c:	000d883a 	mov	r6,zero
    d690:	000f883a 	mov	r7,zero
    d694:	9009883a 	mov	r4,r18
    d698:	b00b883a 	mov	r5,r22
    d69c:	102b883a 	mov	r21,r2
    d6a0:	0008ee00 	call	8ee0 <__ledf2>
    d6a4:	10029716 	blt	r2,zero,e104 <_dtoa_r+0xc80>
    d6a8:	a421c83a 	sub	r16,r20,r16
    d6ac:	a88005e8 	cmpgeui	r2,r21,23
    d6b0:	85bfffc4 	addi	r22,r16,-1
    d6b4:	10028b1e 	bne	r2,zero,e0e4 <_dtoa_r+0xc60>
    d6b8:	a80690fa 	slli	r3,r21,3
    d6bc:	008000b4 	movhi	r2,2
    d6c0:	10a06504 	addi	r2,r2,-32364
    d6c4:	10c5883a 	add	r2,r2,r3
    d6c8:	11800017 	ldw	r6,0(r2)
    d6cc:	11c00117 	ldw	r7,4(r2)
    d6d0:	9809883a 	mov	r4,r19
    d6d4:	880b883a 	mov	r5,r17
    d6d8:	0008ee00 	call	8ee0 <__ledf2>
    d6dc:	10025f0e 	bge	r2,zero,e05c <_dtoa_r+0xbd8>
    d6e0:	d8000815 	stw	zero,32(sp)
    d6e4:	ad7fffc4 	addi	r21,r21,-1
    d6e8:	b0028116 	blt	r22,zero,e0f0 <_dtoa_r+0xc6c>
    d6ec:	d8000415 	stw	zero,16(sp)
    d6f0:	a8025d0e 	bge	r21,zero,e068 <_dtoa_r+0xbe4>
    d6f4:	d8800417 	ldw	r2,16(sp)
    d6f8:	d8c00217 	ldw	r3,8(sp)
    d6fc:	dd400615 	stw	r21,24(sp)
    d700:	1545c83a 	sub	r2,r2,r21
    d704:	d8800415 	stw	r2,16(sp)
    d708:	0545c83a 	sub	r2,zero,r21
    d70c:	d8800715 	stw	r2,28(sp)
    d710:	188002a8 	cmpgeui	r2,r3,10
    d714:	002b883a 	mov	r21,zero
    d718:	1002591e 	bne	r2,zero,e080 <_dtoa_r+0xbfc>
    d71c:	18800190 	cmplti	r2,r3,6
    d720:	1002961e 	bne	r2,zero,e17c <_dtoa_r+0xcf8>
    d724:	18bfff04 	addi	r2,r3,-4
    d728:	d8800215 	stw	r2,8(sp)
    d72c:	0021883a 	mov	r16,zero
    d730:	d8c00217 	ldw	r3,8(sp)
    d734:	18800120 	cmpeqi	r2,r3,4
    d738:	10036d1e 	bne	r2,zero,e4f0 <_dtoa_r+0x106c>
    d73c:	18800160 	cmpeqi	r2,r3,5
    d740:	1003291e 	bne	r2,zero,e3e8 <_dtoa_r+0xf64>
    d744:	188000a0 	cmpeqi	r2,r3,2
    d748:	10025926 	beq	r2,zero,e0b0 <_dtoa_r+0xc2c>
    d74c:	d8000515 	stw	zero,20(sp)
    d750:	d8801d17 	ldw	r2,116(sp)
    d754:	0083340e 	bge	zero,r2,e428 <_dtoa_r+0xfa4>
    d758:	d8800b15 	stw	r2,44(sp)
    d75c:	d8800315 	stw	r2,12(sp)
    d760:	100d883a 	mov	r6,r2
    d764:	e0001115 	stw	zero,68(fp)
    d768:	30800610 	cmplti	r2,r6,24
    d76c:	1004f61e 	bne	r2,zero,eb48 <_dtoa_r+0x16c4>
    d770:	00c00044 	movi	r3,1
    d774:	00800104 	movi	r2,4
    d778:	1085883a 	add	r2,r2,r2
    d77c:	11000504 	addi	r4,r2,20
    d780:	180b883a 	mov	r5,r3
    d784:	18c00044 	addi	r3,r3,1
    d788:	313ffb2e 	bgeu	r6,r4,d778 <_dtoa_r+0x2f4>
    d78c:	e1401115 	stw	r5,68(fp)
    d790:	e009883a 	mov	r4,fp
    d794:	00101c40 	call	101c4 <_Balloc>
    d798:	d8800115 	stw	r2,4(sp)
    d79c:	1004e326 	beq	r2,zero,eb2c <_dtoa_r+0x16a8>
    d7a0:	d8800117 	ldw	r2,4(sp)
    d7a4:	e0801015 	stw	r2,64(fp)
    d7a8:	d8800317 	ldw	r2,12(sp)
    d7ac:	108003e8 	cmpgeui	r2,r2,15
    d7b0:	1001091e 	bne	r2,zero,dbd8 <_dtoa_r+0x754>
    d7b4:	80010826 	beq	r16,zero,dbd8 <_dtoa_r+0x754>
    d7b8:	d9000617 	ldw	r4,24(sp)
    d7bc:	0103970e 	bge	zero,r4,e61c <_dtoa_r+0x1198>
    d7c0:	208003cc 	andi	r2,r4,15
    d7c4:	100690fa 	slli	r3,r2,3
    d7c8:	2029d13a 	srai	r20,r4,4
    d7cc:	008000b4 	movhi	r2,2
    d7d0:	10a06504 	addi	r2,r2,-32364
    d7d4:	10c5883a 	add	r2,r2,r3
    d7d8:	a0c0040c 	andi	r3,r20,16
    d7dc:	12800017 	ldw	r10,0(r2)
    d7e0:	12400117 	ldw	r9,4(r2)
    d7e4:	18033c26 	beq	r3,zero,e4d8 <_dtoa_r+0x1054>
    d7e8:	008000b4 	movhi	r2,2
    d7ec:	10a05b04 	addi	r2,r2,-32404
    d7f0:	11800817 	ldw	r6,32(r2)
    d7f4:	11c00917 	ldw	r7,36(r2)
    d7f8:	9809883a 	mov	r4,r19
    d7fc:	880b883a 	mov	r5,r17
    d800:	da400e15 	stw	r9,56(sp)
    d804:	da800d15 	stw	r10,52(sp)
    d808:	00084640 	call	8464 <__divdf3>
    d80c:	da800d17 	ldw	r10,52(sp)
    d810:	da400e17 	ldw	r9,56(sp)
    d814:	a50003cc 	andi	r20,r20,15
    d818:	d8800a15 	stw	r2,40(sp)
    d81c:	d8c00c15 	stw	r3,48(sp)
    d820:	040000c4 	movi	r16,3
    d824:	a0001126 	beq	r20,zero,d86c <_dtoa_r+0x3e8>
    d828:	048000b4 	movhi	r18,2
    d82c:	94a05b04 	addi	r18,r18,-32404
    d830:	5009883a 	mov	r4,r10
    d834:	480b883a 	mov	r5,r9
    d838:	a180004c 	andi	r6,r20,1
    d83c:	30000626 	beq	r6,zero,d858 <_dtoa_r+0x3d4>
    d840:	91800017 	ldw	r6,0(r18)
    d844:	91c00117 	ldw	r7,4(r18)
    d848:	84000044 	addi	r16,r16,1
    d84c:	0008fc80 	call	8fc8 <__muldf3>
    d850:	1009883a 	mov	r4,r2
    d854:	180b883a 	mov	r5,r3
    d858:	a029d07a 	srai	r20,r20,1
    d85c:	94800204 	addi	r18,r18,8
    d860:	a03ff51e 	bne	r20,zero,d838 <_dtoa_r+0x3b4>
    d864:	2015883a 	mov	r10,r4
    d868:	2813883a 	mov	r9,r5
    d86c:	d9000a17 	ldw	r4,40(sp)
    d870:	d9400c17 	ldw	r5,48(sp)
    d874:	500d883a 	mov	r6,r10
    d878:	480f883a 	mov	r7,r9
    d87c:	00084640 	call	8464 <__divdf3>
    d880:	d8800a15 	stw	r2,40(sp)
    d884:	1825883a 	mov	r18,r3
    d888:	d8800817 	ldw	r2,32(sp)
    d88c:	10000726 	beq	r2,zero,d8ac <_dtoa_r+0x428>
    d890:	dd000a17 	ldw	r20,40(sp)
    d894:	000d883a 	mov	r6,zero
    d898:	01cffc34 	movhi	r7,16368
    d89c:	a009883a 	mov	r4,r20
    d8a0:	900b883a 	mov	r5,r18
    d8a4:	0008ee00 	call	8ee0 <__ledf2>
    d8a8:	10044516 	blt	r2,zero,e9c0 <_dtoa_r+0x153c>
    d8ac:	8009883a 	mov	r4,r16
    d8b0:	000a1540 	call	a154 <__floatsidf>
    d8b4:	d9800a17 	ldw	r6,40(sp)
    d8b8:	900f883a 	mov	r7,r18
    d8bc:	1009883a 	mov	r4,r2
    d8c0:	180b883a 	mov	r5,r3
    d8c4:	0008fc80 	call	8fc8 <__muldf3>
    d8c8:	000d883a 	mov	r6,zero
    d8cc:	01d00734 	movhi	r7,16412
    d8d0:	1009883a 	mov	r4,r2
    d8d4:	180b883a 	mov	r5,r3
    d8d8:	0007b740 	call	7b74 <__adddf3>
    d8dc:	1029883a 	mov	r20,r2
    d8e0:	00bf3034 	movhi	r2,64704
    d8e4:	1885883a 	add	r2,r3,r2
    d8e8:	d8800c15 	stw	r2,48(sp)
    d8ec:	d8800317 	ldw	r2,12(sp)
    d8f0:	10032d26 	beq	r2,zero,e5a8 <_dtoa_r+0x1124>
    d8f4:	d8800617 	ldw	r2,24(sp)
    d8f8:	d8801015 	stw	r2,64(sp)
    d8fc:	d8800317 	ldw	r2,12(sp)
    d900:	d8800d15 	stw	r2,52(sp)
    d904:	d8800d17 	ldw	r2,52(sp)
    d908:	dc000a17 	ldw	r16,40(sp)
    d90c:	900b883a 	mov	r5,r18
    d910:	10bfffc4 	addi	r2,r2,-1
    d914:	100690fa 	slli	r3,r2,3
    d918:	008000b4 	movhi	r2,2
    d91c:	10a06504 	addi	r2,r2,-32364
    d920:	10c5883a 	add	r2,r2,r3
    d924:	12c00017 	ldw	r11,0(r2)
    d928:	13000117 	ldw	r12,4(r2)
    d92c:	8009883a 	mov	r4,r16
    d930:	dac00e15 	stw	r11,56(sp)
    d934:	db000a15 	stw	r12,40(sp)
    d938:	000a0d40 	call	a0d4 <__fixdfsi>
    d93c:	1009883a 	mov	r4,r2
    d940:	10800c04 	addi	r2,r2,48
    d944:	d8800f15 	stw	r2,60(sp)
    d948:	000a1540 	call	a154 <__floatsidf>
    d94c:	8009883a 	mov	r4,r16
    d950:	100d883a 	mov	r6,r2
    d954:	180f883a 	mov	r7,r3
    d958:	900b883a 	mov	r5,r18
    d95c:	00097740 	call	9774 <__subdf3>
    d960:	d9000117 	ldw	r4,4(sp)
    d964:	dac00e17 	ldw	r11,56(sp)
    d968:	db000a17 	ldw	r12,40(sp)
    d96c:	1825883a 	mov	r18,r3
    d970:	d8c00517 	ldw	r3,20(sp)
    d974:	22000044 	addi	r8,r4,1
    d978:	da000e15 	stw	r8,56(sp)
    d97c:	1021883a 	mov	r16,r2
    d980:	580d883a 	mov	r6,r11
    d984:	600f883a 	mov	r7,r12
    d988:	1803b226 	beq	r3,zero,e854 <_dtoa_r+0x13d0>
    d98c:	0009883a 	mov	r4,zero
    d990:	014ff834 	movhi	r5,16352
    d994:	00084640 	call	8464 <__divdf3>
    d998:	d9c00c17 	ldw	r7,48(sp)
    d99c:	a00d883a 	mov	r6,r20
    d9a0:	1009883a 	mov	r4,r2
    d9a4:	180b883a 	mov	r5,r3
    d9a8:	00097740 	call	9774 <__subdf3>
    d9ac:	d9000117 	ldw	r4,4(sp)
    d9b0:	1029883a 	mov	r20,r2
    d9b4:	d8800f17 	ldw	r2,60(sp)
    d9b8:	800d883a 	mov	r6,r16
    d9bc:	900f883a 	mov	r7,r18
    d9c0:	20800005 	stb	r2,0(r4)
    d9c4:	180b883a 	mov	r5,r3
    d9c8:	a009883a 	mov	r4,r20
    d9cc:	d8c00a15 	stw	r3,40(sp)
    d9d0:	0008df80 	call	8df8 <__gedf2>
    d9d4:	da000e17 	ldw	r8,56(sp)
    d9d8:	0083e516 	blt	zero,r2,e970 <_dtoa_r+0x14ec>
    d9dc:	0005883a 	mov	r2,zero
    d9e0:	dd400e15 	stw	r21,56(sp)
    d9e4:	dd800f15 	stw	r22,60(sp)
    d9e8:	ddc00c15 	stw	r23,48(sp)
    d9ec:	dd800d17 	ldw	r22,52(sp)
    d9f0:	402b883a 	mov	r21,r8
    d9f4:	dc400d15 	stw	r17,52(sp)
    d9f8:	dc400a17 	ldw	r17,40(sp)
    d9fc:	dcc00a15 	stw	r19,40(sp)
    da00:	1027883a 	mov	r19,r2
    da04:	00002606 	br	daa0 <_dtoa_r+0x61c>
    da08:	9cc00044 	addi	r19,r19,1
    da0c:	9d806d0e 	bge	r19,r22,dbc4 <_dtoa_r+0x740>
    da10:	a009883a 	mov	r4,r20
    da14:	880b883a 	mov	r5,r17
    da18:	000d883a 	mov	r6,zero
    da1c:	01d00934 	movhi	r7,16420
    da20:	0008fc80 	call	8fc8 <__muldf3>
    da24:	000d883a 	mov	r6,zero
    da28:	01d00934 	movhi	r7,16420
    da2c:	8009883a 	mov	r4,r16
    da30:	900b883a 	mov	r5,r18
    da34:	1029883a 	mov	r20,r2
    da38:	1823883a 	mov	r17,r3
    da3c:	0008fc80 	call	8fc8 <__muldf3>
    da40:	180b883a 	mov	r5,r3
    da44:	1009883a 	mov	r4,r2
    da48:	1821883a 	mov	r16,r3
    da4c:	1025883a 	mov	r18,r2
    da50:	000a0d40 	call	a0d4 <__fixdfsi>
    da54:	1009883a 	mov	r4,r2
    da58:	102f883a 	mov	r23,r2
    da5c:	000a1540 	call	a154 <__floatsidf>
    da60:	9009883a 	mov	r4,r18
    da64:	800b883a 	mov	r5,r16
    da68:	100d883a 	mov	r6,r2
    da6c:	180f883a 	mov	r7,r3
    da70:	00097740 	call	9774 <__subdf3>
    da74:	ad400044 	addi	r21,r21,1
    da78:	ba000c04 	addi	r8,r23,48
    da7c:	aa3fffc5 	stb	r8,-1(r21)
    da80:	a00d883a 	mov	r6,r20
    da84:	880f883a 	mov	r7,r17
    da88:	1009883a 	mov	r4,r2
    da8c:	180b883a 	mov	r5,r3
    da90:	1021883a 	mov	r16,r2
    da94:	1825883a 	mov	r18,r3
    da98:	0008ee00 	call	8ee0 <__ledf2>
    da9c:	10040516 	blt	r2,zero,eab4 <_dtoa_r+0x1630>
    daa0:	800d883a 	mov	r6,r16
    daa4:	900f883a 	mov	r7,r18
    daa8:	0009883a 	mov	r4,zero
    daac:	014ffc34 	movhi	r5,16368
    dab0:	00097740 	call	9774 <__subdf3>
    dab4:	a00d883a 	mov	r6,r20
    dab8:	880f883a 	mov	r7,r17
    dabc:	1009883a 	mov	r4,r2
    dac0:	180b883a 	mov	r5,r3
    dac4:	0008ee00 	call	8ee0 <__ledf2>
    dac8:	103fcf0e 	bge	r2,zero,da08 <_dtoa_r+0x584>
    dacc:	d8801017 	ldw	r2,64(sp)
    dad0:	ddc00c17 	ldw	r23,48(sp)
    dad4:	d9000117 	ldw	r4,4(sp)
    dad8:	a829883a 	mov	r20,r21
    dadc:	14c00044 	addi	r19,r2,1
    dae0:	00000106 	br	dae8 <_dtoa_r+0x664>
    dae4:	a103d826 	beq	r20,r4,ea48 <_dtoa_r+0x15c4>
    dae8:	a0ffffc3 	ldbu	r3,-1(r20)
    daec:	a011883a 	mov	r8,r20
    daf0:	a53fffc4 	addi	r20,r20,-1
    daf4:	18803fcc 	andi	r2,r3,255
    daf8:	1080201c 	xori	r2,r2,128
    dafc:	10bfe004 	addi	r2,r2,-128
    db00:	10800e60 	cmpeqi	r2,r2,57
    db04:	103ff71e 	bne	r2,zero,dae4 <_dtoa_r+0x660>
    db08:	18c00044 	addi	r3,r3,1
    db0c:	a0c00005 	stb	r3,0(r20)
    db10:	dcc00215 	stw	r19,8(sp)
    db14:	00014406 	br	e028 <_dtoa_r+0xba4>
    db18:	04600034 	movhi	r17,32768
    db1c:	8c7fffc4 	addi	r17,r17,-1
    db20:	9462703a 	and	r17,r18,r17
    db24:	00800044 	movi	r2,1
    db28:	8825883a 	mov	r18,r17
    db2c:	80800015 	stw	r2,0(r16)
    db30:	00dffc34 	movhi	r3,32752
    db34:	909ffc2c 	andhi	r2,r18,32752
    db38:	10fe721e 	bne	r2,r3,d504 <_dtoa_r+0x80>
    db3c:	d9001e17 	ldw	r4,120(sp)
    db40:	00800434 	movhi	r2,16
    db44:	10bfffc4 	addi	r2,r2,-1
    db48:	9084703a 	and	r2,r18,r2
    db4c:	00c9c3c4 	movi	r3,9999
    db50:	20c00015 	stw	r3,0(r4)
    db54:	14e6b03a 	or	r19,r2,r19
    db58:	9800141e 	bne	r19,zero,dbac <_dtoa_r+0x728>
    db5c:	d8802017 	ldw	r2,128(sp)
    db60:	10041126 	beq	r2,zero,eba8 <_dtoa_r+0x1724>
    db64:	008000b4 	movhi	r2,2
    db68:	1007883a 	mov	r3,r2
    db6c:	18e02604 	addi	r3,r3,-32616
    db70:	008000b4 	movhi	r2,2
    db74:	d8c00115 	stw	r3,4(sp)
    db78:	10a02804 	addi	r2,r2,-32608
    db7c:	d8c02017 	ldw	r3,128(sp)
    db80:	18800015 	stw	r2,0(r3)
    db84:	003e7106 	br	d54c <_dtoa_r+0xc8>
    db88:	01400434 	movhi	r5,16
    db8c:	297fffc4 	addi	r5,r5,-1
    db90:	894a703a 	and	r5,r17,r5
    db94:	dd001117 	ldw	r20,68(sp)
    db98:	9809883a 	mov	r4,r19
    db9c:	294ffc34 	orhi	r5,r5,16368
    dba0:	843f0044 	addi	r16,r16,-1023
    dba4:	d8000915 	stw	zero,36(sp)
    dba8:	003e9206 	br	d5f4 <_dtoa_r+0x170>
    dbac:	d8802017 	ldw	r2,128(sp)
    dbb0:	1002061e 	bne	r2,zero,e3cc <_dtoa_r+0xf48>
    dbb4:	008000b4 	movhi	r2,2
    dbb8:	10a02504 	addi	r2,r2,-32620
    dbbc:	d8800115 	stw	r2,4(sp)
    dbc0:	003e6206 	br	d54c <_dtoa_r+0xc8>
    dbc4:	dd400e17 	ldw	r21,56(sp)
    dbc8:	dd800f17 	ldw	r22,60(sp)
    dbcc:	ddc00c17 	ldw	r23,48(sp)
    dbd0:	dc400d17 	ldw	r17,52(sp)
    dbd4:	dcc00a17 	ldw	r19,40(sp)
    dbd8:	d8801217 	ldw	r2,72(sp)
    dbdc:	10006e16 	blt	r2,zero,dd98 <_dtoa_r+0x914>
    dbe0:	d9000617 	ldw	r4,24(sp)
    dbe4:	20c003c8 	cmpgei	r3,r4,15
    dbe8:	18006b1e 	bne	r3,zero,dd98 <_dtoa_r+0x914>
    dbec:	200690fa 	slli	r3,r4,3
    dbf0:	008000b4 	movhi	r2,2
    dbf4:	10a06504 	addi	r2,r2,-32364
    dbf8:	10c5883a 	add	r2,r2,r3
    dbfc:	14000017 	ldw	r16,0(r2)
    dc00:	14800117 	ldw	r18,4(r2)
    dc04:	d8801d17 	ldw	r2,116(sp)
    dc08:	1000150e 	bge	r2,zero,dc60 <_dtoa_r+0x7dc>
    dc0c:	d8800317 	ldw	r2,12(sp)
    dc10:	00801316 	blt	zero,r2,dc60 <_dtoa_r+0x7dc>
    dc14:	d8800317 	ldw	r2,12(sp)
    dc18:	1002771e 	bne	r2,zero,e5f8 <_dtoa_r+0x1174>
    dc1c:	8009883a 	mov	r4,r16
    dc20:	000d883a 	mov	r6,zero
    dc24:	01d00534 	movhi	r7,16404
    dc28:	900b883a 	mov	r5,r18
    dc2c:	0008fc80 	call	8fc8 <__muldf3>
    dc30:	100d883a 	mov	r6,r2
    dc34:	180f883a 	mov	r7,r3
    dc38:	9809883a 	mov	r4,r19
    dc3c:	880b883a 	mov	r5,r17
    dc40:	0008ee00 	call	8ee0 <__ledf2>
    dc44:	0029883a 	mov	r20,zero
    dc48:	0021883a 	mov	r16,zero
    dc4c:	00820916 	blt	zero,r2,e474 <_dtoa_r+0xff0>
    dc50:	d8801d17 	ldw	r2,116(sp)
    dc54:	da000117 	ldw	r8,4(sp)
    dc58:	00a6303a 	nor	r19,zero,r2
    dc5c:	00020b06 	br	e48c <_dtoa_r+0x1008>
    dc60:	800d883a 	mov	r6,r16
    dc64:	900f883a 	mov	r7,r18
    dc68:	9809883a 	mov	r4,r19
    dc6c:	880b883a 	mov	r5,r17
    dc70:	00084640 	call	8464 <__divdf3>
    dc74:	180b883a 	mov	r5,r3
    dc78:	1009883a 	mov	r4,r2
    dc7c:	000a0d40 	call	a0d4 <__fixdfsi>
    dc80:	1009883a 	mov	r4,r2
    dc84:	102b883a 	mov	r21,r2
    dc88:	000a1540 	call	a154 <__floatsidf>
    dc8c:	800d883a 	mov	r6,r16
    dc90:	900f883a 	mov	r7,r18
    dc94:	1009883a 	mov	r4,r2
    dc98:	180b883a 	mov	r5,r3
    dc9c:	0008fc80 	call	8fc8 <__muldf3>
    dca0:	100d883a 	mov	r6,r2
    dca4:	9809883a 	mov	r4,r19
    dca8:	880b883a 	mov	r5,r17
    dcac:	180f883a 	mov	r7,r3
    dcb0:	00097740 	call	9774 <__subdf3>
    dcb4:	d9800117 	ldw	r6,4(sp)
    dcb8:	dd800317 	ldw	r22,12(sp)
    dcbc:	1009883a 	mov	r4,r2
    dcc0:	a8800c04 	addi	r2,r21,48
    dcc4:	30800005 	stb	r2,0(r6)
    dcc8:	b0800060 	cmpeqi	r2,r22,1
    dccc:	180b883a 	mov	r5,r3
    dcd0:	35000044 	addi	r20,r6,1
    dcd4:	10029c1e 	bne	r2,zero,e748 <_dtoa_r+0x12c4>
    dcd8:	04400044 	movi	r17,1
    dcdc:	ddc00215 	stw	r23,8(sp)
    dce0:	00001c06 	br	dd54 <_dtoa_r+0x8d0>
    dce4:	800d883a 	mov	r6,r16
    dce8:	900f883a 	mov	r7,r18
    dcec:	a809883a 	mov	r4,r21
    dcf0:	980b883a 	mov	r5,r19
    dcf4:	00084640 	call	8464 <__divdf3>
    dcf8:	180b883a 	mov	r5,r3
    dcfc:	1009883a 	mov	r4,r2
    dd00:	000a0d40 	call	a0d4 <__fixdfsi>
    dd04:	1009883a 	mov	r4,r2
    dd08:	102f883a 	mov	r23,r2
    dd0c:	000a1540 	call	a154 <__floatsidf>
    dd10:	800d883a 	mov	r6,r16
    dd14:	900f883a 	mov	r7,r18
    dd18:	1009883a 	mov	r4,r2
    dd1c:	180b883a 	mov	r5,r3
    dd20:	0008fc80 	call	8fc8 <__muldf3>
    dd24:	a809883a 	mov	r4,r21
    dd28:	980b883a 	mov	r5,r19
    dd2c:	100d883a 	mov	r6,r2
    dd30:	180f883a 	mov	r7,r3
    dd34:	00097740 	call	9774 <__subdf3>
    dd38:	b9000c04 	addi	r4,r23,48
    dd3c:	a1000005 	stb	r4,0(r20)
    dd40:	8c400044 	addi	r17,r17,1
    dd44:	a5000044 	addi	r20,r20,1
    dd48:	1009883a 	mov	r4,r2
    dd4c:	180b883a 	mov	r5,r3
    dd50:	b4427b26 	beq	r22,r17,e740 <_dtoa_r+0x12bc>
    dd54:	000d883a 	mov	r6,zero
    dd58:	01d00934 	movhi	r7,16420
    dd5c:	0008fc80 	call	8fc8 <__muldf3>
    dd60:	000d883a 	mov	r6,zero
    dd64:	000f883a 	mov	r7,zero
    dd68:	1009883a 	mov	r4,r2
    dd6c:	180b883a 	mov	r5,r3
    dd70:	102b883a 	mov	r21,r2
    dd74:	1827883a 	mov	r19,r3
    dd78:	0008d780 	call	8d78 <__eqdf2>
    dd7c:	103fd91e 	bne	r2,zero,dce4 <_dtoa_r+0x860>
    dd80:	d8800617 	ldw	r2,24(sp)
    dd84:	ddc00217 	ldw	r23,8(sp)
    dd88:	a011883a 	mov	r8,r20
    dd8c:	10800044 	addi	r2,r2,1
    dd90:	d8800215 	stw	r2,8(sp)
    dd94:	0000a406 	br	e028 <_dtoa_r+0xba4>
    dd98:	d8c00517 	ldw	r3,20(sp)
    dd9c:	1800e726 	beq	r3,zero,e13c <_dtoa_r+0xcb8>
    dda0:	d8c00217 	ldw	r3,8(sp)
    dda4:	18c00088 	cmpgei	r3,r3,2
    dda8:	1801e526 	beq	r3,zero,e540 <_dtoa_r+0x10bc>
    ddac:	d8800317 	ldw	r2,12(sp)
    ddb0:	153fffc4 	addi	r20,r2,-1
    ddb4:	d8800717 	ldw	r2,28(sp)
    ddb8:	1501c50e 	bge	r2,r20,e4d0 <_dtoa_r+0x104c>
    ddbc:	d8800717 	ldw	r2,28(sp)
    ddc0:	dd000715 	stw	r20,28(sp)
    ddc4:	a085c83a 	sub	r2,r20,r2
    ddc8:	a8ab883a 	add	r21,r21,r2
    ddcc:	0029883a 	mov	r20,zero
    ddd0:	d8800317 	ldw	r2,12(sp)
    ddd4:	10028b16 	blt	r2,zero,e804 <_dtoa_r+0x1380>
    ddd8:	d8c00417 	ldw	r3,16(sp)
    dddc:	b0ad883a 	add	r22,r22,r2
    dde0:	1885883a 	add	r2,r3,r2
    dde4:	1825883a 	mov	r18,r3
    dde8:	d8800415 	stw	r2,16(sp)
    ddec:	01400044 	movi	r5,1
    ddf0:	e009883a 	mov	r4,fp
    ddf4:	00106340 	call	10634 <__i2b>
    ddf8:	1021883a 	mov	r16,r2
    ddfc:	0480080e 	bge	zero,r18,de20 <_dtoa_r+0x99c>
    de00:	0580070e 	bge	zero,r22,de20 <_dtoa_r+0x99c>
    de04:	9005883a 	mov	r2,r18
    de08:	b481a916 	blt	r22,r18,e4b0 <_dtoa_r+0x102c>
    de0c:	d8c00417 	ldw	r3,16(sp)
    de10:	90a5c83a 	sub	r18,r18,r2
    de14:	b0adc83a 	sub	r22,r22,r2
    de18:	1887c83a 	sub	r3,r3,r2
    de1c:	d8c00415 	stw	r3,16(sp)
    de20:	d8800717 	ldw	r2,28(sp)
    de24:	10001526 	beq	r2,zero,de7c <_dtoa_r+0x9f8>
    de28:	d8800517 	ldw	r2,20(sp)
    de2c:	1001f526 	beq	r2,zero,e604 <_dtoa_r+0x1180>
    de30:	05000f0e 	bge	zero,r20,de70 <_dtoa_r+0x9ec>
    de34:	800b883a 	mov	r5,r16
    de38:	a00d883a 	mov	r6,r20
    de3c:	e009883a 	mov	r4,fp
    de40:	00109a80 	call	109a8 <__pow5mult>
    de44:	b80d883a 	mov	r6,r23
    de48:	100b883a 	mov	r5,r2
    de4c:	e009883a 	mov	r4,fp
    de50:	1021883a 	mov	r16,r2
    de54:	00106e40 	call	106e4 <__multiply>
    de58:	b80b883a 	mov	r5,r23
    de5c:	e009883a 	mov	r4,fp
    de60:	d8800915 	stw	r2,36(sp)
    de64:	00102680 	call	10268 <_Bfree>
    de68:	d8800917 	ldw	r2,36(sp)
    de6c:	102f883a 	mov	r23,r2
    de70:	d8800717 	ldw	r2,28(sp)
    de74:	150dc83a 	sub	r6,r2,r20
    de78:	15025d1e 	bne	r2,r20,e7f0 <_dtoa_r+0x136c>
    de7c:	01400044 	movi	r5,1
    de80:	e009883a 	mov	r4,fp
    de84:	00106340 	call	10634 <__i2b>
    de88:	1029883a 	mov	r20,r2
    de8c:	0540bd16 	blt	zero,r21,e184 <_dtoa_r+0xd00>
    de90:	d8800217 	ldw	r2,8(sp)
    de94:	10800088 	cmpgei	r2,r2,2
    de98:	10015626 	beq	r2,zero,e3f4 <_dtoa_r+0xf70>
    de9c:	0023883a 	mov	r17,zero
    dea0:	00800044 	movi	r2,1
    dea4:	a800c01e 	bne	r21,zero,e1a8 <_dtoa_r+0xd24>
    dea8:	1585883a 	add	r2,r2,r22
    deac:	108007cc 	andi	r2,r2,31
    deb0:	1000ac26 	beq	r2,zero,e164 <_dtoa_r+0xce0>
    deb4:	00c00804 	movi	r3,32
    deb8:	1887c83a 	sub	r3,r3,r2
    debc:	19000150 	cmplti	r4,r3,5
    dec0:	20033d1e 	bne	r4,zero,ebb8 <_dtoa_r+0x1734>
    dec4:	00c00704 	movi	r3,28
    dec8:	1885c83a 	sub	r2,r3,r2
    decc:	d8c00417 	ldw	r3,16(sp)
    ded0:	90a5883a 	add	r18,r18,r2
    ded4:	b0ad883a 	add	r22,r22,r2
    ded8:	1887883a 	add	r3,r3,r2
    dedc:	d8c00415 	stw	r3,16(sp)
    dee0:	d8800417 	ldw	r2,16(sp)
    dee4:	00809916 	blt	zero,r2,e14c <_dtoa_r+0xcc8>
    dee8:	0580050e 	bge	zero,r22,df00 <_dtoa_r+0xa7c>
    deec:	a00b883a 	mov	r5,r20
    def0:	b00d883a 	mov	r6,r22
    def4:	e009883a 	mov	r4,fp
    def8:	0010af00 	call	10af0 <__lshift>
    defc:	1029883a 	mov	r20,r2
    df00:	d8800817 	ldw	r2,32(sp)
    df04:	10011d1e 	bne	r2,zero,e37c <_dtoa_r+0xef8>
    df08:	d8800317 	ldw	r2,12(sp)
    df0c:	00810a0e 	bge	zero,r2,e338 <_dtoa_r+0xeb4>
    df10:	d8800517 	ldw	r2,20(sp)
    df14:	1000b71e 	bne	r2,zero,e1f4 <_dtoa_r+0xd70>
    df18:	d8800617 	ldw	r2,24(sp)
    df1c:	10800044 	addi	r2,r2,1
    df20:	d8800215 	stw	r2,8(sp)
    df24:	dc800317 	ldw	r18,12(sp)
    df28:	dd400117 	ldw	r21,4(sp)
    df2c:	04400044 	movi	r17,1
    df30:	00000706 	br	df50 <_dtoa_r+0xacc>
    df34:	b80b883a 	mov	r5,r23
    df38:	000f883a 	mov	r7,zero
    df3c:	01800284 	movi	r6,10
    df40:	e009883a 	mov	r4,fp
    df44:	001028c0 	call	1028c <__multadd>
    df48:	102f883a 	mov	r23,r2
    df4c:	8c400044 	addi	r17,r17,1
    df50:	a00b883a 	mov	r5,r20
    df54:	b809883a 	mov	r4,r23
    df58:	000d2640 	call	d264 <quorem>
    df5c:	14c00c04 	addi	r19,r2,48
    df60:	ac45883a 	add	r2,r21,r17
    df64:	14ffffc5 	stb	r19,-1(r2)
    df68:	8cbff216 	blt	r17,r18,df34 <_dtoa_r+0xab0>
    df6c:	d8800317 	ldw	r2,12(sp)
    df70:	00815d0e 	bge	zero,r2,e4e8 <_dtoa_r+0x1064>
    df74:	d8c00117 	ldw	r3,4(sp)
    df78:	0023883a 	mov	r17,zero
    df7c:	1891883a 	add	r8,r3,r2
    df80:	b80b883a 	mov	r5,r23
    df84:	01800044 	movi	r6,1
    df88:	e009883a 	mov	r4,fp
    df8c:	da000315 	stw	r8,12(sp)
    df90:	0010af00 	call	10af0 <__lshift>
    df94:	a00b883a 	mov	r5,r20
    df98:	1009883a 	mov	r4,r2
    df9c:	102f883a 	mov	r23,r2
    dfa0:	0010c780 	call	10c78 <__mcmp>
    dfa4:	da000317 	ldw	r8,12(sp)
    dfa8:	0081540e 	bge	zero,r2,e4fc <_dtoa_r+0x1078>
    dfac:	413fffc3 	ldbu	r4,-1(r8)
    dfb0:	d9400117 	ldw	r5,4(sp)
    dfb4:	00000306 	br	dfc4 <_dtoa_r+0xb40>
    dfb8:	28c15a26 	beq	r5,r3,e524 <_dtoa_r+0x10a0>
    dfbc:	193fffc3 	ldbu	r4,-1(r3)
    dfc0:	1811883a 	mov	r8,r3
    dfc4:	20803fcc 	andi	r2,r4,255
    dfc8:	1080201c 	xori	r2,r2,128
    dfcc:	10bfe004 	addi	r2,r2,-128
    dfd0:	10800e60 	cmpeqi	r2,r2,57
    dfd4:	40ffffc4 	addi	r3,r8,-1
    dfd8:	103ff71e 	bne	r2,zero,dfb8 <_dtoa_r+0xb34>
    dfdc:	21000044 	addi	r4,r4,1
    dfe0:	19000005 	stb	r4,0(r3)
    dfe4:	a00b883a 	mov	r5,r20
    dfe8:	e009883a 	mov	r4,fp
    dfec:	da000315 	stw	r8,12(sp)
    dff0:	00102680 	call	10268 <_Bfree>
    dff4:	da000317 	ldw	r8,12(sp)
    dff8:	80000b26 	beq	r16,zero,e028 <_dtoa_r+0xba4>
    dffc:	88000526 	beq	r17,zero,e014 <_dtoa_r+0xb90>
    e000:	8c000426 	beq	r17,r16,e014 <_dtoa_r+0xb90>
    e004:	880b883a 	mov	r5,r17
    e008:	e009883a 	mov	r4,fp
    e00c:	00102680 	call	10268 <_Bfree>
    e010:	da000317 	ldw	r8,12(sp)
    e014:	800b883a 	mov	r5,r16
    e018:	e009883a 	mov	r4,fp
    e01c:	da000315 	stw	r8,12(sp)
    e020:	00102680 	call	10268 <_Bfree>
    e024:	da000317 	ldw	r8,12(sp)
    e028:	b80b883a 	mov	r5,r23
    e02c:	e009883a 	mov	r4,fp
    e030:	da000315 	stw	r8,12(sp)
    e034:	00102680 	call	10268 <_Bfree>
    e038:	da000317 	ldw	r8,12(sp)
    e03c:	d8801e17 	ldw	r2,120(sp)
    e040:	d8c00217 	ldw	r3,8(sp)
    e044:	40000005 	stb	zero,0(r8)
    e048:	10c00015 	stw	r3,0(r2)
    e04c:	d8802017 	ldw	r2,128(sp)
    e050:	103d3e26 	beq	r2,zero,d54c <_dtoa_r+0xc8>
    e054:	12000015 	stw	r8,0(r2)
    e058:	003d3c06 	br	d54c <_dtoa_r+0xc8>
    e05c:	d8000815 	stw	zero,32(sp)
    e060:	b0002316 	blt	r22,zero,e0f0 <_dtoa_r+0xc6c>
    e064:	d8000415 	stw	zero,16(sp)
    e068:	d8c00217 	ldw	r3,8(sp)
    e06c:	dd400615 	stw	r21,24(sp)
    e070:	d8000715 	stw	zero,28(sp)
    e074:	188002a8 	cmpgeui	r2,r3,10
    e078:	b56d883a 	add	r22,r22,r21
    e07c:	103da726 	beq	r2,zero,d71c <_dtoa_r+0x298>
    e080:	00800044 	movi	r2,1
    e084:	d8800515 	stw	r2,20(sp)
    e088:	00bfffc4 	movi	r2,-1
    e08c:	04000044 	movi	r16,1
    e090:	d8000215 	stw	zero,8(sp)
    e094:	d8800315 	stw	r2,12(sp)
    e098:	d8001d15 	stw	zero,116(sp)
    e09c:	d8800317 	ldw	r2,12(sp)
    e0a0:	e0001115 	stw	zero,68(fp)
    e0a4:	000b883a 	mov	r5,zero
    e0a8:	d8800b15 	stw	r2,44(sp)
    e0ac:	003db806 	br	d790 <_dtoa_r+0x30c>
    e0b0:	188000e0 	cmpeqi	r2,r3,3
    e0b4:	d8000515 	stw	zero,20(sp)
    e0b8:	1002a526 	beq	r2,zero,eb50 <_dtoa_r+0x16cc>
    e0bc:	d8801d17 	ldw	r2,116(sp)
    e0c0:	d8c00617 	ldw	r3,24(sp)
    e0c4:	10c5883a 	add	r2,r2,r3
    e0c8:	d8800b15 	stw	r2,44(sp)
    e0cc:	10800044 	addi	r2,r2,1
    e0d0:	d8800315 	stw	r2,12(sp)
    e0d4:	100d883a 	mov	r6,r2
    e0d8:	00bda216 	blt	zero,r2,d764 <_dtoa_r+0x2e0>
    e0dc:	01800044 	movi	r6,1
    e0e0:	003da006 	br	d764 <_dtoa_r+0x2e0>
    e0e4:	00800044 	movi	r2,1
    e0e8:	d8800815 	stw	r2,32(sp)
    e0ec:	b03d7f0e 	bge	r22,zero,d6ec <_dtoa_r+0x268>
    e0f0:	00800044 	movi	r2,1
    e0f4:	1405c83a 	sub	r2,r2,r16
    e0f8:	d8800415 	stw	r2,16(sp)
    e0fc:	002d883a 	mov	r22,zero
    e100:	003d7b06 	br	d6f0 <_dtoa_r+0x26c>
    e104:	a809883a 	mov	r4,r21
    e108:	000a1540 	call	a154 <__floatsidf>
    e10c:	900d883a 	mov	r6,r18
    e110:	b00f883a 	mov	r7,r22
    e114:	1009883a 	mov	r4,r2
    e118:	180b883a 	mov	r5,r3
    e11c:	0008d780 	call	8d78 <__eqdf2>
    e120:	103d6126 	beq	r2,zero,d6a8 <_dtoa_r+0x224>
    e124:	ad7fffc4 	addi	r21,r21,-1
    e128:	003d5f06 	br	d6a8 <_dtoa_r+0x224>
    e12c:	008000b4 	movhi	r2,2
    e130:	10a01c04 	addi	r2,r2,-32656
    e134:	d8800115 	stw	r2,4(sp)
    e138:	003d0406 	br	d54c <_dtoa_r+0xc8>
    e13c:	dd000717 	ldw	r20,28(sp)
    e140:	dc800417 	ldw	r18,16(sp)
    e144:	0021883a 	mov	r16,zero
    e148:	003f2c06 	br	ddfc <_dtoa_r+0x978>
    e14c:	b80b883a 	mov	r5,r23
    e150:	100d883a 	mov	r6,r2
    e154:	e009883a 	mov	r4,fp
    e158:	0010af00 	call	10af0 <__lshift>
    e15c:	102f883a 	mov	r23,r2
    e160:	003f6106 	br	dee8 <_dtoa_r+0xa64>
    e164:	00800704 	movi	r2,28
    e168:	003f5806 	br	decc <_dtoa_r+0xa48>
    e16c:	01000804 	movi	r4,32
    e170:	2089c83a 	sub	r4,r4,r2
    e174:	9908983a 	sll	r4,r19,r4
    e178:	003d1706 	br	d5d8 <_dtoa_r+0x154>
    e17c:	04000044 	movi	r16,1
    e180:	003d6b06 	br	d730 <_dtoa_r+0x2ac>
    e184:	100b883a 	mov	r5,r2
    e188:	a80d883a 	mov	r6,r21
    e18c:	e009883a 	mov	r4,fp
    e190:	00109a80 	call	109a8 <__pow5mult>
    e194:	d8c00217 	ldw	r3,8(sp)
    e198:	1029883a 	mov	r20,r2
    e19c:	18c00090 	cmplti	r3,r3,2
    e1a0:	18014b1e 	bne	r3,zero,e6d0 <_dtoa_r+0x124c>
    e1a4:	0023883a 	mov	r17,zero
    e1a8:	a0800417 	ldw	r2,16(r20)
    e1ac:	10800104 	addi	r2,r2,4
    e1b0:	100490ba 	slli	r2,r2,2
    e1b4:	a085883a 	add	r2,r20,r2
    e1b8:	11000017 	ldw	r4,0(r2)
    e1bc:	00105200 	call	10520 <__hi0bits>
    e1c0:	00c00804 	movi	r3,32
    e1c4:	1885c83a 	sub	r2,r3,r2
    e1c8:	003f3706 	br	dea8 <_dtoa_r+0xa24>
    e1cc:	800b883a 	mov	r5,r16
    e1d0:	000f883a 	mov	r7,zero
    e1d4:	01800284 	movi	r6,10
    e1d8:	e009883a 	mov	r4,fp
    e1dc:	001028c0 	call	1028c <__multadd>
    e1e0:	1021883a 	mov	r16,r2
    e1e4:	d8800b17 	ldw	r2,44(sp)
    e1e8:	0082460e 	bge	zero,r2,eb04 <_dtoa_r+0x1680>
    e1ec:	dd400615 	stw	r21,24(sp)
    e1f0:	d8800315 	stw	r2,12(sp)
    e1f4:	0480b016 	blt	zero,r18,e4b8 <_dtoa_r+0x1034>
    e1f8:	88016c1e 	bne	r17,zero,e7ac <_dtoa_r+0x1328>
    e1fc:	8025883a 	mov	r18,r16
    e200:	dd800117 	ldw	r22,4(sp)
    e204:	d9000317 	ldw	r4,12(sp)
    e208:	98c0004c 	andi	r3,r19,1
    e20c:	b0bfffc4 	addi	r2,r22,-1
    e210:	1105883a 	add	r2,r2,r4
    e214:	d8800515 	stw	r2,20(sp)
    e218:	d8800217 	ldw	r2,8(sp)
    e21c:	d8c00815 	stw	r3,32(sp)
    e220:	1884b03a 	or	r2,r3,r2
    e224:	d8800715 	stw	r2,28(sp)
    e228:	00002b06 	br	e2d8 <_dtoa_r+0xe54>
    e22c:	b809883a 	mov	r4,r23
    e230:	d9400415 	stw	r5,16(sp)
    e234:	0010c780 	call	10c78 <__mcmp>
    e238:	d9400417 	ldw	r5,16(sp)
    e23c:	e009883a 	mov	r4,fp
    e240:	d8800315 	stw	r2,12(sp)
    e244:	00102680 	call	10268 <_Bfree>
    e248:	d8800317 	ldw	r2,12(sp)
    e24c:	1000021e 	bne	r2,zero,e258 <_dtoa_r+0xdd4>
    e250:	d8c00717 	ldw	r3,28(sp)
    e254:	18021d26 	beq	r3,zero,eacc <_dtoa_r+0x1648>
    e258:	b2000044 	addi	r8,r22,1
    e25c:	da000315 	stw	r8,12(sp)
    e260:	88012116 	blt	r17,zero,e6e8 <_dtoa_r+0x1264>
    e264:	d8c00217 	ldw	r3,8(sp)
    e268:	88e2b03a 	or	r17,r17,r3
    e26c:	d8c00817 	ldw	r3,32(sp)
    e270:	1c62b03a 	or	r17,r3,r17
    e274:	88011c26 	beq	r17,zero,e6e8 <_dtoa_r+0x1264>
    e278:	00816616 	blt	zero,r2,e814 <_dtoa_r+0x1390>
    e27c:	d8800517 	ldw	r2,20(sp)
    e280:	b4c00005 	stb	r19,0(r22)
    e284:	15816d26 	beq	r2,r22,e83c <_dtoa_r+0x13b8>
    e288:	b80b883a 	mov	r5,r23
    e28c:	000f883a 	mov	r7,zero
    e290:	01800284 	movi	r6,10
    e294:	e009883a 	mov	r4,fp
    e298:	001028c0 	call	1028c <__multadd>
    e29c:	102f883a 	mov	r23,r2
    e2a0:	800b883a 	mov	r5,r16
    e2a4:	000f883a 	mov	r7,zero
    e2a8:	01800284 	movi	r6,10
    e2ac:	e009883a 	mov	r4,fp
    e2b0:	84801d26 	beq	r16,r18,e328 <_dtoa_r+0xea4>
    e2b4:	001028c0 	call	1028c <__multadd>
    e2b8:	900b883a 	mov	r5,r18
    e2bc:	000f883a 	mov	r7,zero
    e2c0:	01800284 	movi	r6,10
    e2c4:	e009883a 	mov	r4,fp
    e2c8:	1021883a 	mov	r16,r2
    e2cc:	001028c0 	call	1028c <__multadd>
    e2d0:	1025883a 	mov	r18,r2
    e2d4:	dd800317 	ldw	r22,12(sp)
    e2d8:	a00b883a 	mov	r5,r20
    e2dc:	b809883a 	mov	r4,r23
    e2e0:	000d2640 	call	d264 <quorem>
    e2e4:	800b883a 	mov	r5,r16
    e2e8:	b809883a 	mov	r4,r23
    e2ec:	102b883a 	mov	r21,r2
    e2f0:	0010c780 	call	10c78 <__mcmp>
    e2f4:	a00b883a 	mov	r5,r20
    e2f8:	900d883a 	mov	r6,r18
    e2fc:	e009883a 	mov	r4,fp
    e300:	1023883a 	mov	r17,r2
    e304:	0010cd00 	call	10cd0 <__mdiff>
    e308:	100b883a 	mov	r5,r2
    e30c:	10800317 	ldw	r2,12(r2)
    e310:	acc00c04 	addi	r19,r21,48
    e314:	103fc526 	beq	r2,zero,e22c <_dtoa_r+0xda8>
    e318:	e009883a 	mov	r4,fp
    e31c:	00102680 	call	10268 <_Bfree>
    e320:	00800044 	movi	r2,1
    e324:	003fcc06 	br	e258 <_dtoa_r+0xdd4>
    e328:	001028c0 	call	1028c <__multadd>
    e32c:	1021883a 	mov	r16,r2
    e330:	1025883a 	mov	r18,r2
    e334:	003fe706 	br	e2d4 <_dtoa_r+0xe50>
    e338:	d8800217 	ldw	r2,8(sp)
    e33c:	108000d0 	cmplti	r2,r2,3
    e340:	10004026 	beq	r2,zero,e444 <_dtoa_r+0xfc0>
    e344:	d8800517 	ldw	r2,20(sp)
    e348:	103faa1e 	bne	r2,zero,e1f4 <_dtoa_r+0xd70>
    e34c:	a00b883a 	mov	r5,r20
    e350:	b809883a 	mov	r4,r23
    e354:	000d2640 	call	d264 <quorem>
    e358:	14c00c04 	addi	r19,r2,48
    e35c:	d8800117 	ldw	r2,4(sp)
    e360:	0023883a 	mov	r17,zero
    e364:	12000044 	addi	r8,r2,1
    e368:	14c00005 	stb	r19,0(r2)
    e36c:	d8800617 	ldw	r2,24(sp)
    e370:	10800044 	addi	r2,r2,1
    e374:	d8800215 	stw	r2,8(sp)
    e378:	003f0106 	br	df80 <_dtoa_r+0xafc>
    e37c:	a00b883a 	mov	r5,r20
    e380:	b809883a 	mov	r4,r23
    e384:	0010c780 	call	10c78 <__mcmp>
    e388:	103edf0e 	bge	r2,zero,df08 <_dtoa_r+0xa84>
    e38c:	b80b883a 	mov	r5,r23
    e390:	000f883a 	mov	r7,zero
    e394:	01800284 	movi	r6,10
    e398:	e009883a 	mov	r4,fp
    e39c:	001028c0 	call	1028c <__multadd>
    e3a0:	d8c00617 	ldw	r3,24(sp)
    e3a4:	102f883a 	mov	r23,r2
    e3a8:	d8800517 	ldw	r2,20(sp)
    e3ac:	1d7fffc4 	addi	r21,r3,-1
    e3b0:	103f861e 	bne	r2,zero,e1cc <_dtoa_r+0xd48>
    e3b4:	d8800b17 	ldw	r2,44(sp)
    e3b8:	0081cb0e 	bge	zero,r2,eae8 <_dtoa_r+0x1664>
    e3bc:	d8c00617 	ldw	r3,24(sp)
    e3c0:	d8800315 	stw	r2,12(sp)
    e3c4:	d8c00215 	stw	r3,8(sp)
    e3c8:	003ed606 	br	df24 <_dtoa_r+0xaa0>
    e3cc:	008000b4 	movhi	r2,2
    e3d0:	1007883a 	mov	r3,r2
    e3d4:	18e02504 	addi	r3,r3,-32620
    e3d8:	008000b4 	movhi	r2,2
    e3dc:	d8c00115 	stw	r3,4(sp)
    e3e0:	10a025c4 	addi	r2,r2,-32617
    e3e4:	003de506 	br	db7c <_dtoa_r+0x6f8>
    e3e8:	00800044 	movi	r2,1
    e3ec:	d8800515 	stw	r2,20(sp)
    e3f0:	003f3206 	br	e0bc <_dtoa_r+0xc38>
    e3f4:	983ea91e 	bne	r19,zero,de9c <_dtoa_r+0xa18>
    e3f8:	00800434 	movhi	r2,16
    e3fc:	10bfffc4 	addi	r2,r2,-1
    e400:	8884703a 	and	r2,r17,r2
    e404:	103ea51e 	bne	r2,zero,de9c <_dtoa_r+0xa18>
    e408:	8c5ffc2c 	andhi	r17,r17,32752
    e40c:	883ea326 	beq	r17,zero,de9c <_dtoa_r+0xa18>
    e410:	d8800417 	ldw	r2,16(sp)
    e414:	b5800044 	addi	r22,r22,1
    e418:	04400044 	movi	r17,1
    e41c:	10800044 	addi	r2,r2,1
    e420:	d8800415 	stw	r2,16(sp)
    e424:	003e9e06 	br	dea0 <_dtoa_r+0xa1c>
    e428:	00800044 	movi	r2,1
    e42c:	d8800315 	stw	r2,12(sp)
    e430:	d8801d15 	stw	r2,116(sp)
    e434:	003f1906 	br	e09c <_dtoa_r+0xc18>
    e438:	d8800b17 	ldw	r2,44(sp)
    e43c:	dd400615 	stw	r21,24(sp)
    e440:	d8800315 	stw	r2,12(sp)
    e444:	d8800317 	ldw	r2,12(sp)
    e448:	103e011e 	bne	r2,zero,dc50 <_dtoa_r+0x7cc>
    e44c:	a00b883a 	mov	r5,r20
    e450:	e009883a 	mov	r4,fp
    e454:	000f883a 	mov	r7,zero
    e458:	01800144 	movi	r6,5
    e45c:	001028c0 	call	1028c <__multadd>
    e460:	100b883a 	mov	r5,r2
    e464:	b809883a 	mov	r4,r23
    e468:	1029883a 	mov	r20,r2
    e46c:	0010c780 	call	10c78 <__mcmp>
    e470:	00bdf70e 	bge	zero,r2,dc50 <_dtoa_r+0x7cc>
    e474:	d8c00117 	ldw	r3,4(sp)
    e478:	00800c44 	movi	r2,49
    e47c:	18800005 	stb	r2,0(r3)
    e480:	d8800617 	ldw	r2,24(sp)
    e484:	1a000044 	addi	r8,r3,1
    e488:	14c00044 	addi	r19,r2,1
    e48c:	a00b883a 	mov	r5,r20
    e490:	e009883a 	mov	r4,fp
    e494:	da000315 	stw	r8,12(sp)
    e498:	00102680 	call	10268 <_Bfree>
    e49c:	98800044 	addi	r2,r19,1
    e4a0:	d8800215 	stw	r2,8(sp)
    e4a4:	da000317 	ldw	r8,12(sp)
    e4a8:	803eda1e 	bne	r16,zero,e014 <_dtoa_r+0xb90>
    e4ac:	003ede06 	br	e028 <_dtoa_r+0xba4>
    e4b0:	b005883a 	mov	r2,r22
    e4b4:	003e5506 	br	de0c <_dtoa_r+0x988>
    e4b8:	800b883a 	mov	r5,r16
    e4bc:	900d883a 	mov	r6,r18
    e4c0:	e009883a 	mov	r4,fp
    e4c4:	0010af00 	call	10af0 <__lshift>
    e4c8:	1021883a 	mov	r16,r2
    e4cc:	003f4a06 	br	e1f8 <_dtoa_r+0xd74>
    e4d0:	1529c83a 	sub	r20,r2,r20
    e4d4:	003e3e06 	br	ddd0 <_dtoa_r+0x94c>
    e4d8:	dcc00a15 	stw	r19,40(sp)
    e4dc:	dc400c15 	stw	r17,48(sp)
    e4e0:	04000084 	movi	r16,2
    e4e4:	003ccf06 	br	d824 <_dtoa_r+0x3a0>
    e4e8:	00800044 	movi	r2,1
    e4ec:	003ea106 	br	df74 <_dtoa_r+0xaf0>
    e4f0:	00800044 	movi	r2,1
    e4f4:	d8800515 	stw	r2,20(sp)
    e4f8:	003c9506 	br	d750 <_dtoa_r+0x2cc>
    e4fc:	1000021e 	bne	r2,zero,e508 <_dtoa_r+0x1084>
    e500:	98c0004c 	andi	r3,r19,1
    e504:	183ea91e 	bne	r3,zero,dfac <_dtoa_r+0xb28>
    e508:	40bfffc7 	ldb	r2,-1(r8)
    e50c:	4007883a 	mov	r3,r8
    e510:	423fffc4 	addi	r8,r8,-1
    e514:	10800c20 	cmpeqi	r2,r2,48
    e518:	103ffb1e 	bne	r2,zero,e508 <_dtoa_r+0x1084>
    e51c:	1811883a 	mov	r8,r3
    e520:	003eb006 	br	dfe4 <_dtoa_r+0xb60>
    e524:	d8c00117 	ldw	r3,4(sp)
    e528:	00800c44 	movi	r2,49
    e52c:	18800005 	stb	r2,0(r3)
    e530:	d8800217 	ldw	r2,8(sp)
    e534:	10800044 	addi	r2,r2,1
    e538:	d8800215 	stw	r2,8(sp)
    e53c:	003ea906 	br	dfe4 <_dtoa_r+0xb60>
    e540:	d8c00917 	ldw	r3,36(sp)
    e544:	18010e26 	beq	r3,zero,e980 <_dtoa_r+0x14fc>
    e548:	d8c00417 	ldw	r3,16(sp)
    e54c:	10810cc4 	addi	r2,r2,1075
    e550:	b0ad883a 	add	r22,r22,r2
    e554:	1885883a 	add	r2,r3,r2
    e558:	dd000717 	ldw	r20,28(sp)
    e55c:	1825883a 	mov	r18,r3
    e560:	d8800415 	stw	r2,16(sp)
    e564:	003e2106 	br	ddec <_dtoa_r+0x968>
    e568:	8009883a 	mov	r4,r16
    e56c:	000a1540 	call	a154 <__floatsidf>
    e570:	d9800a17 	ldw	r6,40(sp)
    e574:	900f883a 	mov	r7,r18
    e578:	1009883a 	mov	r4,r2
    e57c:	180b883a 	mov	r5,r3
    e580:	0008fc80 	call	8fc8 <__muldf3>
    e584:	000d883a 	mov	r6,zero
    e588:	01d00734 	movhi	r7,16412
    e58c:	1009883a 	mov	r4,r2
    e590:	180b883a 	mov	r5,r3
    e594:	0007b740 	call	7b74 <__adddf3>
    e598:	1029883a 	mov	r20,r2
    e59c:	00bf3034 	movhi	r2,64704
    e5a0:	1885883a 	add	r2,r3,r2
    e5a4:	d8800c15 	stw	r2,48(sp)
    e5a8:	d9000a17 	ldw	r4,40(sp)
    e5ac:	900b883a 	mov	r5,r18
    e5b0:	000d883a 	mov	r6,zero
    e5b4:	01d00534 	movhi	r7,16404
    e5b8:	00097740 	call	9774 <__subdf3>
    e5bc:	d9c00c17 	ldw	r7,48(sp)
    e5c0:	a00d883a 	mov	r6,r20
    e5c4:	1009883a 	mov	r4,r2
    e5c8:	180b883a 	mov	r5,r3
    e5cc:	1025883a 	mov	r18,r2
    e5d0:	1821883a 	mov	r16,r3
    e5d4:	0008df80 	call	8df8 <__gedf2>
    e5d8:	00812b16 	blt	zero,r2,ea88 <_dtoa_r+0x1604>
    e5dc:	d8800c17 	ldw	r2,48(sp)
    e5e0:	a00d883a 	mov	r6,r20
    e5e4:	9009883a 	mov	r4,r18
    e5e8:	11e0003c 	xorhi	r7,r2,32768
    e5ec:	800b883a 	mov	r5,r16
    e5f0:	0008ee00 	call	8ee0 <__ledf2>
    e5f4:	103d780e 	bge	r2,zero,dbd8 <_dtoa_r+0x754>
    e5f8:	0029883a 	mov	r20,zero
    e5fc:	0021883a 	mov	r16,zero
    e600:	003d9306 	br	dc50 <_dtoa_r+0x7cc>
    e604:	d9800717 	ldw	r6,28(sp)
    e608:	b80b883a 	mov	r5,r23
    e60c:	e009883a 	mov	r4,fp
    e610:	00109a80 	call	109a8 <__pow5mult>
    e614:	102f883a 	mov	r23,r2
    e618:	003e1806 	br	de7c <_dtoa_r+0x9f8>
    e61c:	d8800617 	ldw	r2,24(sp)
    e620:	1000e326 	beq	r2,zero,e9b0 <_dtoa_r+0x152c>
    e624:	00a9c83a 	sub	r20,zero,r2
    e628:	a08003cc 	andi	r2,r20,15
    e62c:	100690fa 	slli	r3,r2,3
    e630:	008000b4 	movhi	r2,2
    e634:	10a06504 	addi	r2,r2,-32364
    e638:	10c5883a 	add	r2,r2,r3
    e63c:	11800017 	ldw	r6,0(r2)
    e640:	11c00117 	ldw	r7,4(r2)
    e644:	9809883a 	mov	r4,r19
    e648:	880b883a 	mov	r5,r17
    e64c:	a029d13a 	srai	r20,r20,4
    e650:	0008fc80 	call	8fc8 <__muldf3>
    e654:	d8800a15 	stw	r2,40(sp)
    e658:	1825883a 	mov	r18,r3
    e65c:	a0013126 	beq	r20,zero,eb24 <_dtoa_r+0x16a0>
    e660:	020000b4 	movhi	r8,2
    e664:	04000084 	movi	r16,2
    e668:	42205b04 	addi	r8,r8,-32404
    e66c:	180b883a 	mov	r5,r3
    e670:	dc400c15 	stw	r17,48(sp)
    e674:	1009883a 	mov	r4,r2
    e678:	8023883a 	mov	r17,r16
    e67c:	0007883a 	mov	r3,zero
    e680:	4021883a 	mov	r16,r8
    e684:	a180004c 	andi	r6,r20,1
    e688:	30000726 	beq	r6,zero,e6a8 <_dtoa_r+0x1224>
    e68c:	81800017 	ldw	r6,0(r16)
    e690:	81c00117 	ldw	r7,4(r16)
    e694:	8c400044 	addi	r17,r17,1
    e698:	0008fc80 	call	8fc8 <__muldf3>
    e69c:	180b883a 	mov	r5,r3
    e6a0:	1009883a 	mov	r4,r2
    e6a4:	00c00044 	movi	r3,1
    e6a8:	a029d07a 	srai	r20,r20,1
    e6ac:	84000204 	addi	r16,r16,8
    e6b0:	a03ff41e 	bne	r20,zero,e684 <_dtoa_r+0x1200>
    e6b4:	18c03fcc 	andi	r3,r3,255
    e6b8:	8821883a 	mov	r16,r17
    e6bc:	dc400c17 	ldw	r17,48(sp)
    e6c0:	183c7126 	beq	r3,zero,d888 <_dtoa_r+0x404>
    e6c4:	d9000a15 	stw	r4,40(sp)
    e6c8:	2825883a 	mov	r18,r5
    e6cc:	003c6e06 	br	d888 <_dtoa_r+0x404>
    e6d0:	983eb41e 	bne	r19,zero,e1a4 <_dtoa_r+0xd20>
    e6d4:	00800434 	movhi	r2,16
    e6d8:	10bfffc4 	addi	r2,r2,-1
    e6dc:	8884703a 	and	r2,r17,r2
    e6e0:	103f4926 	beq	r2,zero,e408 <_dtoa_r+0xf84>
    e6e4:	003eaf06 	br	e1a4 <_dtoa_r+0xd20>
    e6e8:	00800e0e 	bge	zero,r2,e724 <_dtoa_r+0x12a0>
    e6ec:	b80b883a 	mov	r5,r23
    e6f0:	01800044 	movi	r6,1
    e6f4:	e009883a 	mov	r4,fp
    e6f8:	da000215 	stw	r8,8(sp)
    e6fc:	0010af00 	call	10af0 <__lshift>
    e700:	a00b883a 	mov	r5,r20
    e704:	1009883a 	mov	r4,r2
    e708:	102f883a 	mov	r23,r2
    e70c:	0010c780 	call	10c78 <__mcmp>
    e710:	da000217 	ldw	r8,8(sp)
    e714:	0080e30e 	bge	zero,r2,eaa4 <_dtoa_r+0x1620>
    e718:	98c00e60 	cmpeqi	r3,r19,57
    e71c:	1800cf1e 	bne	r3,zero,ea5c <_dtoa_r+0x15d8>
    e720:	acc00c44 	addi	r19,r21,49
    e724:	8023883a 	mov	r17,r16
    e728:	d8800617 	ldw	r2,24(sp)
    e72c:	b4c00005 	stb	r19,0(r22)
    e730:	9021883a 	mov	r16,r18
    e734:	10800044 	addi	r2,r2,1
    e738:	d8800215 	stw	r2,8(sp)
    e73c:	003e2906 	br	dfe4 <_dtoa_r+0xb60>
    e740:	b82b883a 	mov	r21,r23
    e744:	ddc00217 	ldw	r23,8(sp)
    e748:	200d883a 	mov	r6,r4
    e74c:	280f883a 	mov	r7,r5
    e750:	0007b740 	call	7b74 <__adddf3>
    e754:	102d883a 	mov	r22,r2
    e758:	1009883a 	mov	r4,r2
    e75c:	d8800617 	ldw	r2,24(sp)
    e760:	800d883a 	mov	r6,r16
    e764:	900f883a 	mov	r7,r18
    e768:	10800044 	addi	r2,r2,1
    e76c:	180b883a 	mov	r5,r3
    e770:	1823883a 	mov	r17,r3
    e774:	1027883a 	mov	r19,r2
    e778:	d8800215 	stw	r2,8(sp)
    e77c:	0008df80 	call	8df8 <__gedf2>
    e780:	00808916 	blt	zero,r2,e9a8 <_dtoa_r+0x1524>
    e784:	800d883a 	mov	r6,r16
    e788:	900f883a 	mov	r7,r18
    e78c:	b009883a 	mov	r4,r22
    e790:	880b883a 	mov	r5,r17
    e794:	0008d780 	call	8d78 <__eqdf2>
    e798:	1000021e 	bne	r2,zero,e7a4 <_dtoa_r+0x1320>
    e79c:	ad40004c 	andi	r21,r21,1
    e7a0:	a800811e 	bne	r21,zero,e9a8 <_dtoa_r+0x1524>
    e7a4:	a011883a 	mov	r8,r20
    e7a8:	003e1f06 	br	e028 <_dtoa_r+0xba4>
    e7ac:	81400117 	ldw	r5,4(r16)
    e7b0:	e009883a 	mov	r4,fp
    e7b4:	00101c40 	call	101c4 <_Balloc>
    e7b8:	1023883a 	mov	r17,r2
    e7bc:	1000f326 	beq	r2,zero,eb8c <_dtoa_r+0x1708>
    e7c0:	81800417 	ldw	r6,16(r16)
    e7c4:	81400304 	addi	r5,r16,12
    e7c8:	11000304 	addi	r4,r2,12
    e7cc:	31800084 	addi	r6,r6,2
    e7d0:	300c90ba 	slli	r6,r6,2
    e7d4:	000acd80 	call	acd8 <memcpy>
    e7d8:	01800044 	movi	r6,1
    e7dc:	880b883a 	mov	r5,r17
    e7e0:	e009883a 	mov	r4,fp
    e7e4:	0010af00 	call	10af0 <__lshift>
    e7e8:	1025883a 	mov	r18,r2
    e7ec:	003e8406 	br	e200 <_dtoa_r+0xd7c>
    e7f0:	b80b883a 	mov	r5,r23
    e7f4:	e009883a 	mov	r4,fp
    e7f8:	00109a80 	call	109a8 <__pow5mult>
    e7fc:	102f883a 	mov	r23,r2
    e800:	003d9e06 	br	de7c <_dtoa_r+0x9f8>
    e804:	d8800417 	ldw	r2,16(sp)
    e808:	d8c00317 	ldw	r3,12(sp)
    e80c:	10e5c83a 	sub	r18,r2,r3
    e810:	003d7606 	br	ddec <_dtoa_r+0x968>
    e814:	98800e58 	cmpnei	r2,r19,57
    e818:	10009026 	beq	r2,zero,ea5c <_dtoa_r+0x15d8>
    e81c:	d8800617 	ldw	r2,24(sp)
    e820:	98c00044 	addi	r3,r19,1
    e824:	8023883a 	mov	r17,r16
    e828:	10800044 	addi	r2,r2,1
    e82c:	d8800215 	stw	r2,8(sp)
    e830:	b0c00005 	stb	r3,0(r22)
    e834:	9021883a 	mov	r16,r18
    e838:	003dea06 	br	dfe4 <_dtoa_r+0xb60>
    e83c:	d8800617 	ldw	r2,24(sp)
    e840:	8023883a 	mov	r17,r16
    e844:	9021883a 	mov	r16,r18
    e848:	10800044 	addi	r2,r2,1
    e84c:	d8800215 	stw	r2,8(sp)
    e850:	003dcb06 	br	df80 <_dtoa_r+0xafc>
    e854:	d9400c17 	ldw	r5,48(sp)
    e858:	a009883a 	mov	r4,r20
    e85c:	0008fc80 	call	8fc8 <__muldf3>
    e860:	d9400117 	ldw	r5,4(sp)
    e864:	d9000f17 	ldw	r4,60(sp)
    e868:	d9800d17 	ldw	r6,52(sp)
    e86c:	d8800a15 	stw	r2,40(sp)
    e870:	29000005 	stb	r4,0(r5)
    e874:	d8c00c15 	stw	r3,48(sp)
    e878:	31000058 	cmpnei	r4,r6,1
    e87c:	da000e17 	ldw	r8,56(sp)
    e880:	29a9883a 	add	r20,r5,r6
    e884:	20009d26 	beq	r4,zero,eafc <_dtoa_r+0x1678>
    e888:	dc400d15 	stw	r17,52(sp)
    e88c:	8009883a 	mov	r4,r16
    e890:	900b883a 	mov	r5,r18
    e894:	4023883a 	mov	r17,r8
    e898:	dcc00e15 	stw	r19,56(sp)
    e89c:	000d883a 	mov	r6,zero
    e8a0:	01d00934 	movhi	r7,16420
    e8a4:	0008fc80 	call	8fc8 <__muldf3>
    e8a8:	180b883a 	mov	r5,r3
    e8ac:	1009883a 	mov	r4,r2
    e8b0:	1825883a 	mov	r18,r3
    e8b4:	1027883a 	mov	r19,r2
    e8b8:	000a0d40 	call	a0d4 <__fixdfsi>
    e8bc:	1009883a 	mov	r4,r2
    e8c0:	1021883a 	mov	r16,r2
    e8c4:	000a1540 	call	a154 <__floatsidf>
    e8c8:	9809883a 	mov	r4,r19
    e8cc:	900b883a 	mov	r5,r18
    e8d0:	100d883a 	mov	r6,r2
    e8d4:	180f883a 	mov	r7,r3
    e8d8:	8c400044 	addi	r17,r17,1
    e8dc:	84000c04 	addi	r16,r16,48
    e8e0:	00097740 	call	9774 <__subdf3>
    e8e4:	8c3fffc5 	stb	r16,-1(r17)
    e8e8:	1009883a 	mov	r4,r2
    e8ec:	180b883a 	mov	r5,r3
    e8f0:	a47fea1e 	bne	r20,r17,e89c <_dtoa_r+0x1418>
    e8f4:	dc400d17 	ldw	r17,52(sp)
    e8f8:	dcc00e17 	ldw	r19,56(sp)
    e8fc:	1021883a 	mov	r16,r2
    e900:	1825883a 	mov	r18,r3
    e904:	d9000a17 	ldw	r4,40(sp)
    e908:	d9400c17 	ldw	r5,48(sp)
    e90c:	000d883a 	mov	r6,zero
    e910:	01cff834 	movhi	r7,16352
    e914:	0007b740 	call	7b74 <__adddf3>
    e918:	800d883a 	mov	r6,r16
    e91c:	900f883a 	mov	r7,r18
    e920:	1009883a 	mov	r4,r2
    e924:	180b883a 	mov	r5,r3
    e928:	0008ee00 	call	8ee0 <__ledf2>
    e92c:	10005916 	blt	r2,zero,ea94 <_dtoa_r+0x1610>
    e930:	d9800a17 	ldw	r6,40(sp)
    e934:	d9c00c17 	ldw	r7,48(sp)
    e938:	0009883a 	mov	r4,zero
    e93c:	014ff834 	movhi	r5,16352
    e940:	00097740 	call	9774 <__subdf3>
    e944:	800d883a 	mov	r6,r16
    e948:	900f883a 	mov	r7,r18
    e94c:	1009883a 	mov	r4,r2
    e950:	180b883a 	mov	r5,r3
    e954:	0008df80 	call	8df8 <__gedf2>
    e958:	00bc9f0e 	bge	zero,r2,dbd8 <_dtoa_r+0x754>
    e95c:	a0bfffc7 	ldb	r2,-1(r20)
    e960:	a011883a 	mov	r8,r20
    e964:	a53fffc4 	addi	r20,r20,-1
    e968:	10800c20 	cmpeqi	r2,r2,48
    e96c:	103ffb1e 	bne	r2,zero,e95c <_dtoa_r+0x14d8>
    e970:	d8801017 	ldw	r2,64(sp)
    e974:	10800044 	addi	r2,r2,1
    e978:	d8800215 	stw	r2,8(sp)
    e97c:	003daa06 	br	e028 <_dtoa_r+0xba4>
    e980:	d8c01117 	ldw	r3,68(sp)
    e984:	d9000417 	ldw	r4,16(sp)
    e988:	00800d84 	movi	r2,54
    e98c:	10c5c83a 	sub	r2,r2,r3
    e990:	b0ad883a 	add	r22,r22,r2
    e994:	2085883a 	add	r2,r4,r2
    e998:	dd000717 	ldw	r20,28(sp)
    e99c:	2025883a 	mov	r18,r4
    e9a0:	d8800415 	stw	r2,16(sp)
    e9a4:	003d1106 	br	ddec <_dtoa_r+0x968>
    e9a8:	d9000117 	ldw	r4,4(sp)
    e9ac:	003c4e06 	br	dae8 <_dtoa_r+0x664>
    e9b0:	dcc00a15 	stw	r19,40(sp)
    e9b4:	8825883a 	mov	r18,r17
    e9b8:	04000084 	movi	r16,2
    e9bc:	003bb206 	br	d888 <_dtoa_r+0x404>
    e9c0:	d8800317 	ldw	r2,12(sp)
    e9c4:	103ee826 	beq	r2,zero,e568 <_dtoa_r+0x10e4>
    e9c8:	d8800b17 	ldw	r2,44(sp)
    e9cc:	00bc820e 	bge	zero,r2,dbd8 <_dtoa_r+0x754>
    e9d0:	900b883a 	mov	r5,r18
    e9d4:	a009883a 	mov	r4,r20
    e9d8:	000d883a 	mov	r6,zero
    e9dc:	01d00934 	movhi	r7,16420
    e9e0:	0008fc80 	call	8fc8 <__muldf3>
    e9e4:	81000044 	addi	r4,r16,1
    e9e8:	1029883a 	mov	r20,r2
    e9ec:	1825883a 	mov	r18,r3
    e9f0:	d8800a15 	stw	r2,40(sp)
    e9f4:	000a1540 	call	a154 <__floatsidf>
    e9f8:	a00d883a 	mov	r6,r20
    e9fc:	900f883a 	mov	r7,r18
    ea00:	1009883a 	mov	r4,r2
    ea04:	180b883a 	mov	r5,r3
    ea08:	0008fc80 	call	8fc8 <__muldf3>
    ea0c:	1009883a 	mov	r4,r2
    ea10:	000d883a 	mov	r6,zero
    ea14:	01d00734 	movhi	r7,16412
    ea18:	180b883a 	mov	r5,r3
    ea1c:	0007b740 	call	7b74 <__adddf3>
    ea20:	d9000617 	ldw	r4,24(sp)
    ea24:	1029883a 	mov	r20,r2
    ea28:	00bf3034 	movhi	r2,64704
    ea2c:	1887883a 	add	r3,r3,r2
    ea30:	d8800b17 	ldw	r2,44(sp)
    ea34:	213fffc4 	addi	r4,r4,-1
    ea38:	d9001015 	stw	r4,64(sp)
    ea3c:	d8c00c15 	stw	r3,48(sp)
    ea40:	d8800d15 	stw	r2,52(sp)
    ea44:	003baf06 	br	d904 <_dtoa_r+0x480>
    ea48:	00c00c44 	movi	r3,49
    ea4c:	9cc00044 	addi	r19,r19,1
    ea50:	003c2e06 	br	db0c <_dtoa_r+0x688>
    ea54:	b0800044 	addi	r2,r22,1
    ea58:	d8800315 	stw	r2,12(sp)
    ea5c:	00800e44 	movi	r2,57
    ea60:	b0800005 	stb	r2,0(r22)
    ea64:	d8800617 	ldw	r2,24(sp)
    ea68:	8023883a 	mov	r17,r16
    ea6c:	da000317 	ldw	r8,12(sp)
    ea70:	10800044 	addi	r2,r2,1
    ea74:	d9400117 	ldw	r5,4(sp)
    ea78:	d8800215 	stw	r2,8(sp)
    ea7c:	9021883a 	mov	r16,r18
    ea80:	01000e44 	movi	r4,57
    ea84:	003d4f06 	br	dfc4 <_dtoa_r+0xb40>
    ea88:	0029883a 	mov	r20,zero
    ea8c:	0021883a 	mov	r16,zero
    ea90:	003e7806 	br	e474 <_dtoa_r+0xff0>
    ea94:	d8801017 	ldw	r2,64(sp)
    ea98:	d9000117 	ldw	r4,4(sp)
    ea9c:	14c00044 	addi	r19,r2,1
    eaa0:	003c1106 	br	dae8 <_dtoa_r+0x664>
    eaa4:	103f1f1e 	bne	r2,zero,e724 <_dtoa_r+0x12a0>
    eaa8:	9880004c 	andi	r2,r19,1
    eaac:	103f1a1e 	bne	r2,zero,e718 <_dtoa_r+0x1294>
    eab0:	003f1c06 	br	e724 <_dtoa_r+0x12a0>
    eab4:	d8801017 	ldw	r2,64(sp)
    eab8:	ddc00c17 	ldw	r23,48(sp)
    eabc:	a811883a 	mov	r8,r21
    eac0:	10800044 	addi	r2,r2,1
    eac4:	d8800215 	stw	r2,8(sp)
    eac8:	003d5706 	br	e028 <_dtoa_r+0xba4>
    eacc:	98800e60 	cmpeqi	r2,r19,57
    ead0:	103fe01e 	bne	r2,zero,ea54 <_dtoa_r+0x15d0>
    ead4:	0440010e 	bge	zero,r17,eadc <_dtoa_r+0x1658>
    ead8:	acc00c44 	addi	r19,r21,49
    eadc:	8023883a 	mov	r17,r16
    eae0:	b2000044 	addi	r8,r22,1
    eae4:	003f1006 	br	e728 <_dtoa_r+0x12a4>
    eae8:	d8800217 	ldw	r2,8(sp)
    eaec:	108000c8 	cmpgei	r2,r2,3
    eaf0:	103e511e 	bne	r2,zero,e438 <_dtoa_r+0xfb4>
    eaf4:	dd400615 	stw	r21,24(sp)
    eaf8:	003e1406 	br	e34c <_dtoa_r+0xec8>
    eafc:	4029883a 	mov	r20,r8
    eb00:	003f8006 	br	e904 <_dtoa_r+0x1480>
    eb04:	d8800217 	ldw	r2,8(sp)
    eb08:	108000c8 	cmpgei	r2,r2,3
    eb0c:	103e4a1e 	bne	r2,zero,e438 <_dtoa_r+0xfb4>
    eb10:	d8800b17 	ldw	r2,44(sp)
    eb14:	dd400615 	stw	r21,24(sp)
    eb18:	d8800315 	stw	r2,12(sp)
    eb1c:	04bdb60e 	bge	zero,r18,e1f8 <_dtoa_r+0xd74>
    eb20:	003e6506 	br	e4b8 <_dtoa_r+0x1034>
    eb24:	04000084 	movi	r16,2
    eb28:	003b5706 	br	d888 <_dtoa_r+0x404>
    eb2c:	01c000b4 	movhi	r7,2
    eb30:	010000b4 	movhi	r4,2
    eb34:	39e02904 	addi	r7,r7,-32604
    eb38:	000d883a 	mov	r6,zero
    eb3c:	01406a84 	movi	r5,426
    eb40:	21202e04 	addi	r4,r4,-32584
    eb44:	0012f340 	call	12f34 <__assert_func>
    eb48:	000b883a 	mov	r5,zero
    eb4c:	003b1006 	br	d790 <_dtoa_r+0x30c>
    eb50:	e0001115 	stw	zero,68(fp)
    eb54:	000b883a 	mov	r5,zero
    eb58:	e009883a 	mov	r4,fp
    eb5c:	00101c40 	call	101c4 <_Balloc>
    eb60:	d8800115 	stw	r2,4(sp)
    eb64:	103ff126 	beq	r2,zero,eb2c <_dtoa_r+0x16a8>
    eb68:	d8800117 	ldw	r2,4(sp)
    eb6c:	d8001d15 	stw	zero,116(sp)
    eb70:	e0801015 	stw	r2,64(fp)
    eb74:	00bfffc4 	movi	r2,-1
    eb78:	d8800315 	stw	r2,12(sp)
    eb7c:	d8800b15 	stw	r2,44(sp)
    eb80:	00800044 	movi	r2,1
    eb84:	d8800515 	stw	r2,20(sp)
    eb88:	003c1306 	br	dbd8 <_dtoa_r+0x754>
    eb8c:	01c000b4 	movhi	r7,2
    eb90:	010000b4 	movhi	r4,2
    eb94:	39e02904 	addi	r7,r7,-32604
    eb98:	000d883a 	mov	r6,zero
    eb9c:	0140ba84 	movi	r5,746
    eba0:	21202e04 	addi	r4,r4,-32584
    eba4:	0012f340 	call	12f34 <__assert_func>
    eba8:	008000b4 	movhi	r2,2
    ebac:	10a02604 	addi	r2,r2,-32616
    ebb0:	d8800115 	stw	r2,4(sp)
    ebb4:	003a6506 	br	d54c <_dtoa_r+0xc8>
    ebb8:	18c00120 	cmpeqi	r3,r3,4
    ebbc:	183cc81e 	bne	r3,zero,dee0 <_dtoa_r+0xa5c>
    ebc0:	00c00f04 	movi	r3,60
    ebc4:	1885c83a 	sub	r2,r3,r2
    ebc8:	003cc006 	br	decc <_dtoa_r+0xa48>

0000ebcc <__sflush_r>:
    ebcc:	2880030b 	ldhu	r2,12(r5)
    ebd0:	defffb04 	addi	sp,sp,-20
    ebd4:	dcc00315 	stw	r19,12(sp)
    ebd8:	dc000015 	stw	r16,0(sp)
    ebdc:	dfc00415 	stw	ra,16(sp)
    ebe0:	dc800215 	stw	r18,8(sp)
    ebe4:	dc400115 	stw	r17,4(sp)
    ebe8:	10c0020c 	andi	r3,r2,8
    ebec:	2821883a 	mov	r16,r5
    ebf0:	2027883a 	mov	r19,r4
    ebf4:	18003f1e 	bne	r3,zero,ecf4 <__sflush_r+0x128>
    ebf8:	28c00117 	ldw	r3,4(r5)
    ebfc:	10820014 	ori	r2,r2,2048
    ec00:	2880030d 	sth	r2,12(r5)
    ec04:	00c0550e 	bge	zero,r3,ed5c <__sflush_r+0x190>
    ec08:	82000a17 	ldw	r8,40(r16)
    ec0c:	40003126 	beq	r8,zero,ecd4 <__sflush_r+0x108>
    ec10:	9c400017 	ldw	r17,0(r19)
    ec14:	1104000c 	andi	r4,r2,4096
    ec18:	98000015 	stw	zero,0(r19)
    ec1c:	1007883a 	mov	r3,r2
    ec20:	2000531e 	bne	r4,zero,ed70 <__sflush_r+0x1a4>
    ec24:	81400717 	ldw	r5,28(r16)
    ec28:	01c00044 	movi	r7,1
    ec2c:	000d883a 	mov	r6,zero
    ec30:	9809883a 	mov	r4,r19
    ec34:	403ee83a 	callr	r8
    ec38:	10ffffd8 	cmpnei	r3,r2,-1
    ec3c:	18005826 	beq	r3,zero,eda0 <__sflush_r+0x1d4>
    ec40:	80c0030b 	ldhu	r3,12(r16)
    ec44:	82000a17 	ldw	r8,40(r16)
    ec48:	18c0010c 	andi	r3,r3,4
    ec4c:	18000626 	beq	r3,zero,ec68 <__sflush_r+0x9c>
    ec50:	81000117 	ldw	r4,4(r16)
    ec54:	80c00c17 	ldw	r3,48(r16)
    ec58:	1105c83a 	sub	r2,r2,r4
    ec5c:	18000226 	beq	r3,zero,ec68 <__sflush_r+0x9c>
    ec60:	80c00f17 	ldw	r3,60(r16)
    ec64:	10c5c83a 	sub	r2,r2,r3
    ec68:	81400717 	ldw	r5,28(r16)
    ec6c:	100d883a 	mov	r6,r2
    ec70:	000f883a 	mov	r7,zero
    ec74:	9809883a 	mov	r4,r19
    ec78:	403ee83a 	callr	r8
    ec7c:	10ffffd8 	cmpnei	r3,r2,-1
    ec80:	18003d1e 	bne	r3,zero,ed78 <__sflush_r+0x1ac>
    ec84:	99000017 	ldw	r4,0(r19)
    ec88:	80c0030b 	ldhu	r3,12(r16)
    ec8c:	20004e26 	beq	r4,zero,edc8 <__sflush_r+0x1fc>
    ec90:	21400760 	cmpeqi	r5,r4,29
    ec94:	2800021e 	bne	r5,zero,eca0 <__sflush_r+0xd4>
    ec98:	210005a0 	cmpeqi	r4,r4,22
    ec9c:	20002c26 	beq	r4,zero,ed50 <__sflush_r+0x184>
    eca0:	80800417 	ldw	r2,16(r16)
    eca4:	18fdffcc 	andi	r3,r3,63487
    eca8:	80c0030d 	sth	r3,12(r16)
    ecac:	80000115 	stw	zero,4(r16)
    ecb0:	80800015 	stw	r2,0(r16)
    ecb4:	81400c17 	ldw	r5,48(r16)
    ecb8:	9c400015 	stw	r17,0(r19)
    ecbc:	28000526 	beq	r5,zero,ecd4 <__sflush_r+0x108>
    ecc0:	80801004 	addi	r2,r16,64
    ecc4:	28800226 	beq	r5,r2,ecd0 <__sflush_r+0x104>
    ecc8:	9809883a 	mov	r4,r19
    eccc:	000f3a00 	call	f3a0 <_free_r>
    ecd0:	80000c15 	stw	zero,48(r16)
    ecd4:	0005883a 	mov	r2,zero
    ecd8:	dfc00417 	ldw	ra,16(sp)
    ecdc:	dcc00317 	ldw	r19,12(sp)
    ece0:	dc800217 	ldw	r18,8(sp)
    ece4:	dc400117 	ldw	r17,4(sp)
    ece8:	dc000017 	ldw	r16,0(sp)
    ecec:	dec00504 	addi	sp,sp,20
    ecf0:	f800283a 	ret
    ecf4:	2c800417 	ldw	r18,16(r5)
    ecf8:	903ff626 	beq	r18,zero,ecd4 <__sflush_r+0x108>
    ecfc:	2c400017 	ldw	r17,0(r5)
    ed00:	108000cc 	andi	r2,r2,3
    ed04:	2c800015 	stw	r18,0(r5)
    ed08:	8ca3c83a 	sub	r17,r17,r18
    ed0c:	1000161e 	bne	r2,zero,ed68 <__sflush_r+0x19c>
    ed10:	28800517 	ldw	r2,20(r5)
    ed14:	80800215 	stw	r2,8(r16)
    ed18:	04400316 	blt	zero,r17,ed28 <__sflush_r+0x15c>
    ed1c:	003fed06 	br	ecd4 <__sflush_r+0x108>
    ed20:	90a5883a 	add	r18,r18,r2
    ed24:	047feb0e 	bge	zero,r17,ecd4 <__sflush_r+0x108>
    ed28:	80800917 	ldw	r2,36(r16)
    ed2c:	81400717 	ldw	r5,28(r16)
    ed30:	880f883a 	mov	r7,r17
    ed34:	900d883a 	mov	r6,r18
    ed38:	9809883a 	mov	r4,r19
    ed3c:	103ee83a 	callr	r2
    ed40:	88a3c83a 	sub	r17,r17,r2
    ed44:	00bff616 	blt	zero,r2,ed20 <__sflush_r+0x154>
    ed48:	80c0030b 	ldhu	r3,12(r16)
    ed4c:	00bfffc4 	movi	r2,-1
    ed50:	18c01014 	ori	r3,r3,64
    ed54:	80c0030d 	sth	r3,12(r16)
    ed58:	003fdf06 	br	ecd8 <__sflush_r+0x10c>
    ed5c:	28c00f17 	ldw	r3,60(r5)
    ed60:	00ffa916 	blt	zero,r3,ec08 <__sflush_r+0x3c>
    ed64:	003fdb06 	br	ecd4 <__sflush_r+0x108>
    ed68:	0005883a 	mov	r2,zero
    ed6c:	003fe906 	br	ed14 <__sflush_r+0x148>
    ed70:	80801417 	ldw	r2,80(r16)
    ed74:	003fb406 	br	ec48 <__sflush_r+0x7c>
    ed78:	80c0030b 	ldhu	r3,12(r16)
    ed7c:	81000417 	ldw	r4,16(r16)
    ed80:	80000115 	stw	zero,4(r16)
    ed84:	197dffcc 	andi	r5,r3,63487
    ed88:	8140030d 	sth	r5,12(r16)
    ed8c:	81000015 	stw	r4,0(r16)
    ed90:	18c4000c 	andi	r3,r3,4096
    ed94:	183fc726 	beq	r3,zero,ecb4 <__sflush_r+0xe8>
    ed98:	80801415 	stw	r2,80(r16)
    ed9c:	003fc506 	br	ecb4 <__sflush_r+0xe8>
    eda0:	98c00017 	ldw	r3,0(r19)
    eda4:	183fa626 	beq	r3,zero,ec40 <__sflush_r+0x74>
    eda8:	19000760 	cmpeqi	r4,r3,29
    edac:	20000e1e 	bne	r4,zero,ede8 <__sflush_r+0x21c>
    edb0:	18c00598 	cmpnei	r3,r3,22
    edb4:	18000c26 	beq	r3,zero,ede8 <__sflush_r+0x21c>
    edb8:	80c0030b 	ldhu	r3,12(r16)
    edbc:	18c01014 	ori	r3,r3,64
    edc0:	80c0030d 	sth	r3,12(r16)
    edc4:	003fc406 	br	ecd8 <__sflush_r+0x10c>
    edc8:	81000417 	ldw	r4,16(r16)
    edcc:	197dffcc 	andi	r5,r3,63487
    edd0:	8140030d 	sth	r5,12(r16)
    edd4:	80000115 	stw	zero,4(r16)
    edd8:	81000015 	stw	r4,0(r16)
    eddc:	18c4000c 	andi	r3,r3,4096
    ede0:	183fb426 	beq	r3,zero,ecb4 <__sflush_r+0xe8>
    ede4:	003fec06 	br	ed98 <__sflush_r+0x1cc>
    ede8:	9c400015 	stw	r17,0(r19)
    edec:	0005883a 	mov	r2,zero
    edf0:	003fb906 	br	ecd8 <__sflush_r+0x10c>

0000edf4 <_fflush_r>:
    edf4:	defffd04 	addi	sp,sp,-12
    edf8:	dc000115 	stw	r16,4(sp)
    edfc:	dfc00215 	stw	ra,8(sp)
    ee00:	2021883a 	mov	r16,r4
    ee04:	20000226 	beq	r4,zero,ee10 <_fflush_r+0x1c>
    ee08:	20800e17 	ldw	r2,56(r4)
    ee0c:	10000726 	beq	r2,zero,ee2c <_fflush_r+0x38>
    ee10:	2880030f 	ldh	r2,12(r5)
    ee14:	10000a1e 	bne	r2,zero,ee40 <_fflush_r+0x4c>
    ee18:	0005883a 	mov	r2,zero
    ee1c:	dfc00217 	ldw	ra,8(sp)
    ee20:	dc000117 	ldw	r16,4(sp)
    ee24:	dec00304 	addi	sp,sp,12
    ee28:	f800283a 	ret
    ee2c:	d9400015 	stw	r5,0(sp)
    ee30:	000f23c0 	call	f23c <__sinit>
    ee34:	d9400017 	ldw	r5,0(sp)
    ee38:	2880030f 	ldh	r2,12(r5)
    ee3c:	103ff626 	beq	r2,zero,ee18 <_fflush_r+0x24>
    ee40:	8009883a 	mov	r4,r16
    ee44:	dfc00217 	ldw	ra,8(sp)
    ee48:	dc000117 	ldw	r16,4(sp)
    ee4c:	dec00304 	addi	sp,sp,12
    ee50:	000ebcc1 	jmpi	ebcc <__sflush_r>

0000ee54 <fflush>:
    ee54:	20001726 	beq	r4,zero,eeb4 <fflush+0x60>
    ee58:	008000b4 	movhi	r2,2
    ee5c:	200b883a 	mov	r5,r4
    ee60:	11288b17 	ldw	r4,-24020(r2)
    ee64:	20000226 	beq	r4,zero,ee70 <fflush+0x1c>
    ee68:	20800e17 	ldw	r2,56(r4)
    ee6c:	10000526 	beq	r2,zero,ee84 <fflush+0x30>
    ee70:	2880030f 	ldh	r2,12(r5)
    ee74:	1000021e 	bne	r2,zero,ee80 <fflush+0x2c>
    ee78:	0005883a 	mov	r2,zero
    ee7c:	f800283a 	ret
    ee80:	000ebcc1 	jmpi	ebcc <__sflush_r>
    ee84:	defffd04 	addi	sp,sp,-12
    ee88:	d9400115 	stw	r5,4(sp)
    ee8c:	d9000015 	stw	r4,0(sp)
    ee90:	dfc00215 	stw	ra,8(sp)
    ee94:	000f23c0 	call	f23c <__sinit>
    ee98:	d9400117 	ldw	r5,4(sp)
    ee9c:	d9000017 	ldw	r4,0(sp)
    eea0:	2880030f 	ldh	r2,12(r5)
    eea4:	10000826 	beq	r2,zero,eec8 <fflush+0x74>
    eea8:	dfc00217 	ldw	ra,8(sp)
    eeac:	dec00304 	addi	sp,sp,12
    eeb0:	000ebcc1 	jmpi	ebcc <__sflush_r>
    eeb4:	008000b4 	movhi	r2,2
    eeb8:	11288a17 	ldw	r4,-24024(r2)
    eebc:	01400074 	movhi	r5,1
    eec0:	297b7d04 	addi	r5,r5,-4620
    eec4:	000fbc81 	jmpi	fbc8 <_fwalk_reent>
    eec8:	0005883a 	mov	r2,zero
    eecc:	dfc00217 	ldw	ra,8(sp)
    eed0:	dec00304 	addi	sp,sp,12
    eed4:	f800283a 	ret

0000eed8 <__fp_lock>:
    eed8:	0005883a 	mov	r2,zero
    eedc:	f800283a 	ret

0000eee0 <_cleanup_r>:
    eee0:	01400074 	movhi	r5,1
    eee4:	294c7004 	addi	r5,r5,12736
    eee8:	000fbc81 	jmpi	fbc8 <_fwalk_reent>

0000eeec <__fp_unlock>:
    eeec:	0005883a 	mov	r2,zero
    eef0:	f800283a 	ret

0000eef4 <__sinit.part.0>:
    eef4:	00c00074 	movhi	r3,1
    eef8:	20800117 	ldw	r2,4(r4)
    eefc:	18fbb804 	addi	r3,r3,-4384
    ef00:	20c00f15 	stw	r3,60(r4)
    ef04:	2140bb04 	addi	r5,r4,748
    ef08:	00c000c4 	movi	r3,3
    ef0c:	20c0b915 	stw	r3,740(r4)
    ef10:	2140ba15 	stw	r5,744(r4)
    ef14:	2000b815 	stw	zero,736(r4)
    ef18:	10001705 	stb	zero,92(r2)
    ef1c:	10001745 	stb	zero,93(r2)
    ef20:	10001785 	stb	zero,94(r2)
    ef24:	100017c5 	stb	zero,95(r2)
    ef28:	10001805 	stb	zero,96(r2)
    ef2c:	10001845 	stb	zero,97(r2)
    ef30:	10001885 	stb	zero,98(r2)
    ef34:	100018c5 	stb	zero,99(r2)
    ef38:	00c00104 	movi	r3,4
    ef3c:	10c00315 	stw	r3,12(r2)
    ef40:	02000074 	movhi	r8,1
    ef44:	20c00217 	ldw	r3,8(r4)
    ef48:	01c00074 	movhi	r7,1
    ef4c:	01800074 	movhi	r6,1
    ef50:	01400074 	movhi	r5,1
    ef54:	42063c04 	addi	r8,r8,6384
    ef58:	39c65304 	addi	r7,r7,6476
    ef5c:	31867304 	addi	r6,r6,6604
    ef60:	29468a04 	addi	r5,r5,6696
    ef64:	02400074 	movhi	r9,1
    ef68:	10001915 	stw	zero,100(r2)
    ef6c:	10000015 	stw	zero,0(r2)
    ef70:	10000115 	stw	zero,4(r2)
    ef74:	10000215 	stw	zero,8(r2)
    ef78:	10000415 	stw	zero,16(r2)
    ef7c:	10000515 	stw	zero,20(r2)
    ef80:	10000615 	stw	zero,24(r2)
    ef84:	10800715 	stw	r2,28(r2)
    ef88:	12000815 	stw	r8,32(r2)
    ef8c:	11c00915 	stw	r7,36(r2)
    ef90:	11800a15 	stw	r6,40(r2)
    ef94:	11400b15 	stw	r5,44(r2)
    ef98:	4a400284 	addi	r9,r9,10
    ef9c:	1a400315 	stw	r9,12(r3)
    efa0:	18001915 	stw	zero,100(r3)
    efa4:	18000015 	stw	zero,0(r3)
    efa8:	18000115 	stw	zero,4(r3)
    efac:	18000215 	stw	zero,8(r3)
    efb0:	18000415 	stw	zero,16(r3)
    efb4:	18001705 	stb	zero,92(r3)
    efb8:	18001745 	stb	zero,93(r3)
    efbc:	18001785 	stb	zero,94(r3)
    efc0:	180017c5 	stb	zero,95(r3)
    efc4:	18001805 	stb	zero,96(r3)
    efc8:	18001845 	stb	zero,97(r3)
    efcc:	18001885 	stb	zero,98(r3)
    efd0:	180018c5 	stb	zero,99(r3)
    efd4:	20800317 	ldw	r2,12(r4)
    efd8:	024000b4 	movhi	r9,2
    efdc:	18000515 	stw	zero,20(r3)
    efe0:	18000615 	stw	zero,24(r3)
    efe4:	18c00715 	stw	r3,28(r3)
    efe8:	1a000815 	stw	r8,32(r3)
    efec:	19c00915 	stw	r7,36(r3)
    eff0:	19800a15 	stw	r6,40(r3)
    eff4:	19400b15 	stw	r5,44(r3)
    eff8:	4a400484 	addi	r9,r9,18
    effc:	10001915 	stw	zero,100(r2)
    f000:	10000015 	stw	zero,0(r2)
    f004:	10000115 	stw	zero,4(r2)
    f008:	10000215 	stw	zero,8(r2)
    f00c:	12400315 	stw	r9,12(r2)
    f010:	10000415 	stw	zero,16(r2)
    f014:	10000515 	stw	zero,20(r2)
    f018:	10000615 	stw	zero,24(r2)
    f01c:	10001705 	stb	zero,92(r2)
    f020:	10001745 	stb	zero,93(r2)
    f024:	10001785 	stb	zero,94(r2)
    f028:	100017c5 	stb	zero,95(r2)
    f02c:	10001805 	stb	zero,96(r2)
    f030:	10001845 	stb	zero,97(r2)
    f034:	10001885 	stb	zero,98(r2)
    f038:	100018c5 	stb	zero,99(r2)
    f03c:	10800715 	stw	r2,28(r2)
    f040:	12000815 	stw	r8,32(r2)
    f044:	11c00915 	stw	r7,36(r2)
    f048:	11800a15 	stw	r6,40(r2)
    f04c:	11400b15 	stw	r5,44(r2)
    f050:	00800044 	movi	r2,1
    f054:	20800e15 	stw	r2,56(r4)
    f058:	f800283a 	ret

0000f05c <__sfmoreglue>:
    f05c:	defffc04 	addi	sp,sp,-16
    f060:	dc800215 	stw	r18,8(sp)
    f064:	2825883a 	mov	r18,r5
    f068:	dc000015 	stw	r16,0(sp)
    f06c:	01401a04 	movi	r5,104
    f070:	2021883a 	mov	r16,r4
    f074:	913fffc4 	addi	r4,r18,-1
    f078:	dfc00315 	stw	ra,12(sp)
    f07c:	dc400115 	stw	r17,4(sp)
    f080:	00079b80 	call	79b8 <__mulsi3>
    f084:	8009883a 	mov	r4,r16
    f088:	11401d04 	addi	r5,r2,116
    f08c:	1023883a 	mov	r17,r2
    f090:	000a4f80 	call	a4f8 <_malloc_r>
    f094:	1021883a 	mov	r16,r2
    f098:	10000726 	beq	r2,zero,f0b8 <__sfmoreglue+0x5c>
    f09c:	11000304 	addi	r4,r2,12
    f0a0:	10000015 	stw	zero,0(r2)
    f0a4:	14800115 	stw	r18,4(r2)
    f0a8:	11000215 	stw	r4,8(r2)
    f0ac:	89801a04 	addi	r6,r17,104
    f0b0:	000b883a 	mov	r5,zero
    f0b4:	00100d40 	call	100d4 <memset>
    f0b8:	8005883a 	mov	r2,r16
    f0bc:	dfc00317 	ldw	ra,12(sp)
    f0c0:	dc800217 	ldw	r18,8(sp)
    f0c4:	dc400117 	ldw	r17,4(sp)
    f0c8:	dc000017 	ldw	r16,0(sp)
    f0cc:	dec00404 	addi	sp,sp,16
    f0d0:	f800283a 	ret

0000f0d4 <__sfp>:
    f0d4:	defffb04 	addi	sp,sp,-20
    f0d8:	008000b4 	movhi	r2,2
    f0dc:	dc000015 	stw	r16,0(sp)
    f0e0:	14288a17 	ldw	r16,-24024(r2)
    f0e4:	dc400115 	stw	r17,4(sp)
    f0e8:	dfc00415 	stw	ra,16(sp)
    f0ec:	80800e17 	ldw	r2,56(r16)
    f0f0:	dcc00315 	stw	r19,12(sp)
    f0f4:	dc800215 	stw	r18,8(sp)
    f0f8:	2023883a 	mov	r17,r4
    f0fc:	10003126 	beq	r2,zero,f1c4 <__sfp+0xf0>
    f100:	8100ba17 	ldw	r4,744(r16)
    f104:	8140b917 	ldw	r5,740(r16)
    f108:	04c00104 	movi	r19,4
    f10c:	8400b804 	addi	r16,r16,736
    f110:	297fffc4 	addi	r5,r5,-1
    f114:	2800050e 	bge	r5,zero,f12c <__sfp+0x58>
    f118:	00002406 	br	f1ac <__sfp+0xd8>
    f11c:	297fffc4 	addi	r5,r5,-1
    f120:	28bfffd8 	cmpnei	r2,r5,-1
    f124:	21001a04 	addi	r4,r4,104
    f128:	10002026 	beq	r2,zero,f1ac <__sfp+0xd8>
    f12c:	2080030f 	ldh	r2,12(r4)
    f130:	103ffa1e 	bne	r2,zero,f11c <__sfp+0x48>
    f134:	00bffff4 	movhi	r2,65535
    f138:	10800044 	addi	r2,r2,1
    f13c:	20001915 	stw	zero,100(r4)
    f140:	20000015 	stw	zero,0(r4)
    f144:	20000115 	stw	zero,4(r4)
    f148:	20000215 	stw	zero,8(r4)
    f14c:	20800315 	stw	r2,12(r4)
    f150:	20000415 	stw	zero,16(r4)
    f154:	20000515 	stw	zero,20(r4)
    f158:	20000615 	stw	zero,24(r4)
    f15c:	20001705 	stb	zero,92(r4)
    f160:	20001745 	stb	zero,93(r4)
    f164:	20001785 	stb	zero,94(r4)
    f168:	200017c5 	stb	zero,95(r4)
    f16c:	20001805 	stb	zero,96(r4)
    f170:	20001845 	stb	zero,97(r4)
    f174:	20001885 	stb	zero,98(r4)
    f178:	200018c5 	stb	zero,99(r4)
    f17c:	20000c15 	stw	zero,48(r4)
    f180:	20000d15 	stw	zero,52(r4)
    f184:	20001115 	stw	zero,68(r4)
    f188:	20001215 	stw	zero,72(r4)
    f18c:	2005883a 	mov	r2,r4
    f190:	dfc00417 	ldw	ra,16(sp)
    f194:	dcc00317 	ldw	r19,12(sp)
    f198:	dc800217 	ldw	r18,8(sp)
    f19c:	dc400117 	ldw	r17,4(sp)
    f1a0:	dc000017 	ldw	r16,0(sp)
    f1a4:	dec00504 	addi	sp,sp,20
    f1a8:	f800283a 	ret
    f1ac:	80800017 	ldw	r2,0(r16)
    f1b0:	10000726 	beq	r2,zero,f1d0 <__sfp+0xfc>
    f1b4:	11000217 	ldw	r4,8(r2)
    f1b8:	11400117 	ldw	r5,4(r2)
    f1bc:	1021883a 	mov	r16,r2
    f1c0:	003fd306 	br	f110 <__sfp+0x3c>
    f1c4:	8009883a 	mov	r4,r16
    f1c8:	000eef40 	call	eef4 <__sinit.part.0>
    f1cc:	003fcc06 	br	f100 <__sfp+0x2c>
    f1d0:	01406b04 	movi	r5,428
    f1d4:	8809883a 	mov	r4,r17
    f1d8:	000a4f80 	call	a4f8 <_malloc_r>
    f1dc:	1025883a 	mov	r18,r2
    f1e0:	10000c26 	beq	r2,zero,f214 <__sfp+0x140>
    f1e4:	11000304 	addi	r4,r2,12
    f1e8:	11000215 	stw	r4,8(r2)
    f1ec:	000b883a 	mov	r5,zero
    f1f0:	10000015 	stw	zero,0(r2)
    f1f4:	14c00115 	stw	r19,4(r2)
    f1f8:	01806804 	movi	r6,416
    f1fc:	00100d40 	call	100d4 <memset>
    f200:	1009883a 	mov	r4,r2
    f204:	84800015 	stw	r18,0(r16)
    f208:	014000c4 	movi	r5,3
    f20c:	9021883a 	mov	r16,r18
    f210:	003fc606 	br	f12c <__sfp+0x58>
    f214:	80000015 	stw	zero,0(r16)
    f218:	00800304 	movi	r2,12
    f21c:	88800015 	stw	r2,0(r17)
    f220:	0009883a 	mov	r4,zero
    f224:	003fd906 	br	f18c <__sfp+0xb8>

0000f228 <_cleanup>:
    f228:	008000b4 	movhi	r2,2
    f22c:	11288a17 	ldw	r4,-24024(r2)
    f230:	01400074 	movhi	r5,1
    f234:	294c7004 	addi	r5,r5,12736
    f238:	000fbc81 	jmpi	fbc8 <_fwalk_reent>

0000f23c <__sinit>:
    f23c:	20800e17 	ldw	r2,56(r4)
    f240:	10000126 	beq	r2,zero,f248 <__sinit+0xc>
    f244:	f800283a 	ret
    f248:	000eef41 	jmpi	eef4 <__sinit.part.0>

0000f24c <__sfp_lock_acquire>:
    f24c:	f800283a 	ret

0000f250 <__sfp_lock_release>:
    f250:	f800283a 	ret

0000f254 <__sinit_lock_acquire>:
    f254:	f800283a 	ret

0000f258 <__sinit_lock_release>:
    f258:	f800283a 	ret

0000f25c <__fp_lock_all>:
    f25c:	008000b4 	movhi	r2,2
    f260:	11288b17 	ldw	r4,-24020(r2)
    f264:	01400074 	movhi	r5,1
    f268:	297bb604 	addi	r5,r5,-4392
    f26c:	000fb301 	jmpi	fb30 <_fwalk>

0000f270 <__fp_unlock_all>:
    f270:	008000b4 	movhi	r2,2
    f274:	11288b17 	ldw	r4,-24020(r2)
    f278:	01400074 	movhi	r5,1
    f27c:	297bbb04 	addi	r5,r5,-4372
    f280:	000fb301 	jmpi	fb30 <_fwalk>

0000f284 <_malloc_trim_r>:
    f284:	defffb04 	addi	sp,sp,-20
    f288:	dcc00315 	stw	r19,12(sp)
    f28c:	04c000b4 	movhi	r19,2
    f290:	dc800215 	stw	r18,8(sp)
    f294:	dc400115 	stw	r17,4(sp)
    f298:	dc000015 	stw	r16,0(sp)
    f29c:	dfc00415 	stw	ra,16(sp)
    f2a0:	2821883a 	mov	r16,r5
    f2a4:	9ce27d04 	addi	r19,r19,-30220
    f2a8:	2025883a 	mov	r18,r4
    f2ac:	00154500 	call	15450 <__malloc_lock>
    f2b0:	98800217 	ldw	r2,8(r19)
    f2b4:	14400117 	ldw	r17,4(r2)
    f2b8:	00bfff04 	movi	r2,-4
    f2bc:	88a2703a 	and	r17,r17,r2
    f2c0:	8c21c83a 	sub	r16,r17,r16
    f2c4:	8403fbc4 	addi	r16,r16,4079
    f2c8:	8020d33a 	srli	r16,r16,12
    f2cc:	843fffc4 	addi	r16,r16,-1
    f2d0:	8020933a 	slli	r16,r16,12
    f2d4:	80840008 	cmpgei	r2,r16,4096
    f2d8:	10000626 	beq	r2,zero,f2f4 <_malloc_trim_r+0x70>
    f2dc:	000b883a 	mov	r5,zero
    f2e0:	9009883a 	mov	r4,r18
    f2e4:	000af1c0 	call	af1c <_sbrk_r>
    f2e8:	98c00217 	ldw	r3,8(r19)
    f2ec:	1c47883a 	add	r3,r3,r17
    f2f0:	10c00a26 	beq	r2,r3,f31c <_malloc_trim_r+0x98>
    f2f4:	9009883a 	mov	r4,r18
    f2f8:	00154740 	call	15474 <__malloc_unlock>
    f2fc:	0005883a 	mov	r2,zero
    f300:	dfc00417 	ldw	ra,16(sp)
    f304:	dcc00317 	ldw	r19,12(sp)
    f308:	dc800217 	ldw	r18,8(sp)
    f30c:	dc400117 	ldw	r17,4(sp)
    f310:	dc000017 	ldw	r16,0(sp)
    f314:	dec00504 	addi	sp,sp,20
    f318:	f800283a 	ret
    f31c:	040bc83a 	sub	r5,zero,r16
    f320:	9009883a 	mov	r4,r18
    f324:	000af1c0 	call	af1c <_sbrk_r>
    f328:	10bfffd8 	cmpnei	r2,r2,-1
    f32c:	10000d26 	beq	r2,zero,f364 <_malloc_trim_r+0xe0>
    f330:	008000b4 	movhi	r2,2
    f334:	10afc917 	ldw	r2,-16604(r2)
    f338:	98c00217 	ldw	r3,8(r19)
    f33c:	8c23c83a 	sub	r17,r17,r16
    f340:	8c400054 	ori	r17,r17,1
    f344:	1421c83a 	sub	r16,r2,r16
    f348:	1c400115 	stw	r17,4(r3)
    f34c:	008000b4 	movhi	r2,2
    f350:	9009883a 	mov	r4,r18
    f354:	142fc915 	stw	r16,-16604(r2)
    f358:	00154740 	call	15474 <__malloc_unlock>
    f35c:	00800044 	movi	r2,1
    f360:	003fe706 	br	f300 <_malloc_trim_r+0x7c>
    f364:	000b883a 	mov	r5,zero
    f368:	9009883a 	mov	r4,r18
    f36c:	000af1c0 	call	af1c <_sbrk_r>
    f370:	99000217 	ldw	r4,8(r19)
    f374:	1107c83a 	sub	r3,r2,r4
    f378:	19400410 	cmplti	r5,r3,16
    f37c:	283fdd1e 	bne	r5,zero,f2f4 <_malloc_trim_r+0x70>
    f380:	014000b4 	movhi	r5,2
    f384:	29688c17 	ldw	r5,-24016(r5)
    f388:	18c00054 	ori	r3,r3,1
    f38c:	20c00115 	stw	r3,4(r4)
    f390:	1145c83a 	sub	r2,r2,r5
    f394:	014000b4 	movhi	r5,2
    f398:	28afc915 	stw	r2,-16604(r5)
    f39c:	003fd506 	br	f2f4 <_malloc_trim_r+0x70>

0000f3a0 <_free_r>:
    f3a0:	28004f26 	beq	r5,zero,f4e0 <_free_r+0x140>
    f3a4:	defffd04 	addi	sp,sp,-12
    f3a8:	dc400115 	stw	r17,4(sp)
    f3ac:	dc000015 	stw	r16,0(sp)
    f3b0:	2023883a 	mov	r17,r4
    f3b4:	2821883a 	mov	r16,r5
    f3b8:	dfc00215 	stw	ra,8(sp)
    f3bc:	00154500 	call	15450 <__malloc_lock>
    f3c0:	81ffff17 	ldw	r7,-4(r16)
    f3c4:	00bfff84 	movi	r2,-2
    f3c8:	80fffe04 	addi	r3,r16,-8
    f3cc:	3884703a 	and	r2,r7,r2
    f3d0:	010000b4 	movhi	r4,2
    f3d4:	188d883a 	add	r6,r3,r2
    f3d8:	21227d04 	addi	r4,r4,-30220
    f3dc:	31400117 	ldw	r5,4(r6)
    f3e0:	22000217 	ldw	r8,8(r4)
    f3e4:	027fff04 	movi	r9,-4
    f3e8:	2a4a703a 	and	r5,r5,r9
    f3ec:	41806426 	beq	r8,r6,f580 <_free_r+0x1e0>
    f3f0:	31400115 	stw	r5,4(r6)
    f3f4:	39c0004c 	andi	r7,r7,1
    f3f8:	3151883a 	add	r8,r6,r5
    f3fc:	3800281e 	bne	r7,zero,f4a0 <_free_r+0x100>
    f400:	82bffe17 	ldw	r10,-8(r16)
    f404:	42000117 	ldw	r8,4(r8)
    f408:	01c000b4 	movhi	r7,2
    f40c:	1a87c83a 	sub	r3,r3,r10
    f410:	1a400217 	ldw	r9,8(r3)
    f414:	39e27f04 	addi	r7,r7,-30212
    f418:	1285883a 	add	r2,r2,r10
    f41c:	4200004c 	andi	r8,r8,1
    f420:	49c04c26 	beq	r9,r7,f554 <_free_r+0x1b4>
    f424:	1a800317 	ldw	r10,12(r3)
    f428:	4a800315 	stw	r10,12(r9)
    f42c:	52400215 	stw	r9,8(r10)
    f430:	40007126 	beq	r8,zero,f5f8 <_free_r+0x258>
    f434:	11400054 	ori	r5,r2,1
    f438:	19400115 	stw	r5,4(r3)
    f43c:	30800015 	stw	r2,0(r6)
    f440:	11408028 	cmpgeui	r5,r2,512
    f444:	28002c1e 	bne	r5,zero,f4f8 <_free_r+0x158>
    f448:	100ad0fa 	srli	r5,r2,3
    f44c:	100cd17a 	srli	r6,r2,5
    f450:	00800044 	movi	r2,1
    f454:	29400044 	addi	r5,r5,1
    f458:	280a90fa 	slli	r5,r5,3
    f45c:	21c00117 	ldw	r7,4(r4)
    f460:	1184983a 	sll	r2,r2,r6
    f464:	214b883a 	add	r5,r4,r5
    f468:	29800017 	ldw	r6,0(r5)
    f46c:	11c4b03a 	or	r2,r2,r7
    f470:	29fffe04 	addi	r7,r5,-8
    f474:	19c00315 	stw	r7,12(r3)
    f478:	19800215 	stw	r6,8(r3)
    f47c:	20800115 	stw	r2,4(r4)
    f480:	28c00015 	stw	r3,0(r5)
    f484:	30c00315 	stw	r3,12(r6)
    f488:	8809883a 	mov	r4,r17
    f48c:	dfc00217 	ldw	ra,8(sp)
    f490:	dc400117 	ldw	r17,4(sp)
    f494:	dc000017 	ldw	r16,0(sp)
    f498:	dec00304 	addi	sp,sp,12
    f49c:	00154741 	jmpi	15474 <__malloc_unlock>
    f4a0:	41c00117 	ldw	r7,4(r8)
    f4a4:	39c0004c 	andi	r7,r7,1
    f4a8:	38000e1e 	bne	r7,zero,f4e4 <_free_r+0x144>
    f4ac:	01c000b4 	movhi	r7,2
    f4b0:	1145883a 	add	r2,r2,r5
    f4b4:	39e27f04 	addi	r7,r7,-30212
    f4b8:	31400217 	ldw	r5,8(r6)
    f4bc:	12400054 	ori	r9,r2,1
    f4c0:	1891883a 	add	r8,r3,r2
    f4c4:	29c05226 	beq	r5,r7,f610 <_free_r+0x270>
    f4c8:	31800317 	ldw	r6,12(r6)
    f4cc:	29800315 	stw	r6,12(r5)
    f4d0:	31400215 	stw	r5,8(r6)
    f4d4:	1a400115 	stw	r9,4(r3)
    f4d8:	40800015 	stw	r2,0(r8)
    f4dc:	003fd806 	br	f440 <_free_r+0xa0>
    f4e0:	f800283a 	ret
    f4e4:	11400054 	ori	r5,r2,1
    f4e8:	817fff15 	stw	r5,-4(r16)
    f4ec:	30800015 	stw	r2,0(r6)
    f4f0:	11408028 	cmpgeui	r5,r2,512
    f4f4:	283fd426 	beq	r5,zero,f448 <_free_r+0xa8>
    f4f8:	100ad27a 	srli	r5,r2,9
    f4fc:	29800168 	cmpgeui	r6,r5,5
    f500:	3000341e 	bne	r6,zero,f5d4 <_free_r+0x234>
    f504:	100ad1ba 	srli	r5,r2,6
    f508:	29800e44 	addi	r6,r5,57
    f50c:	300c90fa 	slli	r6,r6,3
    f510:	29c00e04 	addi	r7,r5,56
    f514:	218d883a 	add	r6,r4,r6
    f518:	31400017 	ldw	r5,0(r6)
    f51c:	31bffe04 	addi	r6,r6,-8
    f520:	31404226 	beq	r6,r5,f62c <_free_r+0x28c>
    f524:	01ffff04 	movi	r7,-4
    f528:	29000117 	ldw	r4,4(r5)
    f52c:	21c8703a 	and	r4,r4,r7
    f530:	1100022e 	bgeu	r2,r4,f53c <_free_r+0x19c>
    f534:	29400217 	ldw	r5,8(r5)
    f538:	317ffb1e 	bne	r6,r5,f528 <_free_r+0x188>
    f53c:	29800317 	ldw	r6,12(r5)
    f540:	19800315 	stw	r6,12(r3)
    f544:	19400215 	stw	r5,8(r3)
    f548:	30c00215 	stw	r3,8(r6)
    f54c:	28c00315 	stw	r3,12(r5)
    f550:	003fcd06 	br	f488 <_free_r+0xe8>
    f554:	40004d1e 	bne	r8,zero,f68c <_free_r+0x2ec>
    f558:	31000317 	ldw	r4,12(r6)
    f55c:	31800217 	ldw	r6,8(r6)
    f560:	2885883a 	add	r2,r5,r2
    f564:	11400054 	ori	r5,r2,1
    f568:	31000315 	stw	r4,12(r6)
    f56c:	21800215 	stw	r6,8(r4)
    f570:	19400115 	stw	r5,4(r3)
    f574:	1887883a 	add	r3,r3,r2
    f578:	18800015 	stw	r2,0(r3)
    f57c:	003fc206 	br	f488 <_free_r+0xe8>
    f580:	39c0004c 	andi	r7,r7,1
    f584:	1145883a 	add	r2,r2,r5
    f588:	3800071e 	bne	r7,zero,f5a8 <_free_r+0x208>
    f58c:	81fffe17 	ldw	r7,-8(r16)
    f590:	19c7c83a 	sub	r3,r3,r7
    f594:	19400317 	ldw	r5,12(r3)
    f598:	19800217 	ldw	r6,8(r3)
    f59c:	11c5883a 	add	r2,r2,r7
    f5a0:	31400315 	stw	r5,12(r6)
    f5a4:	29800215 	stw	r6,8(r5)
    f5a8:	014000b4 	movhi	r5,2
    f5ac:	11800054 	ori	r6,r2,1
    f5b0:	29688d17 	ldw	r5,-24012(r5)
    f5b4:	19800115 	stw	r6,4(r3)
    f5b8:	20c00215 	stw	r3,8(r4)
    f5bc:	117fb236 	bltu	r2,r5,f488 <_free_r+0xe8>
    f5c0:	008000b4 	movhi	r2,2
    f5c4:	116fbe17 	ldw	r5,-16648(r2)
    f5c8:	8809883a 	mov	r4,r17
    f5cc:	000f2840 	call	f284 <_malloc_trim_r>
    f5d0:	003fad06 	br	f488 <_free_r+0xe8>
    f5d4:	29800568 	cmpgeui	r6,r5,21
    f5d8:	30000926 	beq	r6,zero,f600 <_free_r+0x260>
    f5dc:	29801568 	cmpgeui	r6,r5,85
    f5e0:	3000191e 	bne	r6,zero,f648 <_free_r+0x2a8>
    f5e4:	100ad33a 	srli	r5,r2,12
    f5e8:	29801bc4 	addi	r6,r5,111
    f5ec:	300c90fa 	slli	r6,r6,3
    f5f0:	29c01b84 	addi	r7,r5,110
    f5f4:	003fc706 	br	f514 <_free_r+0x174>
    f5f8:	1145883a 	add	r2,r2,r5
    f5fc:	003fae06 	br	f4b8 <_free_r+0x118>
    f600:	29801704 	addi	r6,r5,92
    f604:	300c90fa 	slli	r6,r6,3
    f608:	29c016c4 	addi	r7,r5,91
    f60c:	003fc106 	br	f514 <_free_r+0x174>
    f610:	20c00515 	stw	r3,20(r4)
    f614:	20c00415 	stw	r3,16(r4)
    f618:	19c00315 	stw	r7,12(r3)
    f61c:	19c00215 	stw	r7,8(r3)
    f620:	1a400115 	stw	r9,4(r3)
    f624:	40800015 	stw	r2,0(r8)
    f628:	003f9706 	br	f488 <_free_r+0xe8>
    f62c:	380fd0ba 	srai	r7,r7,2
    f630:	00800044 	movi	r2,1
    f634:	22000117 	ldw	r8,4(r4)
    f638:	11ce983a 	sll	r7,r2,r7
    f63c:	3a0eb03a 	or	r7,r7,r8
    f640:	21c00115 	stw	r7,4(r4)
    f644:	003fbe06 	br	f540 <_free_r+0x1a0>
    f648:	29805568 	cmpgeui	r6,r5,341
    f64c:	3000051e 	bne	r6,zero,f664 <_free_r+0x2c4>
    f650:	100ad3fa 	srli	r5,r2,15
    f654:	29801e04 	addi	r6,r5,120
    f658:	300c90fa 	slli	r6,r6,3
    f65c:	29c01dc4 	addi	r7,r5,119
    f660:	003fac06 	br	f514 <_free_r+0x174>
    f664:	29415568 	cmpgeui	r5,r5,1365
    f668:	2800051e 	bne	r5,zero,f680 <_free_r+0x2e0>
    f66c:	100ad4ba 	srli	r5,r2,18
    f670:	29801f44 	addi	r6,r5,125
    f674:	300c90fa 	slli	r6,r6,3
    f678:	29c01f04 	addi	r7,r5,124
    f67c:	003fa506 	br	f514 <_free_r+0x174>
    f680:	0180fe04 	movi	r6,1016
    f684:	01c01f84 	movi	r7,126
    f688:	003fa206 	br	f514 <_free_r+0x174>
    f68c:	11000054 	ori	r4,r2,1
    f690:	19000115 	stw	r4,4(r3)
    f694:	30800015 	stw	r2,0(r6)
    f698:	003f7b06 	br	f488 <_free_r+0xe8>

0000f69c <__sfvwrite_r>:
    f69c:	30800217 	ldw	r2,8(r6)
    f6a0:	10009b26 	beq	r2,zero,f910 <__sfvwrite_r+0x274>
    f6a4:	2a00030b 	ldhu	r8,12(r5)
    f6a8:	defff404 	addi	sp,sp,-48
    f6ac:	dd400715 	stw	r21,28(sp)
    f6b0:	dd000615 	stw	r20,24(sp)
    f6b4:	dc000215 	stw	r16,8(sp)
    f6b8:	dfc00b15 	stw	ra,44(sp)
    f6bc:	df000a15 	stw	fp,40(sp)
    f6c0:	ddc00915 	stw	r23,36(sp)
    f6c4:	dd800815 	stw	r22,32(sp)
    f6c8:	dcc00515 	stw	r19,20(sp)
    f6cc:	dc800415 	stw	r18,16(sp)
    f6d0:	dc400315 	stw	r17,12(sp)
    f6d4:	4080020c 	andi	r2,r8,8
    f6d8:	3029883a 	mov	r20,r6
    f6dc:	202b883a 	mov	r21,r4
    f6e0:	2821883a 	mov	r16,r5
    f6e4:	10002626 	beq	r2,zero,f780 <__sfvwrite_r+0xe4>
    f6e8:	28800417 	ldw	r2,16(r5)
    f6ec:	10002426 	beq	r2,zero,f780 <__sfvwrite_r+0xe4>
    f6f0:	4080008c 	andi	r2,r8,2
    f6f4:	a4400017 	ldw	r17,0(r20)
    f6f8:	10002926 	beq	r2,zero,f7a0 <__sfvwrite_r+0x104>
    f6fc:	05a00034 	movhi	r22,32768
    f700:	0027883a 	mov	r19,zero
    f704:	0025883a 	mov	r18,zero
    f708:	b5bf0004 	addi	r22,r22,-1024
    f70c:	980d883a 	mov	r6,r19
    f710:	a809883a 	mov	r4,r21
    f714:	90007126 	beq	r18,zero,f8dc <__sfvwrite_r+0x240>
    f718:	900f883a 	mov	r7,r18
    f71c:	b480012e 	bgeu	r22,r18,f724 <__sfvwrite_r+0x88>
    f720:	b00f883a 	mov	r7,r22
    f724:	80800917 	ldw	r2,36(r16)
    f728:	81400717 	ldw	r5,28(r16)
    f72c:	103ee83a 	callr	r2
    f730:	0080720e 	bge	zero,r2,f8fc <__sfvwrite_r+0x260>
    f734:	a0c00217 	ldw	r3,8(r20)
    f738:	98a7883a 	add	r19,r19,r2
    f73c:	90a5c83a 	sub	r18,r18,r2
    f740:	1885c83a 	sub	r2,r3,r2
    f744:	a0800215 	stw	r2,8(r20)
    f748:	103ff01e 	bne	r2,zero,f70c <__sfvwrite_r+0x70>
    f74c:	0005883a 	mov	r2,zero
    f750:	dfc00b17 	ldw	ra,44(sp)
    f754:	df000a17 	ldw	fp,40(sp)
    f758:	ddc00917 	ldw	r23,36(sp)
    f75c:	dd800817 	ldw	r22,32(sp)
    f760:	dd400717 	ldw	r21,28(sp)
    f764:	dd000617 	ldw	r20,24(sp)
    f768:	dcc00517 	ldw	r19,20(sp)
    f76c:	dc800417 	ldw	r18,16(sp)
    f770:	dc400317 	ldw	r17,12(sp)
    f774:	dc000217 	ldw	r16,8(sp)
    f778:	dec00c04 	addi	sp,sp,48
    f77c:	f800283a 	ret
    f780:	800b883a 	mov	r5,r16
    f784:	a809883a 	mov	r4,r21
    f788:	000d1000 	call	d100 <__swsetup_r>
    f78c:	1000e61e 	bne	r2,zero,fb28 <__sfvwrite_r+0x48c>
    f790:	8200030b 	ldhu	r8,12(r16)
    f794:	a4400017 	ldw	r17,0(r20)
    f798:	4080008c 	andi	r2,r8,2
    f79c:	103fd71e 	bne	r2,zero,f6fc <__sfvwrite_r+0x60>
    f7a0:	4080004c 	andi	r2,r8,1
    f7a4:	10005c1e 	bne	r2,zero,f918 <__sfvwrite_r+0x27c>
    f7a8:	00a00034 	movhi	r2,32768
    f7ac:	10bfff84 	addi	r2,r2,-2
    f7b0:	00e00034 	movhi	r3,32768
    f7b4:	d8800015 	stw	r2,0(sp)
    f7b8:	18bfffc4 	addi	r2,r3,-1
    f7bc:	0039883a 	mov	fp,zero
    f7c0:	0025883a 	mov	r18,zero
    f7c4:	d8800115 	stw	r2,4(sp)
    f7c8:	90004026 	beq	r18,zero,f8cc <__sfvwrite_r+0x230>
    f7cc:	4080800c 	andi	r2,r8,512
    f7d0:	81000017 	ldw	r4,0(r16)
    f7d4:	85c00217 	ldw	r23,8(r16)
    f7d8:	10008826 	beq	r2,zero,f9fc <__sfvwrite_r+0x360>
    f7dc:	b82d883a 	mov	r22,r23
    f7e0:	95c0ae36 	bltu	r18,r23,fa9c <__sfvwrite_r+0x400>
    f7e4:	4081200c 	andi	r2,r8,1152
    f7e8:	10002626 	beq	r2,zero,f884 <__sfvwrite_r+0x1e8>
    f7ec:	81800517 	ldw	r6,20(r16)
    f7f0:	81400417 	ldw	r5,16(r16)
    f7f4:	3185883a 	add	r2,r6,r6
    f7f8:	1185883a 	add	r2,r2,r6
    f7fc:	1026d7fa 	srli	r19,r2,31
    f800:	216dc83a 	sub	r22,r4,r5
    f804:	b1000044 	addi	r4,r22,1
    f808:	98a7883a 	add	r19,r19,r2
    f80c:	9827d07a 	srai	r19,r19,1
    f810:	2485883a 	add	r2,r4,r18
    f814:	980d883a 	mov	r6,r19
    f818:	9880022e 	bgeu	r19,r2,f824 <__sfvwrite_r+0x188>
    f81c:	1027883a 	mov	r19,r2
    f820:	100d883a 	mov	r6,r2
    f824:	4201000c 	andi	r8,r8,1024
    f828:	4000af26 	beq	r8,zero,fae8 <__sfvwrite_r+0x44c>
    f82c:	300b883a 	mov	r5,r6
    f830:	a809883a 	mov	r4,r21
    f834:	000a4f80 	call	a4f8 <_malloc_r>
    f838:	1000b726 	beq	r2,zero,fb18 <__sfvwrite_r+0x47c>
    f83c:	81400417 	ldw	r5,16(r16)
    f840:	b00d883a 	mov	r6,r22
    f844:	1009883a 	mov	r4,r2
    f848:	000acd80 	call	acd8 <memcpy>
    f84c:	100f883a 	mov	r7,r2
    f850:	8080030b 	ldhu	r2,12(r16)
    f854:	00fedfc4 	movi	r3,-1153
    f858:	10c4703a 	and	r2,r2,r3
    f85c:	10802014 	ori	r2,r2,128
    f860:	8080030d 	sth	r2,12(r16)
    f864:	3d89883a 	add	r4,r7,r22
    f868:	9d85c83a 	sub	r2,r19,r22
    f86c:	81c00415 	stw	r7,16(r16)
    f870:	81000015 	stw	r4,0(r16)
    f874:	84c00515 	stw	r19,20(r16)
    f878:	902f883a 	mov	r23,r18
    f87c:	80800215 	stw	r2,8(r16)
    f880:	902d883a 	mov	r22,r18
    f884:	b00d883a 	mov	r6,r22
    f888:	e00b883a 	mov	r5,fp
    f88c:	000ffa80 	call	ffa8 <memmove>
    f890:	81000217 	ldw	r4,8(r16)
    f894:	80800017 	ldw	r2,0(r16)
    f898:	9027883a 	mov	r19,r18
    f89c:	25c9c83a 	sub	r4,r4,r23
    f8a0:	1585883a 	add	r2,r2,r22
    f8a4:	81000215 	stw	r4,8(r16)
    f8a8:	80800015 	stw	r2,0(r16)
    f8ac:	0025883a 	mov	r18,zero
    f8b0:	a1800217 	ldw	r6,8(r20)
    f8b4:	e4f9883a 	add	fp,fp,r19
    f8b8:	34e7c83a 	sub	r19,r6,r19
    f8bc:	a4c00215 	stw	r19,8(r20)
    f8c0:	983fa226 	beq	r19,zero,f74c <__sfvwrite_r+0xb0>
    f8c4:	8200030b 	ldhu	r8,12(r16)
    f8c8:	903fc01e 	bne	r18,zero,f7cc <__sfvwrite_r+0x130>
    f8cc:	8f000017 	ldw	fp,0(r17)
    f8d0:	8c800117 	ldw	r18,4(r17)
    f8d4:	8c400204 	addi	r17,r17,8
    f8d8:	003fbb06 	br	f7c8 <__sfvwrite_r+0x12c>
    f8dc:	8cc00017 	ldw	r19,0(r17)
    f8e0:	8c800117 	ldw	r18,4(r17)
    f8e4:	8c400204 	addi	r17,r17,8
    f8e8:	003f8806 	br	f70c <__sfvwrite_r+0x70>
    f8ec:	800b883a 	mov	r5,r16
    f8f0:	a809883a 	mov	r4,r21
    f8f4:	000edf40 	call	edf4 <_fflush_r>
    f8f8:	10002226 	beq	r2,zero,f984 <__sfvwrite_r+0x2e8>
    f8fc:	8080030b 	ldhu	r2,12(r16)
    f900:	10801014 	ori	r2,r2,64
    f904:	8080030d 	sth	r2,12(r16)
    f908:	00bfffc4 	movi	r2,-1
    f90c:	003f9006 	br	f750 <__sfvwrite_r+0xb4>
    f910:	0005883a 	mov	r2,zero
    f914:	f800283a 	ret
    f918:	002d883a 	mov	r22,zero
    f91c:	0039883a 	mov	fp,zero
    f920:	0005883a 	mov	r2,zero
    f924:	002f883a 	mov	r23,zero
    f928:	b0001d26 	beq	r22,zero,f9a0 <__sfvwrite_r+0x304>
    f92c:	10002026 	beq	r2,zero,f9b0 <__sfvwrite_r+0x314>
    f930:	e027883a 	mov	r19,fp
    f934:	b4c0012e 	bgeu	r22,r19,f93c <__sfvwrite_r+0x2a0>
    f938:	b027883a 	mov	r19,r22
    f93c:	81000017 	ldw	r4,0(r16)
    f940:	80800417 	ldw	r2,16(r16)
    f944:	81c00517 	ldw	r7,20(r16)
    f948:	1100032e 	bgeu	r2,r4,f958 <__sfvwrite_r+0x2bc>
    f94c:	84800217 	ldw	r18,8(r16)
    f950:	3ca5883a 	add	r18,r7,r18
    f954:	94c01e16 	blt	r18,r19,f9d0 <__sfvwrite_r+0x334>
    f958:	99c05316 	blt	r19,r7,faa8 <__sfvwrite_r+0x40c>
    f95c:	80800917 	ldw	r2,36(r16)
    f960:	81400717 	ldw	r5,28(r16)
    f964:	b80d883a 	mov	r6,r23
    f968:	a809883a 	mov	r4,r21
    f96c:	103ee83a 	callr	r2
    f970:	1025883a 	mov	r18,r2
    f974:	00bfe10e 	bge	zero,r2,f8fc <__sfvwrite_r+0x260>
    f978:	e4b9c83a 	sub	fp,fp,r18
    f97c:	e03fdb26 	beq	fp,zero,f8ec <__sfvwrite_r+0x250>
    f980:	00800044 	movi	r2,1
    f984:	a1800217 	ldw	r6,8(r20)
    f988:	bcaf883a 	add	r23,r23,r18
    f98c:	b4adc83a 	sub	r22,r22,r18
    f990:	34a5c83a 	sub	r18,r6,r18
    f994:	a4800215 	stw	r18,8(r20)
    f998:	903f6c26 	beq	r18,zero,f74c <__sfvwrite_r+0xb0>
    f99c:	b03fe31e 	bne	r22,zero,f92c <__sfvwrite_r+0x290>
    f9a0:	8d800117 	ldw	r22,4(r17)
    f9a4:	8dc00017 	ldw	r23,0(r17)
    f9a8:	8c400204 	addi	r17,r17,8
    f9ac:	b03ffc26 	beq	r22,zero,f9a0 <__sfvwrite_r+0x304>
    f9b0:	b00d883a 	mov	r6,r22
    f9b4:	01400284 	movi	r5,10
    f9b8:	b809883a 	mov	r4,r23
    f9bc:	000fed80 	call	fed8 <memchr>
    f9c0:	10004626 	beq	r2,zero,fadc <__sfvwrite_r+0x440>
    f9c4:	10800044 	addi	r2,r2,1
    f9c8:	15f9c83a 	sub	fp,r2,r23
    f9cc:	003fd806 	br	f930 <__sfvwrite_r+0x294>
    f9d0:	b80b883a 	mov	r5,r23
    f9d4:	900d883a 	mov	r6,r18
    f9d8:	000ffa80 	call	ffa8 <memmove>
    f9dc:	80800017 	ldw	r2,0(r16)
    f9e0:	800b883a 	mov	r5,r16
    f9e4:	a809883a 	mov	r4,r21
    f9e8:	1485883a 	add	r2,r2,r18
    f9ec:	80800015 	stw	r2,0(r16)
    f9f0:	000edf40 	call	edf4 <_fflush_r>
    f9f4:	103fe026 	beq	r2,zero,f978 <__sfvwrite_r+0x2dc>
    f9f8:	003fc006 	br	f8fc <__sfvwrite_r+0x260>
    f9fc:	80800417 	ldw	r2,16(r16)
    fa00:	11001436 	bltu	r2,r4,fa54 <__sfvwrite_r+0x3b8>
    fa04:	84c00517 	ldw	r19,20(r16)
    fa08:	94c01236 	bltu	r18,r19,fa54 <__sfvwrite_r+0x3b8>
    fa0c:	d8800017 	ldw	r2,0(sp)
    fa10:	1480302e 	bgeu	r2,r18,fad4 <__sfvwrite_r+0x438>
    fa14:	d9000117 	ldw	r4,4(sp)
    fa18:	980b883a 	mov	r5,r19
    fa1c:	00078040 	call	7804 <__divsi3>
    fa20:	980b883a 	mov	r5,r19
    fa24:	1009883a 	mov	r4,r2
    fa28:	00079b80 	call	79b8 <__mulsi3>
    fa2c:	82000917 	ldw	r8,36(r16)
    fa30:	81400717 	ldw	r5,28(r16)
    fa34:	100f883a 	mov	r7,r2
    fa38:	e00d883a 	mov	r6,fp
    fa3c:	a809883a 	mov	r4,r21
    fa40:	403ee83a 	callr	r8
    fa44:	1027883a 	mov	r19,r2
    fa48:	00bfac0e 	bge	zero,r2,f8fc <__sfvwrite_r+0x260>
    fa4c:	94e5c83a 	sub	r18,r18,r19
    fa50:	003f9706 	br	f8b0 <__sfvwrite_r+0x214>
    fa54:	b827883a 	mov	r19,r23
    fa58:	95c0012e 	bgeu	r18,r23,fa60 <__sfvwrite_r+0x3c4>
    fa5c:	9027883a 	mov	r19,r18
    fa60:	980d883a 	mov	r6,r19
    fa64:	e00b883a 	mov	r5,fp
    fa68:	000ffa80 	call	ffa8 <memmove>
    fa6c:	80800217 	ldw	r2,8(r16)
    fa70:	81000017 	ldw	r4,0(r16)
    fa74:	14c5c83a 	sub	r2,r2,r19
    fa78:	24c9883a 	add	r4,r4,r19
    fa7c:	80800215 	stw	r2,8(r16)
    fa80:	81000015 	stw	r4,0(r16)
    fa84:	103ff11e 	bne	r2,zero,fa4c <__sfvwrite_r+0x3b0>
    fa88:	800b883a 	mov	r5,r16
    fa8c:	a809883a 	mov	r4,r21
    fa90:	000edf40 	call	edf4 <_fflush_r>
    fa94:	103fed26 	beq	r2,zero,fa4c <__sfvwrite_r+0x3b0>
    fa98:	003f9806 	br	f8fc <__sfvwrite_r+0x260>
    fa9c:	902f883a 	mov	r23,r18
    faa0:	902d883a 	mov	r22,r18
    faa4:	003f7706 	br	f884 <__sfvwrite_r+0x1e8>
    faa8:	980d883a 	mov	r6,r19
    faac:	b80b883a 	mov	r5,r23
    fab0:	000ffa80 	call	ffa8 <memmove>
    fab4:	80c00217 	ldw	r3,8(r16)
    fab8:	80800017 	ldw	r2,0(r16)
    fabc:	9825883a 	mov	r18,r19
    fac0:	1cc7c83a 	sub	r3,r3,r19
    fac4:	14c5883a 	add	r2,r2,r19
    fac8:	80c00215 	stw	r3,8(r16)
    facc:	80800015 	stw	r2,0(r16)
    fad0:	003fa906 	br	f978 <__sfvwrite_r+0x2dc>
    fad4:	9009883a 	mov	r4,r18
    fad8:	003fcf06 	br	fa18 <__sfvwrite_r+0x37c>
    fadc:	b4c00044 	addi	r19,r22,1
    fae0:	9839883a 	mov	fp,r19
    fae4:	003f9306 	br	f934 <__sfvwrite_r+0x298>
    fae8:	a809883a 	mov	r4,r21
    faec:	00113b40 	call	113b4 <_realloc_r>
    faf0:	100f883a 	mov	r7,r2
    faf4:	103f5b1e 	bne	r2,zero,f864 <__sfvwrite_r+0x1c8>
    faf8:	81400417 	ldw	r5,16(r16)
    fafc:	a809883a 	mov	r4,r21
    fb00:	000f3a00 	call	f3a0 <_free_r>
    fb04:	8080030b 	ldhu	r2,12(r16)
    fb08:	00c00304 	movi	r3,12
    fb0c:	a8c00015 	stw	r3,0(r21)
    fb10:	10bfdfcc 	andi	r2,r2,65407
    fb14:	003f7a06 	br	f900 <__sfvwrite_r+0x264>
    fb18:	00c00304 	movi	r3,12
    fb1c:	8080030b 	ldhu	r2,12(r16)
    fb20:	a8c00015 	stw	r3,0(r21)
    fb24:	003f7606 	br	f900 <__sfvwrite_r+0x264>
    fb28:	00bfffc4 	movi	r2,-1
    fb2c:	003f0806 	br	f750 <__sfvwrite_r+0xb4>

0000fb30 <_fwalk>:
    fb30:	defffa04 	addi	sp,sp,-24
    fb34:	dd000415 	stw	r20,16(sp)
    fb38:	dcc00315 	stw	r19,12(sp)
    fb3c:	dc800215 	stw	r18,8(sp)
    fb40:	dfc00515 	stw	ra,20(sp)
    fb44:	dc400115 	stw	r17,4(sp)
    fb48:	dc000015 	stw	r16,0(sp)
    fb4c:	2827883a 	mov	r19,r5
    fb50:	2480b804 	addi	r18,r4,736
    fb54:	0029883a 	mov	r20,zero
    fb58:	94400117 	ldw	r17,4(r18)
    fb5c:	94000217 	ldw	r16,8(r18)
    fb60:	8c7fffc4 	addi	r17,r17,-1
    fb64:	88000d16 	blt	r17,zero,fb9c <_fwalk+0x6c>
    fb68:	8080030b 	ldhu	r2,12(r16)
    fb6c:	8c7fffc4 	addi	r17,r17,-1
    fb70:	108000b0 	cmpltui	r2,r2,2
    fb74:	1000061e 	bne	r2,zero,fb90 <_fwalk+0x60>
    fb78:	8080038f 	ldh	r2,14(r16)
    fb7c:	8009883a 	mov	r4,r16
    fb80:	10bfffe0 	cmpeqi	r2,r2,-1
    fb84:	1000021e 	bne	r2,zero,fb90 <_fwalk+0x60>
    fb88:	983ee83a 	callr	r19
    fb8c:	a0a8b03a 	or	r20,r20,r2
    fb90:	88bfffd8 	cmpnei	r2,r17,-1
    fb94:	84001a04 	addi	r16,r16,104
    fb98:	103ff31e 	bne	r2,zero,fb68 <_fwalk+0x38>
    fb9c:	94800017 	ldw	r18,0(r18)
    fba0:	903fed1e 	bne	r18,zero,fb58 <_fwalk+0x28>
    fba4:	a005883a 	mov	r2,r20
    fba8:	dfc00517 	ldw	ra,20(sp)
    fbac:	dd000417 	ldw	r20,16(sp)
    fbb0:	dcc00317 	ldw	r19,12(sp)
    fbb4:	dc800217 	ldw	r18,8(sp)
    fbb8:	dc400117 	ldw	r17,4(sp)
    fbbc:	dc000017 	ldw	r16,0(sp)
    fbc0:	dec00604 	addi	sp,sp,24
    fbc4:	f800283a 	ret

0000fbc8 <_fwalk_reent>:
    fbc8:	defff904 	addi	sp,sp,-28
    fbcc:	dd400515 	stw	r21,20(sp)
    fbd0:	dd000415 	stw	r20,16(sp)
    fbd4:	dcc00315 	stw	r19,12(sp)
    fbd8:	dc800215 	stw	r18,8(sp)
    fbdc:	dfc00615 	stw	ra,24(sp)
    fbe0:	dc400115 	stw	r17,4(sp)
    fbe4:	dc000015 	stw	r16,0(sp)
    fbe8:	202b883a 	mov	r21,r4
    fbec:	2827883a 	mov	r19,r5
    fbf0:	2480b804 	addi	r18,r4,736
    fbf4:	0029883a 	mov	r20,zero
    fbf8:	94400117 	ldw	r17,4(r18)
    fbfc:	94000217 	ldw	r16,8(r18)
    fc00:	8c7fffc4 	addi	r17,r17,-1
    fc04:	88000e16 	blt	r17,zero,fc40 <_fwalk_reent+0x78>
    fc08:	8080030b 	ldhu	r2,12(r16)
    fc0c:	8c7fffc4 	addi	r17,r17,-1
    fc10:	108000b0 	cmpltui	r2,r2,2
    fc14:	1000071e 	bne	r2,zero,fc34 <_fwalk_reent+0x6c>
    fc18:	8080038f 	ldh	r2,14(r16)
    fc1c:	800b883a 	mov	r5,r16
    fc20:	a809883a 	mov	r4,r21
    fc24:	10bfffe0 	cmpeqi	r2,r2,-1
    fc28:	1000021e 	bne	r2,zero,fc34 <_fwalk_reent+0x6c>
    fc2c:	983ee83a 	callr	r19
    fc30:	a0a8b03a 	or	r20,r20,r2
    fc34:	88bfffd8 	cmpnei	r2,r17,-1
    fc38:	84001a04 	addi	r16,r16,104
    fc3c:	103ff21e 	bne	r2,zero,fc08 <_fwalk_reent+0x40>
    fc40:	94800017 	ldw	r18,0(r18)
    fc44:	903fec1e 	bne	r18,zero,fbf8 <_fwalk_reent+0x30>
    fc48:	a005883a 	mov	r2,r20
    fc4c:	dfc00617 	ldw	ra,24(sp)
    fc50:	dd400517 	ldw	r21,20(sp)
    fc54:	dd000417 	ldw	r20,16(sp)
    fc58:	dcc00317 	ldw	r19,12(sp)
    fc5c:	dc800217 	ldw	r18,8(sp)
    fc60:	dc400117 	ldw	r17,4(sp)
    fc64:	dc000017 	ldw	r16,0(sp)
    fc68:	dec00704 	addi	sp,sp,28
    fc6c:	f800283a 	ret

0000fc70 <__localeconv_l>:
    fc70:	20803c04 	addi	r2,r4,240
    fc74:	f800283a 	ret

0000fc78 <_localeconv_r>:
    fc78:	008000b4 	movhi	r2,2
    fc7c:	10a3bb04 	addi	r2,r2,-28948
    fc80:	f800283a 	ret

0000fc84 <localeconv>:
    fc84:	008000b4 	movhi	r2,2
    fc88:	10a3bb04 	addi	r2,r2,-28948
    fc8c:	f800283a 	ret

0000fc90 <__smakebuf_r>:
    fc90:	2880030b 	ldhu	r2,12(r5)
    fc94:	deffe804 	addi	sp,sp,-96
    fc98:	dc001215 	stw	r16,72(sp)
    fc9c:	dfc01715 	stw	ra,92(sp)
    fca0:	dd001615 	stw	r20,88(sp)
    fca4:	dcc01515 	stw	r19,84(sp)
    fca8:	dc801415 	stw	r18,80(sp)
    fcac:	dc401315 	stw	r17,76(sp)
    fcb0:	10c0008c 	andi	r3,r2,2
    fcb4:	2821883a 	mov	r16,r5
    fcb8:	18000d26 	beq	r3,zero,fcf0 <__smakebuf_r+0x60>
    fcbc:	288010c4 	addi	r2,r5,67
    fcc0:	28800015 	stw	r2,0(r5)
    fcc4:	28800415 	stw	r2,16(r5)
    fcc8:	00800044 	movi	r2,1
    fccc:	28800515 	stw	r2,20(r5)
    fcd0:	dfc01717 	ldw	ra,92(sp)
    fcd4:	dd001617 	ldw	r20,88(sp)
    fcd8:	dcc01517 	ldw	r19,84(sp)
    fcdc:	dc801417 	ldw	r18,80(sp)
    fce0:	dc401317 	ldw	r17,76(sp)
    fce4:	dc001217 	ldw	r16,72(sp)
    fce8:	dec01804 	addi	sp,sp,96
    fcec:	f800283a 	ret
    fcf0:	2940038f 	ldh	r5,14(r5)
    fcf4:	2023883a 	mov	r17,r4
    fcf8:	28002816 	blt	r5,zero,fd9c <__smakebuf_r+0x10c>
    fcfc:	d80d883a 	mov	r6,sp
    fd00:	00134f80 	call	134f8 <_fstat_r>
    fd04:	10002416 	blt	r2,zero,fd98 <__smakebuf_r+0x108>
    fd08:	d8800117 	ldw	r2,4(sp)
    fd0c:	10bc000c 	andi	r2,r2,61440
    fd10:	10880018 	cmpnei	r2,r2,8192
    fd14:	1000461e 	bne	r2,zero,fe30 <__smakebuf_r+0x1a0>
    fd18:	8140038f 	ldh	r5,14(r16)
    fd1c:	8809883a 	mov	r4,r17
    fd20:	00135580 	call	13558 <_isatty_r>
    fd24:	10003e26 	beq	r2,zero,fe20 <__smakebuf_r+0x190>
    fd28:	8080030b 	ldhu	r2,12(r16)
    fd2c:	80c010c4 	addi	r3,r16,67
    fd30:	80c00015 	stw	r3,0(r16)
    fd34:	10800054 	ori	r2,r2,1
    fd38:	8080030d 	sth	r2,12(r16)
    fd3c:	00800044 	movi	r2,1
    fd40:	80c00415 	stw	r3,16(r16)
    fd44:	80800515 	stw	r2,20(r16)
    fd48:	04c00044 	movi	r19,1
    fd4c:	05010004 	movi	r20,1024
    fd50:	04820004 	movi	r18,2048
    fd54:	a00b883a 	mov	r5,r20
    fd58:	8809883a 	mov	r4,r17
    fd5c:	000a4f80 	call	a4f8 <_malloc_r>
    fd60:	10001726 	beq	r2,zero,fdc0 <__smakebuf_r+0x130>
    fd64:	80c0030b 	ldhu	r3,12(r16)
    fd68:	01000074 	movhi	r4,1
    fd6c:	213bb804 	addi	r4,r4,-4384
    fd70:	89000f15 	stw	r4,60(r17)
    fd74:	18c02014 	ori	r3,r3,128
    fd78:	80c0030d 	sth	r3,12(r16)
    fd7c:	80800015 	stw	r2,0(r16)
    fd80:	80800415 	stw	r2,16(r16)
    fd84:	85000515 	stw	r20,20(r16)
    fd88:	98001d1e 	bne	r19,zero,fe00 <__smakebuf_r+0x170>
    fd8c:	90c6b03a 	or	r3,r18,r3
    fd90:	80c0030d 	sth	r3,12(r16)
    fd94:	003fce06 	br	fcd0 <__smakebuf_r+0x40>
    fd98:	8080030b 	ldhu	r2,12(r16)
    fd9c:	1080200c 	andi	r2,r2,128
    fda0:	0027883a 	mov	r19,zero
    fda4:	10001326 	beq	r2,zero,fdf4 <__smakebuf_r+0x164>
    fda8:	05001004 	movi	r20,64
    fdac:	a00b883a 	mov	r5,r20
    fdb0:	8809883a 	mov	r4,r17
    fdb4:	0025883a 	mov	r18,zero
    fdb8:	000a4f80 	call	a4f8 <_malloc_r>
    fdbc:	103fe91e 	bne	r2,zero,fd64 <__smakebuf_r+0xd4>
    fdc0:	8080030b 	ldhu	r2,12(r16)
    fdc4:	10c0800c 	andi	r3,r2,512
    fdc8:	183fc11e 	bne	r3,zero,fcd0 <__smakebuf_r+0x40>
    fdcc:	00ffff04 	movi	r3,-4
    fdd0:	10c4703a 	and	r2,r2,r3
    fdd4:	10800094 	ori	r2,r2,2
    fdd8:	80c010c4 	addi	r3,r16,67
    fddc:	8080030d 	sth	r2,12(r16)
    fde0:	00800044 	movi	r2,1
    fde4:	80c00015 	stw	r3,0(r16)
    fde8:	80c00415 	stw	r3,16(r16)
    fdec:	80800515 	stw	r2,20(r16)
    fdf0:	003fb706 	br	fcd0 <__smakebuf_r+0x40>
    fdf4:	05010004 	movi	r20,1024
    fdf8:	0025883a 	mov	r18,zero
    fdfc:	003fd506 	br	fd54 <__smakebuf_r+0xc4>
    fe00:	8140038f 	ldh	r5,14(r16)
    fe04:	8809883a 	mov	r4,r17
    fe08:	00135580 	call	13558 <_isatty_r>
    fe0c:	80c0030b 	ldhu	r3,12(r16)
    fe10:	103fde26 	beq	r2,zero,fd8c <__smakebuf_r+0xfc>
    fe14:	18ffff0c 	andi	r3,r3,65532
    fe18:	18c00054 	ori	r3,r3,1
    fe1c:	003fdb06 	br	fd8c <__smakebuf_r+0xfc>
    fe20:	04c00044 	movi	r19,1
    fe24:	05010004 	movi	r20,1024
    fe28:	04820004 	movi	r18,2048
    fe2c:	003fc906 	br	fd54 <__smakebuf_r+0xc4>
    fe30:	0027883a 	mov	r19,zero
    fe34:	05010004 	movi	r20,1024
    fe38:	04820004 	movi	r18,2048
    fe3c:	003fc506 	br	fd54 <__smakebuf_r+0xc4>

0000fe40 <__swhatbuf_r>:
    fe40:	deffea04 	addi	sp,sp,-88
    fe44:	dc001215 	stw	r16,72(sp)
    fe48:	2821883a 	mov	r16,r5
    fe4c:	2940038f 	ldh	r5,14(r5)
    fe50:	dc801415 	stw	r18,80(sp)
    fe54:	dc401315 	stw	r17,76(sp)
    fe58:	dfc01515 	stw	ra,84(sp)
    fe5c:	3023883a 	mov	r17,r6
    fe60:	3825883a 	mov	r18,r7
    fe64:	28001016 	blt	r5,zero,fea8 <__swhatbuf_r+0x68>
    fe68:	d80d883a 	mov	r6,sp
    fe6c:	00134f80 	call	134f8 <_fstat_r>
    fe70:	10000d16 	blt	r2,zero,fea8 <__swhatbuf_r+0x68>
    fe74:	d8c00117 	ldw	r3,4(sp)
    fe78:	00820004 	movi	r2,2048
    fe7c:	18fc000c 	andi	r3,r3,61440
    fe80:	18c80020 	cmpeqi	r3,r3,8192
    fe84:	90c00015 	stw	r3,0(r18)
    fe88:	00c10004 	movi	r3,1024
    fe8c:	88c00015 	stw	r3,0(r17)
    fe90:	dfc01517 	ldw	ra,84(sp)
    fe94:	dc801417 	ldw	r18,80(sp)
    fe98:	dc401317 	ldw	r17,76(sp)
    fe9c:	dc001217 	ldw	r16,72(sp)
    fea0:	dec01604 	addi	sp,sp,88
    fea4:	f800283a 	ret
    fea8:	8080030b 	ldhu	r2,12(r16)
    feac:	90000015 	stw	zero,0(r18)
    feb0:	1080200c 	andi	r2,r2,128
    feb4:	10000426 	beq	r2,zero,fec8 <__swhatbuf_r+0x88>
    feb8:	00801004 	movi	r2,64
    febc:	88800015 	stw	r2,0(r17)
    fec0:	0005883a 	mov	r2,zero
    fec4:	003ff206 	br	fe90 <__swhatbuf_r+0x50>
    fec8:	00810004 	movi	r2,1024
    fecc:	88800015 	stw	r2,0(r17)
    fed0:	0005883a 	mov	r2,zero
    fed4:	003fee06 	br	fe90 <__swhatbuf_r+0x50>

0000fed8 <memchr>:
    fed8:	208000cc 	andi	r2,r4,3
    fedc:	280f883a 	mov	r7,r5
    fee0:	10000e26 	beq	r2,zero,ff1c <memchr+0x44>
    fee4:	30bfffc4 	addi	r2,r6,-1
    fee8:	30001726 	beq	r6,zero,ff48 <memchr+0x70>
    feec:	29803fcc 	andi	r6,r5,255
    fef0:	00000606 	br	ff0c <memchr+0x34>
    fef4:	21000044 	addi	r4,r4,1
    fef8:	20c000cc 	andi	r3,r4,3
    fefc:	18000826 	beq	r3,zero,ff20 <memchr+0x48>
    ff00:	10bfffc4 	addi	r2,r2,-1
    ff04:	10ffffe0 	cmpeqi	r3,r2,-1
    ff08:	18000f1e 	bne	r3,zero,ff48 <memchr+0x70>
    ff0c:	20c00003 	ldbu	r3,0(r4)
    ff10:	19bff81e 	bne	r3,r6,fef4 <memchr+0x1c>
    ff14:	2005883a 	mov	r2,r4
    ff18:	f800283a 	ret
    ff1c:	3005883a 	mov	r2,r6
    ff20:	10c00128 	cmpgeui	r3,r2,4
    ff24:	18000a1e 	bne	r3,zero,ff50 <memchr+0x78>
    ff28:	10001e26 	beq	r2,zero,ffa4 <memchr+0xcc>
    ff2c:	2087883a 	add	r3,r4,r2
    ff30:	39803fcc 	andi	r6,r7,255
    ff34:	2005883a 	mov	r2,r4
    ff38:	11000003 	ldbu	r4,0(r2)
    ff3c:	21bff626 	beq	r4,r6,ff18 <memchr+0x40>
    ff40:	10800044 	addi	r2,r2,1
    ff44:	18bffc1e 	bne	r3,r2,ff38 <memchr+0x60>
    ff48:	0005883a 	mov	r2,zero
    ff4c:	f800283a 	ret
    ff50:	29403fcc 	andi	r5,r5,255
    ff54:	280c923a 	slli	r6,r5,8
    ff58:	027fbff4 	movhi	r9,65279
    ff5c:	02202074 	movhi	r8,32897
    ff60:	314ab03a 	or	r5,r6,r5
    ff64:	280c943a 	slli	r6,r5,16
    ff68:	4a7fbfc4 	addi	r9,r9,-257
    ff6c:	42202004 	addi	r8,r8,-32640
    ff70:	314cb03a 	or	r6,r6,r5
    ff74:	20c00017 	ldw	r3,0(r4)
    ff78:	30c6f03a 	xor	r3,r6,r3
    ff7c:	1a4b883a 	add	r5,r3,r9
    ff80:	00c6303a 	nor	r3,zero,r3
    ff84:	28c6703a 	and	r3,r5,r3
    ff88:	1a06703a 	and	r3,r3,r8
    ff8c:	183fe71e 	bne	r3,zero,ff2c <memchr+0x54>
    ff90:	10bfff04 	addi	r2,r2,-4
    ff94:	10c00128 	cmpgeui	r3,r2,4
    ff98:	21000104 	addi	r4,r4,4
    ff9c:	183ff51e 	bne	r3,zero,ff74 <memchr+0x9c>
    ffa0:	003fe106 	br	ff28 <memchr+0x50>
    ffa4:	f800283a 	ret

0000ffa8 <memmove>:
    ffa8:	2005883a 	mov	r2,r4
    ffac:	29000a2e 	bgeu	r5,r4,ffd8 <memmove+0x30>
    ffb0:	2989883a 	add	r4,r5,r6
    ffb4:	1100082e 	bgeu	r2,r4,ffd8 <memmove+0x30>
    ffb8:	1187883a 	add	r3,r2,r6
    ffbc:	30003e26 	beq	r6,zero,100b8 <memmove+0x110>
    ffc0:	217fffc3 	ldbu	r5,-1(r4)
    ffc4:	18ffffc4 	addi	r3,r3,-1
    ffc8:	213fffc4 	addi	r4,r4,-1
    ffcc:	19400005 	stb	r5,0(r3)
    ffd0:	10fffb1e 	bne	r2,r3,ffc0 <memmove+0x18>
    ffd4:	f800283a 	ret
    ffd8:	30c00430 	cmpltui	r3,r6,16
    ffdc:	18000b26 	beq	r3,zero,1000c <memmove+0x64>
    ffe0:	1007883a 	mov	r3,r2
    ffe4:	31ffffc4 	addi	r7,r6,-1
    ffe8:	30003726 	beq	r6,zero,100c8 <memmove+0x120>
    ffec:	39c00044 	addi	r7,r7,1
    fff0:	29cf883a 	add	r7,r5,r7
    fff4:	29800003 	ldbu	r6,0(r5)
    fff8:	29400044 	addi	r5,r5,1
    fffc:	18c00044 	addi	r3,r3,1
   10000:	19bfffc5 	stb	r6,-1(r3)
   10004:	29fffb1e 	bne	r5,r7,fff4 <memmove+0x4c>
   10008:	f800283a 	ret
   1000c:	2886b03a 	or	r3,r5,r2
   10010:	18c000cc 	andi	r3,r3,3
   10014:	1800291e 	bne	r3,zero,100bc <memmove+0x114>
   10018:	327ffc04 	addi	r9,r6,-16
   1001c:	4812d13a 	srli	r9,r9,4
   10020:	280f883a 	mov	r7,r5
   10024:	1007883a 	mov	r3,r2
   10028:	4a400044 	addi	r9,r9,1
   1002c:	4812913a 	slli	r9,r9,4
   10030:	1251883a 	add	r8,r2,r9
   10034:	39000017 	ldw	r4,0(r7)
   10038:	39c00404 	addi	r7,r7,16
   1003c:	18c00404 	addi	r3,r3,16
   10040:	193ffc15 	stw	r4,-16(r3)
   10044:	393ffd17 	ldw	r4,-12(r7)
   10048:	193ffd15 	stw	r4,-12(r3)
   1004c:	393ffe17 	ldw	r4,-8(r7)
   10050:	193ffe15 	stw	r4,-8(r3)
   10054:	393fff17 	ldw	r4,-4(r7)
   10058:	193fff15 	stw	r4,-4(r3)
   1005c:	40fff51e 	bne	r8,r3,10034 <memmove+0x8c>
   10060:	3100030c 	andi	r4,r6,12
   10064:	2a4b883a 	add	r5,r5,r9
   10068:	320003cc 	andi	r8,r6,15
   1006c:	20001726 	beq	r4,zero,100cc <memmove+0x124>
   10070:	2813883a 	mov	r9,r5
   10074:	180f883a 	mov	r7,r3
   10078:	4a800017 	ldw	r10,0(r9)
   1007c:	39c00104 	addi	r7,r7,4
   10080:	41c9c83a 	sub	r4,r8,r7
   10084:	1909883a 	add	r4,r3,r4
   10088:	21000128 	cmpgeui	r4,r4,4
   1008c:	3abfff15 	stw	r10,-4(r7)
   10090:	4a400104 	addi	r9,r9,4
   10094:	203ff81e 	bne	r4,zero,10078 <memmove+0xd0>
   10098:	413fff04 	addi	r4,r8,-4
   1009c:	2008d0ba 	srli	r4,r4,2
   100a0:	318000cc 	andi	r6,r6,3
   100a4:	21000044 	addi	r4,r4,1
   100a8:	200890ba 	slli	r4,r4,2
   100ac:	1907883a 	add	r3,r3,r4
   100b0:	290b883a 	add	r5,r5,r4
   100b4:	003fcb06 	br	ffe4 <memmove+0x3c>
   100b8:	f800283a 	ret
   100bc:	31ffffc4 	addi	r7,r6,-1
   100c0:	1007883a 	mov	r3,r2
   100c4:	003fc906 	br	ffec <memmove+0x44>
   100c8:	f800283a 	ret
   100cc:	400d883a 	mov	r6,r8
   100d0:	003fc406 	br	ffe4 <memmove+0x3c>

000100d4 <memset>:
   100d4:	20c000cc 	andi	r3,r4,3
   100d8:	2005883a 	mov	r2,r4
   100dc:	18003626 	beq	r3,zero,101b8 <memset+0xe4>
   100e0:	31ffffc4 	addi	r7,r6,-1
   100e4:	30003326 	beq	r6,zero,101b4 <memset+0xe0>
   100e8:	2811883a 	mov	r8,r5
   100ec:	2007883a 	mov	r3,r4
   100f0:	00000306 	br	10100 <memset+0x2c>
   100f4:	39ffffc4 	addi	r7,r7,-1
   100f8:	39bfffe0 	cmpeqi	r6,r7,-1
   100fc:	30002d1e 	bne	r6,zero,101b4 <memset+0xe0>
   10100:	18c00044 	addi	r3,r3,1
   10104:	198000cc 	andi	r6,r3,3
   10108:	1a3fffc5 	stb	r8,-1(r3)
   1010c:	303ff91e 	bne	r6,zero,100f4 <memset+0x20>
   10110:	39000130 	cmpltui	r4,r7,4
   10114:	2000221e 	bne	r4,zero,101a0 <memset+0xcc>
   10118:	29003fcc 	andi	r4,r5,255
   1011c:	200c923a 	slli	r6,r4,8
   10120:	3a000430 	cmpltui	r8,r7,16
   10124:	3108b03a 	or	r4,r6,r4
   10128:	200c943a 	slli	r6,r4,16
   1012c:	310cb03a 	or	r6,r6,r4
   10130:	40000e1e 	bne	r8,zero,1016c <memset+0x98>
   10134:	393ffc04 	addi	r4,r7,-16
   10138:	2008d13a 	srli	r4,r4,4
   1013c:	21000044 	addi	r4,r4,1
   10140:	2008913a 	slli	r4,r4,4
   10144:	1909883a 	add	r4,r3,r4
   10148:	19800015 	stw	r6,0(r3)
   1014c:	19800115 	stw	r6,4(r3)
   10150:	19800215 	stw	r6,8(r3)
   10154:	19800315 	stw	r6,12(r3)
   10158:	18c00404 	addi	r3,r3,16
   1015c:	20fffa1e 	bne	r4,r3,10148 <memset+0x74>
   10160:	3900030c 	andi	r4,r7,12
   10164:	39c003cc 	andi	r7,r7,15
   10168:	20000d26 	beq	r4,zero,101a0 <memset+0xcc>
   1016c:	1811883a 	mov	r8,r3
   10170:	42000104 	addi	r8,r8,4
   10174:	3a09c83a 	sub	r4,r7,r8
   10178:	1909883a 	add	r4,r3,r4
   1017c:	21000128 	cmpgeui	r4,r4,4
   10180:	41bfff15 	stw	r6,-4(r8)
   10184:	203ffa1e 	bne	r4,zero,10170 <memset+0x9c>
   10188:	393fff04 	addi	r4,r7,-4
   1018c:	2008d0ba 	srli	r4,r4,2
   10190:	39c000cc 	andi	r7,r7,3
   10194:	21000044 	addi	r4,r4,1
   10198:	200890ba 	slli	r4,r4,2
   1019c:	1907883a 	add	r3,r3,r4
   101a0:	38000426 	beq	r7,zero,101b4 <memset+0xe0>
   101a4:	19cf883a 	add	r7,r3,r7
   101a8:	18c00044 	addi	r3,r3,1
   101ac:	197fffc5 	stb	r5,-1(r3)
   101b0:	38fffd1e 	bne	r7,r3,101a8 <memset+0xd4>
   101b4:	f800283a 	ret
   101b8:	2007883a 	mov	r3,r4
   101bc:	300f883a 	mov	r7,r6
   101c0:	003fd306 	br	10110 <memset+0x3c>

000101c4 <_Balloc>:
   101c4:	20801317 	ldw	r2,76(r4)
   101c8:	defffc04 	addi	sp,sp,-16
   101cc:	dc400115 	stw	r17,4(sp)
   101d0:	dc000015 	stw	r16,0(sp)
   101d4:	dfc00315 	stw	ra,12(sp)
   101d8:	dc800215 	stw	r18,8(sp)
   101dc:	2021883a 	mov	r16,r4
   101e0:	2823883a 	mov	r17,r5
   101e4:	10000e26 	beq	r2,zero,10220 <_Balloc+0x5c>
   101e8:	880690ba 	slli	r3,r17,2
   101ec:	10c7883a 	add	r3,r2,r3
   101f0:	18800017 	ldw	r2,0(r3)
   101f4:	10001126 	beq	r2,zero,1023c <_Balloc+0x78>
   101f8:	11000017 	ldw	r4,0(r2)
   101fc:	19000015 	stw	r4,0(r3)
   10200:	10000415 	stw	zero,16(r2)
   10204:	10000315 	stw	zero,12(r2)
   10208:	dfc00317 	ldw	ra,12(sp)
   1020c:	dc800217 	ldw	r18,8(sp)
   10210:	dc400117 	ldw	r17,4(sp)
   10214:	dc000017 	ldw	r16,0(sp)
   10218:	dec00404 	addi	sp,sp,16
   1021c:	f800283a 	ret
   10220:	01800844 	movi	r6,33
   10224:	01400104 	movi	r5,4
   10228:	0012fac0 	call	12fac <_calloc_r>
   1022c:	80801315 	stw	r2,76(r16)
   10230:	103fed1e 	bne	r2,zero,101e8 <_Balloc+0x24>
   10234:	0005883a 	mov	r2,zero
   10238:	003ff306 	br	10208 <_Balloc+0x44>
   1023c:	04800044 	movi	r18,1
   10240:	9464983a 	sll	r18,r18,r17
   10244:	01400044 	movi	r5,1
   10248:	8009883a 	mov	r4,r16
   1024c:	91800144 	addi	r6,r18,5
   10250:	300c90ba 	slli	r6,r6,2
   10254:	0012fac0 	call	12fac <_calloc_r>
   10258:	103ff626 	beq	r2,zero,10234 <_Balloc+0x70>
   1025c:	14400115 	stw	r17,4(r2)
   10260:	14800215 	stw	r18,8(r2)
   10264:	003fe606 	br	10200 <_Balloc+0x3c>

00010268 <_Bfree>:
   10268:	28000726 	beq	r5,zero,10288 <_Bfree+0x20>
   1026c:	28c00117 	ldw	r3,4(r5)
   10270:	20801317 	ldw	r2,76(r4)
   10274:	180690ba 	slli	r3,r3,2
   10278:	10c5883a 	add	r2,r2,r3
   1027c:	10c00017 	ldw	r3,0(r2)
   10280:	28c00015 	stw	r3,0(r5)
   10284:	11400015 	stw	r5,0(r2)
   10288:	f800283a 	ret

0001028c <__multadd>:
   1028c:	defff704 	addi	sp,sp,-36
   10290:	dc800215 	stw	r18,8(sp)
   10294:	2c800417 	ldw	r18,16(r5)
   10298:	ddc00715 	stw	r23,28(sp)
   1029c:	dd800615 	stw	r22,24(sp)
   102a0:	dd400515 	stw	r21,20(sp)
   102a4:	dd000415 	stw	r20,16(sp)
   102a8:	dcc00315 	stw	r19,12(sp)
   102ac:	dc400115 	stw	r17,4(sp)
   102b0:	dfc00815 	stw	ra,32(sp)
   102b4:	dc000015 	stw	r16,0(sp)
   102b8:	2827883a 	mov	r19,r5
   102bc:	2029883a 	mov	r20,r4
   102c0:	302b883a 	mov	r21,r6
   102c4:	3823883a 	mov	r17,r7
   102c8:	2d800504 	addi	r22,r5,20
   102cc:	002f883a 	mov	r23,zero
   102d0:	b4000017 	ldw	r16,0(r22)
   102d4:	a80b883a 	mov	r5,r21
   102d8:	b5800104 	addi	r22,r22,4
   102dc:	813fffcc 	andi	r4,r16,65535
   102e0:	00079b80 	call	79b8 <__mulsi3>
   102e4:	8008d43a 	srli	r4,r16,16
   102e8:	a80b883a 	mov	r5,r21
   102ec:	1461883a 	add	r16,r2,r17
   102f0:	00079b80 	call	79b8 <__mulsi3>
   102f4:	800ed43a 	srli	r7,r16,16
   102f8:	843fffcc 	andi	r16,r16,65535
   102fc:	bdc00044 	addi	r23,r23,1
   10300:	11c5883a 	add	r2,r2,r7
   10304:	1006943a 	slli	r3,r2,16
   10308:	1022d43a 	srli	r17,r2,16
   1030c:	1c21883a 	add	r16,r3,r16
   10310:	b43fff15 	stw	r16,-4(r22)
   10314:	bcbfee16 	blt	r23,r18,102d0 <__multadd+0x44>
   10318:	88000826 	beq	r17,zero,1033c <__multadd+0xb0>
   1031c:	98800217 	ldw	r2,8(r19)
   10320:	9080120e 	bge	r18,r2,1036c <__multadd+0xe0>
   10324:	90800144 	addi	r2,r18,5
   10328:	100490ba 	slli	r2,r2,2
   1032c:	94800044 	addi	r18,r18,1
   10330:	9885883a 	add	r2,r19,r2
   10334:	14400015 	stw	r17,0(r2)
   10338:	9c800415 	stw	r18,16(r19)
   1033c:	9805883a 	mov	r2,r19
   10340:	dfc00817 	ldw	ra,32(sp)
   10344:	ddc00717 	ldw	r23,28(sp)
   10348:	dd800617 	ldw	r22,24(sp)
   1034c:	dd400517 	ldw	r21,20(sp)
   10350:	dd000417 	ldw	r20,16(sp)
   10354:	dcc00317 	ldw	r19,12(sp)
   10358:	dc800217 	ldw	r18,8(sp)
   1035c:	dc400117 	ldw	r17,4(sp)
   10360:	dc000017 	ldw	r16,0(sp)
   10364:	dec00904 	addi	sp,sp,36
   10368:	f800283a 	ret
   1036c:	99400117 	ldw	r5,4(r19)
   10370:	a009883a 	mov	r4,r20
   10374:	29400044 	addi	r5,r5,1
   10378:	00101c40 	call	101c4 <_Balloc>
   1037c:	1021883a 	mov	r16,r2
   10380:	10001226 	beq	r2,zero,103cc <__multadd+0x140>
   10384:	99800417 	ldw	r6,16(r19)
   10388:	99400304 	addi	r5,r19,12
   1038c:	11000304 	addi	r4,r2,12
   10390:	31800084 	addi	r6,r6,2
   10394:	300c90ba 	slli	r6,r6,2
   10398:	000acd80 	call	acd8 <memcpy>
   1039c:	98000926 	beq	r19,zero,103c4 <__multadd+0x138>
   103a0:	98c00117 	ldw	r3,4(r19)
   103a4:	a0801317 	ldw	r2,76(r20)
   103a8:	180690ba 	slli	r3,r3,2
   103ac:	10c5883a 	add	r2,r2,r3
   103b0:	10c00017 	ldw	r3,0(r2)
   103b4:	98c00015 	stw	r3,0(r19)
   103b8:	14c00015 	stw	r19,0(r2)
   103bc:	8027883a 	mov	r19,r16
   103c0:	003fd806 	br	10324 <__multadd+0x98>
   103c4:	8027883a 	mov	r19,r16
   103c8:	003fd606 	br	10324 <__multadd+0x98>
   103cc:	01c000b4 	movhi	r7,2
   103d0:	010000b4 	movhi	r4,2
   103d4:	39e02904 	addi	r7,r7,-32604
   103d8:	000d883a 	mov	r6,zero
   103dc:	01402d44 	movi	r5,181
   103e0:	21203e04 	addi	r4,r4,-32520
   103e4:	0012f340 	call	12f34 <__assert_func>

000103e8 <__s2b>:
   103e8:	defff904 	addi	sp,sp,-28
   103ec:	dc800215 	stw	r18,8(sp)
   103f0:	dc000015 	stw	r16,0(sp)
   103f4:	2025883a 	mov	r18,r4
   103f8:	2821883a 	mov	r16,r5
   103fc:	39000204 	addi	r4,r7,8
   10400:	01400244 	movi	r5,9
   10404:	dcc00315 	stw	r19,12(sp)
   10408:	dc400115 	stw	r17,4(sp)
   1040c:	dfc00615 	stw	ra,24(sp)
   10410:	3823883a 	mov	r17,r7
   10414:	dd400515 	stw	r21,20(sp)
   10418:	dd000415 	stw	r20,16(sp)
   1041c:	3027883a 	mov	r19,r6
   10420:	00078040 	call	7804 <__divsi3>
   10424:	88c00290 	cmplti	r3,r17,10
   10428:	1800341e 	bne	r3,zero,104fc <__s2b+0x114>
   1042c:	00c00044 	movi	r3,1
   10430:	000b883a 	mov	r5,zero
   10434:	18c7883a 	add	r3,r3,r3
   10438:	29400044 	addi	r5,r5,1
   1043c:	18bffd16 	blt	r3,r2,10434 <__s2b+0x4c>
   10440:	9009883a 	mov	r4,r18
   10444:	00101c40 	call	101c4 <_Balloc>
   10448:	100b883a 	mov	r5,r2
   1044c:	10002d26 	beq	r2,zero,10504 <__s2b+0x11c>
   10450:	d8800717 	ldw	r2,28(sp)
   10454:	28800515 	stw	r2,20(r5)
   10458:	00800044 	movi	r2,1
   1045c:	28800415 	stw	r2,16(r5)
   10460:	98800290 	cmplti	r2,r19,10
   10464:	1000221e 	bne	r2,zero,104f0 <__s2b+0x108>
   10468:	85400244 	addi	r21,r16,9
   1046c:	a829883a 	mov	r20,r21
   10470:	84e1883a 	add	r16,r16,r19
   10474:	a1c00007 	ldb	r7,0(r20)
   10478:	01800284 	movi	r6,10
   1047c:	9009883a 	mov	r4,r18
   10480:	39fff404 	addi	r7,r7,-48
   10484:	001028c0 	call	1028c <__multadd>
   10488:	a5000044 	addi	r20,r20,1
   1048c:	100b883a 	mov	r5,r2
   10490:	a43ff81e 	bne	r20,r16,10474 <__s2b+0x8c>
   10494:	9c3ffe04 	addi	r16,r19,-8
   10498:	ac21883a 	add	r16,r21,r16
   1049c:	9c400a0e 	bge	r19,r17,104c8 <__s2b+0xe0>
   104a0:	8ce3c83a 	sub	r17,r17,r19
   104a4:	8463883a 	add	r17,r16,r17
   104a8:	81c00007 	ldb	r7,0(r16)
   104ac:	01800284 	movi	r6,10
   104b0:	9009883a 	mov	r4,r18
   104b4:	39fff404 	addi	r7,r7,-48
   104b8:	001028c0 	call	1028c <__multadd>
   104bc:	84000044 	addi	r16,r16,1
   104c0:	100b883a 	mov	r5,r2
   104c4:	8c3ff81e 	bne	r17,r16,104a8 <__s2b+0xc0>
   104c8:	2805883a 	mov	r2,r5
   104cc:	dfc00617 	ldw	ra,24(sp)
   104d0:	dd400517 	ldw	r21,20(sp)
   104d4:	dd000417 	ldw	r20,16(sp)
   104d8:	dcc00317 	ldw	r19,12(sp)
   104dc:	dc800217 	ldw	r18,8(sp)
   104e0:	dc400117 	ldw	r17,4(sp)
   104e4:	dc000017 	ldw	r16,0(sp)
   104e8:	dec00704 	addi	sp,sp,28
   104ec:	f800283a 	ret
   104f0:	84000284 	addi	r16,r16,10
   104f4:	04c00244 	movi	r19,9
   104f8:	003fe806 	br	1049c <__s2b+0xb4>
   104fc:	000b883a 	mov	r5,zero
   10500:	003fcf06 	br	10440 <__s2b+0x58>
   10504:	01c000b4 	movhi	r7,2
   10508:	010000b4 	movhi	r4,2
   1050c:	39e02904 	addi	r7,r7,-32604
   10510:	000d883a 	mov	r6,zero
   10514:	01403384 	movi	r5,206
   10518:	21203e04 	addi	r4,r4,-32520
   1051c:	0012f340 	call	12f34 <__assert_func>

00010520 <__hi0bits>:
   10520:	20bfffec 	andhi	r2,r4,65535
   10524:	1000131e 	bne	r2,zero,10574 <__hi0bits+0x54>
   10528:	2008943a 	slli	r4,r4,16
   1052c:	00800404 	movi	r2,16
   10530:	20ffc02c 	andhi	r3,r4,65280
   10534:	1800021e 	bne	r3,zero,10540 <__hi0bits+0x20>
   10538:	2008923a 	slli	r4,r4,8
   1053c:	10800204 	addi	r2,r2,8
   10540:	20fc002c 	andhi	r3,r4,61440
   10544:	1800021e 	bne	r3,zero,10550 <__hi0bits+0x30>
   10548:	2008913a 	slli	r4,r4,4
   1054c:	10800104 	addi	r2,r2,4
   10550:	20f0002c 	andhi	r3,r4,49152
   10554:	1800021e 	bne	r3,zero,10560 <__hi0bits+0x40>
   10558:	200890ba 	slli	r4,r4,2
   1055c:	10800084 	addi	r2,r2,2
   10560:	20000316 	blt	r4,zero,10570 <__hi0bits+0x50>
   10564:	2110002c 	andhi	r4,r4,16384
   10568:	10800044 	addi	r2,r2,1
   1056c:	20000326 	beq	r4,zero,1057c <__hi0bits+0x5c>
   10570:	f800283a 	ret
   10574:	0005883a 	mov	r2,zero
   10578:	003fed06 	br	10530 <__hi0bits+0x10>
   1057c:	00800804 	movi	r2,32
   10580:	f800283a 	ret

00010584 <__lo0bits>:
   10584:	20c00017 	ldw	r3,0(r4)
   10588:	188001cc 	andi	r2,r3,7
   1058c:	10000826 	beq	r2,zero,105b0 <__lo0bits+0x2c>
   10590:	1880004c 	andi	r2,r3,1
   10594:	10001f1e 	bne	r2,zero,10614 <__lo0bits+0x90>
   10598:	1880008c 	andi	r2,r3,2
   1059c:	10002126 	beq	r2,zero,10624 <__lo0bits+0xa0>
   105a0:	1806d07a 	srli	r3,r3,1
   105a4:	00800044 	movi	r2,1
   105a8:	20c00015 	stw	r3,0(r4)
   105ac:	f800283a 	ret
   105b0:	18bfffcc 	andi	r2,r3,65535
   105b4:	10001426 	beq	r2,zero,10608 <__lo0bits+0x84>
   105b8:	0005883a 	mov	r2,zero
   105bc:	19403fcc 	andi	r5,r3,255
   105c0:	2800021e 	bne	r5,zero,105cc <__lo0bits+0x48>
   105c4:	1806d23a 	srli	r3,r3,8
   105c8:	10800204 	addi	r2,r2,8
   105cc:	194003cc 	andi	r5,r3,15
   105d0:	2800021e 	bne	r5,zero,105dc <__lo0bits+0x58>
   105d4:	1806d13a 	srli	r3,r3,4
   105d8:	10800104 	addi	r2,r2,4
   105dc:	194000cc 	andi	r5,r3,3
   105e0:	2800021e 	bne	r5,zero,105ec <__lo0bits+0x68>
   105e4:	1806d0ba 	srli	r3,r3,2
   105e8:	10800084 	addi	r2,r2,2
   105ec:	1940004c 	andi	r5,r3,1
   105f0:	2800031e 	bne	r5,zero,10600 <__lo0bits+0x7c>
   105f4:	1806d07a 	srli	r3,r3,1
   105f8:	10800044 	addi	r2,r2,1
   105fc:	18000726 	beq	r3,zero,1061c <__lo0bits+0x98>
   10600:	20c00015 	stw	r3,0(r4)
   10604:	f800283a 	ret
   10608:	1806d43a 	srli	r3,r3,16
   1060c:	00800404 	movi	r2,16
   10610:	003fea06 	br	105bc <__lo0bits+0x38>
   10614:	0005883a 	mov	r2,zero
   10618:	f800283a 	ret
   1061c:	00800804 	movi	r2,32
   10620:	f800283a 	ret
   10624:	1806d0ba 	srli	r3,r3,2
   10628:	00800084 	movi	r2,2
   1062c:	20c00015 	stw	r3,0(r4)
   10630:	f800283a 	ret

00010634 <__i2b>:
   10634:	20c01317 	ldw	r3,76(r4)
   10638:	defffd04 	addi	sp,sp,-12
   1063c:	dc400115 	stw	r17,4(sp)
   10640:	dc000015 	stw	r16,0(sp)
   10644:	dfc00215 	stw	ra,8(sp)
   10648:	2021883a 	mov	r16,r4
   1064c:	2823883a 	mov	r17,r5
   10650:	18000d26 	beq	r3,zero,10688 <__i2b+0x54>
   10654:	18800117 	ldw	r2,4(r3)
   10658:	10001826 	beq	r2,zero,106bc <__i2b+0x88>
   1065c:	11000017 	ldw	r4,0(r2)
   10660:	19000115 	stw	r4,4(r3)
   10664:	00c00044 	movi	r3,1
   10668:	10000315 	stw	zero,12(r2)
   1066c:	14400515 	stw	r17,20(r2)
   10670:	10c00415 	stw	r3,16(r2)
   10674:	dfc00217 	ldw	ra,8(sp)
   10678:	dc400117 	ldw	r17,4(sp)
   1067c:	dc000017 	ldw	r16,0(sp)
   10680:	dec00304 	addi	sp,sp,12
   10684:	f800283a 	ret
   10688:	01800844 	movi	r6,33
   1068c:	01400104 	movi	r5,4
   10690:	0012fac0 	call	12fac <_calloc_r>
   10694:	80801315 	stw	r2,76(r16)
   10698:	1007883a 	mov	r3,r2
   1069c:	103fed1e 	bne	r2,zero,10654 <__i2b+0x20>
   106a0:	01c000b4 	movhi	r7,2
   106a4:	010000b4 	movhi	r4,2
   106a8:	39e02904 	addi	r7,r7,-32604
   106ac:	000d883a 	mov	r6,zero
   106b0:	01405004 	movi	r5,320
   106b4:	21203e04 	addi	r4,r4,-32520
   106b8:	0012f340 	call	12f34 <__assert_func>
   106bc:	01800704 	movi	r6,28
   106c0:	01400044 	movi	r5,1
   106c4:	8009883a 	mov	r4,r16
   106c8:	0012fac0 	call	12fac <_calloc_r>
   106cc:	103ff426 	beq	r2,zero,106a0 <__i2b+0x6c>
   106d0:	00c00044 	movi	r3,1
   106d4:	10c00115 	stw	r3,4(r2)
   106d8:	00c00084 	movi	r3,2
   106dc:	10c00215 	stw	r3,8(r2)
   106e0:	003fe006 	br	10664 <__i2b+0x30>

000106e4 <__multiply>:
   106e4:	defff004 	addi	sp,sp,-64
   106e8:	dd800c15 	stw	r22,48(sp)
   106ec:	dc400715 	stw	r17,28(sp)
   106f0:	2d800417 	ldw	r22,16(r5)
   106f4:	34400417 	ldw	r17,16(r6)
   106f8:	dc800815 	stw	r18,32(sp)
   106fc:	dc000615 	stw	r16,24(sp)
   10700:	dfc00f15 	stw	ra,60(sp)
   10704:	df000e15 	stw	fp,56(sp)
   10708:	ddc00d15 	stw	r23,52(sp)
   1070c:	dd400b15 	stw	r21,44(sp)
   10710:	dd000a15 	stw	r20,40(sp)
   10714:	dcc00915 	stw	r19,36(sp)
   10718:	2825883a 	mov	r18,r5
   1071c:	3021883a 	mov	r16,r6
   10720:	b4400516 	blt	r22,r17,10738 <__multiply+0x54>
   10724:	8807883a 	mov	r3,r17
   10728:	2821883a 	mov	r16,r5
   1072c:	b023883a 	mov	r17,r22
   10730:	3025883a 	mov	r18,r6
   10734:	182d883a 	mov	r22,r3
   10738:	80800217 	ldw	r2,8(r16)
   1073c:	8d87883a 	add	r3,r17,r22
   10740:	d8c00015 	stw	r3,0(sp)
   10744:	81400117 	ldw	r5,4(r16)
   10748:	10c0010e 	bge	r2,r3,10750 <__multiply+0x6c>
   1074c:	29400044 	addi	r5,r5,1
   10750:	00101c40 	call	101c4 <_Balloc>
   10754:	d8800515 	stw	r2,20(sp)
   10758:	10008c26 	beq	r2,zero,1098c <__multiply+0x2a8>
   1075c:	d8800017 	ldw	r2,0(sp)
   10760:	102690ba 	slli	r19,r2,2
   10764:	d8800517 	ldw	r2,20(sp)
   10768:	15000504 	addi	r20,r2,20
   1076c:	a4c5883a 	add	r2,r20,r19
   10770:	d8800115 	stw	r2,4(sp)
   10774:	a0800a2e 	bgeu	r20,r2,107a0 <__multiply+0xbc>
   10778:	d8800117 	ldw	r2,4(sp)
   1077c:	d8c00517 	ldw	r3,20(sp)
   10780:	000b883a 	mov	r5,zero
   10784:	a009883a 	mov	r4,r20
   10788:	10cdc83a 	sub	r6,r2,r3
   1078c:	31bffac4 	addi	r6,r6,-21
   10790:	300cd0ba 	srli	r6,r6,2
   10794:	31800044 	addi	r6,r6,1
   10798:	300c90ba 	slli	r6,r6,2
   1079c:	00100d40 	call	100d4 <memset>
   107a0:	b02c90ba 	slli	r22,r22,2
   107a4:	882290ba 	slli	r17,r17,2
   107a8:	94800504 	addi	r18,r18,20
   107ac:	80800504 	addi	r2,r16,20
   107b0:	9587883a 	add	r3,r18,r22
   107b4:	d8800315 	stw	r2,12(sp)
   107b8:	d8c00215 	stw	r3,8(sp)
   107bc:	1463883a 	add	r17,r2,r17
   107c0:	90c0542e 	bgeu	r18,r3,10914 <__multiply+0x230>
   107c4:	80800544 	addi	r2,r16,21
   107c8:	88806d36 	bltu	r17,r2,10980 <__multiply+0x29c>
   107cc:	8c05c83a 	sub	r2,r17,r16
   107d0:	10bffac4 	addi	r2,r2,-21
   107d4:	1004d0ba 	srli	r2,r2,2
   107d8:	10800044 	addi	r2,r2,1
   107dc:	100490ba 	slli	r2,r2,2
   107e0:	d8800415 	stw	r2,16(sp)
   107e4:	00000606 	br	10800 <__multiply+0x11c>
   107e8:	102ad43a 	srli	r21,r2,16
   107ec:	a800271e 	bne	r21,zero,1088c <__multiply+0x1a8>
   107f0:	d8800217 	ldw	r2,8(sp)
   107f4:	94800104 	addi	r18,r18,4
   107f8:	a5000104 	addi	r20,r20,4
   107fc:	9080452e 	bgeu	r18,r2,10914 <__multiply+0x230>
   10800:	90800017 	ldw	r2,0(r18)
   10804:	15ffffcc 	andi	r23,r2,65535
   10808:	b83ff726 	beq	r23,zero,107e8 <__multiply+0x104>
   1080c:	dd400317 	ldw	r21,12(sp)
   10810:	a02d883a 	mov	r22,r20
   10814:	0027883a 	mov	r19,zero
   10818:	af000017 	ldw	fp,0(r21)
   1081c:	b4000017 	ldw	r16,0(r22)
   10820:	b80b883a 	mov	r5,r23
   10824:	e13fffcc 	andi	r4,fp,65535
   10828:	00079b80 	call	79b8 <__mulsi3>
   1082c:	e008d43a 	srli	r4,fp,16
   10830:	823fffcc 	andi	r8,r16,65535
   10834:	1205883a 	add	r2,r2,r8
   10838:	b80b883a 	mov	r5,r23
   1083c:	14e7883a 	add	r19,r2,r19
   10840:	8020d43a 	srli	r16,r16,16
   10844:	00079b80 	call	79b8 <__mulsi3>
   10848:	9808d43a 	srli	r4,r19,16
   1084c:	1405883a 	add	r2,r2,r16
   10850:	98ffffcc 	andi	r3,r19,65535
   10854:	1105883a 	add	r2,r2,r4
   10858:	1008943a 	slli	r4,r2,16
   1085c:	b5800104 	addi	r22,r22,4
   10860:	ad400104 	addi	r21,r21,4
   10864:	20c6b03a 	or	r3,r4,r3
   10868:	b0ffff15 	stw	r3,-4(r22)
   1086c:	1026d43a 	srli	r19,r2,16
   10870:	ac7fe936 	bltu	r21,r17,10818 <__multiply+0x134>
   10874:	d8800417 	ldw	r2,16(sp)
   10878:	a085883a 	add	r2,r20,r2
   1087c:	14c00015 	stw	r19,0(r2)
   10880:	90800017 	ldw	r2,0(r18)
   10884:	102ad43a 	srli	r21,r2,16
   10888:	a83fd926 	beq	r21,zero,107f0 <__multiply+0x10c>
   1088c:	a5c00017 	ldw	r23,0(r20)
   10890:	dd800317 	ldw	r22,12(sp)
   10894:	a027883a 	mov	r19,r20
   10898:	b821883a 	mov	r16,r23
   1089c:	0039883a 	mov	fp,zero
   108a0:	b100000b 	ldhu	r4,0(r22)
   108a4:	a80b883a 	mov	r5,r21
   108a8:	9cc00104 	addi	r19,r19,4
   108ac:	00079b80 	call	79b8 <__mulsi3>
   108b0:	800cd43a 	srli	r6,r16,16
   108b4:	b8ffffcc 	andi	r3,r23,65535
   108b8:	b5800104 	addi	r22,r22,4
   108bc:	118d883a 	add	r6,r2,r6
   108c0:	3739883a 	add	fp,r6,fp
   108c4:	e004943a 	slli	r2,fp,16
   108c8:	9c000017 	ldw	r16,0(r19)
   108cc:	a80b883a 	mov	r5,r21
   108d0:	10c6b03a 	or	r3,r2,r3
   108d4:	98ffff15 	stw	r3,-4(r19)
   108d8:	b13fff8b 	ldhu	r4,-2(r22)
   108dc:	00079b80 	call	79b8 <__mulsi3>
   108e0:	e00cd43a 	srli	r6,fp,16
   108e4:	80ffffcc 	andi	r3,r16,65535
   108e8:	10c7883a 	add	r3,r2,r3
   108ec:	19af883a 	add	r23,r3,r6
   108f0:	b838d43a 	srli	fp,r23,16
   108f4:	b47fea36 	bltu	r22,r17,108a0 <__multiply+0x1bc>
   108f8:	d8800417 	ldw	r2,16(sp)
   108fc:	94800104 	addi	r18,r18,4
   10900:	a085883a 	add	r2,r20,r2
   10904:	15c00015 	stw	r23,0(r2)
   10908:	d8800217 	ldw	r2,8(sp)
   1090c:	a5000104 	addi	r20,r20,4
   10910:	90bfbb36 	bltu	r18,r2,10800 <__multiply+0x11c>
   10914:	d8800017 	ldw	r2,0(sp)
   10918:	00800516 	blt	zero,r2,10930 <__multiply+0x24c>
   1091c:	00000906 	br	10944 <__multiply+0x260>
   10920:	d8800017 	ldw	r2,0(sp)
   10924:	10bfffc4 	addi	r2,r2,-1
   10928:	d8800015 	stw	r2,0(sp)
   1092c:	10000526 	beq	r2,zero,10944 <__multiply+0x260>
   10930:	d8c00117 	ldw	r3,4(sp)
   10934:	18bfff17 	ldw	r2,-4(r3)
   10938:	18ffff04 	addi	r3,r3,-4
   1093c:	d8c00115 	stw	r3,4(sp)
   10940:	103ff726 	beq	r2,zero,10920 <__multiply+0x23c>
   10944:	d8800517 	ldw	r2,20(sp)
   10948:	d8c00017 	ldw	r3,0(sp)
   1094c:	10c00415 	stw	r3,16(r2)
   10950:	dfc00f17 	ldw	ra,60(sp)
   10954:	df000e17 	ldw	fp,56(sp)
   10958:	ddc00d17 	ldw	r23,52(sp)
   1095c:	dd800c17 	ldw	r22,48(sp)
   10960:	dd400b17 	ldw	r21,44(sp)
   10964:	dd000a17 	ldw	r20,40(sp)
   10968:	dcc00917 	ldw	r19,36(sp)
   1096c:	dc800817 	ldw	r18,32(sp)
   10970:	dc400717 	ldw	r17,28(sp)
   10974:	dc000617 	ldw	r16,24(sp)
   10978:	dec01004 	addi	sp,sp,64
   1097c:	f800283a 	ret
   10980:	00800104 	movi	r2,4
   10984:	d8800415 	stw	r2,16(sp)
   10988:	003f9d06 	br	10800 <__multiply+0x11c>
   1098c:	01c000b4 	movhi	r7,2
   10990:	010000b4 	movhi	r4,2
   10994:	39e02904 	addi	r7,r7,-32604
   10998:	000d883a 	mov	r6,zero
   1099c:	01405744 	movi	r5,349
   109a0:	21203e04 	addi	r4,r4,-32520
   109a4:	0012f340 	call	12f34 <__assert_func>

000109a8 <__pow5mult>:
   109a8:	defffb04 	addi	sp,sp,-20
   109ac:	dcc00315 	stw	r19,12(sp)
   109b0:	dc000015 	stw	r16,0(sp)
   109b4:	dfc00415 	stw	ra,16(sp)
   109b8:	dc800215 	stw	r18,8(sp)
   109bc:	dc400115 	stw	r17,4(sp)
   109c0:	308000cc 	andi	r2,r6,3
   109c4:	3021883a 	mov	r16,r6
   109c8:	2027883a 	mov	r19,r4
   109cc:	10002d1e 	bne	r2,zero,10a84 <__pow5mult+0xdc>
   109d0:	2825883a 	mov	r18,r5
   109d4:	8021d0ba 	srai	r16,r16,2
   109d8:	80001926 	beq	r16,zero,10a40 <__pow5mult+0x98>
   109dc:	9c401217 	ldw	r17,72(r19)
   109e0:	8800061e 	bne	r17,zero,109fc <__pow5mult+0x54>
   109e4:	00002f06 	br	10aa4 <__pow5mult+0xfc>
   109e8:	8021d07a 	srai	r16,r16,1
   109ec:	80001426 	beq	r16,zero,10a40 <__pow5mult+0x98>
   109f0:	88800017 	ldw	r2,0(r17)
   109f4:	10001a26 	beq	r2,zero,10a60 <__pow5mult+0xb8>
   109f8:	1023883a 	mov	r17,r2
   109fc:	8080004c 	andi	r2,r16,1
   10a00:	103ff926 	beq	r2,zero,109e8 <__pow5mult+0x40>
   10a04:	880d883a 	mov	r6,r17
   10a08:	900b883a 	mov	r5,r18
   10a0c:	9809883a 	mov	r4,r19
   10a10:	00106e40 	call	106e4 <__multiply>
   10a14:	90001926 	beq	r18,zero,10a7c <__pow5mult+0xd4>
   10a18:	91000117 	ldw	r4,4(r18)
   10a1c:	98c01317 	ldw	r3,76(r19)
   10a20:	8021d07a 	srai	r16,r16,1
   10a24:	200890ba 	slli	r4,r4,2
   10a28:	1907883a 	add	r3,r3,r4
   10a2c:	19000017 	ldw	r4,0(r3)
   10a30:	91000015 	stw	r4,0(r18)
   10a34:	1c800015 	stw	r18,0(r3)
   10a38:	1025883a 	mov	r18,r2
   10a3c:	803fec1e 	bne	r16,zero,109f0 <__pow5mult+0x48>
   10a40:	9005883a 	mov	r2,r18
   10a44:	dfc00417 	ldw	ra,16(sp)
   10a48:	dcc00317 	ldw	r19,12(sp)
   10a4c:	dc800217 	ldw	r18,8(sp)
   10a50:	dc400117 	ldw	r17,4(sp)
   10a54:	dc000017 	ldw	r16,0(sp)
   10a58:	dec00504 	addi	sp,sp,20
   10a5c:	f800283a 	ret
   10a60:	880d883a 	mov	r6,r17
   10a64:	880b883a 	mov	r5,r17
   10a68:	9809883a 	mov	r4,r19
   10a6c:	00106e40 	call	106e4 <__multiply>
   10a70:	88800015 	stw	r2,0(r17)
   10a74:	10000015 	stw	zero,0(r2)
   10a78:	003fdf06 	br	109f8 <__pow5mult+0x50>
   10a7c:	1025883a 	mov	r18,r2
   10a80:	003fd906 	br	109e8 <__pow5mult+0x40>
   10a84:	100490ba 	slli	r2,r2,2
   10a88:	00c000b4 	movhi	r3,2
   10a8c:	000f883a 	mov	r7,zero
   10a90:	10c7883a 	add	r3,r2,r3
   10a94:	19a04d17 	ldw	r6,-32460(r3)
   10a98:	001028c0 	call	1028c <__multadd>
   10a9c:	1025883a 	mov	r18,r2
   10aa0:	003fcc06 	br	109d4 <__pow5mult+0x2c>
   10aa4:	01400044 	movi	r5,1
   10aa8:	9809883a 	mov	r4,r19
   10aac:	00101c40 	call	101c4 <_Balloc>
   10ab0:	1023883a 	mov	r17,r2
   10ab4:	10000726 	beq	r2,zero,10ad4 <__pow5mult+0x12c>
   10ab8:	00809c44 	movi	r2,625
   10abc:	88800515 	stw	r2,20(r17)
   10ac0:	00800044 	movi	r2,1
   10ac4:	88800415 	stw	r2,16(r17)
   10ac8:	9c401215 	stw	r17,72(r19)
   10acc:	88000015 	stw	zero,0(r17)
   10ad0:	003fca06 	br	109fc <__pow5mult+0x54>
   10ad4:	01c000b4 	movhi	r7,2
   10ad8:	010000b4 	movhi	r4,2
   10adc:	39e02904 	addi	r7,r7,-32604
   10ae0:	000d883a 	mov	r6,zero
   10ae4:	01405004 	movi	r5,320
   10ae8:	21203e04 	addi	r4,r4,-32520
   10aec:	0012f340 	call	12f34 <__assert_func>

00010af0 <__lshift>:
   10af0:	defff804 	addi	sp,sp,-32
   10af4:	dd800615 	stw	r22,24(sp)
   10af8:	dc000015 	stw	r16,0(sp)
   10afc:	302dd17a 	srai	r22,r6,5
   10b00:	2c000417 	ldw	r16,16(r5)
   10b04:	28800217 	ldw	r2,8(r5)
   10b08:	dd000415 	stw	r20,16(sp)
   10b0c:	b421883a 	add	r16,r22,r16
   10b10:	dcc00315 	stw	r19,12(sp)
   10b14:	dc800215 	stw	r18,8(sp)
   10b18:	dc400115 	stw	r17,4(sp)
   10b1c:	dfc00715 	stw	ra,28(sp)
   10b20:	dd400515 	stw	r21,20(sp)
   10b24:	85000044 	addi	r20,r16,1
   10b28:	2827883a 	mov	r19,r5
   10b2c:	3025883a 	mov	r18,r6
   10b30:	29400117 	ldw	r5,4(r5)
   10b34:	2023883a 	mov	r17,r4
   10b38:	1500030e 	bge	r2,r20,10b48 <__lshift+0x58>
   10b3c:	1085883a 	add	r2,r2,r2
   10b40:	29400044 	addi	r5,r5,1
   10b44:	153ffd16 	blt	r2,r20,10b3c <__lshift+0x4c>
   10b48:	8809883a 	mov	r4,r17
   10b4c:	00101c40 	call	101c4 <_Balloc>
   10b50:	102b883a 	mov	r21,r2
   10b54:	10004126 	beq	r2,zero,10c5c <__lshift+0x16c>
   10b58:	11000504 	addi	r4,r2,20
   10b5c:	0580050e 	bge	zero,r22,10b74 <__lshift+0x84>
   10b60:	b02c90ba 	slli	r22,r22,2
   10b64:	000b883a 	mov	r5,zero
   10b68:	b00d883a 	mov	r6,r22
   10b6c:	00100d40 	call	100d4 <memset>
   10b70:	1589883a 	add	r4,r2,r22
   10b74:	9a000417 	ldw	r8,16(r19)
   10b78:	98c00504 	addi	r3,r19,20
   10b7c:	948007cc 	andi	r18,r18,31
   10b80:	401090ba 	slli	r8,r8,2
   10b84:	1a11883a 	add	r8,r3,r8
   10b88:	90002c26 	beq	r18,zero,10c3c <__lshift+0x14c>
   10b8c:	01400804 	movi	r5,32
   10b90:	2c8bc83a 	sub	r5,r5,r18
   10b94:	2005883a 	mov	r2,r4
   10b98:	000f883a 	mov	r7,zero
   10b9c:	19800017 	ldw	r6,0(r3)
   10ba0:	10800104 	addi	r2,r2,4
   10ba4:	18c00104 	addi	r3,r3,4
   10ba8:	348c983a 	sll	r6,r6,r18
   10bac:	31ccb03a 	or	r6,r6,r7
   10bb0:	11bfff15 	stw	r6,-4(r2)
   10bb4:	19bfff17 	ldw	r6,-4(r3)
   10bb8:	314ed83a 	srl	r7,r6,r5
   10bbc:	1a3ff736 	bltu	r3,r8,10b9c <__lshift+0xac>
   10bc0:	98800544 	addi	r2,r19,21
   10bc4:	40802336 	bltu	r8,r2,10c54 <__lshift+0x164>
   10bc8:	44c7c83a 	sub	r3,r8,r19
   10bcc:	18fffac4 	addi	r3,r3,-21
   10bd0:	1806d0ba 	srli	r3,r3,2
   10bd4:	18c00044 	addi	r3,r3,1
   10bd8:	180690ba 	slli	r3,r3,2
   10bdc:	20c9883a 	add	r4,r4,r3
   10be0:	21c00015 	stw	r7,0(r4)
   10be4:	38000126 	beq	r7,zero,10bec <__lshift+0xfc>
   10be8:	a021883a 	mov	r16,r20
   10bec:	ac000415 	stw	r16,16(r21)
   10bf0:	98000726 	beq	r19,zero,10c10 <__lshift+0x120>
   10bf4:	98c00117 	ldw	r3,4(r19)
   10bf8:	88801317 	ldw	r2,76(r17)
   10bfc:	180690ba 	slli	r3,r3,2
   10c00:	10c5883a 	add	r2,r2,r3
   10c04:	10c00017 	ldw	r3,0(r2)
   10c08:	98c00015 	stw	r3,0(r19)
   10c0c:	14c00015 	stw	r19,0(r2)
   10c10:	a805883a 	mov	r2,r21
   10c14:	dfc00717 	ldw	ra,28(sp)
   10c18:	dd800617 	ldw	r22,24(sp)
   10c1c:	dd400517 	ldw	r21,20(sp)
   10c20:	dd000417 	ldw	r20,16(sp)
   10c24:	dcc00317 	ldw	r19,12(sp)
   10c28:	dc800217 	ldw	r18,8(sp)
   10c2c:	dc400117 	ldw	r17,4(sp)
   10c30:	dc000017 	ldw	r16,0(sp)
   10c34:	dec00804 	addi	sp,sp,32
   10c38:	f800283a 	ret
   10c3c:	18800017 	ldw	r2,0(r3)
   10c40:	18c00104 	addi	r3,r3,4
   10c44:	21000104 	addi	r4,r4,4
   10c48:	20bfff15 	stw	r2,-4(r4)
   10c4c:	1a3ffb36 	bltu	r3,r8,10c3c <__lshift+0x14c>
   10c50:	003fe606 	br	10bec <__lshift+0xfc>
   10c54:	00c00104 	movi	r3,4
   10c58:	003fe006 	br	10bdc <__lshift+0xec>
   10c5c:	01c000b4 	movhi	r7,2
   10c60:	010000b4 	movhi	r4,2
   10c64:	39e02904 	addi	r7,r7,-32604
   10c68:	000d883a 	mov	r6,zero
   10c6c:	01407644 	movi	r5,473
   10c70:	21203e04 	addi	r4,r4,-32520
   10c74:	0012f340 	call	12f34 <__assert_func>

00010c78 <__mcmp>:
   10c78:	21800417 	ldw	r6,16(r4)
   10c7c:	28c00417 	ldw	r3,16(r5)
   10c80:	30c5c83a 	sub	r2,r6,r3
   10c84:	30c00e1e 	bne	r6,r3,10cc0 <__mcmp+0x48>
   10c88:	180690ba 	slli	r3,r3,2
   10c8c:	21c00504 	addi	r7,r4,20
   10c90:	29400504 	addi	r5,r5,20
   10c94:	38c9883a 	add	r4,r7,r3
   10c98:	28c7883a 	add	r3,r5,r3
   10c9c:	00000106 	br	10ca4 <__mcmp+0x2c>
   10ca0:	3900082e 	bgeu	r7,r4,10cc4 <__mcmp+0x4c>
   10ca4:	21bfff17 	ldw	r6,-4(r4)
   10ca8:	197fff17 	ldw	r5,-4(r3)
   10cac:	213fff04 	addi	r4,r4,-4
   10cb0:	18ffff04 	addi	r3,r3,-4
   10cb4:	317ffa26 	beq	r6,r5,10ca0 <__mcmp+0x28>
   10cb8:	3140032e 	bgeu	r6,r5,10cc8 <__mcmp+0x50>
   10cbc:	00bfffc4 	movi	r2,-1
   10cc0:	f800283a 	ret
   10cc4:	f800283a 	ret
   10cc8:	00800044 	movi	r2,1
   10ccc:	f800283a 	ret

00010cd0 <__mdiff>:
   10cd0:	28800417 	ldw	r2,16(r5)
   10cd4:	30c00417 	ldw	r3,16(r6)
   10cd8:	defffc04 	addi	sp,sp,-16
   10cdc:	dc800215 	stw	r18,8(sp)
   10ce0:	dc400115 	stw	r17,4(sp)
   10ce4:	dc000015 	stw	r16,0(sp)
   10ce8:	dfc00315 	stw	ra,12(sp)
   10cec:	2823883a 	mov	r17,r5
   10cf0:	3021883a 	mov	r16,r6
   10cf4:	10e5c83a 	sub	r18,r2,r3
   10cf8:	10c0641e 	bne	r2,r3,10e8c <__mdiff+0x1bc>
   10cfc:	180c90ba 	slli	r6,r3,2
   10d00:	29400504 	addi	r5,r5,20
   10d04:	80c00504 	addi	r3,r16,20
   10d08:	2985883a 	add	r2,r5,r6
   10d0c:	1987883a 	add	r3,r3,r6
   10d10:	00000106 	br	10d18 <__mdiff+0x48>
   10d14:	2880642e 	bgeu	r5,r2,10ea8 <__mdiff+0x1d8>
   10d18:	11bfff17 	ldw	r6,-4(r2)
   10d1c:	19ffff17 	ldw	r7,-4(r3)
   10d20:	10bfff04 	addi	r2,r2,-4
   10d24:	18ffff04 	addi	r3,r3,-4
   10d28:	31fffa26 	beq	r6,r7,10d14 <__mdiff+0x44>
   10d2c:	31c05236 	bltu	r6,r7,10e78 <__mdiff+0x1a8>
   10d30:	89400117 	ldw	r5,4(r17)
   10d34:	00101c40 	call	101c4 <_Balloc>
   10d38:	10006226 	beq	r2,zero,10ec4 <__mdiff+0x1f4>
   10d3c:	8a400417 	ldw	r9,16(r17)
   10d40:	83000417 	ldw	r12,16(r16)
   10d44:	8ac00504 	addi	r11,r17,20
   10d48:	481090ba 	slli	r8,r9,2
   10d4c:	601890ba 	slli	r12,r12,2
   10d50:	81800504 	addi	r6,r16,20
   10d54:	13400504 	addi	r13,r2,20
   10d58:	14800315 	stw	r18,12(r2)
   10d5c:	5a11883a 	add	r8,r11,r8
   10d60:	3319883a 	add	r12,r6,r12
   10d64:	681d883a 	mov	r14,r13
   10d68:	5815883a 	mov	r10,r11
   10d6c:	0007883a 	mov	r3,zero
   10d70:	51000017 	ldw	r4,0(r10)
   10d74:	31c00017 	ldw	r7,0(r6)
   10d78:	73800104 	addi	r14,r14,4
   10d7c:	217fffcc 	andi	r5,r4,65535
   10d80:	28cb883a 	add	r5,r5,r3
   10d84:	38ffffcc 	andi	r3,r7,65535
   10d88:	28cbc83a 	sub	r5,r5,r3
   10d8c:	380ed43a 	srli	r7,r7,16
   10d90:	2006d43a 	srli	r3,r4,16
   10d94:	2809d43a 	srai	r4,r5,16
   10d98:	297fffcc 	andi	r5,r5,65535
   10d9c:	19c7c83a 	sub	r3,r3,r7
   10da0:	1907883a 	add	r3,r3,r4
   10da4:	1808943a 	slli	r4,r3,16
   10da8:	31800104 	addi	r6,r6,4
   10dac:	1807d43a 	srai	r3,r3,16
   10db0:	214ab03a 	or	r5,r4,r5
   10db4:	717fff15 	stw	r5,-4(r14)
   10db8:	52800104 	addi	r10,r10,4
   10dbc:	333fec36 	bltu	r6,r12,10d70 <__mdiff+0xa0>
   10dc0:	640fc83a 	sub	r7,r12,r16
   10dc4:	39fffac4 	addi	r7,r7,-21
   10dc8:	84000544 	addi	r16,r16,21
   10dcc:	380ed0ba 	srli	r7,r7,2
   10dd0:	64003336 	bltu	r12,r16,10ea0 <__mdiff+0x1d0>
   10dd4:	380890ba 	slli	r4,r7,2
   10dd8:	6909883a 	add	r4,r13,r4
   10ddc:	64002e36 	bltu	r12,r16,10e98 <__mdiff+0x1c8>
   10de0:	39800044 	addi	r6,r7,1
   10de4:	300c90ba 	slli	r6,r6,2
   10de8:	5997883a 	add	r11,r11,r6
   10dec:	699b883a 	add	r13,r13,r6
   10df0:	5a00152e 	bgeu	r11,r8,10e48 <__mdiff+0x178>
   10df4:	680f883a 	mov	r7,r13
   10df8:	580d883a 	mov	r6,r11
   10dfc:	31000017 	ldw	r4,0(r6)
   10e00:	39c00104 	addi	r7,r7,4
   10e04:	31800104 	addi	r6,r6,4
   10e08:	217fffcc 	andi	r5,r4,65535
   10e0c:	28cb883a 	add	r5,r5,r3
   10e10:	2815d43a 	srai	r10,r5,16
   10e14:	2006d43a 	srli	r3,r4,16
   10e18:	297fffcc 	andi	r5,r5,65535
   10e1c:	1a87883a 	add	r3,r3,r10
   10e20:	1814943a 	slli	r10,r3,16
   10e24:	1807d43a 	srai	r3,r3,16
   10e28:	514ab03a 	or	r5,r10,r5
   10e2c:	397fff15 	stw	r5,-4(r7)
   10e30:	323ff236 	bltu	r6,r8,10dfc <__mdiff+0x12c>
   10e34:	413fffc4 	addi	r4,r8,-1
   10e38:	22c9c83a 	sub	r4,r4,r11
   10e3c:	2008d0ba 	srli	r4,r4,2
   10e40:	200890ba 	slli	r4,r4,2
   10e44:	6909883a 	add	r4,r13,r4
   10e48:	2800041e 	bne	r5,zero,10e5c <__mdiff+0x18c>
   10e4c:	20ffff17 	ldw	r3,-4(r4)
   10e50:	4a7fffc4 	addi	r9,r9,-1
   10e54:	213fff04 	addi	r4,r4,-4
   10e58:	183ffc26 	beq	r3,zero,10e4c <__mdiff+0x17c>
   10e5c:	12400415 	stw	r9,16(r2)
   10e60:	dfc00317 	ldw	ra,12(sp)
   10e64:	dc800217 	ldw	r18,8(sp)
   10e68:	dc400117 	ldw	r17,4(sp)
   10e6c:	dc000017 	ldw	r16,0(sp)
   10e70:	dec00404 	addi	sp,sp,16
   10e74:	f800283a 	ret
   10e78:	8805883a 	mov	r2,r17
   10e7c:	04800044 	movi	r18,1
   10e80:	8023883a 	mov	r17,r16
   10e84:	1021883a 	mov	r16,r2
   10e88:	003fa906 	br	10d30 <__mdiff+0x60>
   10e8c:	903ffa16 	blt	r18,zero,10e78 <__mdiff+0x1a8>
   10e90:	0025883a 	mov	r18,zero
   10e94:	003fa606 	br	10d30 <__mdiff+0x60>
   10e98:	01800104 	movi	r6,4
   10e9c:	003fd206 	br	10de8 <__mdiff+0x118>
   10ea0:	0009883a 	mov	r4,zero
   10ea4:	003fcc06 	br	10dd8 <__mdiff+0x108>
   10ea8:	000b883a 	mov	r5,zero
   10eac:	00101c40 	call	101c4 <_Balloc>
   10eb0:	10000b26 	beq	r2,zero,10ee0 <__mdiff+0x210>
   10eb4:	00c00044 	movi	r3,1
   10eb8:	10c00415 	stw	r3,16(r2)
   10ebc:	10000515 	stw	zero,20(r2)
   10ec0:	003fe706 	br	10e60 <__mdiff+0x190>
   10ec4:	01c000b4 	movhi	r7,2
   10ec8:	010000b4 	movhi	r4,2
   10ecc:	39e02904 	addi	r7,r7,-32604
   10ed0:	000d883a 	mov	r6,zero
   10ed4:	01409004 	movi	r5,576
   10ed8:	21203e04 	addi	r4,r4,-32520
   10edc:	0012f340 	call	12f34 <__assert_func>
   10ee0:	01c000b4 	movhi	r7,2
   10ee4:	010000b4 	movhi	r4,2
   10ee8:	39e02904 	addi	r7,r7,-32604
   10eec:	000d883a 	mov	r6,zero
   10ef0:	01408c84 	movi	r5,562
   10ef4:	21203e04 	addi	r4,r4,-32520
   10ef8:	0012f340 	call	12f34 <__assert_func>

00010efc <__ulp>:
   10efc:	28dffc2c 	andhi	r3,r5,32752
   10f00:	017f3034 	movhi	r5,64704
   10f04:	1947883a 	add	r3,r3,r5
   10f08:	00c0020e 	bge	zero,r3,10f14 <__ulp+0x18>
   10f0c:	0005883a 	mov	r2,zero
   10f10:	f800283a 	ret
   10f14:	00c7c83a 	sub	r3,zero,r3
   10f18:	1807d53a 	srai	r3,r3,20
   10f1c:	18800508 	cmpgei	r2,r3,20
   10f20:	1000041e 	bne	r2,zero,10f34 <__ulp+0x38>
   10f24:	00800234 	movhi	r2,8
   10f28:	10c7d83a 	sra	r3,r2,r3
   10f2c:	0005883a 	mov	r2,zero
   10f30:	f800283a 	ret
   10f34:	193ffb04 	addi	r4,r3,-20
   10f38:	208007c8 	cmpgei	r2,r4,31
   10f3c:	0007883a 	mov	r3,zero
   10f40:	1000031e 	bne	r2,zero,10f50 <__ulp+0x54>
   10f44:	00a00034 	movhi	r2,32768
   10f48:	1104d83a 	srl	r2,r2,r4
   10f4c:	f800283a 	ret
   10f50:	00800044 	movi	r2,1
   10f54:	f800283a 	ret

00010f58 <__b2d>:
   10f58:	defffa04 	addi	sp,sp,-24
   10f5c:	dc400115 	stw	r17,4(sp)
   10f60:	24400417 	ldw	r17,16(r4)
   10f64:	dc000015 	stw	r16,0(sp)
   10f68:	24000504 	addi	r16,r4,20
   10f6c:	882290ba 	slli	r17,r17,2
   10f70:	dc800215 	stw	r18,8(sp)
   10f74:	dd000415 	stw	r20,16(sp)
   10f78:	8463883a 	add	r17,r16,r17
   10f7c:	8cbfff17 	ldw	r18,-4(r17)
   10f80:	dcc00315 	stw	r19,12(sp)
   10f84:	dfc00515 	stw	ra,20(sp)
   10f88:	9009883a 	mov	r4,r18
   10f8c:	2827883a 	mov	r19,r5
   10f90:	00105200 	call	10520 <__hi0bits>
   10f94:	00c00804 	movi	r3,32
   10f98:	1889c83a 	sub	r4,r3,r2
   10f9c:	99000015 	stw	r4,0(r19)
   10fa0:	110002c8 	cmpgei	r4,r2,11
   10fa4:	8d3fff04 	addi	r20,r17,-4
   10fa8:	20002026 	beq	r4,zero,1102c <__b2d+0xd4>
   10fac:	10bffd44 	addi	r2,r2,-11
   10fb0:	85000e2e 	bgeu	r16,r20,10fec <__b2d+0x94>
   10fb4:	897ffe17 	ldw	r5,-8(r17)
   10fb8:	10001226 	beq	r2,zero,11004 <__b2d+0xac>
   10fbc:	1889c83a 	sub	r4,r3,r2
   10fc0:	90a4983a 	sll	r18,r18,r2
   10fc4:	2906d83a 	srl	r3,r5,r4
   10fc8:	89bffe04 	addi	r6,r17,-8
   10fcc:	2884983a 	sll	r2,r5,r2
   10fd0:	90e4b03a 	or	r18,r18,r3
   10fd4:	90cffc34 	orhi	r3,r18,16368
   10fd8:	81800c2e 	bgeu	r16,r6,1100c <__b2d+0xb4>
   10fdc:	897ffd17 	ldw	r5,-12(r17)
   10fe0:	2908d83a 	srl	r4,r5,r4
   10fe4:	1104b03a 	or	r2,r2,r4
   10fe8:	00000806 	br	1100c <__b2d+0xb4>
   10fec:	10000426 	beq	r2,zero,11000 <__b2d+0xa8>
   10ff0:	90a4983a 	sll	r18,r18,r2
   10ff4:	0005883a 	mov	r2,zero
   10ff8:	90cffc34 	orhi	r3,r18,16368
   10ffc:	00000306 	br	1100c <__b2d+0xb4>
   11000:	000b883a 	mov	r5,zero
   11004:	90cffc34 	orhi	r3,r18,16368
   11008:	2805883a 	mov	r2,r5
   1100c:	dfc00517 	ldw	ra,20(sp)
   11010:	dd000417 	ldw	r20,16(sp)
   11014:	dcc00317 	ldw	r19,12(sp)
   11018:	dc800217 	ldw	r18,8(sp)
   1101c:	dc400117 	ldw	r17,4(sp)
   11020:	dc000017 	ldw	r16,0(sp)
   11024:	dec00604 	addi	sp,sp,24
   11028:	f800283a 	ret
   1102c:	014002c4 	movi	r5,11
   11030:	2889c83a 	sub	r4,r5,r2
   11034:	9106d83a 	srl	r3,r18,r4
   11038:	18cffc34 	orhi	r3,r3,16368
   1103c:	85000536 	bltu	r16,r20,11054 <__b2d+0xfc>
   11040:	000b883a 	mov	r5,zero
   11044:	10800544 	addi	r2,r2,21
   11048:	9084983a 	sll	r2,r18,r2
   1104c:	1144b03a 	or	r2,r2,r5
   11050:	003fee06 	br	1100c <__b2d+0xb4>
   11054:	897ffe17 	ldw	r5,-8(r17)
   11058:	290ad83a 	srl	r5,r5,r4
   1105c:	003ff906 	br	11044 <__b2d+0xec>

00011060 <__d2b>:
   11060:	defff804 	addi	sp,sp,-32
   11064:	dd000615 	stw	r20,24(sp)
   11068:	2829883a 	mov	r20,r5
   1106c:	01400044 	movi	r5,1
   11070:	dcc00515 	stw	r19,20(sp)
   11074:	dc000215 	stw	r16,8(sp)
   11078:	dfc00715 	stw	ra,28(sp)
   1107c:	dc800415 	stw	r18,16(sp)
   11080:	dc400315 	stw	r17,12(sp)
   11084:	3021883a 	mov	r16,r6
   11088:	3827883a 	mov	r19,r7
   1108c:	00101c40 	call	101c4 <_Balloc>
   11090:	10004526 	beq	r2,zero,111a8 <__d2b+0x148>
   11094:	8024d53a 	srli	r18,r16,20
   11098:	01800434 	movhi	r6,16
   1109c:	31bfffc4 	addi	r6,r6,-1
   110a0:	9481ffcc 	andi	r18,r18,2047
   110a4:	1023883a 	mov	r17,r2
   110a8:	81a0703a 	and	r16,r16,r6
   110ac:	90000126 	beq	r18,zero,110b4 <__d2b+0x54>
   110b0:	84000434 	orhi	r16,r16,16
   110b4:	dc000115 	stw	r16,4(sp)
   110b8:	a0002226 	beq	r20,zero,11144 <__d2b+0xe4>
   110bc:	d809883a 	mov	r4,sp
   110c0:	dd000015 	stw	r20,0(sp)
   110c4:	00105840 	call	10584 <__lo0bits>
   110c8:	d8c00117 	ldw	r3,4(sp)
   110cc:	10003326 	beq	r2,zero,1119c <__d2b+0x13c>
   110d0:	01000804 	movi	r4,32
   110d4:	2089c83a 	sub	r4,r4,r2
   110d8:	1908983a 	sll	r4,r3,r4
   110dc:	d9400017 	ldw	r5,0(sp)
   110e0:	1886d83a 	srl	r3,r3,r2
   110e4:	2148b03a 	or	r4,r4,r5
   110e8:	89000515 	stw	r4,20(r17)
   110ec:	d8c00115 	stw	r3,4(sp)
   110f0:	88c00615 	stw	r3,24(r17)
   110f4:	1800271e 	bne	r3,zero,11194 <__d2b+0x134>
   110f8:	04000044 	movi	r16,1
   110fc:	8c000415 	stw	r16,16(r17)
   11100:	90001926 	beq	r18,zero,11168 <__d2b+0x108>
   11104:	00c00d44 	movi	r3,53
   11108:	94bef344 	addi	r18,r18,-1075
   1110c:	90a5883a 	add	r18,r18,r2
   11110:	1885c83a 	sub	r2,r3,r2
   11114:	d8c00817 	ldw	r3,32(sp)
   11118:	9c800015 	stw	r18,0(r19)
   1111c:	18800015 	stw	r2,0(r3)
   11120:	8805883a 	mov	r2,r17
   11124:	dfc00717 	ldw	ra,28(sp)
   11128:	dd000617 	ldw	r20,24(sp)
   1112c:	dcc00517 	ldw	r19,20(sp)
   11130:	dc800417 	ldw	r18,16(sp)
   11134:	dc400317 	ldw	r17,12(sp)
   11138:	dc000217 	ldw	r16,8(sp)
   1113c:	dec00804 	addi	sp,sp,32
   11140:	f800283a 	ret
   11144:	d9000104 	addi	r4,sp,4
   11148:	00105840 	call	10584 <__lo0bits>
   1114c:	00c00044 	movi	r3,1
   11150:	88c00415 	stw	r3,16(r17)
   11154:	d8c00117 	ldw	r3,4(sp)
   11158:	10800804 	addi	r2,r2,32
   1115c:	04000044 	movi	r16,1
   11160:	88c00515 	stw	r3,20(r17)
   11164:	903fe71e 	bne	r18,zero,11104 <__d2b+0xa4>
   11168:	800690ba 	slli	r3,r16,2
   1116c:	10bef384 	addi	r2,r2,-1074
   11170:	98800015 	stw	r2,0(r19)
   11174:	88c5883a 	add	r2,r17,r3
   11178:	11000417 	ldw	r4,16(r2)
   1117c:	8020917a 	slli	r16,r16,5
   11180:	00105200 	call	10520 <__hi0bits>
   11184:	80a1c83a 	sub	r16,r16,r2
   11188:	d8800817 	ldw	r2,32(sp)
   1118c:	14000015 	stw	r16,0(r2)
   11190:	003fe306 	br	11120 <__d2b+0xc0>
   11194:	04000084 	movi	r16,2
   11198:	003fd806 	br	110fc <__d2b+0x9c>
   1119c:	d9000017 	ldw	r4,0(sp)
   111a0:	89000515 	stw	r4,20(r17)
   111a4:	003fd206 	br	110f0 <__d2b+0x90>
   111a8:	01c000b4 	movhi	r7,2
   111ac:	010000b4 	movhi	r4,2
   111b0:	39e02904 	addi	r7,r7,-32604
   111b4:	000d883a 	mov	r6,zero
   111b8:	0140c284 	movi	r5,778
   111bc:	21203e04 	addi	r4,r4,-32520
   111c0:	0012f340 	call	12f34 <__assert_func>

000111c4 <__ratio>:
   111c4:	defff904 	addi	sp,sp,-28
   111c8:	dc400315 	stw	r17,12(sp)
   111cc:	2823883a 	mov	r17,r5
   111d0:	d80b883a 	mov	r5,sp
   111d4:	dfc00615 	stw	ra,24(sp)
   111d8:	dcc00515 	stw	r19,20(sp)
   111dc:	dc800415 	stw	r18,16(sp)
   111e0:	2027883a 	mov	r19,r4
   111e4:	dc000215 	stw	r16,8(sp)
   111e8:	0010f580 	call	10f58 <__b2d>
   111ec:	d9400104 	addi	r5,sp,4
   111f0:	8809883a 	mov	r4,r17
   111f4:	1025883a 	mov	r18,r2
   111f8:	1821883a 	mov	r16,r3
   111fc:	0010f580 	call	10f58 <__b2d>
   11200:	89000417 	ldw	r4,16(r17)
   11204:	9a000417 	ldw	r8,16(r19)
   11208:	d9400117 	ldw	r5,4(sp)
   1120c:	100d883a 	mov	r6,r2
   11210:	4111c83a 	sub	r8,r8,r4
   11214:	d9000017 	ldw	r4,0(sp)
   11218:	4010917a 	slli	r8,r8,5
   1121c:	180f883a 	mov	r7,r3
   11220:	2149c83a 	sub	r4,r4,r5
   11224:	4111883a 	add	r8,r8,r4
   11228:	02000c0e 	bge	zero,r8,1125c <__ratio+0x98>
   1122c:	4010953a 	slli	r8,r8,20
   11230:	4421883a 	add	r16,r8,r16
   11234:	9009883a 	mov	r4,r18
   11238:	800b883a 	mov	r5,r16
   1123c:	00084640 	call	8464 <__divdf3>
   11240:	dfc00617 	ldw	ra,24(sp)
   11244:	dcc00517 	ldw	r19,20(sp)
   11248:	dc800417 	ldw	r18,16(sp)
   1124c:	dc400317 	ldw	r17,12(sp)
   11250:	dc000217 	ldw	r16,8(sp)
   11254:	dec00704 	addi	sp,sp,28
   11258:	f800283a 	ret
   1125c:	4010953a 	slli	r8,r8,20
   11260:	1a0fc83a 	sub	r7,r3,r8
   11264:	003ff306 	br	11234 <__ratio+0x70>

00011268 <_mprec_log10>:
   11268:	defffe04 	addi	sp,sp,-8
   1126c:	dc000015 	stw	r16,0(sp)
   11270:	dfc00115 	stw	ra,4(sp)
   11274:	20800608 	cmpgei	r2,r4,24
   11278:	2021883a 	mov	r16,r4
   1127c:	10000f26 	beq	r2,zero,112bc <_mprec_log10+0x54>
   11280:	0009883a 	mov	r4,zero
   11284:	014ffc34 	movhi	r5,16368
   11288:	000d883a 	mov	r6,zero
   1128c:	01d00934 	movhi	r7,16420
   11290:	0008fc80 	call	8fc8 <__muldf3>
   11294:	843fffc4 	addi	r16,r16,-1
   11298:	1009883a 	mov	r4,r2
   1129c:	180b883a 	mov	r5,r3
   112a0:	803ff91e 	bne	r16,zero,11288 <_mprec_log10+0x20>
   112a4:	2005883a 	mov	r2,r4
   112a8:	2807883a 	mov	r3,r5
   112ac:	dfc00117 	ldw	ra,4(sp)
   112b0:	dc000017 	ldw	r16,0(sp)
   112b4:	dec00204 	addi	sp,sp,8
   112b8:	f800283a 	ret
   112bc:	202090fa 	slli	r16,r4,3
   112c0:	008000b4 	movhi	r2,2
   112c4:	10a06504 	addi	r2,r2,-32364
   112c8:	1421883a 	add	r16,r2,r16
   112cc:	81000017 	ldw	r4,0(r16)
   112d0:	81400117 	ldw	r5,4(r16)
   112d4:	003ff306 	br	112a4 <_mprec_log10+0x3c>

000112d8 <__copybits>:
   112d8:	297fffc4 	addi	r5,r5,-1
   112dc:	280fd17a 	srai	r7,r5,5
   112e0:	31400417 	ldw	r5,16(r6)
   112e4:	30800504 	addi	r2,r6,20
   112e8:	39c00044 	addi	r7,r7,1
   112ec:	280a90ba 	slli	r5,r5,2
   112f0:	380e90ba 	slli	r7,r7,2
   112f4:	114b883a 	add	r5,r2,r5
   112f8:	21cf883a 	add	r7,r4,r7
   112fc:	11400c2e 	bgeu	r2,r5,11330 <__copybits+0x58>
   11300:	2007883a 	mov	r3,r4
   11304:	12000017 	ldw	r8,0(r2)
   11308:	10800104 	addi	r2,r2,4
   1130c:	18c00104 	addi	r3,r3,4
   11310:	1a3fff15 	stw	r8,-4(r3)
   11314:	117ffb36 	bltu	r2,r5,11304 <__copybits+0x2c>
   11318:	2985c83a 	sub	r2,r5,r6
   1131c:	10bffac4 	addi	r2,r2,-21
   11320:	1004d0ba 	srli	r2,r2,2
   11324:	10800044 	addi	r2,r2,1
   11328:	100490ba 	slli	r2,r2,2
   1132c:	2089883a 	add	r4,r4,r2
   11330:	21c0072e 	bgeu	r4,r7,11350 <__copybits+0x78>
   11334:	39bfffc4 	addi	r6,r7,-1
   11338:	310dc83a 	sub	r6,r6,r4
   1133c:	300cd0ba 	srli	r6,r6,2
   11340:	000b883a 	mov	r5,zero
   11344:	31800044 	addi	r6,r6,1
   11348:	300c90ba 	slli	r6,r6,2
   1134c:	00100d41 	jmpi	100d4 <memset>
   11350:	f800283a 	ret

00011354 <__any_on>:
   11354:	20c00417 	ldw	r3,16(r4)
   11358:	280dd17a 	srai	r6,r5,5
   1135c:	21000504 	addi	r4,r4,20
   11360:	1980080e 	bge	r3,r6,11384 <__any_on+0x30>
   11364:	180490ba 	slli	r2,r3,2
   11368:	2085883a 	add	r2,r4,r2
   1136c:	20800f2e 	bgeu	r4,r2,113ac <__any_on+0x58>
   11370:	10ffff17 	ldw	r3,-4(r2)
   11374:	10bfff04 	addi	r2,r2,-4
   11378:	183ffc26 	beq	r3,zero,1136c <__any_on+0x18>
   1137c:	00800044 	movi	r2,1
   11380:	f800283a 	ret
   11384:	300490ba 	slli	r2,r6,2
   11388:	2085883a 	add	r2,r4,r2
   1138c:	30fff70e 	bge	r6,r3,1136c <__any_on+0x18>
   11390:	294007cc 	andi	r5,r5,31
   11394:	283ff526 	beq	r5,zero,1136c <__any_on+0x18>
   11398:	11800017 	ldw	r6,0(r2)
   1139c:	3146d83a 	srl	r3,r6,r5
   113a0:	194a983a 	sll	r5,r3,r5
   113a4:	317ff51e 	bne	r6,r5,1137c <__any_on+0x28>
   113a8:	003ff006 	br	1136c <__any_on+0x18>
   113ac:	0005883a 	mov	r2,zero
   113b0:	f800283a 	ret

000113b4 <_realloc_r>:
   113b4:	defff604 	addi	sp,sp,-40
   113b8:	dc800215 	stw	r18,8(sp)
   113bc:	dfc00915 	stw	ra,36(sp)
   113c0:	df000815 	stw	fp,32(sp)
   113c4:	ddc00715 	stw	r23,28(sp)
   113c8:	dd800615 	stw	r22,24(sp)
   113cc:	dd400515 	stw	r21,20(sp)
   113d0:	dd000415 	stw	r20,16(sp)
   113d4:	dcc00315 	stw	r19,12(sp)
   113d8:	dc400115 	stw	r17,4(sp)
   113dc:	dc000015 	stw	r16,0(sp)
   113e0:	3025883a 	mov	r18,r6
   113e4:	28008b26 	beq	r5,zero,11614 <_realloc_r+0x260>
   113e8:	2821883a 	mov	r16,r5
   113ec:	2027883a 	mov	r19,r4
   113f0:	944002c4 	addi	r17,r18,11
   113f4:	00154500 	call	15450 <__malloc_lock>
   113f8:	888005f0 	cmpltui	r2,r17,23
   113fc:	1000521e 	bne	r2,zero,11548 <_realloc_r+0x194>
   11400:	017ffe04 	movi	r5,-8
   11404:	8962703a 	and	r17,r17,r5
   11408:	8807883a 	mov	r3,r17
   1140c:	88005116 	blt	r17,zero,11554 <_realloc_r+0x1a0>
   11410:	8c805036 	bltu	r17,r18,11554 <_realloc_r+0x1a0>
   11414:	80bfff17 	ldw	r2,-4(r16)
   11418:	017fff04 	movi	r5,-4
   1141c:	857ffe04 	addi	r21,r16,-8
   11420:	1168703a 	and	r20,r2,r5
   11424:	a0c0390e 	bge	r20,r3,1150c <_realloc_r+0x158>
   11428:	05c000b4 	movhi	r23,2
   1142c:	bde27d04 	addi	r23,r23,-30220
   11430:	ba000217 	ldw	r8,8(r23)
   11434:	ad0f883a 	add	r7,r21,r20
   11438:	39000117 	ldw	r4,4(r7)
   1143c:	41c08e26 	beq	r8,r7,11678 <_realloc_r+0x2c4>
   11440:	01bfff84 	movi	r6,-2
   11444:	218c703a 	and	r6,r4,r6
   11448:	398d883a 	add	r6,r7,r6
   1144c:	31800117 	ldw	r6,4(r6)
   11450:	3180004c 	andi	r6,r6,1
   11454:	30004f1e 	bne	r6,zero,11594 <_realloc_r+0x1e0>
   11458:	2148703a 	and	r4,r4,r5
   1145c:	a10b883a 	add	r5,r20,r4
   11460:	28c0bb0e 	bge	r5,r3,11750 <_realloc_r+0x39c>
   11464:	1080004c 	andi	r2,r2,1
   11468:	10004c1e 	bne	r2,zero,1159c <_realloc_r+0x1e8>
   1146c:	873ffe17 	ldw	fp,-8(r16)
   11470:	00bfff04 	movi	r2,-4
   11474:	af39c83a 	sub	fp,r21,fp
   11478:	e1400117 	ldw	r5,4(fp)
   1147c:	288a703a 	and	r5,r5,r2
   11480:	38000426 	beq	r7,zero,11494 <_realloc_r+0xe0>
   11484:	a16d883a 	add	r22,r20,r5
   11488:	b12d883a 	add	r22,r22,r4
   1148c:	41c0ba26 	beq	r8,r7,11778 <_realloc_r+0x3c4>
   11490:	b0c0930e 	bge	r22,r3,116e0 <_realloc_r+0x32c>
   11494:	e0004126 	beq	fp,zero,1159c <_realloc_r+0x1e8>
   11498:	a16d883a 	add	r22,r20,r5
   1149c:	b0c03f16 	blt	r22,r3,1159c <_realloc_r+0x1e8>
   114a0:	e0800317 	ldw	r2,12(fp)
   114a4:	e0c00217 	ldw	r3,8(fp)
   114a8:	a1bfff04 	addi	r6,r20,-4
   114ac:	31400968 	cmpgeui	r5,r6,37
   114b0:	18800315 	stw	r2,12(r3)
   114b4:	10c00215 	stw	r3,8(r2)
   114b8:	e1000204 	addi	r4,fp,8
   114bc:	2800941e 	bne	r5,zero,11710 <_realloc_r+0x35c>
   114c0:	30800530 	cmpltui	r2,r6,20
   114c4:	1000db1e 	bne	r2,zero,11834 <_realloc_r+0x480>
   114c8:	80c00017 	ldw	r3,0(r16)
   114cc:	30800728 	cmpgeui	r2,r6,28
   114d0:	e0c00215 	stw	r3,8(fp)
   114d4:	80c00117 	ldw	r3,4(r16)
   114d8:	e0c00315 	stw	r3,12(fp)
   114dc:	1000d71e 	bne	r2,zero,1183c <_realloc_r+0x488>
   114e0:	84000204 	addi	r16,r16,8
   114e4:	e0800404 	addi	r2,fp,16
   114e8:	80c00017 	ldw	r3,0(r16)
   114ec:	b029883a 	mov	r20,r22
   114f0:	e02b883a 	mov	r21,fp
   114f4:	10c00015 	stw	r3,0(r2)
   114f8:	80c00117 	ldw	r3,4(r16)
   114fc:	10c00115 	stw	r3,4(r2)
   11500:	80c00217 	ldw	r3,8(r16)
   11504:	2021883a 	mov	r16,r4
   11508:	10c00215 	stw	r3,8(r2)
   1150c:	a9800117 	ldw	r6,4(r21)
   11510:	a447c83a 	sub	r3,r20,r17
   11514:	19000430 	cmpltui	r4,r3,16
   11518:	3180004c 	andi	r6,r6,1
   1151c:	ad05883a 	add	r2,r21,r20
   11520:	20004926 	beq	r4,zero,11648 <_realloc_r+0x294>
   11524:	a18cb03a 	or	r6,r20,r6
   11528:	a9800115 	stw	r6,4(r21)
   1152c:	10c00117 	ldw	r3,4(r2)
   11530:	18c00054 	ori	r3,r3,1
   11534:	10c00115 	stw	r3,4(r2)
   11538:	9809883a 	mov	r4,r19
   1153c:	00154740 	call	15474 <__malloc_unlock>
   11540:	8025883a 	mov	r18,r16
   11544:	00000606 	br	11560 <_realloc_r+0x1ac>
   11548:	04400404 	movi	r17,16
   1154c:	00c00404 	movi	r3,16
   11550:	8cbfb02e 	bgeu	r17,r18,11414 <_realloc_r+0x60>
   11554:	00800304 	movi	r2,12
   11558:	98800015 	stw	r2,0(r19)
   1155c:	0025883a 	mov	r18,zero
   11560:	9005883a 	mov	r2,r18
   11564:	dfc00917 	ldw	ra,36(sp)
   11568:	df000817 	ldw	fp,32(sp)
   1156c:	ddc00717 	ldw	r23,28(sp)
   11570:	dd800617 	ldw	r22,24(sp)
   11574:	dd400517 	ldw	r21,20(sp)
   11578:	dd000417 	ldw	r20,16(sp)
   1157c:	dcc00317 	ldw	r19,12(sp)
   11580:	dc800217 	ldw	r18,8(sp)
   11584:	dc400117 	ldw	r17,4(sp)
   11588:	dc000017 	ldw	r16,0(sp)
   1158c:	dec00a04 	addi	sp,sp,40
   11590:	f800283a 	ret
   11594:	1080004c 	andi	r2,r2,1
   11598:	10006826 	beq	r2,zero,1173c <_realloc_r+0x388>
   1159c:	900b883a 	mov	r5,r18
   115a0:	9809883a 	mov	r4,r19
   115a4:	000a4f80 	call	a4f8 <_malloc_r>
   115a8:	1025883a 	mov	r18,r2
   115ac:	10001626 	beq	r2,zero,11608 <_realloc_r+0x254>
   115b0:	80bfff17 	ldw	r2,-4(r16)
   115b4:	013fff84 	movi	r4,-2
   115b8:	90fffe04 	addi	r3,r18,-8
   115bc:	1104703a 	and	r2,r2,r4
   115c0:	a885883a 	add	r2,r21,r2
   115c4:	10c05826 	beq	r2,r3,11728 <_realloc_r+0x374>
   115c8:	a1bfff04 	addi	r6,r20,-4
   115cc:	30800968 	cmpgeui	r2,r6,37
   115d0:	1000651e 	bne	r2,zero,11768 <_realloc_r+0x3b4>
   115d4:	30800530 	cmpltui	r2,r6,20
   115d8:	10003826 	beq	r2,zero,116bc <_realloc_r+0x308>
   115dc:	9005883a 	mov	r2,r18
   115e0:	8007883a 	mov	r3,r16
   115e4:	19000017 	ldw	r4,0(r3)
   115e8:	11000015 	stw	r4,0(r2)
   115ec:	19000117 	ldw	r4,4(r3)
   115f0:	11000115 	stw	r4,4(r2)
   115f4:	18c00217 	ldw	r3,8(r3)
   115f8:	10c00215 	stw	r3,8(r2)
   115fc:	800b883a 	mov	r5,r16
   11600:	9809883a 	mov	r4,r19
   11604:	000f3a00 	call	f3a0 <_free_r>
   11608:	9809883a 	mov	r4,r19
   1160c:	00154740 	call	15474 <__malloc_unlock>
   11610:	003fd306 	br	11560 <_realloc_r+0x1ac>
   11614:	300b883a 	mov	r5,r6
   11618:	dfc00917 	ldw	ra,36(sp)
   1161c:	df000817 	ldw	fp,32(sp)
   11620:	ddc00717 	ldw	r23,28(sp)
   11624:	dd800617 	ldw	r22,24(sp)
   11628:	dd400517 	ldw	r21,20(sp)
   1162c:	dd000417 	ldw	r20,16(sp)
   11630:	dcc00317 	ldw	r19,12(sp)
   11634:	dc800217 	ldw	r18,8(sp)
   11638:	dc400117 	ldw	r17,4(sp)
   1163c:	dc000017 	ldw	r16,0(sp)
   11640:	dec00a04 	addi	sp,sp,40
   11644:	000a4f81 	jmpi	a4f8 <_malloc_r>
   11648:	344cb03a 	or	r6,r6,r17
   1164c:	a9800115 	stw	r6,4(r21)
   11650:	ac4b883a 	add	r5,r21,r17
   11654:	18c00054 	ori	r3,r3,1
   11658:	28c00115 	stw	r3,4(r5)
   1165c:	10c00117 	ldw	r3,4(r2)
   11660:	29400204 	addi	r5,r5,8
   11664:	9809883a 	mov	r4,r19
   11668:	18c00054 	ori	r3,r3,1
   1166c:	10c00115 	stw	r3,4(r2)
   11670:	000f3a00 	call	f3a0 <_free_r>
   11674:	003fb006 	br	11538 <_realloc_r+0x184>
   11678:	2148703a 	and	r4,r4,r5
   1167c:	a10b883a 	add	r5,r20,r4
   11680:	89800404 	addi	r6,r17,16
   11684:	29bf7716 	blt	r5,r6,11464 <_realloc_r+0xb0>
   11688:	ac6b883a 	add	r21,r21,r17
   1168c:	2c45c83a 	sub	r2,r5,r17
   11690:	bd400215 	stw	r21,8(r23)
   11694:	10800054 	ori	r2,r2,1
   11698:	a8800115 	stw	r2,4(r21)
   1169c:	80bfff17 	ldw	r2,-4(r16)
   116a0:	9809883a 	mov	r4,r19
   116a4:	8025883a 	mov	r18,r16
   116a8:	1080004c 	andi	r2,r2,1
   116ac:	1462b03a 	or	r17,r2,r17
   116b0:	847fff15 	stw	r17,-4(r16)
   116b4:	00154740 	call	15474 <__malloc_unlock>
   116b8:	003fa906 	br	11560 <_realloc_r+0x1ac>
   116bc:	80c00017 	ldw	r3,0(r16)
   116c0:	30800728 	cmpgeui	r2,r6,28
   116c4:	90c00015 	stw	r3,0(r18)
   116c8:	80c00117 	ldw	r3,4(r16)
   116cc:	90c00115 	stw	r3,4(r18)
   116d0:	10004f1e 	bne	r2,zero,11810 <_realloc_r+0x45c>
   116d4:	80c00204 	addi	r3,r16,8
   116d8:	90800204 	addi	r2,r18,8
   116dc:	003fc106 	br	115e4 <_realloc_r+0x230>
   116e0:	38800317 	ldw	r2,12(r7)
   116e4:	38c00217 	ldw	r3,8(r7)
   116e8:	a1bfff04 	addi	r6,r20,-4
   116ec:	31400968 	cmpgeui	r5,r6,37
   116f0:	18800315 	stw	r2,12(r3)
   116f4:	10c00215 	stw	r3,8(r2)
   116f8:	e0c00217 	ldw	r3,8(fp)
   116fc:	e0800317 	ldw	r2,12(fp)
   11700:	e1000204 	addi	r4,fp,8
   11704:	18800315 	stw	r2,12(r3)
   11708:	10c00215 	stw	r3,8(r2)
   1170c:	283f6c26 	beq	r5,zero,114c0 <_realloc_r+0x10c>
   11710:	800b883a 	mov	r5,r16
   11714:	000ffa80 	call	ffa8 <memmove>
   11718:	1021883a 	mov	r16,r2
   1171c:	b029883a 	mov	r20,r22
   11720:	e02b883a 	mov	r21,fp
   11724:	003f7906 	br	1150c <_realloc_r+0x158>
   11728:	90bfff17 	ldw	r2,-4(r18)
   1172c:	00ffff04 	movi	r3,-4
   11730:	10c4703a 	and	r2,r2,r3
   11734:	a0a9883a 	add	r20,r20,r2
   11738:	003f7406 	br	1150c <_realloc_r+0x158>
   1173c:	873ffe17 	ldw	fp,-8(r16)
   11740:	af39c83a 	sub	fp,r21,fp
   11744:	e0800117 	ldw	r2,4(fp)
   11748:	114a703a 	and	r5,r2,r5
   1174c:	003f5106 	br	11494 <_realloc_r+0xe0>
   11750:	38800317 	ldw	r2,12(r7)
   11754:	38c00217 	ldw	r3,8(r7)
   11758:	2829883a 	mov	r20,r5
   1175c:	18800315 	stw	r2,12(r3)
   11760:	10c00215 	stw	r3,8(r2)
   11764:	003f6906 	br	1150c <_realloc_r+0x158>
   11768:	800b883a 	mov	r5,r16
   1176c:	9009883a 	mov	r4,r18
   11770:	000ffa80 	call	ffa8 <memmove>
   11774:	003fa106 	br	115fc <_realloc_r+0x248>
   11778:	88800404 	addi	r2,r17,16
   1177c:	b0bf4516 	blt	r22,r2,11494 <_realloc_r+0xe0>
   11780:	e0800317 	ldw	r2,12(fp)
   11784:	e0c00217 	ldw	r3,8(fp)
   11788:	a1bfff04 	addi	r6,r20,-4
   1178c:	31000968 	cmpgeui	r4,r6,37
   11790:	18800315 	stw	r2,12(r3)
   11794:	10c00215 	stw	r3,8(r2)
   11798:	e4800204 	addi	r18,fp,8
   1179c:	2000391e 	bne	r4,zero,11884 <_realloc_r+0x4d0>
   117a0:	30800530 	cmpltui	r2,r6,20
   117a4:	1000351e 	bne	r2,zero,1187c <_realloc_r+0x4c8>
   117a8:	80c00017 	ldw	r3,0(r16)
   117ac:	30800728 	cmpgeui	r2,r6,28
   117b0:	e0c00215 	stw	r3,8(fp)
   117b4:	80c00117 	ldw	r3,4(r16)
   117b8:	e0c00315 	stw	r3,12(fp)
   117bc:	10003c1e 	bne	r2,zero,118b0 <_realloc_r+0x4fc>
   117c0:	84000204 	addi	r16,r16,8
   117c4:	e0800404 	addi	r2,fp,16
   117c8:	80c00017 	ldw	r3,0(r16)
   117cc:	10c00015 	stw	r3,0(r2)
   117d0:	80c00117 	ldw	r3,4(r16)
   117d4:	10c00115 	stw	r3,4(r2)
   117d8:	80c00217 	ldw	r3,8(r16)
   117dc:	10c00215 	stw	r3,8(r2)
   117e0:	e447883a 	add	r3,fp,r17
   117e4:	b445c83a 	sub	r2,r22,r17
   117e8:	b8c00215 	stw	r3,8(r23)
   117ec:	10800054 	ori	r2,r2,1
   117f0:	18800115 	stw	r2,4(r3)
   117f4:	e0800117 	ldw	r2,4(fp)
   117f8:	9809883a 	mov	r4,r19
   117fc:	1080004c 	andi	r2,r2,1
   11800:	1462b03a 	or	r17,r2,r17
   11804:	e4400115 	stw	r17,4(fp)
   11808:	00154740 	call	15474 <__malloc_unlock>
   1180c:	003f5406 	br	11560 <_realloc_r+0x1ac>
   11810:	80800217 	ldw	r2,8(r16)
   11814:	31800920 	cmpeqi	r6,r6,36
   11818:	90800215 	stw	r2,8(r18)
   1181c:	80800317 	ldw	r2,12(r16)
   11820:	90800315 	stw	r2,12(r18)
   11824:	30000e1e 	bne	r6,zero,11860 <_realloc_r+0x4ac>
   11828:	80c00404 	addi	r3,r16,16
   1182c:	90800404 	addi	r2,r18,16
   11830:	003f6c06 	br	115e4 <_realloc_r+0x230>
   11834:	2005883a 	mov	r2,r4
   11838:	003f2b06 	br	114e8 <_realloc_r+0x134>
   1183c:	80800217 	ldw	r2,8(r16)
   11840:	31800920 	cmpeqi	r6,r6,36
   11844:	e0800415 	stw	r2,16(fp)
   11848:	80800317 	ldw	r2,12(r16)
   1184c:	e0800515 	stw	r2,20(fp)
   11850:	3000101e 	bne	r6,zero,11894 <_realloc_r+0x4e0>
   11854:	84000404 	addi	r16,r16,16
   11858:	e0800604 	addi	r2,fp,24
   1185c:	003f2206 	br	114e8 <_realloc_r+0x134>
   11860:	81000417 	ldw	r4,16(r16)
   11864:	80c00604 	addi	r3,r16,24
   11868:	90800604 	addi	r2,r18,24
   1186c:	91000415 	stw	r4,16(r18)
   11870:	81000517 	ldw	r4,20(r16)
   11874:	91000515 	stw	r4,20(r18)
   11878:	003f5a06 	br	115e4 <_realloc_r+0x230>
   1187c:	9005883a 	mov	r2,r18
   11880:	003fd106 	br	117c8 <_realloc_r+0x414>
   11884:	800b883a 	mov	r5,r16
   11888:	9009883a 	mov	r4,r18
   1188c:	000ffa80 	call	ffa8 <memmove>
   11890:	003fd306 	br	117e0 <_realloc_r+0x42c>
   11894:	80c00417 	ldw	r3,16(r16)
   11898:	84000604 	addi	r16,r16,24
   1189c:	e0800804 	addi	r2,fp,32
   118a0:	e0c00615 	stw	r3,24(fp)
   118a4:	80ffff17 	ldw	r3,-4(r16)
   118a8:	e0c00715 	stw	r3,28(fp)
   118ac:	003f0e06 	br	114e8 <_realloc_r+0x134>
   118b0:	80800217 	ldw	r2,8(r16)
   118b4:	31800920 	cmpeqi	r6,r6,36
   118b8:	e0800415 	stw	r2,16(fp)
   118bc:	80800317 	ldw	r2,12(r16)
   118c0:	e0800515 	stw	r2,20(fp)
   118c4:	3000031e 	bne	r6,zero,118d4 <_realloc_r+0x520>
   118c8:	84000404 	addi	r16,r16,16
   118cc:	e0800604 	addi	r2,fp,24
   118d0:	003fbd06 	br	117c8 <_realloc_r+0x414>
   118d4:	80c00417 	ldw	r3,16(r16)
   118d8:	84000604 	addi	r16,r16,24
   118dc:	e0800804 	addi	r2,fp,32
   118e0:	e0c00615 	stw	r3,24(fp)
   118e4:	80ffff17 	ldw	r3,-4(r16)
   118e8:	e0c00715 	stw	r3,28(fp)
   118ec:	003fb606 	br	117c8 <_realloc_r+0x414>

000118f0 <__sread>:
   118f0:	defffe04 	addi	sp,sp,-8
   118f4:	dc000015 	stw	r16,0(sp)
   118f8:	2821883a 	mov	r16,r5
   118fc:	2940038f 	ldh	r5,14(r5)
   11900:	dfc00115 	stw	ra,4(sp)
   11904:	00137580 	call	13758 <_read_r>
   11908:	10000716 	blt	r2,zero,11928 <__sread+0x38>
   1190c:	80c01417 	ldw	r3,80(r16)
   11910:	1887883a 	add	r3,r3,r2
   11914:	80c01415 	stw	r3,80(r16)
   11918:	dfc00117 	ldw	ra,4(sp)
   1191c:	dc000017 	ldw	r16,0(sp)
   11920:	dec00204 	addi	sp,sp,8
   11924:	f800283a 	ret
   11928:	80c0030b 	ldhu	r3,12(r16)
   1192c:	18fbffcc 	andi	r3,r3,61439
   11930:	80c0030d 	sth	r3,12(r16)
   11934:	dfc00117 	ldw	ra,4(sp)
   11938:	dc000017 	ldw	r16,0(sp)
   1193c:	dec00204 	addi	sp,sp,8
   11940:	f800283a 	ret

00011944 <__seofread>:
   11944:	0005883a 	mov	r2,zero
   11948:	f800283a 	ret

0001194c <__swrite>:
   1194c:	2880030b 	ldhu	r2,12(r5)
   11950:	defffb04 	addi	sp,sp,-20
   11954:	dcc00315 	stw	r19,12(sp)
   11958:	dc800215 	stw	r18,8(sp)
   1195c:	dc400115 	stw	r17,4(sp)
   11960:	dc000015 	stw	r16,0(sp)
   11964:	dfc00415 	stw	ra,16(sp)
   11968:	10c0400c 	andi	r3,r2,256
   1196c:	2821883a 	mov	r16,r5
   11970:	2023883a 	mov	r17,r4
   11974:	3025883a 	mov	r18,r6
   11978:	3827883a 	mov	r19,r7
   1197c:	18000d1e 	bne	r3,zero,119b4 <__swrite+0x68>
   11980:	8140038f 	ldh	r5,14(r16)
   11984:	10bbffcc 	andi	r2,r2,61439
   11988:	980f883a 	mov	r7,r19
   1198c:	900d883a 	mov	r6,r18
   11990:	8809883a 	mov	r4,r17
   11994:	8080030d 	sth	r2,12(r16)
   11998:	dfc00417 	ldw	ra,16(sp)
   1199c:	dcc00317 	ldw	r19,12(sp)
   119a0:	dc800217 	ldw	r18,8(sp)
   119a4:	dc400117 	ldw	r17,4(sp)
   119a8:	dc000017 	ldw	r16,0(sp)
   119ac:	dec00504 	addi	sp,sp,20
   119b0:	0012e781 	jmpi	12e78 <_write_r>
   119b4:	2940038f 	ldh	r5,14(r5)
   119b8:	01c00084 	movi	r7,2
   119bc:	000d883a 	mov	r6,zero
   119c0:	00136a40 	call	136a4 <_lseek_r>
   119c4:	8080030b 	ldhu	r2,12(r16)
   119c8:	003fed06 	br	11980 <__swrite+0x34>

000119cc <__sseek>:
   119cc:	defffe04 	addi	sp,sp,-8
   119d0:	dc000015 	stw	r16,0(sp)
   119d4:	2821883a 	mov	r16,r5
   119d8:	2940038f 	ldh	r5,14(r5)
   119dc:	dfc00115 	stw	ra,4(sp)
   119e0:	00136a40 	call	136a4 <_lseek_r>
   119e4:	10ffffd8 	cmpnei	r3,r2,-1
   119e8:	18000826 	beq	r3,zero,11a0c <__sseek+0x40>
   119ec:	80c0030b 	ldhu	r3,12(r16)
   119f0:	80801415 	stw	r2,80(r16)
   119f4:	18c40014 	ori	r3,r3,4096
   119f8:	80c0030d 	sth	r3,12(r16)
   119fc:	dfc00117 	ldw	ra,4(sp)
   11a00:	dc000017 	ldw	r16,0(sp)
   11a04:	dec00204 	addi	sp,sp,8
   11a08:	f800283a 	ret
   11a0c:	80c0030b 	ldhu	r3,12(r16)
   11a10:	18fbffcc 	andi	r3,r3,61439
   11a14:	80c0030d 	sth	r3,12(r16)
   11a18:	dfc00117 	ldw	ra,4(sp)
   11a1c:	dc000017 	ldw	r16,0(sp)
   11a20:	dec00204 	addi	sp,sp,8
   11a24:	f800283a 	ret

00011a28 <__sclose>:
   11a28:	2940038f 	ldh	r5,14(r5)
   11a2c:	0012edc1 	jmpi	12edc <_close_r>

00011a30 <__sprint_r.part.0>:
   11a30:	28801917 	ldw	r2,100(r5)
   11a34:	defff604 	addi	sp,sp,-40
   11a38:	dcc00315 	stw	r19,12(sp)
   11a3c:	dfc00915 	stw	ra,36(sp)
   11a40:	df000815 	stw	fp,32(sp)
   11a44:	ddc00715 	stw	r23,28(sp)
   11a48:	dd800615 	stw	r22,24(sp)
   11a4c:	dd400515 	stw	r21,20(sp)
   11a50:	dd000415 	stw	r20,16(sp)
   11a54:	dc800215 	stw	r18,8(sp)
   11a58:	dc400115 	stw	r17,4(sp)
   11a5c:	dc000015 	stw	r16,0(sp)
   11a60:	1088000c 	andi	r2,r2,8192
   11a64:	3027883a 	mov	r19,r6
   11a68:	10002c26 	beq	r2,zero,11b1c <__sprint_r.part.0+0xec>
   11a6c:	30800217 	ldw	r2,8(r6)
   11a70:	35000017 	ldw	r20,0(r6)
   11a74:	2821883a 	mov	r16,r5
   11a78:	2023883a 	mov	r17,r4
   11a7c:	05bfff04 	movi	r22,-4
   11a80:	10002426 	beq	r2,zero,11b14 <__sprint_r.part.0+0xe4>
   11a84:	a5400117 	ldw	r21,4(r20)
   11a88:	a5c00017 	ldw	r23,0(r20)
   11a8c:	a824d0ba 	srli	r18,r21,2
   11a90:	90001b26 	beq	r18,zero,11b00 <__sprint_r.part.0+0xd0>
   11a94:	0039883a 	mov	fp,zero
   11a98:	00000206 	br	11aa4 <__sprint_r.part.0+0x74>
   11a9c:	bdc00104 	addi	r23,r23,4
   11aa0:	97001626 	beq	r18,fp,11afc <__sprint_r.part.0+0xcc>
   11aa4:	b9400017 	ldw	r5,0(r23)
   11aa8:	800d883a 	mov	r6,r16
   11aac:	8809883a 	mov	r4,r17
   11ab0:	001345c0 	call	1345c <_fputwc_r>
   11ab4:	10bfffe0 	cmpeqi	r2,r2,-1
   11ab8:	e7000044 	addi	fp,fp,1
   11abc:	103ff726 	beq	r2,zero,11a9c <__sprint_r.part.0+0x6c>
   11ac0:	00bfffc4 	movi	r2,-1
   11ac4:	98000215 	stw	zero,8(r19)
   11ac8:	98000115 	stw	zero,4(r19)
   11acc:	dfc00917 	ldw	ra,36(sp)
   11ad0:	df000817 	ldw	fp,32(sp)
   11ad4:	ddc00717 	ldw	r23,28(sp)
   11ad8:	dd800617 	ldw	r22,24(sp)
   11adc:	dd400517 	ldw	r21,20(sp)
   11ae0:	dd000417 	ldw	r20,16(sp)
   11ae4:	dcc00317 	ldw	r19,12(sp)
   11ae8:	dc800217 	ldw	r18,8(sp)
   11aec:	dc400117 	ldw	r17,4(sp)
   11af0:	dc000017 	ldw	r16,0(sp)
   11af4:	dec00a04 	addi	sp,sp,40
   11af8:	f800283a 	ret
   11afc:	98800217 	ldw	r2,8(r19)
   11b00:	adaa703a 	and	r21,r21,r22
   11b04:	1545c83a 	sub	r2,r2,r21
   11b08:	98800215 	stw	r2,8(r19)
   11b0c:	a5000204 	addi	r20,r20,8
   11b10:	103fdc1e 	bne	r2,zero,11a84 <__sprint_r.part.0+0x54>
   11b14:	0005883a 	mov	r2,zero
   11b18:	003fea06 	br	11ac4 <__sprint_r.part.0+0x94>
   11b1c:	000f69c0 	call	f69c <__sfvwrite_r>
   11b20:	003fe806 	br	11ac4 <__sprint_r.part.0+0x94>

00011b24 <__sprint_r>:
   11b24:	30c00217 	ldw	r3,8(r6)
   11b28:	18000126 	beq	r3,zero,11b30 <__sprint_r+0xc>
   11b2c:	0011a301 	jmpi	11a30 <__sprint_r.part.0>
   11b30:	30000115 	stw	zero,4(r6)
   11b34:	0005883a 	mov	r2,zero
   11b38:	f800283a 	ret

00011b3c <___vfiprintf_internal_r>:
   11b3c:	deffcf04 	addi	sp,sp,-196
   11b40:	dd802d15 	stw	r22,180(sp)
   11b44:	dd402c15 	stw	r21,176(sp)
   11b48:	dd002b15 	stw	r20,172(sp)
   11b4c:	dfc03015 	stw	ra,192(sp)
   11b50:	df002f15 	stw	fp,188(sp)
   11b54:	ddc02e15 	stw	r23,184(sp)
   11b58:	dcc02a15 	stw	r19,168(sp)
   11b5c:	dc802915 	stw	r18,164(sp)
   11b60:	dc402815 	stw	r17,160(sp)
   11b64:	dc002715 	stw	r16,156(sp)
   11b68:	d9c00415 	stw	r7,16(sp)
   11b6c:	202d883a 	mov	r22,r4
   11b70:	282b883a 	mov	r21,r5
   11b74:	3029883a 	mov	r20,r6
   11b78:	20000226 	beq	r4,zero,11b84 <___vfiprintf_internal_r+0x48>
   11b7c:	20800e17 	ldw	r2,56(r4)
   11b80:	1001ba26 	beq	r2,zero,1226c <___vfiprintf_internal_r+0x730>
   11b84:	a880030b 	ldhu	r2,12(r21)
   11b88:	10c8000c 	andi	r3,r2,8192
   11b8c:	1800061e 	bne	r3,zero,11ba8 <___vfiprintf_internal_r+0x6c>
   11b90:	a8c01917 	ldw	r3,100(r21)
   11b94:	0137ffc4 	movi	r4,-8193
   11b98:	10880014 	ori	r2,r2,8192
   11b9c:	1906703a 	and	r3,r3,r4
   11ba0:	a880030d 	sth	r2,12(r21)
   11ba4:	a8c01915 	stw	r3,100(r21)
   11ba8:	10c0020c 	andi	r3,r2,8
   11bac:	18010526 	beq	r3,zero,11fc4 <___vfiprintf_internal_r+0x488>
   11bb0:	a8c00417 	ldw	r3,16(r21)
   11bb4:	18010326 	beq	r3,zero,11fc4 <___vfiprintf_internal_r+0x488>
   11bb8:	1080068c 	andi	r2,r2,26
   11bbc:	10800298 	cmpnei	r2,r2,10
   11bc0:	10010826 	beq	r2,zero,11fe4 <___vfiprintf_internal_r+0x4a8>
   11bc4:	dc801704 	addi	r18,sp,92
   11bc8:	dc800a15 	stw	r18,40(sp)
   11bcc:	d8000c15 	stw	zero,48(sp)
   11bd0:	d8000b15 	stw	zero,44(sp)
   11bd4:	9021883a 	mov	r16,r18
   11bd8:	d8000515 	stw	zero,20(sp)
   11bdc:	d8000115 	stw	zero,4(sp)
   11be0:	a0800007 	ldb	r2,0(r20)
   11be4:	1000e526 	beq	r2,zero,11f7c <___vfiprintf_internal_r+0x440>
   11be8:	a023883a 	mov	r17,r20
   11bec:	00000306 	br	11bfc <___vfiprintf_internal_r+0xc0>
   11bf0:	88800047 	ldb	r2,1(r17)
   11bf4:	8c400044 	addi	r17,r17,1
   11bf8:	10013026 	beq	r2,zero,120bc <___vfiprintf_internal_r+0x580>
   11bfc:	10800958 	cmpnei	r2,r2,37
   11c00:	103ffb1e 	bne	r2,zero,11bf0 <___vfiprintf_internal_r+0xb4>
   11c04:	8d27c83a 	sub	r19,r17,r20
   11c08:	8d012e1e 	bne	r17,r20,120c4 <___vfiprintf_internal_r+0x588>
   11c0c:	88800003 	ldbu	r2,0(r17)
   11c10:	10803fcc 	andi	r2,r2,255
   11c14:	1080201c 	xori	r2,r2,128
   11c18:	10bfe004 	addi	r2,r2,-128
   11c1c:	1000d726 	beq	r2,zero,11f7c <___vfiprintf_internal_r+0x440>
   11c20:	88800047 	ldb	r2,1(r17)
   11c24:	8d000044 	addi	r20,r17,1
   11c28:	d8000945 	stb	zero,37(sp)
   11c2c:	000b883a 	mov	r5,zero
   11c30:	000d883a 	mov	r6,zero
   11c34:	023fffc4 	movi	r8,-1
   11c38:	0023883a 	mov	r17,zero
   11c3c:	001b883a 	mov	r13,zero
   11c40:	a5000044 	addi	r20,r20,1
   11c44:	10fff804 	addi	r3,r2,-32
   11c48:	19001668 	cmpgeui	r4,r3,89
   11c4c:	20006c1e 	bne	r4,zero,11e00 <___vfiprintf_internal_r+0x2c4>
   11c50:	180690ba 	slli	r3,r3,2
   11c54:	01000074 	movhi	r4,1
   11c58:	1909883a 	add	r4,r3,r4
   11c5c:	20c71917 	ldw	r3,7268(r4)
   11c60:	1800683a 	jmp	r3
   11c64:	0001248c 	andi	zero,zero,1170
   11c68:	00011e00 	call	11e0 <dct+0x50>
   11c6c:	00011e00 	call	11e0 <dct+0x50>
   11c70:	00012480 	call	1248 <dct+0xb8>
   11c74:	00011e00 	call	11e0 <dct+0x50>
   11c78:	00011e00 	call	11e0 <dct+0x50>
   11c7c:	00011e00 	call	11e0 <dct+0x50>
   11c80:	00011e00 	call	11e0 <dct+0x50>
   11c84:	00011e00 	call	11e0 <dct+0x50>
   11c88:	00011e00 	call	11e0 <dct+0x50>
   11c8c:	000122e8 	cmpgeui	zero,zero,1163
   11c90:	00012470 	cmpltui	zero,zero,1169
   11c94:	00011e00 	call	11e0 <dct+0x50>
   11c98:	00012300 	call	1230 <dct+0xa0>
   11c9c:	0001230c 	andi	zero,zero,1164
   11ca0:	00011e00 	call	11e0 <dct+0x50>
   11ca4:	00012464 	muli	zero,zero,1169
   11ca8:	00011dc8 	cmpgei	zero,zero,1143
   11cac:	00011dc8 	cmpgei	zero,zero,1143
   11cb0:	00011dc8 	cmpgei	zero,zero,1143
   11cb4:	00011dc8 	cmpgei	zero,zero,1143
   11cb8:	00011dc8 	cmpgei	zero,zero,1143
   11cbc:	00011dc8 	cmpgei	zero,zero,1143
   11cc0:	00011dc8 	cmpgei	zero,zero,1143
   11cc4:	00011dc8 	cmpgei	zero,zero,1143
   11cc8:	00011dc8 	cmpgei	zero,zero,1143
   11ccc:	00011e00 	call	11e0 <dct+0x50>
   11cd0:	00011e00 	call	11e0 <dct+0x50>
   11cd4:	00011e00 	call	11e0 <dct+0x50>
   11cd8:	00011e00 	call	11e0 <dct+0x50>
   11cdc:	00011e00 	call	11e0 <dct+0x50>
   11ce0:	00011e00 	call	11e0 <dct+0x50>
   11ce4:	00011e00 	call	11e0 <dct+0x50>
   11ce8:	00011e00 	call	11e0 <dct+0x50>
   11cec:	00011e00 	call	11e0 <dct+0x50>
   11cf0:	00011e00 	call	11e0 <dct+0x50>
   11cf4:	00012358 	cmpnei	zero,zero,1165
   11cf8:	00011e00 	call	11e0 <dct+0x50>
   11cfc:	00011e00 	call	11e0 <dct+0x50>
   11d00:	00011e00 	call	11e0 <dct+0x50>
   11d04:	00011e00 	call	11e0 <dct+0x50>
   11d08:	00011e00 	call	11e0 <dct+0x50>
   11d0c:	00011e00 	call	11e0 <dct+0x50>
   11d10:	00011e00 	call	11e0 <dct+0x50>
   11d14:	00011e00 	call	11e0 <dct+0x50>
   11d18:	00011e00 	call	11e0 <dct+0x50>
   11d1c:	00011e00 	call	11e0 <dct+0x50>
   11d20:	00012054 	movui	zero,1153
   11d24:	00011e00 	call	11e0 <dct+0x50>
   11d28:	00011e00 	call	11e0 <dct+0x50>
   11d2c:	00011e00 	call	11e0 <dct+0x50>
   11d30:	00011e00 	call	11e0 <dct+0x50>
   11d34:	00011e00 	call	11e0 <dct+0x50>
   11d38:	0001202c 	andhi	zero,zero,1152
   11d3c:	00011e00 	call	11e0 <dct+0x50>
   11d40:	00011e00 	call	11e0 <dct+0x50>
   11d44:	0001255c 	xori	zero,zero,1173
   11d48:	00011e00 	call	11e0 <dct+0x50>
   11d4c:	00011e00 	call	11e0 <dct+0x50>
   11d50:	00011e00 	call	11e0 <dct+0x50>
   11d54:	00011e00 	call	11e0 <dct+0x50>
   11d58:	00011e00 	call	11e0 <dct+0x50>
   11d5c:	00011e00 	call	11e0 <dct+0x50>
   11d60:	00011e00 	call	11e0 <dct+0x50>
   11d64:	00011e00 	call	11e0 <dct+0x50>
   11d68:	00011e00 	call	11e0 <dct+0x50>
   11d6c:	00011e00 	call	11e0 <dct+0x50>
   11d70:	00012534 	movhi	zero,1172
   11d74:	00012274 	movhi	zero,1161
   11d78:	00011e00 	call	11e0 <dct+0x50>
   11d7c:	00011e00 	call	11e0 <dct+0x50>
   11d80:	00011e00 	call	11e0 <dct+0x50>
   11d84:	000124d4 	movui	zero,1171
   11d88:	00012274 	movhi	zero,1161
   11d8c:	00011e00 	call	11e0 <dct+0x50>
   11d90:	00011e00 	call	11e0 <dct+0x50>
   11d94:	00012520 	cmpeqi	zero,zero,1172
   11d98:	00011e00 	call	11e0 <dct+0x50>
   11d9c:	000124e0 	cmpeqi	zero,zero,1171
   11da0:	00012058 	cmpnei	zero,zero,1153
   11da4:	00012650 	cmplti	zero,zero,1177
   11da8:	00012644 	movi	zero,1177
   11dac:	00011e00 	call	11e0 <dct+0x50>
   11db0:	000125ec 	andhi	zero,zero,1175
   11db4:	00011e00 	call	11e0 <dct+0x50>
   11db8:	00012030 	cmpltui	zero,zero,1152
   11dbc:	00011e00 	call	11e0 <dct+0x50>
   11dc0:	00011e00 	call	11e0 <dct+0x50>
   11dc4:	000125a4 	muli	zero,zero,1174
   11dc8:	0023883a 	mov	r17,zero
   11dcc:	113ff404 	addi	r4,r2,-48
   11dd0:	880690ba 	slli	r3,r17,2
   11dd4:	a0800007 	ldb	r2,0(r20)
   11dd8:	a5000044 	addi	r20,r20,1
   11ddc:	1c63883a 	add	r17,r3,r17
   11de0:	8c63883a 	add	r17,r17,r17
   11de4:	2463883a 	add	r17,r4,r17
   11de8:	113ff404 	addi	r4,r2,-48
   11dec:	20c002b0 	cmpltui	r3,r4,10
   11df0:	183ff71e 	bne	r3,zero,11dd0 <___vfiprintf_internal_r+0x294>
   11df4:	10fff804 	addi	r3,r2,-32
   11df8:	19001668 	cmpgeui	r4,r3,89
   11dfc:	203f9426 	beq	r4,zero,11c50 <___vfiprintf_internal_r+0x114>
   11e00:	29403fcc 	andi	r5,r5,255
   11e04:	2803b61e 	bne	r5,zero,12ce0 <___vfiprintf_internal_r+0x11a4>
   11e08:	10005c26 	beq	r2,zero,11f7c <___vfiprintf_internal_r+0x440>
   11e0c:	d8800d05 	stb	r2,52(sp)
   11e10:	d8000945 	stb	zero,37(sp)
   11e14:	05c00044 	movi	r23,1
   11e18:	07000044 	movi	fp,1
   11e1c:	dcc00d04 	addi	r19,sp,52
   11e20:	db400015 	stw	r13,0(sp)
   11e24:	0011883a 	mov	r8,zero
   11e28:	d8800017 	ldw	r2,0(sp)
   11e2c:	1380008c 	andi	r14,r2,2
   11e30:	70000126 	beq	r14,zero,11e38 <___vfiprintf_internal_r+0x2fc>
   11e34:	bdc00084 	addi	r23,r23,2
   11e38:	d8800017 	ldw	r2,0(sp)
   11e3c:	d9000b17 	ldw	r4,44(sp)
   11e40:	1340210c 	andi	r13,r2,132
   11e44:	21800044 	addi	r6,r4,1
   11e48:	d8800c17 	ldw	r2,48(sp)
   11e4c:	300b883a 	mov	r5,r6
   11e50:	6800021e 	bne	r13,zero,11e5c <___vfiprintf_internal_r+0x320>
   11e54:	8dc7c83a 	sub	r3,r17,r23
   11e58:	00c2e516 	blt	zero,r3,129f0 <___vfiprintf_internal_r+0xeb4>
   11e5c:	d8c00947 	ldb	r3,37(sp)
   11e60:	18000c26 	beq	r3,zero,11e94 <___vfiprintf_internal_r+0x358>
   11e64:	d8c00944 	addi	r3,sp,37
   11e68:	10800044 	addi	r2,r2,1
   11e6c:	80c00015 	stw	r3,0(r16)
   11e70:	00c00044 	movi	r3,1
   11e74:	80c00115 	stw	r3,4(r16)
   11e78:	d8800c15 	stw	r2,48(sp)
   11e7c:	d9400b15 	stw	r5,44(sp)
   11e80:	28c00208 	cmpgei	r3,r5,8
   11e84:	1802a01e 	bne	r3,zero,12908 <___vfiprintf_internal_r+0xdcc>
   11e88:	2809883a 	mov	r4,r5
   11e8c:	84000204 	addi	r16,r16,8
   11e90:	29400044 	addi	r5,r5,1
   11e94:	70001726 	beq	r14,zero,11ef4 <___vfiprintf_internal_r+0x3b8>
   11e98:	d8c00984 	addi	r3,sp,38
   11e9c:	10800084 	addi	r2,r2,2
   11ea0:	80c00015 	stw	r3,0(r16)
   11ea4:	00c00084 	movi	r3,2
   11ea8:	80c00115 	stw	r3,4(r16)
   11eac:	d8800c15 	stw	r2,48(sp)
   11eb0:	d9400b15 	stw	r5,44(sp)
   11eb4:	28c00208 	cmpgei	r3,r5,8
   11eb8:	1802aa26 	beq	r3,zero,12964 <___vfiprintf_internal_r+0xe28>
   11ebc:	10032526 	beq	r2,zero,12b54 <___vfiprintf_internal_r+0x1018>
   11ec0:	d9800a04 	addi	r6,sp,40
   11ec4:	a80b883a 	mov	r5,r21
   11ec8:	b009883a 	mov	r4,r22
   11ecc:	da000315 	stw	r8,12(sp)
   11ed0:	db400215 	stw	r13,8(sp)
   11ed4:	0011a300 	call	11a30 <__sprint_r.part.0>
   11ed8:	10002a1e 	bne	r2,zero,11f84 <___vfiprintf_internal_r+0x448>
   11edc:	d9000b17 	ldw	r4,44(sp)
   11ee0:	d8800c17 	ldw	r2,48(sp)
   11ee4:	da000317 	ldw	r8,12(sp)
   11ee8:	db400217 	ldw	r13,8(sp)
   11eec:	9021883a 	mov	r16,r18
   11ef0:	21400044 	addi	r5,r4,1
   11ef4:	6b402018 	cmpnei	r13,r13,128
   11ef8:	6801f126 	beq	r13,zero,126c0 <___vfiprintf_internal_r+0xb84>
   11efc:	4711c83a 	sub	r8,r8,fp
   11f00:	02022e16 	blt	zero,r8,127bc <___vfiprintf_internal_r+0xc80>
   11f04:	e085883a 	add	r2,fp,r2
   11f08:	d9400b15 	stw	r5,44(sp)
   11f0c:	84c00015 	stw	r19,0(r16)
   11f10:	87000115 	stw	fp,4(r16)
   11f14:	d8800c15 	stw	r2,48(sp)
   11f18:	29400208 	cmpgei	r5,r5,8
   11f1c:	2801e226 	beq	r5,zero,126a8 <___vfiprintf_internal_r+0xb6c>
   11f20:	10009826 	beq	r2,zero,12184 <___vfiprintf_internal_r+0x648>
   11f24:	d9800a04 	addi	r6,sp,40
   11f28:	a80b883a 	mov	r5,r21
   11f2c:	b009883a 	mov	r4,r22
   11f30:	0011a300 	call	11a30 <__sprint_r.part.0>
   11f34:	1000131e 	bne	r2,zero,11f84 <___vfiprintf_internal_r+0x448>
   11f38:	d8800c17 	ldw	r2,48(sp)
   11f3c:	9021883a 	mov	r16,r18
   11f40:	d8c00017 	ldw	r3,0(sp)
   11f44:	1cc0010c 	andi	r19,r3,4
   11f48:	98000226 	beq	r19,zero,11f54 <___vfiprintf_internal_r+0x418>
   11f4c:	8de7c83a 	sub	r19,r17,r23
   11f50:	04c09316 	blt	zero,r19,121a0 <___vfiprintf_internal_r+0x664>
   11f54:	8dc0010e 	bge	r17,r23,11f5c <___vfiprintf_internal_r+0x420>
   11f58:	b823883a 	mov	r17,r23
   11f5c:	d8c00117 	ldw	r3,4(sp)
   11f60:	1c47883a 	add	r3,r3,r17
   11f64:	d8c00115 	stw	r3,4(sp)
   11f68:	10025d1e 	bne	r2,zero,128e0 <___vfiprintf_internal_r+0xda4>
   11f6c:	a0800007 	ldb	r2,0(r20)
   11f70:	d8000b15 	stw	zero,44(sp)
   11f74:	9021883a 	mov	r16,r18
   11f78:	103f1b1e 	bne	r2,zero,11be8 <___vfiprintf_internal_r+0xac>
   11f7c:	d8800c17 	ldw	r2,48(sp)
   11f80:	1003591e 	bne	r2,zero,12ce8 <___vfiprintf_internal_r+0x11ac>
   11f84:	a880030b 	ldhu	r2,12(r21)
   11f88:	1080100c 	andi	r2,r2,64
   11f8c:	1003741e 	bne	r2,zero,12d60 <___vfiprintf_internal_r+0x1224>
   11f90:	d8800117 	ldw	r2,4(sp)
   11f94:	dfc03017 	ldw	ra,192(sp)
   11f98:	df002f17 	ldw	fp,188(sp)
   11f9c:	ddc02e17 	ldw	r23,184(sp)
   11fa0:	dd802d17 	ldw	r22,180(sp)
   11fa4:	dd402c17 	ldw	r21,176(sp)
   11fa8:	dd002b17 	ldw	r20,172(sp)
   11fac:	dcc02a17 	ldw	r19,168(sp)
   11fb0:	dc802917 	ldw	r18,164(sp)
   11fb4:	dc402817 	ldw	r17,160(sp)
   11fb8:	dc002717 	ldw	r16,156(sp)
   11fbc:	dec03104 	addi	sp,sp,196
   11fc0:	f800283a 	ret
   11fc4:	a80b883a 	mov	r5,r21
   11fc8:	b009883a 	mov	r4,r22
   11fcc:	000d1000 	call	d100 <__swsetup_r>
   11fd0:	1003631e 	bne	r2,zero,12d60 <___vfiprintf_internal_r+0x1224>
   11fd4:	a880030b 	ldhu	r2,12(r21)
   11fd8:	1080068c 	andi	r2,r2,26
   11fdc:	10800298 	cmpnei	r2,r2,10
   11fe0:	103ef81e 	bne	r2,zero,11bc4 <___vfiprintf_internal_r+0x88>
   11fe4:	a880038f 	ldh	r2,14(r21)
   11fe8:	103ef616 	blt	r2,zero,11bc4 <___vfiprintf_internal_r+0x88>
   11fec:	d9c00417 	ldw	r7,16(sp)
   11ff0:	a00d883a 	mov	r6,r20
   11ff4:	a80b883a 	mov	r5,r21
   11ff8:	b009883a 	mov	r4,r22
   11ffc:	dfc03017 	ldw	ra,192(sp)
   12000:	df002f17 	ldw	fp,188(sp)
   12004:	ddc02e17 	ldw	r23,184(sp)
   12008:	dd802d17 	ldw	r22,180(sp)
   1200c:	dd402c17 	ldw	r21,176(sp)
   12010:	dd002b17 	ldw	r20,172(sp)
   12014:	dcc02a17 	ldw	r19,168(sp)
   12018:	dc802917 	ldw	r18,164(sp)
   1201c:	dc402817 	ldw	r17,160(sp)
   12020:	dc002717 	ldw	r16,156(sp)
   12024:	dec03104 	addi	sp,sp,196
   12028:	0012db81 	jmpi	12db8 <__sbprintf>
   1202c:	6b400414 	ori	r13,r13,16
   12030:	6880080c 	andi	r2,r13,32
   12034:	10004726 	beq	r2,zero,12154 <___vfiprintf_internal_r+0x618>
   12038:	d8c00417 	ldw	r3,16(sp)
   1203c:	00800044 	movi	r2,1
   12040:	1dc00017 	ldw	r23,0(r3)
   12044:	1f000117 	ldw	fp,4(r3)
   12048:	18c00204 	addi	r3,r3,8
   1204c:	d8c00415 	stw	r3,16(sp)
   12050:	00000906 	br	12078 <___vfiprintf_internal_r+0x53c>
   12054:	6b400414 	ori	r13,r13,16
   12058:	6880080c 	andi	r2,r13,32
   1205c:	10003126 	beq	r2,zero,12124 <___vfiprintf_internal_r+0x5e8>
   12060:	d8c00417 	ldw	r3,16(sp)
   12064:	0005883a 	mov	r2,zero
   12068:	1dc00017 	ldw	r23,0(r3)
   1206c:	1f000117 	ldw	fp,4(r3)
   12070:	18c00204 	addi	r3,r3,8
   12074:	d8c00415 	stw	r3,16(sp)
   12078:	d8000945 	stb	zero,37(sp)
   1207c:	40ffffe0 	cmpeqi	r3,r8,-1
   12080:	001d883a 	mov	r14,zero
   12084:	1800d11e 	bne	r3,zero,123cc <___vfiprintf_internal_r+0x890>
   12088:	04ffdfc4 	movi	r19,-129
   1208c:	6cc8703a 	and	r4,r13,r19
   12090:	bf06b03a 	or	r3,r23,fp
   12094:	d9000015 	stw	r4,0(sp)
   12098:	1802361e 	bne	r3,zero,12974 <___vfiprintf_internal_r+0xe38>
   1209c:	4001fb1e 	bne	r8,zero,1288c <___vfiprintf_internal_r+0xd50>
   120a0:	1002a31e 	bne	r2,zero,12b30 <___vfiprintf_internal_r+0xff4>
   120a4:	6f00004c 	andi	fp,r13,1
   120a8:	e002c726 	beq	fp,zero,12bc8 <___vfiprintf_internal_r+0x108c>
   120ac:	00800c04 	movi	r2,48
   120b0:	d88016c5 	stb	r2,91(sp)
   120b4:	dcc016c4 	addi	r19,sp,91
   120b8:	0000e106 	br	12440 <___vfiprintf_internal_r+0x904>
   120bc:	8d27c83a 	sub	r19,r17,r20
   120c0:	8d3fae26 	beq	r17,r20,11f7c <___vfiprintf_internal_r+0x440>
   120c4:	d8c00c17 	ldw	r3,48(sp)
   120c8:	d8800b17 	ldw	r2,44(sp)
   120cc:	85000015 	stw	r20,0(r16)
   120d0:	98c7883a 	add	r3,r19,r3
   120d4:	10800044 	addi	r2,r2,1
   120d8:	d8800b15 	stw	r2,44(sp)
   120dc:	84c00115 	stw	r19,4(r16)
   120e0:	d8c00c15 	stw	r3,48(sp)
   120e4:	10800208 	cmpgei	r2,r2,8
   120e8:	1000061e 	bne	r2,zero,12104 <___vfiprintf_internal_r+0x5c8>
   120ec:	84000204 	addi	r16,r16,8
   120f0:	d8c00117 	ldw	r3,4(sp)
   120f4:	88800003 	ldbu	r2,0(r17)
   120f8:	1cc7883a 	add	r3,r3,r19
   120fc:	d8c00115 	stw	r3,4(sp)
   12100:	003ec306 	br	11c10 <___vfiprintf_internal_r+0xd4>
   12104:	18028626 	beq	r3,zero,12b20 <___vfiprintf_internal_r+0xfe4>
   12108:	d9800a04 	addi	r6,sp,40
   1210c:	a80b883a 	mov	r5,r21
   12110:	b009883a 	mov	r4,r22
   12114:	0011a300 	call	11a30 <__sprint_r.part.0>
   12118:	103f9a1e 	bne	r2,zero,11f84 <___vfiprintf_internal_r+0x448>
   1211c:	9021883a 	mov	r16,r18
   12120:	003ff306 	br	120f0 <___vfiprintf_internal_r+0x5b4>
   12124:	d8c00417 	ldw	r3,16(sp)
   12128:	6880040c 	andi	r2,r13,16
   1212c:	1dc00017 	ldw	r23,0(r3)
   12130:	18c00104 	addi	r3,r3,4
   12134:	d8c00415 	stw	r3,16(sp)
   12138:	1000031e 	bne	r2,zero,12148 <___vfiprintf_internal_r+0x60c>
   1213c:	6880100c 	andi	r2,r13,64
   12140:	10000126 	beq	r2,zero,12148 <___vfiprintf_internal_r+0x60c>
   12144:	bdffffcc 	andi	r23,r23,65535
   12148:	0039883a 	mov	fp,zero
   1214c:	0005883a 	mov	r2,zero
   12150:	003fc906 	br	12078 <___vfiprintf_internal_r+0x53c>
   12154:	d8c00417 	ldw	r3,16(sp)
   12158:	6880040c 	andi	r2,r13,16
   1215c:	1dc00017 	ldw	r23,0(r3)
   12160:	18c00104 	addi	r3,r3,4
   12164:	d8c00415 	stw	r3,16(sp)
   12168:	1000031e 	bne	r2,zero,12178 <___vfiprintf_internal_r+0x63c>
   1216c:	6880100c 	andi	r2,r13,64
   12170:	10000126 	beq	r2,zero,12178 <___vfiprintf_internal_r+0x63c>
   12174:	bdffffcc 	andi	r23,r23,65535
   12178:	0039883a 	mov	fp,zero
   1217c:	00800044 	movi	r2,1
   12180:	003fbd06 	br	12078 <___vfiprintf_internal_r+0x53c>
   12184:	d8c00017 	ldw	r3,0(sp)
   12188:	d8000b15 	stw	zero,44(sp)
   1218c:	1cc0010c 	andi	r19,r3,4
   12190:	98025226 	beq	r19,zero,12adc <___vfiprintf_internal_r+0xfa0>
   12194:	8de7c83a 	sub	r19,r17,r23
   12198:	04c2500e 	bge	zero,r19,12adc <___vfiprintf_internal_r+0xfa0>
   1219c:	9021883a 	mov	r16,r18
   121a0:	98c00450 	cmplti	r3,r19,17
   121a4:	d9000b17 	ldw	r4,44(sp)
   121a8:	01c000b4 	movhi	r7,2
   121ac:	1802e61e 	bne	r3,zero,12d48 <___vfiprintf_internal_r+0x120c>
   121b0:	39e09b04 	addi	r7,r7,-32148
   121b4:	07000404 	movi	fp,16
   121b8:	00000606 	br	121d4 <___vfiprintf_internal_r+0x698>
   121bc:	21400084 	addi	r5,r4,2
   121c0:	84000204 	addi	r16,r16,8
   121c4:	1809883a 	mov	r4,r3
   121c8:	9cfffc04 	addi	r19,r19,-16
   121cc:	98c00448 	cmpgei	r3,r19,17
   121d0:	18001726 	beq	r3,zero,12230 <___vfiprintf_internal_r+0x6f4>
   121d4:	20c00044 	addi	r3,r4,1
   121d8:	10800404 	addi	r2,r2,16
   121dc:	81c00015 	stw	r7,0(r16)
   121e0:	87000115 	stw	fp,4(r16)
   121e4:	d8800c15 	stw	r2,48(sp)
   121e8:	d8c00b15 	stw	r3,44(sp)
   121ec:	19400208 	cmpgei	r5,r3,8
   121f0:	283ff226 	beq	r5,zero,121bc <___vfiprintf_internal_r+0x680>
   121f4:	d9800a04 	addi	r6,sp,40
   121f8:	a80b883a 	mov	r5,r21
   121fc:	b009883a 	mov	r4,r22
   12200:	10012b26 	beq	r2,zero,126b0 <___vfiprintf_internal_r+0xb74>
   12204:	d9c00015 	stw	r7,0(sp)
   12208:	0011a300 	call	11a30 <__sprint_r.part.0>
   1220c:	103f5d1e 	bne	r2,zero,11f84 <___vfiprintf_internal_r+0x448>
   12210:	d9000b17 	ldw	r4,44(sp)
   12214:	9cfffc04 	addi	r19,r19,-16
   12218:	98c00448 	cmpgei	r3,r19,17
   1221c:	d8800c17 	ldw	r2,48(sp)
   12220:	d9c00017 	ldw	r7,0(sp)
   12224:	9021883a 	mov	r16,r18
   12228:	21400044 	addi	r5,r4,1
   1222c:	183fe91e 	bne	r3,zero,121d4 <___vfiprintf_internal_r+0x698>
   12230:	14c5883a 	add	r2,r2,r19
   12234:	d9400b15 	stw	r5,44(sp)
   12238:	81c00015 	stw	r7,0(r16)
   1223c:	84c00115 	stw	r19,4(r16)
   12240:	d8800c15 	stw	r2,48(sp)
   12244:	29400210 	cmplti	r5,r5,8
   12248:	283f421e 	bne	r5,zero,11f54 <___vfiprintf_internal_r+0x418>
   1224c:	10022326 	beq	r2,zero,12adc <___vfiprintf_internal_r+0xfa0>
   12250:	d9800a04 	addi	r6,sp,40
   12254:	a80b883a 	mov	r5,r21
   12258:	b009883a 	mov	r4,r22
   1225c:	0011a300 	call	11a30 <__sprint_r.part.0>
   12260:	103f481e 	bne	r2,zero,11f84 <___vfiprintf_internal_r+0x448>
   12264:	d8800c17 	ldw	r2,48(sp)
   12268:	003f3a06 	br	11f54 <___vfiprintf_internal_r+0x418>
   1226c:	000f23c0 	call	f23c <__sinit>
   12270:	003e4406 	br	11b84 <___vfiprintf_internal_r+0x48>
   12274:	29403fcc 	andi	r5,r5,255
   12278:	2802b11e 	bne	r5,zero,12d40 <___vfiprintf_internal_r+0x1204>
   1227c:	6880080c 	andi	r2,r13,32
   12280:	10003a26 	beq	r2,zero,1236c <___vfiprintf_internal_r+0x830>
   12284:	d8c00417 	ldw	r3,16(sp)
   12288:	18800117 	ldw	r2,4(r3)
   1228c:	1dc00017 	ldw	r23,0(r3)
   12290:	18c00204 	addi	r3,r3,8
   12294:	d8c00415 	stw	r3,16(sp)
   12298:	1039883a 	mov	fp,r2
   1229c:	10004116 	blt	r2,zero,123a4 <___vfiprintf_internal_r+0x868>
   122a0:	40bfffd8 	cmpnei	r2,r8,-1
   122a4:	db800943 	ldbu	r14,37(sp)
   122a8:	10000626 	beq	r2,zero,122c4 <___vfiprintf_internal_r+0x788>
   122ac:	04ffdfc4 	movi	r19,-129
   122b0:	6cc6703a 	and	r3,r13,r19
   122b4:	bf04b03a 	or	r2,r23,fp
   122b8:	d8c00015 	stw	r3,0(sp)
   122bc:	10021b26 	beq	r2,zero,12b2c <___vfiprintf_internal_r+0xff0>
   122c0:	db400017 	ldw	r13,0(sp)
   122c4:	e001ad1e 	bne	fp,zero,1297c <___vfiprintf_internal_r+0xe40>
   122c8:	b88002a8 	cmpgeui	r2,r23,10
   122cc:	1001ab1e 	bne	r2,zero,1297c <___vfiprintf_internal_r+0xe40>
   122d0:	bdc00c04 	addi	r23,r23,48
   122d4:	ddc016c5 	stb	r23,91(sp)
   122d8:	db400015 	stw	r13,0(sp)
   122dc:	07000044 	movi	fp,1
   122e0:	dcc016c4 	addi	r19,sp,91
   122e4:	00005606 	br	12440 <___vfiprintf_internal_r+0x904>
   122e8:	d8800417 	ldw	r2,16(sp)
   122ec:	14400017 	ldw	r17,0(r2)
   122f0:	10c00104 	addi	r3,r2,4
   122f4:	8802310e 	bge	r17,zero,12bbc <___vfiprintf_internal_r+0x1080>
   122f8:	0463c83a 	sub	r17,zero,r17
   122fc:	d8c00415 	stw	r3,16(sp)
   12300:	a0800007 	ldb	r2,0(r20)
   12304:	6b400114 	ori	r13,r13,4
   12308:	003e4d06 	br	11c40 <___vfiprintf_internal_r+0x104>
   1230c:	a0800007 	ldb	r2,0(r20)
   12310:	a0c00044 	addi	r3,r20,1
   12314:	11000aa0 	cmpeqi	r4,r2,42
   12318:	2002941e 	bne	r4,zero,12d6c <___vfiprintf_internal_r+0x1230>
   1231c:	113ff404 	addi	r4,r2,-48
   12320:	21c002b0 	cmpltui	r7,r4,10
   12324:	1829883a 	mov	r20,r3
   12328:	0011883a 	mov	r8,zero
   1232c:	383e4526 	beq	r7,zero,11c44 <___vfiprintf_internal_r+0x108>
   12330:	400690ba 	slli	r3,r8,2
   12334:	a0800007 	ldb	r2,0(r20)
   12338:	a5000044 	addi	r20,r20,1
   1233c:	1a11883a 	add	r8,r3,r8
   12340:	4211883a 	add	r8,r8,r8
   12344:	4111883a 	add	r8,r8,r4
   12348:	113ff404 	addi	r4,r2,-48
   1234c:	20c002b0 	cmpltui	r3,r4,10
   12350:	183ff71e 	bne	r3,zero,12330 <___vfiprintf_internal_r+0x7f4>
   12354:	003e3b06 	br	11c44 <___vfiprintf_internal_r+0x108>
   12358:	29403fcc 	andi	r5,r5,255
   1235c:	28026d1e 	bne	r5,zero,12d14 <___vfiprintf_internal_r+0x11d8>
   12360:	6b400414 	ori	r13,r13,16
   12364:	6880080c 	andi	r2,r13,32
   12368:	103fc61e 	bne	r2,zero,12284 <___vfiprintf_internal_r+0x748>
   1236c:	d8c00417 	ldw	r3,16(sp)
   12370:	6880040c 	andi	r2,r13,16
   12374:	1dc00017 	ldw	r23,0(r3)
   12378:	18c00104 	addi	r3,r3,4
   1237c:	d8c00415 	stw	r3,16(sp)
   12380:	1001f11e 	bne	r2,zero,12b48 <___vfiprintf_internal_r+0x100c>
   12384:	6880100c 	andi	r2,r13,64
   12388:	1001ef26 	beq	r2,zero,12b48 <___vfiprintf_internal_r+0x100c>
   1238c:	bdffffcc 	andi	r23,r23,65535
   12390:	bde0001c 	xori	r23,r23,32768
   12394:	bde00004 	addi	r23,r23,-32768
   12398:	b839d7fa 	srai	fp,r23,31
   1239c:	e005883a 	mov	r2,fp
   123a0:	103fbf0e 	bge	r2,zero,122a0 <___vfiprintf_internal_r+0x764>
   123a4:	b804c03a 	cmpne	r2,r23,zero
   123a8:	0739c83a 	sub	fp,zero,fp
   123ac:	e0b9c83a 	sub	fp,fp,r2
   123b0:	00800b44 	movi	r2,45
   123b4:	d8800945 	stb	r2,37(sp)
   123b8:	40ffffe0 	cmpeqi	r3,r8,-1
   123bc:	05efc83a 	sub	r23,zero,r23
   123c0:	03800b44 	movi	r14,45
   123c4:	00800044 	movi	r2,1
   123c8:	183f2f26 	beq	r3,zero,12088 <___vfiprintf_internal_r+0x54c>
   123cc:	10c00060 	cmpeqi	r3,r2,1
   123d0:	183fbc1e 	bne	r3,zero,122c4 <___vfiprintf_internal_r+0x788>
   123d4:	108000a0 	cmpeqi	r2,r2,2
   123d8:	1001311e 	bne	r2,zero,128a0 <___vfiprintf_internal_r+0xd64>
   123dc:	9027883a 	mov	r19,r18
   123e0:	e008977a 	slli	r4,fp,29
   123e4:	b806d0fa 	srli	r3,r23,3
   123e8:	e038d0fa 	srli	fp,fp,3
   123ec:	b88001cc 	andi	r2,r23,7
   123f0:	10800c04 	addi	r2,r2,48
   123f4:	20eeb03a 	or	r23,r4,r3
   123f8:	98bfffc5 	stb	r2,-1(r19)
   123fc:	bf06b03a 	or	r3,r23,fp
   12400:	980b883a 	mov	r5,r19
   12404:	9cffffc4 	addi	r19,r19,-1
   12408:	183ff51e 	bne	r3,zero,123e0 <___vfiprintf_internal_r+0x8a4>
   1240c:	68c0004c 	andi	r3,r13,1
   12410:	18013026 	beq	r3,zero,128d4 <___vfiprintf_internal_r+0xd98>
   12414:	10803fcc 	andi	r2,r2,255
   12418:	1080201c 	xori	r2,r2,128
   1241c:	10bfe004 	addi	r2,r2,-128
   12420:	10800c18 	cmpnei	r2,r2,48
   12424:	10012b26 	beq	r2,zero,128d4 <___vfiprintf_internal_r+0xd98>
   12428:	297fff84 	addi	r5,r5,-2
   1242c:	00800c04 	movi	r2,48
   12430:	98bfffc5 	stb	r2,-1(r19)
   12434:	9179c83a 	sub	fp,r18,r5
   12438:	db400015 	stw	r13,0(sp)
   1243c:	2827883a 	mov	r19,r5
   12440:	e02f883a 	mov	r23,fp
   12444:	e200010e 	bge	fp,r8,1244c <___vfiprintf_internal_r+0x910>
   12448:	402f883a 	mov	r23,r8
   1244c:	73803fcc 	andi	r14,r14,255
   12450:	7380201c 	xori	r14,r14,128
   12454:	73bfe004 	addi	r14,r14,-128
   12458:	703e7326 	beq	r14,zero,11e28 <___vfiprintf_internal_r+0x2ec>
   1245c:	bdc00044 	addi	r23,r23,1
   12460:	003e7106 	br	11e28 <___vfiprintf_internal_r+0x2ec>
   12464:	a0800007 	ldb	r2,0(r20)
   12468:	6b402014 	ori	r13,r13,128
   1246c:	003df406 	br	11c40 <___vfiprintf_internal_r+0x104>
   12470:	a0800007 	ldb	r2,0(r20)
   12474:	01400044 	movi	r5,1
   12478:	01800ac4 	movi	r6,43
   1247c:	003df006 	br	11c40 <___vfiprintf_internal_r+0x104>
   12480:	a0800007 	ldb	r2,0(r20)
   12484:	6b400054 	ori	r13,r13,1
   12488:	003ded06 	br	11c40 <___vfiprintf_internal_r+0x104>
   1248c:	30c03fcc 	andi	r3,r6,255
   12490:	18c0201c 	xori	r3,r3,128
   12494:	18ffe004 	addi	r3,r3,-128
   12498:	a0800003 	ldbu	r2,0(r20)
   1249c:	1800091e 	bne	r3,zero,124c4 <___vfiprintf_internal_r+0x988>
   124a0:	10803fcc 	andi	r2,r2,255
   124a4:	1080201c 	xori	r2,r2,128
   124a8:	01400044 	movi	r5,1
   124ac:	01800804 	movi	r6,32
   124b0:	10bfe004 	addi	r2,r2,-128
   124b4:	003de206 	br	11c40 <___vfiprintf_internal_r+0x104>
   124b8:	a0800043 	ldbu	r2,1(r20)
   124bc:	6b400814 	ori	r13,r13,32
   124c0:	a5000044 	addi	r20,r20,1
   124c4:	10803fcc 	andi	r2,r2,255
   124c8:	1080201c 	xori	r2,r2,128
   124cc:	10bfe004 	addi	r2,r2,-128
   124d0:	003ddb06 	br	11c40 <___vfiprintf_internal_r+0x104>
   124d4:	a0800007 	ldb	r2,0(r20)
   124d8:	6b401014 	ori	r13,r13,64
   124dc:	003dd806 	br	11c40 <___vfiprintf_internal_r+0x104>
   124e0:	29403fcc 	andi	r5,r5,255
   124e4:	28020f1e 	bne	r5,zero,12d24 <___vfiprintf_internal_r+0x11e8>
   124e8:	d9000417 	ldw	r4,16(sp)
   124ec:	6880080c 	andi	r2,r13,32
   124f0:	20c00104 	addi	r3,r4,4
   124f4:	1001c01e 	bne	r2,zero,12bf8 <___vfiprintf_internal_r+0x10bc>
   124f8:	6880040c 	andi	r2,r13,16
   124fc:	1001df1e 	bne	r2,zero,12c7c <___vfiprintf_internal_r+0x1140>
   12500:	6b40100c 	andi	r13,r13,64
   12504:	6801dd26 	beq	r13,zero,12c7c <___vfiprintf_internal_r+0x1140>
   12508:	d8800417 	ldw	r2,16(sp)
   1250c:	d8c00415 	stw	r3,16(sp)
   12510:	d8c00117 	ldw	r3,4(sp)
   12514:	10800017 	ldw	r2,0(r2)
   12518:	10c0000d 	sth	r3,0(r2)
   1251c:	003db006 	br	11be0 <___vfiprintf_internal_r+0xa4>
   12520:	a0800007 	ldb	r2,0(r20)
   12524:	10c01b18 	cmpnei	r3,r2,108
   12528:	183fe326 	beq	r3,zero,124b8 <___vfiprintf_internal_r+0x97c>
   1252c:	6b400414 	ori	r13,r13,16
   12530:	003dc306 	br	11c40 <___vfiprintf_internal_r+0x104>
   12534:	d8c00417 	ldw	r3,16(sp)
   12538:	d8000945 	stb	zero,37(sp)
   1253c:	05c00044 	movi	r23,1
   12540:	18800017 	ldw	r2,0(r3)
   12544:	18c00104 	addi	r3,r3,4
   12548:	d8c00415 	stw	r3,16(sp)
   1254c:	d8800d05 	stb	r2,52(sp)
   12550:	07000044 	movi	fp,1
   12554:	dcc00d04 	addi	r19,sp,52
   12558:	003e3106 	br	11e20 <___vfiprintf_internal_r+0x2e4>
   1255c:	29403fcc 	andi	r5,r5,255
   12560:	2801ee1e 	bne	r5,zero,12d1c <___vfiprintf_internal_r+0x11e0>
   12564:	00c000b4 	movhi	r3,2
   12568:	18e01504 	addi	r3,r3,-32684
   1256c:	d8c00515 	stw	r3,20(sp)
   12570:	68c0080c 	andi	r3,r13,32
   12574:	18001226 	beq	r3,zero,125c0 <___vfiprintf_internal_r+0xa84>
   12578:	d8c00417 	ldw	r3,16(sp)
   1257c:	1dc00017 	ldw	r23,0(r3)
   12580:	1f000117 	ldw	fp,4(r3)
   12584:	18c00204 	addi	r3,r3,8
   12588:	d8c00415 	stw	r3,16(sp)
   1258c:	68c0004c 	andi	r3,r13,1
   12590:	18000226 	beq	r3,zero,1259c <___vfiprintf_internal_r+0xa60>
   12594:	bf06b03a 	or	r3,r23,fp
   12598:	1801911e 	bne	r3,zero,12be0 <___vfiprintf_internal_r+0x10a4>
   1259c:	00800084 	movi	r2,2
   125a0:	003eb506 	br	12078 <___vfiprintf_internal_r+0x53c>
   125a4:	29403fcc 	andi	r5,r5,255
   125a8:	2801e01e 	bne	r5,zero,12d2c <___vfiprintf_internal_r+0x11f0>
   125ac:	00c000b4 	movhi	r3,2
   125b0:	18e01004 	addi	r3,r3,-32704
   125b4:	d8c00515 	stw	r3,20(sp)
   125b8:	68c0080c 	andi	r3,r13,32
   125bc:	183fee1e 	bne	r3,zero,12578 <___vfiprintf_internal_r+0xa3c>
   125c0:	d9000417 	ldw	r4,16(sp)
   125c4:	68c0040c 	andi	r3,r13,16
   125c8:	25c00017 	ldw	r23,0(r4)
   125cc:	21000104 	addi	r4,r4,4
   125d0:	d9000415 	stw	r4,16(sp)
   125d4:	18015a1e 	bne	r3,zero,12b40 <___vfiprintf_internal_r+0x1004>
   125d8:	68c0100c 	andi	r3,r13,64
   125dc:	18015826 	beq	r3,zero,12b40 <___vfiprintf_internal_r+0x1004>
   125e0:	bdffffcc 	andi	r23,r23,65535
   125e4:	0039883a 	mov	fp,zero
   125e8:	003fe806 	br	1258c <___vfiprintf_internal_r+0xa50>
   125ec:	d8800417 	ldw	r2,16(sp)
   125f0:	d8000945 	stb	zero,37(sp)
   125f4:	14c00017 	ldw	r19,0(r2)
   125f8:	10c00104 	addi	r3,r2,4
   125fc:	9801a526 	beq	r19,zero,12c94 <___vfiprintf_internal_r+0x1158>
   12600:	40bfffe0 	cmpeqi	r2,r8,-1
   12604:	10018a1e 	bne	r2,zero,12c30 <___vfiprintf_internal_r+0x10f4>
   12608:	400d883a 	mov	r6,r8
   1260c:	000b883a 	mov	r5,zero
   12610:	9809883a 	mov	r4,r19
   12614:	d8c00315 	stw	r3,12(sp)
   12618:	db400215 	stw	r13,8(sp)
   1261c:	da000015 	stw	r8,0(sp)
   12620:	000fed80 	call	fed8 <memchr>
   12624:	da000017 	ldw	r8,0(sp)
   12628:	db400217 	ldw	r13,8(sp)
   1262c:	d8c00317 	ldw	r3,12(sp)
   12630:	1001b426 	beq	r2,zero,12d04 <___vfiprintf_internal_r+0x11c8>
   12634:	14f9c83a 	sub	fp,r2,r19
   12638:	e02f883a 	mov	r23,fp
   1263c:	d8c00415 	stw	r3,16(sp)
   12640:	003df706 	br	11e20 <___vfiprintf_internal_r+0x2e4>
   12644:	a0800007 	ldb	r2,0(r20)
   12648:	6b400814 	ori	r13,r13,32
   1264c:	003d7c06 	br	11c40 <___vfiprintf_internal_r+0x104>
   12650:	d8c00417 	ldw	r3,16(sp)
   12654:	00800c04 	movi	r2,48
   12658:	d8800985 	stb	r2,38(sp)
   1265c:	00801e04 	movi	r2,120
   12660:	010000b4 	movhi	r4,2
   12664:	d88009c5 	stb	r2,39(sp)
   12668:	18800104 	addi	r2,r3,4
   1266c:	d8800415 	stw	r2,16(sp)
   12670:	20a01004 	addi	r2,r4,-32704
   12674:	d8800515 	stw	r2,20(sp)
   12678:	1dc00017 	ldw	r23,0(r3)
   1267c:	0039883a 	mov	fp,zero
   12680:	6b400094 	ori	r13,r13,2
   12684:	00800084 	movi	r2,2
   12688:	003e7b06 	br	12078 <___vfiprintf_internal_r+0x53c>
   1268c:	00c00044 	movi	r3,1
   12690:	e005883a 	mov	r2,fp
   12694:	dcc01715 	stw	r19,92(sp)
   12698:	df001815 	stw	fp,96(sp)
   1269c:	df000c15 	stw	fp,48(sp)
   126a0:	d8c00b15 	stw	r3,44(sp)
   126a4:	9021883a 	mov	r16,r18
   126a8:	84000204 	addi	r16,r16,8
   126ac:	003e2406 	br	11f40 <___vfiprintf_internal_r+0x404>
   126b0:	01400044 	movi	r5,1
   126b4:	0009883a 	mov	r4,zero
   126b8:	9021883a 	mov	r16,r18
   126bc:	003ec206 	br	121c8 <___vfiprintf_internal_r+0x68c>
   126c0:	8dc7c83a 	sub	r3,r17,r23
   126c4:	00fe0d0e 	bge	zero,r3,11efc <___vfiprintf_internal_r+0x3c0>
   126c8:	19800450 	cmplti	r6,r3,17
   126cc:	01c000b4 	movhi	r7,2
   126d0:	3001a01e 	bne	r6,zero,12d54 <___vfiprintf_internal_r+0x1218>
   126d4:	39e09704 	addi	r7,r7,-32164
   126d8:	03400404 	movi	r13,16
   126dc:	00000606 	br	126f8 <___vfiprintf_internal_r+0xbbc>
   126e0:	21800084 	addi	r6,r4,2
   126e4:	84000204 	addi	r16,r16,8
   126e8:	2809883a 	mov	r4,r5
   126ec:	18fffc04 	addi	r3,r3,-16
   126f0:	19400448 	cmpgei	r5,r3,17
   126f4:	28001c26 	beq	r5,zero,12768 <___vfiprintf_internal_r+0xc2c>
   126f8:	21400044 	addi	r5,r4,1
   126fc:	10800404 	addi	r2,r2,16
   12700:	81c00015 	stw	r7,0(r16)
   12704:	83400115 	stw	r13,4(r16)
   12708:	d8800c15 	stw	r2,48(sp)
   1270c:	d9400b15 	stw	r5,44(sp)
   12710:	29800208 	cmpgei	r6,r5,8
   12714:	303ff226 	beq	r6,zero,126e0 <___vfiprintf_internal_r+0xba4>
   12718:	d9800a04 	addi	r6,sp,40
   1271c:	a80b883a 	mov	r5,r21
   12720:	b009883a 	mov	r4,r22
   12724:	10007426 	beq	r2,zero,128f8 <___vfiprintf_internal_r+0xdbc>
   12728:	d9c00615 	stw	r7,24(sp)
   1272c:	d8c00315 	stw	r3,12(sp)
   12730:	da000215 	stw	r8,8(sp)
   12734:	0011a300 	call	11a30 <__sprint_r.part.0>
   12738:	103e121e 	bne	r2,zero,11f84 <___vfiprintf_internal_r+0x448>
   1273c:	d8c00317 	ldw	r3,12(sp)
   12740:	d9000b17 	ldw	r4,44(sp)
   12744:	d8800c17 	ldw	r2,48(sp)
   12748:	18fffc04 	addi	r3,r3,-16
   1274c:	19400448 	cmpgei	r5,r3,17
   12750:	d9c00617 	ldw	r7,24(sp)
   12754:	da000217 	ldw	r8,8(sp)
   12758:	9021883a 	mov	r16,r18
   1275c:	21800044 	addi	r6,r4,1
   12760:	03400404 	movi	r13,16
   12764:	283fe41e 	bne	r5,zero,126f8 <___vfiprintf_internal_r+0xbbc>
   12768:	10c5883a 	add	r2,r2,r3
   1276c:	80c00115 	stw	r3,4(r16)
   12770:	81c00015 	stw	r7,0(r16)
   12774:	d8800c15 	stw	r2,48(sp)
   12778:	d9800b15 	stw	r6,44(sp)
   1277c:	30c00208 	cmpgei	r3,r6,8
   12780:	18011326 	beq	r3,zero,12bd0 <___vfiprintf_internal_r+0x1094>
   12784:	10014b26 	beq	r2,zero,12cb4 <___vfiprintf_internal_r+0x1178>
   12788:	d9800a04 	addi	r6,sp,40
   1278c:	a80b883a 	mov	r5,r21
   12790:	b009883a 	mov	r4,r22
   12794:	da000215 	stw	r8,8(sp)
   12798:	0011a300 	call	11a30 <__sprint_r.part.0>
   1279c:	103df91e 	bne	r2,zero,11f84 <___vfiprintf_internal_r+0x448>
   127a0:	da000217 	ldw	r8,8(sp)
   127a4:	d9000b17 	ldw	r4,44(sp)
   127a8:	d8800c17 	ldw	r2,48(sp)
   127ac:	4711c83a 	sub	r8,r8,fp
   127b0:	9021883a 	mov	r16,r18
   127b4:	21400044 	addi	r5,r4,1
   127b8:	023dd20e 	bge	zero,r8,11f04 <___vfiprintf_internal_r+0x3c8>
   127bc:	01c000b4 	movhi	r7,2
   127c0:	40c00450 	cmplti	r3,r8,17
   127c4:	39e09704 	addi	r7,r7,-32164
   127c8:	03400404 	movi	r13,16
   127cc:	18000726 	beq	r3,zero,127ec <___vfiprintf_internal_r+0xcb0>
   127d0:	00002006 	br	12854 <___vfiprintf_internal_r+0xd18>
   127d4:	21400084 	addi	r5,r4,2
   127d8:	84000204 	addi	r16,r16,8
   127dc:	1809883a 	mov	r4,r3
   127e0:	423ffc04 	addi	r8,r8,-16
   127e4:	40c00448 	cmpgei	r3,r8,17
   127e8:	18001a26 	beq	r3,zero,12854 <___vfiprintf_internal_r+0xd18>
   127ec:	20c00044 	addi	r3,r4,1
   127f0:	10800404 	addi	r2,r2,16
   127f4:	81c00015 	stw	r7,0(r16)
   127f8:	83400115 	stw	r13,4(r16)
   127fc:	d8800c15 	stw	r2,48(sp)
   12800:	d8c00b15 	stw	r3,44(sp)
   12804:	19400208 	cmpgei	r5,r3,8
   12808:	283ff226 	beq	r5,zero,127d4 <___vfiprintf_internal_r+0xc98>
   1280c:	d9800a04 	addi	r6,sp,40
   12810:	a80b883a 	mov	r5,r21
   12814:	b009883a 	mov	r4,r22
   12818:	10001826 	beq	r2,zero,1287c <___vfiprintf_internal_r+0xd40>
   1281c:	d9c00315 	stw	r7,12(sp)
   12820:	da000215 	stw	r8,8(sp)
   12824:	0011a300 	call	11a30 <__sprint_r.part.0>
   12828:	103dd61e 	bne	r2,zero,11f84 <___vfiprintf_internal_r+0x448>
   1282c:	da000217 	ldw	r8,8(sp)
   12830:	d9000b17 	ldw	r4,44(sp)
   12834:	d8800c17 	ldw	r2,48(sp)
   12838:	423ffc04 	addi	r8,r8,-16
   1283c:	40c00448 	cmpgei	r3,r8,17
   12840:	d9c00317 	ldw	r7,12(sp)
   12844:	9021883a 	mov	r16,r18
   12848:	21400044 	addi	r5,r4,1
   1284c:	03400404 	movi	r13,16
   12850:	183fe61e 	bne	r3,zero,127ec <___vfiprintf_internal_r+0xcb0>
   12854:	1205883a 	add	r2,r2,r8
   12858:	81c00015 	stw	r7,0(r16)
   1285c:	82000115 	stw	r8,4(r16)
   12860:	d8800c15 	stw	r2,48(sp)
   12864:	d9400b15 	stw	r5,44(sp)
   12868:	28c00208 	cmpgei	r3,r5,8
   1286c:	1800a11e 	bne	r3,zero,12af4 <___vfiprintf_internal_r+0xfb8>
   12870:	84000204 	addi	r16,r16,8
   12874:	29400044 	addi	r5,r5,1
   12878:	003da206 	br	11f04 <___vfiprintf_internal_r+0x3c8>
   1287c:	01400044 	movi	r5,1
   12880:	0009883a 	mov	r4,zero
   12884:	9021883a 	mov	r16,r18
   12888:	003fd506 	br	127e0 <___vfiprintf_internal_r+0xca4>
   1288c:	10c00060 	cmpeqi	r3,r2,1
   12890:	18011a1e 	bne	r3,zero,12cfc <___vfiprintf_internal_r+0x11c0>
   12894:	108000a0 	cmpeqi	r2,r2,2
   12898:	db400017 	ldw	r13,0(sp)
   1289c:	103ecf26 	beq	r2,zero,123dc <___vfiprintf_internal_r+0x8a0>
   128a0:	9027883a 	mov	r19,r18
   128a4:	d9000517 	ldw	r4,20(sp)
   128a8:	b88003cc 	andi	r2,r23,15
   128ac:	e006973a 	slli	r3,fp,28
   128b0:	b82ed13a 	srli	r23,r23,4
   128b4:	2085883a 	add	r2,r4,r2
   128b8:	10800003 	ldbu	r2,0(r2)
   128bc:	e038d13a 	srli	fp,fp,4
   128c0:	1deeb03a 	or	r23,r3,r23
   128c4:	98bfffc5 	stb	r2,-1(r19)
   128c8:	bf04b03a 	or	r2,r23,fp
   128cc:	9cffffc4 	addi	r19,r19,-1
   128d0:	103ff41e 	bne	r2,zero,128a4 <___vfiprintf_internal_r+0xd68>
   128d4:	94f9c83a 	sub	fp,r18,r19
   128d8:	db400015 	stw	r13,0(sp)
   128dc:	003ed806 	br	12440 <___vfiprintf_internal_r+0x904>
   128e0:	d9800a04 	addi	r6,sp,40
   128e4:	a80b883a 	mov	r5,r21
   128e8:	b009883a 	mov	r4,r22
   128ec:	0011a300 	call	11a30 <__sprint_r.part.0>
   128f0:	103d9e26 	beq	r2,zero,11f6c <___vfiprintf_internal_r+0x430>
   128f4:	003da306 	br	11f84 <___vfiprintf_internal_r+0x448>
   128f8:	01800044 	movi	r6,1
   128fc:	0009883a 	mov	r4,zero
   12900:	9021883a 	mov	r16,r18
   12904:	003f7906 	br	126ec <___vfiprintf_internal_r+0xbb0>
   12908:	10009626 	beq	r2,zero,12b64 <___vfiprintf_internal_r+0x1028>
   1290c:	d9800a04 	addi	r6,sp,40
   12910:	a80b883a 	mov	r5,r21
   12914:	b009883a 	mov	r4,r22
   12918:	da000615 	stw	r8,24(sp)
   1291c:	db400315 	stw	r13,12(sp)
   12920:	db800215 	stw	r14,8(sp)
   12924:	0011a300 	call	11a30 <__sprint_r.part.0>
   12928:	103d961e 	bne	r2,zero,11f84 <___vfiprintf_internal_r+0x448>
   1292c:	d9000b17 	ldw	r4,44(sp)
   12930:	d8800c17 	ldw	r2,48(sp)
   12934:	da000617 	ldw	r8,24(sp)
   12938:	db400317 	ldw	r13,12(sp)
   1293c:	db800217 	ldw	r14,8(sp)
   12940:	9021883a 	mov	r16,r18
   12944:	21400044 	addi	r5,r4,1
   12948:	003d5206 	br	11e94 <___vfiprintf_internal_r+0x358>
   1294c:	d8800984 	addi	r2,sp,38
   12950:	d8801715 	stw	r2,92(sp)
   12954:	00800084 	movi	r2,2
   12958:	d8801815 	stw	r2,96(sp)
   1295c:	01400044 	movi	r5,1
   12960:	9021883a 	mov	r16,r18
   12964:	2809883a 	mov	r4,r5
   12968:	84000204 	addi	r16,r16,8
   1296c:	21400044 	addi	r5,r4,1
   12970:	003d6006 	br	11ef4 <___vfiprintf_internal_r+0x3b8>
   12974:	db400017 	ldw	r13,0(sp)
   12978:	003e9406 	br	123cc <___vfiprintf_internal_r+0x890>
   1297c:	9027883a 	mov	r19,r18
   12980:	b809883a 	mov	r4,r23
   12984:	e00b883a 	mov	r5,fp
   12988:	01800284 	movi	r6,10
   1298c:	000f883a 	mov	r7,zero
   12990:	db800315 	stw	r14,12(sp)
   12994:	da000215 	stw	r8,8(sp)
   12998:	db400015 	stw	r13,0(sp)
   1299c:	00146900 	call	14690 <__umoddi3>
   129a0:	10800c04 	addi	r2,r2,48
   129a4:	b809883a 	mov	r4,r23
   129a8:	e00b883a 	mov	r5,fp
   129ac:	98bfffc5 	stb	r2,-1(r19)
   129b0:	01800284 	movi	r6,10
   129b4:	000f883a 	mov	r7,zero
   129b8:	00140700 	call	14070 <__udivdi3>
   129bc:	e009883a 	mov	r4,fp
   129c0:	b80b883a 	mov	r5,r23
   129c4:	db400017 	ldw	r13,0(sp)
   129c8:	da000217 	ldw	r8,8(sp)
   129cc:	db800317 	ldw	r14,12(sp)
   129d0:	9cffffc4 	addi	r19,r19,-1
   129d4:	102f883a 	mov	r23,r2
   129d8:	1839883a 	mov	fp,r3
   129dc:	203fe81e 	bne	r4,zero,12980 <___vfiprintf_internal_r+0xe44>
   129e0:	294002a8 	cmpgeui	r5,r5,10
   129e4:	283fe61e 	bne	r5,zero,12980 <___vfiprintf_internal_r+0xe44>
   129e8:	94f9c83a 	sub	fp,r18,r19
   129ec:	003e9406 	br	12440 <___vfiprintf_internal_r+0x904>
   129f0:	19400450 	cmplti	r5,r3,17
   129f4:	01c000b4 	movhi	r7,2
   129f8:	2800ce1e 	bne	r5,zero,12d34 <___vfiprintf_internal_r+0x11f8>
   129fc:	39e09b04 	addi	r7,r7,-32148
   12a00:	03c00404 	movi	r15,16
   12a04:	00000706 	br	12a24 <___vfiprintf_internal_r+0xee8>
   12a08:	27c00084 	addi	ra,r4,2
   12a0c:	84000204 	addi	r16,r16,8
   12a10:	3009883a 	mov	r4,r6
   12a14:	18fffc04 	addi	r3,r3,-16
   12a18:	19400448 	cmpgei	r5,r3,17
   12a1c:	28002026 	beq	r5,zero,12aa0 <___vfiprintf_internal_r+0xf64>
   12a20:	21800044 	addi	r6,r4,1
   12a24:	10800404 	addi	r2,r2,16
   12a28:	81c00015 	stw	r7,0(r16)
   12a2c:	83c00115 	stw	r15,4(r16)
   12a30:	d8800c15 	stw	r2,48(sp)
   12a34:	d9800b15 	stw	r6,44(sp)
   12a38:	31400208 	cmpgei	r5,r6,8
   12a3c:	283ff226 	beq	r5,zero,12a08 <___vfiprintf_internal_r+0xecc>
   12a40:	d9800a04 	addi	r6,sp,40
   12a44:	a80b883a 	mov	r5,r21
   12a48:	b009883a 	mov	r4,r22
   12a4c:	10001f26 	beq	r2,zero,12acc <___vfiprintf_internal_r+0xf90>
   12a50:	d9c00815 	stw	r7,32(sp)
   12a54:	d8c00715 	stw	r3,28(sp)
   12a58:	da000615 	stw	r8,24(sp)
   12a5c:	db400315 	stw	r13,12(sp)
   12a60:	db800215 	stw	r14,8(sp)
   12a64:	0011a300 	call	11a30 <__sprint_r.part.0>
   12a68:	103d461e 	bne	r2,zero,11f84 <___vfiprintf_internal_r+0x448>
   12a6c:	d8c00717 	ldw	r3,28(sp)
   12a70:	d9000b17 	ldw	r4,44(sp)
   12a74:	d8800c17 	ldw	r2,48(sp)
   12a78:	18fffc04 	addi	r3,r3,-16
   12a7c:	19400448 	cmpgei	r5,r3,17
   12a80:	d9c00817 	ldw	r7,32(sp)
   12a84:	da000617 	ldw	r8,24(sp)
   12a88:	db400317 	ldw	r13,12(sp)
   12a8c:	db800217 	ldw	r14,8(sp)
   12a90:	9021883a 	mov	r16,r18
   12a94:	27c00044 	addi	ra,r4,1
   12a98:	03c00404 	movi	r15,16
   12a9c:	283fe01e 	bne	r5,zero,12a20 <___vfiprintf_internal_r+0xee4>
   12aa0:	10c5883a 	add	r2,r2,r3
   12aa4:	80c00115 	stw	r3,4(r16)
   12aa8:	81c00015 	stw	r7,0(r16)
   12aac:	d8800c15 	stw	r2,48(sp)
   12ab0:	dfc00b15 	stw	ra,44(sp)
   12ab4:	f8c00208 	cmpgei	r3,ra,8
   12ab8:	18002f1e 	bne	r3,zero,12b78 <___vfiprintf_internal_r+0x103c>
   12abc:	84000204 	addi	r16,r16,8
   12ac0:	f9400044 	addi	r5,ra,1
   12ac4:	f809883a 	mov	r4,ra
   12ac8:	003ce406 	br	11e5c <___vfiprintf_internal_r+0x320>
   12acc:	0009883a 	mov	r4,zero
   12ad0:	07c00044 	movi	ra,1
   12ad4:	9021883a 	mov	r16,r18
   12ad8:	003fce06 	br	12a14 <___vfiprintf_internal_r+0xed8>
   12adc:	8dc0010e 	bge	r17,r23,12ae4 <___vfiprintf_internal_r+0xfa8>
   12ae0:	b823883a 	mov	r17,r23
   12ae4:	d8800117 	ldw	r2,4(sp)
   12ae8:	1445883a 	add	r2,r2,r17
   12aec:	d8800115 	stw	r2,4(sp)
   12af0:	003d1e06 	br	11f6c <___vfiprintf_internal_r+0x430>
   12af4:	103ee526 	beq	r2,zero,1268c <___vfiprintf_internal_r+0xb50>
   12af8:	d9800a04 	addi	r6,sp,40
   12afc:	a80b883a 	mov	r5,r21
   12b00:	b009883a 	mov	r4,r22
   12b04:	0011a300 	call	11a30 <__sprint_r.part.0>
   12b08:	103d1e1e 	bne	r2,zero,11f84 <___vfiprintf_internal_r+0x448>
   12b0c:	d9400b17 	ldw	r5,44(sp)
   12b10:	d8800c17 	ldw	r2,48(sp)
   12b14:	9021883a 	mov	r16,r18
   12b18:	29400044 	addi	r5,r5,1
   12b1c:	003cf906 	br	11f04 <___vfiprintf_internal_r+0x3c8>
   12b20:	d8000b15 	stw	zero,44(sp)
   12b24:	9021883a 	mov	r16,r18
   12b28:	003d7106 	br	120f0 <___vfiprintf_internal_r+0x5b4>
   12b2c:	4000731e 	bne	r8,zero,12cfc <___vfiprintf_internal_r+0x11c0>
   12b30:	0011883a 	mov	r8,zero
   12b34:	0039883a 	mov	fp,zero
   12b38:	9027883a 	mov	r19,r18
   12b3c:	003e4006 	br	12440 <___vfiprintf_internal_r+0x904>
   12b40:	0039883a 	mov	fp,zero
   12b44:	003e9106 	br	1258c <___vfiprintf_internal_r+0xa50>
   12b48:	b839d7fa 	srai	fp,r23,31
   12b4c:	e005883a 	mov	r2,fp
   12b50:	003dd206 	br	1229c <___vfiprintf_internal_r+0x760>
   12b54:	01400044 	movi	r5,1
   12b58:	0009883a 	mov	r4,zero
   12b5c:	9021883a 	mov	r16,r18
   12b60:	003ce406 	br	11ef4 <___vfiprintf_internal_r+0x3b8>
   12b64:	70002b1e 	bne	r14,zero,12c14 <___vfiprintf_internal_r+0x10d8>
   12b68:	0009883a 	mov	r4,zero
   12b6c:	01400044 	movi	r5,1
   12b70:	9021883a 	mov	r16,r18
   12b74:	003cdf06 	br	11ef4 <___vfiprintf_internal_r+0x3b8>
   12b78:	10003726 	beq	r2,zero,12c58 <___vfiprintf_internal_r+0x111c>
   12b7c:	d9800a04 	addi	r6,sp,40
   12b80:	a80b883a 	mov	r5,r21
   12b84:	b009883a 	mov	r4,r22
   12b88:	da000615 	stw	r8,24(sp)
   12b8c:	db400315 	stw	r13,12(sp)
   12b90:	db800215 	stw	r14,8(sp)
   12b94:	0011a300 	call	11a30 <__sprint_r.part.0>
   12b98:	103cfa1e 	bne	r2,zero,11f84 <___vfiprintf_internal_r+0x448>
   12b9c:	d9000b17 	ldw	r4,44(sp)
   12ba0:	d8800c17 	ldw	r2,48(sp)
   12ba4:	da000617 	ldw	r8,24(sp)
   12ba8:	db400317 	ldw	r13,12(sp)
   12bac:	db800217 	ldw	r14,8(sp)
   12bb0:	9021883a 	mov	r16,r18
   12bb4:	21400044 	addi	r5,r4,1
   12bb8:	003ca806 	br	11e5c <___vfiprintf_internal_r+0x320>
   12bbc:	a0800007 	ldb	r2,0(r20)
   12bc0:	d8c00415 	stw	r3,16(sp)
   12bc4:	003c1e06 	br	11c40 <___vfiprintf_internal_r+0x104>
   12bc8:	9027883a 	mov	r19,r18
   12bcc:	003e1c06 	br	12440 <___vfiprintf_internal_r+0x904>
   12bd0:	84000204 	addi	r16,r16,8
   12bd4:	31400044 	addi	r5,r6,1
   12bd8:	3009883a 	mov	r4,r6
   12bdc:	003cc706 	br	11efc <___vfiprintf_internal_r+0x3c0>
   12be0:	00c00c04 	movi	r3,48
   12be4:	d88009c5 	stb	r2,39(sp)
   12be8:	d8c00985 	stb	r3,38(sp)
   12bec:	6b400094 	ori	r13,r13,2
   12bf0:	00800084 	movi	r2,2
   12bf4:	003d2006 	br	12078 <___vfiprintf_internal_r+0x53c>
   12bf8:	d9400117 	ldw	r5,4(sp)
   12bfc:	20800017 	ldw	r2,0(r4)
   12c00:	d8c00415 	stw	r3,16(sp)
   12c04:	2809d7fa 	srai	r4,r5,31
   12c08:	11400015 	stw	r5,0(r2)
   12c0c:	11000115 	stw	r4,4(r2)
   12c10:	003bf306 	br	11be0 <___vfiprintf_internal_r+0xa4>
   12c14:	d8800984 	addi	r2,sp,38
   12c18:	d8801715 	stw	r2,92(sp)
   12c1c:	00800084 	movi	r2,2
   12c20:	d8801815 	stw	r2,96(sp)
   12c24:	01000044 	movi	r4,1
   12c28:	9021883a 	mov	r16,r18
   12c2c:	003f4e06 	br	12968 <___vfiprintf_internal_r+0xe2c>
   12c30:	9809883a 	mov	r4,r19
   12c34:	d8c00215 	stw	r3,8(sp)
   12c38:	db400015 	stw	r13,0(sp)
   12c3c:	000af740 	call	af74 <strlen>
   12c40:	d8c00217 	ldw	r3,8(sp)
   12c44:	db400017 	ldw	r13,0(sp)
   12c48:	1039883a 	mov	fp,r2
   12c4c:	102f883a 	mov	r23,r2
   12c50:	d8c00415 	stw	r3,16(sp)
   12c54:	003c7206 	br	11e20 <___vfiprintf_internal_r+0x2e4>
   12c58:	d8c00947 	ldb	r3,37(sp)
   12c5c:	18001b26 	beq	r3,zero,12ccc <___vfiprintf_internal_r+0x1190>
   12c60:	d8800944 	addi	r2,sp,37
   12c64:	d8801715 	stw	r2,92(sp)
   12c68:	00800044 	movi	r2,1
   12c6c:	d8801815 	stw	r2,96(sp)
   12c70:	01400044 	movi	r5,1
   12c74:	9021883a 	mov	r16,r18
   12c78:	003c8306 	br	11e88 <___vfiprintf_internal_r+0x34c>
   12c7c:	d8800417 	ldw	r2,16(sp)
   12c80:	10800017 	ldw	r2,0(r2)
   12c84:	d8c00415 	stw	r3,16(sp)
   12c88:	d8c00117 	ldw	r3,4(sp)
   12c8c:	10c00015 	stw	r3,0(r2)
   12c90:	003bd306 	br	11be0 <___vfiprintf_internal_r+0xa4>
   12c94:	408001f0 	cmpltui	r2,r8,7
   12c98:	4039883a 	mov	fp,r8
   12c9c:	10000926 	beq	r2,zero,12cc4 <___vfiprintf_internal_r+0x1188>
   12ca0:	04c000b4 	movhi	r19,2
   12ca4:	e02f883a 	mov	r23,fp
   12ca8:	d8c00415 	stw	r3,16(sp)
   12cac:	9ce01a04 	addi	r19,r19,-32664
   12cb0:	003c5b06 	br	11e20 <___vfiprintf_internal_r+0x2e4>
   12cb4:	01400044 	movi	r5,1
   12cb8:	0009883a 	mov	r4,zero
   12cbc:	9021883a 	mov	r16,r18
   12cc0:	003c8e06 	br	11efc <___vfiprintf_internal_r+0x3c0>
   12cc4:	07000184 	movi	fp,6
   12cc8:	003ff506 	br	12ca0 <___vfiprintf_internal_r+0x1164>
   12ccc:	703f1f1e 	bne	r14,zero,1294c <___vfiprintf_internal_r+0xe10>
   12cd0:	0009883a 	mov	r4,zero
   12cd4:	01400044 	movi	r5,1
   12cd8:	9021883a 	mov	r16,r18
   12cdc:	003c8706 	br	11efc <___vfiprintf_internal_r+0x3c0>
   12ce0:	d9800945 	stb	r6,37(sp)
   12ce4:	003c4806 	br	11e08 <___vfiprintf_internal_r+0x2cc>
   12ce8:	d9800a04 	addi	r6,sp,40
   12cec:	a80b883a 	mov	r5,r21
   12cf0:	b009883a 	mov	r4,r22
   12cf4:	0011a300 	call	11a30 <__sprint_r.part.0>
   12cf8:	003ca206 	br	11f84 <___vfiprintf_internal_r+0x448>
   12cfc:	db400017 	ldw	r13,0(sp)
   12d00:	003d7306 	br	122d0 <___vfiprintf_internal_r+0x794>
   12d04:	402f883a 	mov	r23,r8
   12d08:	d8c00415 	stw	r3,16(sp)
   12d0c:	4039883a 	mov	fp,r8
   12d10:	003c4306 	br	11e20 <___vfiprintf_internal_r+0x2e4>
   12d14:	d9800945 	stb	r6,37(sp)
   12d18:	003d9106 	br	12360 <___vfiprintf_internal_r+0x824>
   12d1c:	d9800945 	stb	r6,37(sp)
   12d20:	003e1006 	br	12564 <___vfiprintf_internal_r+0xa28>
   12d24:	d9800945 	stb	r6,37(sp)
   12d28:	003def06 	br	124e8 <___vfiprintf_internal_r+0x9ac>
   12d2c:	d9800945 	stb	r6,37(sp)
   12d30:	003e1e06 	br	125ac <___vfiprintf_internal_r+0xa70>
   12d34:	303f883a 	mov	ra,r6
   12d38:	39e09b04 	addi	r7,r7,-32148
   12d3c:	003f5806 	br	12aa0 <___vfiprintf_internal_r+0xf64>
   12d40:	d9800945 	stb	r6,37(sp)
   12d44:	003d4d06 	br	1227c <___vfiprintf_internal_r+0x740>
   12d48:	21400044 	addi	r5,r4,1
   12d4c:	39e09b04 	addi	r7,r7,-32148
   12d50:	003d3706 	br	12230 <___vfiprintf_internal_r+0x6f4>
   12d54:	280d883a 	mov	r6,r5
   12d58:	39e09704 	addi	r7,r7,-32164
   12d5c:	003e8206 	br	12768 <___vfiprintf_internal_r+0xc2c>
   12d60:	00bfffc4 	movi	r2,-1
   12d64:	d8800115 	stw	r2,4(sp)
   12d68:	003c8906 	br	11f90 <___vfiprintf_internal_r+0x454>
   12d6c:	d8800417 	ldw	r2,16(sp)
   12d70:	12000017 	ldw	r8,0(r2)
   12d74:	11000104 	addi	r4,r2,4
   12d78:	4000010e 	bge	r8,zero,12d80 <___vfiprintf_internal_r+0x1244>
   12d7c:	023fffc4 	movi	r8,-1
   12d80:	a0800043 	ldbu	r2,1(r20)
   12d84:	d9000415 	stw	r4,16(sp)
   12d88:	1829883a 	mov	r20,r3
   12d8c:	10803fcc 	andi	r2,r2,255
   12d90:	1080201c 	xori	r2,r2,128
   12d94:	10bfe004 	addi	r2,r2,-128
   12d98:	003ba906 	br	11c40 <___vfiprintf_internal_r+0x104>

00012d9c <__vfiprintf_internal>:
   12d9c:	00c000b4 	movhi	r3,2
   12da0:	2005883a 	mov	r2,r4
   12da4:	19288b17 	ldw	r4,-24020(r3)
   12da8:	300f883a 	mov	r7,r6
   12dac:	280d883a 	mov	r6,r5
   12db0:	100b883a 	mov	r5,r2
   12db4:	0011b3c1 	jmpi	11b3c <___vfiprintf_internal_r>

00012db8 <__sbprintf>:
   12db8:	2880030b 	ldhu	r2,12(r5)
   12dbc:	2b001917 	ldw	r12,100(r5)
   12dc0:	2ac0038b 	ldhu	r11,14(r5)
   12dc4:	2a800717 	ldw	r10,28(r5)
   12dc8:	2a400917 	ldw	r9,36(r5)
   12dcc:	defee204 	addi	sp,sp,-1144
   12dd0:	da001a04 	addi	r8,sp,104
   12dd4:	00c10004 	movi	r3,1024
   12dd8:	dc011a15 	stw	r16,1128(sp)
   12ddc:	10bfff4c 	andi	r2,r2,65533
   12de0:	2821883a 	mov	r16,r5
   12de4:	d80b883a 	mov	r5,sp
   12de8:	dc811c15 	stw	r18,1136(sp)
   12dec:	dc411b15 	stw	r17,1132(sp)
   12df0:	dfc11d15 	stw	ra,1140(sp)
   12df4:	2025883a 	mov	r18,r4
   12df8:	d880030d 	sth	r2,12(sp)
   12dfc:	db001915 	stw	r12,100(sp)
   12e00:	dac0038d 	sth	r11,14(sp)
   12e04:	da800715 	stw	r10,28(sp)
   12e08:	da400915 	stw	r9,36(sp)
   12e0c:	da000015 	stw	r8,0(sp)
   12e10:	da000415 	stw	r8,16(sp)
   12e14:	d8c00215 	stw	r3,8(sp)
   12e18:	d8c00515 	stw	r3,20(sp)
   12e1c:	d8000615 	stw	zero,24(sp)
   12e20:	0011b3c0 	call	11b3c <___vfiprintf_internal_r>
   12e24:	1023883a 	mov	r17,r2
   12e28:	10000d0e 	bge	r2,zero,12e60 <__sbprintf+0xa8>
   12e2c:	d880030b 	ldhu	r2,12(sp)
   12e30:	1080100c 	andi	r2,r2,64
   12e34:	10000326 	beq	r2,zero,12e44 <__sbprintf+0x8c>
   12e38:	8080030b 	ldhu	r2,12(r16)
   12e3c:	10801014 	ori	r2,r2,64
   12e40:	8080030d 	sth	r2,12(r16)
   12e44:	8805883a 	mov	r2,r17
   12e48:	dfc11d17 	ldw	ra,1140(sp)
   12e4c:	dc811c17 	ldw	r18,1136(sp)
   12e50:	dc411b17 	ldw	r17,1132(sp)
   12e54:	dc011a17 	ldw	r16,1128(sp)
   12e58:	dec11e04 	addi	sp,sp,1144
   12e5c:	f800283a 	ret
   12e60:	d80b883a 	mov	r5,sp
   12e64:	9009883a 	mov	r4,r18
   12e68:	000edf40 	call	edf4 <_fflush_r>
   12e6c:	103fef26 	beq	r2,zero,12e2c <__sbprintf+0x74>
   12e70:	047fffc4 	movi	r17,-1
   12e74:	003fed06 	br	12e2c <__sbprintf+0x74>

00012e78 <_write_r>:
   12e78:	2807883a 	mov	r3,r5
   12e7c:	defffe04 	addi	sp,sp,-8
   12e80:	dc000015 	stw	r16,0(sp)
   12e84:	300b883a 	mov	r5,r6
   12e88:	008000b4 	movhi	r2,2
   12e8c:	380d883a 	mov	r6,r7
   12e90:	2021883a 	mov	r16,r4
   12e94:	1809883a 	mov	r4,r3
   12e98:	dfc00115 	stw	ra,4(sp)
   12e9c:	102fbf15 	stw	zero,-16644(r2)
   12ea0:	00157400 	call	15740 <write>
   12ea4:	10ffffd8 	cmpnei	r3,r2,-1
   12ea8:	18000426 	beq	r3,zero,12ebc <_write_r+0x44>
   12eac:	dfc00117 	ldw	ra,4(sp)
   12eb0:	dc000017 	ldw	r16,0(sp)
   12eb4:	dec00204 	addi	sp,sp,8
   12eb8:	f800283a 	ret
   12ebc:	00c000b4 	movhi	r3,2
   12ec0:	18efbf17 	ldw	r3,-16644(r3)
   12ec4:	183ff926 	beq	r3,zero,12eac <_write_r+0x34>
   12ec8:	80c00015 	stw	r3,0(r16)
   12ecc:	dfc00117 	ldw	ra,4(sp)
   12ed0:	dc000017 	ldw	r16,0(sp)
   12ed4:	dec00204 	addi	sp,sp,8
   12ed8:	f800283a 	ret

00012edc <_close_r>:
   12edc:	defffe04 	addi	sp,sp,-8
   12ee0:	dc000015 	stw	r16,0(sp)
   12ee4:	008000b4 	movhi	r2,2
   12ee8:	2021883a 	mov	r16,r4
   12eec:	2809883a 	mov	r4,r5
   12ef0:	dfc00115 	stw	ra,4(sp)
   12ef4:	102fbf15 	stw	zero,-16644(r2)
   12ef8:	0014d200 	call	14d20 <close>
   12efc:	10ffffd8 	cmpnei	r3,r2,-1
   12f00:	18000426 	beq	r3,zero,12f14 <_close_r+0x38>
   12f04:	dfc00117 	ldw	ra,4(sp)
   12f08:	dc000017 	ldw	r16,0(sp)
   12f0c:	dec00204 	addi	sp,sp,8
   12f10:	f800283a 	ret
   12f14:	00c000b4 	movhi	r3,2
   12f18:	18efbf17 	ldw	r3,-16644(r3)
   12f1c:	183ff926 	beq	r3,zero,12f04 <_close_r+0x28>
   12f20:	80c00015 	stw	r3,0(r16)
   12f24:	dfc00117 	ldw	ra,4(sp)
   12f28:	dc000017 	ldw	r16,0(sp)
   12f2c:	dec00204 	addi	sp,sp,8
   12f30:	f800283a 	ret

00012f34 <__assert_func>:
   12f34:	008000b4 	movhi	r2,2
   12f38:	12288b17 	ldw	r8,-24020(r2)
   12f3c:	defffc04 	addi	sp,sp,-16
   12f40:	3807883a 	mov	r3,r7
   12f44:	3005883a 	mov	r2,r6
   12f48:	dfc00315 	stw	ra,12(sp)
   12f4c:	42400317 	ldw	r9,12(r8)
   12f50:	200f883a 	mov	r7,r4
   12f54:	2811883a 	mov	r8,r5
   12f58:	180d883a 	mov	r6,r3
   12f5c:	10000a26 	beq	r2,zero,12f88 <__assert_func+0x54>
   12f60:	00c000b4 	movhi	r3,2
   12f64:	18e09f04 	addi	r3,r3,-32132
   12f68:	014000b4 	movhi	r5,2
   12f6c:	2960a304 	addi	r5,r5,-32116
   12f70:	4809883a 	mov	r4,r9
   12f74:	d8c00115 	stw	r3,4(sp)
   12f78:	da000015 	stw	r8,0(sp)
   12f7c:	d8800215 	stw	r2,8(sp)
   12f80:	00132c00 	call	132c0 <fiprintf>
   12f84:	0013b080 	call	13b08 <abort>
   12f88:	00c000b4 	movhi	r3,2
   12f8c:	18e0a204 	addi	r3,r3,-32120
   12f90:	1805883a 	mov	r2,r3
   12f94:	003ff406 	br	12f68 <__assert_func+0x34>

00012f98 <__assert>:
   12f98:	deffff04 	addi	sp,sp,-4
   12f9c:	300f883a 	mov	r7,r6
   12fa0:	000d883a 	mov	r6,zero
   12fa4:	dfc00015 	stw	ra,0(sp)
   12fa8:	0012f340 	call	12f34 <__assert_func>

00012fac <_calloc_r>:
   12fac:	2806d43a 	srli	r3,r5,16
   12fb0:	defffb04 	addi	sp,sp,-20
   12fb4:	dc400115 	stw	r17,4(sp)
   12fb8:	dc000015 	stw	r16,0(sp)
   12fbc:	dfc00415 	stw	ra,16(sp)
   12fc0:	dcc00315 	stw	r19,12(sp)
   12fc4:	dc800215 	stw	r18,8(sp)
   12fc8:	3022d43a 	srli	r17,r6,16
   12fcc:	2805883a 	mov	r2,r5
   12fd0:	2021883a 	mov	r16,r4
   12fd4:	18002d1e 	bne	r3,zero,1308c <_calloc_r+0xe0>
   12fd8:	88003e1e 	bne	r17,zero,130d4 <_calloc_r+0x128>
   12fdc:	317fffcc 	andi	r5,r6,65535
   12fe0:	113fffcc 	andi	r4,r2,65535
   12fe4:	00079b80 	call	79b8 <__mulsi3>
   12fe8:	100b883a 	mov	r5,r2
   12fec:	8009883a 	mov	r4,r16
   12ff0:	000a4f80 	call	a4f8 <_malloc_r>
   12ff4:	1009883a 	mov	r4,r2
   12ff8:	10001626 	beq	r2,zero,13054 <_calloc_r+0xa8>
   12ffc:	11bfff17 	ldw	r6,-4(r2)
   13000:	00bfff04 	movi	r2,-4
   13004:	308c703a 	and	r6,r6,r2
   13008:	31bfff04 	addi	r6,r6,-4
   1300c:	30800968 	cmpgeui	r2,r6,37
   13010:	1000181e 	bne	r2,zero,13074 <_calloc_r+0xc8>
   13014:	30800530 	cmpltui	r2,r6,20
   13018:	10000a1e 	bne	r2,zero,13044 <_calloc_r+0x98>
   1301c:	20000015 	stw	zero,0(r4)
   13020:	20000115 	stw	zero,4(r4)
   13024:	30800728 	cmpgeui	r2,r6,28
   13028:	10001626 	beq	r2,zero,13084 <_calloc_r+0xd8>
   1302c:	20000215 	stw	zero,8(r4)
   13030:	20000315 	stw	zero,12(r4)
   13034:	31800920 	cmpeqi	r6,r6,36
   13038:	30002d1e 	bne	r6,zero,130f0 <_calloc_r+0x144>
   1303c:	20800404 	addi	r2,r4,16
   13040:	00000106 	br	13048 <_calloc_r+0x9c>
   13044:	2005883a 	mov	r2,r4
   13048:	10000015 	stw	zero,0(r2)
   1304c:	10000115 	stw	zero,4(r2)
   13050:	10000215 	stw	zero,8(r2)
   13054:	2005883a 	mov	r2,r4
   13058:	dfc00417 	ldw	ra,16(sp)
   1305c:	dcc00317 	ldw	r19,12(sp)
   13060:	dc800217 	ldw	r18,8(sp)
   13064:	dc400117 	ldw	r17,4(sp)
   13068:	dc000017 	ldw	r16,0(sp)
   1306c:	dec00504 	addi	sp,sp,20
   13070:	f800283a 	ret
   13074:	000b883a 	mov	r5,zero
   13078:	00100d40 	call	100d4 <memset>
   1307c:	1009883a 	mov	r4,r2
   13080:	003ff406 	br	13054 <_calloc_r+0xa8>
   13084:	20800204 	addi	r2,r4,8
   13088:	003fef06 	br	13048 <_calloc_r+0x9c>
   1308c:	8800131e 	bne	r17,zero,130dc <_calloc_r+0x130>
   13090:	1823883a 	mov	r17,r3
   13094:	3027883a 	mov	r19,r6
   13098:	317fffcc 	andi	r5,r6,65535
   1309c:	113fffcc 	andi	r4,r2,65535
   130a0:	00079b80 	call	79b8 <__mulsi3>
   130a4:	897fffcc 	andi	r5,r17,65535
   130a8:	993fffcc 	andi	r4,r19,65535
   130ac:	1025883a 	mov	r18,r2
   130b0:	00079b80 	call	79b8 <__mulsi3>
   130b4:	900ad43a 	srli	r5,r18,16
   130b8:	114b883a 	add	r5,r2,r5
   130bc:	2804d43a 	srli	r2,r5,16
   130c0:	1000061e 	bne	r2,zero,130dc <_calloc_r+0x130>
   130c4:	280a943a 	slli	r5,r5,16
   130c8:	94bfffcc 	andi	r18,r18,65535
   130cc:	2c8ab03a 	or	r5,r5,r18
   130d0:	003fc606 	br	12fec <_calloc_r+0x40>
   130d4:	2827883a 	mov	r19,r5
   130d8:	003fef06 	br	13098 <_calloc_r+0xec>
   130dc:	000a4cc0 	call	a4cc <__errno>
   130e0:	00c00304 	movi	r3,12
   130e4:	10c00015 	stw	r3,0(r2)
   130e8:	0009883a 	mov	r4,zero
   130ec:	003fd906 	br	13054 <_calloc_r+0xa8>
   130f0:	20000415 	stw	zero,16(r4)
   130f4:	20800604 	addi	r2,r4,24
   130f8:	20000515 	stw	zero,20(r4)
   130fc:	003fd206 	br	13048 <_calloc_r+0x9c>

00013100 <_fclose_r.part.0>:
   13100:	defffc04 	addi	sp,sp,-16
   13104:	dc800215 	stw	r18,8(sp)
   13108:	dc400115 	stw	r17,4(sp)
   1310c:	dc000015 	stw	r16,0(sp)
   13110:	dfc00315 	stw	ra,12(sp)
   13114:	2821883a 	mov	r16,r5
   13118:	2023883a 	mov	r17,r4
   1311c:	000ebcc0 	call	ebcc <__sflush_r>
   13120:	80c00b17 	ldw	r3,44(r16)
   13124:	1025883a 	mov	r18,r2
   13128:	18000426 	beq	r3,zero,1313c <_fclose_r.part.0+0x3c>
   1312c:	81400717 	ldw	r5,28(r16)
   13130:	8809883a 	mov	r4,r17
   13134:	183ee83a 	callr	r3
   13138:	10001916 	blt	r2,zero,131a0 <_fclose_r.part.0+0xa0>
   1313c:	8080030b 	ldhu	r2,12(r16)
   13140:	1080200c 	andi	r2,r2,128
   13144:	10001a1e 	bne	r2,zero,131b0 <_fclose_r.part.0+0xb0>
   13148:	81400c17 	ldw	r5,48(r16)
   1314c:	28000526 	beq	r5,zero,13164 <_fclose_r.part.0+0x64>
   13150:	80801004 	addi	r2,r16,64
   13154:	28800226 	beq	r5,r2,13160 <_fclose_r.part.0+0x60>
   13158:	8809883a 	mov	r4,r17
   1315c:	000f3a00 	call	f3a0 <_free_r>
   13160:	80000c15 	stw	zero,48(r16)
   13164:	81401117 	ldw	r5,68(r16)
   13168:	28000326 	beq	r5,zero,13178 <_fclose_r.part.0+0x78>
   1316c:	8809883a 	mov	r4,r17
   13170:	000f3a00 	call	f3a0 <_free_r>
   13174:	80001115 	stw	zero,68(r16)
   13178:	000f24c0 	call	f24c <__sfp_lock_acquire>
   1317c:	8000030d 	sth	zero,12(r16)
   13180:	000f2500 	call	f250 <__sfp_lock_release>
   13184:	9005883a 	mov	r2,r18
   13188:	dfc00317 	ldw	ra,12(sp)
   1318c:	dc800217 	ldw	r18,8(sp)
   13190:	dc400117 	ldw	r17,4(sp)
   13194:	dc000017 	ldw	r16,0(sp)
   13198:	dec00404 	addi	sp,sp,16
   1319c:	f800283a 	ret
   131a0:	8080030b 	ldhu	r2,12(r16)
   131a4:	04bfffc4 	movi	r18,-1
   131a8:	1080200c 	andi	r2,r2,128
   131ac:	103fe626 	beq	r2,zero,13148 <_fclose_r.part.0+0x48>
   131b0:	81400417 	ldw	r5,16(r16)
   131b4:	8809883a 	mov	r4,r17
   131b8:	000f3a00 	call	f3a0 <_free_r>
   131bc:	003fe206 	br	13148 <_fclose_r.part.0+0x48>

000131c0 <_fclose_r>:
   131c0:	28001926 	beq	r5,zero,13228 <_fclose_r+0x68>
   131c4:	defffd04 	addi	sp,sp,-12
   131c8:	dc000115 	stw	r16,4(sp)
   131cc:	dfc00215 	stw	ra,8(sp)
   131d0:	2021883a 	mov	r16,r4
   131d4:	20000226 	beq	r4,zero,131e0 <_fclose_r+0x20>
   131d8:	20800e17 	ldw	r2,56(r4)
   131dc:	10000c26 	beq	r2,zero,13210 <_fclose_r+0x50>
   131e0:	2880030f 	ldh	r2,12(r5)
   131e4:	1000051e 	bne	r2,zero,131fc <_fclose_r+0x3c>
   131e8:	0005883a 	mov	r2,zero
   131ec:	dfc00217 	ldw	ra,8(sp)
   131f0:	dc000117 	ldw	r16,4(sp)
   131f4:	dec00304 	addi	sp,sp,12
   131f8:	f800283a 	ret
   131fc:	8009883a 	mov	r4,r16
   13200:	dfc00217 	ldw	ra,8(sp)
   13204:	dc000117 	ldw	r16,4(sp)
   13208:	dec00304 	addi	sp,sp,12
   1320c:	00131001 	jmpi	13100 <_fclose_r.part.0>
   13210:	d9400015 	stw	r5,0(sp)
   13214:	000f23c0 	call	f23c <__sinit>
   13218:	d9400017 	ldw	r5,0(sp)
   1321c:	2880030f 	ldh	r2,12(r5)
   13220:	103ff126 	beq	r2,zero,131e8 <_fclose_r+0x28>
   13224:	003ff506 	br	131fc <_fclose_r+0x3c>
   13228:	0005883a 	mov	r2,zero
   1322c:	f800283a 	ret

00013230 <fclose>:
   13230:	20000826 	beq	r4,zero,13254 <fclose+0x24>
   13234:	008000b4 	movhi	r2,2
   13238:	200b883a 	mov	r5,r4
   1323c:	11288b17 	ldw	r4,-24020(r2)
   13240:	20000226 	beq	r4,zero,1324c <fclose+0x1c>
   13244:	20800e17 	ldw	r2,56(r4)
   13248:	10000526 	beq	r2,zero,13260 <fclose+0x30>
   1324c:	2880030f 	ldh	r2,12(r5)
   13250:	1000021e 	bne	r2,zero,1325c <fclose+0x2c>
   13254:	0005883a 	mov	r2,zero
   13258:	f800283a 	ret
   1325c:	00131001 	jmpi	13100 <_fclose_r.part.0>
   13260:	defffd04 	addi	sp,sp,-12
   13264:	d9400115 	stw	r5,4(sp)
   13268:	d9000015 	stw	r4,0(sp)
   1326c:	dfc00215 	stw	ra,8(sp)
   13270:	000f23c0 	call	f23c <__sinit>
   13274:	d9400117 	ldw	r5,4(sp)
   13278:	d9000017 	ldw	r4,0(sp)
   1327c:	2880030f 	ldh	r2,12(r5)
   13280:	10000326 	beq	r2,zero,13290 <fclose+0x60>
   13284:	dfc00217 	ldw	ra,8(sp)
   13288:	dec00304 	addi	sp,sp,12
   1328c:	00131001 	jmpi	13100 <_fclose_r.part.0>
   13290:	0005883a 	mov	r2,zero
   13294:	dfc00217 	ldw	ra,8(sp)
   13298:	dec00304 	addi	sp,sp,12
   1329c:	f800283a 	ret

000132a0 <_fiprintf_r>:
   132a0:	defffe04 	addi	sp,sp,-8
   132a4:	dfc00015 	stw	ra,0(sp)
   132a8:	d9c00115 	stw	r7,4(sp)
   132ac:	d9c00104 	addi	r7,sp,4
   132b0:	00138740 	call	13874 <_vfiprintf_r>
   132b4:	dfc00017 	ldw	ra,0(sp)
   132b8:	dec00204 	addi	sp,sp,8
   132bc:	f800283a 	ret

000132c0 <fiprintf>:
   132c0:	defffd04 	addi	sp,sp,-12
   132c4:	2005883a 	mov	r2,r4
   132c8:	dfc00015 	stw	ra,0(sp)
   132cc:	d9800115 	stw	r6,4(sp)
   132d0:	d9c00215 	stw	r7,8(sp)
   132d4:	00c000b4 	movhi	r3,2
   132d8:	19288b17 	ldw	r4,-24020(r3)
   132dc:	280d883a 	mov	r6,r5
   132e0:	d9c00104 	addi	r7,sp,4
   132e4:	100b883a 	mov	r5,r2
   132e8:	00138740 	call	13874 <_vfiprintf_r>
   132ec:	dfc00017 	ldw	ra,0(sp)
   132f0:	dec00304 	addi	sp,sp,12
   132f4:	f800283a 	ret

000132f8 <__fputwc>:
   132f8:	defff904 	addi	sp,sp,-28
   132fc:	dcc00415 	stw	r19,16(sp)
   13300:	dc800315 	stw	r18,12(sp)
   13304:	dc000115 	stw	r16,4(sp)
   13308:	dfc00615 	stw	ra,24(sp)
   1330c:	dd000515 	stw	r20,20(sp)
   13310:	dc400215 	stw	r17,8(sp)
   13314:	2025883a 	mov	r18,r4
   13318:	2827883a 	mov	r19,r5
   1331c:	3021883a 	mov	r16,r6
   13320:	00136240 	call	13624 <__locale_mb_cur_max>
   13324:	10800058 	cmpnei	r2,r2,1
   13328:	1000071e 	bne	r2,zero,13348 <__fputwc+0x50>
   1332c:	98bfffc4 	addi	r2,r19,-1
   13330:	10803fe8 	cmpgeui	r2,r2,255
   13334:	1000041e 	bne	r2,zero,13348 <__fputwc+0x50>
   13338:	980b883a 	mov	r5,r19
   1333c:	dcc000c5 	stb	r19,3(sp)
   13340:	05000044 	movi	r20,1
   13344:	00000a06 	br	13370 <__fputwc+0x78>
   13348:	81c01704 	addi	r7,r16,92
   1334c:	980d883a 	mov	r6,r19
   13350:	d94000c4 	addi	r5,sp,3
   13354:	9009883a 	mov	r4,r18
   13358:	00139d80 	call	139d8 <_wcrtomb_r>
   1335c:	1029883a 	mov	r20,r2
   13360:	10bfffd8 	cmpnei	r2,r2,-1
   13364:	10003926 	beq	r2,zero,1344c <__fputwc+0x154>
   13368:	a0001f26 	beq	r20,zero,133e8 <__fputwc+0xf0>
   1336c:	d94000c3 	ldbu	r5,3(sp)
   13370:	0023883a 	mov	r17,zero
   13374:	00000a06 	br	133a0 <__fputwc+0xa8>
   13378:	80800017 	ldw	r2,0(r16)
   1337c:	11400005 	stb	r5,0(r2)
   13380:	80c00017 	ldw	r3,0(r16)
   13384:	18c00044 	addi	r3,r3,1
   13388:	80c00015 	stw	r3,0(r16)
   1338c:	8c400044 	addi	r17,r17,1
   13390:	d88000c4 	addi	r2,sp,3
   13394:	1447883a 	add	r3,r2,r17
   13398:	8d00132e 	bgeu	r17,r20,133e8 <__fputwc+0xf0>
   1339c:	19400003 	ldbu	r5,0(r3)
   133a0:	80c00217 	ldw	r3,8(r16)
   133a4:	18ffffc4 	addi	r3,r3,-1
   133a8:	80c00215 	stw	r3,8(r16)
   133ac:	183ff20e 	bge	r3,zero,13378 <__fputwc+0x80>
   133b0:	80800617 	ldw	r2,24(r16)
   133b4:	18801616 	blt	r3,r2,13410 <__fputwc+0x118>
   133b8:	80800017 	ldw	r2,0(r16)
   133bc:	11400005 	stb	r5,0(r2)
   133c0:	80800017 	ldw	r2,0(r16)
   133c4:	10c00003 	ldbu	r3,0(r2)
   133c8:	10800044 	addi	r2,r2,1
   133cc:	18c002a0 	cmpeqi	r3,r3,10
   133d0:	1800171e 	bne	r3,zero,13430 <__fputwc+0x138>
   133d4:	80800015 	stw	r2,0(r16)
   133d8:	8c400044 	addi	r17,r17,1
   133dc:	d88000c4 	addi	r2,sp,3
   133e0:	1447883a 	add	r3,r2,r17
   133e4:	8d3fed36 	bltu	r17,r20,1339c <__fputwc+0xa4>
   133e8:	9829883a 	mov	r20,r19
   133ec:	a005883a 	mov	r2,r20
   133f0:	dfc00617 	ldw	ra,24(sp)
   133f4:	dd000517 	ldw	r20,20(sp)
   133f8:	dcc00417 	ldw	r19,16(sp)
   133fc:	dc800317 	ldw	r18,12(sp)
   13400:	dc400217 	ldw	r17,8(sp)
   13404:	dc000117 	ldw	r16,4(sp)
   13408:	dec00704 	addi	sp,sp,28
   1340c:	f800283a 	ret
   13410:	29403fcc 	andi	r5,r5,255
   13414:	800d883a 	mov	r6,r16
   13418:	9009883a 	mov	r4,r18
   1341c:	00138780 	call	13878 <__swbuf_r>
   13420:	10bfffe0 	cmpeqi	r2,r2,-1
   13424:	103fd926 	beq	r2,zero,1338c <__fputwc+0x94>
   13428:	053fffc4 	movi	r20,-1
   1342c:	003fef06 	br	133ec <__fputwc+0xf4>
   13430:	800d883a 	mov	r6,r16
   13434:	01400284 	movi	r5,10
   13438:	9009883a 	mov	r4,r18
   1343c:	00138780 	call	13878 <__swbuf_r>
   13440:	10bfffe0 	cmpeqi	r2,r2,-1
   13444:	103fd126 	beq	r2,zero,1338c <__fputwc+0x94>
   13448:	003ff706 	br	13428 <__fputwc+0x130>
   1344c:	8080030b 	ldhu	r2,12(r16)
   13450:	10801014 	ori	r2,r2,64
   13454:	8080030d 	sth	r2,12(r16)
   13458:	003fe406 	br	133ec <__fputwc+0xf4>

0001345c <_fputwc_r>:
   1345c:	3080030b 	ldhu	r2,12(r6)
   13460:	10c8000c 	andi	r3,r2,8192
   13464:	1800051e 	bne	r3,zero,1347c <_fputwc_r+0x20>
   13468:	30c01917 	ldw	r3,100(r6)
   1346c:	10880014 	ori	r2,r2,8192
   13470:	3080030d 	sth	r2,12(r6)
   13474:	18880014 	ori	r2,r3,8192
   13478:	30801915 	stw	r2,100(r6)
   1347c:	00132f81 	jmpi	132f8 <__fputwc>

00013480 <fputwc>:
   13480:	defffc04 	addi	sp,sp,-16
   13484:	008000b4 	movhi	r2,2
   13488:	dc000215 	stw	r16,8(sp)
   1348c:	14288b17 	ldw	r16,-24020(r2)
   13490:	dfc00315 	stw	ra,12(sp)
   13494:	280d883a 	mov	r6,r5
   13498:	200b883a 	mov	r5,r4
   1349c:	80000226 	beq	r16,zero,134a8 <fputwc+0x28>
   134a0:	80800e17 	ldw	r2,56(r16)
   134a4:	10000d26 	beq	r2,zero,134dc <fputwc+0x5c>
   134a8:	3080030b 	ldhu	r2,12(r6)
   134ac:	10c8000c 	andi	r3,r2,8192
   134b0:	1800051e 	bne	r3,zero,134c8 <fputwc+0x48>
   134b4:	30c01917 	ldw	r3,100(r6)
   134b8:	10880014 	ori	r2,r2,8192
   134bc:	3080030d 	sth	r2,12(r6)
   134c0:	18880014 	ori	r2,r3,8192
   134c4:	30801915 	stw	r2,100(r6)
   134c8:	8009883a 	mov	r4,r16
   134cc:	dfc00317 	ldw	ra,12(sp)
   134d0:	dc000217 	ldw	r16,8(sp)
   134d4:	dec00404 	addi	sp,sp,16
   134d8:	00132f81 	jmpi	132f8 <__fputwc>
   134dc:	d9000015 	stw	r4,0(sp)
   134e0:	8009883a 	mov	r4,r16
   134e4:	d9800115 	stw	r6,4(sp)
   134e8:	000f23c0 	call	f23c <__sinit>
   134ec:	d9800117 	ldw	r6,4(sp)
   134f0:	d9400017 	ldw	r5,0(sp)
   134f4:	003fec06 	br	134a8 <fputwc+0x28>

000134f8 <_fstat_r>:
   134f8:	2807883a 	mov	r3,r5
   134fc:	defffe04 	addi	sp,sp,-8
   13500:	dc000015 	stw	r16,0(sp)
   13504:	008000b4 	movhi	r2,2
   13508:	300b883a 	mov	r5,r6
   1350c:	2021883a 	mov	r16,r4
   13510:	1809883a 	mov	r4,r3
   13514:	dfc00115 	stw	ra,4(sp)
   13518:	102fbf15 	stw	zero,-16644(r2)
   1351c:	0014e9c0 	call	14e9c <fstat>
   13520:	10ffffd8 	cmpnei	r3,r2,-1
   13524:	18000426 	beq	r3,zero,13538 <_fstat_r+0x40>
   13528:	dfc00117 	ldw	ra,4(sp)
   1352c:	dc000017 	ldw	r16,0(sp)
   13530:	dec00204 	addi	sp,sp,8
   13534:	f800283a 	ret
   13538:	00c000b4 	movhi	r3,2
   1353c:	18efbf17 	ldw	r3,-16644(r3)
   13540:	183ff926 	beq	r3,zero,13528 <_fstat_r+0x30>
   13544:	80c00015 	stw	r3,0(r16)
   13548:	dfc00117 	ldw	ra,4(sp)
   1354c:	dc000017 	ldw	r16,0(sp)
   13550:	dec00204 	addi	sp,sp,8
   13554:	f800283a 	ret

00013558 <_isatty_r>:
   13558:	defffe04 	addi	sp,sp,-8
   1355c:	dc000015 	stw	r16,0(sp)
   13560:	008000b4 	movhi	r2,2
   13564:	2021883a 	mov	r16,r4
   13568:	2809883a 	mov	r4,r5
   1356c:	dfc00115 	stw	ra,4(sp)
   13570:	102fbf15 	stw	zero,-16644(r2)
   13574:	0014fb40 	call	14fb4 <isatty>
   13578:	10ffffd8 	cmpnei	r3,r2,-1
   1357c:	18000426 	beq	r3,zero,13590 <_isatty_r+0x38>
   13580:	dfc00117 	ldw	ra,4(sp)
   13584:	dc000017 	ldw	r16,0(sp)
   13588:	dec00204 	addi	sp,sp,8
   1358c:	f800283a 	ret
   13590:	00c000b4 	movhi	r3,2
   13594:	18efbf17 	ldw	r3,-16644(r3)
   13598:	183ff926 	beq	r3,zero,13580 <_isatty_r+0x28>
   1359c:	80c00015 	stw	r3,0(r16)
   135a0:	dfc00117 	ldw	ra,4(sp)
   135a4:	dc000017 	ldw	r16,0(sp)
   135a8:	dec00204 	addi	sp,sp,8
   135ac:	f800283a 	ret

000135b0 <_setlocale_r>:
   135b0:	30001626 	beq	r6,zero,1360c <_setlocale_r+0x5c>
   135b4:	014000b4 	movhi	r5,2
   135b8:	defffe04 	addi	sp,sp,-8
   135bc:	2960b004 	addi	r5,r5,-32064
   135c0:	3009883a 	mov	r4,r6
   135c4:	dc000015 	stw	r16,0(sp)
   135c8:	dfc00115 	stw	ra,4(sp)
   135cc:	3021883a 	mov	r16,r6
   135d0:	00137bc0 	call	137bc <strcmp>
   135d4:	1000061e 	bne	r2,zero,135f0 <_setlocale_r+0x40>
   135d8:	008000b4 	movhi	r2,2
   135dc:	10a0af04 	addi	r2,r2,-32068
   135e0:	dfc00117 	ldw	ra,4(sp)
   135e4:	dc000017 	ldw	r16,0(sp)
   135e8:	dec00204 	addi	sp,sp,8
   135ec:	f800283a 	ret
   135f0:	80800003 	ldbu	r2,0(r16)
   135f4:	10bfef44 	addi	r2,r2,-67
   135f8:	10000726 	beq	r2,zero,13618 <_setlocale_r+0x68>
   135fc:	80800003 	ldbu	r2,0(r16)
   13600:	103ff526 	beq	r2,zero,135d8 <_setlocale_r+0x28>
   13604:	0005883a 	mov	r2,zero
   13608:	003ff506 	br	135e0 <_setlocale_r+0x30>
   1360c:	008000b4 	movhi	r2,2
   13610:	10a0af04 	addi	r2,r2,-32068
   13614:	f800283a 	ret
   13618:	80800043 	ldbu	r2,1(r16)
   1361c:	103fee26 	beq	r2,zero,135d8 <_setlocale_r+0x28>
   13620:	003ff606 	br	135fc <_setlocale_r+0x4c>

00013624 <__locale_mb_cur_max>:
   13624:	008000b4 	movhi	r2,2
   13628:	10a3c907 	ldb	r2,-28892(r2)
   1362c:	f800283a 	ret

00013630 <setlocale>:
   13630:	28001626 	beq	r5,zero,1368c <setlocale+0x5c>
   13634:	defffe04 	addi	sp,sp,-8
   13638:	dc000015 	stw	r16,0(sp)
   1363c:	2821883a 	mov	r16,r5
   13640:	014000b4 	movhi	r5,2
   13644:	2960b004 	addi	r5,r5,-32064
   13648:	8009883a 	mov	r4,r16
   1364c:	dfc00115 	stw	ra,4(sp)
   13650:	00137bc0 	call	137bc <strcmp>
   13654:	1000061e 	bne	r2,zero,13670 <setlocale+0x40>
   13658:	008000b4 	movhi	r2,2
   1365c:	10a0af04 	addi	r2,r2,-32068
   13660:	dfc00117 	ldw	ra,4(sp)
   13664:	dc000017 	ldw	r16,0(sp)
   13668:	dec00204 	addi	sp,sp,8
   1366c:	f800283a 	ret
   13670:	80800003 	ldbu	r2,0(r16)
   13674:	10bfef44 	addi	r2,r2,-67
   13678:	10000726 	beq	r2,zero,13698 <setlocale+0x68>
   1367c:	80800003 	ldbu	r2,0(r16)
   13680:	103ff526 	beq	r2,zero,13658 <setlocale+0x28>
   13684:	0005883a 	mov	r2,zero
   13688:	003ff506 	br	13660 <setlocale+0x30>
   1368c:	008000b4 	movhi	r2,2
   13690:	10a0af04 	addi	r2,r2,-32068
   13694:	f800283a 	ret
   13698:	80800043 	ldbu	r2,1(r16)
   1369c:	103fee26 	beq	r2,zero,13658 <setlocale+0x28>
   136a0:	003ff606 	br	1367c <setlocale+0x4c>

000136a4 <_lseek_r>:
   136a4:	2807883a 	mov	r3,r5
   136a8:	defffe04 	addi	sp,sp,-8
   136ac:	dc000015 	stw	r16,0(sp)
   136b0:	300b883a 	mov	r5,r6
   136b4:	008000b4 	movhi	r2,2
   136b8:	380d883a 	mov	r6,r7
   136bc:	2021883a 	mov	r16,r4
   136c0:	1809883a 	mov	r4,r3
   136c4:	dfc00115 	stw	ra,4(sp)
   136c8:	102fbf15 	stw	zero,-16644(r2)
   136cc:	00152f40 	call	152f4 <lseek>
   136d0:	10ffffd8 	cmpnei	r3,r2,-1
   136d4:	18000426 	beq	r3,zero,136e8 <_lseek_r+0x44>
   136d8:	dfc00117 	ldw	ra,4(sp)
   136dc:	dc000017 	ldw	r16,0(sp)
   136e0:	dec00204 	addi	sp,sp,8
   136e4:	f800283a 	ret
   136e8:	00c000b4 	movhi	r3,2
   136ec:	18efbf17 	ldw	r3,-16644(r3)
   136f0:	183ff926 	beq	r3,zero,136d8 <_lseek_r+0x34>
   136f4:	80c00015 	stw	r3,0(r16)
   136f8:	dfc00117 	ldw	ra,4(sp)
   136fc:	dc000017 	ldw	r16,0(sp)
   13700:	dec00204 	addi	sp,sp,8
   13704:	f800283a 	ret

00013708 <_mbtowc_r>:
   13708:	008000b4 	movhi	r2,2
   1370c:	10a3b817 	ldw	r2,-28960(r2)
   13710:	1000683a 	jmp	r2

00013714 <__ascii_mbtowc>:
   13714:	deffff04 	addi	sp,sp,-4
   13718:	28000826 	beq	r5,zero,1373c <__ascii_mbtowc+0x28>
   1371c:	30000926 	beq	r6,zero,13744 <__ascii_mbtowc+0x30>
   13720:	38000b26 	beq	r7,zero,13750 <__ascii_mbtowc+0x3c>
   13724:	30800003 	ldbu	r2,0(r6)
   13728:	28800015 	stw	r2,0(r5)
   1372c:	30800003 	ldbu	r2,0(r6)
   13730:	1004c03a 	cmpne	r2,r2,zero
   13734:	dec00104 	addi	sp,sp,4
   13738:	f800283a 	ret
   1373c:	d80b883a 	mov	r5,sp
   13740:	303ff71e 	bne	r6,zero,13720 <__ascii_mbtowc+0xc>
   13744:	0005883a 	mov	r2,zero
   13748:	dec00104 	addi	sp,sp,4
   1374c:	f800283a 	ret
   13750:	00bfff84 	movi	r2,-2
   13754:	003ff706 	br	13734 <__ascii_mbtowc+0x20>

00013758 <_read_r>:
   13758:	2807883a 	mov	r3,r5
   1375c:	defffe04 	addi	sp,sp,-8
   13760:	dc000015 	stw	r16,0(sp)
   13764:	300b883a 	mov	r5,r6
   13768:	008000b4 	movhi	r2,2
   1376c:	380d883a 	mov	r6,r7
   13770:	2021883a 	mov	r16,r4
   13774:	1809883a 	mov	r4,r3
   13778:	dfc00115 	stw	ra,4(sp)
   1377c:	102fbf15 	stw	zero,-16644(r2)
   13780:	00154d40 	call	154d4 <read>
   13784:	10ffffd8 	cmpnei	r3,r2,-1
   13788:	18000426 	beq	r3,zero,1379c <_read_r+0x44>
   1378c:	dfc00117 	ldw	ra,4(sp)
   13790:	dc000017 	ldw	r16,0(sp)
   13794:	dec00204 	addi	sp,sp,8
   13798:	f800283a 	ret
   1379c:	00c000b4 	movhi	r3,2
   137a0:	18efbf17 	ldw	r3,-16644(r3)
   137a4:	183ff926 	beq	r3,zero,1378c <_read_r+0x34>
   137a8:	80c00015 	stw	r3,0(r16)
   137ac:	dfc00117 	ldw	ra,4(sp)
   137b0:	dc000017 	ldw	r16,0(sp)
   137b4:	dec00204 	addi	sp,sp,8
   137b8:	f800283a 	ret

000137bc <strcmp>:
   137bc:	2144b03a 	or	r2,r4,r5
   137c0:	108000cc 	andi	r2,r2,3
   137c4:	1000141e 	bne	r2,zero,13818 <strcmp+0x5c>
   137c8:	20800017 	ldw	r2,0(r4)
   137cc:	28c00017 	ldw	r3,0(r5)
   137d0:	10c0111e 	bne	r2,r3,13818 <strcmp+0x5c>
   137d4:	01ffbff4 	movhi	r7,65279
   137d8:	01a02074 	movhi	r6,32897
   137dc:	39ffbfc4 	addi	r7,r7,-257
   137e0:	31a02004 	addi	r6,r6,-32640
   137e4:	00000306 	br	137f4 <strcmp+0x38>
   137e8:	20800017 	ldw	r2,0(r4)
   137ec:	28c00017 	ldw	r3,0(r5)
   137f0:	10c0091e 	bne	r2,r3,13818 <strcmp+0x5c>
   137f4:	11c7883a 	add	r3,r2,r7
   137f8:	0084303a 	nor	r2,zero,r2
   137fc:	1884703a 	and	r2,r3,r2
   13800:	1184703a 	and	r2,r2,r6
   13804:	21000104 	addi	r4,r4,4
   13808:	29400104 	addi	r5,r5,4
   1380c:	103ff626 	beq	r2,zero,137e8 <strcmp+0x2c>
   13810:	0005883a 	mov	r2,zero
   13814:	f800283a 	ret
   13818:	20c00003 	ldbu	r3,0(r4)
   1381c:	18803fcc 	andi	r2,r3,255
   13820:	1080201c 	xori	r2,r2,128
   13824:	10bfe004 	addi	r2,r2,-128
   13828:	1000071e 	bne	r2,zero,13848 <strcmp+0x8c>
   1382c:	00000a06 	br	13858 <strcmp+0x9c>
   13830:	20c00003 	ldbu	r3,0(r4)
   13834:	29400044 	addi	r5,r5,1
   13838:	18803fcc 	andi	r2,r3,255
   1383c:	1080201c 	xori	r2,r2,128
   13840:	10bfe004 	addi	r2,r2,-128
   13844:	10000726 	beq	r2,zero,13864 <strcmp+0xa8>
   13848:	29800007 	ldb	r6,0(r5)
   1384c:	21000044 	addi	r4,r4,1
   13850:	30bff726 	beq	r6,r2,13830 <strcmp+0x74>
   13854:	18803fcc 	andi	r2,r3,255
   13858:	28c00003 	ldbu	r3,0(r5)
   1385c:	10c5c83a 	sub	r2,r2,r3
   13860:	f800283a 	ret
   13864:	28c00003 	ldbu	r3,0(r5)
   13868:	0005883a 	mov	r2,zero
   1386c:	10c5c83a 	sub	r2,r2,r3
   13870:	f800283a 	ret

00013874 <_vfiprintf_r>:
   13874:	0011b3c1 	jmpi	11b3c <___vfiprintf_internal_r>

00013878 <__swbuf_r>:
   13878:	defffb04 	addi	sp,sp,-20
   1387c:	dcc00315 	stw	r19,12(sp)
   13880:	dc400115 	stw	r17,4(sp)
   13884:	dc000015 	stw	r16,0(sp)
   13888:	dfc00415 	stw	ra,16(sp)
   1388c:	dc800215 	stw	r18,8(sp)
   13890:	2027883a 	mov	r19,r4
   13894:	2823883a 	mov	r17,r5
   13898:	3021883a 	mov	r16,r6
   1389c:	20000226 	beq	r4,zero,138a8 <__swbuf_r+0x30>
   138a0:	20800e17 	ldw	r2,56(r4)
   138a4:	10003e26 	beq	r2,zero,139a0 <__swbuf_r+0x128>
   138a8:	80800617 	ldw	r2,24(r16)
   138ac:	80c0030b 	ldhu	r3,12(r16)
   138b0:	80800215 	stw	r2,8(r16)
   138b4:	1880020c 	andi	r2,r3,8
   138b8:	10001f26 	beq	r2,zero,13938 <__swbuf_r+0xc0>
   138bc:	80800417 	ldw	r2,16(r16)
   138c0:	10001d26 	beq	r2,zero,13938 <__swbuf_r+0xc0>
   138c4:	1948000c 	andi	r5,r3,8192
   138c8:	8c803fcc 	andi	r18,r17,255
   138cc:	28002326 	beq	r5,zero,1395c <__swbuf_r+0xe4>
   138d0:	80c00017 	ldw	r3,0(r16)
   138d4:	81000517 	ldw	r4,20(r16)
   138d8:	1885c83a 	sub	r2,r3,r2
   138dc:	1100290e 	bge	r2,r4,13984 <__swbuf_r+0x10c>
   138e0:	10800044 	addi	r2,r2,1
   138e4:	81400217 	ldw	r5,8(r16)
   138e8:	19000044 	addi	r4,r3,1
   138ec:	81000015 	stw	r4,0(r16)
   138f0:	297fffc4 	addi	r5,r5,-1
   138f4:	81400215 	stw	r5,8(r16)
   138f8:	1c400005 	stb	r17,0(r3)
   138fc:	80c00517 	ldw	r3,20(r16)
   13900:	18802926 	beq	r3,r2,139a8 <__swbuf_r+0x130>
   13904:	8080030b 	ldhu	r2,12(r16)
   13908:	1080004c 	andi	r2,r2,1
   1390c:	10000226 	beq	r2,zero,13918 <__swbuf_r+0xa0>
   13910:	90800298 	cmpnei	r2,r18,10
   13914:	10002426 	beq	r2,zero,139a8 <__swbuf_r+0x130>
   13918:	9005883a 	mov	r2,r18
   1391c:	dfc00417 	ldw	ra,16(sp)
   13920:	dcc00317 	ldw	r19,12(sp)
   13924:	dc800217 	ldw	r18,8(sp)
   13928:	dc400117 	ldw	r17,4(sp)
   1392c:	dc000017 	ldw	r16,0(sp)
   13930:	dec00504 	addi	sp,sp,20
   13934:	f800283a 	ret
   13938:	800b883a 	mov	r5,r16
   1393c:	9809883a 	mov	r4,r19
   13940:	000d1000 	call	d100 <__swsetup_r>
   13944:	10001c1e 	bne	r2,zero,139b8 <__swbuf_r+0x140>
   13948:	80c0030b 	ldhu	r3,12(r16)
   1394c:	80800417 	ldw	r2,16(r16)
   13950:	8c803fcc 	andi	r18,r17,255
   13954:	1948000c 	andi	r5,r3,8192
   13958:	283fdd1e 	bne	r5,zero,138d0 <__swbuf_r+0x58>
   1395c:	81001917 	ldw	r4,100(r16)
   13960:	18c80014 	ori	r3,r3,8192
   13964:	0177ffc4 	movi	r5,-8193
   13968:	2148703a 	and	r4,r4,r5
   1396c:	80c0030d 	sth	r3,12(r16)
   13970:	80c00017 	ldw	r3,0(r16)
   13974:	81001915 	stw	r4,100(r16)
   13978:	81000517 	ldw	r4,20(r16)
   1397c:	1885c83a 	sub	r2,r3,r2
   13980:	113fd716 	blt	r2,r4,138e0 <__swbuf_r+0x68>
   13984:	800b883a 	mov	r5,r16
   13988:	9809883a 	mov	r4,r19
   1398c:	000edf40 	call	edf4 <_fflush_r>
   13990:	1000091e 	bne	r2,zero,139b8 <__swbuf_r+0x140>
   13994:	80c00017 	ldw	r3,0(r16)
   13998:	00800044 	movi	r2,1
   1399c:	003fd106 	br	138e4 <__swbuf_r+0x6c>
   139a0:	000f23c0 	call	f23c <__sinit>
   139a4:	003fc006 	br	138a8 <__swbuf_r+0x30>
   139a8:	800b883a 	mov	r5,r16
   139ac:	9809883a 	mov	r4,r19
   139b0:	000edf40 	call	edf4 <_fflush_r>
   139b4:	103fd826 	beq	r2,zero,13918 <__swbuf_r+0xa0>
   139b8:	04bfffc4 	movi	r18,-1
   139bc:	003fd606 	br	13918 <__swbuf_r+0xa0>

000139c0 <__swbuf>:
   139c0:	00c000b4 	movhi	r3,2
   139c4:	2005883a 	mov	r2,r4
   139c8:	19288b17 	ldw	r4,-24020(r3)
   139cc:	280d883a 	mov	r6,r5
   139d0:	100b883a 	mov	r5,r2
   139d4:	00138781 	jmpi	13878 <__swbuf_r>

000139d8 <_wcrtomb_r>:
   139d8:	defffa04 	addi	sp,sp,-24
   139dc:	dc400415 	stw	r17,16(sp)
   139e0:	dc000315 	stw	r16,12(sp)
   139e4:	008000b4 	movhi	r2,2
   139e8:	dfc00515 	stw	ra,20(sp)
   139ec:	10a3b717 	ldw	r2,-28964(r2)
   139f0:	2023883a 	mov	r17,r4
   139f4:	3821883a 	mov	r16,r7
   139f8:	28000826 	beq	r5,zero,13a1c <_wcrtomb_r+0x44>
   139fc:	103ee83a 	callr	r2
   13a00:	10ffffd8 	cmpnei	r3,r2,-1
   13a04:	18000a26 	beq	r3,zero,13a30 <_wcrtomb_r+0x58>
   13a08:	dfc00517 	ldw	ra,20(sp)
   13a0c:	dc400417 	ldw	r17,16(sp)
   13a10:	dc000317 	ldw	r16,12(sp)
   13a14:	dec00604 	addi	sp,sp,24
   13a18:	f800283a 	ret
   13a1c:	000d883a 	mov	r6,zero
   13a20:	d9400084 	addi	r5,sp,2
   13a24:	103ee83a 	callr	r2
   13a28:	10ffffd8 	cmpnei	r3,r2,-1
   13a2c:	183ff61e 	bne	r3,zero,13a08 <_wcrtomb_r+0x30>
   13a30:	00802284 	movi	r2,138
   13a34:	80000015 	stw	zero,0(r16)
   13a38:	88800015 	stw	r2,0(r17)
   13a3c:	00bfffc4 	movi	r2,-1
   13a40:	003ff106 	br	13a08 <_wcrtomb_r+0x30>

00013a44 <wcrtomb>:
   13a44:	defffa04 	addi	sp,sp,-24
   13a48:	00c000b4 	movhi	r3,2
   13a4c:	dc400415 	stw	r17,16(sp)
   13a50:	dc000315 	stw	r16,12(sp)
   13a54:	1c688b17 	ldw	r17,-24020(r3)
   13a58:	dfc00515 	stw	ra,20(sp)
   13a5c:	00c000b4 	movhi	r3,2
   13a60:	18e3b717 	ldw	r3,-28964(r3)
   13a64:	3021883a 	mov	r16,r6
   13a68:	20000c26 	beq	r4,zero,13a9c <wcrtomb+0x58>
   13a6c:	280d883a 	mov	r6,r5
   13a70:	800f883a 	mov	r7,r16
   13a74:	200b883a 	mov	r5,r4
   13a78:	8809883a 	mov	r4,r17
   13a7c:	183ee83a 	callr	r3
   13a80:	10ffffd8 	cmpnei	r3,r2,-1
   13a84:	18000c26 	beq	r3,zero,13ab8 <wcrtomb+0x74>
   13a88:	dfc00517 	ldw	ra,20(sp)
   13a8c:	dc400417 	ldw	r17,16(sp)
   13a90:	dc000317 	ldw	r16,12(sp)
   13a94:	dec00604 	addi	sp,sp,24
   13a98:	f800283a 	ret
   13a9c:	300f883a 	mov	r7,r6
   13aa0:	d9400084 	addi	r5,sp,2
   13aa4:	000d883a 	mov	r6,zero
   13aa8:	8809883a 	mov	r4,r17
   13aac:	183ee83a 	callr	r3
   13ab0:	10ffffd8 	cmpnei	r3,r2,-1
   13ab4:	183ff41e 	bne	r3,zero,13a88 <wcrtomb+0x44>
   13ab8:	00802284 	movi	r2,138
   13abc:	80000015 	stw	zero,0(r16)
   13ac0:	88800015 	stw	r2,0(r17)
   13ac4:	00bfffc4 	movi	r2,-1
   13ac8:	003fef06 	br	13a88 <wcrtomb+0x44>

00013acc <_wctomb_r>:
   13acc:	008000b4 	movhi	r2,2
   13ad0:	10a3b717 	ldw	r2,-28964(r2)
   13ad4:	1000683a 	jmp	r2

00013ad8 <__ascii_wctomb>:
   13ad8:	28000926 	beq	r5,zero,13b00 <__ascii_wctomb+0x28>
   13adc:	30804030 	cmpltui	r2,r6,256
   13ae0:	10000326 	beq	r2,zero,13af0 <__ascii_wctomb+0x18>
   13ae4:	29800005 	stb	r6,0(r5)
   13ae8:	00800044 	movi	r2,1
   13aec:	f800283a 	ret
   13af0:	00802284 	movi	r2,138
   13af4:	20800015 	stw	r2,0(r4)
   13af8:	00bfffc4 	movi	r2,-1
   13afc:	f800283a 	ret
   13b00:	0005883a 	mov	r2,zero
   13b04:	f800283a 	ret

00013b08 <abort>:
   13b08:	deffff04 	addi	sp,sp,-4
   13b0c:	01000184 	movi	r4,6
   13b10:	dfc00015 	stw	ra,0(sp)
   13b14:	0013d940 	call	13d94 <raise>
   13b18:	01000044 	movi	r4,1
   13b1c:	0014e280 	call	14e28 <_exit>

00013b20 <_init_signal_r>:
   13b20:	2080b717 	ldw	r2,732(r4)
   13b24:	10000226 	beq	r2,zero,13b30 <_init_signal_r+0x10>
   13b28:	0005883a 	mov	r2,zero
   13b2c:	f800283a 	ret
   13b30:	defffe04 	addi	sp,sp,-8
   13b34:	01402004 	movi	r5,128
   13b38:	dc000015 	stw	r16,0(sp)
   13b3c:	dfc00115 	stw	ra,4(sp)
   13b40:	2021883a 	mov	r16,r4
   13b44:	000a4f80 	call	a4f8 <_malloc_r>
   13b48:	8080b715 	stw	r2,732(r16)
   13b4c:	1009883a 	mov	r4,r2
   13b50:	10000826 	beq	r2,zero,13b74 <_init_signal_r+0x54>
   13b54:	01802004 	movi	r6,128
   13b58:	000b883a 	mov	r5,zero
   13b5c:	00100d40 	call	100d4 <memset>
   13b60:	0005883a 	mov	r2,zero
   13b64:	dfc00117 	ldw	ra,4(sp)
   13b68:	dc000017 	ldw	r16,0(sp)
   13b6c:	dec00204 	addi	sp,sp,8
   13b70:	f800283a 	ret
   13b74:	00bfffc4 	movi	r2,-1
   13b78:	003ffa06 	br	13b64 <_init_signal_r+0x44>

00013b7c <_signal_r>:
   13b7c:	defffc04 	addi	sp,sp,-16
   13b80:	dc400115 	stw	r17,4(sp)
   13b84:	dfc00315 	stw	ra,12(sp)
   13b88:	dc800215 	stw	r18,8(sp)
   13b8c:	dc000015 	stw	r16,0(sp)
   13b90:	28800830 	cmpltui	r2,r5,32
   13b94:	2023883a 	mov	r17,r4
   13b98:	10000e26 	beq	r2,zero,13bd4 <_signal_r+0x58>
   13b9c:	20c0b717 	ldw	r3,732(r4)
   13ba0:	2821883a 	mov	r16,r5
   13ba4:	3025883a 	mov	r18,r6
   13ba8:	18000e26 	beq	r3,zero,13be4 <_signal_r+0x68>
   13bac:	802090ba 	slli	r16,r16,2
   13bb0:	1c21883a 	add	r16,r3,r16
   13bb4:	80800017 	ldw	r2,0(r16)
   13bb8:	84800015 	stw	r18,0(r16)
   13bbc:	dfc00317 	ldw	ra,12(sp)
   13bc0:	dc800217 	ldw	r18,8(sp)
   13bc4:	dc400117 	ldw	r17,4(sp)
   13bc8:	dc000017 	ldw	r16,0(sp)
   13bcc:	dec00404 	addi	sp,sp,16
   13bd0:	f800283a 	ret
   13bd4:	00800584 	movi	r2,22
   13bd8:	20800015 	stw	r2,0(r4)
   13bdc:	00bfffc4 	movi	r2,-1
   13be0:	003ff606 	br	13bbc <_signal_r+0x40>
   13be4:	01402004 	movi	r5,128
   13be8:	000a4f80 	call	a4f8 <_malloc_r>
   13bec:	8880b715 	stw	r2,732(r17)
   13bf0:	10000626 	beq	r2,zero,13c0c <_signal_r+0x90>
   13bf4:	01802004 	movi	r6,128
   13bf8:	000b883a 	mov	r5,zero
   13bfc:	1009883a 	mov	r4,r2
   13c00:	00100d40 	call	100d4 <memset>
   13c04:	1007883a 	mov	r3,r2
   13c08:	003fe806 	br	13bac <_signal_r+0x30>
   13c0c:	00bfffc4 	movi	r2,-1
   13c10:	003fea06 	br	13bbc <_signal_r+0x40>

00013c14 <_raise_r>:
   13c14:	28800830 	cmpltui	r2,r5,32
   13c18:	10002b26 	beq	r2,zero,13cc8 <_raise_r+0xb4>
   13c1c:	2080b717 	ldw	r2,732(r4)
   13c20:	defffd04 	addi	sp,sp,-12
   13c24:	dc000115 	stw	r16,4(sp)
   13c28:	dfc00215 	stw	ra,8(sp)
   13c2c:	2821883a 	mov	r16,r5
   13c30:	10001026 	beq	r2,zero,13c74 <_raise_r+0x60>
   13c34:	280690ba 	slli	r3,r5,2
   13c38:	10c5883a 	add	r2,r2,r3
   13c3c:	10c00017 	ldw	r3,0(r2)
   13c40:	18000c26 	beq	r3,zero,13c74 <_raise_r+0x60>
   13c44:	19400060 	cmpeqi	r5,r3,1
   13c48:	28001a1e 	bne	r5,zero,13cb4 <_raise_r+0xa0>
   13c4c:	197fffd8 	cmpnei	r5,r3,-1
   13c50:	28001126 	beq	r5,zero,13c98 <_raise_r+0x84>
   13c54:	10000015 	stw	zero,0(r2)
   13c58:	8009883a 	mov	r4,r16
   13c5c:	183ee83a 	callr	r3
   13c60:	0005883a 	mov	r2,zero
   13c64:	dfc00217 	ldw	ra,8(sp)
   13c68:	dc000117 	ldw	r16,4(sp)
   13c6c:	dec00304 	addi	sp,sp,12
   13c70:	f800283a 	ret
   13c74:	d9000015 	stw	r4,0(sp)
   13c78:	001406c0 	call	1406c <_getpid_r>
   13c7c:	d9000017 	ldw	r4,0(sp)
   13c80:	800d883a 	mov	r6,r16
   13c84:	100b883a 	mov	r5,r2
   13c88:	dfc00217 	ldw	ra,8(sp)
   13c8c:	dc000117 	ldw	r16,4(sp)
   13c90:	dec00304 	addi	sp,sp,12
   13c94:	001400c1 	jmpi	1400c <_kill_r>
   13c98:	00800584 	movi	r2,22
   13c9c:	20800015 	stw	r2,0(r4)
   13ca0:	00800044 	movi	r2,1
   13ca4:	dfc00217 	ldw	ra,8(sp)
   13ca8:	dc000117 	ldw	r16,4(sp)
   13cac:	dec00304 	addi	sp,sp,12
   13cb0:	f800283a 	ret
   13cb4:	0005883a 	mov	r2,zero
   13cb8:	dfc00217 	ldw	ra,8(sp)
   13cbc:	dc000117 	ldw	r16,4(sp)
   13cc0:	dec00304 	addi	sp,sp,12
   13cc4:	f800283a 	ret
   13cc8:	00800584 	movi	r2,22
   13ccc:	20800015 	stw	r2,0(r4)
   13cd0:	00bfffc4 	movi	r2,-1
   13cd4:	f800283a 	ret

00013cd8 <__sigtramp_r>:
   13cd8:	28800830 	cmpltui	r2,r5,32
   13cdc:	10002b26 	beq	r2,zero,13d8c <__sigtramp_r+0xb4>
   13ce0:	20c0b717 	ldw	r3,732(r4)
   13ce4:	defffd04 	addi	sp,sp,-12
   13ce8:	dc400115 	stw	r17,4(sp)
   13cec:	dc000015 	stw	r16,0(sp)
   13cf0:	dfc00215 	stw	ra,8(sp)
   13cf4:	2821883a 	mov	r16,r5
   13cf8:	2023883a 	mov	r17,r4
   13cfc:	18001326 	beq	r3,zero,13d4c <__sigtramp_r+0x74>
   13d00:	800490ba 	slli	r2,r16,2
   13d04:	1887883a 	add	r3,r3,r2
   13d08:	18800017 	ldw	r2,0(r3)
   13d0c:	10000d26 	beq	r2,zero,13d44 <__sigtramp_r+0x6c>
   13d10:	113fffe0 	cmpeqi	r4,r2,-1
   13d14:	2000191e 	bne	r4,zero,13d7c <__sigtramp_r+0xa4>
   13d18:	11000060 	cmpeqi	r4,r2,1
   13d1c:	2000151e 	bne	r4,zero,13d74 <__sigtramp_r+0x9c>
   13d20:	18000015 	stw	zero,0(r3)
   13d24:	8009883a 	mov	r4,r16
   13d28:	103ee83a 	callr	r2
   13d2c:	0005883a 	mov	r2,zero
   13d30:	dfc00217 	ldw	ra,8(sp)
   13d34:	dc400117 	ldw	r17,4(sp)
   13d38:	dc000017 	ldw	r16,0(sp)
   13d3c:	dec00304 	addi	sp,sp,12
   13d40:	f800283a 	ret
   13d44:	00800044 	movi	r2,1
   13d48:	003ff906 	br	13d30 <__sigtramp_r+0x58>
   13d4c:	01402004 	movi	r5,128
   13d50:	000a4f80 	call	a4f8 <_malloc_r>
   13d54:	8880b715 	stw	r2,732(r17)
   13d58:	10000a26 	beq	r2,zero,13d84 <__sigtramp_r+0xac>
   13d5c:	01802004 	movi	r6,128
   13d60:	000b883a 	mov	r5,zero
   13d64:	1009883a 	mov	r4,r2
   13d68:	00100d40 	call	100d4 <memset>
   13d6c:	1007883a 	mov	r3,r2
   13d70:	003fe306 	br	13d00 <__sigtramp_r+0x28>
   13d74:	008000c4 	movi	r2,3
   13d78:	003fed06 	br	13d30 <__sigtramp_r+0x58>
   13d7c:	00800084 	movi	r2,2
   13d80:	003feb06 	br	13d30 <__sigtramp_r+0x58>
   13d84:	00bfffc4 	movi	r2,-1
   13d88:	003fe906 	br	13d30 <__sigtramp_r+0x58>
   13d8c:	00bfffc4 	movi	r2,-1
   13d90:	f800283a 	ret

00013d94 <raise>:
   13d94:	defffd04 	addi	sp,sp,-12
   13d98:	dc400115 	stw	r17,4(sp)
   13d9c:	00c000b4 	movhi	r3,2
   13da0:	dfc00215 	stw	ra,8(sp)
   13da4:	dc000015 	stw	r16,0(sp)
   13da8:	20800830 	cmpltui	r2,r4,32
   13dac:	1c688b17 	ldw	r17,-24020(r3)
   13db0:	10002326 	beq	r2,zero,13e40 <raise+0xac>
   13db4:	8880b717 	ldw	r2,732(r17)
   13db8:	2021883a 	mov	r16,r4
   13dbc:	10001026 	beq	r2,zero,13e00 <raise+0x6c>
   13dc0:	200690ba 	slli	r3,r4,2
   13dc4:	10c5883a 	add	r2,r2,r3
   13dc8:	10c00017 	ldw	r3,0(r2)
   13dcc:	18000c26 	beq	r3,zero,13e00 <raise+0x6c>
   13dd0:	19400060 	cmpeqi	r5,r3,1
   13dd4:	2800181e 	bne	r5,zero,13e38 <raise+0xa4>
   13dd8:	197fffd8 	cmpnei	r5,r3,-1
   13ddc:	28001226 	beq	r5,zero,13e28 <raise+0x94>
   13de0:	10000015 	stw	zero,0(r2)
   13de4:	183ee83a 	callr	r3
   13de8:	0005883a 	mov	r2,zero
   13dec:	dfc00217 	ldw	ra,8(sp)
   13df0:	dc400117 	ldw	r17,4(sp)
   13df4:	dc000017 	ldw	r16,0(sp)
   13df8:	dec00304 	addi	sp,sp,12
   13dfc:	f800283a 	ret
   13e00:	8809883a 	mov	r4,r17
   13e04:	001406c0 	call	1406c <_getpid_r>
   13e08:	800d883a 	mov	r6,r16
   13e0c:	100b883a 	mov	r5,r2
   13e10:	8809883a 	mov	r4,r17
   13e14:	dfc00217 	ldw	ra,8(sp)
   13e18:	dc400117 	ldw	r17,4(sp)
   13e1c:	dc000017 	ldw	r16,0(sp)
   13e20:	dec00304 	addi	sp,sp,12
   13e24:	001400c1 	jmpi	1400c <_kill_r>
   13e28:	00800584 	movi	r2,22
   13e2c:	88800015 	stw	r2,0(r17)
   13e30:	00800044 	movi	r2,1
   13e34:	003fed06 	br	13dec <raise+0x58>
   13e38:	0005883a 	mov	r2,zero
   13e3c:	003feb06 	br	13dec <raise+0x58>
   13e40:	00800584 	movi	r2,22
   13e44:	88800015 	stw	r2,0(r17)
   13e48:	00bfffc4 	movi	r2,-1
   13e4c:	003fe706 	br	13dec <raise+0x58>

00013e50 <signal>:
   13e50:	defffc04 	addi	sp,sp,-16
   13e54:	dc800215 	stw	r18,8(sp)
   13e58:	00c000b4 	movhi	r3,2
   13e5c:	dfc00315 	stw	ra,12(sp)
   13e60:	dc400115 	stw	r17,4(sp)
   13e64:	dc000015 	stw	r16,0(sp)
   13e68:	20800830 	cmpltui	r2,r4,32
   13e6c:	1ca88b17 	ldw	r18,-24020(r3)
   13e70:	10000e26 	beq	r2,zero,13eac <signal+0x5c>
   13e74:	2021883a 	mov	r16,r4
   13e78:	9100b717 	ldw	r4,732(r18)
   13e7c:	2823883a 	mov	r17,r5
   13e80:	20000e26 	beq	r4,zero,13ebc <signal+0x6c>
   13e84:	802090ba 	slli	r16,r16,2
   13e88:	2421883a 	add	r16,r4,r16
   13e8c:	80800017 	ldw	r2,0(r16)
   13e90:	84400015 	stw	r17,0(r16)
   13e94:	dfc00317 	ldw	ra,12(sp)
   13e98:	dc800217 	ldw	r18,8(sp)
   13e9c:	dc400117 	ldw	r17,4(sp)
   13ea0:	dc000017 	ldw	r16,0(sp)
   13ea4:	dec00404 	addi	sp,sp,16
   13ea8:	f800283a 	ret
   13eac:	00800584 	movi	r2,22
   13eb0:	90800015 	stw	r2,0(r18)
   13eb4:	00bfffc4 	movi	r2,-1
   13eb8:	003ff606 	br	13e94 <signal+0x44>
   13ebc:	9009883a 	mov	r4,r18
   13ec0:	01402004 	movi	r5,128
   13ec4:	000a4f80 	call	a4f8 <_malloc_r>
   13ec8:	9080b715 	stw	r2,732(r18)
   13ecc:	1009883a 	mov	r4,r2
   13ed0:	10000526 	beq	r2,zero,13ee8 <signal+0x98>
   13ed4:	01802004 	movi	r6,128
   13ed8:	000b883a 	mov	r5,zero
   13edc:	00100d40 	call	100d4 <memset>
   13ee0:	1009883a 	mov	r4,r2
   13ee4:	003fe706 	br	13e84 <signal+0x34>
   13ee8:	00bfffc4 	movi	r2,-1
   13eec:	003fe906 	br	13e94 <signal+0x44>

00013ef0 <_init_signal>:
   13ef0:	defffe04 	addi	sp,sp,-8
   13ef4:	008000b4 	movhi	r2,2
   13ef8:	dc000015 	stw	r16,0(sp)
   13efc:	14288b17 	ldw	r16,-24020(r2)
   13f00:	dfc00115 	stw	ra,4(sp)
   13f04:	8080b717 	ldw	r2,732(r16)
   13f08:	10000526 	beq	r2,zero,13f20 <_init_signal+0x30>
   13f0c:	0005883a 	mov	r2,zero
   13f10:	dfc00117 	ldw	ra,4(sp)
   13f14:	dc000017 	ldw	r16,0(sp)
   13f18:	dec00204 	addi	sp,sp,8
   13f1c:	f800283a 	ret
   13f20:	8009883a 	mov	r4,r16
   13f24:	01402004 	movi	r5,128
   13f28:	000a4f80 	call	a4f8 <_malloc_r>
   13f2c:	8080b715 	stw	r2,732(r16)
   13f30:	1009883a 	mov	r4,r2
   13f34:	10000426 	beq	r2,zero,13f48 <_init_signal+0x58>
   13f38:	01802004 	movi	r6,128
   13f3c:	000b883a 	mov	r5,zero
   13f40:	00100d40 	call	100d4 <memset>
   13f44:	003ff106 	br	13f0c <_init_signal+0x1c>
   13f48:	00bfffc4 	movi	r2,-1
   13f4c:	003ff006 	br	13f10 <_init_signal+0x20>

00013f50 <__sigtramp>:
   13f50:	defffd04 	addi	sp,sp,-12
   13f54:	dc400115 	stw	r17,4(sp)
   13f58:	00c000b4 	movhi	r3,2
   13f5c:	dfc00215 	stw	ra,8(sp)
   13f60:	dc000015 	stw	r16,0(sp)
   13f64:	20800830 	cmpltui	r2,r4,32
   13f68:	1c688b17 	ldw	r17,-24020(r3)
   13f6c:	10002526 	beq	r2,zero,14004 <__sigtramp+0xb4>
   13f70:	88c0b717 	ldw	r3,732(r17)
   13f74:	2021883a 	mov	r16,r4
   13f78:	18001326 	beq	r3,zero,13fc8 <__sigtramp+0x78>
   13f7c:	800890ba 	slli	r4,r16,2
   13f80:	1907883a 	add	r3,r3,r4
   13f84:	18800017 	ldw	r2,0(r3)
   13f88:	10000d26 	beq	r2,zero,13fc0 <__sigtramp+0x70>
   13f8c:	113fffe0 	cmpeqi	r4,r2,-1
   13f90:	20001a1e 	bne	r4,zero,13ffc <__sigtramp+0xac>
   13f94:	11000060 	cmpeqi	r4,r2,1
   13f98:	2000161e 	bne	r4,zero,13ff4 <__sigtramp+0xa4>
   13f9c:	18000015 	stw	zero,0(r3)
   13fa0:	8009883a 	mov	r4,r16
   13fa4:	103ee83a 	callr	r2
   13fa8:	0005883a 	mov	r2,zero
   13fac:	dfc00217 	ldw	ra,8(sp)
   13fb0:	dc400117 	ldw	r17,4(sp)
   13fb4:	dc000017 	ldw	r16,0(sp)
   13fb8:	dec00304 	addi	sp,sp,12
   13fbc:	f800283a 	ret
   13fc0:	00800044 	movi	r2,1
   13fc4:	003ff906 	br	13fac <__sigtramp+0x5c>
   13fc8:	01402004 	movi	r5,128
   13fcc:	8809883a 	mov	r4,r17
   13fd0:	000a4f80 	call	a4f8 <_malloc_r>
   13fd4:	8880b715 	stw	r2,732(r17)
   13fd8:	10000a26 	beq	r2,zero,14004 <__sigtramp+0xb4>
   13fdc:	01802004 	movi	r6,128
   13fe0:	000b883a 	mov	r5,zero
   13fe4:	1009883a 	mov	r4,r2
   13fe8:	00100d40 	call	100d4 <memset>
   13fec:	1007883a 	mov	r3,r2
   13ff0:	003fe206 	br	13f7c <__sigtramp+0x2c>
   13ff4:	008000c4 	movi	r2,3
   13ff8:	003fec06 	br	13fac <__sigtramp+0x5c>
   13ffc:	00800084 	movi	r2,2
   14000:	003fea06 	br	13fac <__sigtramp+0x5c>
   14004:	00bfffc4 	movi	r2,-1
   14008:	003fe806 	br	13fac <__sigtramp+0x5c>

0001400c <_kill_r>:
   1400c:	2807883a 	mov	r3,r5
   14010:	defffe04 	addi	sp,sp,-8
   14014:	dc000015 	stw	r16,0(sp)
   14018:	008000b4 	movhi	r2,2
   1401c:	300b883a 	mov	r5,r6
   14020:	2021883a 	mov	r16,r4
   14024:	1809883a 	mov	r4,r3
   14028:	dfc00115 	stw	ra,4(sp)
   1402c:	102fbf15 	stw	zero,-16644(r2)
   14030:	00150a00 	call	150a0 <kill>
   14034:	10ffffd8 	cmpnei	r3,r2,-1
   14038:	18000426 	beq	r3,zero,1404c <_kill_r+0x40>
   1403c:	dfc00117 	ldw	ra,4(sp)
   14040:	dc000017 	ldw	r16,0(sp)
   14044:	dec00204 	addi	sp,sp,8
   14048:	f800283a 	ret
   1404c:	00c000b4 	movhi	r3,2
   14050:	18efbf17 	ldw	r3,-16644(r3)
   14054:	183ff926 	beq	r3,zero,1403c <_kill_r+0x30>
   14058:	80c00015 	stw	r3,0(r16)
   1405c:	dfc00117 	ldw	ra,4(sp)
   14060:	dc000017 	ldw	r16,0(sp)
   14064:	dec00204 	addi	sp,sp,8
   14068:	f800283a 	ret

0001406c <_getpid_r>:
   1406c:	0014f581 	jmpi	14f58 <getpid>

00014070 <__udivdi3>:
   14070:	defff504 	addi	sp,sp,-44
   14074:	dd000515 	stw	r20,20(sp)
   14078:	dc800315 	stw	r18,12(sp)
   1407c:	dfc00a15 	stw	ra,40(sp)
   14080:	df000915 	stw	fp,36(sp)
   14084:	ddc00815 	stw	r23,32(sp)
   14088:	dd800715 	stw	r22,28(sp)
   1408c:	dd400615 	stw	r21,24(sp)
   14090:	dcc00415 	stw	r19,16(sp)
   14094:	dc400215 	stw	r17,8(sp)
   14098:	dc000115 	stw	r16,4(sp)
   1409c:	2029883a 	mov	r20,r4
   140a0:	2825883a 	mov	r18,r5
   140a4:	3800461e 	bne	r7,zero,141c0 <__udivdi3+0x150>
   140a8:	3823883a 	mov	r17,r7
   140ac:	3021883a 	mov	r16,r6
   140b0:	2027883a 	mov	r19,r4
   140b4:	2980622e 	bgeu	r5,r6,14240 <__udivdi3+0x1d0>
   140b8:	00bfffd4 	movui	r2,65535
   140bc:	282b883a 	mov	r21,r5
   140c0:	1180aa2e 	bgeu	r2,r6,1436c <__udivdi3+0x2fc>
   140c4:	00804034 	movhi	r2,256
   140c8:	30815a36 	bltu	r6,r2,14634 <__udivdi3+0x5c4>
   140cc:	3006d63a 	srli	r3,r6,24
   140d0:	04400604 	movi	r17,24
   140d4:	00800074 	movhi	r2,1
   140d8:	1885883a 	add	r2,r3,r2
   140dc:	109fcb03 	ldbu	r2,32556(r2)
   140e0:	00c00804 	movi	r3,32
   140e4:	1463883a 	add	r17,r2,r17
   140e8:	1c45c83a 	sub	r2,r3,r17
   140ec:	1c400526 	beq	r3,r17,14104 <__udivdi3+0x94>
   140f0:	9086983a 	sll	r3,r18,r2
   140f4:	a462d83a 	srl	r17,r20,r17
   140f8:	30a0983a 	sll	r16,r6,r2
   140fc:	a0a6983a 	sll	r19,r20,r2
   14100:	88eab03a 	or	r21,r17,r3
   14104:	802cd43a 	srli	r22,r16,16
   14108:	a809883a 	mov	r4,r21
   1410c:	853fffcc 	andi	r20,r16,65535
   14110:	b00b883a 	mov	r5,r22
   14114:	000795c0 	call	795c <__umodsi3>
   14118:	a809883a 	mov	r4,r21
   1411c:	b00b883a 	mov	r5,r22
   14120:	1025883a 	mov	r18,r2
   14124:	00078f80 	call	78f8 <__udivsi3>
   14128:	a009883a 	mov	r4,r20
   1412c:	100b883a 	mov	r5,r2
   14130:	102b883a 	mov	r21,r2
   14134:	00079b80 	call	79b8 <__mulsi3>
   14138:	9024943a 	slli	r18,r18,16
   1413c:	9808d43a 	srli	r4,r19,16
   14140:	9108b03a 	or	r4,r18,r4
   14144:	2080052e 	bgeu	r4,r2,1415c <__udivdi3+0xec>
   14148:	2409883a 	add	r4,r4,r16
   1414c:	a8ffffc4 	addi	r3,r21,-1
   14150:	24000136 	bltu	r4,r16,14158 <__udivdi3+0xe8>
   14154:	20814836 	bltu	r4,r2,14678 <__udivdi3+0x608>
   14158:	182b883a 	mov	r21,r3
   1415c:	20a3c83a 	sub	r17,r4,r2
   14160:	8809883a 	mov	r4,r17
   14164:	b00b883a 	mov	r5,r22
   14168:	000795c0 	call	795c <__umodsi3>
   1416c:	8809883a 	mov	r4,r17
   14170:	1023883a 	mov	r17,r2
   14174:	b00b883a 	mov	r5,r22
   14178:	8822943a 	slli	r17,r17,16
   1417c:	00078f80 	call	78f8 <__udivsi3>
   14180:	100b883a 	mov	r5,r2
   14184:	a009883a 	mov	r4,r20
   14188:	9cffffcc 	andi	r19,r19,65535
   1418c:	1025883a 	mov	r18,r2
   14190:	8ce6b03a 	or	r19,r17,r19
   14194:	00079b80 	call	79b8 <__mulsi3>
   14198:	9880052e 	bgeu	r19,r2,141b0 <__udivdi3+0x140>
   1419c:	84e7883a 	add	r19,r16,r19
   141a0:	90ffffc4 	addi	r3,r18,-1
   141a4:	9c000136 	bltu	r19,r16,141ac <__udivdi3+0x13c>
   141a8:	98813136 	bltu	r19,r2,14670 <__udivdi3+0x600>
   141ac:	1825883a 	mov	r18,r3
   141b0:	a80c943a 	slli	r6,r21,16
   141b4:	0007883a 	mov	r3,zero
   141b8:	3484b03a 	or	r2,r6,r18
   141bc:	00000306 	br	141cc <__udivdi3+0x15c>
   141c0:	29c00e2e 	bgeu	r5,r7,141fc <__udivdi3+0x18c>
   141c4:	0007883a 	mov	r3,zero
   141c8:	0005883a 	mov	r2,zero
   141cc:	dfc00a17 	ldw	ra,40(sp)
   141d0:	df000917 	ldw	fp,36(sp)
   141d4:	ddc00817 	ldw	r23,32(sp)
   141d8:	dd800717 	ldw	r22,28(sp)
   141dc:	dd400617 	ldw	r21,24(sp)
   141e0:	dd000517 	ldw	r20,20(sp)
   141e4:	dcc00417 	ldw	r19,16(sp)
   141e8:	dc800317 	ldw	r18,12(sp)
   141ec:	dc400217 	ldw	r17,8(sp)
   141f0:	dc000117 	ldw	r16,4(sp)
   141f4:	dec00b04 	addi	sp,sp,44
   141f8:	f800283a 	ret
   141fc:	00bfffd4 	movui	r2,65535
   14200:	11c05f2e 	bgeu	r2,r7,14380 <__udivdi3+0x310>
   14204:	00804034 	movhi	r2,256
   14208:	3880fc36 	bltu	r7,r2,145fc <__udivdi3+0x58c>
   1420c:	3804d63a 	srli	r2,r7,24
   14210:	01000604 	movi	r4,24
   14214:	00c00074 	movhi	r3,1
   14218:	10c7883a 	add	r3,r2,r3
   1421c:	189fcb03 	ldbu	r2,32556(r3)
   14220:	00c00804 	movi	r3,32
   14224:	1105883a 	add	r2,r2,r4
   14228:	18a3c83a 	sub	r17,r3,r2
   1422c:	1880901e 	bne	r3,r2,14470 <__udivdi3+0x400>
   14230:	3c80f736 	bltu	r7,r18,14610 <__udivdi3+0x5a0>
   14234:	a185403a 	cmpgeu	r2,r20,r6
   14238:	0007883a 	mov	r3,zero
   1423c:	003fe306 	br	141cc <__udivdi3+0x15c>
   14240:	3000041e 	bne	r6,zero,14254 <__udivdi3+0x1e4>
   14244:	000b883a 	mov	r5,zero
   14248:	01000044 	movi	r4,1
   1424c:	00078f80 	call	78f8 <__udivsi3>
   14250:	1021883a 	mov	r16,r2
   14254:	00bfffd4 	movui	r2,65535
   14258:	14003f2e 	bgeu	r2,r16,14358 <__udivdi3+0x2e8>
   1425c:	00804034 	movhi	r2,256
   14260:	8080f136 	bltu	r16,r2,14628 <__udivdi3+0x5b8>
   14264:	8006d63a 	srli	r3,r16,24
   14268:	04400604 	movi	r17,24
   1426c:	00800074 	movhi	r2,1
   14270:	1885883a 	add	r2,r3,r2
   14274:	109fcb03 	ldbu	r2,32556(r2)
   14278:	00c00804 	movi	r3,32
   1427c:	1463883a 	add	r17,r2,r17
   14280:	1c45c83a 	sub	r2,r3,r17
   14284:	1c40431e 	bne	r3,r17,14394 <__udivdi3+0x324>
   14288:	802cd43a 	srli	r22,r16,16
   1428c:	9423c83a 	sub	r17,r18,r16
   14290:	853fffcc 	andi	r20,r16,65535
   14294:	00c00044 	movi	r3,1
   14298:	b00b883a 	mov	r5,r22
   1429c:	8809883a 	mov	r4,r17
   142a0:	d8c00015 	stw	r3,0(sp)
   142a4:	000795c0 	call	795c <__umodsi3>
   142a8:	b00b883a 	mov	r5,r22
   142ac:	8809883a 	mov	r4,r17
   142b0:	1025883a 	mov	r18,r2
   142b4:	00078f80 	call	78f8 <__udivsi3>
   142b8:	1009883a 	mov	r4,r2
   142bc:	a00b883a 	mov	r5,r20
   142c0:	102b883a 	mov	r21,r2
   142c4:	00079b80 	call	79b8 <__mulsi3>
   142c8:	9024943a 	slli	r18,r18,16
   142cc:	9808d43a 	srli	r4,r19,16
   142d0:	d8c00017 	ldw	r3,0(sp)
   142d4:	9108b03a 	or	r4,r18,r4
   142d8:	2080052e 	bgeu	r4,r2,142f0 <__udivdi3+0x280>
   142dc:	2409883a 	add	r4,r4,r16
   142e0:	a97fffc4 	addi	r5,r21,-1
   142e4:	24000136 	bltu	r4,r16,142ec <__udivdi3+0x27c>
   142e8:	2080e636 	bltu	r4,r2,14684 <__udivdi3+0x614>
   142ec:	282b883a 	mov	r21,r5
   142f0:	20a3c83a 	sub	r17,r4,r2
   142f4:	8809883a 	mov	r4,r17
   142f8:	b00b883a 	mov	r5,r22
   142fc:	d8c00015 	stw	r3,0(sp)
   14300:	000795c0 	call	795c <__umodsi3>
   14304:	8809883a 	mov	r4,r17
   14308:	1023883a 	mov	r17,r2
   1430c:	b00b883a 	mov	r5,r22
   14310:	8822943a 	slli	r17,r17,16
   14314:	00078f80 	call	78f8 <__udivsi3>
   14318:	a00b883a 	mov	r5,r20
   1431c:	1009883a 	mov	r4,r2
   14320:	9cffffcc 	andi	r19,r19,65535
   14324:	1025883a 	mov	r18,r2
   14328:	8ce6b03a 	or	r19,r17,r19
   1432c:	00079b80 	call	79b8 <__mulsi3>
   14330:	d8c00017 	ldw	r3,0(sp)
   14334:	9880052e 	bgeu	r19,r2,1434c <__udivdi3+0x2dc>
   14338:	84e7883a 	add	r19,r16,r19
   1433c:	913fffc4 	addi	r4,r18,-1
   14340:	9c000136 	bltu	r19,r16,14348 <__udivdi3+0x2d8>
   14344:	9880c836 	bltu	r19,r2,14668 <__udivdi3+0x5f8>
   14348:	2025883a 	mov	r18,r4
   1434c:	a80c943a 	slli	r6,r21,16
   14350:	3484b03a 	or	r2,r6,r18
   14354:	003f9d06 	br	141cc <__udivdi3+0x15c>
   14358:	80804030 	cmpltui	r2,r16,256
   1435c:	1000b81e 	bne	r2,zero,14640 <__udivdi3+0x5d0>
   14360:	8006d23a 	srli	r3,r16,8
   14364:	04400204 	movi	r17,8
   14368:	003fc006 	br	1426c <__udivdi3+0x1fc>
   1436c:	30804030 	cmpltui	r2,r6,256
   14370:	1000a51e 	bne	r2,zero,14608 <__udivdi3+0x598>
   14374:	3006d23a 	srli	r3,r6,8
   14378:	04400204 	movi	r17,8
   1437c:	003f5506 	br	140d4 <__udivdi3+0x64>
   14380:	38804030 	cmpltui	r2,r7,256
   14384:	1000a51e 	bne	r2,zero,1461c <__udivdi3+0x5ac>
   14388:	3804d23a 	srli	r2,r7,8
   1438c:	01000204 	movi	r4,8
   14390:	003fa006 	br	14214 <__udivdi3+0x1a4>
   14394:	80a0983a 	sll	r16,r16,r2
   14398:	946ed83a 	srl	r23,r18,r17
   1439c:	9086983a 	sll	r3,r18,r2
   143a0:	802cd43a 	srli	r22,r16,16
   143a4:	a462d83a 	srl	r17,r20,r17
   143a8:	b809883a 	mov	r4,r23
   143ac:	b00b883a 	mov	r5,r22
   143b0:	88eab03a 	or	r21,r17,r3
   143b4:	a0a6983a 	sll	r19,r20,r2
   143b8:	000795c0 	call	795c <__umodsi3>
   143bc:	b809883a 	mov	r4,r23
   143c0:	b00b883a 	mov	r5,r22
   143c4:	1025883a 	mov	r18,r2
   143c8:	853fffcc 	andi	r20,r16,65535
   143cc:	00078f80 	call	78f8 <__udivsi3>
   143d0:	a009883a 	mov	r4,r20
   143d4:	100b883a 	mov	r5,r2
   143d8:	102f883a 	mov	r23,r2
   143dc:	00079b80 	call	79b8 <__mulsi3>
   143e0:	9024943a 	slli	r18,r18,16
   143e4:	a808d43a 	srli	r4,r21,16
   143e8:	9108b03a 	or	r4,r18,r4
   143ec:	2080062e 	bgeu	r4,r2,14408 <__udivdi3+0x398>
   143f0:	2409883a 	add	r4,r4,r16
   143f4:	b8ffffc4 	addi	r3,r23,-1
   143f8:	24009936 	bltu	r4,r16,14660 <__udivdi3+0x5f0>
   143fc:	2080982e 	bgeu	r4,r2,14660 <__udivdi3+0x5f0>
   14400:	bdffff84 	addi	r23,r23,-2
   14404:	2409883a 	add	r4,r4,r16
   14408:	20a3c83a 	sub	r17,r4,r2
   1440c:	8809883a 	mov	r4,r17
   14410:	b00b883a 	mov	r5,r22
   14414:	000795c0 	call	795c <__umodsi3>
   14418:	1025883a 	mov	r18,r2
   1441c:	8809883a 	mov	r4,r17
   14420:	b00b883a 	mov	r5,r22
   14424:	9024943a 	slli	r18,r18,16
   14428:	00078f80 	call	78f8 <__udivsi3>
   1442c:	100b883a 	mov	r5,r2
   14430:	a009883a 	mov	r4,r20
   14434:	ac7fffcc 	andi	r17,r21,65535
   14438:	1039883a 	mov	fp,r2
   1443c:	9462b03a 	or	r17,r18,r17
   14440:	00079b80 	call	79b8 <__mulsi3>
   14444:	8880062e 	bgeu	r17,r2,14460 <__udivdi3+0x3f0>
   14448:	8c23883a 	add	r17,r17,r16
   1444c:	e0ffffc4 	addi	r3,fp,-1
   14450:	8c007f36 	bltu	r17,r16,14650 <__udivdi3+0x5e0>
   14454:	88807e2e 	bgeu	r17,r2,14650 <__udivdi3+0x5e0>
   14458:	e73fff84 	addi	fp,fp,-2
   1445c:	8c23883a 	add	r17,r17,r16
   14460:	b806943a 	slli	r3,r23,16
   14464:	88a3c83a 	sub	r17,r17,r2
   14468:	1f06b03a 	or	r3,r3,fp
   1446c:	003f8a06 	br	14298 <__udivdi3+0x228>
   14470:	30a6d83a 	srl	r19,r6,r2
   14474:	3c4e983a 	sll	r7,r7,r17
   14478:	90a0d83a 	srl	r16,r18,r2
   1447c:	9446983a 	sll	r3,r18,r17
   14480:	99e6b03a 	or	r19,r19,r7
   14484:	a084d83a 	srl	r2,r20,r2
   14488:	9838d43a 	srli	fp,r19,16
   1448c:	8009883a 	mov	r4,r16
   14490:	10eab03a 	or	r21,r2,r3
   14494:	e00b883a 	mov	r5,fp
   14498:	346c983a 	sll	r22,r6,r17
   1449c:	dd400015 	stw	r21,0(sp)
   144a0:	000795c0 	call	795c <__umodsi3>
   144a4:	8009883a 	mov	r4,r16
   144a8:	e00b883a 	mov	r5,fp
   144ac:	102f883a 	mov	r23,r2
   144b0:	9cbfffcc 	andi	r18,r19,65535
   144b4:	00078f80 	call	78f8 <__udivsi3>
   144b8:	9009883a 	mov	r4,r18
   144bc:	100b883a 	mov	r5,r2
   144c0:	1021883a 	mov	r16,r2
   144c4:	00079b80 	call	79b8 <__mulsi3>
   144c8:	b82e943a 	slli	r23,r23,16
   144cc:	a808d43a 	srli	r4,r21,16
   144d0:	b908b03a 	or	r4,r23,r4
   144d4:	2080062e 	bgeu	r4,r2,144f0 <__udivdi3+0x480>
   144d8:	24c9883a 	add	r4,r4,r19
   144dc:	817fffc4 	addi	r5,r16,-1
   144e0:	24c05d36 	bltu	r4,r19,14658 <__udivdi3+0x5e8>
   144e4:	20805c2e 	bgeu	r4,r2,14658 <__udivdi3+0x5e8>
   144e8:	843fff84 	addi	r16,r16,-2
   144ec:	24c9883a 	add	r4,r4,r19
   144f0:	20abc83a 	sub	r21,r4,r2
   144f4:	a809883a 	mov	r4,r21
   144f8:	e00b883a 	mov	r5,fp
   144fc:	000795c0 	call	795c <__umodsi3>
   14500:	a809883a 	mov	r4,r21
   14504:	e00b883a 	mov	r5,fp
   14508:	102b883a 	mov	r21,r2
   1450c:	00078f80 	call	78f8 <__udivsi3>
   14510:	9009883a 	mov	r4,r18
   14514:	100b883a 	mov	r5,r2
   14518:	102f883a 	mov	r23,r2
   1451c:	00079b80 	call	79b8 <__mulsi3>
   14520:	d8c00017 	ldw	r3,0(sp)
   14524:	a82a943a 	slli	r21,r21,16
   14528:	100d883a 	mov	r6,r2
   1452c:	1cbfffcc 	andi	r18,r3,65535
   14530:	aca4b03a 	or	r18,r21,r18
   14534:	9080062e 	bgeu	r18,r2,14550 <__udivdi3+0x4e0>
   14538:	94e5883a 	add	r18,r18,r19
   1453c:	b8bfffc4 	addi	r2,r23,-1
   14540:	94c04136 	bltu	r18,r19,14648 <__udivdi3+0x5d8>
   14544:	9180402e 	bgeu	r18,r6,14648 <__udivdi3+0x5d8>
   14548:	bdffff84 	addi	r23,r23,-2
   1454c:	94e5883a 	add	r18,r18,r19
   14550:	8004943a 	slli	r2,r16,16
   14554:	bd7fffcc 	andi	r21,r23,65535
   14558:	b73fffcc 	andi	fp,r22,65535
   1455c:	15e0b03a 	or	r16,r2,r23
   14560:	8026d43a 	srli	r19,r16,16
   14564:	a809883a 	mov	r4,r21
   14568:	e00b883a 	mov	r5,fp
   1456c:	91a5c83a 	sub	r18,r18,r6
   14570:	b02cd43a 	srli	r22,r22,16
   14574:	00079b80 	call	79b8 <__mulsi3>
   14578:	9809883a 	mov	r4,r19
   1457c:	e00b883a 	mov	r5,fp
   14580:	102f883a 	mov	r23,r2
   14584:	00079b80 	call	79b8 <__mulsi3>
   14588:	9809883a 	mov	r4,r19
   1458c:	b00b883a 	mov	r5,r22
   14590:	1027883a 	mov	r19,r2
   14594:	00079b80 	call	79b8 <__mulsi3>
   14598:	a809883a 	mov	r4,r21
   1459c:	b00b883a 	mov	r5,r22
   145a0:	102b883a 	mov	r21,r2
   145a4:	00079b80 	call	79b8 <__mulsi3>
   145a8:	b806d43a 	srli	r3,r23,16
   145ac:	14c5883a 	add	r2,r2,r19
   145b0:	1887883a 	add	r3,r3,r2
   145b4:	1cc0022e 	bgeu	r3,r19,145c0 <__udivdi3+0x550>
   145b8:	00800074 	movhi	r2,1
   145bc:	a8ab883a 	add	r21,r21,r2
   145c0:	1804d43a 	srli	r2,r3,16
   145c4:	156b883a 	add	r21,r2,r21
   145c8:	95400936 	bltu	r18,r21,145f0 <__udivdi3+0x580>
   145cc:	95400326 	beq	r18,r21,145dc <__udivdi3+0x56c>
   145d0:	8005883a 	mov	r2,r16
   145d4:	0007883a 	mov	r3,zero
   145d8:	003efc06 	br	141cc <__udivdi3+0x15c>
   145dc:	1806943a 	slli	r3,r3,16
   145e0:	a44c983a 	sll	r6,r20,r17
   145e4:	bdffffcc 	andi	r23,r23,65535
   145e8:	1dc7883a 	add	r3,r3,r23
   145ec:	30fff82e 	bgeu	r6,r3,145d0 <__udivdi3+0x560>
   145f0:	80bfffc4 	addi	r2,r16,-1
   145f4:	0007883a 	mov	r3,zero
   145f8:	003ef406 	br	141cc <__udivdi3+0x15c>
   145fc:	3804d43a 	srli	r2,r7,16
   14600:	01000404 	movi	r4,16
   14604:	003f0306 	br	14214 <__udivdi3+0x1a4>
   14608:	3007883a 	mov	r3,r6
   1460c:	003eb106 	br	140d4 <__udivdi3+0x64>
   14610:	0007883a 	mov	r3,zero
   14614:	00800044 	movi	r2,1
   14618:	003eec06 	br	141cc <__udivdi3+0x15c>
   1461c:	3805883a 	mov	r2,r7
   14620:	0009883a 	mov	r4,zero
   14624:	003efb06 	br	14214 <__udivdi3+0x1a4>
   14628:	8006d43a 	srli	r3,r16,16
   1462c:	04400404 	movi	r17,16
   14630:	003f0e06 	br	1426c <__udivdi3+0x1fc>
   14634:	3006d43a 	srli	r3,r6,16
   14638:	04400404 	movi	r17,16
   1463c:	003ea506 	br	140d4 <__udivdi3+0x64>
   14640:	8007883a 	mov	r3,r16
   14644:	003f0906 	br	1426c <__udivdi3+0x1fc>
   14648:	102f883a 	mov	r23,r2
   1464c:	003fc006 	br	14550 <__udivdi3+0x4e0>
   14650:	1839883a 	mov	fp,r3
   14654:	003f8206 	br	14460 <__udivdi3+0x3f0>
   14658:	2821883a 	mov	r16,r5
   1465c:	003fa406 	br	144f0 <__udivdi3+0x480>
   14660:	182f883a 	mov	r23,r3
   14664:	003f6806 	br	14408 <__udivdi3+0x398>
   14668:	94bfff84 	addi	r18,r18,-2
   1466c:	003f3706 	br	1434c <__udivdi3+0x2dc>
   14670:	94bfff84 	addi	r18,r18,-2
   14674:	003ece06 	br	141b0 <__udivdi3+0x140>
   14678:	ad7fff84 	addi	r21,r21,-2
   1467c:	2409883a 	add	r4,r4,r16
   14680:	003eb606 	br	1415c <__udivdi3+0xec>
   14684:	ad7fff84 	addi	r21,r21,-2
   14688:	2409883a 	add	r4,r4,r16
   1468c:	003f1806 	br	142f0 <__udivdi3+0x280>

00014690 <__umoddi3>:
   14690:	defff304 	addi	sp,sp,-52
   14694:	dc400415 	stw	r17,16(sp)
   14698:	dc000315 	stw	r16,12(sp)
   1469c:	dfc00c15 	stw	ra,48(sp)
   146a0:	df000b15 	stw	fp,44(sp)
   146a4:	ddc00a15 	stw	r23,40(sp)
   146a8:	dd800915 	stw	r22,36(sp)
   146ac:	dd400815 	stw	r21,32(sp)
   146b0:	dd000715 	stw	r20,28(sp)
   146b4:	dcc00615 	stw	r19,24(sp)
   146b8:	dc800515 	stw	r18,20(sp)
   146bc:	2823883a 	mov	r17,r5
   146c0:	2021883a 	mov	r16,r4
   146c4:	38003b1e 	bne	r7,zero,147b4 <__umoddi3+0x124>
   146c8:	3825883a 	mov	r18,r7
   146cc:	3029883a 	mov	r20,r6
   146d0:	2027883a 	mov	r19,r4
   146d4:	29805b2e 	bgeu	r5,r6,14844 <__umoddi3+0x1b4>
   146d8:	00bfffd4 	movui	r2,65535
   146dc:	282d883a 	mov	r22,r5
   146e0:	11809a2e 	bgeu	r2,r6,1494c <__umoddi3+0x2bc>
   146e4:	00804034 	movhi	r2,256
   146e8:	30814436 	bltu	r6,r2,14bfc <__umoddi3+0x56c>
   146ec:	3006d63a 	srli	r3,r6,24
   146f0:	04800604 	movi	r18,24
   146f4:	00800074 	movhi	r2,1
   146f8:	1885883a 	add	r2,r3,r2
   146fc:	109fcb03 	ldbu	r2,32556(r2)
   14700:	00c00804 	movi	r3,32
   14704:	1485883a 	add	r2,r2,r18
   14708:	18a5c83a 	sub	r18,r3,r2
   1470c:	18800526 	beq	r3,r2,14724 <__umoddi3+0x94>
   14710:	8ca2983a 	sll	r17,r17,r18
   14714:	8084d83a 	srl	r2,r16,r2
   14718:	34a8983a 	sll	r20,r6,r18
   1471c:	84a6983a 	sll	r19,r16,r18
   14720:	146cb03a 	or	r22,r2,r17
   14724:	a02ed43a 	srli	r23,r20,16
   14728:	b009883a 	mov	r4,r22
   1472c:	a57fffcc 	andi	r21,r20,65535
   14730:	b80b883a 	mov	r5,r23
   14734:	000795c0 	call	795c <__umodsi3>
   14738:	b80b883a 	mov	r5,r23
   1473c:	b009883a 	mov	r4,r22
   14740:	1023883a 	mov	r17,r2
   14744:	00078f80 	call	78f8 <__udivsi3>
   14748:	a809883a 	mov	r4,r21
   1474c:	100b883a 	mov	r5,r2
   14750:	00079b80 	call	79b8 <__mulsi3>
   14754:	8822943a 	slli	r17,r17,16
   14758:	9808d43a 	srli	r4,r19,16
   1475c:	8908b03a 	or	r4,r17,r4
   14760:	2080042e 	bgeu	r4,r2,14774 <__umoddi3+0xe4>
   14764:	2509883a 	add	r4,r4,r20
   14768:	25000236 	bltu	r4,r20,14774 <__umoddi3+0xe4>
   1476c:	2080012e 	bgeu	r4,r2,14774 <__umoddi3+0xe4>
   14770:	2509883a 	add	r4,r4,r20
   14774:	20a1c83a 	sub	r16,r4,r2
   14778:	b80b883a 	mov	r5,r23
   1477c:	8009883a 	mov	r4,r16
   14780:	000795c0 	call	795c <__umodsi3>
   14784:	b80b883a 	mov	r5,r23
   14788:	8009883a 	mov	r4,r16
   1478c:	1023883a 	mov	r17,r2
   14790:	00078f80 	call	78f8 <__udivsi3>
   14794:	8822943a 	slli	r17,r17,16
   14798:	100b883a 	mov	r5,r2
   1479c:	a809883a 	mov	r4,r21
   147a0:	00079b80 	call	79b8 <__mulsi3>
   147a4:	98ffffcc 	andi	r3,r19,65535
   147a8:	88c6b03a 	or	r3,r17,r3
   147ac:	18805e2e 	bgeu	r3,r2,14928 <__umoddi3+0x298>
   147b0:	00005906 	br	14918 <__umoddi3+0x288>
   147b4:	2005883a 	mov	r2,r4
   147b8:	29c00d2e 	bgeu	r5,r7,147f0 <__umoddi3+0x160>
   147bc:	2807883a 	mov	r3,r5
   147c0:	dfc00c17 	ldw	ra,48(sp)
   147c4:	df000b17 	ldw	fp,44(sp)
   147c8:	ddc00a17 	ldw	r23,40(sp)
   147cc:	dd800917 	ldw	r22,36(sp)
   147d0:	dd400817 	ldw	r21,32(sp)
   147d4:	dd000717 	ldw	r20,28(sp)
   147d8:	dcc00617 	ldw	r19,24(sp)
   147dc:	dc800517 	ldw	r18,20(sp)
   147e0:	dc400417 	ldw	r17,16(sp)
   147e4:	dc000317 	ldw	r16,12(sp)
   147e8:	dec00d04 	addi	sp,sp,52
   147ec:	f800283a 	ret
   147f0:	013fffd4 	movui	r4,65535
   147f4:	2807883a 	mov	r3,r5
   147f8:	21c0592e 	bgeu	r4,r7,14960 <__umoddi3+0x2d0>
   147fc:	01004034 	movhi	r4,256
   14800:	39010336 	bltu	r7,r4,14c10 <__umoddi3+0x580>
   14804:	3808d63a 	srli	r4,r7,24
   14808:	02000604 	movi	r8,24
   1480c:	01400074 	movhi	r5,1
   14810:	214b883a 	add	r5,r4,r5
   14814:	2d1fcb03 	ldbu	r20,32556(r5)
   14818:	01000804 	movi	r4,32
   1481c:	a229883a 	add	r20,r20,r8
   14820:	252bc83a 	sub	r21,r4,r20
   14824:	2500531e 	bne	r4,r20,14974 <__umoddi3+0x2e4>
   14828:	3c400136 	bltu	r7,r17,14830 <__umoddi3+0x1a0>
   1482c:	81bfe436 	bltu	r16,r6,147c0 <__umoddi3+0x130>
   14830:	8185c83a 	sub	r2,r16,r6
   14834:	89cfc83a 	sub	r7,r17,r7
   14838:	8087803a 	cmpltu	r3,r16,r2
   1483c:	38c7c83a 	sub	r3,r7,r3
   14840:	003fdf06 	br	147c0 <__umoddi3+0x130>
   14844:	3000041e 	bne	r6,zero,14858 <__umoddi3+0x1c8>
   14848:	000b883a 	mov	r5,zero
   1484c:	01000044 	movi	r4,1
   14850:	00078f80 	call	78f8 <__udivsi3>
   14854:	1029883a 	mov	r20,r2
   14858:	00bfffd4 	movui	r2,65535
   1485c:	1500362e 	bgeu	r2,r20,14938 <__umoddi3+0x2a8>
   14860:	00804034 	movhi	r2,256
   14864:	a080ed36 	bltu	r20,r2,14c1c <__umoddi3+0x58c>
   14868:	a006d63a 	srli	r3,r20,24
   1486c:	04800604 	movi	r18,24
   14870:	00800074 	movhi	r2,1
   14874:	1885883a 	add	r2,r3,r2
   14878:	159fcb03 	ldbu	r22,32556(r2)
   1487c:	00800804 	movi	r2,32
   14880:	b4ad883a 	add	r22,r22,r18
   14884:	15a5c83a 	sub	r18,r2,r22
   14888:	1580a51e 	bne	r2,r22,14b20 <__umoddi3+0x490>
   1488c:	a02ed43a 	srli	r23,r20,16
   14890:	8d23c83a 	sub	r17,r17,r20
   14894:	a57fffcc 	andi	r21,r20,65535
   14898:	8809883a 	mov	r4,r17
   1489c:	b80b883a 	mov	r5,r23
   148a0:	000795c0 	call	795c <__umodsi3>
   148a4:	8809883a 	mov	r4,r17
   148a8:	b80b883a 	mov	r5,r23
   148ac:	1023883a 	mov	r17,r2
   148b0:	00078f80 	call	78f8 <__udivsi3>
   148b4:	1009883a 	mov	r4,r2
   148b8:	a80b883a 	mov	r5,r21
   148bc:	00079b80 	call	79b8 <__mulsi3>
   148c0:	8822943a 	slli	r17,r17,16
   148c4:	9808d43a 	srli	r4,r19,16
   148c8:	8908b03a 	or	r4,r17,r4
   148cc:	2080032e 	bgeu	r4,r2,148dc <__umoddi3+0x24c>
   148d0:	2509883a 	add	r4,r4,r20
   148d4:	25000136 	bltu	r4,r20,148dc <__umoddi3+0x24c>
   148d8:	2080dc36 	bltu	r4,r2,14c4c <__umoddi3+0x5bc>
   148dc:	20a1c83a 	sub	r16,r4,r2
   148e0:	b80b883a 	mov	r5,r23
   148e4:	8009883a 	mov	r4,r16
   148e8:	000795c0 	call	795c <__umodsi3>
   148ec:	b80b883a 	mov	r5,r23
   148f0:	8009883a 	mov	r4,r16
   148f4:	1023883a 	mov	r17,r2
   148f8:	8822943a 	slli	r17,r17,16
   148fc:	00078f80 	call	78f8 <__udivsi3>
   14900:	a80b883a 	mov	r5,r21
   14904:	1009883a 	mov	r4,r2
   14908:	00079b80 	call	79b8 <__mulsi3>
   1490c:	9cffffcc 	andi	r19,r19,65535
   14910:	8cc6b03a 	or	r3,r17,r19
   14914:	1880042e 	bgeu	r3,r2,14928 <__umoddi3+0x298>
   14918:	1d07883a 	add	r3,r3,r20
   1491c:	1d000236 	bltu	r3,r20,14928 <__umoddi3+0x298>
   14920:	1880012e 	bgeu	r3,r2,14928 <__umoddi3+0x298>
   14924:	1d07883a 	add	r3,r3,r20
   14928:	1885c83a 	sub	r2,r3,r2
   1492c:	1484d83a 	srl	r2,r2,r18
   14930:	0007883a 	mov	r3,zero
   14934:	003fa206 	br	147c0 <__umoddi3+0x130>
   14938:	a0804030 	cmpltui	r2,r20,256
   1493c:	1000ba1e 	bne	r2,zero,14c28 <__umoddi3+0x598>
   14940:	a006d23a 	srli	r3,r20,8
   14944:	04800204 	movi	r18,8
   14948:	003fc906 	br	14870 <__umoddi3+0x1e0>
   1494c:	30804030 	cmpltui	r2,r6,256
   14950:	1000ad1e 	bne	r2,zero,14c08 <__umoddi3+0x578>
   14954:	3006d23a 	srli	r3,r6,8
   14958:	04800204 	movi	r18,8
   1495c:	003f6506 	br	146f4 <__umoddi3+0x64>
   14960:	39004030 	cmpltui	r4,r7,256
   14964:	2000b21e 	bne	r4,zero,14c30 <__umoddi3+0x5a0>
   14968:	3808d23a 	srli	r4,r7,8
   1496c:	02000204 	movi	r8,8
   14970:	003fa606 	br	1480c <__umoddi3+0x17c>
   14974:	3d4e983a 	sll	r7,r7,r21
   14978:	3508d83a 	srl	r4,r6,r20
   1497c:	8d2cd83a 	srl	r22,r17,r20
   14980:	8504d83a 	srl	r2,r16,r20
   14984:	21e4b03a 	or	r18,r4,r7
   14988:	8d62983a 	sll	r17,r17,r21
   1498c:	9026d43a 	srli	r19,r18,16
   14990:	354c983a 	sll	r6,r6,r21
   14994:	1444b03a 	or	r2,r2,r17
   14998:	b009883a 	mov	r4,r22
   1499c:	980b883a 	mov	r5,r19
   149a0:	d9800115 	stw	r6,4(sp)
   149a4:	d8800015 	stw	r2,0(sp)
   149a8:	000795c0 	call	795c <__umodsi3>
   149ac:	980b883a 	mov	r5,r19
   149b0:	b009883a 	mov	r4,r22
   149b4:	102f883a 	mov	r23,r2
   149b8:	947fffcc 	andi	r17,r18,65535
   149bc:	00078f80 	call	78f8 <__udivsi3>
   149c0:	8809883a 	mov	r4,r17
   149c4:	100b883a 	mov	r5,r2
   149c8:	1039883a 	mov	fp,r2
   149cc:	00079b80 	call	79b8 <__mulsi3>
   149d0:	d8c00017 	ldw	r3,0(sp)
   149d4:	b82e943a 	slli	r23,r23,16
   149d8:	8560983a 	sll	r16,r16,r21
   149dc:	1808d43a 	srli	r4,r3,16
   149e0:	b908b03a 	or	r4,r23,r4
   149e4:	2080062e 	bgeu	r4,r2,14a00 <__umoddi3+0x370>
   149e8:	2489883a 	add	r4,r4,r18
   149ec:	e17fffc4 	addi	r5,fp,-1
   149f0:	24809436 	bltu	r4,r18,14c44 <__umoddi3+0x5b4>
   149f4:	2080932e 	bgeu	r4,r2,14c44 <__umoddi3+0x5b4>
   149f8:	e73fff84 	addi	fp,fp,-2
   149fc:	2489883a 	add	r4,r4,r18
   14a00:	20adc83a 	sub	r22,r4,r2
   14a04:	980b883a 	mov	r5,r19
   14a08:	b009883a 	mov	r4,r22
   14a0c:	000795c0 	call	795c <__umodsi3>
   14a10:	980b883a 	mov	r5,r19
   14a14:	b009883a 	mov	r4,r22
   14a18:	102f883a 	mov	r23,r2
   14a1c:	00078f80 	call	78f8 <__udivsi3>
   14a20:	100b883a 	mov	r5,r2
   14a24:	8809883a 	mov	r4,r17
   14a28:	d8800215 	stw	r2,8(sp)
   14a2c:	00079b80 	call	79b8 <__mulsi3>
   14a30:	d8c00017 	ldw	r3,0(sp)
   14a34:	b82e943a 	slli	r23,r23,16
   14a38:	d9400217 	ldw	r5,8(sp)
   14a3c:	1c7fffcc 	andi	r17,r3,65535
   14a40:	bc62b03a 	or	r17,r23,r17
   14a44:	8880062e 	bgeu	r17,r2,14a60 <__umoddi3+0x3d0>
   14a48:	8ca3883a 	add	r17,r17,r18
   14a4c:	28ffffc4 	addi	r3,r5,-1
   14a50:	8c807a36 	bltu	r17,r18,14c3c <__umoddi3+0x5ac>
   14a54:	8880792e 	bgeu	r17,r2,14c3c <__umoddi3+0x5ac>
   14a58:	297fff84 	addi	r5,r5,-2
   14a5c:	8ca3883a 	add	r17,r17,r18
   14a60:	e02c943a 	slli	r22,fp,16
   14a64:	d9c00117 	ldw	r7,4(sp)
   14a68:	29bfffcc 	andi	r6,r5,65535
   14a6c:	b16cb03a 	or	r22,r22,r5
   14a70:	38ffffcc 	andi	r3,r7,65535
   14a74:	b02cd43a 	srli	r22,r22,16
   14a78:	180b883a 	mov	r5,r3
   14a7c:	3009883a 	mov	r4,r6
   14a80:	3838d43a 	srli	fp,r7,16
   14a84:	182f883a 	mov	r23,r3
   14a88:	d9800015 	stw	r6,0(sp)
   14a8c:	88a3c83a 	sub	r17,r17,r2
   14a90:	00079b80 	call	79b8 <__mulsi3>
   14a94:	b80b883a 	mov	r5,r23
   14a98:	b009883a 	mov	r4,r22
   14a9c:	102f883a 	mov	r23,r2
   14aa0:	00079b80 	call	79b8 <__mulsi3>
   14aa4:	e00b883a 	mov	r5,fp
   14aa8:	b009883a 	mov	r4,r22
   14aac:	102d883a 	mov	r22,r2
   14ab0:	00079b80 	call	79b8 <__mulsi3>
   14ab4:	d9800017 	ldw	r6,0(sp)
   14ab8:	e00b883a 	mov	r5,fp
   14abc:	1039883a 	mov	fp,r2
   14ac0:	3009883a 	mov	r4,r6
   14ac4:	00079b80 	call	79b8 <__mulsi3>
   14ac8:	b808d43a 	srli	r4,r23,16
   14acc:	1585883a 	add	r2,r2,r22
   14ad0:	2089883a 	add	r4,r4,r2
   14ad4:	2580022e 	bgeu	r4,r22,14ae0 <__umoddi3+0x450>
   14ad8:	00800074 	movhi	r2,1
   14adc:	e0b9883a 	add	fp,fp,r2
   14ae0:	2006d43a 	srli	r3,r4,16
   14ae4:	2008943a 	slli	r4,r4,16
   14ae8:	bdffffcc 	andi	r23,r23,65535
   14aec:	1f07883a 	add	r3,r3,fp
   14af0:	25c9883a 	add	r4,r4,r23
   14af4:	88c03a36 	bltu	r17,r3,14be0 <__umoddi3+0x550>
   14af8:	88c03826 	beq	r17,r3,14bdc <__umoddi3+0x54c>
   14afc:	8109c83a 	sub	r4,r16,r4
   14b00:	8121803a 	cmpltu	r16,r16,r4
   14b04:	88c7c83a 	sub	r3,r17,r3
   14b08:	1c07c83a 	sub	r3,r3,r16
   14b0c:	1d04983a 	sll	r2,r3,r20
   14b10:	2548d83a 	srl	r4,r4,r21
   14b14:	1d46d83a 	srl	r3,r3,r21
   14b18:	1104b03a 	or	r2,r2,r4
   14b1c:	003f2806 	br	147c0 <__umoddi3+0x130>
   14b20:	a4a8983a 	sll	r20,r20,r18
   14b24:	8da6d83a 	srl	r19,r17,r22
   14b28:	8ca2983a 	sll	r17,r17,r18
   14b2c:	a02ed43a 	srli	r23,r20,16
   14b30:	9809883a 	mov	r4,r19
   14b34:	85acd83a 	srl	r22,r16,r22
   14b38:	b80b883a 	mov	r5,r23
   14b3c:	000795c0 	call	795c <__umodsi3>
   14b40:	9809883a 	mov	r4,r19
   14b44:	b80b883a 	mov	r5,r23
   14b48:	b46cb03a 	or	r22,r22,r17
   14b4c:	a57fffcc 	andi	r21,r20,65535
   14b50:	1023883a 	mov	r17,r2
   14b54:	00078f80 	call	78f8 <__udivsi3>
   14b58:	a809883a 	mov	r4,r21
   14b5c:	100b883a 	mov	r5,r2
   14b60:	00079b80 	call	79b8 <__mulsi3>
   14b64:	8822943a 	slli	r17,r17,16
   14b68:	b008d43a 	srli	r4,r22,16
   14b6c:	84a6983a 	sll	r19,r16,r18
   14b70:	8908b03a 	or	r4,r17,r4
   14b74:	2080042e 	bgeu	r4,r2,14b88 <__umoddi3+0x4f8>
   14b78:	2509883a 	add	r4,r4,r20
   14b7c:	25000236 	bltu	r4,r20,14b88 <__umoddi3+0x4f8>
   14b80:	2080012e 	bgeu	r4,r2,14b88 <__umoddi3+0x4f8>
   14b84:	2509883a 	add	r4,r4,r20
   14b88:	20a1c83a 	sub	r16,r4,r2
   14b8c:	8009883a 	mov	r4,r16
   14b90:	b80b883a 	mov	r5,r23
   14b94:	000795c0 	call	795c <__umodsi3>
   14b98:	8009883a 	mov	r4,r16
   14b9c:	1021883a 	mov	r16,r2
   14ba0:	b80b883a 	mov	r5,r23
   14ba4:	8020943a 	slli	r16,r16,16
   14ba8:	00078f80 	call	78f8 <__udivsi3>
   14bac:	100b883a 	mov	r5,r2
   14bb0:	a809883a 	mov	r4,r21
   14bb4:	b47fffcc 	andi	r17,r22,65535
   14bb8:	00079b80 	call	79b8 <__mulsi3>
   14bbc:	8462b03a 	or	r17,r16,r17
   14bc0:	8880042e 	bgeu	r17,r2,14bd4 <__umoddi3+0x544>
   14bc4:	8d23883a 	add	r17,r17,r20
   14bc8:	8d000236 	bltu	r17,r20,14bd4 <__umoddi3+0x544>
   14bcc:	8880012e 	bgeu	r17,r2,14bd4 <__umoddi3+0x544>
   14bd0:	8d23883a 	add	r17,r17,r20
   14bd4:	88a3c83a 	sub	r17,r17,r2
   14bd8:	003f2f06 	br	14898 <__umoddi3+0x208>
   14bdc:	813fc72e 	bgeu	r16,r4,14afc <__umoddi3+0x46c>
   14be0:	d8800117 	ldw	r2,4(sp)
   14be4:	20a7c83a 	sub	r19,r4,r2
   14be8:	24c9803a 	cmpltu	r4,r4,r19
   14bec:	2489883a 	add	r4,r4,r18
   14bf0:	1907c83a 	sub	r3,r3,r4
   14bf4:	9809883a 	mov	r4,r19
   14bf8:	003fc006 	br	14afc <__umoddi3+0x46c>
   14bfc:	3006d43a 	srli	r3,r6,16
   14c00:	04800404 	movi	r18,16
   14c04:	003ebb06 	br	146f4 <__umoddi3+0x64>
   14c08:	3007883a 	mov	r3,r6
   14c0c:	003eb906 	br	146f4 <__umoddi3+0x64>
   14c10:	3808d43a 	srli	r4,r7,16
   14c14:	02000404 	movi	r8,16
   14c18:	003efc06 	br	1480c <__umoddi3+0x17c>
   14c1c:	a006d43a 	srli	r3,r20,16
   14c20:	04800404 	movi	r18,16
   14c24:	003f1206 	br	14870 <__umoddi3+0x1e0>
   14c28:	a007883a 	mov	r3,r20
   14c2c:	003f1006 	br	14870 <__umoddi3+0x1e0>
   14c30:	3809883a 	mov	r4,r7
   14c34:	0011883a 	mov	r8,zero
   14c38:	003ef406 	br	1480c <__umoddi3+0x17c>
   14c3c:	180b883a 	mov	r5,r3
   14c40:	003f8706 	br	14a60 <__umoddi3+0x3d0>
   14c44:	2839883a 	mov	fp,r5
   14c48:	003f6d06 	br	14a00 <__umoddi3+0x370>
   14c4c:	2509883a 	add	r4,r4,r20
   14c50:	003f2206 	br	148dc <__umoddi3+0x24c>

00014c54 <__floatunsidf>:
   14c54:	defffe04 	addi	sp,sp,-8
   14c58:	dc000015 	stw	r16,0(sp)
   14c5c:	dfc00115 	stw	ra,4(sp)
   14c60:	2021883a 	mov	r16,r4
   14c64:	20000f26 	beq	r4,zero,14ca4 <__floatunsidf+0x50>
   14c68:	000a4780 	call	a478 <__clzsi2>
   14c6c:	00c10784 	movi	r3,1054
   14c70:	1887c83a 	sub	r3,r3,r2
   14c74:	110002c8 	cmpgei	r4,r2,11
   14c78:	18c1ffcc 	andi	r3,r3,2047
   14c7c:	2000121e 	bne	r4,zero,14cc8 <__floatunsidf+0x74>
   14c80:	014002c4 	movi	r5,11
   14c84:	288bc83a 	sub	r5,r5,r2
   14c88:	814ad83a 	srl	r5,r16,r5
   14c8c:	01000434 	movhi	r4,16
   14c90:	10800544 	addi	r2,r2,21
   14c94:	213fffc4 	addi	r4,r4,-1
   14c98:	80a0983a 	sll	r16,r16,r2
   14c9c:	290a703a 	and	r5,r5,r4
   14ca0:	00000206 	br	14cac <__floatunsidf+0x58>
   14ca4:	0007883a 	mov	r3,zero
   14ca8:	000b883a 	mov	r5,zero
   14cac:	1806953a 	slli	r3,r3,20
   14cb0:	8005883a 	mov	r2,r16
   14cb4:	1946b03a 	or	r3,r3,r5
   14cb8:	dfc00117 	ldw	ra,4(sp)
   14cbc:	dc000017 	ldw	r16,0(sp)
   14cc0:	dec00204 	addi	sp,sp,8
   14cc4:	f800283a 	ret
   14cc8:	117ffd44 	addi	r5,r2,-11
   14ccc:	814a983a 	sll	r5,r16,r5
   14cd0:	00800434 	movhi	r2,16
   14cd4:	10bfffc4 	addi	r2,r2,-1
   14cd8:	288a703a 	and	r5,r5,r2
   14cdc:	0021883a 	mov	r16,zero
   14ce0:	003ff206 	br	14cac <__floatunsidf+0x58>

00014ce4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   14ce4:	defffe04 	addi	sp,sp,-8
   14ce8:	dfc00115 	stw	ra,4(sp)
   14cec:	df000015 	stw	fp,0(sp)
   14cf0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   14cf4:	d0a00917 	ldw	r2,-32732(gp)
   14cf8:	10000326 	beq	r2,zero,14d08 <alt_get_errno+0x24>
   14cfc:	d0a00917 	ldw	r2,-32732(gp)
   14d00:	103ee83a 	callr	r2
   14d04:	00000106 	br	14d0c <alt_get_errno+0x28>
   14d08:	d0a73504 	addi	r2,gp,-25388
}
   14d0c:	e037883a 	mov	sp,fp
   14d10:	dfc00117 	ldw	ra,4(sp)
   14d14:	df000017 	ldw	fp,0(sp)
   14d18:	dec00204 	addi	sp,sp,8
   14d1c:	f800283a 	ret

00014d20 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   14d20:	defffb04 	addi	sp,sp,-20
   14d24:	dfc00415 	stw	ra,16(sp)
   14d28:	df000315 	stw	fp,12(sp)
   14d2c:	df000304 	addi	fp,sp,12
   14d30:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   14d34:	e0bffd17 	ldw	r2,-12(fp)
   14d38:	10000916 	blt	r2,zero,14d60 <close+0x40>
   14d3c:	e0fffd17 	ldw	r3,-12(fp)
   14d40:	1805883a 	mov	r2,r3
   14d44:	1085883a 	add	r2,r2,r2
   14d48:	10c5883a 	add	r2,r2,r3
   14d4c:	100490ba 	slli	r2,r2,2
   14d50:	00c000b4 	movhi	r3,2
   14d54:	18e3e404 	addi	r3,r3,-28784
   14d58:	10c5883a 	add	r2,r2,r3
   14d5c:	00000106 	br	14d64 <close+0x44>
   14d60:	0005883a 	mov	r2,zero
   14d64:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
   14d68:	e0bfff17 	ldw	r2,-4(fp)
   14d6c:	10001926 	beq	r2,zero,14dd4 <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   14d70:	e0bfff17 	ldw	r2,-4(fp)
   14d74:	10800017 	ldw	r2,0(r2)
   14d78:	10800417 	ldw	r2,16(r2)
   14d7c:	10000626 	beq	r2,zero,14d98 <close+0x78>
   14d80:	e0bfff17 	ldw	r2,-4(fp)
   14d84:	10800017 	ldw	r2,0(r2)
   14d88:	10800417 	ldw	r2,16(r2)
   14d8c:	e13fff17 	ldw	r4,-4(fp)
   14d90:	103ee83a 	callr	r2
   14d94:	00000106 	br	14d9c <close+0x7c>
   14d98:	0005883a 	mov	r2,zero
   14d9c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   14da0:	e13ffd17 	ldw	r4,-12(fp)
   14da4:	00155dc0 	call	155dc <alt_release_fd>
    if (rval < 0)
   14da8:	e0bffe17 	ldw	r2,-8(fp)
   14dac:	1000070e 	bge	r2,zero,14dcc <close+0xac>
    {
      ALT_ERRNO = -rval;
   14db0:	0014ce40 	call	14ce4 <alt_get_errno>
   14db4:	1007883a 	mov	r3,r2
   14db8:	e0bffe17 	ldw	r2,-8(fp)
   14dbc:	0085c83a 	sub	r2,zero,r2
   14dc0:	18800015 	stw	r2,0(r3)
      return -1;
   14dc4:	00bfffc4 	movi	r2,-1
   14dc8:	00000706 	br	14de8 <close+0xc8>
    }
    return 0;
   14dcc:	0005883a 	mov	r2,zero
   14dd0:	00000506 	br	14de8 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   14dd4:	0014ce40 	call	14ce4 <alt_get_errno>
   14dd8:	1007883a 	mov	r3,r2
   14ddc:	00801444 	movi	r2,81
   14de0:	18800015 	stw	r2,0(r3)
    return -1;
   14de4:	00bfffc4 	movi	r2,-1
  }
}
   14de8:	e037883a 	mov	sp,fp
   14dec:	dfc00117 	ldw	ra,4(sp)
   14df0:	df000017 	ldw	fp,0(sp)
   14df4:	dec00204 	addi	sp,sp,8
   14df8:	f800283a 	ret

00014dfc <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   14dfc:	defffc04 	addi	sp,sp,-16
   14e00:	df000315 	stw	fp,12(sp)
   14e04:	df000304 	addi	fp,sp,12
   14e08:	e13fff15 	stw	r4,-4(fp)
   14e0c:	e17ffe15 	stw	r5,-8(fp)
   14e10:	e1bffd15 	stw	r6,-12(fp)
  return len;
   14e14:	e0bffd17 	ldw	r2,-12(fp)
}
   14e18:	e037883a 	mov	sp,fp
   14e1c:	df000017 	ldw	fp,0(sp)
   14e20:	dec00104 	addi	sp,sp,4
   14e24:	f800283a 	ret

00014e28 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   14e28:	defffd04 	addi	sp,sp,-12
   14e2c:	df000215 	stw	fp,8(sp)
   14e30:	df000204 	addi	fp,sp,8
   14e34:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   14e38:	0001883a 	nop
   14e3c:	e0bffe17 	ldw	r2,-8(fp)
   14e40:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   14e44:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   14e48:	10000226 	beq	r2,zero,14e54 <_exit+0x2c>
    ALT_SIM_FAIL();
   14e4c:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
   14e50:	00000106 	br	14e58 <_exit+0x30>
    ALT_SIM_PASS();
   14e54:	002af0b0 	cmpltui	zero,zero,43970
}
   14e58:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   14e5c:	003fff06 	br	14e5c <_exit+0x34>

00014e60 <alt_get_errno>:
{
   14e60:	defffe04 	addi	sp,sp,-8
   14e64:	dfc00115 	stw	ra,4(sp)
   14e68:	df000015 	stw	fp,0(sp)
   14e6c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   14e70:	d0a00917 	ldw	r2,-32732(gp)
   14e74:	10000326 	beq	r2,zero,14e84 <alt_get_errno+0x24>
   14e78:	d0a00917 	ldw	r2,-32732(gp)
   14e7c:	103ee83a 	callr	r2
   14e80:	00000106 	br	14e88 <alt_get_errno+0x28>
   14e84:	d0a73504 	addi	r2,gp,-25388
}
   14e88:	e037883a 	mov	sp,fp
   14e8c:	dfc00117 	ldw	ra,4(sp)
   14e90:	df000017 	ldw	fp,0(sp)
   14e94:	dec00204 	addi	sp,sp,8
   14e98:	f800283a 	ret

00014e9c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   14e9c:	defffb04 	addi	sp,sp,-20
   14ea0:	dfc00415 	stw	ra,16(sp)
   14ea4:	df000315 	stw	fp,12(sp)
   14ea8:	df000304 	addi	fp,sp,12
   14eac:	e13ffe15 	stw	r4,-8(fp)
   14eb0:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   14eb4:	e0bffe17 	ldw	r2,-8(fp)
   14eb8:	10000916 	blt	r2,zero,14ee0 <fstat+0x44>
   14ebc:	e0fffe17 	ldw	r3,-8(fp)
   14ec0:	1805883a 	mov	r2,r3
   14ec4:	1085883a 	add	r2,r2,r2
   14ec8:	10c5883a 	add	r2,r2,r3
   14ecc:	100490ba 	slli	r2,r2,2
   14ed0:	00c000b4 	movhi	r3,2
   14ed4:	18e3e404 	addi	r3,r3,-28784
   14ed8:	10c5883a 	add	r2,r2,r3
   14edc:	00000106 	br	14ee4 <fstat+0x48>
   14ee0:	0005883a 	mov	r2,zero
   14ee4:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   14ee8:	e0bfff17 	ldw	r2,-4(fp)
   14eec:	10001026 	beq	r2,zero,14f30 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   14ef0:	e0bfff17 	ldw	r2,-4(fp)
   14ef4:	10800017 	ldw	r2,0(r2)
   14ef8:	10800817 	ldw	r2,32(r2)
   14efc:	10000726 	beq	r2,zero,14f1c <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
   14f00:	e0bfff17 	ldw	r2,-4(fp)
   14f04:	10800017 	ldw	r2,0(r2)
   14f08:	10800817 	ldw	r2,32(r2)
   14f0c:	e17ffd17 	ldw	r5,-12(fp)
   14f10:	e13fff17 	ldw	r4,-4(fp)
   14f14:	103ee83a 	callr	r2
   14f18:	00000a06 	br	14f44 <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   14f1c:	e0bffd17 	ldw	r2,-12(fp)
   14f20:	00c80004 	movi	r3,8192
   14f24:	10c00115 	stw	r3,4(r2)
      return 0;
   14f28:	0005883a 	mov	r2,zero
   14f2c:	00000506 	br	14f44 <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   14f30:	0014e600 	call	14e60 <alt_get_errno>
   14f34:	1007883a 	mov	r3,r2
   14f38:	00801444 	movi	r2,81
   14f3c:	18800015 	stw	r2,0(r3)
    return -1;
   14f40:	00bfffc4 	movi	r2,-1
  }
}
   14f44:	e037883a 	mov	sp,fp
   14f48:	dfc00117 	ldw	ra,4(sp)
   14f4c:	df000017 	ldw	fp,0(sp)
   14f50:	dec00204 	addi	sp,sp,8
   14f54:	f800283a 	ret

00014f58 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
   14f58:	deffff04 	addi	sp,sp,-4
   14f5c:	df000015 	stw	fp,0(sp)
   14f60:	d839883a 	mov	fp,sp
  return 0;
   14f64:	0005883a 	mov	r2,zero
}
   14f68:	e037883a 	mov	sp,fp
   14f6c:	df000017 	ldw	fp,0(sp)
   14f70:	dec00104 	addi	sp,sp,4
   14f74:	f800283a 	ret

00014f78 <alt_get_errno>:
{
   14f78:	defffe04 	addi	sp,sp,-8
   14f7c:	dfc00115 	stw	ra,4(sp)
   14f80:	df000015 	stw	fp,0(sp)
   14f84:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   14f88:	d0a00917 	ldw	r2,-32732(gp)
   14f8c:	10000326 	beq	r2,zero,14f9c <alt_get_errno+0x24>
   14f90:	d0a00917 	ldw	r2,-32732(gp)
   14f94:	103ee83a 	callr	r2
   14f98:	00000106 	br	14fa0 <alt_get_errno+0x28>
   14f9c:	d0a73504 	addi	r2,gp,-25388
}
   14fa0:	e037883a 	mov	sp,fp
   14fa4:	dfc00117 	ldw	ra,4(sp)
   14fa8:	df000017 	ldw	fp,0(sp)
   14fac:	dec00204 	addi	sp,sp,8
   14fb0:	f800283a 	ret

00014fb4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   14fb4:	deffea04 	addi	sp,sp,-88
   14fb8:	dfc01515 	stw	ra,84(sp)
   14fbc:	df001415 	stw	fp,80(sp)
   14fc0:	df001404 	addi	fp,sp,80
   14fc4:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   14fc8:	e0bfec17 	ldw	r2,-80(fp)
   14fcc:	10000916 	blt	r2,zero,14ff4 <isatty+0x40>
   14fd0:	e0ffec17 	ldw	r3,-80(fp)
   14fd4:	1805883a 	mov	r2,r3
   14fd8:	1085883a 	add	r2,r2,r2
   14fdc:	10c5883a 	add	r2,r2,r3
   14fe0:	100490ba 	slli	r2,r2,2
   14fe4:	00c000b4 	movhi	r3,2
   14fe8:	18e3e404 	addi	r3,r3,-28784
   14fec:	10c5883a 	add	r2,r2,r3
   14ff0:	00000106 	br	14ff8 <isatty+0x44>
   14ff4:	0005883a 	mov	r2,zero
   14ff8:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   14ffc:	e0bfff17 	ldw	r2,-4(fp)
   15000:	10000e26 	beq	r2,zero,1503c <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   15004:	e0bfff17 	ldw	r2,-4(fp)
   15008:	10800017 	ldw	r2,0(r2)
   1500c:	10800817 	ldw	r2,32(r2)
   15010:	1000021e 	bne	r2,zero,1501c <isatty+0x68>
    {
      return 1;
   15014:	00800044 	movi	r2,1
   15018:	00000d06 	br	15050 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   1501c:	e0bfed04 	addi	r2,fp,-76
   15020:	100b883a 	mov	r5,r2
   15024:	e13fec17 	ldw	r4,-80(fp)
   15028:	0014e9c0 	call	14e9c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   1502c:	e0bfee17 	ldw	r2,-72(fp)
   15030:	10880020 	cmpeqi	r2,r2,8192
   15034:	10803fcc 	andi	r2,r2,255
   15038:	00000506 	br	15050 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   1503c:	0014f780 	call	14f78 <alt_get_errno>
   15040:	1007883a 	mov	r3,r2
   15044:	00801444 	movi	r2,81
   15048:	18800015 	stw	r2,0(r3)
    return 0;
   1504c:	0005883a 	mov	r2,zero
  }
}
   15050:	e037883a 	mov	sp,fp
   15054:	dfc00117 	ldw	ra,4(sp)
   15058:	df000017 	ldw	fp,0(sp)
   1505c:	dec00204 	addi	sp,sp,8
   15060:	f800283a 	ret

00015064 <alt_get_errno>:
{
   15064:	defffe04 	addi	sp,sp,-8
   15068:	dfc00115 	stw	ra,4(sp)
   1506c:	df000015 	stw	fp,0(sp)
   15070:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   15074:	d0a00917 	ldw	r2,-32732(gp)
   15078:	10000326 	beq	r2,zero,15088 <alt_get_errno+0x24>
   1507c:	d0a00917 	ldw	r2,-32732(gp)
   15080:	103ee83a 	callr	r2
   15084:	00000106 	br	1508c <alt_get_errno+0x28>
   15088:	d0a73504 	addi	r2,gp,-25388
}
   1508c:	e037883a 	mov	sp,fp
   15090:	dfc00117 	ldw	ra,4(sp)
   15094:	df000017 	ldw	fp,0(sp)
   15098:	dec00204 	addi	sp,sp,8
   1509c:	f800283a 	ret

000150a0 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
   150a0:	defffb04 	addi	sp,sp,-20
   150a4:	dfc00415 	stw	ra,16(sp)
   150a8:	df000315 	stw	fp,12(sp)
   150ac:	df000304 	addi	fp,sp,12
   150b0:	e13ffe15 	stw	r4,-8(fp)
   150b4:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
   150b8:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
   150bc:	e0bffe17 	ldw	r2,-8(fp)
   150c0:	00802e16 	blt	zero,r2,1517c <kill+0xdc>
  {
    switch (sig)
   150c4:	e0bffd17 	ldw	r2,-12(fp)
   150c8:	10800828 	cmpgeui	r2,r2,32
   150cc:	1000281e 	bne	r2,zero,15170 <kill+0xd0>
   150d0:	e0bffd17 	ldw	r2,-12(fp)
   150d4:	100690ba 	slli	r3,r2,2
   150d8:	00800074 	movhi	r2,1
   150dc:	1885883a 	add	r2,r3,r2
   150e0:	10943a17 	ldw	r2,20712(r2)
   150e4:	1000683a 	jmp	r2
   150e8:	00015190 	cmplti	zero,zero,1350
   150ec:	00015170 	cmpltui	zero,zero,1349
   150f0:	00015170 	cmpltui	zero,zero,1349
   150f4:	00015168 	cmpgeui	zero,zero,1349
   150f8:	00015168 	cmpgeui	zero,zero,1349
   150fc:	00015168 	cmpgeui	zero,zero,1349
   15100:	00015168 	cmpgeui	zero,zero,1349
   15104:	00015170 	cmpltui	zero,zero,1349
   15108:	00015168 	cmpgeui	zero,zero,1349
   1510c:	00015168 	cmpgeui	zero,zero,1349
   15110:	00015168 	cmpgeui	zero,zero,1349
   15114:	00015168 	cmpgeui	zero,zero,1349
   15118:	00015168 	cmpgeui	zero,zero,1349
   1511c:	00015168 	cmpgeui	zero,zero,1349
   15120:	00015168 	cmpgeui	zero,zero,1349
   15124:	00015168 	cmpgeui	zero,zero,1349
   15128:	00015190 	cmplti	zero,zero,1350
   1512c:	00015170 	cmpltui	zero,zero,1349
   15130:	00015170 	cmpltui	zero,zero,1349
   15134:	00015170 	cmpltui	zero,zero,1349
   15138:	00015190 	cmplti	zero,zero,1350
   1513c:	00015170 	cmpltui	zero,zero,1349
   15140:	00015170 	cmpltui	zero,zero,1349
   15144:	00015168 	cmpgeui	zero,zero,1349
   15148:	00015168 	cmpgeui	zero,zero,1349
   1514c:	00015168 	cmpgeui	zero,zero,1349
   15150:	00015168 	cmpgeui	zero,zero,1349
   15154:	00015168 	cmpgeui	zero,zero,1349
   15158:	00015170 	cmpltui	zero,zero,1349
   1515c:	00015170 	cmpltui	zero,zero,1349
   15160:	00015168 	cmpgeui	zero,zero,1349
   15164:	00015168 	cmpgeui	zero,zero,1349
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
   15168:	0009883a 	mov	r4,zero
   1516c:	0014e280 	call	14e28 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
   15170:	00800584 	movi	r2,22
   15174:	e0bfff15 	stw	r2,-4(fp)
   15178:	00000606 	br	15194 <kill+0xf4>
    }
  }

  else if (pid > 0)
   1517c:	e0bffe17 	ldw	r2,-8(fp)
   15180:	0080040e 	bge	zero,r2,15194 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
   15184:	008000c4 	movi	r2,3
   15188:	e0bfff15 	stw	r2,-4(fp)
   1518c:	00000106 	br	15194 <kill+0xf4>
      break;
   15190:	0001883a 	nop
  }

  if (status)
   15194:	e0bfff17 	ldw	r2,-4(fp)
   15198:	10000626 	beq	r2,zero,151b4 <kill+0x114>
  {
    ALT_ERRNO = status;
   1519c:	00150640 	call	15064 <alt_get_errno>
   151a0:	1007883a 	mov	r3,r2
   151a4:	e0bfff17 	ldw	r2,-4(fp)
   151a8:	18800015 	stw	r2,0(r3)
    return -1;
   151ac:	00bfffc4 	movi	r2,-1
   151b0:	00000106 	br	151b8 <kill+0x118>
  }

  return 0;
   151b4:	0005883a 	mov	r2,zero
}
   151b8:	e037883a 	mov	sp,fp
   151bc:	dfc00117 	ldw	ra,4(sp)
   151c0:	df000017 	ldw	fp,0(sp)
   151c4:	dec00204 	addi	sp,sp,8
   151c8:	f800283a 	ret

000151cc <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   151cc:	defffc04 	addi	sp,sp,-16
   151d0:	df000315 	stw	fp,12(sp)
   151d4:	df000304 	addi	fp,sp,12
   151d8:	e13fff15 	stw	r4,-4(fp)
   151dc:	e17ffe15 	stw	r5,-8(fp)
   151e0:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
   151e4:	e0fffe17 	ldw	r3,-8(fp)
   151e8:	e0bfff17 	ldw	r2,-4(fp)
   151ec:	18800c26 	beq	r3,r2,15220 <alt_load_section+0x54>
  {
    while( to != end )
   151f0:	00000806 	br	15214 <alt_load_section+0x48>
    {
      *to++ = *from++;
   151f4:	e0ffff17 	ldw	r3,-4(fp)
   151f8:	18800104 	addi	r2,r3,4
   151fc:	e0bfff15 	stw	r2,-4(fp)
   15200:	e0bffe17 	ldw	r2,-8(fp)
   15204:	11000104 	addi	r4,r2,4
   15208:	e13ffe15 	stw	r4,-8(fp)
   1520c:	18c00017 	ldw	r3,0(r3)
   15210:	10c00015 	stw	r3,0(r2)
    while( to != end )
   15214:	e0fffe17 	ldw	r3,-8(fp)
   15218:	e0bffd17 	ldw	r2,-12(fp)
   1521c:	18bff51e 	bne	r3,r2,151f4 <alt_load_section+0x28>
    }
  }
}
   15220:	0001883a 	nop
   15224:	e037883a 	mov	sp,fp
   15228:	df000017 	ldw	fp,0(sp)
   1522c:	dec00104 	addi	sp,sp,4
   15230:	f800283a 	ret

00015234 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   15234:	defffe04 	addi	sp,sp,-8
   15238:	dfc00115 	stw	ra,4(sp)
   1523c:	df000015 	stw	fp,0(sp)
   15240:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   15244:	018000b4 	movhi	r6,2
   15248:	31a89804 	addi	r6,r6,-23968
   1524c:	014000b4 	movhi	r5,2
   15250:	29617404 	addi	r5,r5,-31280
   15254:	010000b4 	movhi	r4,2
   15258:	21289804 	addi	r4,r4,-23968
   1525c:	00151cc0 	call	151cc <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   15260:	01800034 	movhi	r6,0
   15264:	31808a04 	addi	r6,r6,552
   15268:	01400034 	movhi	r5,0
   1526c:	29400804 	addi	r5,r5,32
   15270:	01000034 	movhi	r4,0
   15274:	21000804 	addi	r4,r4,32
   15278:	00151cc0 	call	151cc <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   1527c:	018000b4 	movhi	r6,2
   15280:	31a17404 	addi	r6,r6,-31280
   15284:	01400074 	movhi	r5,1
   15288:	295f4a04 	addi	r5,r5,32040
   1528c:	01000074 	movhi	r4,1
   15290:	211f4a04 	addi	r4,r4,32040
   15294:	00151cc0 	call	151cc <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   15298:	0016ea80 	call	16ea8 <alt_dcache_flush_all>
  alt_icache_flush_all();
   1529c:	00171040 	call	17104 <alt_icache_flush_all>
}
   152a0:	0001883a 	nop
   152a4:	e037883a 	mov	sp,fp
   152a8:	dfc00117 	ldw	ra,4(sp)
   152ac:	df000017 	ldw	fp,0(sp)
   152b0:	dec00204 	addi	sp,sp,8
   152b4:	f800283a 	ret

000152b8 <alt_get_errno>:
{
   152b8:	defffe04 	addi	sp,sp,-8
   152bc:	dfc00115 	stw	ra,4(sp)
   152c0:	df000015 	stw	fp,0(sp)
   152c4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   152c8:	d0a00917 	ldw	r2,-32732(gp)
   152cc:	10000326 	beq	r2,zero,152dc <alt_get_errno+0x24>
   152d0:	d0a00917 	ldw	r2,-32732(gp)
   152d4:	103ee83a 	callr	r2
   152d8:	00000106 	br	152e0 <alt_get_errno+0x28>
   152dc:	d0a73504 	addi	r2,gp,-25388
}
   152e0:	e037883a 	mov	sp,fp
   152e4:	dfc00117 	ldw	ra,4(sp)
   152e8:	df000017 	ldw	fp,0(sp)
   152ec:	dec00204 	addi	sp,sp,8
   152f0:	f800283a 	ret

000152f4 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   152f4:	defff904 	addi	sp,sp,-28
   152f8:	dfc00615 	stw	ra,24(sp)
   152fc:	df000515 	stw	fp,20(sp)
   15300:	df000504 	addi	fp,sp,20
   15304:	e13ffd15 	stw	r4,-12(fp)
   15308:	e17ffc15 	stw	r5,-16(fp)
   1530c:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   15310:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   15314:	e0bffd17 	ldw	r2,-12(fp)
   15318:	10000916 	blt	r2,zero,15340 <lseek+0x4c>
   1531c:	e0fffd17 	ldw	r3,-12(fp)
   15320:	1805883a 	mov	r2,r3
   15324:	1085883a 	add	r2,r2,r2
   15328:	10c5883a 	add	r2,r2,r3
   1532c:	100490ba 	slli	r2,r2,2
   15330:	00c000b4 	movhi	r3,2
   15334:	18e3e404 	addi	r3,r3,-28784
   15338:	10c5883a 	add	r2,r2,r3
   1533c:	00000106 	br	15344 <lseek+0x50>
   15340:	0005883a 	mov	r2,zero
   15344:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
   15348:	e0bffe17 	ldw	r2,-8(fp)
   1534c:	10001026 	beq	r2,zero,15390 <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   15350:	e0bffe17 	ldw	r2,-8(fp)
   15354:	10800017 	ldw	r2,0(r2)
   15358:	10800717 	ldw	r2,28(r2)
   1535c:	10000926 	beq	r2,zero,15384 <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   15360:	e0bffe17 	ldw	r2,-8(fp)
   15364:	10800017 	ldw	r2,0(r2)
   15368:	10800717 	ldw	r2,28(r2)
   1536c:	e1bffb17 	ldw	r6,-20(fp)
   15370:	e17ffc17 	ldw	r5,-16(fp)
   15374:	e13ffe17 	ldw	r4,-8(fp)
   15378:	103ee83a 	callr	r2
   1537c:	e0bfff15 	stw	r2,-4(fp)
   15380:	00000506 	br	15398 <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   15384:	00bfde84 	movi	r2,-134
   15388:	e0bfff15 	stw	r2,-4(fp)
   1538c:	00000206 	br	15398 <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
   15390:	00bfebc4 	movi	r2,-81
   15394:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
   15398:	e0bfff17 	ldw	r2,-4(fp)
   1539c:	1000070e 	bge	r2,zero,153bc <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
   153a0:	00152b80 	call	152b8 <alt_get_errno>
   153a4:	1007883a 	mov	r3,r2
   153a8:	e0bfff17 	ldw	r2,-4(fp)
   153ac:	0085c83a 	sub	r2,zero,r2
   153b0:	18800015 	stw	r2,0(r3)
    rc = -1;
   153b4:	00bfffc4 	movi	r2,-1
   153b8:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
   153bc:	e0bfff17 	ldw	r2,-4(fp)
}
   153c0:	e037883a 	mov	sp,fp
   153c4:	dfc00117 	ldw	ra,4(sp)
   153c8:	df000017 	ldw	fp,0(sp)
   153cc:	dec00204 	addi	sp,sp,8
   153d0:	f800283a 	ret

000153d4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   153d4:	defffd04 	addi	sp,sp,-12
   153d8:	dfc00215 	stw	ra,8(sp)
   153dc:	df000115 	stw	fp,4(sp)
   153e0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   153e4:	0009883a 	mov	r4,zero
   153e8:	00158780 	call	15878 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   153ec:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   153f0:	00158b40 	call	158b4 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   153f4:	018000b4 	movhi	r6,2
   153f8:	31a15704 	addi	r6,r6,-31396
   153fc:	014000b4 	movhi	r5,2
   15400:	29615704 	addi	r5,r5,-31396
   15404:	010000b4 	movhi	r4,2
   15408:	21215704 	addi	r4,r4,-31396
   1540c:	00171f80 	call	171f8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   15410:	0016fac0 	call	16fac <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   15414:	01000074 	movhi	r4,1
   15418:	211c0404 	addi	r4,r4,28688
   1541c:	0017ab80 	call	17ab8 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   15420:	d0a73717 	ldw	r2,-25380(gp)
   15424:	d0e73817 	ldw	r3,-25376(gp)
   15428:	d1273917 	ldw	r4,-25372(gp)
   1542c:	200d883a 	mov	r6,r4
   15430:	180b883a 	mov	r5,r3
   15434:	1009883a 	mov	r4,r2
   15438:	00002640 	call	264 <main>
   1543c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   15440:	01000044 	movi	r4,1
   15444:	0014d200 	call	14d20 <close>
  exit (result);
   15448:	e13fff17 	ldw	r4,-4(fp)
   1544c:	0017acc0 	call	17acc <exit>

00015450 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   15450:	defffe04 	addi	sp,sp,-8
   15454:	df000115 	stw	fp,4(sp)
   15458:	df000104 	addi	fp,sp,4
   1545c:	e13fff15 	stw	r4,-4(fp)
}
   15460:	0001883a 	nop
   15464:	e037883a 	mov	sp,fp
   15468:	df000017 	ldw	fp,0(sp)
   1546c:	dec00104 	addi	sp,sp,4
   15470:	f800283a 	ret

00015474 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   15474:	defffe04 	addi	sp,sp,-8
   15478:	df000115 	stw	fp,4(sp)
   1547c:	df000104 	addi	fp,sp,4
   15480:	e13fff15 	stw	r4,-4(fp)
}
   15484:	0001883a 	nop
   15488:	e037883a 	mov	sp,fp
   1548c:	df000017 	ldw	fp,0(sp)
   15490:	dec00104 	addi	sp,sp,4
   15494:	f800283a 	ret

00015498 <alt_get_errno>:
{
   15498:	defffe04 	addi	sp,sp,-8
   1549c:	dfc00115 	stw	ra,4(sp)
   154a0:	df000015 	stw	fp,0(sp)
   154a4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   154a8:	d0a00917 	ldw	r2,-32732(gp)
   154ac:	10000326 	beq	r2,zero,154bc <alt_get_errno+0x24>
   154b0:	d0a00917 	ldw	r2,-32732(gp)
   154b4:	103ee83a 	callr	r2
   154b8:	00000106 	br	154c0 <alt_get_errno+0x28>
   154bc:	d0a73504 	addi	r2,gp,-25388
}
   154c0:	e037883a 	mov	sp,fp
   154c4:	dfc00117 	ldw	ra,4(sp)
   154c8:	df000017 	ldw	fp,0(sp)
   154cc:	dec00204 	addi	sp,sp,8
   154d0:	f800283a 	ret

000154d4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   154d4:	defff904 	addi	sp,sp,-28
   154d8:	dfc00615 	stw	ra,24(sp)
   154dc:	df000515 	stw	fp,20(sp)
   154e0:	df000504 	addi	fp,sp,20
   154e4:	e13ffd15 	stw	r4,-12(fp)
   154e8:	e17ffc15 	stw	r5,-16(fp)
   154ec:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   154f0:	e0bffd17 	ldw	r2,-12(fp)
   154f4:	10000916 	blt	r2,zero,1551c <read+0x48>
   154f8:	e0fffd17 	ldw	r3,-12(fp)
   154fc:	1805883a 	mov	r2,r3
   15500:	1085883a 	add	r2,r2,r2
   15504:	10c5883a 	add	r2,r2,r3
   15508:	100490ba 	slli	r2,r2,2
   1550c:	00c000b4 	movhi	r3,2
   15510:	18e3e404 	addi	r3,r3,-28784
   15514:	10c5883a 	add	r2,r2,r3
   15518:	00000106 	br	15520 <read+0x4c>
   1551c:	0005883a 	mov	r2,zero
   15520:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   15524:	e0bfff17 	ldw	r2,-4(fp)
   15528:	10002226 	beq	r2,zero,155b4 <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   1552c:	e0bfff17 	ldw	r2,-4(fp)
   15530:	10800217 	ldw	r2,8(r2)
   15534:	108000cc 	andi	r2,r2,3
   15538:	10800060 	cmpeqi	r2,r2,1
   1553c:	1000181e 	bne	r2,zero,155a0 <read+0xcc>
        (fd->dev->read))
   15540:	e0bfff17 	ldw	r2,-4(fp)
   15544:	10800017 	ldw	r2,0(r2)
   15548:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   1554c:	10001426 	beq	r2,zero,155a0 <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   15550:	e0bfff17 	ldw	r2,-4(fp)
   15554:	10800017 	ldw	r2,0(r2)
   15558:	10800517 	ldw	r2,20(r2)
   1555c:	e0fffb17 	ldw	r3,-20(fp)
   15560:	180d883a 	mov	r6,r3
   15564:	e17ffc17 	ldw	r5,-16(fp)
   15568:	e13fff17 	ldw	r4,-4(fp)
   1556c:	103ee83a 	callr	r2
   15570:	e0bffe15 	stw	r2,-8(fp)
   15574:	e0bffe17 	ldw	r2,-8(fp)
   15578:	1000070e 	bge	r2,zero,15598 <read+0xc4>
        {
          ALT_ERRNO = -rval;
   1557c:	00154980 	call	15498 <alt_get_errno>
   15580:	1007883a 	mov	r3,r2
   15584:	e0bffe17 	ldw	r2,-8(fp)
   15588:	0085c83a 	sub	r2,zero,r2
   1558c:	18800015 	stw	r2,0(r3)
          return -1;
   15590:	00bfffc4 	movi	r2,-1
   15594:	00000c06 	br	155c8 <read+0xf4>
        }
        return rval;
   15598:	e0bffe17 	ldw	r2,-8(fp)
   1559c:	00000a06 	br	155c8 <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
   155a0:	00154980 	call	15498 <alt_get_errno>
   155a4:	1007883a 	mov	r3,r2
   155a8:	00800344 	movi	r2,13
   155ac:	18800015 	stw	r2,0(r3)
   155b0:	00000406 	br	155c4 <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   155b4:	00154980 	call	15498 <alt_get_errno>
   155b8:	1007883a 	mov	r3,r2
   155bc:	00801444 	movi	r2,81
   155c0:	18800015 	stw	r2,0(r3)
  }
  return -1;
   155c4:	00bfffc4 	movi	r2,-1
}
   155c8:	e037883a 	mov	sp,fp
   155cc:	dfc00117 	ldw	ra,4(sp)
   155d0:	df000017 	ldw	fp,0(sp)
   155d4:	dec00204 	addi	sp,sp,8
   155d8:	f800283a 	ret

000155dc <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   155dc:	defffe04 	addi	sp,sp,-8
   155e0:	df000115 	stw	fp,4(sp)
   155e4:	df000104 	addi	fp,sp,4
   155e8:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   155ec:	e0bfff17 	ldw	r2,-4(fp)
   155f0:	108000d0 	cmplti	r2,r2,3
   155f4:	1000101e 	bne	r2,zero,15638 <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
   155f8:	e0ffff17 	ldw	r3,-4(fp)
   155fc:	1805883a 	mov	r2,r3
   15600:	1085883a 	add	r2,r2,r2
   15604:	10c5883a 	add	r2,r2,r3
   15608:	100490ba 	slli	r2,r2,2
   1560c:	00c000b4 	movhi	r3,2
   15610:	10c7883a 	add	r3,r2,r3
   15614:	1823e615 	stw	zero,-28776(r3)
    alt_fd_list[fd].dev      = 0;
   15618:	e0ffff17 	ldw	r3,-4(fp)
   1561c:	1805883a 	mov	r2,r3
   15620:	1085883a 	add	r2,r2,r2
   15624:	10c5883a 	add	r2,r2,r3
   15628:	100490ba 	slli	r2,r2,2
   1562c:	00c000b4 	movhi	r3,2
   15630:	10c7883a 	add	r3,r2,r3
   15634:	1823e415 	stw	zero,-28784(r3)
  }
}
   15638:	0001883a 	nop
   1563c:	e037883a 	mov	sp,fp
   15640:	df000017 	ldw	fp,0(sp)
   15644:	dec00104 	addi	sp,sp,4
   15648:	f800283a 	ret

0001564c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   1564c:	defff904 	addi	sp,sp,-28
   15650:	df000615 	stw	fp,24(sp)
   15654:	df000604 	addi	fp,sp,24
   15658:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
   1565c:	0005303a 	rdctl	r2,status
   15660:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   15664:	e0fffd17 	ldw	r3,-12(fp)
   15668:	00bfff84 	movi	r2,-2
   1566c:	1884703a 	and	r2,r3,r2
   15670:	1001703a 	wrctl	status,r2
  return context;
   15674:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   15678:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   1567c:	d0a00a17 	ldw	r2,-32728(gp)
   15680:	10c000c4 	addi	r3,r2,3
   15684:	00bfff04 	movi	r2,-4
   15688:	1884703a 	and	r2,r3,r2
   1568c:	d0a00a15 	stw	r2,-32728(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   15690:	d0e00a17 	ldw	r3,-32728(gp)
   15694:	e0bffa17 	ldw	r2,-24(fp)
   15698:	1887883a 	add	r3,r3,r2
   1569c:	00820034 	movhi	r2,2048
   156a0:	10800004 	addi	r2,r2,0
   156a4:	10c0072e 	bgeu	r2,r3,156c4 <sbrk+0x78>
   156a8:	e0bfff17 	ldw	r2,-4(fp)
   156ac:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   156b0:	e0bffc17 	ldw	r2,-16(fp)
   156b4:	1001703a 	wrctl	status,r2
}
   156b8:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   156bc:	00bfffc4 	movi	r2,-1
   156c0:	00000c06 	br	156f4 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   156c4:	d0a00a17 	ldw	r2,-32728(gp)
   156c8:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
   156cc:	d0e00a17 	ldw	r3,-32728(gp)
   156d0:	e0bffa17 	ldw	r2,-24(fp)
   156d4:	1885883a 	add	r2,r3,r2
   156d8:	d0a00a15 	stw	r2,-32728(gp)
   156dc:	e0bfff17 	ldw	r2,-4(fp)
   156e0:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   156e4:	e0bffb17 	ldw	r2,-20(fp)
   156e8:	1001703a 	wrctl	status,r2
}
   156ec:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   156f0:	e0bffe17 	ldw	r2,-8(fp)
} 
   156f4:	e037883a 	mov	sp,fp
   156f8:	df000017 	ldw	fp,0(sp)
   156fc:	dec00104 	addi	sp,sp,4
   15700:	f800283a 	ret

00015704 <alt_get_errno>:
{
   15704:	defffe04 	addi	sp,sp,-8
   15708:	dfc00115 	stw	ra,4(sp)
   1570c:	df000015 	stw	fp,0(sp)
   15710:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   15714:	d0a00917 	ldw	r2,-32732(gp)
   15718:	10000326 	beq	r2,zero,15728 <alt_get_errno+0x24>
   1571c:	d0a00917 	ldw	r2,-32732(gp)
   15720:	103ee83a 	callr	r2
   15724:	00000106 	br	1572c <alt_get_errno+0x28>
   15728:	d0a73504 	addi	r2,gp,-25388
}
   1572c:	e037883a 	mov	sp,fp
   15730:	dfc00117 	ldw	ra,4(sp)
   15734:	df000017 	ldw	fp,0(sp)
   15738:	dec00204 	addi	sp,sp,8
   1573c:	f800283a 	ret

00015740 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   15740:	defff904 	addi	sp,sp,-28
   15744:	dfc00615 	stw	ra,24(sp)
   15748:	df000515 	stw	fp,20(sp)
   1574c:	df000504 	addi	fp,sp,20
   15750:	e13ffd15 	stw	r4,-12(fp)
   15754:	e17ffc15 	stw	r5,-16(fp)
   15758:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   1575c:	e0bffd17 	ldw	r2,-12(fp)
   15760:	10000916 	blt	r2,zero,15788 <write+0x48>
   15764:	e0fffd17 	ldw	r3,-12(fp)
   15768:	1805883a 	mov	r2,r3
   1576c:	1085883a 	add	r2,r2,r2
   15770:	10c5883a 	add	r2,r2,r3
   15774:	100490ba 	slli	r2,r2,2
   15778:	00c000b4 	movhi	r3,2
   1577c:	18e3e404 	addi	r3,r3,-28784
   15780:	10c5883a 	add	r2,r2,r3
   15784:	00000106 	br	1578c <write+0x4c>
   15788:	0005883a 	mov	r2,zero
   1578c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   15790:	e0bfff17 	ldw	r2,-4(fp)
   15794:	10002126 	beq	r2,zero,1581c <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   15798:	e0bfff17 	ldw	r2,-4(fp)
   1579c:	10800217 	ldw	r2,8(r2)
   157a0:	108000cc 	andi	r2,r2,3
   157a4:	10001826 	beq	r2,zero,15808 <write+0xc8>
   157a8:	e0bfff17 	ldw	r2,-4(fp)
   157ac:	10800017 	ldw	r2,0(r2)
   157b0:	10800617 	ldw	r2,24(r2)
   157b4:	10001426 	beq	r2,zero,15808 <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   157b8:	e0bfff17 	ldw	r2,-4(fp)
   157bc:	10800017 	ldw	r2,0(r2)
   157c0:	10800617 	ldw	r2,24(r2)
   157c4:	e0fffb17 	ldw	r3,-20(fp)
   157c8:	180d883a 	mov	r6,r3
   157cc:	e17ffc17 	ldw	r5,-16(fp)
   157d0:	e13fff17 	ldw	r4,-4(fp)
   157d4:	103ee83a 	callr	r2
   157d8:	e0bffe15 	stw	r2,-8(fp)
   157dc:	e0bffe17 	ldw	r2,-8(fp)
   157e0:	1000070e 	bge	r2,zero,15800 <write+0xc0>
      {
        ALT_ERRNO = -rval;
   157e4:	00157040 	call	15704 <alt_get_errno>
   157e8:	1007883a 	mov	r3,r2
   157ec:	e0bffe17 	ldw	r2,-8(fp)
   157f0:	0085c83a 	sub	r2,zero,r2
   157f4:	18800015 	stw	r2,0(r3)
        return -1;
   157f8:	00bfffc4 	movi	r2,-1
   157fc:	00000c06 	br	15830 <write+0xf0>
      }
      return rval;
   15800:	e0bffe17 	ldw	r2,-8(fp)
   15804:	00000a06 	br	15830 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
   15808:	00157040 	call	15704 <alt_get_errno>
   1580c:	1007883a 	mov	r3,r2
   15810:	00800344 	movi	r2,13
   15814:	18800015 	stw	r2,0(r3)
   15818:	00000406 	br	1582c <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   1581c:	00157040 	call	15704 <alt_get_errno>
   15820:	1007883a 	mov	r3,r2
   15824:	00801444 	movi	r2,81
   15828:	18800015 	stw	r2,0(r3)
  }
  return -1;
   1582c:	00bfffc4 	movi	r2,-1
}
   15830:	e037883a 	mov	sp,fp
   15834:	dfc00117 	ldw	ra,4(sp)
   15838:	df000017 	ldw	fp,0(sp)
   1583c:	dec00204 	addi	sp,sp,8
   15840:	f800283a 	ret

00015844 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   15844:	defffd04 	addi	sp,sp,-12
   15848:	dfc00215 	stw	ra,8(sp)
   1584c:	df000115 	stw	fp,4(sp)
   15850:	df000104 	addi	fp,sp,4
   15854:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   15858:	d1600604 	addi	r5,gp,-32744
   1585c:	e13fff17 	ldw	r4,-4(fp)
   15860:	0016f040 	call	16f04 <alt_dev_llist_insert>
}
   15864:	e037883a 	mov	sp,fp
   15868:	dfc00117 	ldw	ra,4(sp)
   1586c:	df000017 	ldw	fp,0(sp)
   15870:	dec00204 	addi	sp,sp,8
   15874:	f800283a 	ret

00015878 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   15878:	defffd04 	addi	sp,sp,-12
   1587c:	dfc00215 	stw	ra,8(sp)
   15880:	df000115 	stw	fp,4(sp)
   15884:	df000104 	addi	fp,sp,4
   15888:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2, Nios2);
   1588c:	001783c0 	call	1783c <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   15890:	00800044 	movi	r2,1
   15894:	1001703a 	wrctl	status,r2
}
   15898:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
   1589c:	0001883a 	nop
   158a0:	e037883a 	mov	sp,fp
   158a4:	dfc00117 	ldw	ra,4(sp)
   158a8:	df000017 	ldw	fp,0(sp)
   158ac:	dec00204 	addi	sp,sp,8
   158b0:	f800283a 	ret

000158b4 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   158b4:	defffe04 	addi	sp,sp,-8
   158b8:	dfc00115 	stw	ra,4(sp)
   158bc:	df000015 	stw	fp,0(sp)
   158c0:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER, Interval_Timer);
   158c4:	01c00204 	movi	r7,8
   158c8:	01800144 	movi	r6,5
   158cc:	000b883a 	mov	r5,zero
   158d0:	013fc834 	movhi	r4,65312
   158d4:	21080004 	addi	r4,r4,8192
   158d8:	00164400 	call	16440 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER_2, Interval_Timer_2);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, JTAG_UART);
   158dc:	01800104 	movi	r6,4
   158e0:	000b883a 	mov	r5,zero
   158e4:	010000b4 	movhi	r4,2
   158e8:	21244e04 	addi	r4,r4,-28360
   158ec:	0015ab80 	call	15ab8 <altera_avalon_jtag_uart_init>
   158f0:	010000b4 	movhi	r4,2
   158f4:	21244404 	addi	r4,r4,-28400
   158f8:	00158440 	call	15844 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, SysID);
   158fc:	0001883a 	nop
    ALTERA_UP_AVALON_AUDIO_AND_VIDEO_CONFIG_INIT ( AV_CONFIG, AV_Config);
   15900:	010000b4 	movhi	r4,2
   15904:	21285c04 	addi	r4,r4,-24208
   15908:	00158440 	call	15844 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_INIT ( AUDIO_SUBSYSTEM_AUDIO, Audio_Subsystem_Audio);
   1590c:	010000b4 	movhi	r4,2
   15910:	21286804 	addi	r4,r4,-24160
   15914:	00158440 	call	15844 <alt_dev_reg>
    ALTERA_UP_AVALON_CHARACTER_LCD_INIT ( CHAR_LCD_16X2, Char_LCD_16x2);
   15918:	010000b4 	movhi	r4,2
   1591c:	21287404 	addi	r4,r4,-24112
   15920:	00165700 	call	16570 <alt_up_character_lcd_init>
   15924:	010000b4 	movhi	r4,2
   15928:	21287404 	addi	r4,r4,-24112
   1592c:	00158440 	call	15844 <alt_dev_reg>
    ALTERA_UP_AVALON_RS232_INIT ( SERIAL_PORT, Serial_Port);
   15930:	010000b4 	movhi	r4,2
   15934:	21287f04 	addi	r4,r4,-24068
   15938:	00158440 	call	15844 <alt_dev_reg>
}
   1593c:	0001883a 	nop
   15940:	e037883a 	mov	sp,fp
   15944:	dfc00117 	ldw	ra,4(sp)
   15948:	df000017 	ldw	fp,0(sp)
   1594c:	dec00204 	addi	sp,sp,8
   15950:	f800283a 	ret

00015954 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   15954:	defffa04 	addi	sp,sp,-24
   15958:	dfc00515 	stw	ra,20(sp)
   1595c:	df000415 	stw	fp,16(sp)
   15960:	df000404 	addi	fp,sp,16
   15964:	e13ffe15 	stw	r4,-8(fp)
   15968:	e17ffd15 	stw	r5,-12(fp)
   1596c:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   15970:	e0bffe17 	ldw	r2,-8(fp)
   15974:	10800017 	ldw	r2,0(r2)
   15978:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   1597c:	e0bfff17 	ldw	r2,-4(fp)
   15980:	10c00a04 	addi	r3,r2,40
   15984:	e0bffe17 	ldw	r2,-8(fp)
   15988:	10800217 	ldw	r2,8(r2)
   1598c:	100f883a 	mov	r7,r2
   15990:	e1bffc17 	ldw	r6,-16(fp)
   15994:	e17ffd17 	ldw	r5,-12(fp)
   15998:	1809883a 	mov	r4,r3
   1599c:	0015f780 	call	15f78 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   159a0:	e037883a 	mov	sp,fp
   159a4:	dfc00117 	ldw	ra,4(sp)
   159a8:	df000017 	ldw	fp,0(sp)
   159ac:	dec00204 	addi	sp,sp,8
   159b0:	f800283a 	ret

000159b4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   159b4:	defffa04 	addi	sp,sp,-24
   159b8:	dfc00515 	stw	ra,20(sp)
   159bc:	df000415 	stw	fp,16(sp)
   159c0:	df000404 	addi	fp,sp,16
   159c4:	e13ffe15 	stw	r4,-8(fp)
   159c8:	e17ffd15 	stw	r5,-12(fp)
   159cc:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   159d0:	e0bffe17 	ldw	r2,-8(fp)
   159d4:	10800017 	ldw	r2,0(r2)
   159d8:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   159dc:	e0bfff17 	ldw	r2,-4(fp)
   159e0:	10c00a04 	addi	r3,r2,40
   159e4:	e0bffe17 	ldw	r2,-8(fp)
   159e8:	10800217 	ldw	r2,8(r2)
   159ec:	100f883a 	mov	r7,r2
   159f0:	e1bffc17 	ldw	r6,-16(fp)
   159f4:	e17ffd17 	ldw	r5,-12(fp)
   159f8:	1809883a 	mov	r4,r3
   159fc:	00161980 	call	16198 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   15a00:	e037883a 	mov	sp,fp
   15a04:	dfc00117 	ldw	ra,4(sp)
   15a08:	df000017 	ldw	fp,0(sp)
   15a0c:	dec00204 	addi	sp,sp,8
   15a10:	f800283a 	ret

00015a14 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   15a14:	defffc04 	addi	sp,sp,-16
   15a18:	dfc00315 	stw	ra,12(sp)
   15a1c:	df000215 	stw	fp,8(sp)
   15a20:	df000204 	addi	fp,sp,8
   15a24:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   15a28:	e0bffe17 	ldw	r2,-8(fp)
   15a2c:	10800017 	ldw	r2,0(r2)
   15a30:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   15a34:	e0bfff17 	ldw	r2,-4(fp)
   15a38:	10c00a04 	addi	r3,r2,40
   15a3c:	e0bffe17 	ldw	r2,-8(fp)
   15a40:	10800217 	ldw	r2,8(r2)
   15a44:	100b883a 	mov	r5,r2
   15a48:	1809883a 	mov	r4,r3
   15a4c:	0015e1c0 	call	15e1c <altera_avalon_jtag_uart_close>
}
   15a50:	e037883a 	mov	sp,fp
   15a54:	dfc00117 	ldw	ra,4(sp)
   15a58:	df000017 	ldw	fp,0(sp)
   15a5c:	dec00204 	addi	sp,sp,8
   15a60:	f800283a 	ret

00015a64 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   15a64:	defffa04 	addi	sp,sp,-24
   15a68:	dfc00515 	stw	ra,20(sp)
   15a6c:	df000415 	stw	fp,16(sp)
   15a70:	df000404 	addi	fp,sp,16
   15a74:	e13ffe15 	stw	r4,-8(fp)
   15a78:	e17ffd15 	stw	r5,-12(fp)
   15a7c:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   15a80:	e0bffe17 	ldw	r2,-8(fp)
   15a84:	10800017 	ldw	r2,0(r2)
   15a88:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   15a8c:	e0bfff17 	ldw	r2,-4(fp)
   15a90:	10800a04 	addi	r2,r2,40
   15a94:	e1bffc17 	ldw	r6,-16(fp)
   15a98:	e17ffd17 	ldw	r5,-12(fp)
   15a9c:	1009883a 	mov	r4,r2
   15aa0:	0015e840 	call	15e84 <altera_avalon_jtag_uart_ioctl>
}
   15aa4:	e037883a 	mov	sp,fp
   15aa8:	dfc00117 	ldw	ra,4(sp)
   15aac:	df000017 	ldw	fp,0(sp)
   15ab0:	dec00204 	addi	sp,sp,8
   15ab4:	f800283a 	ret

00015ab8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   15ab8:	defffb04 	addi	sp,sp,-20
   15abc:	dfc00415 	stw	ra,16(sp)
   15ac0:	df000315 	stw	fp,12(sp)
   15ac4:	df000304 	addi	fp,sp,12
   15ac8:	e13fff15 	stw	r4,-4(fp)
   15acc:	e17ffe15 	stw	r5,-8(fp)
   15ad0:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   15ad4:	e0bfff17 	ldw	r2,-4(fp)
   15ad8:	00c00044 	movi	r3,1
   15adc:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   15ae0:	e0bfff17 	ldw	r2,-4(fp)
   15ae4:	10800017 	ldw	r2,0(r2)
   15ae8:	10800104 	addi	r2,r2,4
   15aec:	1007883a 	mov	r3,r2
   15af0:	e0bfff17 	ldw	r2,-4(fp)
   15af4:	10800817 	ldw	r2,32(r2)
   15af8:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
   15afc:	e0bffd17 	ldw	r2,-12(fp)
   15b00:	01800074 	movhi	r6,1
   15b04:	3196db04 	addi	r6,r6,23404
   15b08:	e17fff17 	ldw	r5,-4(fp)
   15b0c:	1009883a 	mov	r4,r2
   15b10:	00172740 	call	17274 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   15b14:	e0bfff17 	ldw	r2,-4(fp)
   15b18:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   15b1c:	e0bfff17 	ldw	r2,-4(fp)
   15b20:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   15b24:	d0e73b17 	ldw	r3,-25364(gp)
   15b28:	e1ffff17 	ldw	r7,-4(fp)
   15b2c:	01800074 	movhi	r6,1
   15b30:	31975f04 	addi	r6,r6,23932
   15b34:	180b883a 	mov	r5,r3
   15b38:	1009883a 	mov	r4,r2
   15b3c:	0016d480 	call	16d48 <alt_alarm_start>
   15b40:	1000040e 	bge	r2,zero,15b54 <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   15b44:	e0ffff17 	ldw	r3,-4(fp)
   15b48:	00a00034 	movhi	r2,32768
   15b4c:	10bfffc4 	addi	r2,r2,-1
   15b50:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   15b54:	0001883a 	nop
   15b58:	e037883a 	mov	sp,fp
   15b5c:	dfc00117 	ldw	ra,4(sp)
   15b60:	df000017 	ldw	fp,0(sp)
   15b64:	dec00204 	addi	sp,sp,8
   15b68:	f800283a 	ret

00015b6c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   15b6c:	defff704 	addi	sp,sp,-36
   15b70:	df000815 	stw	fp,32(sp)
   15b74:	df000804 	addi	fp,sp,32
   15b78:	e13ff915 	stw	r4,-28(fp)
   15b7c:	e17ff815 	stw	r5,-32(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   15b80:	e0bff917 	ldw	r2,-28(fp)
   15b84:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
   15b88:	e0bffd17 	ldw	r2,-12(fp)
   15b8c:	10800017 	ldw	r2,0(r2)
   15b90:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   15b94:	e0bffc17 	ldw	r2,-16(fp)
   15b98:	10800104 	addi	r2,r2,4
   15b9c:	10800037 	ldwio	r2,0(r2)
   15ba0:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   15ba4:	e0bffb17 	ldw	r2,-20(fp)
   15ba8:	1080c00c 	andi	r2,r2,768
   15bac:	10006d26 	beq	r2,zero,15d64 <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   15bb0:	e0bffb17 	ldw	r2,-20(fp)
   15bb4:	1080400c 	andi	r2,r2,256
   15bb8:	10003526 	beq	r2,zero,15c90 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   15bbc:	00800074 	movhi	r2,1
   15bc0:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   15bc4:	e0bffd17 	ldw	r2,-12(fp)
   15bc8:	10800a17 	ldw	r2,40(r2)
   15bcc:	10800044 	addi	r2,r2,1
   15bd0:	1081ffcc 	andi	r2,r2,2047
   15bd4:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   15bd8:	e0bffd17 	ldw	r2,-12(fp)
   15bdc:	10800b17 	ldw	r2,44(r2)
   15be0:	e0fffa17 	ldw	r3,-24(fp)
   15be4:	18801526 	beq	r3,r2,15c3c <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   15be8:	e0bffc17 	ldw	r2,-16(fp)
   15bec:	10800037 	ldwio	r2,0(r2)
   15bf0:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   15bf4:	e0bfff17 	ldw	r2,-4(fp)
   15bf8:	10a0000c 	andi	r2,r2,32768
   15bfc:	10001126 	beq	r2,zero,15c44 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   15c00:	e0bffd17 	ldw	r2,-12(fp)
   15c04:	10800a17 	ldw	r2,40(r2)
   15c08:	e0ffff17 	ldw	r3,-4(fp)
   15c0c:	1809883a 	mov	r4,r3
   15c10:	e0fffd17 	ldw	r3,-12(fp)
   15c14:	1885883a 	add	r2,r3,r2
   15c18:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   15c1c:	e0bffd17 	ldw	r2,-12(fp)
   15c20:	10800a17 	ldw	r2,40(r2)
   15c24:	10800044 	addi	r2,r2,1
   15c28:	10c1ffcc 	andi	r3,r2,2047
   15c2c:	e0bffd17 	ldw	r2,-12(fp)
   15c30:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   15c34:	0001883a 	nop
      {
   15c38:	003fe206 	br	15bc4 <altera_avalon_jtag_uart_irq+0x58>
          break;
   15c3c:	0001883a 	nop
   15c40:	00000106 	br	15c48 <altera_avalon_jtag_uart_irq+0xdc>
          break;
   15c44:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   15c48:	e0bfff17 	ldw	r2,-4(fp)
   15c4c:	10bfffec 	andhi	r2,r2,65535
   15c50:	10000f26 	beq	r2,zero,15c90 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   15c54:	e0bffd17 	ldw	r2,-12(fp)
   15c58:	10c00817 	ldw	r3,32(r2)
   15c5c:	00bfff84 	movi	r2,-2
   15c60:	1886703a 	and	r3,r3,r2
   15c64:	e0bffd17 	ldw	r2,-12(fp)
   15c68:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   15c6c:	e0bffc17 	ldw	r2,-16(fp)
   15c70:	10800104 	addi	r2,r2,4
   15c74:	1007883a 	mov	r3,r2
   15c78:	e0bffd17 	ldw	r2,-12(fp)
   15c7c:	10800817 	ldw	r2,32(r2)
   15c80:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   15c84:	e0bffc17 	ldw	r2,-16(fp)
   15c88:	10800104 	addi	r2,r2,4
   15c8c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   15c90:	e0bffb17 	ldw	r2,-20(fp)
   15c94:	1080800c 	andi	r2,r2,512
   15c98:	103fbe26 	beq	r2,zero,15b94 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   15c9c:	e0bffb17 	ldw	r2,-20(fp)
   15ca0:	1004d43a 	srli	r2,r2,16
   15ca4:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   15ca8:	00001406 	br	15cfc <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   15cac:	e0bffc17 	ldw	r2,-16(fp)
   15cb0:	e0fffd17 	ldw	r3,-12(fp)
   15cb4:	18c00d17 	ldw	r3,52(r3)
   15cb8:	e13ffd17 	ldw	r4,-12(fp)
   15cbc:	20c7883a 	add	r3,r4,r3
   15cc0:	18c20e03 	ldbu	r3,2104(r3)
   15cc4:	18c03fcc 	andi	r3,r3,255
   15cc8:	18c0201c 	xori	r3,r3,128
   15ccc:	18ffe004 	addi	r3,r3,-128
   15cd0:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   15cd4:	e0bffd17 	ldw	r2,-12(fp)
   15cd8:	10800d17 	ldw	r2,52(r2)
   15cdc:	10800044 	addi	r2,r2,1
   15ce0:	10c1ffcc 	andi	r3,r2,2047
   15ce4:	e0bffd17 	ldw	r2,-12(fp)
   15ce8:	10c00d15 	stw	r3,52(r2)
   15cec:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   15cf0:	e0bffe17 	ldw	r2,-8(fp)
   15cf4:	10bfffc4 	addi	r2,r2,-1
   15cf8:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
   15cfc:	e0bffe17 	ldw	r2,-8(fp)
   15d00:	10000526 	beq	r2,zero,15d18 <altera_avalon_jtag_uart_irq+0x1ac>
   15d04:	e0bffd17 	ldw	r2,-12(fp)
   15d08:	10c00d17 	ldw	r3,52(r2)
   15d0c:	e0bffd17 	ldw	r2,-12(fp)
   15d10:	10800c17 	ldw	r2,48(r2)
   15d14:	18bfe51e 	bne	r3,r2,15cac <altera_avalon_jtag_uart_irq+0x140>
      }

      if (space > 0)
   15d18:	e0bffe17 	ldw	r2,-8(fp)
   15d1c:	103f9d26 	beq	r2,zero,15b94 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   15d20:	e0bffd17 	ldw	r2,-12(fp)
   15d24:	10c00817 	ldw	r3,32(r2)
   15d28:	00bfff44 	movi	r2,-3
   15d2c:	1886703a 	and	r3,r3,r2
   15d30:	e0bffd17 	ldw	r2,-12(fp)
   15d34:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   15d38:	e0bffd17 	ldw	r2,-12(fp)
   15d3c:	10800017 	ldw	r2,0(r2)
   15d40:	10800104 	addi	r2,r2,4
   15d44:	1007883a 	mov	r3,r2
   15d48:	e0bffd17 	ldw	r2,-12(fp)
   15d4c:	10800817 	ldw	r2,32(r2)
   15d50:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   15d54:	e0bffc17 	ldw	r2,-16(fp)
   15d58:	10800104 	addi	r2,r2,4
   15d5c:	10800037 	ldwio	r2,0(r2)
  {
   15d60:	003f8c06 	br	15b94 <altera_avalon_jtag_uart_irq+0x28>
      break;
   15d64:	0001883a 	nop
      }
    }
  }
}
   15d68:	0001883a 	nop
   15d6c:	e037883a 	mov	sp,fp
   15d70:	df000017 	ldw	fp,0(sp)
   15d74:	dec00104 	addi	sp,sp,4
   15d78:	f800283a 	ret

00015d7c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   15d7c:	defffc04 	addi	sp,sp,-16
   15d80:	df000315 	stw	fp,12(sp)
   15d84:	df000304 	addi	fp,sp,12
   15d88:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   15d8c:	e0bffd17 	ldw	r2,-12(fp)
   15d90:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   15d94:	e0bfff17 	ldw	r2,-4(fp)
   15d98:	10800017 	ldw	r2,0(r2)
   15d9c:	10800104 	addi	r2,r2,4
   15da0:	10800037 	ldwio	r2,0(r2)
   15da4:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   15da8:	e0bffe17 	ldw	r2,-8(fp)
   15dac:	1081000c 	andi	r2,r2,1024
   15db0:	10000b26 	beq	r2,zero,15de0 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   15db4:	e0bfff17 	ldw	r2,-4(fp)
   15db8:	10800017 	ldw	r2,0(r2)
   15dbc:	10800104 	addi	r2,r2,4
   15dc0:	1007883a 	mov	r3,r2
   15dc4:	e0bfff17 	ldw	r2,-4(fp)
   15dc8:	10800817 	ldw	r2,32(r2)
   15dcc:	10810014 	ori	r2,r2,1024
   15dd0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   15dd4:	e0bfff17 	ldw	r2,-4(fp)
   15dd8:	10000915 	stw	zero,36(r2)
   15ddc:	00000a06 	br	15e08 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   15de0:	e0bfff17 	ldw	r2,-4(fp)
   15de4:	10c00917 	ldw	r3,36(r2)
   15de8:	00a00034 	movhi	r2,32768
   15dec:	10bfff04 	addi	r2,r2,-4
   15df0:	10c00536 	bltu	r2,r3,15e08 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   15df4:	e0bfff17 	ldw	r2,-4(fp)
   15df8:	10800917 	ldw	r2,36(r2)
   15dfc:	10c00044 	addi	r3,r2,1
   15e00:	e0bfff17 	ldw	r2,-4(fp)
   15e04:	10c00915 	stw	r3,36(r2)
   15e08:	d0a73b17 	ldw	r2,-25364(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   15e0c:	e037883a 	mov	sp,fp
   15e10:	df000017 	ldw	fp,0(sp)
   15e14:	dec00104 	addi	sp,sp,4
   15e18:	f800283a 	ret

00015e1c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   15e1c:	defffd04 	addi	sp,sp,-12
   15e20:	df000215 	stw	fp,8(sp)
   15e24:	df000204 	addi	fp,sp,8
   15e28:	e13fff15 	stw	r4,-4(fp)
   15e2c:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   15e30:	00000506 	br	15e48 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   15e34:	e0bffe17 	ldw	r2,-8(fp)
   15e38:	1090000c 	andi	r2,r2,16384
   15e3c:	10000226 	beq	r2,zero,15e48 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   15e40:	00bffd44 	movi	r2,-11
   15e44:	00000b06 	br	15e74 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   15e48:	e0bfff17 	ldw	r2,-4(fp)
   15e4c:	10c00d17 	ldw	r3,52(r2)
   15e50:	e0bfff17 	ldw	r2,-4(fp)
   15e54:	10800c17 	ldw	r2,48(r2)
   15e58:	18800526 	beq	r3,r2,15e70 <altera_avalon_jtag_uart_close+0x54>
   15e5c:	e0bfff17 	ldw	r2,-4(fp)
   15e60:	10c00917 	ldw	r3,36(r2)
   15e64:	e0bfff17 	ldw	r2,-4(fp)
   15e68:	10800117 	ldw	r2,4(r2)
   15e6c:	18bff136 	bltu	r3,r2,15e34 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
   15e70:	0005883a 	mov	r2,zero
}
   15e74:	e037883a 	mov	sp,fp
   15e78:	df000017 	ldw	fp,0(sp)
   15e7c:	dec00104 	addi	sp,sp,4
   15e80:	f800283a 	ret

00015e84 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   15e84:	defffa04 	addi	sp,sp,-24
   15e88:	df000515 	stw	fp,20(sp)
   15e8c:	df000504 	addi	fp,sp,20
   15e90:	e13ffd15 	stw	r4,-12(fp)
   15e94:	e17ffc15 	stw	r5,-16(fp)
   15e98:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
   15e9c:	00bff9c4 	movi	r2,-25
   15ea0:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
   15ea4:	e0bffc17 	ldw	r2,-16(fp)
   15ea8:	109a8060 	cmpeqi	r2,r2,27137
   15eac:	1000041e 	bne	r2,zero,15ec0 <altera_avalon_jtag_uart_ioctl+0x3c>
   15eb0:	e0bffc17 	ldw	r2,-16(fp)
   15eb4:	109a80a0 	cmpeqi	r2,r2,27138
   15eb8:	1000181e 	bne	r2,zero,15f1c <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   15ebc:	00002906 	br	15f64 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
   15ec0:	e0bffd17 	ldw	r2,-12(fp)
   15ec4:	10c00117 	ldw	r3,4(r2)
   15ec8:	00a00034 	movhi	r2,32768
   15ecc:	10bfffc4 	addi	r2,r2,-1
   15ed0:	18802126 	beq	r3,r2,15f58 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
   15ed4:	e0bffb17 	ldw	r2,-20(fp)
   15ed8:	10800017 	ldw	r2,0(r2)
   15edc:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   15ee0:	e0bffe17 	ldw	r2,-8(fp)
   15ee4:	10800090 	cmplti	r2,r2,2
   15ee8:	1000061e 	bne	r2,zero,15f04 <altera_avalon_jtag_uart_ioctl+0x80>
   15eec:	e0fffe17 	ldw	r3,-8(fp)
   15ef0:	00a00034 	movhi	r2,32768
   15ef4:	10bfffc4 	addi	r2,r2,-1
   15ef8:	18800226 	beq	r3,r2,15f04 <altera_avalon_jtag_uart_ioctl+0x80>
   15efc:	e0bffe17 	ldw	r2,-8(fp)
   15f00:	00000206 	br	15f0c <altera_avalon_jtag_uart_ioctl+0x88>
   15f04:	00a00034 	movhi	r2,32768
   15f08:	10bfff84 	addi	r2,r2,-2
   15f0c:	e0fffd17 	ldw	r3,-12(fp)
   15f10:	18800115 	stw	r2,4(r3)
      rc = 0;
   15f14:	e03fff15 	stw	zero,-4(fp)
    break;
   15f18:	00000f06 	br	15f58 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
   15f1c:	e0bffd17 	ldw	r2,-12(fp)
   15f20:	10c00117 	ldw	r3,4(r2)
   15f24:	00a00034 	movhi	r2,32768
   15f28:	10bfffc4 	addi	r2,r2,-1
   15f2c:	18800c26 	beq	r3,r2,15f60 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   15f30:	e0bffd17 	ldw	r2,-12(fp)
   15f34:	10c00917 	ldw	r3,36(r2)
   15f38:	e0bffd17 	ldw	r2,-12(fp)
   15f3c:	10800117 	ldw	r2,4(r2)
   15f40:	1885803a 	cmpltu	r2,r3,r2
   15f44:	10c03fcc 	andi	r3,r2,255
   15f48:	e0bffb17 	ldw	r2,-20(fp)
   15f4c:	10c00015 	stw	r3,0(r2)
      rc = 0;
   15f50:	e03fff15 	stw	zero,-4(fp)
    break;
   15f54:	00000206 	br	15f60 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
   15f58:	0001883a 	nop
   15f5c:	00000106 	br	15f64 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
   15f60:	0001883a 	nop
  }

  return rc;
   15f64:	e0bfff17 	ldw	r2,-4(fp)
}
   15f68:	e037883a 	mov	sp,fp
   15f6c:	df000017 	ldw	fp,0(sp)
   15f70:	dec00104 	addi	sp,sp,4
   15f74:	f800283a 	ret

00015f78 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   15f78:	defff304 	addi	sp,sp,-52
   15f7c:	dfc00c15 	stw	ra,48(sp)
   15f80:	df000b15 	stw	fp,44(sp)
   15f84:	df000b04 	addi	fp,sp,44
   15f88:	e13ff815 	stw	r4,-32(fp)
   15f8c:	e17ff715 	stw	r5,-36(fp)
   15f90:	e1bff615 	stw	r6,-40(fp)
   15f94:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
   15f98:	e0bff717 	ldw	r2,-36(fp)
   15f9c:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   15fa0:	00004706 	br	160c0 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   15fa4:	e0bff817 	ldw	r2,-32(fp)
   15fa8:	10800a17 	ldw	r2,40(r2)
   15fac:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
   15fb0:	e0bff817 	ldw	r2,-32(fp)
   15fb4:	10800b17 	ldw	r2,44(r2)
   15fb8:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
   15fbc:	e0fffd17 	ldw	r3,-12(fp)
   15fc0:	e0bffc17 	ldw	r2,-16(fp)
   15fc4:	18800536 	bltu	r3,r2,15fdc <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   15fc8:	e0fffd17 	ldw	r3,-12(fp)
   15fcc:	e0bffc17 	ldw	r2,-16(fp)
   15fd0:	1885c83a 	sub	r2,r3,r2
   15fd4:	e0bffe15 	stw	r2,-8(fp)
   15fd8:	00000406 	br	15fec <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   15fdc:	00c20004 	movi	r3,2048
   15fe0:	e0bffc17 	ldw	r2,-16(fp)
   15fe4:	1885c83a 	sub	r2,r3,r2
   15fe8:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   15fec:	e0bffe17 	ldw	r2,-8(fp)
   15ff0:	10001e26 	beq	r2,zero,1606c <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   15ff4:	e0fff617 	ldw	r3,-40(fp)
   15ff8:	e0bffe17 	ldw	r2,-8(fp)
   15ffc:	1880022e 	bgeu	r3,r2,16008 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   16000:	e0bff617 	ldw	r2,-40(fp)
   16004:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   16008:	e0bff817 	ldw	r2,-32(fp)
   1600c:	10c00e04 	addi	r3,r2,56
   16010:	e0bffc17 	ldw	r2,-16(fp)
   16014:	1885883a 	add	r2,r3,r2
   16018:	e1bffe17 	ldw	r6,-8(fp)
   1601c:	100b883a 	mov	r5,r2
   16020:	e13fff17 	ldw	r4,-4(fp)
   16024:	000acd80 	call	acd8 <memcpy>
      ptr   += n;
   16028:	e0ffff17 	ldw	r3,-4(fp)
   1602c:	e0bffe17 	ldw	r2,-8(fp)
   16030:	1885883a 	add	r2,r3,r2
   16034:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
   16038:	e0fff617 	ldw	r3,-40(fp)
   1603c:	e0bffe17 	ldw	r2,-8(fp)
   16040:	1885c83a 	sub	r2,r3,r2
   16044:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   16048:	e0fffc17 	ldw	r3,-16(fp)
   1604c:	e0bffe17 	ldw	r2,-8(fp)
   16050:	1885883a 	add	r2,r3,r2
   16054:	10c1ffcc 	andi	r3,r2,2047
   16058:	e0bff817 	ldw	r2,-32(fp)
   1605c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   16060:	e0bff617 	ldw	r2,-40(fp)
   16064:	00bfcf16 	blt	zero,r2,15fa4 <altera_avalon_jtag_uart_read+0x2c>
   16068:	00000106 	br	16070 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
   1606c:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
   16070:	e0ffff17 	ldw	r3,-4(fp)
   16074:	e0bff717 	ldw	r2,-36(fp)
   16078:	1880141e 	bne	r3,r2,160cc <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   1607c:	e0bff517 	ldw	r2,-44(fp)
   16080:	1090000c 	andi	r2,r2,16384
   16084:	1000131e 	bne	r2,zero,160d4 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   16088:	0001883a 	nop
   1608c:	e0bff817 	ldw	r2,-32(fp)
   16090:	10800a17 	ldw	r2,40(r2)
   16094:	e0fffd17 	ldw	r3,-12(fp)
   16098:	1880051e 	bne	r3,r2,160b0 <altera_avalon_jtag_uart_read+0x138>
   1609c:	e0bff817 	ldw	r2,-32(fp)
   160a0:	10c00917 	ldw	r3,36(r2)
   160a4:	e0bff817 	ldw	r2,-32(fp)
   160a8:	10800117 	ldw	r2,4(r2)
   160ac:	18bff736 	bltu	r3,r2,1608c <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   160b0:	e0bff817 	ldw	r2,-32(fp)
   160b4:	10800a17 	ldw	r2,40(r2)
   160b8:	e0fffd17 	ldw	r3,-12(fp)
   160bc:	18800726 	beq	r3,r2,160dc <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
   160c0:	e0bff617 	ldw	r2,-40(fp)
   160c4:	00bfb716 	blt	zero,r2,15fa4 <altera_avalon_jtag_uart_read+0x2c>
   160c8:	00000506 	br	160e0 <altera_avalon_jtag_uart_read+0x168>
      break;
   160cc:	0001883a 	nop
   160d0:	00000306 	br	160e0 <altera_avalon_jtag_uart_read+0x168>
      break;
   160d4:	0001883a 	nop
   160d8:	00000106 	br	160e0 <altera_avalon_jtag_uart_read+0x168>
      break;
   160dc:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   160e0:	e0ffff17 	ldw	r3,-4(fp)
   160e4:	e0bff717 	ldw	r2,-36(fp)
   160e8:	18801926 	beq	r3,r2,16150 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
   160ec:	0005303a 	rdctl	r2,status
   160f0:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   160f4:	e0fff917 	ldw	r3,-28(fp)
   160f8:	00bfff84 	movi	r2,-2
   160fc:	1884703a 	and	r2,r3,r2
   16100:	1001703a 	wrctl	status,r2
  return context;
   16104:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   16108:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   1610c:	e0bff817 	ldw	r2,-32(fp)
   16110:	10800817 	ldw	r2,32(r2)
   16114:	10c00054 	ori	r3,r2,1
   16118:	e0bff817 	ldw	r2,-32(fp)
   1611c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   16120:	e0bff817 	ldw	r2,-32(fp)
   16124:	10800017 	ldw	r2,0(r2)
   16128:	10800104 	addi	r2,r2,4
   1612c:	1007883a 	mov	r3,r2
   16130:	e0bff817 	ldw	r2,-32(fp)
   16134:	10800817 	ldw	r2,32(r2)
   16138:	18800035 	stwio	r2,0(r3)
   1613c:	e0bffb17 	ldw	r2,-20(fp)
   16140:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   16144:	e0bffa17 	ldw	r2,-24(fp)
   16148:	1001703a 	wrctl	status,r2
}
   1614c:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   16150:	e0ffff17 	ldw	r3,-4(fp)
   16154:	e0bff717 	ldw	r2,-36(fp)
   16158:	18800426 	beq	r3,r2,1616c <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
   1615c:	e0ffff17 	ldw	r3,-4(fp)
   16160:	e0bff717 	ldw	r2,-36(fp)
   16164:	1885c83a 	sub	r2,r3,r2
   16168:	00000606 	br	16184 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   1616c:	e0bff517 	ldw	r2,-44(fp)
   16170:	1090000c 	andi	r2,r2,16384
   16174:	10000226 	beq	r2,zero,16180 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
   16178:	00bffd44 	movi	r2,-11
   1617c:	00000106 	br	16184 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   16180:	00bffec4 	movi	r2,-5
}
   16184:	e037883a 	mov	sp,fp
   16188:	dfc00117 	ldw	ra,4(sp)
   1618c:	df000017 	ldw	fp,0(sp)
   16190:	dec00204 	addi	sp,sp,8
   16194:	f800283a 	ret

00016198 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   16198:	defff304 	addi	sp,sp,-52
   1619c:	dfc00c15 	stw	ra,48(sp)
   161a0:	df000b15 	stw	fp,44(sp)
   161a4:	df000b04 	addi	fp,sp,44
   161a8:	e13ff815 	stw	r4,-32(fp)
   161ac:	e17ff715 	stw	r5,-36(fp)
   161b0:	e1bff615 	stw	r6,-40(fp)
   161b4:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   161b8:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   161bc:	e0bff717 	ldw	r2,-36(fp)
   161c0:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   161c4:	00003706 	br	162a4 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   161c8:	e0bff817 	ldw	r2,-32(fp)
   161cc:	10800c17 	ldw	r2,48(r2)
   161d0:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
   161d4:	e0bff817 	ldw	r2,-32(fp)
   161d8:	10800d17 	ldw	r2,52(r2)
   161dc:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
   161e0:	e0fffc17 	ldw	r3,-16(fp)
   161e4:	e0bfff17 	ldw	r2,-4(fp)
   161e8:	1880062e 	bgeu	r3,r2,16204 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   161ec:	e0ffff17 	ldw	r3,-4(fp)
   161f0:	e0bffc17 	ldw	r2,-16(fp)
   161f4:	1885c83a 	sub	r2,r3,r2
   161f8:	10bfffc4 	addi	r2,r2,-1
   161fc:	e0bffe15 	stw	r2,-8(fp)
   16200:	00000b06 	br	16230 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   16204:	e0bfff17 	ldw	r2,-4(fp)
   16208:	10000526 	beq	r2,zero,16220 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   1620c:	00c20004 	movi	r3,2048
   16210:	e0bffc17 	ldw	r2,-16(fp)
   16214:	1885c83a 	sub	r2,r3,r2
   16218:	e0bffe15 	stw	r2,-8(fp)
   1621c:	00000406 	br	16230 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   16220:	00c1ffc4 	movi	r3,2047
   16224:	e0bffc17 	ldw	r2,-16(fp)
   16228:	1885c83a 	sub	r2,r3,r2
   1622c:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   16230:	e0bffe17 	ldw	r2,-8(fp)
   16234:	10001e26 	beq	r2,zero,162b0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   16238:	e0fff617 	ldw	r3,-40(fp)
   1623c:	e0bffe17 	ldw	r2,-8(fp)
   16240:	1880022e 	bgeu	r3,r2,1624c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   16244:	e0bff617 	ldw	r2,-40(fp)
   16248:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   1624c:	e0bff817 	ldw	r2,-32(fp)
   16250:	10c20e04 	addi	r3,r2,2104
   16254:	e0bffc17 	ldw	r2,-16(fp)
   16258:	1885883a 	add	r2,r3,r2
   1625c:	e1bffe17 	ldw	r6,-8(fp)
   16260:	e17ff717 	ldw	r5,-36(fp)
   16264:	1009883a 	mov	r4,r2
   16268:	000acd80 	call	acd8 <memcpy>
      ptr   += n;
   1626c:	e0fff717 	ldw	r3,-36(fp)
   16270:	e0bffe17 	ldw	r2,-8(fp)
   16274:	1885883a 	add	r2,r3,r2
   16278:	e0bff715 	stw	r2,-36(fp)
      count -= n;
   1627c:	e0fff617 	ldw	r3,-40(fp)
   16280:	e0bffe17 	ldw	r2,-8(fp)
   16284:	1885c83a 	sub	r2,r3,r2
   16288:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   1628c:	e0fffc17 	ldw	r3,-16(fp)
   16290:	e0bffe17 	ldw	r2,-8(fp)
   16294:	1885883a 	add	r2,r3,r2
   16298:	10c1ffcc 	andi	r3,r2,2047
   1629c:	e0bff817 	ldw	r2,-32(fp)
   162a0:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
   162a4:	e0bff617 	ldw	r2,-40(fp)
   162a8:	00bfc716 	blt	zero,r2,161c8 <altera_avalon_jtag_uart_write+0x30>
   162ac:	00000106 	br	162b4 <altera_avalon_jtag_uart_write+0x11c>
        break;
   162b0:	0001883a 	nop
  NIOS2_READ_STATUS (context);
   162b4:	0005303a 	rdctl	r2,status
   162b8:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   162bc:	e0fff917 	ldw	r3,-28(fp)
   162c0:	00bfff84 	movi	r2,-2
   162c4:	1884703a 	and	r2,r3,r2
   162c8:	1001703a 	wrctl	status,r2
  return context;
   162cc:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   162d0:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   162d4:	e0bff817 	ldw	r2,-32(fp)
   162d8:	10800817 	ldw	r2,32(r2)
   162dc:	10c00094 	ori	r3,r2,2
   162e0:	e0bff817 	ldw	r2,-32(fp)
   162e4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   162e8:	e0bff817 	ldw	r2,-32(fp)
   162ec:	10800017 	ldw	r2,0(r2)
   162f0:	10800104 	addi	r2,r2,4
   162f4:	1007883a 	mov	r3,r2
   162f8:	e0bff817 	ldw	r2,-32(fp)
   162fc:	10800817 	ldw	r2,32(r2)
   16300:	18800035 	stwio	r2,0(r3)
   16304:	e0bffb17 	ldw	r2,-20(fp)
   16308:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   1630c:	e0bffa17 	ldw	r2,-24(fp)
   16310:	1001703a 	wrctl	status,r2
}
   16314:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   16318:	e0bff617 	ldw	r2,-40(fp)
   1631c:	0080100e 	bge	zero,r2,16360 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   16320:	e0bff517 	ldw	r2,-44(fp)
   16324:	1090000c 	andi	r2,r2,16384
   16328:	1000101e 	bne	r2,zero,1636c <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   1632c:	0001883a 	nop
   16330:	e0bff817 	ldw	r2,-32(fp)
   16334:	10800d17 	ldw	r2,52(r2)
   16338:	e0ffff17 	ldw	r3,-4(fp)
   1633c:	1880051e 	bne	r3,r2,16354 <altera_avalon_jtag_uart_write+0x1bc>
   16340:	e0bff817 	ldw	r2,-32(fp)
   16344:	10c00917 	ldw	r3,36(r2)
   16348:	e0bff817 	ldw	r2,-32(fp)
   1634c:	10800117 	ldw	r2,4(r2)
   16350:	18bff736 	bltu	r3,r2,16330 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   16354:	e0bff817 	ldw	r2,-32(fp)
   16358:	10800917 	ldw	r2,36(r2)
   1635c:	1000051e 	bne	r2,zero,16374 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
   16360:	e0bff617 	ldw	r2,-40(fp)
   16364:	00bfcf16 	blt	zero,r2,162a4 <altera_avalon_jtag_uart_write+0x10c>
   16368:	00000306 	br	16378 <altera_avalon_jtag_uart_write+0x1e0>
        break;
   1636c:	0001883a 	nop
   16370:	00000106 	br	16378 <altera_avalon_jtag_uart_write+0x1e0>
         break;
   16374:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   16378:	e0fff717 	ldw	r3,-36(fp)
   1637c:	e0bffd17 	ldw	r2,-12(fp)
   16380:	18800426 	beq	r3,r2,16394 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
   16384:	e0fff717 	ldw	r3,-36(fp)
   16388:	e0bffd17 	ldw	r2,-12(fp)
   1638c:	1885c83a 	sub	r2,r3,r2
   16390:	00000606 	br	163ac <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
   16394:	e0bff517 	ldw	r2,-44(fp)
   16398:	1090000c 	andi	r2,r2,16384
   1639c:	10000226 	beq	r2,zero,163a8 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
   163a0:	00bffd44 	movi	r2,-11
   163a4:	00000106 	br	163ac <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   163a8:	00bffec4 	movi	r2,-5
}
   163ac:	e037883a 	mov	sp,fp
   163b0:	dfc00117 	ldw	ra,4(sp)
   163b4:	df000017 	ldw	fp,0(sp)
   163b8:	dec00204 	addi	sp,sp,8
   163bc:	f800283a 	ret

000163c0 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   163c0:	defff904 	addi	sp,sp,-28
   163c4:	dfc00615 	stw	ra,24(sp)
   163c8:	df000515 	stw	fp,20(sp)
   163cc:	df000504 	addi	fp,sp,20
   163d0:	e13ffc15 	stw	r4,-16(fp)
   163d4:	e17ffb15 	stw	r5,-20(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   163d8:	0007883a 	mov	r3,zero
   163dc:	e0bffc17 	ldw	r2,-16(fp)
   163e0:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   163e4:	e0bffc17 	ldw	r2,-16(fp)
   163e8:	10800104 	addi	r2,r2,4
   163ec:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
   163f0:	0005303a 	rdctl	r2,status
   163f4:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   163f8:	e0fffd17 	ldw	r3,-12(fp)
   163fc:	00bfff84 	movi	r2,-2
   16400:	1884703a 	and	r2,r3,r2
   16404:	1001703a 	wrctl	status,r2
  return context;
   16408:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   1640c:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
   16410:	00177100 	call	17710 <alt_tick>
   16414:	e0bfff17 	ldw	r2,-4(fp)
   16418:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   1641c:	e0bffe17 	ldw	r2,-8(fp)
   16420:	1001703a 	wrctl	status,r2
}
   16424:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
   16428:	0001883a 	nop
   1642c:	e037883a 	mov	sp,fp
   16430:	dfc00117 	ldw	ra,4(sp)
   16434:	df000017 	ldw	fp,0(sp)
   16438:	dec00204 	addi	sp,sp,8
   1643c:	f800283a 	ret

00016440 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   16440:	defff904 	addi	sp,sp,-28
   16444:	dfc00615 	stw	ra,24(sp)
   16448:	df000515 	stw	fp,20(sp)
   1644c:	df000504 	addi	fp,sp,20
   16450:	e13ffe15 	stw	r4,-8(fp)
   16454:	e17ffd15 	stw	r5,-12(fp)
   16458:	e1bffc15 	stw	r6,-16(fp)
   1645c:	e1fffb15 	stw	r7,-20(fp)
   16460:	e0bffb17 	ldw	r2,-20(fp)
   16464:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   16468:	d0a73b17 	ldw	r2,-25364(gp)
   1646c:	1000031e 	bne	r2,zero,1647c <alt_avalon_timer_sc_init+0x3c>
  {
    _alt_tick_rate = nticks;
   16470:	e0bfff17 	ldw	r2,-4(fp)
   16474:	d0a73b15 	stw	r2,-25364(gp)
    return 0;
   16478:	00000106 	br	16480 <alt_avalon_timer_sc_init+0x40>
  }
  else
  {
    return -1;
   1647c:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   16480:	e0bffe17 	ldw	r2,-8(fp)
   16484:	10800104 	addi	r2,r2,4
   16488:	00c001c4 	movi	r3,7
   1648c:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
   16490:	01800074 	movhi	r6,1
   16494:	3198f004 	addi	r6,r6,25536
   16498:	e17ffe17 	ldw	r5,-8(fp)
   1649c:	e13ffc17 	ldw	r4,-16(fp)
   164a0:	00172740 	call	17274 <alt_irq_register>
#endif  
}
   164a4:	0001883a 	nop
   164a8:	e037883a 	mov	sp,fp
   164ac:	dfc00117 	ldw	ra,4(sp)
   164b0:	df000017 	ldw	fp,0(sp)
   164b4:	dec00204 	addi	sp,sp,8
   164b8:	f800283a 	ret

000164bc <get_DDRAM_addr>:
 * @sa the datasheet for the LCD Display Controller on the DE2 Board
 * @note the function requires that the input are in the valid range
 *
 **/
unsigned char get_DDRAM_addr(unsigned x_pos, unsigned y_pos)
{
   164bc:	defffc04 	addi	sp,sp,-16
   164c0:	df000315 	stw	fp,12(sp)
   164c4:	df000304 	addi	fp,sp,12
   164c8:	e13ffe15 	stw	r4,-8(fp)
   164cc:	e17ffd15 	stw	r5,-12(fp)
	//assume valid inputs
	unsigned char addr = 0x00000000;
   164d0:	e03fffc5 	stb	zero,-1(fp)
	if (y_pos == 0)
   164d4:	e0bffd17 	ldw	r2,-12(fp)
   164d8:	1000061e 	bne	r2,zero,164f4 <get_DDRAM_addr+0x38>
	{
		addr |= x_pos;
   164dc:	e0bffe17 	ldw	r2,-8(fp)
   164e0:	1007883a 	mov	r3,r2
   164e4:	e0bfffc3 	ldbu	r2,-1(fp)
   164e8:	10c4b03a 	or	r2,r2,r3
   164ec:	e0bfffc5 	stb	r2,-1(fp)
   164f0:	00000806 	br	16514 <get_DDRAM_addr+0x58>
	}
	else
	{
		addr |= x_pos;
   164f4:	e0bffe17 	ldw	r2,-8(fp)
   164f8:	1007883a 	mov	r3,r2
   164fc:	e0bfffc3 	ldbu	r2,-1(fp)
   16500:	10c4b03a 	or	r2,r2,r3
   16504:	e0bfffc5 	stb	r2,-1(fp)
		addr |= 0x00000040;
   16508:	e0bfffc3 	ldbu	r2,-1(fp)
   1650c:	10801014 	ori	r2,r2,64
   16510:	e0bfffc5 	stb	r2,-1(fp)
	}
	// b_7 is always 1 for DDRAM address, see datasheet
	return (addr | 0x00000080);
   16514:	e0ffffc3 	ldbu	r3,-1(fp)
   16518:	00bfe004 	movi	r2,-128
   1651c:	1884b03a 	or	r2,r3,r2
}
   16520:	e037883a 	mov	sp,fp
   16524:	df000017 	ldw	fp,0(sp)
   16528:	dec00104 	addi	sp,sp,4
   1652c:	f800283a 	ret

00016530 <alt_up_character_lcd_send_cmd>:
 * @param cmd -- the command bits 
 *
 * @return nothing
 **/
void alt_up_character_lcd_send_cmd(alt_up_character_lcd_dev *lcd, unsigned char cmd)
{
   16530:	defffd04 	addi	sp,sp,-12
   16534:	df000215 	stw	fp,8(sp)
   16538:	df000204 	addi	fp,sp,8
   1653c:	e13fff15 	stw	r4,-4(fp)
   16540:	2805883a 	mov	r2,r5
   16544:	e0bffe05 	stb	r2,-8(fp)
 	// NOTE: We use the term Instruction Register and Control Register interchangeably
	IOWR_ALT_UP_CHARACTER_LCD_COMMAND(lcd->base, cmd);
   16548:	e0bfff17 	ldw	r2,-4(fp)
   1654c:	10800a17 	ldw	r2,40(r2)
   16550:	1007883a 	mov	r3,r2
   16554:	e0bffe03 	ldbu	r2,-8(fp)
   16558:	18800025 	stbio	r2,0(r3)
}
   1655c:	0001883a 	nop
   16560:	e037883a 	mov	sp,fp
   16564:	df000017 	ldw	fp,0(sp)
   16568:	dec00104 	addi	sp,sp,4
   1656c:	f800283a 	ret

00016570 <alt_up_character_lcd_init>:
 * file for a detailed description of each function
 */
////////////////////////////////////////////////////////////////////////////

void alt_up_character_lcd_init(alt_up_character_lcd_dev *lcd)
{
   16570:	defffe04 	addi	sp,sp,-8
   16574:	df000115 	stw	fp,4(sp)
   16578:	df000104 	addi	fp,sp,4
   1657c:	e13fff15 	stw	r4,-4(fp)
	IOWR_ALT_UP_CHARACTER_LCD_COMMAND(lcd->base, ALT_UP_CHARACTER_LCD_COMM_CLEAR_DISPLAY);
   16580:	e0bfff17 	ldw	r2,-4(fp)
   16584:	10800a17 	ldw	r2,40(r2)
   16588:	1007883a 	mov	r3,r2
   1658c:	00800044 	movi	r2,1
   16590:	18800025 	stbio	r2,0(r3)
	// register the device 
	// see "Developing Device Drivers for the HAL" in "Nios II Software Developer's Handbook"
}
   16594:	0001883a 	nop
   16598:	e037883a 	mov	sp,fp
   1659c:	df000017 	ldw	fp,0(sp)
   165a0:	dec00104 	addi	sp,sp,4
   165a4:	f800283a 	ret

000165a8 <alt_up_character_lcd_open_dev>:

alt_up_character_lcd_dev* alt_up_character_lcd_open_dev(const char* name)
{
   165a8:	defffc04 	addi	sp,sp,-16
   165ac:	dfc00315 	stw	ra,12(sp)
   165b0:	df000215 	stw	fp,8(sp)
   165b4:	df000204 	addi	fp,sp,8
   165b8:	e13ffe15 	stw	r4,-8(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_character_lcd_dev *dev = (alt_up_character_lcd_dev*)alt_find_dev(name, &alt_dev_list);
   165bc:	d1600604 	addi	r5,gp,-32744
   165c0:	e13ffe17 	ldw	r4,-8(fp)
   165c4:	00170740 	call	17074 <alt_find_dev>
   165c8:	e0bfff15 	stw	r2,-4(fp)

  return dev;
   165cc:	e0bfff17 	ldw	r2,-4(fp)
}
   165d0:	e037883a 	mov	sp,fp
   165d4:	dfc00117 	ldw	ra,4(sp)
   165d8:	df000017 	ldw	fp,0(sp)
   165dc:	dec00204 	addi	sp,sp,8
   165e0:	f800283a 	ret

000165e4 <alt_up_character_lcd_write>:

void alt_up_character_lcd_write(alt_up_character_lcd_dev *dev, const char *ptr, unsigned int len)
{
   165e4:	defffb04 	addi	sp,sp,-20
   165e8:	df000415 	stw	fp,16(sp)
   165ec:	df000404 	addi	fp,sp,16
   165f0:	e13ffe15 	stw	r4,-8(fp)
   165f4:	e17ffd15 	stw	r5,-12(fp)
   165f8:	e1bffc15 	stw	r6,-16(fp)
	unsigned int i;
	for (i = 0; i < len; i++)
   165fc:	e03fff15 	stw	zero,-4(fp)
   16600:	00000f06 	br	16640 <alt_up_character_lcd_write+0x5c>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr+i));
   16604:	e0bffe17 	ldw	r2,-8(fp)
   16608:	10800a17 	ldw	r2,40(r2)
   1660c:	10800044 	addi	r2,r2,1
   16610:	1009883a 	mov	r4,r2
   16614:	e0fffd17 	ldw	r3,-12(fp)
   16618:	e0bfff17 	ldw	r2,-4(fp)
   1661c:	1885883a 	add	r2,r3,r2
   16620:	10800003 	ldbu	r2,0(r2)
   16624:	10803fcc 	andi	r2,r2,255
   16628:	1080201c 	xori	r2,r2,128
   1662c:	10bfe004 	addi	r2,r2,-128
   16630:	20800025 	stbio	r2,0(r4)
	for (i = 0; i < len; i++)
   16634:	e0bfff17 	ldw	r2,-4(fp)
   16638:	10800044 	addi	r2,r2,1
   1663c:	e0bfff15 	stw	r2,-4(fp)
   16640:	e0ffff17 	ldw	r3,-4(fp)
   16644:	e0bffc17 	ldw	r2,-16(fp)
   16648:	18bfee36 	bltu	r3,r2,16604 <alt_up_character_lcd_write+0x20>
	}
}
   1664c:	0001883a 	nop
   16650:	0001883a 	nop
   16654:	e037883a 	mov	sp,fp
   16658:	df000017 	ldw	fp,0(sp)
   1665c:	dec00104 	addi	sp,sp,4
   16660:	f800283a 	ret

00016664 <alt_up_character_lcd_string>:

void alt_up_character_lcd_string(alt_up_character_lcd_dev *dev, const char *ptr)
{
   16664:	defffd04 	addi	sp,sp,-12
   16668:	df000215 	stw	fp,8(sp)
   1666c:	df000204 	addi	fp,sp,8
   16670:	e13fff15 	stw	r4,-4(fp)
   16674:	e17ffe15 	stw	r5,-8(fp)
	while ( *ptr )
   16678:	00000d06 	br	166b0 <alt_up_character_lcd_string+0x4c>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr));
   1667c:	e0bfff17 	ldw	r2,-4(fp)
   16680:	10800a17 	ldw	r2,40(r2)
   16684:	10800044 	addi	r2,r2,1
   16688:	1007883a 	mov	r3,r2
   1668c:	e0bffe17 	ldw	r2,-8(fp)
   16690:	10800003 	ldbu	r2,0(r2)
   16694:	10803fcc 	andi	r2,r2,255
   16698:	1080201c 	xori	r2,r2,128
   1669c:	10bfe004 	addi	r2,r2,-128
   166a0:	18800025 	stbio	r2,0(r3)
		++ptr;
   166a4:	e0bffe17 	ldw	r2,-8(fp)
   166a8:	10800044 	addi	r2,r2,1
   166ac:	e0bffe15 	stw	r2,-8(fp)
	while ( *ptr )
   166b0:	e0bffe17 	ldw	r2,-8(fp)
   166b4:	10800003 	ldbu	r2,0(r2)
   166b8:	10803fcc 	andi	r2,r2,255
   166bc:	1080201c 	xori	r2,r2,128
   166c0:	10bfe004 	addi	r2,r2,-128
   166c4:	103fed1e 	bne	r2,zero,1667c <alt_up_character_lcd_string+0x18>
	}
}
   166c8:	0001883a 	nop
   166cc:	0001883a 	nop
   166d0:	e037883a 	mov	sp,fp
   166d4:	df000017 	ldw	fp,0(sp)
   166d8:	dec00104 	addi	sp,sp,4
   166dc:	f800283a 	ret

000166e0 <alt_up_character_lcd_write_fd>:

// this function isn't used, and is included for future upgrades
int alt_up_character_lcd_write_fd(alt_fd *fd, const char *ptr, int len)
{
   166e0:	defffb04 	addi	sp,sp,-20
   166e4:	dfc00415 	stw	ra,16(sp)
   166e8:	df000315 	stw	fp,12(sp)
   166ec:	df000304 	addi	fp,sp,12
   166f0:	e13fff15 	stw	r4,-4(fp)
   166f4:	e17ffe15 	stw	r5,-8(fp)
   166f8:	e1bffd15 	stw	r6,-12(fp)
	alt_up_character_lcd_write( (alt_up_character_lcd_dev *) fd->dev, ptr, (unsigned int) len);
   166fc:	e0bfff17 	ldw	r2,-4(fp)
   16700:	10800017 	ldw	r2,0(r2)
   16704:	e0fffd17 	ldw	r3,-12(fp)
   16708:	180d883a 	mov	r6,r3
   1670c:	e17ffe17 	ldw	r5,-8(fp)
   16710:	1009883a 	mov	r4,r2
   16714:	00165e40 	call	165e4 <alt_up_character_lcd_write>
	return 0;
   16718:	0005883a 	mov	r2,zero
}
   1671c:	e037883a 	mov	sp,fp
   16720:	dfc00117 	ldw	ra,4(sp)
   16724:	df000017 	ldw	fp,0(sp)
   16728:	dec00204 	addi	sp,sp,8
   1672c:	f800283a 	ret

00016730 <alt_up_character_lcd_set_cursor_pos>:

int alt_up_character_lcd_set_cursor_pos(alt_up_character_lcd_dev *lcd, unsigned x_pos, 
	 unsigned y_pos)
{
   16730:	defffa04 	addi	sp,sp,-24
   16734:	dfc00515 	stw	ra,20(sp)
   16738:	df000415 	stw	fp,16(sp)
   1673c:	df000404 	addi	fp,sp,16
   16740:	e13ffe15 	stw	r4,-8(fp)
   16744:	e17ffd15 	stw	r5,-12(fp)
   16748:	e1bffc15 	stw	r6,-16(fp)
	//boundary check
	if (x_pos > 39 || y_pos > 1 )
   1674c:	e0bffd17 	ldw	r2,-12(fp)
   16750:	10800a28 	cmpgeui	r2,r2,40
   16754:	1000031e 	bne	r2,zero,16764 <alt_up_character_lcd_set_cursor_pos+0x34>
   16758:	e0bffc17 	ldw	r2,-16(fp)
   1675c:	108000b0 	cmpltui	r2,r2,2
   16760:	1000021e 	bne	r2,zero,1676c <alt_up_character_lcd_set_cursor_pos+0x3c>
		// invalid argument
		return -1;
   16764:	00bfffc4 	movi	r2,-1
   16768:	00000906 	br	16790 <alt_up_character_lcd_set_cursor_pos+0x60>
	// calculate address
	unsigned char addr = get_DDRAM_addr(x_pos, y_pos);
   1676c:	e17ffc17 	ldw	r5,-16(fp)
   16770:	e13ffd17 	ldw	r4,-12(fp)
   16774:	00164bc0 	call	164bc <get_DDRAM_addr>
   16778:	e0bfffc5 	stb	r2,-1(fp)
	// set the cursor
	alt_up_character_lcd_send_cmd(lcd, addr);
   1677c:	e0bfffc3 	ldbu	r2,-1(fp)
   16780:	100b883a 	mov	r5,r2
   16784:	e13ffe17 	ldw	r4,-8(fp)
   16788:	00165300 	call	16530 <alt_up_character_lcd_send_cmd>
	return 0;
   1678c:	0005883a 	mov	r2,zero
}
   16790:	e037883a 	mov	sp,fp
   16794:	dfc00117 	ldw	ra,4(sp)
   16798:	df000017 	ldw	fp,0(sp)
   1679c:	dec00204 	addi	sp,sp,8
   167a0:	f800283a 	ret

000167a4 <alt_up_character_lcd_shift_cursor>:

void alt_up_character_lcd_shift_cursor(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
   167a4:	defffb04 	addi	sp,sp,-20
   167a8:	dfc00415 	stw	ra,16(sp)
   167ac:	df000315 	stw	fp,12(sp)
   167b0:	df000304 	addi	fp,sp,12
   167b4:	e13ffe15 	stw	r4,-8(fp)
   167b8:	e17ffd15 	stw	r5,-12(fp)
	if (x_right_shift_offset == 0) 
   167bc:	e0bffd17 	ldw	r2,-12(fp)
   167c0:	10001526 	beq	r2,zero,16818 <alt_up_character_lcd_shift_cursor+0x74>
		// don't ask me to do nothing 
		return;

	// see shift right or left
	unsigned char shift_cmd = (x_right_shift_offset > 0) ? 
   167c4:	e0bffd17 	ldw	r2,-12(fp)
   167c8:	0080020e 	bge	zero,r2,167d4 <alt_up_character_lcd_shift_cursor+0x30>
   167cc:	00800504 	movi	r2,20
   167d0:	00000106 	br	167d8 <alt_up_character_lcd_shift_cursor+0x34>
   167d4:	00800404 	movi	r2,16
   167d8:	e0bfff85 	stb	r2,-2(fp)
		ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
   167dc:	e0bffd17 	ldw	r2,-12(fp)
   167e0:	1000010e 	bge	r2,zero,167e8 <alt_up_character_lcd_shift_cursor+0x44>
   167e4:	0085c83a 	sub	r2,zero,r2
   167e8:	e0bfffc5 	stb	r2,-1(fp)
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
   167ec:	00000406 	br	16800 <alt_up_character_lcd_shift_cursor+0x5c>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
   167f0:	e0bfff83 	ldbu	r2,-2(fp)
   167f4:	100b883a 	mov	r5,r2
   167f8:	e13ffe17 	ldw	r4,-8(fp)
   167fc:	00165300 	call	16530 <alt_up_character_lcd_send_cmd>
	while (num_offset-- > 0)
   16800:	e0bfffc3 	ldbu	r2,-1(fp)
   16804:	10ffffc4 	addi	r3,r2,-1
   16808:	e0ffffc5 	stb	r3,-1(fp)
   1680c:	10803fcc 	andi	r2,r2,255
   16810:	103ff71e 	bne	r2,zero,167f0 <alt_up_character_lcd_shift_cursor+0x4c>
   16814:	00000106 	br	1681c <alt_up_character_lcd_shift_cursor+0x78>
		return;
   16818:	0001883a 	nop
}
   1681c:	e037883a 	mov	sp,fp
   16820:	dfc00117 	ldw	ra,4(sp)
   16824:	df000017 	ldw	fp,0(sp)
   16828:	dec00204 	addi	sp,sp,8
   1682c:	f800283a 	ret

00016830 <alt_up_character_lcd_shift_display>:

void alt_up_character_lcd_shift_display(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
   16830:	defffb04 	addi	sp,sp,-20
   16834:	dfc00415 	stw	ra,16(sp)
   16838:	df000315 	stw	fp,12(sp)
   1683c:	df000304 	addi	fp,sp,12
   16840:	e13ffe15 	stw	r4,-8(fp)
   16844:	e17ffd15 	stw	r5,-12(fp)
	if (x_right_shift_offset == 0) 
   16848:	e0bffd17 	ldw	r2,-12(fp)
   1684c:	10001526 	beq	r2,zero,168a4 <alt_up_character_lcd_shift_display+0x74>
		// don't ask me to do nothing 
		return;

	// see shift right or left
	unsigned char shift_cmd = (x_right_shift_offset > 0) ? 
   16850:	e0bffd17 	ldw	r2,-12(fp)
   16854:	0080020e 	bge	zero,r2,16860 <alt_up_character_lcd_shift_display+0x30>
   16858:	00800704 	movi	r2,28
   1685c:	00000106 	br	16864 <alt_up_character_lcd_shift_display+0x34>
   16860:	00800604 	movi	r2,24
   16864:	e0bfff85 	stb	r2,-2(fp)
		ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
   16868:	e0bffd17 	ldw	r2,-12(fp)
   1686c:	1000010e 	bge	r2,zero,16874 <alt_up_character_lcd_shift_display+0x44>
   16870:	0085c83a 	sub	r2,zero,r2
   16874:	e0bfffc5 	stb	r2,-1(fp)
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
   16878:	00000406 	br	1688c <alt_up_character_lcd_shift_display+0x5c>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
   1687c:	e0bfff83 	ldbu	r2,-2(fp)
   16880:	100b883a 	mov	r5,r2
   16884:	e13ffe17 	ldw	r4,-8(fp)
   16888:	00165300 	call	16530 <alt_up_character_lcd_send_cmd>
	while (num_offset-- > 0)
   1688c:	e0bfffc3 	ldbu	r2,-1(fp)
   16890:	10ffffc4 	addi	r3,r2,-1
   16894:	e0ffffc5 	stb	r3,-1(fp)
   16898:	10803fcc 	andi	r2,r2,255
   1689c:	103ff71e 	bne	r2,zero,1687c <alt_up_character_lcd_shift_display+0x4c>
   168a0:	00000106 	br	168a8 <alt_up_character_lcd_shift_display+0x78>
		return;
   168a4:	0001883a 	nop
}
   168a8:	e037883a 	mov	sp,fp
   168ac:	dfc00117 	ldw	ra,4(sp)
   168b0:	df000017 	ldw	fp,0(sp)
   168b4:	dec00204 	addi	sp,sp,8
   168b8:	f800283a 	ret

000168bc <alt_up_character_lcd_erase_pos>:

int alt_up_character_lcd_erase_pos(alt_up_character_lcd_dev *lcd, unsigned x_pos, unsigned y_pos)
{
   168bc:	defffa04 	addi	sp,sp,-24
   168c0:	dfc00515 	stw	ra,20(sp)
   168c4:	df000415 	stw	fp,16(sp)
   168c8:	df000404 	addi	fp,sp,16
   168cc:	e13ffe15 	stw	r4,-8(fp)
   168d0:	e17ffd15 	stw	r5,-12(fp)
   168d4:	e1bffc15 	stw	r6,-16(fp)
	// boundary check
	if (x_pos > 39 || y_pos > 1 )
   168d8:	e0bffd17 	ldw	r2,-12(fp)
   168dc:	10800a28 	cmpgeui	r2,r2,40
   168e0:	1000031e 	bne	r2,zero,168f0 <alt_up_character_lcd_erase_pos+0x34>
   168e4:	e0bffc17 	ldw	r2,-16(fp)
   168e8:	108000b0 	cmpltui	r2,r2,2
   168ec:	1000021e 	bne	r2,zero,168f8 <alt_up_character_lcd_erase_pos+0x3c>
		return -1;
   168f0:	00bfffc4 	movi	r2,-1
   168f4:	00000f06 	br	16934 <alt_up_character_lcd_erase_pos+0x78>

	// get address
	unsigned char addr = get_DDRAM_addr(x_pos, y_pos);
   168f8:	e17ffc17 	ldw	r5,-16(fp)
   168fc:	e13ffd17 	ldw	r4,-12(fp)
   16900:	00164bc0 	call	164bc <get_DDRAM_addr>
   16904:	e0bfffc5 	stb	r2,-1(fp)
	// set cursor to dest point
	alt_up_character_lcd_send_cmd(lcd, addr);
   16908:	e0bfffc3 	ldbu	r2,-1(fp)
   1690c:	100b883a 	mov	r5,r2
   16910:	e13ffe17 	ldw	r4,-8(fp)
   16914:	00165300 	call	16530 <alt_up_character_lcd_send_cmd>
	//send an empty char as erase (refer to the Character Generator ROM part of the Datasheet)
	IOWR_ALT_UP_CHARACTER_LCD_DATA(lcd->base, (0x00000002) );
   16918:	e0bffe17 	ldw	r2,-8(fp)
   1691c:	10800a17 	ldw	r2,40(r2)
   16920:	10800044 	addi	r2,r2,1
   16924:	1007883a 	mov	r3,r2
   16928:	00800084 	movi	r2,2
   1692c:	18800025 	stbio	r2,0(r3)
	return 0;
   16930:	0005883a 	mov	r2,zero
}
   16934:	e037883a 	mov	sp,fp
   16938:	dfc00117 	ldw	ra,4(sp)
   1693c:	df000017 	ldw	fp,0(sp)
   16940:	dec00204 	addi	sp,sp,8
   16944:	f800283a 	ret

00016948 <alt_up_character_lcd_cursor_off>:

void alt_up_character_lcd_cursor_off(alt_up_character_lcd_dev *lcd)
{
   16948:	defffd04 	addi	sp,sp,-12
   1694c:	dfc00215 	stw	ra,8(sp)
   16950:	df000115 	stw	fp,4(sp)
   16954:	df000104 	addi	fp,sp,4
   16958:	e13fff15 	stw	r4,-4(fp)
	alt_up_character_lcd_send_cmd(lcd, ALT_UP_CHARACTER_LCD_COMM_CURSOR_OFF);
   1695c:	01400304 	movi	r5,12
   16960:	e13fff17 	ldw	r4,-4(fp)
   16964:	00165300 	call	16530 <alt_up_character_lcd_send_cmd>
}
   16968:	0001883a 	nop
   1696c:	e037883a 	mov	sp,fp
   16970:	dfc00117 	ldw	ra,4(sp)
   16974:	df000017 	ldw	fp,0(sp)
   16978:	dec00204 	addi	sp,sp,8
   1697c:	f800283a 	ret

00016980 <alt_up_character_lcd_cursor_blink_on>:

void alt_up_character_lcd_cursor_blink_on(alt_up_character_lcd_dev *lcd)
{
   16980:	defffd04 	addi	sp,sp,-12
   16984:	dfc00215 	stw	ra,8(sp)
   16988:	df000115 	stw	fp,4(sp)
   1698c:	df000104 	addi	fp,sp,4
   16990:	e13fff15 	stw	r4,-4(fp)
	alt_up_character_lcd_send_cmd(lcd, ALT_UP_CHARACTER_LCD_COMM_CURSOR_BLINK_ON);
   16994:	014003c4 	movi	r5,15
   16998:	e13fff17 	ldw	r4,-4(fp)
   1699c:	00165300 	call	16530 <alt_up_character_lcd_send_cmd>
}
   169a0:	0001883a 	nop
   169a4:	e037883a 	mov	sp,fp
   169a8:	dfc00117 	ldw	ra,4(sp)
   169ac:	df000017 	ldw	fp,0(sp)
   169b0:	dec00204 	addi	sp,sp,8
   169b4:	f800283a 	ret

000169b8 <alt_up_rs232_enable_read_interrupt>:
#include "altera_up_avalon_rs232.h"
#include "altera_up_avalon_rs232_regs.h"


void alt_up_rs232_enable_read_interrupt(alt_up_rs232_dev *rs232)
{
   169b8:	defffd04 	addi	sp,sp,-12
   169bc:	df000215 	stw	fp,8(sp)
   169c0:	df000204 	addi	fp,sp,8
   169c4:	e13ffe15 	stw	r4,-8(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
   169c8:	e0bffe17 	ldw	r2,-8(fp)
   169cc:	10800a17 	ldw	r2,40(r2)
   169d0:	10800104 	addi	r2,r2,4
   169d4:	10800037 	ldwio	r2,0(r2)
   169d8:	e0bfff15 	stw	r2,-4(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_RS232_CONTROL_RE_MSK;
   169dc:	e0bfff17 	ldw	r2,-4(fp)
   169e0:	10800054 	ori	r2,r2,1
   169e4:	e0bfff15 	stw	r2,-4(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
   169e8:	e0bffe17 	ldw	r2,-8(fp)
   169ec:	10800a17 	ldw	r2,40(r2)
   169f0:	10800104 	addi	r2,r2,4
   169f4:	1007883a 	mov	r3,r2
   169f8:	e0bfff17 	ldw	r2,-4(fp)
   169fc:	18800035 	stwio	r2,0(r3)
}
   16a00:	0001883a 	nop
   16a04:	e037883a 	mov	sp,fp
   16a08:	df000017 	ldw	fp,0(sp)
   16a0c:	dec00104 	addi	sp,sp,4
   16a10:	f800283a 	ret

00016a14 <alt_up_rs232_disable_read_interrupt>:

void alt_up_rs232_disable_read_interrupt(alt_up_rs232_dev *rs232)
{
   16a14:	defffd04 	addi	sp,sp,-12
   16a18:	df000215 	stw	fp,8(sp)
   16a1c:	df000204 	addi	fp,sp,8
   16a20:	e13ffe15 	stw	r4,-8(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
   16a24:	e0bffe17 	ldw	r2,-8(fp)
   16a28:	10800a17 	ldw	r2,40(r2)
   16a2c:	10800104 	addi	r2,r2,4
   16a30:	10800037 	ldwio	r2,0(r2)
   16a34:	e0bfff15 	stw	r2,-4(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_RS232_CONTROL_RE_MSK;
   16a38:	e0ffff17 	ldw	r3,-4(fp)
   16a3c:	00bfff84 	movi	r2,-2
   16a40:	1884703a 	and	r2,r3,r2
   16a44:	e0bfff15 	stw	r2,-4(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
   16a48:	e0bffe17 	ldw	r2,-8(fp)
   16a4c:	10800a17 	ldw	r2,40(r2)
   16a50:	10800104 	addi	r2,r2,4
   16a54:	1007883a 	mov	r3,r2
   16a58:	e0bfff17 	ldw	r2,-4(fp)
   16a5c:	18800035 	stwio	r2,0(r3)
}
   16a60:	0001883a 	nop
   16a64:	e037883a 	mov	sp,fp
   16a68:	df000017 	ldw	fp,0(sp)
   16a6c:	dec00104 	addi	sp,sp,4
   16a70:	f800283a 	ret

00016a74 <alt_up_rs232_get_used_space_in_read_FIFO>:

unsigned alt_up_rs232_get_used_space_in_read_FIFO(alt_up_rs232_dev *rs232)
{
   16a74:	defffd04 	addi	sp,sp,-12
   16a78:	df000215 	stw	fp,8(sp)
   16a7c:	df000204 	addi	fp,sp,8
   16a80:	e13ffe15 	stw	r4,-8(fp)
	alt_u16 ravail = 0;
   16a84:	e03fff8d 	sth	zero,-2(fp)
	// we can only read the 16 bits for RAVAIL --- a read of DATA will discard the data
//	ravail = IORD_16DIRECT(IOADDR_ALT_UP_RS232_DATA(rs232->base), 2); 
	ravail = IORD_ALT_UP_RS232_RAVAIL(rs232->base); 
   16a88:	e0bffe17 	ldw	r2,-8(fp)
   16a8c:	10800a17 	ldw	r2,40(r2)
   16a90:	10800084 	addi	r2,r2,2
   16a94:	1080002b 	ldhuio	r2,0(r2)
   16a98:	10bfffcc 	andi	r2,r2,65535
   16a9c:	e0bfff8d 	sth	r2,-2(fp)
//	return ravail;
	return (ravail & ALT_UP_RS232_RAVAIL_MSK) >> ALT_UP_RS232_RAVAIL_OFST;
   16aa0:	e0bfff8b 	ldhu	r2,-2(fp)
}
   16aa4:	e037883a 	mov	sp,fp
   16aa8:	df000017 	ldw	fp,0(sp)
   16aac:	dec00104 	addi	sp,sp,4
   16ab0:	f800283a 	ret

00016ab4 <alt_up_rs232_get_available_space_in_write_FIFO>:

unsigned alt_up_rs232_get_available_space_in_write_FIFO(alt_up_rs232_dev *rs232)
{
   16ab4:	defffd04 	addi	sp,sp,-12
   16ab8:	df000215 	stw	fp,8(sp)
   16abc:	df000204 	addi	fp,sp,8
   16ac0:	e13ffe15 	stw	r4,-8(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
   16ac4:	e0bffe17 	ldw	r2,-8(fp)
   16ac8:	10800a17 	ldw	r2,40(r2)
   16acc:	10800104 	addi	r2,r2,4
   16ad0:	10800037 	ldwio	r2,0(r2)
   16ad4:	e0bfff15 	stw	r2,-4(fp)
	return (ctrl_reg & ALT_UP_RS232_CONTROL_WSPACE_MSK) >> ALT_UP_RS232_CONTROL_WSPACE_OFST;
   16ad8:	e0bfff17 	ldw	r2,-4(fp)
   16adc:	1004d43a 	srli	r2,r2,16
}
   16ae0:	e037883a 	mov	sp,fp
   16ae4:	df000017 	ldw	fp,0(sp)
   16ae8:	dec00104 	addi	sp,sp,4
   16aec:	f800283a 	ret

00016af0 <alt_up_rs232_check_parity>:

int alt_up_rs232_check_parity(alt_u32 data_reg)
{
   16af0:	defffd04 	addi	sp,sp,-12
   16af4:	df000215 	stw	fp,8(sp)
   16af8:	df000204 	addi	fp,sp,8
   16afc:	e13ffe15 	stw	r4,-8(fp)
	unsigned parity_error = (data_reg & ALT_UP_RS232_DATA_PE_MSK) >> ALT_UP_RS232_DATA_PE_OFST;
   16b00:	e0bffe17 	ldw	r2,-8(fp)
   16b04:	1004d27a 	srli	r2,r2,9
   16b08:	1080004c 	andi	r2,r2,1
   16b0c:	e0bfff15 	stw	r2,-4(fp)
	return (parity_error ? -1 : 0);
   16b10:	e0bfff17 	ldw	r2,-4(fp)
   16b14:	10000226 	beq	r2,zero,16b20 <alt_up_rs232_check_parity+0x30>
   16b18:	00bfffc4 	movi	r2,-1
   16b1c:	00000106 	br	16b24 <alt_up_rs232_check_parity+0x34>
   16b20:	0005883a 	mov	r2,zero
}
   16b24:	e037883a 	mov	sp,fp
   16b28:	df000017 	ldw	fp,0(sp)
   16b2c:	dec00104 	addi	sp,sp,4
   16b30:	f800283a 	ret

00016b34 <alt_up_rs232_write_data>:

int alt_up_rs232_write_data(alt_up_rs232_dev *rs232, alt_u8 data)
{
   16b34:	defffd04 	addi	sp,sp,-12
   16b38:	df000215 	stw	fp,8(sp)
   16b3c:	df000204 	addi	fp,sp,8
   16b40:	e13fff15 	stw	r4,-4(fp)
   16b44:	2805883a 	mov	r2,r5
   16b48:	e0bffe05 	stb	r2,-8(fp)
	/*alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);*/
    
	// we can write directly without thinking about other bit fields for this
	// case ONLY, because only DATA field of the data register is writable
	IOWR_ALT_UP_RS232_DATA(rs232->base, (data>>ALT_UP_RS232_DATA_DATA_OFST) & ALT_UP_RS232_DATA_DATA_MSK);
   16b4c:	e0bfff17 	ldw	r2,-4(fp)
   16b50:	10800a17 	ldw	r2,40(r2)
   16b54:	1007883a 	mov	r3,r2
   16b58:	e0bffe03 	ldbu	r2,-8(fp)
   16b5c:	18800035 	stwio	r2,0(r3)
	return 0;
   16b60:	0005883a 	mov	r2,zero
}
   16b64:	e037883a 	mov	sp,fp
   16b68:	df000017 	ldw	fp,0(sp)
   16b6c:	dec00104 	addi	sp,sp,4
   16b70:	f800283a 	ret

00016b74 <alt_up_rs232_read_data>:

int alt_up_rs232_read_data(alt_up_rs232_dev *rs232, alt_u8 *data, alt_u8 *parity_error)
{
   16b74:	defffa04 	addi	sp,sp,-24
   16b78:	dfc00515 	stw	ra,20(sp)
   16b7c:	df000415 	stw	fp,16(sp)
   16b80:	df000404 	addi	fp,sp,16
   16b84:	e13ffe15 	stw	r4,-8(fp)
   16b88:	e17ffd15 	stw	r5,-12(fp)
   16b8c:	e1bffc15 	stw	r6,-16(fp)
	alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);
   16b90:	e0bffe17 	ldw	r2,-8(fp)
   16b94:	10800a17 	ldw	r2,40(r2)
   16b98:	10800037 	ldwio	r2,0(r2)
   16b9c:	e0bfff15 	stw	r2,-4(fp)
	*data = (data_reg & ALT_UP_RS232_DATA_DATA_MSK) >> ALT_UP_RS232_DATA_DATA_OFST;
   16ba0:	e0bfff17 	ldw	r2,-4(fp)
   16ba4:	1007883a 	mov	r3,r2
   16ba8:	e0bffd17 	ldw	r2,-12(fp)
   16bac:	10c00005 	stb	r3,0(r2)
	*parity_error = alt_up_rs232_check_parity(data_reg);
   16bb0:	e13fff17 	ldw	r4,-4(fp)
   16bb4:	0016af00 	call	16af0 <alt_up_rs232_check_parity>
   16bb8:	1007883a 	mov	r3,r2
   16bbc:	e0bffc17 	ldw	r2,-16(fp)
   16bc0:	10c00005 	stb	r3,0(r2)
	return (((data_reg & ALT_UP_RS232_DATA_RVALID_MSK) >> ALT_UP_RS232_DATA_RVALID_OFST) - 1);
   16bc4:	e0bfff17 	ldw	r2,-4(fp)
   16bc8:	1004d3fa 	srli	r2,r2,15
   16bcc:	1080004c 	andi	r2,r2,1
   16bd0:	10bfffc4 	addi	r2,r2,-1
}
   16bd4:	e037883a 	mov	sp,fp
   16bd8:	dfc00117 	ldw	ra,4(sp)
   16bdc:	df000017 	ldw	fp,0(sp)
   16be0:	dec00204 	addi	sp,sp,8
   16be4:	f800283a 	ret

00016be8 <alt_up_rs232_read_fd>:

int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
   16be8:	defff804 	addi	sp,sp,-32
   16bec:	dfc00715 	stw	ra,28(sp)
   16bf0:	df000615 	stw	fp,24(sp)
   16bf4:	df000604 	addi	fp,sp,24
   16bf8:	e13ffc15 	stw	r4,-16(fp)
   16bfc:	e17ffb15 	stw	r5,-20(fp)
   16c00:	e1bffa15 	stw	r6,-24(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
   16c04:	e0bffc17 	ldw	r2,-16(fp)
   16c08:	10800017 	ldw	r2,0(r2)
   16c0c:	e0bffe15 	stw	r2,-8(fp)
	int count = 0;
   16c10:	e03fff15 	stw	zero,-4(fp)
	alt_u8 parity_error;
	while(len--)
   16c14:	00000c06 	br	16c48 <alt_up_rs232_read_fd+0x60>
	{
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
   16c18:	e0bffb17 	ldw	r2,-20(fp)
   16c1c:	10c00044 	addi	r3,r2,1
   16c20:	e0fffb15 	stw	r3,-20(fp)
   16c24:	e0fffdc4 	addi	r3,fp,-9
   16c28:	180d883a 	mov	r6,r3
   16c2c:	100b883a 	mov	r5,r2
   16c30:	e13ffe17 	ldw	r4,-8(fp)
   16c34:	0016b740 	call	16b74 <alt_up_rs232_read_data>
   16c38:	1000081e 	bne	r2,zero,16c5c <alt_up_rs232_read_fd+0x74>
			count++;
   16c3c:	e0bfff17 	ldw	r2,-4(fp)
   16c40:	10800044 	addi	r2,r2,1
   16c44:	e0bfff15 	stw	r2,-4(fp)
	while(len--)
   16c48:	e0bffa17 	ldw	r2,-24(fp)
   16c4c:	10ffffc4 	addi	r3,r2,-1
   16c50:	e0fffa15 	stw	r3,-24(fp)
   16c54:	103ff01e 	bne	r2,zero,16c18 <alt_up_rs232_read_fd+0x30>
   16c58:	00000106 	br	16c60 <alt_up_rs232_read_fd+0x78>
		else
			break;
   16c5c:	0001883a 	nop
	}
	return count;
   16c60:	e0bfff17 	ldw	r2,-4(fp)
}
   16c64:	e037883a 	mov	sp,fp
   16c68:	dfc00117 	ldw	ra,4(sp)
   16c6c:	df000017 	ldw	fp,0(sp)
   16c70:	dec00204 	addi	sp,sp,8
   16c74:	f800283a 	ret

00016c78 <alt_up_rs232_write_fd>:

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
   16c78:	defff904 	addi	sp,sp,-28
   16c7c:	dfc00615 	stw	ra,24(sp)
   16c80:	df000515 	stw	fp,20(sp)
   16c84:	df000504 	addi	fp,sp,20
   16c88:	e13ffd15 	stw	r4,-12(fp)
   16c8c:	e17ffc15 	stw	r5,-16(fp)
   16c90:	e1bffb15 	stw	r6,-20(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
   16c94:	e0bffd17 	ldw	r2,-12(fp)
   16c98:	10800017 	ldw	r2,0(r2)
   16c9c:	e0bffe15 	stw	r2,-8(fp)
	int count = 0;
   16ca0:	e03fff15 	stw	zero,-4(fp)
	while(len--)
   16ca4:	00000d06 	br	16cdc <alt_up_rs232_write_fd+0x64>
	{
		if (alt_up_rs232_write_data(rs232, *ptr)==0)
   16ca8:	e0bffc17 	ldw	r2,-16(fp)
   16cac:	10800003 	ldbu	r2,0(r2)
   16cb0:	10803fcc 	andi	r2,r2,255
   16cb4:	100b883a 	mov	r5,r2
   16cb8:	e13ffe17 	ldw	r4,-8(fp)
   16cbc:	0016b340 	call	16b34 <alt_up_rs232_write_data>
   16cc0:	10000b1e 	bne	r2,zero,16cf0 <alt_up_rs232_write_fd+0x78>
		{
			count++;
   16cc4:	e0bfff17 	ldw	r2,-4(fp)
   16cc8:	10800044 	addi	r2,r2,1
   16ccc:	e0bfff15 	stw	r2,-4(fp)
			ptr++;
   16cd0:	e0bffc17 	ldw	r2,-16(fp)
   16cd4:	10800044 	addi	r2,r2,1
   16cd8:	e0bffc15 	stw	r2,-16(fp)
	while(len--)
   16cdc:	e0bffb17 	ldw	r2,-20(fp)
   16ce0:	10ffffc4 	addi	r3,r2,-1
   16ce4:	e0fffb15 	stw	r3,-20(fp)
   16ce8:	103fef1e 	bne	r2,zero,16ca8 <alt_up_rs232_write_fd+0x30>
   16cec:	00000106 	br	16cf4 <alt_up_rs232_write_fd+0x7c>
		}
		else
			break;
   16cf0:	0001883a 	nop
	}
	return count;
   16cf4:	e0bfff17 	ldw	r2,-4(fp)
}
   16cf8:	e037883a 	mov	sp,fp
   16cfc:	dfc00117 	ldw	ra,4(sp)
   16d00:	df000017 	ldw	fp,0(sp)
   16d04:	dec00204 	addi	sp,sp,8
   16d08:	f800283a 	ret

00016d0c <alt_up_rs232_open_dev>:

alt_up_rs232_dev* alt_up_rs232_open_dev(const char* name)
{
   16d0c:	defffc04 	addi	sp,sp,-16
   16d10:	dfc00315 	stw	ra,12(sp)
   16d14:	df000215 	stw	fp,8(sp)
   16d18:	df000204 	addi	fp,sp,8
   16d1c:	e13ffe15 	stw	r4,-8(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_rs232_dev *dev = (alt_up_rs232_dev*)alt_find_dev(name, &alt_dev_list);
   16d20:	d1600604 	addi	r5,gp,-32744
   16d24:	e13ffe17 	ldw	r4,-8(fp)
   16d28:	00170740 	call	17074 <alt_find_dev>
   16d2c:	e0bfff15 	stw	r2,-4(fp)

  return dev;
   16d30:	e0bfff17 	ldw	r2,-4(fp)
}
   16d34:	e037883a 	mov	sp,fp
   16d38:	dfc00117 	ldw	ra,4(sp)
   16d3c:	df000017 	ldw	fp,0(sp)
   16d40:	dec00204 	addi	sp,sp,8
   16d44:	f800283a 	ret

00016d48 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   16d48:	defff404 	addi	sp,sp,-48
   16d4c:	df000b15 	stw	fp,44(sp)
   16d50:	df000b04 	addi	fp,sp,44
   16d54:	e13ff815 	stw	r4,-32(fp)
   16d58:	e17ff715 	stw	r5,-36(fp)
   16d5c:	e1bff615 	stw	r6,-40(fp)
   16d60:	e1fff515 	stw	r7,-44(fp)
  alt_irq_context irq_context;
  alt_u64 current_nticks = 0;
   16d64:	e03ffe15 	stw	zero,-8(fp)
   16d68:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
   16d6c:	d0a73b17 	ldw	r2,-25364(gp)
  
  if (alt_ticks_per_second ())
   16d70:	10004826 	beq	r2,zero,16e94 <alt_alarm_start+0x14c>
  {
    if (alarm)
   16d74:	e0bff817 	ldw	r2,-32(fp)
   16d78:	10004426 	beq	r2,zero,16e8c <alt_alarm_start+0x144>
    {
      alarm->callback = callback;
   16d7c:	e0bff817 	ldw	r2,-32(fp)
   16d80:	e0fff617 	ldw	r3,-40(fp)
   16d84:	10c00415 	stw	r3,16(r2)
      alarm->context  = context;
   16d88:	e0bff817 	ldw	r2,-32(fp)
   16d8c:	e0fff517 	ldw	r3,-44(fp)
   16d90:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
   16d94:	0005303a 	rdctl	r2,status
   16d98:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   16d9c:	e0fff917 	ldw	r3,-28(fp)
   16da0:	00bfff84 	movi	r2,-2
   16da4:	1884703a 	and	r2,r3,r2
   16da8:	1001703a 	wrctl	status,r2
  return context;
   16dac:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   16db0:	e0bffd15 	stw	r2,-12(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u64 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   16db4:	d0a73c17 	ldw	r2,-25360(gp)
   16db8:	d0e73d17 	ldw	r3,-25356(gp)
      
      current_nticks = alt_nticks();
   16dbc:	e0bffe15 	stw	r2,-8(fp)
   16dc0:	e0ffff15 	stw	r3,-4(fp)
      
      alarm->time = (alt_u64)nticks + current_nticks + 1; 
   16dc4:	e0bff717 	ldw	r2,-36(fp)
   16dc8:	1011883a 	mov	r8,r2
   16dcc:	0013883a 	mov	r9,zero
   16dd0:	e13ffe17 	ldw	r4,-8(fp)
   16dd4:	e17fff17 	ldw	r5,-4(fp)
   16dd8:	4105883a 	add	r2,r8,r4
   16ddc:	120d803a 	cmpltu	r6,r2,r8
   16de0:	4947883a 	add	r3,r9,r5
   16de4:	30c9883a 	add	r4,r6,r3
   16de8:	2007883a 	mov	r3,r4
   16dec:	1009883a 	mov	r4,r2
   16df0:	180b883a 	mov	r5,r3
   16df4:	01800044 	movi	r6,1
   16df8:	000f883a 	mov	r7,zero
   16dfc:	2185883a 	add	r2,r4,r6
   16e00:	1111803a 	cmpltu	r8,r2,r4
   16e04:	29c7883a 	add	r3,r5,r7
   16e08:	40c9883a 	add	r4,r8,r3
   16e0c:	2007883a 	mov	r3,r4
   16e10:	1009883a 	mov	r4,r2
   16e14:	180b883a 	mov	r5,r3
   16e18:	e0bff817 	ldw	r2,-32(fp)
   16e1c:	11000215 	stw	r4,8(r2)
   16e20:	11400315 	stw	r5,12(r2)
          
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   16e24:	e0bff817 	ldw	r2,-32(fp)
   16e28:	d0e00c04 	addi	r3,gp,-32720
   16e2c:	e0fffb15 	stw	r3,-20(fp)
   16e30:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   16e34:	e0bffa17 	ldw	r2,-24(fp)
   16e38:	e0fffb17 	ldw	r3,-20(fp)
   16e3c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   16e40:	e0bffb17 	ldw	r2,-20(fp)
   16e44:	10c00017 	ldw	r3,0(r2)
   16e48:	e0bffa17 	ldw	r2,-24(fp)
   16e4c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   16e50:	e0bffb17 	ldw	r2,-20(fp)
   16e54:	10800017 	ldw	r2,0(r2)
   16e58:	e0fffa17 	ldw	r3,-24(fp)
   16e5c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   16e60:	e0bffb17 	ldw	r2,-20(fp)
   16e64:	e0fffa17 	ldw	r3,-24(fp)
   16e68:	10c00015 	stw	r3,0(r2)
}
   16e6c:	0001883a 	nop
   16e70:	e0bffd17 	ldw	r2,-12(fp)
   16e74:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   16e78:	e0bffc17 	ldw	r2,-16(fp)
   16e7c:	1001703a 	wrctl	status,r2
}
   16e80:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
   16e84:	0005883a 	mov	r2,zero
   16e88:	00000306 	br	16e98 <alt_alarm_start+0x150>
    }
    else
    {
      return -EINVAL;
   16e8c:	00bffa84 	movi	r2,-22
   16e90:	00000106 	br	16e98 <alt_alarm_start+0x150>
    }
  }
  else
  {
    return -ENOTSUP;
   16e94:	00bfde84 	movi	r2,-134
  }
}
   16e98:	e037883a 	mov	sp,fp
   16e9c:	df000017 	ldw	fp,0(sp)
   16ea0:	dec00104 	addi	sp,sp,4
   16ea4:	f800283a 	ret

00016ea8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   16ea8:	deffff04 	addi	sp,sp,-4
   16eac:	df000015 	stw	fp,0(sp)
   16eb0:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   16eb4:	0001883a 	nop
   16eb8:	e037883a 	mov	sp,fp
   16ebc:	df000017 	ldw	fp,0(sp)
   16ec0:	dec00104 	addi	sp,sp,4
   16ec4:	f800283a 	ret

00016ec8 <alt_get_errno>:
{
   16ec8:	defffe04 	addi	sp,sp,-8
   16ecc:	dfc00115 	stw	ra,4(sp)
   16ed0:	df000015 	stw	fp,0(sp)
   16ed4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   16ed8:	d0a00917 	ldw	r2,-32732(gp)
   16edc:	10000326 	beq	r2,zero,16eec <alt_get_errno+0x24>
   16ee0:	d0a00917 	ldw	r2,-32732(gp)
   16ee4:	103ee83a 	callr	r2
   16ee8:	00000106 	br	16ef0 <alt_get_errno+0x28>
   16eec:	d0a73504 	addi	r2,gp,-25388
}
   16ef0:	e037883a 	mov	sp,fp
   16ef4:	dfc00117 	ldw	ra,4(sp)
   16ef8:	df000017 	ldw	fp,0(sp)
   16efc:	dec00204 	addi	sp,sp,8
   16f00:	f800283a 	ret

00016f04 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   16f04:	defffa04 	addi	sp,sp,-24
   16f08:	dfc00515 	stw	ra,20(sp)
   16f0c:	df000415 	stw	fp,16(sp)
   16f10:	df000404 	addi	fp,sp,16
   16f14:	e13ffd15 	stw	r4,-12(fp)
   16f18:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   16f1c:	e0bffd17 	ldw	r2,-12(fp)
   16f20:	10000326 	beq	r2,zero,16f30 <alt_dev_llist_insert+0x2c>
   16f24:	e0bffd17 	ldw	r2,-12(fp)
   16f28:	10800217 	ldw	r2,8(r2)
   16f2c:	1000061e 	bne	r2,zero,16f48 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   16f30:	0016ec80 	call	16ec8 <alt_get_errno>
   16f34:	1007883a 	mov	r3,r2
   16f38:	00800584 	movi	r2,22
   16f3c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   16f40:	00bffa84 	movi	r2,-22
   16f44:	00001406 	br	16f98 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   16f48:	e0bffd17 	ldw	r2,-12(fp)
   16f4c:	e0fffc17 	ldw	r3,-16(fp)
   16f50:	e0ffff15 	stw	r3,-4(fp)
   16f54:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
   16f58:	e0bffe17 	ldw	r2,-8(fp)
   16f5c:	e0ffff17 	ldw	r3,-4(fp)
   16f60:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   16f64:	e0bfff17 	ldw	r2,-4(fp)
   16f68:	10c00017 	ldw	r3,0(r2)
   16f6c:	e0bffe17 	ldw	r2,-8(fp)
   16f70:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
   16f74:	e0bfff17 	ldw	r2,-4(fp)
   16f78:	10800017 	ldw	r2,0(r2)
   16f7c:	e0fffe17 	ldw	r3,-8(fp)
   16f80:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   16f84:	e0bfff17 	ldw	r2,-4(fp)
   16f88:	e0fffe17 	ldw	r3,-8(fp)
   16f8c:	10c00015 	stw	r3,0(r2)
}
   16f90:	0001883a 	nop

  return 0;  
   16f94:	0005883a 	mov	r2,zero
}
   16f98:	e037883a 	mov	sp,fp
   16f9c:	dfc00117 	ldw	ra,4(sp)
   16fa0:	df000017 	ldw	fp,0(sp)
   16fa4:	dec00204 	addi	sp,sp,8
   16fa8:	f800283a 	ret

00016fac <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   16fac:	defffd04 	addi	sp,sp,-12
   16fb0:	dfc00215 	stw	ra,8(sp)
   16fb4:	df000115 	stw	fp,4(sp)
   16fb8:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   16fbc:	00800074 	movhi	r2,1
   16fc0:	109f4904 	addi	r2,r2,32036
   16fc4:	e0bfff15 	stw	r2,-4(fp)
   16fc8:	00000606 	br	16fe4 <_do_ctors+0x38>
        (*ctor) (); 
   16fcc:	e0bfff17 	ldw	r2,-4(fp)
   16fd0:	10800017 	ldw	r2,0(r2)
   16fd4:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   16fd8:	e0bfff17 	ldw	r2,-4(fp)
   16fdc:	10bfff04 	addi	r2,r2,-4
   16fe0:	e0bfff15 	stw	r2,-4(fp)
   16fe4:	e0ffff17 	ldw	r3,-4(fp)
   16fe8:	00800074 	movhi	r2,1
   16fec:	109f4a04 	addi	r2,r2,32040
   16ff0:	18bff62e 	bgeu	r3,r2,16fcc <_do_ctors+0x20>
}
   16ff4:	0001883a 	nop
   16ff8:	0001883a 	nop
   16ffc:	e037883a 	mov	sp,fp
   17000:	dfc00117 	ldw	ra,4(sp)
   17004:	df000017 	ldw	fp,0(sp)
   17008:	dec00204 	addi	sp,sp,8
   1700c:	f800283a 	ret

00017010 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   17010:	defffd04 	addi	sp,sp,-12
   17014:	dfc00215 	stw	ra,8(sp)
   17018:	df000115 	stw	fp,4(sp)
   1701c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   17020:	00800074 	movhi	r2,1
   17024:	109f4904 	addi	r2,r2,32036
   17028:	e0bfff15 	stw	r2,-4(fp)
   1702c:	00000606 	br	17048 <_do_dtors+0x38>
        (*dtor) (); 
   17030:	e0bfff17 	ldw	r2,-4(fp)
   17034:	10800017 	ldw	r2,0(r2)
   17038:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   1703c:	e0bfff17 	ldw	r2,-4(fp)
   17040:	10bfff04 	addi	r2,r2,-4
   17044:	e0bfff15 	stw	r2,-4(fp)
   17048:	e0ffff17 	ldw	r3,-4(fp)
   1704c:	00800074 	movhi	r2,1
   17050:	109f4a04 	addi	r2,r2,32040
   17054:	18bff62e 	bgeu	r3,r2,17030 <_do_dtors+0x20>
}
   17058:	0001883a 	nop
   1705c:	0001883a 	nop
   17060:	e037883a 	mov	sp,fp
   17064:	dfc00117 	ldw	ra,4(sp)
   17068:	df000017 	ldw	fp,0(sp)
   1706c:	dec00204 	addi	sp,sp,8
   17070:	f800283a 	ret

00017074 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   17074:	defffa04 	addi	sp,sp,-24
   17078:	dfc00515 	stw	ra,20(sp)
   1707c:	df000415 	stw	fp,16(sp)
   17080:	df000404 	addi	fp,sp,16
   17084:	e13ffd15 	stw	r4,-12(fp)
   17088:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
   1708c:	e0bffc17 	ldw	r2,-16(fp)
   17090:	10800017 	ldw	r2,0(r2)
   17094:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   17098:	e13ffd17 	ldw	r4,-12(fp)
   1709c:	000af740 	call	af74 <strlen>
   170a0:	10800044 	addi	r2,r2,1
   170a4:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   170a8:	00000d06 	br	170e0 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   170ac:	e0bfff17 	ldw	r2,-4(fp)
   170b0:	10800217 	ldw	r2,8(r2)
   170b4:	e0fffe17 	ldw	r3,-8(fp)
   170b8:	180d883a 	mov	r6,r3
   170bc:	e17ffd17 	ldw	r5,-12(fp)
   170c0:	1009883a 	mov	r4,r2
   170c4:	0017b000 	call	17b00 <memcmp>
   170c8:	1000021e 	bne	r2,zero,170d4 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   170cc:	e0bfff17 	ldw	r2,-4(fp)
   170d0:	00000706 	br	170f0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   170d4:	e0bfff17 	ldw	r2,-4(fp)
   170d8:	10800017 	ldw	r2,0(r2)
   170dc:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
   170e0:	e0ffff17 	ldw	r3,-4(fp)
   170e4:	e0bffc17 	ldw	r2,-16(fp)
   170e8:	18bff01e 	bne	r3,r2,170ac <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
   170ec:	0005883a 	mov	r2,zero
}
   170f0:	e037883a 	mov	sp,fp
   170f4:	dfc00117 	ldw	ra,4(sp)
   170f8:	df000017 	ldw	fp,0(sp)
   170fc:	dec00204 	addi	sp,sp,8
   17100:	f800283a 	ret

00017104 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   17104:	deffff04 	addi	sp,sp,-4
   17108:	df000015 	stw	fp,0(sp)
   1710c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   17110:	0001883a 	nop
   17114:	e037883a 	mov	sp,fp
   17118:	df000017 	ldw	fp,0(sp)
   1711c:	dec00104 	addi	sp,sp,4
   17120:	f800283a 	ret

00017124 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   17124:	defff904 	addi	sp,sp,-28
   17128:	dfc00615 	stw	ra,24(sp)
   1712c:	df000515 	stw	fp,20(sp)
   17130:	df000504 	addi	fp,sp,20
   17134:	e13ffe15 	stw	r4,-8(fp)
   17138:	e17ffd15 	stw	r5,-12(fp)
   1713c:	e1bffc15 	stw	r6,-16(fp)
   17140:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
   17144:	e1bffb17 	ldw	r6,-20(fp)
   17148:	e17ffc17 	ldw	r5,-16(fp)
   1714c:	e13ffd17 	ldw	r4,-12(fp)
   17150:	001750c0 	call	1750c <open>
   17154:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
   17158:	e0bfff17 	ldw	r2,-4(fp)
   1715c:	10002016 	blt	r2,zero,171e0 <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
   17160:	e0ffff17 	ldw	r3,-4(fp)
   17164:	1805883a 	mov	r2,r3
   17168:	1085883a 	add	r2,r2,r2
   1716c:	10c5883a 	add	r2,r2,r3
   17170:	100490ba 	slli	r2,r2,2
   17174:	00c000b4 	movhi	r3,2
   17178:	10c7883a 	add	r3,r2,r3
   1717c:	18e3e417 	ldw	r3,-28784(r3)
   17180:	e0bffe17 	ldw	r2,-8(fp)
   17184:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   17188:	e0ffff17 	ldw	r3,-4(fp)
   1718c:	1805883a 	mov	r2,r3
   17190:	1085883a 	add	r2,r2,r2
   17194:	10c5883a 	add	r2,r2,r3
   17198:	100490ba 	slli	r2,r2,2
   1719c:	00c000b4 	movhi	r3,2
   171a0:	10c7883a 	add	r3,r2,r3
   171a4:	18e3e517 	ldw	r3,-28780(r3)
   171a8:	e0bffe17 	ldw	r2,-8(fp)
   171ac:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   171b0:	e0ffff17 	ldw	r3,-4(fp)
   171b4:	1805883a 	mov	r2,r3
   171b8:	1085883a 	add	r2,r2,r2
   171bc:	10c5883a 	add	r2,r2,r3
   171c0:	100490ba 	slli	r2,r2,2
   171c4:	00c000b4 	movhi	r3,2
   171c8:	10c7883a 	add	r3,r2,r3
   171cc:	18e3e617 	ldw	r3,-28776(r3)
   171d0:	e0bffe17 	ldw	r2,-8(fp)
   171d4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   171d8:	e13fff17 	ldw	r4,-4(fp)
   171dc:	00155dc0 	call	155dc <alt_release_fd>
  }
} 
   171e0:	0001883a 	nop
   171e4:	e037883a 	mov	sp,fp
   171e8:	dfc00117 	ldw	ra,4(sp)
   171ec:	df000017 	ldw	fp,0(sp)
   171f0:	dec00204 	addi	sp,sp,8
   171f4:	f800283a 	ret

000171f8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   171f8:	defffb04 	addi	sp,sp,-20
   171fc:	dfc00415 	stw	ra,16(sp)
   17200:	df000315 	stw	fp,12(sp)
   17204:	df000304 	addi	fp,sp,12
   17208:	e13fff15 	stw	r4,-4(fp)
   1720c:	e17ffe15 	stw	r5,-8(fp)
   17210:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   17214:	01c07fc4 	movi	r7,511
   17218:	01800044 	movi	r6,1
   1721c:	e17fff17 	ldw	r5,-4(fp)
   17220:	010000b4 	movhi	r4,2
   17224:	2123e704 	addi	r4,r4,-28772
   17228:	00171240 	call	17124 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   1722c:	01c07fc4 	movi	r7,511
   17230:	000d883a 	mov	r6,zero
   17234:	e17ffe17 	ldw	r5,-8(fp)
   17238:	010000b4 	movhi	r4,2
   1723c:	2123e404 	addi	r4,r4,-28784
   17240:	00171240 	call	17124 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   17244:	01c07fc4 	movi	r7,511
   17248:	01800044 	movi	r6,1
   1724c:	e17ffd17 	ldw	r5,-12(fp)
   17250:	010000b4 	movhi	r4,2
   17254:	2123ea04 	addi	r4,r4,-28760
   17258:	00171240 	call	17124 <alt_open_fd>
}  
   1725c:	0001883a 	nop
   17260:	e037883a 	mov	sp,fp
   17264:	dfc00117 	ldw	ra,4(sp)
   17268:	df000017 	ldw	fp,0(sp)
   1726c:	dec00204 	addi	sp,sp,8
   17270:	f800283a 	ret

00017274 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
   17274:	defff004 	addi	sp,sp,-64
   17278:	df000f15 	stw	fp,60(sp)
   1727c:	df000f04 	addi	fp,sp,60
   17280:	e13ff315 	stw	r4,-52(fp)
   17284:	e17ff215 	stw	r5,-56(fp)
   17288:	e1bff115 	stw	r6,-60(fp)
  int rc = -EINVAL;  
   1728c:	00bffa84 	movi	r2,-22
   17290:	e0bfff15 	stw	r2,-4(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   17294:	e0bff317 	ldw	r2,-52(fp)
   17298:	10800828 	cmpgeui	r2,r2,32
   1729c:	1000501e 	bne	r2,zero,173e0 <alt_irq_register+0x16c>
  NIOS2_READ_STATUS (context);
   172a0:	0005303a 	rdctl	r2,status
   172a4:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   172a8:	e0fffd17 	ldw	r3,-12(fp)
   172ac:	00bfff84 	movi	r2,-2
   172b0:	1884703a 	and	r2,r3,r2
   172b4:	1001703a 	wrctl	status,r2
  return context;
   172b8:	e0bffd17 	ldw	r2,-12(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
   172bc:	e0bffe15 	stw	r2,-8(fp)

    alt_irq[id].handler = handler;
   172c0:	e0bff317 	ldw	r2,-52(fp)
   172c4:	100890fa 	slli	r4,r2,3
   172c8:	e0fff117 	ldw	r3,-60(fp)
   172cc:	008000b4 	movhi	r2,2
   172d0:	2085883a 	add	r2,r4,r2
   172d4:	10efd315 	stw	r3,-16564(r2)
    alt_irq[id].context = context;
   172d8:	e0bff317 	ldw	r2,-52(fp)
   172dc:	100890fa 	slli	r4,r2,3
   172e0:	e0fff217 	ldw	r3,-56(fp)
   172e4:	008000b4 	movhi	r2,2
   172e8:	2085883a 	add	r2,r4,r2
   172ec:	10efd415 	stw	r3,-16560(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   172f0:	e0bff117 	ldw	r2,-60(fp)
   172f4:	10001a26 	beq	r2,zero,17360 <alt_irq_register+0xec>
   172f8:	e0bff317 	ldw	r2,-52(fp)
   172fc:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_READ_STATUS (context);
   17300:	0005303a 	rdctl	r2,status
   17304:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   17308:	e0fffb17 	ldw	r3,-20(fp)
   1730c:	00bfff84 	movi	r2,-2
   17310:	1884703a 	and	r2,r3,r2
   17314:	1001703a 	wrctl	status,r2
  return context;
   17318:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   1731c:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active |= (1 << id);
   17320:	00c00044 	movi	r3,1
   17324:	e0bffc17 	ldw	r2,-16(fp)
   17328:	1884983a 	sll	r2,r3,r2
   1732c:	1007883a 	mov	r3,r2
   17330:	d0a73a17 	ldw	r2,-25368(gp)
   17334:	1884b03a 	or	r2,r3,r2
   17338:	d0a73a15 	stw	r2,-25368(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   1733c:	d0a73a17 	ldw	r2,-25368(gp)
   17340:	100170fa 	wrctl	ienable,r2
   17344:	e0bffa17 	ldw	r2,-24(fp)
   17348:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context);
   1734c:	e0bff917 	ldw	r2,-28(fp)
   17350:	1001703a 	wrctl	status,r2
}
   17354:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
   17358:	0005883a 	mov	r2,zero
   1735c:	00001a06 	br	173c8 <alt_irq_register+0x154>
   17360:	e0bff317 	ldw	r2,-52(fp)
   17364:	e0bff815 	stw	r2,-32(fp)
  NIOS2_READ_STATUS (context);
   17368:	0005303a 	rdctl	r2,status
   1736c:	e0bff715 	stw	r2,-36(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   17370:	e0fff717 	ldw	r3,-36(fp)
   17374:	00bfff84 	movi	r2,-2
   17378:	1884703a 	and	r2,r3,r2
   1737c:	1001703a 	wrctl	status,r2
  return context;
   17380:	e0bff717 	ldw	r2,-36(fp)
  status = alt_irq_disable_all ();
   17384:	e0bff615 	stw	r2,-40(fp)
  alt_irq_active &= ~(1 << id);
   17388:	00c00044 	movi	r3,1
   1738c:	e0bff817 	ldw	r2,-32(fp)
   17390:	1884983a 	sll	r2,r3,r2
   17394:	0084303a 	nor	r2,zero,r2
   17398:	1007883a 	mov	r3,r2
   1739c:	d0a73a17 	ldw	r2,-25368(gp)
   173a0:	1884703a 	and	r2,r3,r2
   173a4:	d0a73a15 	stw	r2,-25368(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   173a8:	d0a73a17 	ldw	r2,-25368(gp)
   173ac:	100170fa 	wrctl	ienable,r2
   173b0:	e0bff617 	ldw	r2,-40(fp)
   173b4:	e0bff515 	stw	r2,-44(fp)
  NIOS2_WRITE_STATUS (context);
   173b8:	e0bff517 	ldw	r2,-44(fp)
   173bc:	1001703a 	wrctl	status,r2
}
   173c0:	0001883a 	nop
  return 0;
   173c4:	0005883a 	mov	r2,zero
   173c8:	e0bfff15 	stw	r2,-4(fp)
   173cc:	e0bffe17 	ldw	r2,-8(fp)
   173d0:	e0bff415 	stw	r2,-48(fp)
  NIOS2_WRITE_STATUS (context);
   173d4:	e0bff417 	ldw	r2,-48(fp)
   173d8:	1001703a 	wrctl	status,r2
}
   173dc:	0001883a 	nop

    alt_irq_enable_all(status);
  }
  return rc; 
   173e0:	e0bfff17 	ldw	r2,-4(fp)
}
   173e4:	e037883a 	mov	sp,fp
   173e8:	df000017 	ldw	fp,0(sp)
   173ec:	dec00104 	addi	sp,sp,4
   173f0:	f800283a 	ret

000173f4 <alt_get_errno>:
{
   173f4:	defffe04 	addi	sp,sp,-8
   173f8:	dfc00115 	stw	ra,4(sp)
   173fc:	df000015 	stw	fp,0(sp)
   17400:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   17404:	d0a00917 	ldw	r2,-32732(gp)
   17408:	10000326 	beq	r2,zero,17418 <alt_get_errno+0x24>
   1740c:	d0a00917 	ldw	r2,-32732(gp)
   17410:	103ee83a 	callr	r2
   17414:	00000106 	br	1741c <alt_get_errno+0x28>
   17418:	d0a73504 	addi	r2,gp,-25388
}
   1741c:	e037883a 	mov	sp,fp
   17420:	dfc00117 	ldw	ra,4(sp)
   17424:	df000017 	ldw	fp,0(sp)
   17428:	dec00204 	addi	sp,sp,8
   1742c:	f800283a 	ret

00017430 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   17430:	defffd04 	addi	sp,sp,-12
   17434:	df000215 	stw	fp,8(sp)
   17438:	df000204 	addi	fp,sp,8
   1743c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   17440:	e0bffe17 	ldw	r2,-8(fp)
   17444:	10800217 	ldw	r2,8(r2)
   17448:	10d00034 	orhi	r3,r2,16384
   1744c:	e0bffe17 	ldw	r2,-8(fp)
   17450:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   17454:	e03fff15 	stw	zero,-4(fp)
   17458:	00002306 	br	174e8 <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   1745c:	e0ffff17 	ldw	r3,-4(fp)
   17460:	1805883a 	mov	r2,r3
   17464:	1085883a 	add	r2,r2,r2
   17468:	10c5883a 	add	r2,r2,r3
   1746c:	100490ba 	slli	r2,r2,2
   17470:	00c000b4 	movhi	r3,2
   17474:	10c7883a 	add	r3,r2,r3
   17478:	18e3e417 	ldw	r3,-28784(r3)
   1747c:	e0bffe17 	ldw	r2,-8(fp)
   17480:	10800017 	ldw	r2,0(r2)
   17484:	1880151e 	bne	r3,r2,174dc <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   17488:	e0ffff17 	ldw	r3,-4(fp)
   1748c:	1805883a 	mov	r2,r3
   17490:	1085883a 	add	r2,r2,r2
   17494:	10c5883a 	add	r2,r2,r3
   17498:	100490ba 	slli	r2,r2,2
   1749c:	00c000b4 	movhi	r3,2
   174a0:	10c7883a 	add	r3,r2,r3
   174a4:	18a3e617 	ldw	r2,-28776(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
   174a8:	10000c0e 	bge	r2,zero,174dc <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
   174ac:	e0ffff17 	ldw	r3,-4(fp)
   174b0:	1805883a 	mov	r2,r3
   174b4:	1085883a 	add	r2,r2,r2
   174b8:	10c5883a 	add	r2,r2,r3
   174bc:	100490ba 	slli	r2,r2,2
   174c0:	00c000b4 	movhi	r3,2
   174c4:	18e3e404 	addi	r3,r3,-28784
   174c8:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   174cc:	e0fffe17 	ldw	r3,-8(fp)
   174d0:	18800226 	beq	r3,r2,174dc <alt_file_locked+0xac>
    {
      return -EACCES;
   174d4:	00bffcc4 	movi	r2,-13
   174d8:	00000806 	br	174fc <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
   174dc:	e0bfff17 	ldw	r2,-4(fp)
   174e0:	10800044 	addi	r2,r2,1
   174e4:	e0bfff15 	stw	r2,-4(fp)
   174e8:	d0a00817 	ldw	r2,-32736(gp)
   174ec:	1007883a 	mov	r3,r2
   174f0:	e0bfff17 	ldw	r2,-4(fp)
   174f4:	18bfd92e 	bgeu	r3,r2,1745c <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   174f8:	0005883a 	mov	r2,zero
}
   174fc:	e037883a 	mov	sp,fp
   17500:	df000017 	ldw	fp,0(sp)
   17504:	dec00104 	addi	sp,sp,4
   17508:	f800283a 	ret

0001750c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   1750c:	defff604 	addi	sp,sp,-40
   17510:	dfc00915 	stw	ra,36(sp)
   17514:	df000815 	stw	fp,32(sp)
   17518:	df000804 	addi	fp,sp,32
   1751c:	e13ffa15 	stw	r4,-24(fp)
   17520:	e17ff915 	stw	r5,-28(fp)
   17524:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   17528:	00bfffc4 	movi	r2,-1
   1752c:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
   17530:	00bffb44 	movi	r2,-19
   17534:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
   17538:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   1753c:	d1600604 	addi	r5,gp,-32744
   17540:	e13ffa17 	ldw	r4,-24(fp)
   17544:	00170740 	call	17074 <alt_find_dev>
   17548:	e0bfff15 	stw	r2,-4(fp)
   1754c:	e0bfff17 	ldw	r2,-4(fp)
   17550:	1000051e 	bne	r2,zero,17568 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   17554:	e13ffa17 	ldw	r4,-24(fp)
   17558:	00178600 	call	17860 <alt_find_file>
   1755c:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
   17560:	00800044 	movi	r2,1
   17564:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   17568:	e0bfff17 	ldw	r2,-4(fp)
   1756c:	10002c26 	beq	r2,zero,17620 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
   17570:	e13fff17 	ldw	r4,-4(fp)
   17574:	00179680 	call	17968 <alt_get_fd>
   17578:	e0bffe15 	stw	r2,-8(fp)
   1757c:	e0bffe17 	ldw	r2,-8(fp)
   17580:	1000030e 	bge	r2,zero,17590 <open+0x84>
    {
      status = index;
   17584:	e0bffe17 	ldw	r2,-8(fp)
   17588:	e0bffd15 	stw	r2,-12(fp)
   1758c:	00002606 	br	17628 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
   17590:	e0fffe17 	ldw	r3,-8(fp)
   17594:	1805883a 	mov	r2,r3
   17598:	1085883a 	add	r2,r2,r2
   1759c:	10c5883a 	add	r2,r2,r3
   175a0:	100490ba 	slli	r2,r2,2
   175a4:	00c000b4 	movhi	r3,2
   175a8:	18e3e404 	addi	r3,r3,-28784
   175ac:	10c5883a 	add	r2,r2,r3
   175b0:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   175b4:	e0fff917 	ldw	r3,-28(fp)
   175b8:	00900034 	movhi	r2,16384
   175bc:	10bfffc4 	addi	r2,r2,-1
   175c0:	1886703a 	and	r3,r3,r2
   175c4:	e0bffb17 	ldw	r2,-20(fp)
   175c8:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   175cc:	e0bffc17 	ldw	r2,-16(fp)
   175d0:	1000051e 	bne	r2,zero,175e8 <open+0xdc>
   175d4:	e13ffb17 	ldw	r4,-20(fp)
   175d8:	00174300 	call	17430 <alt_file_locked>
   175dc:	e0bffd15 	stw	r2,-12(fp)
   175e0:	e0bffd17 	ldw	r2,-12(fp)
   175e4:	10001016 	blt	r2,zero,17628 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   175e8:	e0bfff17 	ldw	r2,-4(fp)
   175ec:	10800317 	ldw	r2,12(r2)
   175f0:	10000826 	beq	r2,zero,17614 <open+0x108>
   175f4:	e0bfff17 	ldw	r2,-4(fp)
   175f8:	10800317 	ldw	r2,12(r2)
   175fc:	e1fff817 	ldw	r7,-32(fp)
   17600:	e1bff917 	ldw	r6,-28(fp)
   17604:	e17ffa17 	ldw	r5,-24(fp)
   17608:	e13ffb17 	ldw	r4,-20(fp)
   1760c:	103ee83a 	callr	r2
   17610:	00000106 	br	17618 <open+0x10c>
   17614:	0005883a 	mov	r2,zero
   17618:	e0bffd15 	stw	r2,-12(fp)
   1761c:	00000206 	br	17628 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
   17620:	00bffb44 	movi	r2,-19
   17624:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   17628:	e0bffd17 	ldw	r2,-12(fp)
   1762c:	1000090e 	bge	r2,zero,17654 <open+0x148>
  {
    alt_release_fd (index);  
   17630:	e13ffe17 	ldw	r4,-8(fp)
   17634:	00155dc0 	call	155dc <alt_release_fd>
    ALT_ERRNO = -status;
   17638:	00173f40 	call	173f4 <alt_get_errno>
   1763c:	1007883a 	mov	r3,r2
   17640:	e0bffd17 	ldw	r2,-12(fp)
   17644:	0085c83a 	sub	r2,zero,r2
   17648:	18800015 	stw	r2,0(r3)
    return -1;
   1764c:	00bfffc4 	movi	r2,-1
   17650:	00000106 	br	17658 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
   17654:	e0bffe17 	ldw	r2,-8(fp)
}
   17658:	e037883a 	mov	sp,fp
   1765c:	dfc00117 	ldw	ra,4(sp)
   17660:	df000017 	ldw	fp,0(sp)
   17664:	dec00204 	addi	sp,sp,8
   17668:	f800283a 	ret

0001766c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   1766c:	defffa04 	addi	sp,sp,-24
   17670:	df000515 	stw	fp,20(sp)
   17674:	df000504 	addi	fp,sp,20
   17678:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
   1767c:	0005303a 	rdctl	r2,status
   17680:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   17684:	e0fffc17 	ldw	r3,-16(fp)
   17688:	00bfff84 	movi	r2,-2
   1768c:	1884703a 	and	r2,r3,r2
   17690:	1001703a 	wrctl	status,r2
  return context;
   17694:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   17698:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
   1769c:	e0bffb17 	ldw	r2,-20(fp)
   176a0:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   176a4:	e0bffd17 	ldw	r2,-12(fp)
   176a8:	10800017 	ldw	r2,0(r2)
   176ac:	e0fffd17 	ldw	r3,-12(fp)
   176b0:	18c00117 	ldw	r3,4(r3)
   176b4:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   176b8:	e0bffd17 	ldw	r2,-12(fp)
   176bc:	10800117 	ldw	r2,4(r2)
   176c0:	e0fffd17 	ldw	r3,-12(fp)
   176c4:	18c00017 	ldw	r3,0(r3)
   176c8:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   176cc:	e0bffd17 	ldw	r2,-12(fp)
   176d0:	e0fffd17 	ldw	r3,-12(fp)
   176d4:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   176d8:	e0bffd17 	ldw	r2,-12(fp)
   176dc:	e0fffd17 	ldw	r3,-12(fp)
   176e0:	10c00015 	stw	r3,0(r2)
} 
   176e4:	0001883a 	nop
   176e8:	e0bfff17 	ldw	r2,-4(fp)
   176ec:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   176f0:	e0bffe17 	ldw	r2,-8(fp)
   176f4:	1001703a 	wrctl	status,r2
}
   176f8:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
   176fc:	0001883a 	nop
   17700:	e037883a 	mov	sp,fp
   17704:	df000017 	ldw	fp,0(sp)
   17708:	dec00104 	addi	sp,sp,4
   1770c:	f800283a 	ret

00017710 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   17710:	defff904 	addi	sp,sp,-28
   17714:	dfc00615 	stw	ra,24(sp)
   17718:	df000515 	stw	fp,20(sp)
   1771c:	dc400415 	stw	r17,16(sp)
   17720:	dc000315 	stw	r16,12(sp)
   17724:	df000504 	addi	fp,sp,20
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   17728:	d0a00c17 	ldw	r2,-32720(gp)
   1772c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   17730:	d1273c17 	ldw	r4,-25360(gp)
   17734:	d1673d17 	ldw	r5,-25356(gp)
   17738:	01800044 	movi	r6,1
   1773c:	000f883a 	mov	r7,zero
   17740:	2185883a 	add	r2,r4,r6
   17744:	1111803a 	cmpltu	r8,r2,r4
   17748:	29c7883a 	add	r3,r5,r7
   1774c:	40c9883a 	add	r4,r8,r3
   17750:	2007883a 	mov	r3,r4
   17754:	1009883a 	mov	r4,r2
   17758:	180b883a 	mov	r5,r3
   1775c:	d1273c15 	stw	r4,-25360(gp)
   17760:	d1673d15 	stw	r5,-25356(gp)
 
  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   17764:	00002906 	br	1780c <alt_tick+0xfc>
  {
    next = (alt_alarm*) alarm->llist.next;
   17768:	e0bffd17 	ldw	r2,-12(fp)
   1776c:	10800017 	ldw	r2,0(r2)
   17770:	e0bffc15 	stw	r2,-16(fp)
    
    /* if the alarm period has expired, make the callback */    
    if (alarm->time <= _alt_nticks)
   17774:	e13ffd17 	ldw	r4,-12(fp)
   17778:	20800217 	ldw	r2,8(r4)
   1777c:	20c00317 	ldw	r3,12(r4)
   17780:	d1273c17 	ldw	r4,-25360(gp)
   17784:	d1673d17 	ldw	r5,-25356(gp)
   17788:	28c01e36 	bltu	r5,r3,17804 <alt_tick+0xf4>
   1778c:	1940011e 	bne	r3,r5,17794 <alt_tick+0x84>
   17790:	20801c36 	bltu	r4,r2,17804 <alt_tick+0xf4>
    {
      next_callback = alarm->callback (alarm->context);
   17794:	e0bffd17 	ldw	r2,-12(fp)
   17798:	10800417 	ldw	r2,16(r2)
   1779c:	e0fffd17 	ldw	r3,-12(fp)
   177a0:	18c00517 	ldw	r3,20(r3)
   177a4:	1809883a 	mov	r4,r3
   177a8:	103ee83a 	callr	r2
   177ac:	e0bffb15 	stw	r2,-20(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   177b0:	e0bffb17 	ldw	r2,-20(fp)
   177b4:	1000031e 	bne	r2,zero,177c4 <alt_tick+0xb4>
      {
        alt_alarm_stop (alarm);
   177b8:	e13ffd17 	ldw	r4,-12(fp)
   177bc:	001766c0 	call	1766c <alt_alarm_stop>
   177c0:	00001006 	br	17804 <alt_tick+0xf4>
      }
      else
      {
        alarm->time += next_callback;
   177c4:	e0bffd17 	ldw	r2,-12(fp)
   177c8:	11000217 	ldw	r4,8(r2)
   177cc:	11400317 	ldw	r5,12(r2)
   177d0:	e0bffb17 	ldw	r2,-20(fp)
   177d4:	1021883a 	mov	r16,r2
   177d8:	0023883a 	mov	r17,zero
   177dc:	2405883a 	add	r2,r4,r16
   177e0:	110d803a 	cmpltu	r6,r2,r4
   177e4:	2c47883a 	add	r3,r5,r17
   177e8:	30c9883a 	add	r4,r6,r3
   177ec:	2007883a 	mov	r3,r4
   177f0:	1009883a 	mov	r4,r2
   177f4:	180b883a 	mov	r5,r3
   177f8:	e0bffd17 	ldw	r2,-12(fp)
   177fc:	11000215 	stw	r4,8(r2)
   17800:	11400315 	stw	r5,12(r2)
      }
    }
    alarm = next;
   17804:	e0bffc17 	ldw	r2,-16(fp)
   17808:	e0bffd15 	stw	r2,-12(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
   1780c:	e0fffd17 	ldw	r3,-12(fp)
   17810:	d0a00c04 	addi	r2,gp,-32720
   17814:	18bfd41e 	bne	r3,r2,17768 <alt_tick+0x58>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   17818:	0001883a 	nop
}
   1781c:	0001883a 	nop
   17820:	e6fffe04 	addi	sp,fp,-8
   17824:	dfc00317 	ldw	ra,12(sp)
   17828:	df000217 	ldw	fp,8(sp)
   1782c:	dc400117 	ldw	r17,4(sp)
   17830:	dc000017 	ldw	r16,0(sp)
   17834:	dec00404 	addi	sp,sp,16
   17838:	f800283a 	ret

0001783c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   1783c:	deffff04 	addi	sp,sp,-4
   17840:	df000015 	stw	fp,0(sp)
   17844:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   17848:	000170fa 	wrctl	ienable,zero
}
   1784c:	0001883a 	nop
   17850:	e037883a 	mov	sp,fp
   17854:	df000017 	ldw	fp,0(sp)
   17858:	dec00104 	addi	sp,sp,4
   1785c:	f800283a 	ret

00017860 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   17860:	defffb04 	addi	sp,sp,-20
   17864:	dfc00415 	stw	ra,16(sp)
   17868:	df000315 	stw	fp,12(sp)
   1786c:	df000304 	addi	fp,sp,12
   17870:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   17874:	d0a00417 	ldw	r2,-32752(gp)
   17878:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   1787c:	00003106 	br	17944 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   17880:	e0bfff17 	ldw	r2,-4(fp)
   17884:	10800217 	ldw	r2,8(r2)
   17888:	1009883a 	mov	r4,r2
   1788c:	000af740 	call	af74 <strlen>
   17890:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   17894:	e0bfff17 	ldw	r2,-4(fp)
   17898:	10c00217 	ldw	r3,8(r2)
   1789c:	e0bffe17 	ldw	r2,-8(fp)
   178a0:	10bfffc4 	addi	r2,r2,-1
   178a4:	1885883a 	add	r2,r3,r2
   178a8:	10800003 	ldbu	r2,0(r2)
   178ac:	10803fcc 	andi	r2,r2,255
   178b0:	1080201c 	xori	r2,r2,128
   178b4:	10bfe004 	addi	r2,r2,-128
   178b8:	10800bd8 	cmpnei	r2,r2,47
   178bc:	1000031e 	bne	r2,zero,178cc <alt_find_file+0x6c>
    {
      len -= 1;
   178c0:	e0bffe17 	ldw	r2,-8(fp)
   178c4:	10bfffc4 	addi	r2,r2,-1
   178c8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   178cc:	e0bffe17 	ldw	r2,-8(fp)
   178d0:	e0fffd17 	ldw	r3,-12(fp)
   178d4:	1885883a 	add	r2,r3,r2
   178d8:	10800003 	ldbu	r2,0(r2)
   178dc:	10803fcc 	andi	r2,r2,255
   178e0:	1080201c 	xori	r2,r2,128
   178e4:	10bfe004 	addi	r2,r2,-128
   178e8:	10800be0 	cmpeqi	r2,r2,47
   178ec:	1000081e 	bne	r2,zero,17910 <alt_find_file+0xb0>
   178f0:	e0bffe17 	ldw	r2,-8(fp)
   178f4:	e0fffd17 	ldw	r3,-12(fp)
   178f8:	1885883a 	add	r2,r3,r2
   178fc:	10800003 	ldbu	r2,0(r2)
   17900:	10803fcc 	andi	r2,r2,255
   17904:	1080201c 	xori	r2,r2,128
   17908:	10bfe004 	addi	r2,r2,-128
   1790c:	10000a1e 	bne	r2,zero,17938 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   17910:	e0bfff17 	ldw	r2,-4(fp)
   17914:	10800217 	ldw	r2,8(r2)
   17918:	e0fffe17 	ldw	r3,-8(fp)
   1791c:	180d883a 	mov	r6,r3
   17920:	e17ffd17 	ldw	r5,-12(fp)
   17924:	1009883a 	mov	r4,r2
   17928:	0017b000 	call	17b00 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
   1792c:	1000021e 	bne	r2,zero,17938 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
   17930:	e0bfff17 	ldw	r2,-4(fp)
   17934:	00000706 	br	17954 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   17938:	e0bfff17 	ldw	r2,-4(fp)
   1793c:	10800017 	ldw	r2,0(r2)
   17940:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
   17944:	e0ffff17 	ldw	r3,-4(fp)
   17948:	d0a00404 	addi	r2,gp,-32752
   1794c:	18bfcc1e 	bne	r3,r2,17880 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
   17950:	0005883a 	mov	r2,zero
}
   17954:	e037883a 	mov	sp,fp
   17958:	dfc00117 	ldw	ra,4(sp)
   1795c:	df000017 	ldw	fp,0(sp)
   17960:	dec00204 	addi	sp,sp,8
   17964:	f800283a 	ret

00017968 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   17968:	defffc04 	addi	sp,sp,-16
   1796c:	df000315 	stw	fp,12(sp)
   17970:	df000304 	addi	fp,sp,12
   17974:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
   17978:	00bffa04 	movi	r2,-24
   1797c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   17980:	e03fff15 	stw	zero,-4(fp)
   17984:	00001d06 	br	179fc <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
   17988:	e0ffff17 	ldw	r3,-4(fp)
   1798c:	1805883a 	mov	r2,r3
   17990:	1085883a 	add	r2,r2,r2
   17994:	10c5883a 	add	r2,r2,r3
   17998:	100490ba 	slli	r2,r2,2
   1799c:	00c000b4 	movhi	r3,2
   179a0:	10c7883a 	add	r3,r2,r3
   179a4:	18a3e417 	ldw	r2,-28784(r3)
   179a8:	1000111e 	bne	r2,zero,179f0 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
   179ac:	e0ffff17 	ldw	r3,-4(fp)
   179b0:	1805883a 	mov	r2,r3
   179b4:	1085883a 	add	r2,r2,r2
   179b8:	10c5883a 	add	r2,r2,r3
   179bc:	100490ba 	slli	r2,r2,2
   179c0:	e13ffd17 	ldw	r4,-12(fp)
   179c4:	00c000b4 	movhi	r3,2
   179c8:	10c7883a 	add	r3,r2,r3
   179cc:	1923e415 	stw	r4,-28784(r3)
      if (i > alt_max_fd)
   179d0:	d0e00817 	ldw	r3,-32736(gp)
   179d4:	e0bfff17 	ldw	r2,-4(fp)
   179d8:	1880020e 	bge	r3,r2,179e4 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
   179dc:	e0bfff17 	ldw	r2,-4(fp)
   179e0:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
   179e4:	e0bfff17 	ldw	r2,-4(fp)
   179e8:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   179ec:	00000706 	br	17a0c <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
   179f0:	e0bfff17 	ldw	r2,-4(fp)
   179f4:	10800044 	addi	r2,r2,1
   179f8:	e0bfff15 	stw	r2,-4(fp)
   179fc:	e0bfff17 	ldw	r2,-4(fp)
   17a00:	10800810 	cmplti	r2,r2,32
   17a04:	103fe01e 	bne	r2,zero,17988 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
   17a08:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   17a0c:	e0bffe17 	ldw	r2,-8(fp)
}
   17a10:	e037883a 	mov	sp,fp
   17a14:	df000017 	ldw	fp,0(sp)
   17a18:	dec00104 	addi	sp,sp,4
   17a1c:	f800283a 	ret

00017a20 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   17a20:	defffe04 	addi	sp,sp,-8
   17a24:	df000115 	stw	fp,4(sp)
   17a28:	df000104 	addi	fp,sp,4
   17a2c:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   17a30:	e0bfff17 	ldw	r2,-4(fp)
   17a34:	10bffe84 	addi	r2,r2,-6
   17a38:	10c00428 	cmpgeui	r3,r2,16
   17a3c:	1800191e 	bne	r3,zero,17aa4 <alt_exception_cause_generated_bad_addr+0x84>
   17a40:	100690ba 	slli	r3,r2,2
   17a44:	00800074 	movhi	r2,1
   17a48:	1885883a 	add	r2,r3,r2
   17a4c:	109e9517 	ldw	r2,31316(r2)
   17a50:	1000683a 	jmp	r2
   17a54:	00017a94 	movui	zero,1514
   17a58:	00017a94 	movui	zero,1514
   17a5c:	00017aa4 	muli	zero,zero,1514
   17a60:	00017aa4 	muli	zero,zero,1514
   17a64:	00017aa4 	muli	zero,zero,1514
   17a68:	00017a94 	movui	zero,1514
   17a6c:	00017a9c 	xori	zero,zero,1514
   17a70:	00017aa4 	muli	zero,zero,1514
   17a74:	00017a94 	movui	zero,1514
   17a78:	00017a94 	movui	zero,1514
   17a7c:	00017aa4 	muli	zero,zero,1514
   17a80:	00017a94 	movui	zero,1514
   17a84:	00017a9c 	xori	zero,zero,1514
   17a88:	00017aa4 	muli	zero,zero,1514
   17a8c:	00017aa4 	muli	zero,zero,1514
   17a90:	00017a94 	movui	zero,1514
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   17a94:	00800044 	movi	r2,1
   17a98:	00000306 	br	17aa8 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   17a9c:	0005883a 	mov	r2,zero
   17aa0:	00000106 	br	17aa8 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
   17aa4:	0005883a 	mov	r2,zero
  }
}
   17aa8:	e037883a 	mov	sp,fp
   17aac:	df000017 	ldw	fp,0(sp)
   17ab0:	dec00104 	addi	sp,sp,4
   17ab4:	f800283a 	ret

00017ab8 <atexit>:
   17ab8:	200b883a 	mov	r5,r4
   17abc:	000f883a 	mov	r7,zero
   17ac0:	000d883a 	mov	r6,zero
   17ac4:	0009883a 	mov	r4,zero
   17ac8:	0017b781 	jmpi	17b78 <__register_exitproc>

00017acc <exit>:
   17acc:	defffe04 	addi	sp,sp,-8
   17ad0:	000b883a 	mov	r5,zero
   17ad4:	dc000015 	stw	r16,0(sp)
   17ad8:	dfc00115 	stw	ra,4(sp)
   17adc:	2021883a 	mov	r16,r4
   17ae0:	0017c080 	call	17c08 <__call_exitprocs>
   17ae4:	008000b4 	movhi	r2,2
   17ae8:	11288a17 	ldw	r4,-24024(r2)
   17aec:	20800f17 	ldw	r2,60(r4)
   17af0:	10000126 	beq	r2,zero,17af8 <exit+0x2c>
   17af4:	103ee83a 	callr	r2
   17af8:	8009883a 	mov	r4,r16
   17afc:	0014e280 	call	14e28 <_exit>

00017b00 <memcmp>:
   17b00:	30800130 	cmpltui	r2,r6,4
   17b04:	10000b1e 	bne	r2,zero,17b34 <memcmp+0x34>
   17b08:	2144b03a 	or	r2,r4,r5
   17b0c:	108000cc 	andi	r2,r2,3
   17b10:	1000171e 	bne	r2,zero,17b70 <memcmp+0x70>
   17b14:	20c00017 	ldw	r3,0(r4)
   17b18:	28800017 	ldw	r2,0(r5)
   17b1c:	1880141e 	bne	r3,r2,17b70 <memcmp+0x70>
   17b20:	31bfff04 	addi	r6,r6,-4
   17b24:	30800128 	cmpgeui	r2,r6,4
   17b28:	21000104 	addi	r4,r4,4
   17b2c:	29400104 	addi	r5,r5,4
   17b30:	103ff81e 	bne	r2,zero,17b14 <memcmp+0x14>
   17b34:	30bfffc4 	addi	r2,r6,-1
   17b38:	30000b26 	beq	r6,zero,17b68 <memcmp+0x68>
   17b3c:	11800044 	addi	r6,r2,1
   17b40:	218d883a 	add	r6,r4,r6
   17b44:	00000106 	br	17b4c <memcmp+0x4c>
   17b48:	21800726 	beq	r4,r6,17b68 <memcmp+0x68>
   17b4c:	20800003 	ldbu	r2,0(r4)
   17b50:	28c00003 	ldbu	r3,0(r5)
   17b54:	21000044 	addi	r4,r4,1
   17b58:	29400044 	addi	r5,r5,1
   17b5c:	10fffa26 	beq	r2,r3,17b48 <memcmp+0x48>
   17b60:	10c5c83a 	sub	r2,r2,r3
   17b64:	f800283a 	ret
   17b68:	0005883a 	mov	r2,zero
   17b6c:	f800283a 	ret
   17b70:	30bfffc4 	addi	r2,r6,-1
   17b74:	003ff106 	br	17b3c <memcmp+0x3c>

00017b78 <__register_exitproc>:
   17b78:	008000b4 	movhi	r2,2
   17b7c:	10e88a17 	ldw	r3,-24024(r2)
   17b80:	18805217 	ldw	r2,328(r3)
   17b84:	10001726 	beq	r2,zero,17be4 <__register_exitproc+0x6c>
   17b88:	10c00117 	ldw	r3,4(r2)
   17b8c:	1a000808 	cmpgei	r8,r3,32
   17b90:	40001b1e 	bne	r8,zero,17c00 <__register_exitproc+0x88>
   17b94:	20000b26 	beq	r4,zero,17bc4 <__register_exitproc+0x4c>
   17b98:	181090ba 	slli	r8,r3,2
   17b9c:	02400044 	movi	r9,1
   17ba0:	48d2983a 	sll	r9,r9,r3
   17ba4:	1211883a 	add	r8,r2,r8
   17ba8:	41802215 	stw	r6,136(r8)
   17bac:	11806217 	ldw	r6,392(r2)
   17bb0:	21000098 	cmpnei	r4,r4,2
   17bb4:	324cb03a 	or	r6,r6,r9
   17bb8:	11806215 	stw	r6,392(r2)
   17bbc:	41c04215 	stw	r7,264(r8)
   17bc0:	20000b26 	beq	r4,zero,17bf0 <__register_exitproc+0x78>
   17bc4:	19000084 	addi	r4,r3,2
   17bc8:	200890ba 	slli	r4,r4,2
   17bcc:	18c00044 	addi	r3,r3,1
   17bd0:	10c00115 	stw	r3,4(r2)
   17bd4:	1105883a 	add	r2,r2,r4
   17bd8:	11400015 	stw	r5,0(r2)
   17bdc:	0005883a 	mov	r2,zero
   17be0:	f800283a 	ret
   17be4:	18805304 	addi	r2,r3,332
   17be8:	18805215 	stw	r2,328(r3)
   17bec:	003fe606 	br	17b88 <__register_exitproc+0x10>
   17bf0:	11006317 	ldw	r4,396(r2)
   17bf4:	2252b03a 	or	r9,r4,r9
   17bf8:	12406315 	stw	r9,396(r2)
   17bfc:	003ff106 	br	17bc4 <__register_exitproc+0x4c>
   17c00:	00bfffc4 	movi	r2,-1
   17c04:	f800283a 	ret

00017c08 <__call_exitprocs>:
   17c08:	defff704 	addi	sp,sp,-36
   17c0c:	008000b4 	movhi	r2,2
   17c10:	dcc00315 	stw	r19,12(sp)
   17c14:	14e88a17 	ldw	r19,-24024(r2)
   17c18:	dc800215 	stw	r18,8(sp)
   17c1c:	dfc00815 	stw	ra,32(sp)
   17c20:	9c805217 	ldw	r18,328(r19)
   17c24:	ddc00715 	stw	r23,28(sp)
   17c28:	dd800615 	stw	r22,24(sp)
   17c2c:	dd400515 	stw	r21,20(sp)
   17c30:	dd000415 	stw	r20,16(sp)
   17c34:	dc400115 	stw	r17,4(sp)
   17c38:	dc000015 	stw	r16,0(sp)
   17c3c:	90001026 	beq	r18,zero,17c80 <__call_exitprocs+0x78>
   17c40:	202b883a 	mov	r21,r4
   17c44:	282d883a 	mov	r22,r5
   17c48:	05000044 	movi	r20,1
   17c4c:	94000117 	ldw	r16,4(r18)
   17c50:	847fffc4 	addi	r17,r16,-1
   17c54:	88000a16 	blt	r17,zero,17c80 <__call_exitprocs+0x78>
   17c58:	84000044 	addi	r16,r16,1
   17c5c:	802090ba 	slli	r16,r16,2
   17c60:	9421883a 	add	r16,r18,r16
   17c64:	b0001126 	beq	r22,zero,17cac <__call_exitprocs+0xa4>
   17c68:	80804017 	ldw	r2,256(r16)
   17c6c:	15800f26 	beq	r2,r22,17cac <__call_exitprocs+0xa4>
   17c70:	8c7fffc4 	addi	r17,r17,-1
   17c74:	88bfffd8 	cmpnei	r2,r17,-1
   17c78:	843fff04 	addi	r16,r16,-4
   17c7c:	103ff91e 	bne	r2,zero,17c64 <__call_exitprocs+0x5c>
   17c80:	dfc00817 	ldw	ra,32(sp)
   17c84:	ddc00717 	ldw	r23,28(sp)
   17c88:	dd800617 	ldw	r22,24(sp)
   17c8c:	dd400517 	ldw	r21,20(sp)
   17c90:	dd000417 	ldw	r20,16(sp)
   17c94:	dcc00317 	ldw	r19,12(sp)
   17c98:	dc800217 	ldw	r18,8(sp)
   17c9c:	dc400117 	ldw	r17,4(sp)
   17ca0:	dc000017 	ldw	r16,0(sp)
   17ca4:	dec00904 	addi	sp,sp,36
   17ca8:	f800283a 	ret
   17cac:	90800117 	ldw	r2,4(r18)
   17cb0:	81800017 	ldw	r6,0(r16)
   17cb4:	10bfffc4 	addi	r2,r2,-1
   17cb8:	14401726 	beq	r2,r17,17d18 <__call_exitprocs+0x110>
   17cbc:	80000015 	stw	zero,0(r16)
   17cc0:	303feb26 	beq	r6,zero,17c70 <__call_exitprocs+0x68>
   17cc4:	a446983a 	sll	r3,r20,r17
   17cc8:	90806217 	ldw	r2,392(r18)
   17ccc:	95c00117 	ldw	r23,4(r18)
   17cd0:	1884703a 	and	r2,r3,r2
   17cd4:	1000081e 	bne	r2,zero,17cf8 <__call_exitprocs+0xf0>
   17cd8:	303ee83a 	callr	r6
   17cdc:	90c00117 	ldw	r3,4(r18)
   17ce0:	98805217 	ldw	r2,328(r19)
   17ce4:	1dc0011e 	bne	r3,r23,17cec <__call_exitprocs+0xe4>
   17ce8:	90bfe126 	beq	r18,r2,17c70 <__call_exitprocs+0x68>
   17cec:	103fe426 	beq	r2,zero,17c80 <__call_exitprocs+0x78>
   17cf0:	1025883a 	mov	r18,r2
   17cf4:	003fd506 	br	17c4c <__call_exitprocs+0x44>
   17cf8:	90806317 	ldw	r2,396(r18)
   17cfc:	81002017 	ldw	r4,128(r16)
   17d00:	1886703a 	and	r3,r3,r2
   17d04:	1800061e 	bne	r3,zero,17d20 <__call_exitprocs+0x118>
   17d08:	200b883a 	mov	r5,r4
   17d0c:	a809883a 	mov	r4,r21
   17d10:	303ee83a 	callr	r6
   17d14:	003ff106 	br	17cdc <__call_exitprocs+0xd4>
   17d18:	94400115 	stw	r17,4(r18)
   17d1c:	003fe806 	br	17cc0 <__call_exitprocs+0xb8>
   17d20:	303ee83a 	callr	r6
   17d24:	003fed06 	br	17cdc <__call_exitprocs+0xd4>
